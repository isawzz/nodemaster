var:
  badges:
    name: badges
    code: "var badges = [];\r\n"
    sig: var badges
    region: badges (badges.js)
    filename: badges.js
    type: var
    fname: badges.js
    path: C:\xampp\htdocs\aroot\belinda\js\badges.js
    datetime: 2021-11-15-06-49
    timestamp: 1636987744437.6084
    size: 4157
  Markers:
    name: Markers
    code: "var Markers = [];\r\n"
    sig: var Markers
    region: Markers (markers.js)
    filename: markers.js
    type: var
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  audioSources:
    name: audioSources
    code: "var _audioSources = {\r

      \  incorrect1: '../base/assets/sounds/incorrect1.wav',\r

      \  incorrect3: '../base/assets/sounds/incorrect3.mp3',\r

      \  goodBye: \"../base/assets/sounds/level1.wav\",\r

      \  down: \"../base/assets/sounds/down.mp3\",\r

      \  levelComplete: \"../base/assets/sounds/sound1.wav\",\r

      \  rubberBand: \"../base/assets/sounds/sound2.wav\",\r

      \  hit: \"../base/assets/sounds/hit.wav\",\r

      \  mozart: \"../base/assets/music/mozart_s39_4.mp3\",\r

      };\r\n"
    sig: var audioSources
    region: audio (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  TOSound:
    name: TOSound
    code: "var _TOSound, _sndPlayer, _loaded = false, _qSound, _idleSound = true,
      _sndCounter = 0;\r\n"
    sig: var TOSound
    region: audio (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  AUDIOCONTEXT:
    name: AUDIOCONTEXT
    code: "var _AUDIOCONTEXT;\r\n"
    sig: var AUDIOCONTEXT
    region: audio (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  brd:
    name: brd
    code: "var brd_searchKillers = new Array(3 * MAXDEPTH);\r\n"
    sig: var brd
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  fen:
    name: fen
    code: "var fen = \"345623\";\r\n"
    sig: var fen
    region: var (board.js)
    filename: board.js
    type: var
    fname: board.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\board.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867085.633
    size: 19415
  fenCnt:
    name: fenCnt
    code: "var fenCnt=3;\r\n"
    sig: var fenCnt
    region: var (board.js)
    filename: board.js
    type: var
    fname: board.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\board.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867085.633
    size: 19415
  count:
    name: count
    code: "var count = fen[fenCnt].charCodeAt() - '0'.charCodeAt(); \r\n"
    sig: var count
    region: var (board.js)
    filename: board.js
    type: var
    fname: board.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\board.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867085.633
    size: 19415
  PIECES:
    name: PIECES
    code: "var PIECES = { EMPTY: 0, wP: 1, wN: 2, wB: 3, wR: 4, wQ: 5, wK: 6, bP: 7,
      bN: 8, bB: 9, bR: 10, bQ: 11, bK: 12 };\r\n"
    sig: var PIECES
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  BRD:
    name: BRD
    code: "var BRD_SQ_NUM = 120;\r\n"
    sig: var BRD
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MAXGAMEMOVES:
    name: MAXGAMEMOVES
    code: "var MAXGAMEMOVES = 2048;\r\n"
    sig: var MAXGAMEMOVES
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MAXPOSITIONMOVES:
    name: MAXPOSITIONMOVES
    code: "var MAXPOSITIONMOVES = 256;\r\n"
    sig: var MAXPOSITIONMOVES
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MAXDEPTH:
    name: MAXDEPTH
    code: "var MAXDEPTH = 64;\r\n"
    sig: var MAXDEPTH
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  INFINITE:
    name: INFINITE
    code: "var INFINITE = 30000;\r\n"
    sig: var INFINITE
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MATE:
    name: MATE
    code: "var MATE = 29000;\r\n"
    sig: var MATE
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  START:
    name: START
    code: "var START_FEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0
      1\";\r\n"
    sig: var START
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  COLUMNS:
    name: COLUMNS
    code: "var COLUMNS =  { COL_A:0, COL_B:1, COL_C:2, COL_D:3, COL_E:4, COL_F:5,
      COL_G:6, COL_H:7, COL_NONE:8 };\r\n"
    sig: var COLUMNS
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  ROWS:
    name: ROWS
    code: "var ROWS =  { ROW_1:0, ROW_2:1, ROW_3:2, ROW_4:3, ROW_5:4, ROW_6:5,
      ROW_7:6, ROW_8:7, ROW_NONE:8 };\r\n"
    sig: var ROWS
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  COLOURS:
    name: COLOURS
    code: "var COLOURS = { WHITE: 0, BLACK: 1, BOTH: 2 };\r\n"
    sig: var COLOURS
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SQUARES:
    name: SQUARES
    code: "var SQUARES = {\r

      \  A1: 21, B1: 22, C1: 23, D1: 24, E1: 25, F1: 26, G1: 27, H1: 28,\r

      \  A8: 91, B8: 92, C8: 93, D8: 94, E8: 95, F8: 96, G8: 97, H8: 98,
      NO_SQ: 99, OFFBOARD: 100\r

      };\r\n"
    sig: var SQUARES
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  BOOL:
    name: BOOL
    code: "var BOOL = { FALSE: 0, TRUE: 1 };\r\n"
    sig: var BOOL
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  CASTLEBIT:
    name: CASTLEBIT
    code: "var CASTLEBIT = { WKCA: 1, WQCA: 2, BKCA: 4, BQCA: 8 };\r\n"
    sig: var CASTLEBIT
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ColBrd:
    name: ColBrd
    code: "var ColBrd = new Array(BRD_SQ_NUM);\r\n"
    sig: var ColBrd
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  RowBrd:
    name: RowBrd
    code: "var RowBrd = new Array(BRD_SQ_NUM);\r\n"
    sig: var RowBrd
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  Sq120ToSq64:
    name: Sq120ToSq64
    code: "var Sq120ToSq64 = new Array(BRD_SQ_NUM);\r\n"
    sig: var Sq120ToSq64
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  Sq64ToSq120:
    name: Sq64ToSq120
    code: "var Sq64ToSq120 = new Array(64);\r\n"
    sig: var Sq64ToSq120
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PceChar:
    name: PceChar
    code: "var PceChar = \".PNBRQKpnbrqk\";\r\n"
    sig: var PceChar
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SideChar:
    name: SideChar
    code: "var SideChar = \"wb-\";\r\n"
    sig: var SideChar
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RowChar:
    name: RowChar
    code: "var RowChar = \"12345678\";\r\n"
    sig: var RowChar
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  ColChar:
    name: ColChar
    code: "var ColChar = \"abcdefgh\";\r\n"
    sig: var ColChar
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  PieceBig:
    name: PieceBig
    code: "var PieceBig = [BOOL.FALSE, BOOL.FALSE, BOOL.TRUE, BOOL.TRUE, BOOL.TRUE,
      BOOL.TRUE, BOOL.TRUE, BOOL.FALSE, BOOL.TRUE, BOOL.TRUE, BOOL.TRUE,
      BOOL.TRUE, BOOL.TRUE];\r\n"
    sig: var PieceBig
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceMaj:
    name: PieceMaj
    code: "var PieceMaj = [BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE,
      BOOL.TRUE, BOOL.TRUE, BOOL.TRUE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE,
      BOOL.TRUE, BOOL.TRUE, BOOL.TRUE];\r\n"
    sig: var PieceMaj
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceMin:
    name: PieceMin
    code: "var PieceMin = [BOOL.FALSE, BOOL.FALSE, BOOL.TRUE, BOOL.TRUE, BOOL.FALSE,
      BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.TRUE, BOOL.TRUE, BOOL.FALSE,
      BOOL.FALSE, BOOL.FALSE];\r\n"
    sig: var PieceMin
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceVal:
    name: PieceVal
    code: "var PieceVal = [0, 100, 325, 325, 550, 1000, 50000, 100, 325, 325, 550,
      1000, 50000];\r\n"
    sig: var PieceVal
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceCol:
    name: PieceCol
    code: "var PieceCol = [COLOURS.BOTH, COLOURS.WHITE, COLOURS.WHITE,
      COLOURS.WHITE, COLOURS.WHITE, COLOURS.WHITE, COLOURS.WHITE,COLOURS.BLACK,
      COLOURS.BLACK, COLOURS.BLACK, COLOURS.BLACK, COLOURS.BLACK,
      COLOURS.BLACK];\r\n"
    sig: var PieceCol
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PiecePawn:
    name: PiecePawn
    code: "var PiecePawn = [BOOL.FALSE, BOOL.TRUE, BOOL.FALSE, BOOL.FALSE,
      BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.TRUE, BOOL.FALSE, BOOL.FALSE,
      BOOL.FALSE, BOOL.FALSE, BOOL.FALSE];\r\n"
    sig: var PiecePawn
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceKnight:
    name: PieceKnight
    code: "var PieceKnight = [BOOL.FALSE, BOOL.FALSE, BOOL.TRUE, BOOL.FALSE,
      BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.TRUE, BOOL.FALSE,
      BOOL.FALSE, BOOL.FALSE, BOOL.FALSE];\r\n"
    sig: var PieceKnight
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceKing:
    name: PieceKing
    code: "var PieceKing = [BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE,
      BOOL.FALSE, BOOL.FALSE, BOOL.TRUE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE,
      BOOL.FALSE, BOOL.FALSE, BOOL.TRUE];\r\n"
    sig: var PieceKing
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceRookQueen:
    name: PieceRookQueen
    code: "var PieceRookQueen = [BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE,
      BOOL.TRUE, BOOL.TRUE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE,
      BOOL.TRUE, BOOL.TRUE, BOOL.FALSE];\r\n"
    sig: var PieceRookQueen
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceBishopQueen:
    name: PieceBishopQueen
    code: "var PieceBishopQueen = [BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.TRUE,
      BOOL.FALSE, BOOL.TRUE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.TRUE,
      BOOL.FALSE, BOOL.TRUE, BOOL.FALSE];\r\n"
    sig: var PieceBishopQueen
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceSlides:
    name: PieceSlides
    code: "var PieceSlides = [BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.TRUE,
      BOOL.TRUE, BOOL.TRUE, BOOL.FALSE, BOOL.FALSE, BOOL.FALSE, BOOL.TRUE,
      BOOL.TRUE, BOOL.TRUE, BOOL.FALSE];\r\n"
    sig: var PieceSlides
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  KnDir:
    name: KnDir
    code: "var KnDir = [-8, -19, -21, -12, 8, 19, 21, 12];\r\n"
    sig: var KnDir
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RkDir:
    name: RkDir
    code: "var RkDir = [-1, -10, 1, 10];\r\n"
    sig: var RkDir
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  BiDir:
    name: BiDir
    code: "var BiDir = [-9, -11, 11, 9];\r\n"
    sig: var BiDir
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  KiDir:
    name: KiDir
    code: "var KiDir = [-1, -10, 1, 10, -9, -11, 11, 9];\r\n"
    sig: var KiDir
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  DirNum:
    name: DirNum
    code: "var DirNum = [0, 0, 8, 4, 4, 8, 8, 0, 8, 4, 4, 8, 8];\r\n"
    sig: var DirNum
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PceDir:
    name: PceDir
    code: "var PceDir = [0, 0, KnDir, BiDir, RkDir, KiDir, KiDir, 0, KnDir, BiDir,
      RkDir, KiDir, KiDir];\r\n"
    sig: var PceDir
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  LoopSlidePce:
    name: LoopSlidePce
    code: "var LoopSlidePce = [PIECES.wB, PIECES.wR, PIECES.wQ, 0, PIECES.bB,
      PIECES.bR, PIECES.bQ, 0];\r\n"
    sig: var LoopSlidePce
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  LoopNonSlidePce:
    name: LoopNonSlidePce
    code: "var LoopNonSlidePce = [PIECES.wN, PIECES.wK, 0, PIECES.bN, PIECES.bK,
      0];\r\n"
    sig: var LoopNonSlidePce
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  LoopSlideIndex:
    name: LoopSlideIndex
    code: "var LoopSlideIndex = [0, 4];\r\n"
    sig: var LoopSlideIndex
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  LoopNonSlideIndex:
    name: LoopNonSlideIndex
    code: "var LoopNonSlideIndex = [0, 3];\r\n"
    sig: var LoopNonSlideIndex
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  Kings:
    name: Kings
    code: "var Kings = [PIECES.wK, PIECES.bK];\r\n"
    sig: var Kings
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PieceKeys:
    name: PieceKeys
    code: "var PieceKeys = new Array(14 * 120);\r\n"
    sig: var PieceKeys
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SideKey:
    name: SideKey
    code: "var SideKey;\r\n"
    sig: var SideKey
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  CastleKeys:
    name: CastleKeys
    code: "var CastleKeys = new Array(16);\r\n"
    sig: var CastleKeys
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  Mirror64:
    name: Mirror64
    code: "var Mirror64 = [\r

      \  56, 57, 58, 59, 60, 61, 62, 63,\r

      \  48, 49, 50, 51, 52, 53, 54, 55,\r

      \  40, 41, 42, 43, 44, 45, 46, 47,\r

      \  32, 33, 34, 35, 36, 37, 38, 39,\r

      \  24, 25, 26, 27, 28, 29, 30, 31,\r

      \  16, 17, 18, 19, 20, 21, 22, 23,\r

      \  8, 9, 10, 11, 12, 13, 14, 15,\r

      \  0, 1, 2, 3, 4, 5, 6, 7\r

      ];\r\n"
    sig: var Mirror64
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  CastlePerm:
    name: CastlePerm
    code: "var CastlePerm = [\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 13, 15, 15, 15, 12, 15, 15, 14, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 7, 15, 15, 15, 3, 15, 15, 11, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r

      \  15, 15, 15, 15, 15, 15, 15, 15, 15, 15\r

      ];\r\n"
    sig: var CastlePerm
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  GameController:
    name: GameController
    code: "var GameController = {};\r\n"
    sig: var GameController
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  posKey:
    name: posKey
    code: "var posKey = 0;\r\n"
    sig: var posKey
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  piece1:
    name: piece1
    code: "var piece1= RAND_32();\r\n"
    sig: var piece1
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  piece2:
    name: piece2
    code: "var piece2= RAND_32();\r\n"
    sig: var piece2
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  piece3:
    name: piece3
    code: "var piece3= RAND_32();\r\n"
    sig: var piece3
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  piece4:
    name: piece4
    code: "var piece4= RAND_32();\r\n"
    sig: var piece4
    region: var (defs.js)
    filename: defs.js
    type: var
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  MFLAGEP:
    name: MFLAGEP
    code: "var MFLAGEP = 0x40000\r\n"
    sig: var MFLAGEP
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MFLAGPS:
    name: MFLAGPS
    code: "var MFLAGPS = 0x80000\r\n"
    sig: var MFLAGPS
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MFLAGCA:
    name: MFLAGCA
    code: "var MFLAGCA = 0x1000000\r\n"
    sig: var MFLAGCA
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MFLAGCAP:
    name: MFLAGCAP
    code: "var MFLAGCAP = 0x7C000\r\n"
    sig: var MFLAGCAP
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MFLAGPROM:
    name: MFLAGPROM
    code: "var MFLAGPROM = 0xF00000\r\n"
    sig: var MFLAGPROM
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  NOMOVE:
    name: NOMOVE
    code: "var NOMOVE = 0\r\n"
    sig: var NOMOVE
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PVENTRIES:
    name: PVENTRIES
    code: "var PVENTRIES = 10000;\r\n"
    sig: var PVENTRIES
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RookOpenCol:
    name: RookOpenCol
    code: "var RookOpenCol = 10;\r\n"
    sig: var RookOpenCol
    region: var (evaluate.js)
    filename: evaluate.js
    type: var
    fname: evaluate.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\evaluate.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867222.0435
    size: 8602
  RookSemiOpenCol:
    name: RookSemiOpenCol
    code: "var RookSemiOpenCol = 5;\r\n"
    sig: var RookSemiOpenCol
    region: var (evaluate.js)
    filename: evaluate.js
    type: var
    fname: evaluate.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\evaluate.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867222.0435
    size: 8602
  QueenOpenCol:
    name: QueenOpenCol
    code: "var QueenOpenCol = 5;\r\n"
    sig: var QueenOpenCol
    region: var (evaluate.js)
    filename: evaluate.js
    type: var
    fname: evaluate.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\evaluate.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867222.0435
    size: 8602
  QueenSemiOpenCol:
    name: QueenSemiOpenCol
    code: "var QueenSemiOpenCol = 3;\r\n"
    sig: var QueenSemiOpenCol
    region: var (evaluate.js)
    filename: evaluate.js
    type: var
    fname: evaluate.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\evaluate.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867222.0435
    size: 8602
  BishopPair:
    name: BishopPair
    code: "var BishopPair = 30;\r\n"
    sig: var BishopPair
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PawnRowsWhite:
    name: PawnRowsWhite
    code: "var PawnRowsWhite = new Array(10);\r\n"
    sig: var PawnRowsWhite
    region: var (evaluate.js)
    filename: evaluate.js
    type: var
    fname: evaluate.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\evaluate.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867222.0435
    size: 8602
  PawnRowsBlack:
    name: PawnRowsBlack
    code: "var PawnRowsBlack = new Array(10);\r\n"
    sig: var PawnRowsBlack
    region: var (evaluate.js)
    filename: evaluate.js
    type: var
    fname: evaluate.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\evaluate.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867222.0435
    size: 8602
  PawnIsolated:
    name: PawnIsolated
    code: "var PawnIsolated = -10;\r\n"
    sig: var PawnIsolated
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PawnPassed:
    name: PawnPassed
    code: "var PawnPassed = [0, 5, 10, 20, 35, 60, 100, 200];\r\n"
    sig: var PawnPassed
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PawnTable:
    name: PawnTable
    code: "var PawnTable = [\r

      \  0, 0, 0, 0, 0, 0, 0, 0,\r

      \  10, 10, 0, -10, -10, 0, 10, 10,\r

      \  5, 0, 0, 5, 5, 0, 0, 5,\r

      \  0, 0, 10, 20, 20, 10, 0, 0,\r

      \  5, 5, 5, 10, 10, 5, 5, 5,\r

      \  10, 10, 10, 20, 20, 10, 10, 10,\r

      \  20, 20, 20, 30, 30, 20, 20, 20,\r

      \  0, 0, 0, 0, 0, 0, 0, 0\r

      ];\r\n"
    sig: var PawnTable
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  KnightTable:
    name: KnightTable
    code: "var KnightTable = [\r

      \  0, -10, 0, 0, 0, 0, -10, 0,\r

      \  0, 0, 0, 5, 5, 0, 0, 0,\r

      \  0, 0, 10, 10, 10, 10, 0, 0,\r

      \  0, 0, 10, 20, 20, 10, 5, 0,\r

      \  5, 10, 15, 20, 20, 15, 10, 5,\r

      \  5, 10, 10, 20, 20, 10, 10, 5,\r

      \  0, 0, 5, 10, 10, 5, 0, 0,\r

      \  0, 0, 0, 0, 0, 0, 0, 0\r

      ];\r\n"
    sig: var KnightTable
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  BishopTable:
    name: BishopTable
    code: "var BishopTable = [\r

      \  0, 0, -10, 0, 0, -10, 0, 0,\r

      \  0, 0, 0, 10, 10, 0, 0, 0,\r

      \  0, 0, 10, 15, 15, 10, 0, 0,\r

      \  0, 10, 15, 20, 20, 15, 10, 0,\r

      \  0, 10, 15, 20, 20, 15, 10, 0,\r

      \  0, 0, 10, 15, 15, 10, 0, 0,\r

      \  0, 0, 0, 10, 10, 0, 0, 0,\r

      \  0, 0, 0, 0, 0, 0, 0, 0\r

      ];\r\n"
    sig: var BishopTable
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RookTable:
    name: RookTable
    code: "var RookTable = [\r

      \  0, 0, 5, 10, 10, 5, 0, 0,\r

      \  0, 0, 5, 10, 10, 5, 0, 0,\r

      \  0, 0, 5, 10, 10, 5, 0, 0,\r

      \  0, 0, 5, 10, 10, 5, 0, 0,\r

      \  0, 0, 5, 10, 10, 5, 0, 0,\r

      \  0, 0, 5, 10, 10, 5, 0, 0,\r

      \  25, 25, 25, 25, 25, 25, 25, 25,\r

      \  0, 0, 5, 10, 10, 5, 0, 0\r

      ];\r\n"
    sig: var RookTable
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  KingE:
    name: KingE
    code: "var KingE = [\r

      \  -50, -10, 0, 0, 0, 0, -10, -50,\r

      \  -10, 0, 10, 10, 10, 10, 0, -10,\r

      \  0, 10, 20, 20, 20, 20, 10, 0,\r

      \  0, 10, 20, 40, 40, 20, 10, 0,\r

      \  0, 10, 20, 40, 40, 20, 10, 0,\r

      \  0, 10, 20, 20, 20, 20, 10, 0,\r

      \  -10, 0, 10, 10, 10, 10, 0, -10,\r

      \  -50, -10, 0, 0, 0, 0, -10, -50\r

      ];\r\n"
    sig: var KingE
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  KingO:
    name: KingO
    code: "var KingO = [\r

      \  0, 5, 5, -10, -10, 0, 10, 5,\r

      \  -30, -30, -30, -30, -30, -30, -30, -30,\r

      \  -50, -50, -50, -50, -50, -50, -50, -50,\r

      \  -70, -70, -70, -70, -70, -70, -70, -70,\r

      \  -70, -70, -70, -70, -70, -70, -70, -70,\r

      \  -70, -70, -70, -70, -70, -70, -70, -70,\r

      \  -70, -70, -70, -70, -70, -70, -70, -70,\r

      \  -70, -70, -70, -70, -70, -70, -70, -70\r

      ];\r\n"
    sig: var KingO
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ENDGAME:
    name: ENDGAME
    code: "var ENDGAME_MAT = 1 * PieceVal[PIECES.wR] + 2 * PieceVal[PIECES.wN] + 2 *
      PieceVal[PIECES.wP] + PieceVal[PIECES.wK];\r\n"
    sig: var ENDGAME
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  UserMove:
    name: UserMove
    code: "var UserMove = {};\r\n"
    sig: var UserMove
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MirrorCols:
    name: MirrorCols
    code: "var MirrorCols = [ COLUMNS.COL_H, COLUMNS.COL_G, COLUMNS.COL_F,
      COLUMNS.COL_E, COLUMNS.COL_D, COLUMNS.COL_C, COLUMNS.COL_B, COLUMNS.COL_A
      ];\r\n"
    sig: var MirrorCols
    region: var (gui.js)
    filename: gui.js
    type: var
    fname: gui.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\gui.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867000.6301
    size: 12774
  MirrorRows:
    name: MirrorRows
    code: "var MirrorRows = [ ROWS.ROW_8, ROWS.ROW_7, ROWS.ROW_6, ROWS.ROW_5,
      ROWS.ROW_4, ROWS.ROW_3, ROWS.ROW_2, ROWS.ROW_1 ];\r\n"
    sig: var MirrorRows
    region: var (gui.js)
    filename: gui.js
    type: var
    fname: gui.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\gui.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867000.6301
    size: 12774
  VictimScore:
    name: VictimScore
    code: "var VictimScore = [0, 100, 200, 300, 400, 500, 600, 100, 200, 300, 400,
      500, 600];\r\n"
    sig: var VictimScore
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MvvLvaScores:
    name: MvvLvaScores
    code: "var MvvLvaScores = new Array(14 * 14);\r\n"
    sig: var MvvLvaScores
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  perft:
    name: perft
    code: "var perft_leafNodes;\r\n"
    sig: var perft
    region: perft (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  srch:
    name: srch
    code: "var srch_thinking;\r\n"
    sig: var srch
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  domUpdate:
    name: domUpdate
    code: "var domUpdate_ordering;\r\n"
    sig: var domUpdate
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  BG:
    name: BG
    code: "var BG_CARD_BACK = randomColor();\r\n"
    sig: var BG
    region: cards (legacy.js)
    filename: legacy.js
    type: var
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  GAME:
    name: GAME
    code: "var GAME_PLAY_UI = null;\r\n"
    sig: var GAME
    region: var (gameplay.js)
    filename: gameplay.js
    type: var
    fname: gameplay.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\gameplay.js
    datetime: 2021-11-12-13-16
    timestamp: 1636751796522.3003
    size: 488
  PROJECTNAME:
    name: PROJECTNAME
    code: "var PROJECTNAME = 'basinno';\r\n"
    sig: var PROJECTNAME
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  USELIVESERVER:
    name: USELIVESERVER
    code: "var USELIVESERVER = false;\r\n"
    sig: var USELIVESERVER
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  DEFAULTUSERNAME:
    name: DEFAULTUSERNAME
    code: "var DEFAULTUSERNAME = 'gul';\r\n"
    sig: var DEFAULTUSERNAME
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  USE:
    name: USE
    code: "var USE_ADDONS = false;\r\n"
    sig: var USE
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  CLEAR:
    name: CLEAR
    code: "var CLEAR_LOCAL_STORAGE = false;\r\n"
    sig: var CLEAR
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  sent:
    name: sent
    code: "var sent_audio = new
      Audio(\"../base/assets/sounds/message_sent.mp3\");\r\n"
    sig: var sent
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  received:
    name: received
    code: "var received_audio = new
      Audio(\"../base/assets/sounds/message_received.mp3\");\r\n"
    sig: var received
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  CURRENT:
    name: CURRENT
    code: "var CURRENT_FEN = \"\";\r\n"
    sig: var CURRENT
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\belinda\js\globals.js
    datetime: 2021-11-01-06-03
    timestamp: 1635771822937.5764
    size: 15940
  SEEN:
    name: SEEN
    code: "var SEEN_STATUS = false;\r\n"
    sig: var SEEN
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  Daat:
    name: Daat
    code: "var Daat = {}, DA = {}, Session = {};\r\n"
    sig: var Daat
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\globals.js
    datetime: 2021-11-29-17-10
    timestamp: 1638234614296.8306
    size: 15970
  FenPositionList:
    name: FenPositionList
    code: "var FenPositionList;\r\n"
    sig: var FenPositionList
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  C52:
    name: C52
    code: "var C52, Cinno, Aristocards, Dinno, InnoById, InnoByName, Syms, SymKeys,
      KeySets, Categories, ByGroupSubgroup, WordP; \r\n"
    sig: var C52
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  DB:
    name: DB
    code: "var DB, M = {}, S = {}, Z, U = null, PL, G = null, C = null, UI = {},
      Users, Tables, Basepath, Serverdata = {}, Clientdata = {};\r\n"
    sig: var DB
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Pictures:
    name: Pictures
    code: "var Pictures, Goal, Selected, Score, IsAnswerCorrect, QContextCounter =
      0;\r\n"
    sig: var Pictures
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  uiActivated:
    name: uiActivated
    code: "var uiActivated = false, Selected, Turn, Prevturn;\r\n"
    sig: var uiActivated
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Settings:
    name: Settings
    code: "var Settings, SettingsList, SettingsChanged, SelectedMenuKey;\r\n"
    sig: var Settings
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  Players:
    name: Players
    code: "var Players, PlayerOnTurn, GC, GameCounter;\r\n"
    sig: var Players
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  BestMinusScore:
    name: BestMinusScore
    code: "var BestMinusScore = Infinity, BestMinusState, BestPlusScore = -Infinity,
      BestPlusState;\r\n"
    sig: var BestMinusScore
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  F:
    name: F
    code: "var F_END, F_MOVES, F_APPLYMOVE, F_UNDOMOVE, F_EVAL, DMAX, MAXIMIZER,
      MINIMIZER, SelectedMove, CANCEL_AI;\r\n"
    sig: var F
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  DMM:
    name: DMM
    code: "var DMM = {}, timit;\r\n"
    sig: var DMM
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  ShapeKeys:
    name: ShapeKeys
    code: "var ShapeKeys = ['hex', 'hexF', 'tri', 'triDown', 'triLeft',
      'triRight'];\r\n"
    sig: var ShapeKeys
    region: shapes (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  PolyClips:
    name: PolyClips
    code: "var PolyClips = {\r

      \  hex: 'polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0%
      25%)',\r

      \  test1: 'inset(50% 0% 100% 25% 100% 75% 50% 100% 0% 75% 0% 25%
      round 10px)',\r

      \  test0: 'inset(45% 0% 33% 10% round 10px)',\r

      \  hexagon: 'polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%,
      0% 25%)',\r

      \  hexF: 'polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0%
      50%)',\r

      \  hexFlat: 'polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%,
      0% 50%)',\r

      \  hexflat: 'polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%,
      0% 50%)',\r

      \  tri: 'polygon(50% 0%, 100% 100%, 0% 100%)',\r

      \  triangle: 'polygon(50% 0%, 100% 100%, 0% 100%)',\r

      \  triUp: 'polygon(50% 0%, 100% 100%, 0% 100%)',\r

      \  triup: 'polygon(50% 0%, 100% 100%, 0% 100%)',\r

      \  triDown: 'polygon(0% 0%, 100% 0%, 50% 100%)',\r

      \  tridown: 'polygon(0% 0%, 100% 0%, 50% 100%)',\r

      \  triright: 'polygon(0% 0%, 100% 50%, 0% 100%)',\r

      \  triRight: 'polygon(0% 0%, 100% 50%, 0% 100%)',\r

      \  trileft: 'polygon(0% 50%, 100% 0%, 100% 100%)',\r

      \  triLeft: 'polygon(0% 50%, 100% 0%, 100% 100%)',\r

      \  splayup: 'polygon(0% 70%, 100% 70%, 100% 100%, 0% 100%)',\r

      }\r\n"
    sig: var PolyClips
    region: shapes (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  ColorNames:
    name: ColorNames
    code: "var ColorNames; \r\n"
    sig: var ColorNames
    region: color (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  levelKeys:
    name: levelKeys
    code: "var levelKeys = ['island', 'justice star', 'materials science', 'mayan
      pyramid', 'medieval gate',\r

      \  'great pyramid', 'meeple', 'smart', 'stone tower', 'trophy cup',
      'viking helmet',\r

      \  'flower star', 'island', 'justice star', 'materials science',
      'mayan pyramid',];\r\n"
    sig: var levelKeys
    region: speechGame (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  U:
    name: U
    code: "var U, Userdata, Username, Serverdata, Live, G;\r\n"
    sig: var U
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\videos\js\globals.js
    datetime: 2021-12-01-10-50
    timestamp: 1638384628628.4507
    size: 15927
  dLeiste:
    name: dLeiste
    code: "var dLeiste, dScore, dGameTitle, dTable, dTableShield, dTitle, dLinks,
      dRechts, dOben, dUnten, dPlayerStats, dMessage, dStatus;\r\n"
    sig: var dLeiste
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  TESTING:
    name: TESTING
    code: "var TESTING = true; \r\n"
    sig: var TESTING
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  Userdata:
    name: Userdata
    code: "var Userdata, Username, Serverdata, Live;\r\n"
    sig: var Userdata
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  auxOpen:
    name: auxOpen
    code: "var auxOpen, GameTimer, STOPAUS = false;\r\n"
    sig: var auxOpen
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\globals.js
    datetime: 2021-11-29-17-10
    timestamp: 1638234614296.8306
    size: 15970
  TO:
    name: TO
    code: "var TO, TOMain, TOTrial, TOList, TOTicker, TCount;\r\n"
    sig: var TO
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\videos\js\globals.js
    datetime: 2021-12-01-10-50
    timestamp: 1638384628628.4507
    size: 15927
  BotTicker:
    name: BotTicker
    code: "var BotTicker, POLL_COUNTER = 0;\r\n"
    sig: var BotTicker
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  Badges:
    name: Badges
    code: "var Badges = [];\r\n"
    sig: var Badges
    region: Badges (badges.js)
    filename: badges.js
    type: var
    fname: badges.js
    path: C:\xampp\htdocs\aroot\base\js\badges.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531498.548
    size: 5184
  StateDict:
    name: StateDict
    code: "var StateDict = {};\r\n"
    sig: var StateDict
    region: board (board.js)
    filename: board.js
    type: var
    fname: board.js
    path: C:\D\a03\nodemaster\basejs\board.js
    datetime: 2022-10-31-07-55
    timestamp: 1667228124905.7126
    size: 87039
  EmptyFunc:
    name: EmptyFunc
    code: "var EmptyFunc = x => nundef(x) || x == ' ';\r\n"
    sig: var EmptyFunc
    region: board (board.js)
    filename: board.js
    type: var
    fname: board.js
    path: C:\D\a03\nodemaster\basejs\board.js
    datetime: 2022-10-31-07-55
    timestamp: 1667228124905.7126
    size: 87039
  Avatars:
    name: Avatars
    code: "var Avatars = [];\r\n"
    sig: var Avatars
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: var
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  AvatarTimeout:
    name: AvatarTimeout
    code: "var AvatarTimeout;\r\n"
    sig: var AvatarTimeout
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: var
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  LastPositionX:
    name: LastPositionX
    code: "var LastPositionX = 0, LastPositionY = 0;\r\n"
    sig: var LastPositionX
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: var
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  MouseMoveCounter:
    name: MouseMoveCounter
    code: "var MouseMoveCounter = 0;\r\n"
    sig: var MouseMoveCounter
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: var
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  IsCanvasActive:
    name: IsCanvasActive
    code: "var IsCanvasActive = false;\r\n"
    sig: var IsCanvasActive
    region: var (canvas.js)
    filename: canvas.js
    type: var
    fname: canvas.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\canvas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3266
  ActiveButton:
    name: ActiveButton
    code: "var ActiveButton = null;\r\n"
    sig: var ActiveButton
    region: var (onClick.js)
    filename: onClick.js
    type: var
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  HistoryOfStates:
    name: HistoryOfStates
    code: "var HistoryOfStates = {};\r\n"
    sig: var HistoryOfStates
    region: load (onClick.js)
    filename: onClick.js
    type: var
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  StepCounter:
    name: StepCounter
    code: "var StepCounter = 0, Autoreload=false, KeepSessionUser = false; \r\n"
    sig: var StepCounter
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  Toolbar:
    name: Toolbar
    code: "var Toolbar;\r\n"
    sig: var Toolbar
    region: var (toolbar.js)
    filename: toolbar.js
    type: var
    fname: toolbar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\toolbar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 3541
  TOFleetingMessage:
    name: TOFleetingMessage
    code: "var TOFleetingMessage, dFleetingMessage, Animation1;\r\n"
    sig: var TOFleetingMessage
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CSZ:
    name: CSZ
    code: "var CSZ = 300;\r\n"
    sig: var CSZ
    region: cfactory (cards.js)
    filename: cards.js
    type: var
    fname: cards.js
    path: C:\xampp\htdocs\aroot\belinda\js\cards.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 66079
  CHEIGHT:
    name: CHEIGHT
    code: "var CHEIGHT = CSZ;\r\n"
    sig: var CHEIGHT
    region: cfactory (cards.js)
    filename: cards.js
    type: var
    fname: cards.js
    path: C:\xampp\htdocs\aroot\belinda\js\cards.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 66079
  CWIDTH:
    name: CWIDTH
    code: "var CWIDTH = CSZ * .7\r\n"
    sig: var CWIDTH
    region: cfactory (cards.js)
    filename: cards.js
    type: var
    fname: cards.js
    path: C:\xampp\htdocs\aroot\belinda\js\cards.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 66079
  CGAP:
    name: CGAP
    code: "var CGAP = CSZ * .05;\r\n"
    sig: var CGAP
    region: cfactory (cards.js)
    filename: cards.js
    type: var
    fname: cards.js
    path: C:\xampp\htdocs\aroot\belinda\js\cards.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 66079
  DragElem:
    name: DragElem
    code: "var DragElem = null; \r\n"
    sig: var DragElem
    region: drag (base.js)
    filename: base.js
    type: var
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  DropZones:
    name: DropZones
    code: "var DropZones = []; \r\n"
    sig: var DropZones
    region: DRAG (game.js)
    filename: game.js
    type: var
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  DropZoneItem:
    name: DropZoneItem
    code: "var DropZoneItem = null;\r\n"
    sig: var DropZoneItem
    region: DRAG (game.js)
    filename: game.js
    type: var
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  DropZoneItems:
    name: DropZoneItems
    code: "var DropZoneItems = [];\r\n"
    sig: var DropZoneItems
    region: DRAG (game.js)
    filename: game.js
    type: var
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  DragSource:
    name: DragSource
    code: "var DragSource = null; \r\n"
    sig: var DragSource
    region: DRAG (game.js)
    filename: game.js
    type: var
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  DragSourceItem:
    name: DragSourceItem
    code: "var DragSourceItem = null;\r\n"
    sig: var DragSourceItem
    region: DRAG (game.js)
    filename: game.js
    type: var
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  DragSourceItems:
    name: DragSourceItems
    code: "var DragSourceItems = [];\r\n"
    sig: var DragSourceItems
    region: DRAG (game.js)
    filename: game.js
    type: var
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  CCC:
    name: CCC
    code: "var CCC = 0;\r\n"
    sig: var CCC
    region: ai (leg_belinda.js)
    filename: leg_belinda.js
    type: var
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  dMain:
    name: dMain
    code: "var dMain = document.getElementById('dMain'), dTable, Step = 0;\r\n"
    sig: var dMain
    region: var (page.js)
    filename: page.js
    type: var
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  allAreas:
    name: allAreas
    code: "var allAreas = {}; \r\n"
    sig: var allAreas
    region: var (areas.js)
    filename: areas.js
    type: var
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  areaSubTypes:
    name: areaSubTypes
    code: "var areaSubTypes = {}; \r\n"
    sig: var areaSubTypes
    region: var (areas.js)
    filename: areas.js
    type: var
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  FLAG:
    name: FLAG
    code: "var FLAG_AI_CANCELED = false;\r\n"
    sig: var FLAG
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  FILES:
    name: FILES
    code: "var FILES = { FILE_A: 0, FILE_B: 1, FILE_C: 2, FILE_D: 3, FILE_E: 4,
      FILE_F: 5, FILE_G: 6, FILE_H: 7, FILE_NONE: 8 };\r\n"
    sig: var FILES
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RANKS:
    name: RANKS
    code: "var RANKS = { RANK_1: 0, RANK_2: 1, RANK_3: 2, RANK_4: 3, RANK_5: 4,
      RANK_6: 5, RANK_7: 6, RANK_8: 7, RANK_NONE: 8 };\r\n"
    sig: var RANKS
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  FilesBrd:
    name: FilesBrd
    code: "var FilesBrd = new Array(BRD_SQ_NUM);\r\n"
    sig: var FilesBrd
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RanksBrd:
    name: RanksBrd
    code: "var RanksBrd = new Array(BRD_SQ_NUM);\r\n"
    sig: var RanksBrd
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RankChar:
    name: RankChar
    code: "var RankChar = \"12345678\";\r\n"
    sig: var RankChar
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  FileChar:
    name: FileChar
    code: "var FileChar = \"abcdefgh\";\r\n"
    sig: var FileChar
    region: variables (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RookOpenFile:
    name: RookOpenFile
    code: "var RookOpenFile = 10;\r\n"
    sig: var RookOpenFile
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RookSemiOpenFile:
    name: RookSemiOpenFile
    code: "var RookSemiOpenFile = 5;\r\n"
    sig: var RookSemiOpenFile
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  QueenOpenFile:
    name: QueenOpenFile
    code: "var QueenOpenFile = 5;\r\n"
    sig: var QueenOpenFile
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  QueenSemiOpenFile:
    name: QueenSemiOpenFile
    code: "var QueenSemiOpenFile = 3;\r\n"
    sig: var QueenSemiOpenFile
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PawnRanksWhite:
    name: PawnRanksWhite
    code: "var PawnRanksWhite = new Array(10);\r\n"
    sig: var PawnRanksWhite
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PawnRanksBlack:
    name: PawnRanksBlack
    code: "var PawnRanksBlack = new Array(10);\r\n"
    sig: var PawnRanksBlack
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MirrorFiles:
    name: MirrorFiles
    code: "var MirrorFiles = [FILES.FILE_H, FILES.FILE_G, FILES.FILE_F,
      FILES.FILE_E, FILES.FILE_D, FILES.FILE_C, FILES.FILE_B,
      FILES.FILE_A];\r\n"
    sig: var MirrorFiles
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MirrorRanks:
    name: MirrorRanks
    code: "var MirrorRanks = [RANKS.RANK_8, RANKS.RANK_7, RANKS.RANK_6,
      RANKS.RANK_5, RANKS.RANK_4, RANKS.RANK_3, RANKS.RANK_2,
      RANKS.RANK_1];\r\n"
    sig: var MirrorRanks
    region: rules (chess.js)
    filename: chess.js
    type: var
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RecogOutput:
    name: RecogOutput
    code: "var RecogOutput = false;\r\n"
    sig: var RecogOutput
    region: const (speech.js)
    filename: speech.js
    type: var
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  RecogOutputError:
    name: RecogOutputError
    code: "var RecogOutputError = true;\r\n"
    sig: var RecogOutputError
    region: const (speech.js)
    filename: speech.js
    type: var
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  RecogHighPriorityOutput:
    name: RecogHighPriorityOutput
    code: "var RecogHighPriorityOutput = true;\r\n"
    sig: var RecogHighPriorityOutput
    region: const (speech.js)
    filename: speech.js
    type: var
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  SpeakerOutput:
    name: SpeakerOutput
    code: "var SpeakerOutput = false;\r\n"
    sig: var SpeakerOutput
    region: const (speech.js)
    filename: speech.js
    type: var
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  MicrophoneUi:
    name: MicrophoneUi
    code: "var MicrophoneUi;\r\n"
    sig: var MicrophoneUi
    region: const (speech.js)
    filename: speech.js
    type: var
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  SessionId:
    name: SessionId
    code: "var SessionId;\r\n"
    sig: var SessionId
    region: const (speech.js)
    filename: speech.js
    type: var
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  IconSet:
    name: IconSet
    code: "var IconSet, lastIndex;\r\n"
    sig: var IconSet
    region: iconviewer (syms.js)
    filename: syms.js
    type: var
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  ActiveChats:
    name: ActiveChats
    code: "var ActiveChats = {}; \r\n"
    sig: var ActiveChats
    region: var (chat.js)
    filename: chat.js
    type: var
    fname: chat.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\chat.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3871
  dCurrent:
    name: dCurrent
    code: "var dCurrent = null;\r\n"
    sig: var dCurrent
    region: var (page.js)
    filename: page.js
    type: var
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  paneOpen:
    name: paneOpen
    code: "var paneOpen = false;\r\n"
    sig: var paneOpen
    region: var (page.js)
    filename: page.js
    type: var
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  DELAY:
    name: DELAY
    code: "var DELAY_APPEAR = 100;\r\n"
    sig: var DELAY
    region: var (page.js)
    filename: page.js
    type: var
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  ZMax:
    name: ZMax
    code: "var ZMax = 0;\r\n"
    sig: var ZMax
    region: i (base.js)
    filename: base.js
    type: var
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorDict:
    name: colorDict
    code: "var colorDict = null; \r\n"
    sig: var colorDict
    region: color (base.js)
    filename: base.js
    type: var
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  DDInfo:
    name: DDInfo
    code: "var DDInfo = null;\r\n"
    sig: var DDInfo
    region: drag (base.js)
    filename: base.js
    type: var
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  UIDCounter:
    name: UIDCounter
    code: "var UIDCounter = 0;\r\n"
    sig: var UIDCounter
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  FRUIDCounter:
    name: FRUIDCounter
    code: "var FRUIDCounter = -1;\r\n"
    sig: var FRUIDCounter
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Fen:
    name: Fen
    code: "var Fen, R, Qu, U, G, A, Card = {};\r\n"
    sig: var Fen
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  TOMan:
    name: TOMan
    code: "var TOMan, TO, TOMain, TOTrial, TOList, TOTicker, TCount, TOAnim;\r\n"
    sig: var TOMan
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  Waiting:
    name: Waiting
    code: "var Waiting_for = null;\r\n"
    sig: var Waiting
    region: var (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  dActions:
    name: dActions
    code: "var dActions, dActions0, dActions1, dActions2, dActions3, dActions4,
      dActions5, dError;\r\n"
    sig: var dActions
    region: card (globals.js)
    filename: globals.js
    type: var
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  MAXITER:
    name: MAXITER
    code: "var MAXITER = 200, ITER = 0;\r\n"
    sig: var MAXITER
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: var
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  SOCKETSERVER:
    name: SOCKETSERVER
    code: "var SOCKETSERVER = 'http://localhost:5000'; //geht im spital\r\n"
    sig: var SOCKETSERVER
    region: globals (basemin.js)
    filename: basemin.js
    type: var
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\games\basemin.js
    datetime: 2023-01-17-06-17
    timestamp: 1673965061239.3267
    size: 165299
  SERVER:
    name: SERVER
    code: "var SERVER = \"http://localhost:8080/aroot/simple\"; // oder
      telecave!\r\n"
    sig: var SERVER
    region: globals (basemin.js)
    filename: basemin.js
    type: var
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\games\basemin.js
    datetime: 2023-01-17-06-17
    timestamp: 1673965061239.3267
    size: 165299
  Pollmode:
    name: Pollmode
    code: "var Pollmode = 'auto', Globals;\r\n"
    sig: var Pollmode
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Info:
    name: Info
    code: "var Info, ColorDi, Items = {}, DA = {}, Card = {}, TO = {}, Counter = {
      server: 0 };\r\n"
    sig: var Info
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  z:
    name: z
    code: "var z, U, G, UI = {}, Users, Tables, Basepath, Serverdata = {};\r\n"
    sig: var z
    region: globals (basemin.js)
    filename: basemin.js
    type: var
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\simple\basemin.js
    datetime: 2022-04-27-08-08
    timestamp: 1651072084751.412
    size: 92499
  dTable:
    name: dTable
    code: "var dTable, dPage, dMap, dHeader, dFooter, dMessage, dPuppet, dMenu,
      dLeft, dCenter, dRight, dTop, dBottom; \r\n"
    sig: var dTable
    region: globals (baseminserver.js)
    filename: baseminserver.js
    type: var
    fname: baseminserver.js
    path: C:\D\a04\basejs\baseminserver.js
    datetime: 2023-01-18-07-38
    timestamp: 1674056292558.475
    size: 249674
  Config:
    name: Config
    code: "var Config, Syms, SymKeys, ByGroupSubgroup, KeySets, C52, Cinno,
      C52Cards;\r\n"
    sig: var Config
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  PrevUser:
    name: PrevUser
    code: "var PrevUser = null;\r\n"
    sig: var PrevUser
    region: var (showtable.js)
    filename: showtable.js
    type: var
    fname: showtable.js
    path: C:\xampp\htdocs\aroot\simple\showtable.js
    datetime: 2022-04-29-06-56
    timestamp: 1651240582187.3123
    size: 5155
  ColorDi:
    name: ColorDi
    code: "var ColorDi;\r\n"
    sig: var ColorDi
    region: globals (basemin.js)
    filename: basemin.js
    type: var
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\base\code\basemin.js
    datetime: 2022-05-13-09-19
    timestamp: 1652458788107.2324
    size: 51197
  Users:
    name: Users
    code: "var Users,User,Tables,Table; \r\n"
    sig: var Users
    region: globals (basemin.js)
    filename: basemin.js
    type: var
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\base\code\basemin.js
    datetime: 2022-05-13-09-19
    timestamp: 1652458788107.2324
    size: 51197
  Z:
    name: Z
    code: "var Z, z, U, PL, G, UI = {}, Users, Tables, Basepath, Serverdata =
      {};\r\n"
    sig: var Z
    region: globals (basemin.js)
    filename: basemin.js
    type: var
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\_other\happy\basemin.js
    datetime: 2022-05-16-07-33
    timestamp: 1652711599304.6985
    size: 115641
  FORCE:
    name: FORCE
    code: "var FORCE_REDRAW = false, TESTING = false;\r\n"
    sig: var FORCE
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ColorThiefObject:
    name: ColorThiefObject
    code: "var ColorThiefObject, SelectedItem, SelectedColor;\r\n"
    sig: var ColorThiefObject
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  FirstLoad:
    name: FirstLoad
    code: "var FirstLoad = true;\r\n"
    sig: var FirstLoad
    region: var (start.js)
    filename: start.js
    type: var
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  S:
    name: S
    code: "var S = {}, Z, U = null, PL, G, UI = {}, Users, Tables, Basepath,
      Serverdata = {}, Clientdata = {};\r\n"
    sig: var S
    region: globals (basemin.js)
    filename: basemin.js
    type: var
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\games\basemin.js
    datetime: 2023-01-17-06-17
    timestamp: 1673965061239.3267
    size: 165299
  AGAME:
    name: AGAME
    code: "var AGAME = {\r

      \  stage: {\r

      \  }\r

      };\r\n"
    sig: var AGAME
    region: var (a_game.js)
    filename: a_game.js
    type: var
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  WhichCorner:
    name: WhichCorner
    code: "var WhichCorner = 0;\r\n"
    sig: var WhichCorner
    region: title (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  axiom:
    name: axiom
    code: "var axiom, rules, factor, angle, max, sentence, interval_id;\r\n"
    sig: var axiom
    region: var (mysketch.js)
    filename: mysketch.js
    type: var
    fname: mysketch.js
    path: C:\D\a03\nodemaster\all\fractals\plant\mysketch.js
    datetime: 2022-09-03-07-06
    timestamp: 1662213971377.43
    size: 1964
  system:
    name: system
    code: "var system = Complex, len = 100, angle;\r\n"
    sig: var system
    region: var (mysketch.js)
    filename: mysketch.js
    type: var
    fname: mysketch.js
    path: C:\D\a03\nodemaster\all\fractals\plant\mysketch.js
    datetime: 2022-09-03-07-06
    timestamp: 1662213971377.43
    size: 1964
  numgen:
    name: numgen
    code: "var numgen=0;\r\n"
    sig: var numgen
    region: var (mysketch.js)
    filename: mysketch.js
    type: var
    fname: mysketch.js
    path: C:\D\a03\nodemaster\all\fractals\plant\mysketch.js
    datetime: 2022-09-03-07-06
    timestamp: 1662213971377.43
    size: 1964
  PI:
    name: PI
    code: "var PI = Math.pi, interval_id, angle, factor = .67, tree = [], leaves =
      [], jittering = false;\r\n"
    sig: var PI
    region: var (sketch.js)
    filename: sketch.js
    type: var
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  numlayers:
    name: numlayers
    code: "var numlayers = 0;\r\n"
    sig: var numlayers
    region: var (sketch.js)
    filename: sketch.js
    type: var
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  requestAnimFrame:
    name: requestAnimFrame
    code: "var requestAnimFrame = (function(){\r

      \  return window.requestAnimationFrame       || \r

      \         window.webkitRequestAnimationFrame || \r

      \         window.mozRequestAnimationFrame    || \r

      \         window.oRequestAnimationFrame      || \r

      \         window.msRequestAnimationFrame     || \r

      \         function( callback ){\r

      \           window.setTimeout(callback, 1000 / 60);\r

      \         };\r

      })();\r\n"
    sig: var requestAnimFrame
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  c:
    name: c
    code: "var c = canvas.getContext(\"2d\");\r\n"
    sig: var c
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  radius:
    name: radius
    code: "var radius = 32;\r\n"
    sig: var radius
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  lineWidth:
    name: lineWidth
    code: "var lineWidth = 4;\r\n"
    sig: var lineWidth
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  gravity:
    name: gravity
    code: "var gravity = 0.1;\r\n"
    sig: var gravity
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  dampening:
    name: dampening
    code: "var dampening = 0.995;\r\n"
    sig: var dampening
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  mousePullStrength:
    name: mousePullStrength
    code: "var mousePullStrength = 0.005;\r\n"
    sig: var mousePullStrength
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  animate:
    name: animate
    code: "var animate = false;\r\n"
    sig: var animate
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  mouse:
    name: mouse
    code: "var mouse = {\r

      \  x : 0, \r

      \  y : 0,\r

      \  down: false\r

      };\r\n"
    sig: var mouse
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  circle:
    name: circle
    code: "var circle = {\r

      \  x : canvas.width/2,\r

      \  y : canvas.height/2,\r

      \  vx: 0, \r

      \  vy: 0\r

      };\r\n"
    sig: var circle
    region: var (ball.js)
    filename: ball.js
    type: var
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  Gaussian:
    name: Gaussian
    code: "var Gaussian = function (mean, variance) {\r

      \  if (variance <= 0) {\r

      \    throw new Error('Variance must be > 0 (but was ' + variance +
      ')');\r

      \  }\r

      \  this.mean = mean;\r

      \  this.variance = variance;\r

      \  this.standardDeviation = Math.sqrt(variance);\r

      }\r\n"
    sig: var Gaussian
    region: var (gaussian.js)
    filename: gaussian.js
    type: var
    fname: gaussian.js
    path: C:\D\a03\nodemaster\noc\gaussian.js
    datetime: 2022-09-24-09-24
    timestamp: 1664036652586.4966
    size: 4129
  Emicons:
    name: Emicons
    code: "var Emicons = {\r

      \  msmaus:
      \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/m\
      icrosoft/319/mouse-face_1f42d.png\",\r

      \  gmaus:
      \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/g\
      oogle/346/mouse-face_1f42d.png\",\r

      \  smaus:
      \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/s\
      oftbank/145/mouse-face_1f42d.png\",\r

      \  twmaus:
      \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/t\
      witter/322/mouse-face_1f42d.png\",\r

      \  maus:
      \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/w\
      hatsapp/326/mouse-face_1f42d.png\",\r

      };\r\n"
    sig: var Emicons
    region: funcs (start.js)
    filename: start.js
    type: var
    fname: start.js
    path: C:\D\a03\nodemaster\all\favicontester\start.js
    datetime: 2022-10-01-10-14
    timestamp: 1664644478311.996
    size: 1077
  SICHERER:
    name: SICHERER
    code: "var SICHERER = 100;\r\n"
    sig: var SICHERER
    region: math (helpers.js)
    filename: helpers.js
    type: var
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  freeBus:
    name: freeBus
    code: "var freeBus = {\r

      \  \"type\": \"FeatureCollection\",\r

      \  \"features\": [\r

      \    {\r

      \      \"type\": \"Feature\",\r

      \      \"geometry\": {\r

      \        \"type\": \"LineString\",\r

      \        \"coordinates\": [\r

      \          [-105.00341892242432, 39.75383843460583],\r

      \          [-105.0008225440979, 39.751891803969535]\r

      \        ]\r

      \      },\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a free bus line that will take
      you across downtown.\",\r

      \        \"underConstruction\": false\r

      \      },\r

      \      \"id\": 1\r

      \    },\r

      \    {\r

      \      \"type\": \"Feature\",\r

      \      \"geometry\": {\r

      \        \"type\": \"LineString\",\r

      \        \"coordinates\": [\r

      \          [-105.0008225440979, 39.751891803969535],\r

      \          [-104.99820470809937, 39.74979664004068]\r

      \        ]\r

      \      },\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a free bus line that will take
      you across downtown.\",\r

      \        \"underConstruction\": true\r

      \      },\r

      \      \"id\": 2\r

      \    },\r

      \    {\r

      \      \"type\": \"Feature\",\r

      \      \"geometry\": {\r

      \        \"type\": \"LineString\",\r

      \        \"coordinates\": [\r

      \          [-104.99820470809937, 39.74979664004068],\r

      \          [-104.98689651489258, 39.741052354709055]\r

      \        ]\r

      \      },\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a free bus line that will take
      you across downtown.\",\r

      \        \"underConstruction\": false\r

      \      },\r

      \      \"id\": 3\r

      \    }\r

      \  ]\r

      };\r\n"
    sig: var freeBus
    region: var (helpers.js)
    filename: helpers.js
    type: var
    fname: helpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf\helpers.js
    datetime: 2022-10-07-10-37
    timestamp: 1665164235531.332
    size: 10224
  lightRailStop:
    name: lightRailStop
    code: "var lightRailStop = {\r

      \  \"type\": \"FeatureCollection\",\r

      \  \"features\": [\r

      \    {\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"18th & California Light Rail Stop\"\r

      \      },\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [-104.98999178409576, 39.74683938093904]\r

      \      }\r

      \    }, {\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"20th & Welton Light Rail Stop\"\r

      \      },\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [-104.98689115047453,
      39.747924136466565]\r

      \      }\r

      \    }\r

      \  ]\r

      };\r\n"
    sig: var lightRailStop
    region: var (helpers.js)
    filename: helpers.js
    type: var
    fname: helpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf\helpers.js
    datetime: 2022-10-07-10-37
    timestamp: 1665164235531.332
    size: 10224
  bicycleRental:
    name: bicycleRental
    code: "var bicycleRental = {\r

      \  \"type\": \"FeatureCollection\",\r

      \  \"features\": [\r

      \    {\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [\r

      \          -104.9998241,\r

      \          39.7471494\r

      \        ]\r

      \      },\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a B-Cycle Station. Come pick up
      a bike and pay by the hour. What a deal!\"\r

      \      },\r

      \      \"id\": 51\r

      \    },\r

      \    {\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [\r

      \          -104.9983545,\r

      \          39.7502833\r

      \        ]\r

      \      },\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a B-Cycle Station. Come pick up
      a bike and pay by the hour. What a deal!\"\r

      \      },\r

      \      \"id\": 52\r

      \    },\r

      \    {\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [\r

      \          -104.9963919,\r

      \          39.7444271\r

      \        ]\r

      \      },\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a B-Cycle Station. Come pick up
      a bike and pay by the hour. What a deal!\"\r

      \      },\r

      \      \"id\": 54\r

      \    },\r

      \    {\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [\r

      \          -104.9960754,\r

      \          39.7498956\r

      \        ]\r

      \      },\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a B-Cycle Station. Come pick up
      a bike and pay by the hour. What a deal!\"\r

      \      },\r

      \      \"id\": 55\r

      \    },\r

      \    {\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [\r

      \          -104.9933717,\r

      \          39.7477264\r

      \        ]\r

      \      },\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a B-Cycle Station. Come pick up
      a bike and pay by the hour. What a deal!\"\r

      \      },\r

      \      \"id\": 57\r

      \    },\r

      \    {\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [\r

      \          -104.9913392,\r

      \          39.7432392\r

      \        ]\r

      \      },\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a B-Cycle Station. Come pick up
      a bike and pay by the hour. What a deal!\"\r

      \      },\r

      \      \"id\": 58\r

      \    },\r

      \    {\r

      \      \"geometry\": {\r

      \        \"type\": \"Point\",\r

      \        \"coordinates\": [\r

      \          -104.9788452,\r

      \          39.6933755\r

      \        ]\r

      \      },\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": {\r

      \        \"popupContent\": \"This is a B-Cycle Station. Come pick up
      a bike and pay by the hour. What a deal!\"\r

      \      },\r

      \      \"id\": 74\r

      \    }\r

      \  ]\r

      };\r\n"
    sig: var bicycleRental
    region: var (helpers.js)
    filename: helpers.js
    type: var
    fname: helpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf\helpers.js
    datetime: 2022-10-07-10-37
    timestamp: 1665164235531.332
    size: 10224
  campus:
    name: campus
    code: "var campus = {\r

      \  \"type\": \"Feature\",\r

      \  \"properties\": {\r

      \    \"popupContent\": \"This is the Auraria West Campus\",\r

      \    \"style\": {\r

      \      weight: 2,\r

      \      color: \"#999\",\r

      \      opacity: 1,\r

      \      fillColor: \"#B0DE5C\",\r

      \      fillOpacity: 0.8\r

      \    }\r

      \  },\r

      \  \"geometry\": {\r

      \    \"type\": \"MultiPolygon\",\r

      \    \"coordinates\": [\r

      \      [\r

      \        [\r

      \          [-105.00432014465332, 39.74732195489861],\r

      \          [-105.00715255737305, 39.74620006835170],\r

      \          [-105.00921249389647, 39.74468219277038],\r

      \          [-105.01067161560059, 39.74362625960105],\r

      \          [-105.01195907592773, 39.74290029616054],\r

      \          [-105.00989913940431, 39.74078835902781],\r

      \          [-105.00758171081543, 39.74059036160317],\r

      \          [-105.00346183776855, 39.74059036160317],\r

      \          [-105.00097274780272, 39.74059036160317],\r

      \          [-105.00062942504881, 39.74072235994946],\r

      \          [-105.00020027160645, 39.74191033368865],\r

      \          [-105.00071525573731, 39.74276830198601],\r

      \          [-105.00097274780272, 39.74369225589818],\r

      \          [-105.00097274780272, 39.74461619742136],\r

      \          [-105.00123023986816, 39.74534214278395],\r

      \          [-105.00183105468751, 39.74613407445653],\r

      \          [-105.00432014465332, 39.74732195489861]\r

      \        ], [\r

      \          [-105.00361204147337, 39.74354376414072],\r

      \          [-105.00301122665405, 39.74278480127163],\r

      \          [-105.00221729278564, 39.74316428375108],\r

      \          [-105.00283956527711, 39.74390674342741],\r

      \          [-105.00361204147337, 39.74354376414072]\r

      \        ]\r

      \      ], [\r

      \        [\r

      \          [-105.00942707061768, 39.73989736613708],\r

      \          [-105.00942707061768, 39.73910536278566],\r

      \          [-105.00685214996338, 39.73923736397631],\r

      \          [-105.00384807586671, 39.73910536278566],\r

      \          [-105.00174522399902, 39.73903936209552],\r

      \          [-105.00041484832764, 39.73910536278566],\r

      \          [-105.00041484832764, 39.73979836621592],\r

      \          [-105.00535011291504, 39.73986436617916],\r

      \          [-105.00942707061768, 39.73989736613708]\r

      \        ]\r

      \      ]\r

      \    ]\r

      \  }\r

      };\r\n"
    sig: var campus
    region: var (helpers.js)
    filename: helpers.js
    type: var
    fname: helpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf\helpers.js
    datetime: 2022-10-07-10-37
    timestamp: 1665164235531.332
    size: 10224
  coorsField:
    name: coorsField
    code: "var coorsField = {\r

      \  \"type\": \"Feature\",\r

      \  \"properties\": {\r

      \    \"popupContent\": \"Coors Field\"\r

      \  },\r

      \  \"geometry\": {\r

      \    \"type\": \"Point\",\r

      \    \"coordinates\": [-104.99404191970824, 39.756213909328125]\r

      \  }\r

      };\r\n"
    sig: var coorsField
    region: var (helpers.js)
    filename: helpers.js
    type: var
    fname: helpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf\helpers.js
    datetime: 2022-10-07-10-37
    timestamp: 1665164235531.332
    size: 10224
  meme:
    name: meme
    code: "var meme;\r\n"
    sig: var meme
    region: var (bau1.js)
    filename: bau1.js
    type: var
    fname: bau1.js
    path: C:\D\a03\nodemaster\all\caba\bau1.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 1805
  obstacles:
    name: obstacles
    code: "var obstacles = [];\r\n"
    sig: var obstacles
    region: var (bau1.js)
    filename: bau1.js
    type: var
    fname: bau1.js
    path: C:\D\a03\nodemaster\all\caba\bau1.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 1805
  score:
    name: score
    code: "var score;\r\n"
    sig: var score
    region: var (bau1.js)
    filename: bau1.js
    type: var
    fname: bau1.js
    path: C:\D\a03\nodemaster\all\caba\bau1.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 1805
  myGameArea:
    name: myGameArea
    code: "var myGameArea = {\r

      \  canvas: document.createElement('canvas'),\r

      \  start: function () {\r

      \    this.canvas.width = 480;\r

      \    this.canvas.height = 270;\r

      \    this.context = this.canvas.getContext('2d');\r

      \    document.body.insertBefore(this.canvas,
      document.body.childNodes[0]);\r

      \    this.frameNo = 0;\r

      \    this.interval = setInterval(updateGameArea, 20);\r

      \  },\r

      \  clear: function () {\r

      \    this.context.clearRect(0, 0, this.canvas.width,
      this.canvas.height);\r

      \  },\r

      };\r\n"
    sig: var myGameArea
    region: var (bau1.js)
    filename: bau1.js
    type: var
    fname: bau1.js
    path: C:\D\a03\nodemaster\all\caba\bau1.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 1805
  M:
    name: M
    code: "var M = {}, S = {}, Z, U = null, PL, G = null, C = null, UI = {}, Users,
      Tables, Basepath, Serverdata = {}, Clientdata = {};\r\n"
    sig: var M
    region: globals (basemin.js)
    filename: basemin.js
    type: var
    fname: basemin.js
    path: C:\D\a03\nodemaster\basejs\basemin.js
    datetime: 2022-12-05-07-05
    timestamp: 1670252700099.043
    size: 238451
  FR:
    name: FR
    code: "var FR = 50, CX, CV, AU = {}, CONTEXT = null;\r\n"
    sig: var FR
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  SERVERURL:
    name: SERVERURL
    code: "var SERVERURL, Socket = null, SERVER = 'localhost', PORT = 3000,
      LIVE_SERVER, NODEJS, SINGLECLIENT;\r\n"
    sig: var SERVERURL
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  dBottom:
    name: dBottom
    code: "var dBottom, dButtons, dCenter, dCode, dConsole, dContent, dFiddle,
      dFooter, dHeader, dLeft, dMap, dMain, dMenu, dMessage, dPage,
      dPuppet;\r\n"
    sig: var dBottom
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  dRight:
    name: dRight
    code: "var dRight, dSidebar, dTable, dTitle, dTop;\r\n"
    sig: var dRight
    region: vars (_bau1.js)
    filename: _bau1.js
    type: var
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
func:
  clearBadges:
    name: clearBadges
    code: "function clearBadges() {\r

      \  removeBadges(null, 0);\r

      \  Badges = [];\r

      }\r\n"
    sig: function clearBadges(){}
    region: Badges (badges.js)
    filename: badges.js
    type: func
    fname: badges.js
    path: C:\xampp\htdocs\aroot\base\js\badges.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531498.548
    size: 5184
  removeBadges:
    name: removeBadges
    code: "function removeBadges(dParent, level) {\r

      \  while (Badges.length > level) {\r

      \    let badge = Badges.pop();\r

      \    mRemove(iDiv(badge));\r

      \  }\r

      }\r\n"
    sig: function removeBadges(dParent, level){}
    region: Badges (badges.js)
    filename: badges.js
    type: func
    fname: badges.js
    path: C:\xampp\htdocs\aroot\base\js\badges.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531498.548
    size: 5184
  addBadge:
    name: addBadge
    code: "function addBadge(dParent, level, clickHandler, animateRubberband =
      false) {\r

      \  let fg = '#00000080';\r

      \  let textColor = 'white';\r

      \  let isText = true; let isOmoji = false;\r

      \  let i = level - 1;\r

      \  let key = levelKeys[i];\r

      \  let k = replaceAll(key, ' ', '-');\r

      \  let item = getItem(k);\r

      \  let label = item.label = \"level \" + i;\r

      \  let h = window.innerHeight;\r

      \  let sz = h / 14;\r

      \  let options = _simpleOptions({ w: sz, h: sz, fz: sz / 4, fzPic:
      sz / 2, bg: levelColors[i], fg: textColor });\r

      \  options.handler = clickHandler;\r

      \  let d = makeItemDiv(item, options);\r

      \  mAppend(dParent, d);\r

      \  item.index = i;\r

      \  Badges.push(item);\r

      \  return arrLast(Badges);\r

      }\r\n"
    sig: function addBadge(dParent, level, clickHandler, animateRubberband =
      false){}
    region: Badges (badges.js)
    filename: badges.js
    type: func
    fname: badges.js
    path: C:\xampp\htdocs\aroot\base\js\badges.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531498.548
    size: 5184
  showBadges:
    name: showBadges
    code: "function showBadges(dParent, level, clickHandler, maxlevel) {\r

      \  clearElement(dParent);\r

      \  Badges = [];\r

      \  for (let i = 1; i <= maxlevel + 1; i++) {\r

      \    if (i > level) {\r

      \      let b = addBadge(dParent, i, clickHandler, false);\r

      \      b.live.div.style.opacity = .25;\r

      \      b.achieved = false;\r

      \    } else {\r

      \      let b = addBadge(dParent, i, clickHandler, true);\r

      \      b.achieved = true;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function showBadges(dParent, level, clickHandler, maxlevel){}
    region: Badges (badges.js)
    filename: badges.js
    type: func
    fname: badges.js
    path: C:\xampp\htdocs\aroot\base\js\badges.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531498.548
    size: 5184
  showBadgesX:
    name: showBadgesX
    code: "function showBadgesX(dParent, level, clickHandler, maxLevel) {\r

      \  clearElement(dParent);\r

      \  badges = [];\r

      \  for (let i = 1; i <= maxLevel + 1; i++) {\r

      \    if (i > level) {\r

      \      let b = addBadge(dParent, i, clickHandler, false);\r

      \      b.live.div.style.opacity = .25;\r

      \      b.achieved = false;\r

      \    } else {\r

      \      let b = addBadge(dParent, i, clickHandler, true);\r

      \      b.achieved = true;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function showBadgesX(dParent, level, clickHandler, maxLevel){}
    region: badges (badges.js)
    filename: badges.js
    type: func
    fname: badges.js
    path: C:\xampp\htdocs\aroot\belinda\js\badges.js
    datetime: 2021-11-15-06-49
    timestamp: 1636987744437.6084
    size: 4157
  onClickBadgeX:
    name: onClickBadgeX
    code: "function onClickBadgeX(ev, uname, gname) {\r

      \  stop_game(); \r

      \  let item = evToItem(ev);\r

      \  setBadgeLevel(item.index);\r

      \  set_startlevel(uname, gname, item.index);\r

      \  auxOpen = false;\r

      \  TOMain = setTimeout(open_prompt, 100);\r

      }\r\n"
    sig: function onClickBadgeX(ev, uname, gname){}
    region: Badges (badges.js)
    filename: badges.js
    type: func
    fname: badges.js
    path: C:\xampp\htdocs\aroot\base\js\badges.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531498.548
    size: 5184
  setBadgeLevel:
    name: setBadgeLevel
    code: "function setBadgeLevel(i, uname, gname, maxlevel) {\r

      \  level = i;\r

      \  if (isEmpty(Badges)) showBadges(dLeiste, level, ev =>
      onClickBadgeX(ev, uname, gname), maxlevel);\r

      \  for (let iBadge = 0; iBadge < level; iBadge++) {\r

      \    let d1 = iDiv(Badges[iBadge]);\r

      \    d1.style.opacity = .75;\r

      \    d1.style.border = 'transparent';\r

      \    d1.children[1].innerHTML = '* ' + (iBadge + 1) + ' *'; \r

      \    d1.children[0].style.color = 'white';\r

      \  }\r

      \  let d = iDiv(Badges[level]);\r

      \  d.style.border = '1px solid #00000080';\r

      \  d.style.opacity = 1;\r

      \  d.children[1].innerHTML = 'Level ' + (level + 1); \r

      \  d.children[0].style.color = 'white';\r

      \  for (let iBadge = level + 1; iBadge < Badges.length; iBadge++)
      {\r

      \    let d1 = iDiv(Badges[iBadge]);\r

      \    d1.style.border = 'transparent';\r

      \    d1.style.opacity = .25;\r

      \    d1.children[1].innerHTML = 'Level ' + (iBadge + 1); \r

      \    d1.children[0].style.color = 'black';\r

      \  }\r

      \  return level;\r

      }\r\n"
    sig: function setBadgeLevel(i, uname, gname, maxlevel){}
    region: Badges (badges.js)
    filename: badges.js
    type: func
    fname: badges.js
    path: C:\xampp\htdocs\aroot\base\js\badges.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531498.548
    size: 5184
  mpOver:
    name: mpOver
    code: "function mpOver(d, dParent, fz, color, picStyle) {\r

      \  let b = getRect(dParent);\r

      \  let cx = b.w / 2 + b.x;\r

      \  let cy = b.h / 2 + b.y;\r

      \  d.style.top = picStyle == 'segoeBlack' ? ((cy - fz * 2 / 3) +
      'px') : ((cy - fz / 2) + 'px');\r

      \  d.style.left = picStyle == 'segoeBlack' ? ((cx - fz / 3) + 'px')
      : ((cx - fz * 1.2 / 2) + 'px');\r

      \  d.style.color = color;\r

      \  d.style.fontSize = fz + 'px';\r

      \  d.style.display = 'block';\r

      \  let { isText, isOmoji } = getParamsForMaPicStyle(picStyle);\r

      \  d.style.fontFamily = isString(isOmoji) ? isOmoji : isOmoji ?
      'emoOpen' : 'emoNoto';\r

      \  return d;\r

      }\r\n"
    sig: function mpOver(d, dParent, fz, color, picStyle){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  getParamsForMaPicStyle:
    name: getParamsForMaPicStyle
    code: "function getParamsForMaPicStyle(desc = 'segoeBlack') {\r

      \  desc = desc.toLowerCase();\r

      \  switch (desc) {\r

      \    case 'twittertext': return { isText: true, isOmoji: false };\r

      \    case 'twitterimage': return { isText: false, isOmoji: false
      };\r

      \    case 'openmojitext': return { isText: true, isOmoji: true };\r

      \    case 'openmojiimage': return { isText: false, isOmoji: true
      };\r

      \    case 'openmojiblacktext': return { isText: true, isOmoji:
      'openmoBlack' };\r

      \    case 'openmojitextblack': return { isText: true, isOmoji:
      'openmoBlack' };\r

      \    case 'segoe': return { isText: true, isOmoji: 'segoe ui emoji'
      };\r

      \    case 'segoeblack': return { isText: true, isOmoji: 'segoe ui
      symbol' };\r

      \    default: return { isText: true, isOmoji: false };\r

      \  }\r

      }\r\n"
    sig: function getParamsForMaPicStyle(desc = 'segoeBlack'){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  markerSuccess:
    name: markerSuccess
    code: "function markerSuccess() { return createMarker(MarkerId.SUCCESS); }\r\n"
    sig: function markerSuccess(){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  markerFail:
    name: markerFail
    code: "function markerFail() { return createMarker(MarkerId.FAIL); }\r\n"
    sig: function markerFail(){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  createMarker:
    name: createMarker
    code: "function createMarker(markerId) {\r

      \  let d = mCreate('div');\r

      \  d.innerHTML = MarkerText[markerId]; \r

      \  mClass(d, 'feedbackMarker');\r

      \  document.body.appendChild(d);\r

      \  Markers.push(d);\r

      \  return d;\r

      }\r\n"
    sig: function createMarker(markerId){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  mRemoveGracefully:
    name: mRemoveGracefully
    code: "function mRemoveGracefully(elem) {\r

      \  mClass(elem, 'aniFastDisappear');\r

      \  setTimeout(() => mRemove(elem), 500);\r

      }\r\n"
    sig: function mRemoveGracefully(elem){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  clearMarkers:
    name: clearMarkers
    code: "function clearMarkers() {\r

      \  for (const m of Markers) {\r

      \    mRemove(m);\r

      \  }\r

      \  Markers = [];\r

      }\r\n"
    sig: function clearMarkers(){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  removeMarkers:
    name: removeMarkers
    code: "function removeMarkers() {\r

      \  for (const m of Markers) {\r

      \    mRemoveGracefully(m);\r

      \  }\r

      \  Markers = [];\r

      }\r\n"
    sig: function removeMarkers(){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  onClickMusic:
    name: onClickMusic
    code: "function onClickMusic() {\r

      \  toggleSound('mozart');\r

      \  if (isPlaying()) { hide0('bPlay'); show0('bPause'); } else {
      hide0('bPause'); show0('bPlay'); }\r

      }\r\n"
    sig: function onClickMusic(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\canyonglen\onclick.js
    datetime: 2021-07-30-18-15
    timestamp: 1627694153781.5308
    size: 292
  hide0:
    name: hide0
    code: "function hide0(id) { mBy(id).style.display = \"none\"; }\r\n"
    sig: function hide0(id){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  beep:
    name: beep
    code: "function beep(vol, freq, duration) {\r

      \  console.log('sollte beepen!!!'); \r

      \  if (nundef(_AUDIOCONTEXT)) _AUDIOCONTEXT = new AudioContext();\r

      \  let a = _AUDIOCONTEXT;\r

      \  v = a.createOscillator()\r

      \  u = a.createGain()\r

      \  v.connect(u)\r

      \  v.frequency.value = freq\r

      \  v.type = \"square\";\r

      \  u.connect(a.destination)\r

      \  u.gain.value = vol * 0.01\r

      \  v.start(a.currentTime)\r

      \  v.stop(a.currentTime + duration * 0.001);\r

      }\r\n"
    sig: function beep(vol, freq, duration){}
    region: audio (audio.js)
    filename: audio.js
    type: func
    fname: audio.js
    path: C:\xampp\htdocs\aroot\base\js\audio.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531596.1858
    size: 2442
  playsound:
    name: playsound
    code: "function playsound() { playSound(...arguments); }\r\n"
    sig: function playsound(){}
    region: audio (audio.js)
    filename: audio.js
    type: func
    fname: audio.js
    path: C:\xampp\htdocs\aroot\base\js\audio.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531596.1858
    size: 2442
  playSound:
    name: playSound
    code: "function playSound(key, wait = true) {\r

      \  if (!wait) _qSound = [];\r

      \  _enqSound(key);\r

      \  if (_idleSound) { _idleSound = false; _deqSound(); }\r

      }\r\n"
    sig: function playSound(key, wait = true){}
    region: audio (audio.js)
    filename: audio.js
    type: func
    fname: audio.js
    path: C:\xampp\htdocs\aroot\base\js\audio.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531596.1858
    size: 2442
  pauseSound:
    name: pauseSound
    code: "function pauseSound() {\r

      \  _qSound = [];\r

      \  if (_loaded && isdef(_sndPlayer)) {\r

      \    clearTimeout(TOSound);\r

      \    _sndPlayer.onended = null;\r

      \    _sndPlayer.onpause = whenSoundPaused;\r

      \    _sndPlayer.pause();\r

      \  }\r

      }\r\n"
    sig: function pauseSound(){}
    region: audio (audio.js)
    filename: audio.js
    type: func
    fname: audio.js
    path: C:\xampp\htdocs\aroot\base\js\audio.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531596.1858
    size: 2442
  whenSoundPaused:
    name: whenSoundPaused
    code: "function whenSoundPaused() {\r

      \  _sndPlayer = null;\r

      \  _sndPlayerIdle = true;\r

      \  _loaded = false;\r

      \  if (!isEmpty(_qSound)) { _deqSound(); } else { _idleSound = true;
      }\r

      }\r\n"
    sig: function whenSoundPaused(){}
    region: audio (audio.js)
    filename: audio.js
    type: func
    fname: audio.js
    path: C:\xampp\htdocs\aroot\base\js\audio.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531596.1858
    size: 2442
  _enqSound:
    name: _enqSound
    code: "function _enqSound(key) { if (nundef(_qSound)) _qSound = [];
      _qSound.push(key); }\r\n"
    sig: function _enqSound(key){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _deqSound:
    name: _deqSound
    code: "function _deqSound() {\r

      \  let key = _qSound.shift();\r

      \  let url = _audioSources[key];\r

      \  _sndPlayer = new Audio(url);\r

      \  _sndPlayer.onended = _whenSoundPaused;\r

      \  _sndPlayer.onloadeddata = () => { _loaded = true;
      _sndPlayer.play(); };\r

      \  _sndPlayer.load();\r

      }\r\n"
    sig: function _deqSound(){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isPlaying:
    name: isPlaying
    code: "function isPlaying() { return DA.isSound; }\r\n"
    sig: function isPlaying(){}
    region: audio (audio.js)
    filename: audio.js
    type: func
    fname: audio.js
    path: C:\xampp\htdocs\aroot\base\js\audio.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531596.1858
    size: 2442
  toggleSound:
    name: toggleSound
    code: "function toggleSound(key) {\r

      \  if (DA.isSound == true) { pauseSound(); DA.isSound = false;
      return; }\r

      \  playSound(key);\r

      \  DA.isSound = true;\r

      }\r\n"
    sig: function toggleSound(key){}
    region: audio (audio.js)
    filename: audio.js
    type: func
    fname: audio.js
    path: C:\xampp\htdocs\aroot\base\js\audio.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465531596.1858
    size: 2442
  loadAssets:
    name: loadAssets
    code: "async function loadAssets(path) {\r

      \  Daat = {}; DA = {}; Items = {}; ItemsByKey = {};\r

      \  if (CLEAR_LOCAL_STORAGE) localStorage.clear();\r

      \  C52 = await localOrRoute('C52', path + 'c52.yaml');\r

      \  symbolDict = Syms = await localOrRoute('syms', path +
      'allSyms.yaml');\r

      \  SymKeys = Object.keys(Syms);\r

      \  ByGroupSubgroup = await localOrRoute('gsg', path +
      'symGSG.yaml');\r

      \  WordP = await route_path_yaml_dict(path + 'math/allWP.yaml');\r

      \  Speech = new SpeechAPI('E');\r

      \  KeySets = getKeySets();\r

      \  TOMan = new TimeoutManager();\r

      }\r\n"
    sig: async function loadAssets(path){}
    region: funcs (assets.js)
    filename: assets.js
    type: func
    fname: assets.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\assets.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590421.3257
    size: 581
  updatePreviewImages:
    name: updatePreviewImages
    code: "function updatePreviewImages(dParent, files) {\r

      \  for (const f of files) {\r

      \    let sz = 200;\r

      \    let d = mDiv(dParent, { display: 'inline', w: sz, h: sz });\r

      \    updatePreviewImage(d, f, sz);\r

      \  }\r

      }\r\n"
    sig: function updatePreviewImages(dParent, files){}
    region: classes (boardEditor.js)
    filename: boardEditor.js
    type: func
    fname: boardEditor.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\boardEditor.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590422.3264
    size: 1065
  updatePreviewImage:
    name: updatePreviewImage
    code: "function updatePreviewImage(dParent, file, sz = 768) {\r

      \  const url = URL.createObjectURL(file);\r

      \  dParent.innerHTML = `<img src=\"${url}\" height=${sz}/>`;\r

      }\r\n"
    sig: function updatePreviewImage(dParent, file, sz = 768){}
    region: classes (boardEditor.js)
    filename: boardEditor.js
    type: func
    fname: boardEditor.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\boardEditor.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590422.3264
    size: 1065
  onClickTempleLobby:
    name: onClickTempleLobby
    code: "function onClickTempleLobby(){\r

      \  START_IN_MENU=true;\r

      \  initGameScreen();\r

      }\r\n"
    sig: function onClickTempleLobby(){}
    region: const (lobby.js)
    filename: lobby.js
    type: func
    fname: lobby.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\lobby.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590423.3274
    size: 1645
  initLobby:
    name: initLobby
    code: "function initLobby(username) {\r

      \  hide('dGameScreen'); hide('dButtons');\r

      \  show('dMainContent'); show('dLobby'); show('dHeader');
      show('dTempleLobby');\r

      \  setTitle('Welcome to the Lobby');\r

      \  if (isString(username)) { sendLogin(username); console.log('...',
      username) }\r

      \  else username = U.name;\r

      \  sendBtn.onclick = e => {\r

      \    e.preventDefault();\r

      \    if (!messageInput.value) {\r

      \      if (GENERATE_EMPTY_MESSAGES) messageInput.value = 'hallo';\r

      \      else return console.log('must supply a message');\r

      \    }\r

      \    const message = { author: username, date: formatDate(new
      Date()), content: messageInput.value };\r

      \    console.log('sending message', message)\r

      \    sendUserMessage(message);\r

      \    messageInput.value = '';\r

      \  };\r

      }\r\n"
    sig: function initLobby(username){}
    region: const (lobby.js)
    filename: lobby.js
    type: func
    fname: lobby.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\lobby.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590423.3274
    size: 1645
  autoGameScreen:
    name: autoGameScreen
    code: "function autoGameScreen(){\r\n}\r\n"
    sig: function autoGameScreen(){}
    region: const (lobby.js)
    filename: lobby.js
    type: func
    fname: lobby.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\lobby.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590423.3274
    size: 1645
  initGameScreen:
    name: initGameScreen
    code: "function initGameScreen() {\r

      \ 
      console.log('IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII!!!!!!!!!!')\r

      \  hide('dMainContent');hide('dHeader');show('dButtons');\r

      \  show('dGameScreen'); \r

      \  console.log('game should be starting!!!');\r

      \  if (isdef(G)) {\r

      \    console.log('should just go back to game!');\r

      \  } else {\r

      \    _start();\r

      \  }\r

      }\r\n"
    sig: function initGameScreen(){}
    region: const (lobby.js)
    filename: lobby.js
    type: func
    fname: lobby.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\lobby.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590423.3274
    size: 1645
  initSocket:
    name: initSocket
    code: "function initSocket() {\r

      \  Socket = io(SERVERURL);\r

      \  Socket.on('clientId', handleClientIdSendLogin);\r

      \  Socket.on('db', handleDB);\r

      \  Socket.on('userJoined', handleUserJoined);\r

      \  Socket.on('userLeft', handleUserLeft);\r

      \  Socket.on('userMessage', handleUserMessage);\r

      \  Socket.on('gameState', handleGameState);\r

      \  Socket.on('dbUpdate',handleDbUpdate);\r

      \  Socket.on('mouse', handleMouse);\r

      \  Socket.on('show', handleShow);\r

      \  Socket.on('hide', handleHide);\r

      }\r\n"
    sig: function initSocket(){}
    region: prelim (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleUserJoined:
    name: handleUserJoined
    code: "function handleUserJoined(data) {\r

      \  logClientReceive('userJoined', data.username)\r

      }\r\n"
    sig: function handleUserJoined(data){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleUserLeft:
    name: handleUserLeft
    code: "function handleUserLeft(data) {\r

      \  logClientReceive('userLeft', data.id)\r

      }\r\n"
    sig: function handleUserLeft(data){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleUserMessage:
    name: handleUserMessage
    code: "function handleUserMessage(data) {\r

      \  logClientReceive('userMessage', data.username);\r

      }\r\n"
    sig: function handleUserMessage(data){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  sendLogin:
    name: sendLogin
    code: "function sendLogin(username) { logClientSend('login', username);
      Socket.emit('login', { data: username }); }\r\n"
    sig: function sendLogin(username){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  sendUserMessage:
    name: sendUserMessage
    code: "function sendUserMessage(data) { logClientSend('userMessage',
      data.username); Socket.emit('userMessage', { data: data }); }\r\n"
    sig: function sendUserMessage(data){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  sendReset:
    name: sendReset
    code: "function sendReset(settings) { logClientSend('reset', Username);
      Socket.emit('reset', { settings: settings, username: Username }); }\r\n"
    sig: function sendReset(settings){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  sendFilename:
    name: sendFilename
    code: "function sendFilename(msg) { logClientSend('filename', msg);
      Socket.emit('filename', { msg }); }\r\n"
    sig: function sendFilename(msg){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  sendSettings:
    name: sendSettings
    code: "function sendSettings(){\r

      \  logClientSend('settings', G.settings);\r

      \  console.assert(G.settings == Settings.o,\"wrong settings
      object!!!!!!!\")\r

      \ 
      Socket.emit('settings',{settings:G.settings,nFields:calcNFields(G.setting\
      s)});\r

      }\r\n"
    sig: function sendSettings(){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  sendSettingsWithBoardImage:
    name: sendSettingsWithBoardImage
    code: "function sendSettingsWithBoardImage(pack){\r

      \  logClientSend('sendSettingsWithBoardImage', pack.filename);\r

      \  console.log('pack',pack);\r

      \  Socket.emit('settingsWithBoardImage', pack);\r

      }\r\n"
    sig: function sendSettingsWithBoardImage(pack){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  logClientSend:
    name: logClientSend
    code: "function logClientSend(type, data) {\r

      \  MessageCounter++;\r

      \  if (VerboseSocket) console.log('#' + MessageCounter, 'send',
      type, data)\r

      }\r\n"
    sig: function logClientSend(type, data){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  logClientReceive:
    name: logClientReceive
    code: "function logClientReceive(type, data) {\r

      \  MessageCounter++;\r

      \  if (VerboseSocket) console.log('#' + MessageCounter, 'receive',
      type, data)\r

      }\r\n"
    sig: function logClientReceive(type, data){}
    region: done (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleInitialPosition:
    name: handleInitialPosition
    code: "function handleInitialPosition(data) {\r

      \  console.log('initial position:', data);\r

      }\r\n"
    sig: function handleInitialPosition(data){}
    region: old (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleMessage:
    name: handleMessage
    code: "function handleMessage(data) {\r

      \  if (isdef(data.data)) data = data.data;\r

      \  logClientReceive('userMessage', data);\r

      \  if (isString(data)) {\r

      \    data.type = messageTypes.LEFT;\r

      \  } else if (data.author === U.username) {\r

      \    data.type = messageTypes.RIGHT;\r

      \  } else {\r

      \    data.type = messageTypes.LEFT;\r

      \  }\r

      \  messages.push(data);\r

      \  displayMessages();\r

      \  let chatWindow = mBy('dLobby')\r

      \  chatWindow.scrollTop = chatWindow.scrollHeight;\r

      }\r\n"
    sig: function handleMessage(data){}
    region: old (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleGameOver:
    name: handleGameOver
    code: "function handleGameOver(data) {\r

      \  if (!gameActive) {\r

      \    return;\r

      \  }\r

      \  data = JSON.parse(data);\r

      \  gameActive = false;\r

      \  if (data.winner === playerNumber) {\r

      \    alert('You Win!');\r

      \  } else {\r

      \    alert('You Lose :(');\r

      \  }\r

      }\r\n"
    sig: function handleGameOver(data){}
    region: old (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleGameCode:
    name: handleGameCode
    code: "function handleGameCode(gameCode) {\r

      \  gameCodeDisplay.innerText = gameCode;\r

      }\r\n"
    sig: function handleGameCode(gameCode){}
    region: old (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleUnknownCode:
    name: handleUnknownCode
    code: "function handleUnknownCode() {\r

      \  reset();\r

      \  alert('Unknown Game Code')\r

      }\r\n"
    sig: function handleUnknownCode(){}
    region: old (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  handleTooManyPlayers:
    name: handleTooManyPlayers
    code: "function handleTooManyPlayers() {\r

      \  reset();\r

      \  alert('This game is already in progress');\r

      }\r\n"
    sig: function handleTooManyPlayers(){}
    region: old (socket.js)
    filename: socket.js
    type: func
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  start:
    name: start
    code: "function start() { let uname = DA.secretuser =
      localStorage.getItem('uname'); if (isdef(uname)) U = { name: uname };
      phpPost({ app: 'simple' }, 'assets'); }\r\n"
    sig: function start(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  openLogin:
    name: openLogin
    code: "function openLogin() {\r

      \  show(dLogin); hide(dLobby); hide(dGameScreen);\r

      \  loginBtn.onclick = e => {\r

      \    e.preventDefault();\r

      \    if (!usernameInput.value) { return console.log('Must supply a
      username'); }\r

      \    let username = usernameInput.value;\r

      \    username = username.toLowerCase();\r

      \    localStorage.setItem('username', username);\r

      \    establishUsername(username);\r

      \  };\r

      \  document.body.style.opacity = 1;\r

      }\r\n"
    sig: function openLogin(){}
    region: funcs (client.js)
    filename: client.js
    type: func
    fname: client.js
    path: C:\xampp\htdocs\aroot\_other\perlen\client.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590409.3306
    size: 2888
  establishUsername:
    name: establishUsername
    code: "function establishUsername(username) {\r

      \  hide(dLogin);\r

      \  Username = username;\r

      \  initSocket();\r

      }\r\n"
    sig: function establishUsername(username){}
    region: funcs (client.js)
    filename: client.js
    type: func
    fname: client.js
    path: C:\xampp\htdocs\aroot\_other\perlen\client.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590409.3306
    size: 2888
  fakeInitSocket:
    name: fakeInitSocket
    code: "function fakeInitSocket() { ClientId = '12345';
      fakeLogin(Username);  }\r\n"
    sig: function fakeInitSocket(){}
    region: funcs (client.js)
    filename: client.js
    type: func
    fname: client.js
    path: C:\xampp\htdocs\aroot\_other\perlen\client.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590409.3306
    size: 2888
  handleClientIdSendLogin:
    name: handleClientIdSendLogin
    code: "function handleClientIdSendLogin(data) {\r

      \  ClientId = data.clientId;\r

      \  sendLogin(Username);\r

      }\r\n"
    sig: function handleClientIdSendLogin(data){}
    region: funcs (client.js)
    filename: client.js
    type: func
    fname: client.js
    path: C:\xampp\htdocs\aroot\_other\perlen\client.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590409.3306
    size: 2888
  fakeLogin:
    name: fakeLogin
    code: "async function fakeLogin(username) {\r

      \  DB = await route_path_yaml_dict('./data.yaml');\r

      \  PerlenDict = await route_path_yaml_dict('./perlenDict.yaml');\r

      \  initSocket();\r

      \  setUserData(username);\r

      \  enterLobby();\r

      }\r\n"
    sig: async function fakeLogin(username){}
    region: funcs (client.js)
    filename: client.js
    type: func
    fname: client.js
    path: C:\xampp\htdocs\aroot\_other\perlen\client.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590409.3306
    size: 2888
  handleDB:
    name: handleDB
    code: "function handleDB(data) {\r

      \  DB = data.DB;\r

      \  setUserData(Username);\r

      \  enterLobby();\r

      }\r\n"
    sig: function handleDB(data){}
    region: funcs (client.js)
    filename: client.js
    type: func
    fname: client.js
    path: C:\xampp\htdocs\aroot\_other\perlen\client.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590409.3306
    size: 2888
  setUserData:
    name: setUserData
    code: "function setUserData(username) {\r

      \  if (nundef(DB.users[username])) {\r

      \    U = DB.users[username] = jsCopy(DB.users.guest0);\r

      \    U.id = U.name = U.username = Username = username;\r

      \  } else {\r

      \    U = DB.users[username]; U.name = U.username = Username =
      U.id;\r

      \  }\r

      \  U.clientId = ClientId;\r

      }\r\n"
    sig: function setUserData(username){}
    region: funcs (client.js)
    filename: client.js
    type: func
    fname: client.js
    path: C:\xampp\htdocs\aroot\_other\perlen\client.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590409.3306
    size: 2888
  enterLobby:
    name: enterLobby
    code: "function enterLobby() {\r

      \  console.assert(isdef(DB) && isdef(U), 'ENTERLOBBY DB U NOT
      CORRECT!!!')\r

      \  if (JUST_PERLEN_GAME) { simplestPerlenGame(); }\r

      }\r\n"
    sig: function enterLobby(){}
    region: funcs (client.js)
    filename: client.js
    type: func
    fname: client.js
    path: C:\xampp\htdocs\aroot\_other\perlen\client.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590409.3306
    size: 2888
  isSimple:
    name: isSimple
    code: "function isSimple(x) { return !isDict(x) && !isList(x); }\r\n"
    sig: function isSimple(x){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  pPanel:
    name: pPanel
    code: "function pPanel(dParent){return mDiv(dParent, { bg: 'random', rounding:
      10, margin: 10, padding: 10 });}\r\n"
    sig: function pPanel(dParent){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  pKeyVal:
    name: pKeyVal
    code: "function pKeyVal(dParent,k,val){let d=pPanel(dParent);d.innerHTML=k+':';
      pVal(d,val); return d;}\r\n"
    sig: function pKeyVal(dParent,k,val){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  pVal:
    name: pVal
    code: "function pVal(dParent,val){let d=pPanel(dParent);d.innerHTML=val; return
      d;}\r\n"
    sig: function pVal(dParent,val){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  present_simple:
    name: present_simple
    code: "function present_simple(dParent, item) {\r

      \  if (isDict(item)) {\r

      \    mCenterCenterFlex(dParent);\r

      \    for (const k in item) {\r

      \      let d = mDiv(dParent, { bg: 'random', rounding: 10, margin:
      10, padding: 10 }, null, k+': ');\r

      \      val = item[k];\r

      \      present_simple(d, val);\r

      \    }\r

      \  } else if (isList(item)) {\r

      \    mCenterCenterFlex(dParent);\r

      \    item.map(x => present_simple(dParent, x));\r

      \  } else {\r

      \    dParent.innerHTML += item;\r

      \  }\r

      }\r\n"
    sig: function present_simple(dParent, item){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  present_simple0:
    name: present_simple0
    code: "function present_simple0(dParent, item) {\r

      \  if (isDict(item)) {\r

      \    let d = mDiv(dParent, { bg: 'random', rounding: 10, margin: 10,
      padding: 10 });\r

      \    mCenterCenterFlex(d);\r

      \    for (const k in item) {\r

      \      d.innerHTML += k;\r

      \      present_simple0(d,item[k]);\r

      \    }\r

      \  } else if (isList(item)) {\r

      \    let d = mDiv(dParent, { bg: 'random', rounding: 10, margin: 10,
      padding: 10 });\r

      \    mCenterCenterFlex(d);\r

      \    item.map(x => present_simple0(d, x));\r

      \  } else {\r

      \    let d = mDiv(dParent, { bg: 'random', rounding: 10, margin: 10,
      padding: 10 });\r

      \    d.innerHTML = item;\r

      \  }\r

      }\r\n"
    sig: function present_simple0(dParent, item){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  present_structured1:
    name: present_structured1
    code: "function present_structured1(dParent, item) {\r

      \  if (isDict(item)) {\r

      \    mCenterCenterFlex(dParent);\r

      \    for (const k in item) {\r

      \      val = item[k];\r

      \      let d = mDiv(dParent, { bg: 'random', rounding: 10, margin:
      10, padding: 10 }, null, k);\r

      \      present_structured1(d, val);\r

      \    }\r

      \    return dParent;\r

      \  } else if (isList(item)) {\r

      \    let d = mDiv(dParent, { bg: 'random', rounding: 10, margin: 10,
      padding: 10 });\r

      \    mCenterCenterFlex(d);\r

      \    item.map(x => present_structured1(d, x));\r

      \    return d;\r

      \  } else {\r

      \    let d = mDiv(dParent, { bg: 'random', rounding: 10, margin: 10,
      padding: 10 });\r

      \    d.innerHTML = item;\r

      \    return d;\r

      \  }\r

      }\r\n"
    sig: function present_structured1(dParent, item){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  present_structured:
    name: present_structured
    code: "function present_structured(dParent, item) {\r

      \  let d = mDiv(dParent, { bg: 'random', rounding: 10, margin: 10,
      padding: 10 });\r

      \  if (isDict(item)) {\r

      \    mCenterCenterFlex(d);\r

      \    for (const k in item) {\r

      \      val = item[k];\r

      \      let d1 = mDiv(d, { bg: 'random', rounding: 10, margin: 10,
      padding: 10 }, null, k);\r

      \      present_structured(d1, val);\r

      \    }\r

      \  } else if (isList(item)) {\r

      \    mCenterCenterFlex(d);\r

      \    item.map(x => present_structured(d, x));\r

      \  } else {\r

      \    d.innerHTML = item;\r

      \  }\r

      }\r\n"
    sig: function present_structured(dParent, item){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  present_auto:
    name: present_auto
    code: "function present_auto(dParent, state) {\r

      \  for (const k in state) {\r

      \    let d = mDiv(dParent, { bg: 'random', rounding: 10, margin: 10,
      padding: 10 }, null, k);\r

      \    let val = state[k];\r

      \    if (isSimple(val)) {\r

      \      d.innerHTML += ': ' + val;\r

      \    } else if (isList(val)) {\r

      \      mCenterCenterFlex(d);\r

      \      val.map(x => mDiv(d, { bg: 'random', rounding: 10, margin:
      10, padding: 10 }, null, x));\r

      \    } else {\r

      \      mCenterCenterFlex(d);\r

      \      present_auto(d, val);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function present_auto(dParent, state){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  present_state_player:
    name: present_state_player
    code: "function present_state_player(dParent, state, player) {\r

      \  if (!lookup(state, ['players', player])) { console.log('no state
      for player', player); return; }\r

      \  let dplayer = mDiv(dParent, { bg: 'random', rounding: 10, margin:
      10, padding: 10 }, null, 'your items:');\r

      \  present_auto(dplayer, state.players[player]);\r

      \  let drest = mDiv(dParent, { bg: 'random', rounding: 10, margin:
      10, padding: 10 }, null, 'table');\r

      \  present_auto(drest, state);\r

      }\r\n"
    sig: function present_state_player(dParent, state, player){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\_other\caristo\present.js
    datetime: 2021-08-21-07-45
    timestamp: 1629557148658.1592
    size: 3826
  mMenuButton:
    name: mMenuButton
    code: "function mMenuButton(dParent, caption, styles) {\r

      \  caption = valf(caption, UnicodeSymbols.menu);\r

      \  styles = valf(styles, { fz: 30, margin: 4 });\r

      \  let b = mButton(caption, null, dParent, styles, 'mybutton',
      getUID('b'));\r

      \  return b;\r

      }\r\n"
    sig: function mMenuButton(dParent, caption, styles){}
    region: funcs (justStyling.js)
    filename: justStyling.js
    type: func
    fname: justStyling.js
    path: C:\xampp\htdocs\aroot\_other\caristo\justStyling.js
    datetime: 2021-08-23-06-53
    timestamp: 1629726833494.8606
    size: 410
  mMenuLine:
    name: mMenuLine
    code: "function mMenuLine(dParent, styles) {\r

      \  let menuStyles = isdef(styles) ? styles : { bg: wblack, alpha:
      .65 };\r

      \  let dMenu = mDiv(dParent, menuStyles);\r

      \  return dMenu;\r

      }\r\n"
    sig: function mMenuLine(dParent, styles){}
    region: funcs (justStyling.js)
    filename: justStyling.js
    type: func
    fname: justStyling.js
    path: C:\xampp\htdocs\aroot\_other\caristo\justStyling.js
    datetime: 2021-08-23-06-53
    timestamp: 1629726833494.8606
    size: 410
  BoardToFen:
    name: BoardToFen
    code: "function BoardToFen() {\r

      \  var fenStr = '';\r

      \  var rank, file, sq, piece;\r

      \  var emptyCount = 0;\r

      \  for (rank = RANKS.RANK_8; rank >= RANKS.RANK_1; rank--) {\r

      \    emptyCount = 0;\r

      \    for (file = FILES.FILE_A; file <= FILES.FILE_H; file++) {\r

      \      sq = FR2SQ(file, rank);\r

      \      piece = brd_pieces[sq];\r

      \      if (piece == PIECES.EMPTY) {\r

      \        emptyCount++;\r

      \      } else {\r

      \        if (emptyCount != 0) {\r

      \          fenStr += String.fromCharCode('0'.charCodeAt() +
      emptyCount);\r

      \        }\r

      \        emptyCount = 0;\r

      \        fenStr += PceChar[piece];\r

      \      }\r

      \    }\r

      \    if (emptyCount != 0) {\r

      \      fenStr += String.fromCharCode('0'.charCodeAt() +
      emptyCount);\r

      \    }\r

      \    if (rank != RANKS.RANK_1) {\r

      \      fenStr += '/'\r

      \    } else {\r

      \      fenStr += ' ';\r

      \    }\r

      \  }\r

      \  fenStr += SideChar[brd_side] + ' ';\r

      \  if (brd_enPas == SQUARES.NO_SQ) {\r

      \    fenStr += '- '\r

      \  } else {\r

      \    fenStr += PrSq(brd_enPas) + ' ';\r

      \  }\r

      \  if (brd_castlePerm == 0) {\r

      \    fenStr += '- '\r

      \  } else {\r

      \    if (brd_castlePerm & CASTLEBIT.WKCA) fenStr += 'K';\r

      \    if (brd_castlePerm & CASTLEBIT.WQCA) fenStr += 'Q';\r

      \    if (brd_castlePerm & CASTLEBIT.BKCA) fenStr += 'k';\r

      \    if (brd_castlePerm & CASTLEBIT.BQCA) fenStr += 'q';\r

      \  }\r

      \  fenStr += ' ';\r

      \  fenStr += brd_fiftyMove;\r

      \  fenStr += ' ';\r

      \  var tempHalfMove = brd_hisPly;\r

      \  if (brd_side == COLOURS.BLACK) {\r

      \    tempHalfMove--;\r

      \  }\r

      \  fenStr += tempHalfMove / 2;\r

      \  return fenStr;\r

      }\r\n"
    sig: function BoardToFen(){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  CheckBoard:
    name: CheckBoard
    code: "function CheckBoard() {\r

      \  var t_pceNum = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r

      \  var t_material = [0, 0];\r

      \  var sq64, t_piece, t_pce_num, sq120, colour, pcount;\r

      \  for (t_piece = PIECES.wP; t_piece <= PIECES.bK; ++t_piece) {\r

      \    for (t_pce_num = 0; t_pce_num < brd_pceNum[t_piece];
      ++t_pce_num) {\r

      \      sq120 = brd_pList[PCEINDEX(t_piece, t_pce_num)];\r

      \      if (brd_pieces[sq120] != t_piece) {\r

      \        console.log('Error Pce Lists');\r

      \        return BOOL.FALSE;\r

      \      }\r

      \    }\r

      \  }\r

      \  for (sq64 = 0; sq64 < 64; ++sq64) {\r

      \    sq120 = SQ120(sq64);\r

      \    t_piece = brd_pieces[sq120];\r

      \    t_pceNum[t_piece]++;\r

      \    t_material[PieceCol[t_piece]] += PieceVal[t_piece];\r

      \  }\r

      \  for (t_piece = PIECES.wP; t_piece <= PIECES.bK; ++t_piece) {\r

      \    if (t_pceNum[t_piece] != brd_pceNum[t_piece]) {\r

      \      console.log('Error t_pceNum');\r

      \      return BOOL.FALSE;\r

      \    }\r

      \  }\r

      \  if (t_material[COLOURS.WHITE] != brd_material[COLOURS.WHITE] ||
      t_material[COLOURS.BLACK] != brd_material[COLOURS.BLACK]) {\r

      \    console.log('Error t_material');\r

      \    return BOOL.FALSE;\r

      \  }\r

      \  if (brd_side != COLOURS.WHITE && brd_side != COLOURS.BLACK) {\r

      \    console.log('Error brd_side');\r

      \    return BOOL.FALSE;\r

      \  }\r

      \  if (GeneratePosKey() != brd_posKey) {\r

      \    console.log('Error brd_posKey');\r

      \    return BOOL.FALSE;\r

      \  }\r

      \  return BOOL.TRUE;\r

      }\r\n"
    sig: function CheckBoard(){}
    region: board (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  printGameLine:
    name: printGameLine
    code: "function printGameLine() {\r

      \  var moveNum = 0;\r

      \  var gameLine = \"\";\r

      \  for (moveNum = 0; moveNum < brd_hisPly; ++moveNum) {\r

      \    gameLine += PrMove(brd_history[moveNum].move) + \" \";\r

      \  }\r

      \  return $.trim(gameLine);\r

      }\r\n"
    sig: function printGameLine(){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  LineMatch:
    name: LineMatch
    code: "function LineMatch(BookLine, gameline) {\r

      \  for (var len = 0; len < gameline.length; ++len) {\r

      \    if (len >= BookLine.length) { return BOOL.FALSE; }\r

      \    if (gameline[len] != BookLine[len]) { return BOOL.FALSE; }\r

      \  }\r

      \  return BOOL.TRUE;\r

      }\r\n"
    sig: function LineMatch(BookLine, gameline){}
    region: using (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  BookMove:
    name: BookMove
    code: "function BookMove() {\r

      \  var gameLine = printGameLine();\r

      \  var bookMoves = [];\r

      \  var lengthOfLineHack = gameLine.length;\r

      \  if (gameLine.length == 0) lengthOfLineHack--;\r

      \  for (var bookLineNum = 0; bookLineNum < brd_bookLines.length;
      ++bookLineNum) {\r

      \    if (LineMatch(brd_bookLines[bookLineNum], gameLine) ==
      BOOL.TRUE) {\r

      \      var move = brd_bookLines[bookLineNum].substr(lengthOfLineHack
      + 1, 4);\r

      \      if (move.length == 4) {\r

      \        var from = SqFromAlg(move.substr(0, 2));\r

      \        var to = SqFromAlg(move.substr(2, 2));\r

      \        varInternalMove = ParseMove(from, to);\r

      \        bookMoves.push(varInternalMove);\r

      \      }\r

      \    }\r

      \  }\r

      \  console.log(\"Total + \" + bookMoves.length + \" moves in
      array\");\r

      \  if (bookMoves.length == 0) return NOMOVE;\r

      \  var num = Math.floor(Math.random() * bookMoves.length);\r

      \  return bookMoves[num];\r

      }\r\n"
    sig: function BookMove(){}
    region: using (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PrintPceLists:
    name: PrintPceLists
    code: "function PrintPceLists() {\r

      \  var piece, pceNum;\r

      \  for (piece = PIECES.wP; piece <= PIECES.bK; ++piece) {\r

      \    for (pceNum = 0; pceNum < brd_pceNum[piece]; ++pceNum) {\r

      \      console.log(\"Piece \" + PceChar[piece] + \" on \" +
      PrSq(brd_pList[PCEINDEX(piece, pceNum)]));\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function PrintPceLists(){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  UpdateListsMaterial:
    name: UpdateListsMaterial
    code: "function UpdateListsMaterial() {\r

      \  var piece, sq, index, colour;\r

      \  for (index = 0; index < BRD_SQ_NUM; ++index) {\r

      \    sq = index;\r

      \    piece = brd_pieces[index];\r

      \    if (piece != PIECES.OFFBOARD && piece != PIECES.EMPTY) {\r

      \      colour = PieceCol[piece];\r

      \      brd_material[colour] += PieceVal[piece];\r

      \      brd_pList[PCEINDEX(piece, brd_pceNum[piece])] = sq;\r

      \      brd_pceNum[piece]++;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function UpdateListsMaterial(){}
    region: using (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  GeneratePosKey:
    name: GeneratePosKey
    code: "function GeneratePosKey() {\r

      \  var sq = 0;\r

      \  var finalKey = 0;\r

      \  var piece = PIECES.EMPTY;\r

      \  for (sq = 0; sq < BRD_SQ_NUM; ++sq) {\r

      \    piece = brd_pieces[sq];\r

      \    if (piece != PIECES.EMPTY && piece != SQUARES.OFFBOARD) {\r

      \      finalKey ^= PieceKeys[(piece * 120) + sq];\r

      \    }\r

      \  }\r

      \  if (brd_side == COLOURS.WHITE) {\r

      \    finalKey ^= SideKey;\r

      \  }\r

      \  if (brd_enPas != SQUARES.NO_SQ) {\r

      \    finalKey ^= PieceKeys[brd_enPas];\r

      \  }\r

      \  finalKey ^= CastleKeys[brd_castlePerm];\r

      \  return finalKey;\r

      }\r\n"
    sig: function GeneratePosKey(){}
    region: board (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PrintBoard:
    name: PrintBoard
    code: "function PrintBoard() {\r

      \  return;\r

      \  var sq, file, rank, piece;\r

      \  console.log(\"\\nGame Board:\\n\");\r

      \  for (rank = RANKS.RANK_8; rank >= RANKS.RANK_1; rank--) {\r

      \    var line = ((rank + 1) + \"  \");\r

      \    for (file = FILES.FILE_A; file <= FILES.FILE_H; file++) {\r

      \      sq = FR2SQ(file, rank);\r

      \      piece = brd_pieces[sq];\r

      \      line += (\" \" + PceChar[piece] + \" \");\r

      \    }\r

      \    console.log(line);\r

      \  }\r

      \  console.log(\"\");\r

      \  var line = \"   \";\r

      \  for (file = FILES.FILE_A; file <= FILES.FILE_H; file++) {\r

      \    line += (' ' + String.fromCharCode('a'.charCodeAt() + file) + '
      ');\r

      \  }\r

      \  console.log(line);\r

      \  console.log(\"side:\" + SideChar[brd_side]);\r

      \  console.log(\"enPas:\" + brd_enPas);\r

      \  line = \"\";\r

      \  if (brd_castlePerm & CASTLEBIT.WKCA) line += 'K';\r

      \  if (brd_castlePerm & CASTLEBIT.WQCA) line += 'Q';\r

      \  if (brd_castlePerm & CASTLEBIT.BKCA) line += 'k';\r

      \  if (brd_castlePerm & CASTLEBIT.BQCA) line += 'q';\r

      \  console.log(\"castle:\" + line);\r

      \  console.log(\"key:\" + brd_posKey.toString(16));\r

      }\r\n"
    sig: function PrintBoard(){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ResetBoard:
    name: ResetBoard
    code: "function ResetBoard() {\r

      \  var index = 0;\r

      \  for (index = 0; index < BRD_SQ_NUM; ++index) {\r

      \    brd_pieces[index] = SQUARES.OFFBOARD;\r

      \  }\r

      \  for (index = 0; index < 64; ++index) {\r

      \    brd_pieces[SQ120(index)] = PIECES.EMPTY;\r

      \  }\r

      \  for (index = 0; index < 14 * 120; ++index) {\r

      \    brd_pList[index] = PIECES.EMPTY;\r

      \  }\r

      \  for (index = 0; index < 2; ++index) {\r

      \    brd_material[index] = 0;\r

      \  }\r

      \  for (index = 0; index < 13; ++index) {\r

      \    brd_pceNum[index] = 0;\r

      \  }\r

      \  brd_side = COLOURS.BOTH;\r

      \  brd_enPas = SQUARES.NO_SQ;\r

      \  brd_fiftyMove = 0;\r

      \  brd_ply = 0;\r

      \  brd_hisPly = 0;\r

      \  brd_castlePerm = 0;\r

      \  brd_posKey = 0;\r

      \  brd_moveListStart[brd_ply] = 0;\r

      }\r\n"
    sig: function ResetBoard(){}
    region: board (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ParseFen:
    name: ParseFen
    code: "function ParseFen(fen) {\r

      \  var rank = RANKS.RANK_8;\r

      \  var file = FILES.FILE_A;\r

      \  var piece = 0;\r

      \  var count = 0;\r

      \  var i = 0;\r

      \  var sq64 = 0;\r

      \  var sq120 = 0;\r

      \  var fenCnt = 0;\r

      \  ResetBoard();\r

      \  while ((rank >= RANKS.RANK_1) && fenCnt < fen.length) {\r

      \    count = 1;\r

      \    switch (fen[fenCnt]) {\r

      \      case 'p': piece = PIECES.bP; break;\r

      \      case 'r': piece = PIECES.bR; break;\r

      \      case 'n': piece = PIECES.bN; break;\r

      \      case 'b': piece = PIECES.bB; break;\r

      \      case 'k': piece = PIECES.bK; break;\r

      \      case 'q': piece = PIECES.bQ; break;\r

      \      case 'P': piece = PIECES.wP; break;\r

      \      case 'R': piece = PIECES.wR; break;\r

      \      case 'N': piece = PIECES.wN; break;\r

      \      case 'B': piece = PIECES.wB; break;\r

      \      case 'K': piece = PIECES.wK; break;\r

      \      case 'Q': piece = PIECES.wQ; break;\r

      \      case '1':\r

      \      case '2':\r

      \      case '3':\r

      \      case '4':\r

      \      case '5':\r

      \      case '6':\r

      \      case '7':\r

      \      case '8':\r

      \        piece = PIECES.EMPTY;\r

      \        count = fen[fenCnt].charCodeAt() - '0'.charCodeAt();\r

      \        break;\r

      \      case '/':\r

      \      case ' ':\r

      \        rank--;\r

      \        file = FILES.FILE_A;\r

      \        fenCnt++;\r

      \        continue;\r

      \      default:\r

      \        printf(\"FEN error \\n\");\r

      \        return;\r

      \    }\r

      \    for (i = 0; i < count; i++) {\r

      \      sq64 = rank * 8 + file;\r

      \      sq120 = SQ120(sq64);\r

      \      if (piece != PIECES.EMPTY) {\r

      \        brd_pieces[sq120] = piece;\r

      \      }\r

      \      file++;\r

      \    }\r

      \    fenCnt++;\r

      \  }\r

      \  brd_side = (fen[fenCnt] == 'w') ? COLOURS.WHITE :
      COLOURS.BLACK;\r

      \  fenCnt += 2;\r

      \  for (i = 0; i < 4; i++) {\r

      \    if (fen[fenCnt] == ' ') {\r

      \      break;\r

      \    }\r

      \    switch (fen[fenCnt]) {\r

      \      case 'K': brd_castlePerm |= CASTLEBIT.WKCA; break;\r

      \      case 'Q': brd_castlePerm |= CASTLEBIT.WQCA; break;\r

      \      case 'k': brd_castlePerm |= CASTLEBIT.BKCA; break;\r

      \      case 'q': brd_castlePerm |= CASTLEBIT.BQCA; break;\r

      \      default: break;\r

      \    }\r

      \    fenCnt++;\r

      \  }\r

      \  fenCnt++;\r

      \  if (fen[fenCnt] != '-') {\r

      \    file = fen[fenCnt].charCodeAt() - 'a'.charCodeAt();\r

      \    rank = fen[fenCnt + 1].charCodeAt() - '1'.charCodeAt();\r

      \    console.log(\"fen[fenCnt]:\" + fen[fenCnt] + \" File:\" + file
      + \" Rank:\" + rank);\r

      \    brd_enPas = FR2SQ(file, rank);\r

      \  }\r

      \  brd_posKey = GeneratePosKey();\r

      \  UpdateListsMaterial();\r

      }\r\n"
    sig: function ParseFen(fen){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SqAttacked:
    name: SqAttacked
    code: "function SqAttacked(sq, side) {\r

      \  var pce;\r

      \  var t_sq;\r

      \  var index;\r

      \  if (side == COLOURS.WHITE) {\r

      \    if (brd_pieces[sq - 11] == PIECES.wP || brd_pieces[sq - 9] ==
      PIECES.wP) {\r

      \      return BOOL.TRUE;\r

      \    }\r

      \  } else {\r

      \    if (brd_pieces[sq + 11] == PIECES.bP || brd_pieces[sq + 9] ==
      PIECES.bP) {\r

      \      return BOOL.TRUE;\r

      \    }\r

      \  }\r

      \  for (index = 0; index < 8; ++index) {\r

      \    pce = brd_pieces[sq + KnDir[index]];\r

      \    if (pce != SQUARES.OFFBOARD && PieceKnight[pce] == BOOL.TRUE &&
      PieceCol[pce] == side) {\r

      \      return BOOL.TRUE;\r

      \    }\r

      \  }\r

      \  for (index = 0; index < 4; ++index) {\r

      \    dir = RkDir[index];\r

      \    t_sq = sq + dir;\r

      \    pce = brd_pieces[t_sq];\r

      \    while (pce != SQUARES.OFFBOARD) {\r

      \      if (pce != PIECES.EMPTY) {\r

      \        if (PieceRookQueen[pce] == BOOL.TRUE && PieceCol[pce] ==
      side) {\r

      \          return BOOL.TRUE;\r

      \        }\r

      \        break;\r

      \      }\r

      \      t_sq += dir;\r

      \      pce = brd_pieces[t_sq];\r

      \    }\r

      \  }\r

      \  for (index = 0; index < 4; ++index) {\r

      \    dir = BiDir[index];\r

      \    t_sq = sq + dir;\r

      \    pce = brd_pieces[t_sq];\r

      \    while (pce != SQUARES.OFFBOARD) {\r

      \      if (pce != PIECES.EMPTY) {\r

      \        if (PieceBishopQueen[pce] == BOOL.TRUE && PieceCol[pce] ==
      side) {\r

      \          return BOOL.TRUE;\r

      \        }\r

      \        break;\r

      \      }\r

      \      t_sq += dir;\r

      \      pce = brd_pieces[t_sq];\r

      \    }\r

      \  }\r

      \  for (index = 0; index < 8; ++index) {\r

      \    pce = brd_pieces[sq + KiDir[index]];\r

      \    if (pce != SQUARES.OFFBOARD && PieceKing[pce] == BOOL.TRUE &&
      PieceCol[pce] == side) {\r

      \      return BOOL.TRUE;\r

      \    }\r

      \  }\r

      \  return BOOL.FALSE;\r

      }\r\n"
    sig: function SqAttacked(sq, side){}
    region: board (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PrintSqAttacked:
    name: PrintSqAttacked
    code: "function PrintSqAttacked() {\r

      \  var sq, file, rank, piece;\r

      \  console.log(\"\\nAttacked:\\n\");\r

      \  for (rank = RANKS.RANK_8; rank >= RANKS.RANK_1; rank--) {\r

      \    var line = ((rank + 1) + \"  \");\r

      \    for (file = FILES.FILE_A; file <= FILES.FILE_H; file++) {\r

      \      sq = FR2SQ(file, rank);\r

      \      if (SqAttacked(sq, COLOURS.BLACK) == BOOL.TRUE) piece =
      \"X\";\r

      \      else piece = \"-\";\r

      \      line += (\" \" + piece + \" \");\r

      \    }\r

      \    console.log(line);\r

      \  }\r

      \  console.log(\"\");\r

      }\r\n"
    sig: function PrintSqAttacked(){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PCEINDEX:
    name: PCEINDEX
    code: "function PCEINDEX(pce, pceNum) { return (pce * 10 + pceNum); }\r\n"
    sig: function PCEINDEX(pce, pceNum){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  fromRCMxToNumArrSq:
    name: fromRCMxToNumArrSq
    code: "function fromRCMxToNumArrSq(f,r) { \r

      \   return ( (21 + (f) ) + ( (r) * 10 ) );\r

      }\r\n"
    sig: function fromRCMxToNumArrSq(f,r){}
    region: var (defs.js)
    filename: defs.js
    type: func
    fname: defs.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\defs.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867023.6345
    size: 12386
  SQ64:
    name: SQ64
    code: "function SQ64(sq120) { return Sq120ToSq64[(sq120)]; }\r\n"
    sig: function SQ64(sq120){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SQ120:
    name: SQ120
    code: "function SQ120(sq64) { return Sq64ToSq120[(sq64)]; }\r\n"
    sig: function SQ120(sq64){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MIRROR64:
    name: MIRROR64
    code: "function MIRROR64(sq) { return Mirror64[sq]; }\r\n"
    sig: function MIRROR64(sq){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SQOFFBOARD:
    name: SQOFFBOARD
    code: "function SQOFFBOARD(sq) { if (FilesBrd[sq] == SQUARES.OFFBOARD) return
      BOOL.TRUE; return BOOL.FALSE; }\r\n"
    sig: function SQOFFBOARD(sq){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  HASH_PCE:
    name: HASH_PCE
    code: "function HASH_PCE(pce, sq) { brd_posKey ^= PieceKeys[pce * 120 + sq];
      }\r\n"
    sig: function HASH_PCE(pce, sq){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  HASH_CA:
    name: HASH_CA
    code: "function HASH_CA() { brd_posKey ^= CastleKeys[brd_castlePerm]; }\r\n"
    sig: function HASH_CA(){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  HASH_SIDE:
    name: HASH_SIDE
    code: "function HASH_SIDE() { brd_posKey ^= SideKey; }\r\n"
    sig: function HASH_SIDE(){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  HASH_EP:
    name: HASH_EP
    code: "function HASH_EP() { brd_posKey ^= PieceKeys[brd_enPas]; }\r\n"
    sig: function HASH_EP(){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RAND_32:
    name: RAND_32
    code: "function RAND_32() { return (Math.floor((Math.random() * 255) + 1) << 23)
      | (Math.floor((Math.random() * 255) + 1) << 16) |
      (Math.floor((Math.random() * 255) + 1) << 8) | Math.floor((Math.random() *
      255) + 1); }\r\n"
    sig: function RAND_32(){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  FROMSQ:
    name: FROMSQ
    code: "function FROMSQ(m) { return (m & 0x7F); }\r\n"
    sig: function FROMSQ(m){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  TOSQ:
    name: TOSQ
    code: "function TOSQ(m) { return (((m) >> 7) & 0x7F); }\r\n"
    sig: function TOSQ(m){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  CAPTURED:
    name: CAPTURED
    code: "function CAPTURED(m) { return (((m) >> 14) & 0xF); }\r\n"
    sig: function CAPTURED(m){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PROMOTED:
    name: PROMOTED
    code: "function PROMOTED(m) { return (((m) >> 20) & 0xF); }\r\n"
    sig: function PROMOTED(m){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MaterialDraw:
    name: MaterialDraw
    code: "function MaterialDraw() {\r

      \  if (0 == brd_pceNum[PIECES.wR] && 0 == brd_pceNum[PIECES.bR] && 0
      == brd_pceNum[PIECES.wQ] && 0 == brd_pceNum[PIECES.bQ]) {\r

      \    if (0 == brd_pceNum[PIECES.bB] && 0 == brd_pceNum[PIECES.wB])
      {\r

      \      if (brd_pceNum[PIECES.wN] < 3 && brd_pceNum[PIECES.bN] < 3) {
      return BOOL.TRUE; }\r

      \    } else if (0 == brd_pceNum[PIECES.wN] && 0 ==
      brd_pceNum[PIECES.bN]) {\r

      \      if (Math.abs(brd_pceNum[PIECES.wB] - brd_pceNum[PIECES.bB]) <
      2) { return BOOL.TRUE; }\r

      \    } else if ((brd_pceNum[PIECES.wN] < 3 && 0 ==
      brd_pceNum[PIECES.wB]) || (brd_pceNum[PIECES.wB] == 1 && 0 ==
      brd_pceNum[PIECES.wN])) {\r

      \      if ((brd_pceNum[PIECES.bN] < 3 && 0 == brd_pceNum[PIECES.bB])
      || (brd_pceNum[PIECES.bB] == 1 && 0 == brd_pceNum[PIECES.bN])) { return
      BOOL.TRUE; }\r

      \    }\r

      \  } else if (0 == brd_pceNum[PIECES.wQ] && 0 ==
      brd_pceNum[PIECES.bQ]) {\r

      \    if (brd_pceNum[PIECES.wR] == 1 && brd_pceNum[PIECES.bR] == 1)
      {\r

      \      if ((brd_pceNum[PIECES.wN] + brd_pceNum[PIECES.wB]) < 2 &&
      (brd_pceNum[PIECES.bN] + brd_pceNum[PIECES.bB]) < 2) { return BOOL.TRUE;
      }\r

      \    } else if (brd_pceNum[PIECES.wR] == 1 && 0 ==
      brd_pceNum[PIECES.bR]) {\r

      \      if ((brd_pceNum[PIECES.wN] + brd_pceNum[PIECES.wB] == 0) &&
      (((brd_pceNum[PIECES.bN] + brd_pceNum[PIECES.bB]) == 1) ||
      ((brd_pceNum[PIECES.bN] + brd_pceNum[PIECES.bB]) == 2))) { return
      BOOL.TRUE; }\r

      \    } else if (brd_pceNum[PIECES.bR] == 1 && 0 ==
      brd_pceNum[PIECES.wR]) {\r

      \      if ((brd_pceNum[PIECES.bN] + brd_pceNum[PIECES.bB] == 0) &&
      (((brd_pceNum[PIECES.wN] + brd_pceNum[PIECES.wB]) == 1) ||
      ((brd_pceNum[PIECES.wN] + brd_pceNum[PIECES.wB]) == 2))) { return
      BOOL.TRUE; }\r

      \    }\r

      \  }\r

      \  return BOOL.FALSE;\r

      }\r\n"
    sig: function MaterialDraw(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PawnsInit:
    name: PawnsInit
    code: "function PawnsInit() {\r

      \  var index = 0;\r

      \  for (index = 0; index < 10; ++index) {\r

      \    PawnRanksWhite[index] = RANKS.RANK_8;\r

      \    PawnRanksBlack[index] = RANKS.RANK_1;\r

      \  }\r

      \  pce = PIECES.wP;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    if (RanksBrd[sq] < PawnRanksWhite[FilesBrd[sq] + 1]) {\r

      \      PawnRanksWhite[FilesBrd[sq] + 1] = RanksBrd[sq];\r

      \    }\r

      \  }\r

      \  pce = PIECES.bP;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    if (RanksBrd[sq] > PawnRanksBlack[FilesBrd[sq] + 1]) {\r

      \      PawnRanksBlack[FilesBrd[sq] + 1] = RanksBrd[sq];\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function PawnsInit(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  EvalPosition:
    name: EvalPosition
    code: "function EvalPosition() {\r

      \  var pce;\r

      \  var pceNum;\r

      \  var sq;\r

      \  var score = brd_material[COLOURS.WHITE] -
      brd_material[COLOURS.BLACK];\r

      \  var file;\r

      \  var rank;\r

      \  if (0 == brd_pceNum[PIECES.wP] && 0 == brd_pceNum[PIECES.bP] &&
      MaterialDraw() == BOOL.TRUE) {\r

      \    return 0;\r

      \  }\r

      \  PawnsInit();\r

      \  pce = PIECES.wP;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score += PawnTable[SQ64(sq)];\r

      \    file = FilesBrd[sq] + 1;\r

      \    rank = RanksBrd[sq];\r

      \    if (PawnRanksWhite[file - 1] == RANKS.RANK_8 &&
      PawnRanksWhite[file + 1] == RANKS.RANK_8) {\r

      \      score += PawnIsolated;\r

      \    }\r

      \    if (PawnRanksBlack[file - 1] <= rank && PawnRanksBlack[file] <=
      rank && PawnRanksBlack[file + 1] <= rank) {\r

      \      score += PawnPassed[rank];\r

      \    }\r

      \  }\r

      \  pce = PIECES.bP;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score -= PawnTable[MIRROR64(SQ64(sq))];\r

      \    file = FilesBrd[sq] + 1;\r

      \    rank = RanksBrd[sq];\r

      \    if (PawnRanksBlack[file - 1] == RANKS.RANK_1 &&
      PawnRanksBlack[file + 1] == RANKS.RANK_1) {\r

      \      score -= PawnIsolated;\r

      \    }\r

      \    if (PawnRanksWhite[file - 1] >= rank && PawnRanksWhite[file] >=
      rank && PawnRanksWhite[file + 1] >= rank) {\r

      \      score -= PawnPassed[7 - rank];\r

      \    }\r

      \  }\r

      \  pce = PIECES.wN;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score += KnightTable[SQ64(sq)];\r

      \  }\r

      \  pce = PIECES.bN;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score -= KnightTable[MIRROR64(SQ64(sq))];\r

      \  }\r

      \  pce = PIECES.wB;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score += BishopTable[SQ64(sq)];\r

      \  }\r

      \  pce = PIECES.bB;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score -= BishopTable[MIRROR64(SQ64(sq))];\r

      \  }\r

      \  pce = PIECES.wR;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score += RookTable[SQ64(sq)];\r

      \    file = FilesBrd[sq] + 1;\r

      \    if (PawnRanksWhite[file] == RANKS.RANK_8) {\r

      \      if (PawnRanksBlack[file] == RANKS.RANK_1) {\r

      \        score += RookOpenFile;\r

      \      } else {\r

      \        score += RookSemiOpenFile;\r

      \      }\r

      \    }\r

      \  }\r

      \  pce = PIECES.bR;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score -= RookTable[MIRROR64(SQ64(sq))];\r

      \    file = FilesBrd[sq] + 1;\r

      \    if (PawnRanksBlack[file] == RANKS.RANK_1) {\r

      \      if (PawnRanksWhite[file] == RANKS.RANK_8) {\r

      \        score -= RookOpenFile;\r

      \      } else {\r

      \        score -= RookSemiOpenFile;\r

      \      }\r

      \    }\r

      \  }\r

      \  pce = PIECES.wQ;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score += RookTable[SQ64(sq)];\r

      \    file = FilesBrd[sq] + 1;\r

      \    if (PawnRanksWhite[file] == RANKS.RANK_8) {\r

      \      if (PawnRanksBlack[file] == RANKS.RANK_1) {\r

      \        score += QueenOpenFile;\r

      \      } else {\r

      \        score += QueenSemiOpenFile;\r

      \      }\r

      \    }\r

      \  }\r

      \  pce = PIECES.bQ;\r

      \  for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \    sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \    score -= RookTable[MIRROR64(SQ64(sq))];\r

      \    file = FilesBrd[sq] + 1;\r

      \    if (PawnRanksBlack[file] == RANKS.RANK_1) {\r

      \      if (PawnRanksWhite[file] == RANKS.RANK_8) {\r

      \        score -= QueenOpenFile;\r

      \      } else {\r

      \        score -= QueenSemiOpenFile;\r

      \      }\r

      \    }\r

      \  }\r

      \  pce = PIECES.wK;\r

      \  sq = brd_pList[PCEINDEX(pce, 0)];\r

      \  if ((brd_material[COLOURS.BLACK] <= ENDGAME_MAT)) {\r

      \    score += KingE[SQ64(sq)];\r

      \  } else {\r

      \    score += KingO[SQ64(sq)];\r

      \  }\r

      \  pce = PIECES.bK;\r

      \  sq = brd_pList[PCEINDEX(pce, 0)];\r

      \  if ((brd_material[COLOURS.WHITE] <= ENDGAME_MAT)) {\r

      \    score -= KingE[MIRROR64(SQ64(sq))];\r

      \  } else {\r

      \    score -= KingO[MIRROR64(SQ64(sq))];\r

      \  }\r

      \  if (brd_pceNum[PIECES.wB] >= 2) score += BishopPair;\r

      \  if (brd_pceNum[PIECES.bB] >= 2) score -= BishopPair;\r

      \  if (brd_side == COLOURS.WHITE) {\r

      \    return score;\r

      \  } else {\r

      \    return -score;\r

      \  }\r

      }\r\n"
    sig: function EvalPosition(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MIRROR120:
    name: MIRROR120
    code: "function MIRROR120(sq) {\r

      \  var file = MirrorFiles[FilesBrd[sq]];\r

      \  var rank = MirrorRanks[RanksBrd[sq]];\r

      \  return FR2SQ(file, rank);\r

      }\r\n"
    sig: function MIRROR120(sq){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  CheckResult:
    name: CheckResult
    code: "function CheckResult() {\r

      \  if (brd_fiftyMove > 100) {\r

      \    $(\"#GameStatus\").text(\"GAME DRAWN {fifty move rule}\");\r

      \    return BOOL.TRUE;\r

      \  }\r

      \  if (ThreeFoldRep() >= 2) {\r

      \    $(\"#GameStatus\").text(\"GAME DRAWN {3-fold repetition}\");\r

      \    return BOOL.TRUE;\r

      \  }\r

      \  if (DrawMaterial() == BOOL.TRUE) {\r

      \    $(\"#GameStatus\").text(\"GAME DRAWN {insufficient material to
      mate}\");\r

      \    return BOOL.TRUE;\r

      \  }\r

      \  GenerateMoves();\r

      \  var MoveNum = 0;\r

      \  var found = 0;\r

      \  for (MoveNum = brd_moveListStart[brd_ply]; MoveNum <
      brd_moveListStart[brd_ply + 1]; ++MoveNum) {\r

      \    if (MakeMove(brd_moveList[MoveNum]) == BOOL.FALSE) {\r

      \      continue;\r

      \    }\r

      \    found++;\r

      \    TakeMove();\r

      \    break;\r

      \  }\r

      \  $(\"#currentFenSpan\").text(BoardToFen());\r

      \  if (found != 0) return BOOL.FALSE;\r

      \  var InCheck = SqAttacked(brd_pList[PCEINDEX(Kings[brd_side], 0)],
      brd_side ^ 1);\r

      \  console.log('No Move Found, incheck:' + InCheck);\r

      \  if (InCheck == BOOL.TRUE) {\r

      \    if (brd_side == COLOURS.WHITE) {\r

      \      $(\"#GameStatus\").text(\"GAME OVER {black mates}\");\r

      \      GameController.winner = 'black';\r

      \      return BOOL.TRUE;\r

      \    } else {\r

      \      $(\"#GameStatus\").text(\"GAME OVER {white mates}\");\r

      \      GameController.winner = 'white';\r

      \      return BOOL.TRUE;\r

      \    }\r

      \  } else {\r

      \    $(\"#GameStatus\").text(\"GAME DRAWN {stalemate}\"); return
      BOOL.TRUE;\r

      \  }\r

      \  console.log('Returning False');\r

      \  return BOOL.FALSE;\r

      }\r\n"
    sig: function CheckResult(){}
    region: ablauf (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ClickedSquare:
    name: ClickedSquare
    code: "function ClickedSquare(pageX, pageY) {\r

      \  var position = $(\"#ChessBoard\").position();\r

      \  let dBoard = mBy('ChessBoard');\r

      \  let rBoard = setRectInt(dBoard);\r

      \  let dParent = mBy('ChessBoard').parentNode;\r

      \  let r = setRectInt(dParent);\r

      \  var workedX = Math.floor(position.left);\r

      \  var workedY = Math.floor(position.top);\r

      \  var pageX = Math.floor(pageX);\r

      \  var pageY = Math.floor(pageY);\r

      \  var file = Math.floor((pageX - workedX - r.l) / 60);\r

      \  var rank = 7 - Math.floor((pageY - workedY - r.t) / 60);\r

      \  var sq = FR2SQ(file, rank); \r

      \  if (GameController.BoardFlipped == BOOL.TRUE) {\r

      \    sq = MIRROR120(sq);\r

      \  }\r

      \  SetSqSelected(sq); \r

      \  return sq;\r

      }\r\n"
    sig: function ClickedSquare(pageX, pageY){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  CheckAndSet:
    name: CheckAndSet
    code: "function CheckAndSet() {\r

      \  if (CheckResult() != BOOL.TRUE) {\r

      \    GameController.GameOver = BOOL.FALSE;\r

      \    $(\"#GameStatus\").text('');\r

      \  } else {\r

      \    GameController.GameOver = BOOL.TRUE;\r

      \    GameController.GameSaved = BOOL.TRUE; \r

      \    let win = GameController.winner;\r

      \    lookupAddToList(GameController, ['games'], isdef(win) ? win :
      0);\r

      \  }\r

      \  ShowFenPosition();\r

      }\r\n"
    sig: function CheckAndSet(){}
    region: ablauf (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PreSearch:
    name: PreSearch
    code: "function PreSearch() {\r

      \  if (GameController.GameOver != BOOL.TRUE) {\r

      \    srch_thinking = BOOL.TRUE;\r

      \    StartThinking();\r

      \    setTimeout(function () { StartSearch(); }, 200);\r

      \  }\r

      }\r\n"
    sig: function PreSearch(){}
    region: ablauf (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MakeUserMove:
    name: MakeUserMove
    code: "function MakeUserMove() {\r

      \  if (UserMove.from != SQUARES.NO_SQ && UserMove.to !=
      SQUARES.NO_SQ) {\r

      \    console.log(\"User Move:\" + PrSq(UserMove.from) +
      PrSq(UserMove.to));\r

      \    var parsed = ParseMove(UserMove.from, UserMove.to);\r

      \    DeselectSq(UserMove.from);\r

      \    DeselectSq(UserMove.to);\r

      \    console.log(\"Parsed:\" + parsed);\r

      \    if (parsed != NOMOVE) {\r

      \      MakeMove(parsed);\r

      \      MoveGUIPiece(parsed);\r

      \      CheckAndSet();\r

      \      PreSearch();\r

      \    } else {\r

      \      ShowChessMessage('illegal move!', 1000);\r

      \    }\r

      \    UserMove.from = SQUARES.NO_SQ;\r

      \    UserMove.to = SQUARES.NO_SQ;\r

      \  }\r

      }\r\n"
    sig: function MakeUserMove(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  RemoveGUIPiece:
    name: RemoveGUIPiece
    code: "function RemoveGUIPiece(sq) {\r

      \  $(\".Piece\").each(function (index) {\r

      \    if ((RanksBrd[sq] == 7 - Math.round($(this).position().top /
      60)) && (FilesBrd[sq] == Math.round($(this).position().left / 60))) {\r

      \      $(this).remove();\r

      \    }\r

      \  });\r

      }\r\n"
    sig: function RemoveGUIPiece(sq){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddGUIPiece:
    name: AddGUIPiece
    code: "function AddGUIPiece(sq, pce) {\r

      \  var rank = RanksBrd[sq];\r

      \  var file = FilesBrd[sq];\r

      \  var rankName = \"rank\" + (rank + 1);\r

      \  var fileName = \"file\" + (file + 1);\r

      \  pieceFileName = \"../base/assets/images/chess/\" +
      SideChar[PieceCol[pce]] + PceChar[pce].toUpperCase() + \".png\";\r

      \  imageString = \"<image src=\\\"\" + pieceFileName + \"\\\"
      class=\\\"Piece clickElement \" + rankName + \" \" + fileName +
      \"\\\"/>\";\r

      \  $(\"#ChessBoard\").append(imageString);\r

      }\r\n"
    sig: function AddGUIPiece(sq, pce){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MoveGUIPiece:
    name: MoveGUIPiece
    code: "function MoveGUIPiece(move) {\r

      \  var from = FROMSQ(move);\r

      \  var to = TOSQ(move);\r

      \  var flippedFrom = from;\r

      \  var flippedTo = to;\r

      \  var epWhite = -10;\r

      \  var epBlack = 10;\r

      \  if (GameController.BoardFlipped == BOOL.TRUE) {\r

      \    flippedFrom = MIRROR120(from);\r

      \    flippedTo = MIRROR120(to);\r

      \    epWhite = 10;\r

      \    epBlack = -10;\r

      \  }\r

      \  if (move & MFLAGEP) {\r

      \    var epRemove;\r

      \    if (brd_side == COLOURS.BLACK) {\r

      \      epRemove = flippedTo + epWhite;\r

      \    } else {\r

      \      epRemove = flippedTo + epBlack;\r

      \    }\r

      \    console.log(\"en pas removing from \" + PrSq(epRemove));\r

      \    RemoveGUIPiece(epRemove);\r

      \  } else if (CAPTURED(move)) {\r

      \    RemoveGUIPiece(flippedTo);\r

      \  }\r

      \  var rank = RanksBrd[flippedTo];\r

      \  var file = FilesBrd[flippedTo];\r

      \  var rankName = \"rank\" + (rank + 1);\r

      \  var fileName = \"file\" + (file + 1);\r

      \  /*if(GameController.BoardFlipped == BOOL.TRUE) {\r

      \    rankName += \"flip\";\r

      \    fileName += \"flip\";\r

      \  }*/\r

      \  $(\".Piece\").each(function (index) {\r

      \    if ((RanksBrd[flippedFrom] == 7 -
      Math.round($(this).position().top / 60)) && (FilesBrd[flippedFrom] ==
      Math.round($(this).position().left / 60))) {\r

      \      $(this).removeClass();\r

      \      $(this).addClass(\"Piece clickElement \" + rankName + \" \" +
      fileName);\r

      \    }\r

      \  });\r

      \  if (move & MFLAGCA) {\r

      \    if (GameController.BoardFlipped == BOOL.TRUE) {\r

      \      switch (to) {\r

      \        case SQUARES.G1: RemoveGUIPiece(MIRROR120(SQUARES.H1));
      AddGUIPiece(MIRROR120(SQUARES.F1), PIECES.wR); break;\r

      \        case SQUARES.C1: RemoveGUIPiece(MIRROR120(SQUARES.A1));
      AddGUIPiece(MIRROR120(SQUARES.D1), PIECES.wR); break;\r

      \        case SQUARES.G8: RemoveGUIPiece(MIRROR120(SQUARES.H8));
      AddGUIPiece(MIRROR120(SQUARES.F8), PIECES.bR); break;\r

      \        case SQUARES.C8: RemoveGUIPiece(MIRROR120(SQUARES.A8));
      AddGUIPiece(MIRROR120(SQUARES.D8), PIECES.bR); break;\r

      \      }\r

      \    } else {\r

      \      switch (to) {\r

      \        case SQUARES.G1: RemoveGUIPiece(SQUARES.H1);
      AddGUIPiece(SQUARES.F1, PIECES.wR); break;\r

      \        case SQUARES.C1: RemoveGUIPiece(SQUARES.A1);
      AddGUIPiece(SQUARES.D1, PIECES.wR); break;\r

      \        case SQUARES.G8: RemoveGUIPiece(SQUARES.H8);
      AddGUIPiece(SQUARES.F8, PIECES.bR); break;\r

      \        case SQUARES.C8: RemoveGUIPiece(SQUARES.A8);
      AddGUIPiece(SQUARES.D8, PIECES.bR); break;\r

      \      }\r

      \    }\r

      \  }\r

      \  var prom = PROMOTED(move);\r

      \  console.log(\"PromPce:\" + prom);\r

      \  if (prom != PIECES.EMPTY) {\r

      \    console.log(\"prom removing from \" + PrSq(flippedTo));\r

      \    RemoveGUIPiece(flippedTo);\r

      \    AddGUIPiece(flippedTo, prom);\r

      \  }\r

      \  printGameLine();\r

      }\r\n"
    sig: function MoveGUIPiece(move){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  DeselectSq:
    name: DeselectSq
    code: "function DeselectSq(sq) {\r

      \  if (GameController.BoardFlipped == BOOL.TRUE) {\r

      \    sq = MIRROR120(sq);\r

      \  }\r

      \  $(\".Square\").each(function (index) {\r

      \    if ((RanksBrd[sq] == 7 - Math.round($(this).position().top /
      60)) && (FilesBrd[sq] == Math.round($(this).position().left / 60))) {\r

      \      $(this).removeClass('SqSelected');\r

      \    }\r

      \  });\r

      }\r\n"
    sig: function DeselectSq(sq){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SetSqSelected:
    name: SetSqSelected
    code: "function SetSqSelected(sq) {\r

      \  if (GameController.BoardFlipped == BOOL.TRUE) {\r

      \    sq = MIRROR120(sq);\r

      \  }\r

      \  $(\".Square\").each(function (index) {\r

      \    if ((RanksBrd[sq] == 7 - Math.round($(this).position().top /
      60)) && (FilesBrd[sq] == Math.round($(this).position().left / 60))) {\r

      \      $(this).addClass('SqSelected');\r

      \    }\r

      \  });\r

      }\r\n"
    sig: function SetSqSelected(sq){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  StartSearch:
    name: StartSearch
    code: "function StartSearch() {\r

      \  srch_depth = MAXDEPTH;\r

      \  var t = $.now();\r

      \  var tt = $('#ThinkTimeChoice').val();\r

      \  if (nundef(tt)) tt = 6;\r

      \  srch_time = parseInt(tt) * 1000;\r

      \  SearchPosition();\r

      \  StopThinking();\r

      \  if (FLAG_HINT_ONLY) {\r

      \    FLAG_HINT_ONLY = false;\r

      \    let info = Move2FromTo(srch_best);\r

      \    let sq = info.from.sq;\r

      \    HintAnimation(sq, 1000);\r

      \  } else {\r

      \    MakeMove(srch_best);\r

      \    MoveGUIPiece(srch_best);\r

      \    CheckAndSet();\r

      \  }\r

      }\r\n"
    sig: function StartSearch(){}
    region: ablauf (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  NewGame:
    name: NewGame
    code: "function NewGame(fen) {\r

      \  if (nundef(fen)) fen = START_FEN;\r

      \  ParseFen(fen);\r

      \  PrintBoard();\r

      \  SetInitialBoardPieces();\r

      \  GameController.PlayerSide = brd_side;\r

      \  CheckAndSet();\r

      \  GameController.GameSaved = BOOL.FALSE;\r

      \  if (SideChar[brd_side] == 'b') {\r

      \    GameController.PlayerSide = brd_side ^ 1;\r

      \    PreSearch();\r

      \  }\r

      }\r\n"
    sig: function NewGame(fen){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  newGameAjax:
    name: newGameAjax
    code: "function newGameAjax() {\r

      \  console.log('new Game Ajax');\r

      \  $.ajax({\r

      \    url : \"insertNewGame.php\",\r

      \    cache: false\r

      \    }).done(function( html ) {\r

      \      console.log('result:' + html);\r

      \    });\r

      }\r\n"
    sig: function newGameAjax(){}
    region: var (gui.js)
    filename: gui.js
    type: func
    fname: gui.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\gui.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867000.6301
    size: 12774
  initBoardSquares:
    name: initBoardSquares
    code: "function initBoardSquares() {\r

      \  var light = 0;\r

      \  var rowName;\r

      \  var colName;\r

      \  var divString;\r

      \  var lightString;\r

      \  var lastLight=0;\r

      \  for(rowIter = ROWS.ROW_8; rowIter >= ROWS.ROW_1; rowIter--) {  \r

      \    light = lastLight ^ 1;\r

      \    lastLight ^= 1;\r

      \    rowName = \"row\" + (rowIter + 1);      \r

      \    for(colIter = COLUMNS.COL_A; colIter <= COLUMNS.COL_H;
      colIter++) {      \r

      \        colName = \"col\" + (colIter + 1); \r

      \        if(light==0) lightString=\"Light\";\r

      \      else lightString=\"Dark\";\r

      \      divString = \"<div class=\\\"Square clickElement \" + rowName
      + \" \" + colName + \" \" + lightString + \"\\\"/>\";\r

      \      light ^= 1;\r

      \      $(\"#Board\").append(divString);\r

      \    }\r

      \  }  \r

      }\r\n"
    sig: function initBoardSquares(){}
    region: var (gui.js)
    filename: gui.js
    type: func
    fname: gui.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\gui.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867000.6301
    size: 12774
  ClearAllPieces:
    name: ClearAllPieces
    code: "function ClearAllPieces() {\r

      \  $(\".Piece\").remove();\r

      }\r\n"
    sig: function ClearAllPieces(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SetInitialBoardPieces:
    name: SetInitialBoardPieces
    code: "function SetInitialBoardPieces() {\r

      \  var sq;\r

      \  var sq120;\r

      \  var file, rank;\r

      \  var rankName;\r

      \  var fileName;\r

      \  var imageString;\r

      \  var pieceFileName;\r

      \  var pce;\r

      \  ClearAllPieces();\r

      \  for (sq = 0; sq < 64; ++sq) {\r

      \    sq120 = SQ120(sq);\r

      \    pce = brd_pieces[sq120]; \r

      \    if (GameController.BoardFlipped == BOOL.TRUE) {\r

      \      sq120 = MIRROR120(sq120);\r

      \    }\r

      \    file = FilesBrd[sq120];\r

      \    rank = RanksBrd[sq120];\r

      \    if (pce >= PIECES.wP && pce <= PIECES.bK) {\r

      \      rankName = \"rank\" + (rank + 1);\r

      \      fileName = \"file\" + (file + 1);\r

      \      pieceFileName = \"../base/assets/images/chess/\" +
      SideChar[PieceCol[pce]] + PceChar[pce].toUpperCase() + \".png\";\r

      \      imageString = \"<image src=\\\"\" + pieceFileName + \"\\\"
      class=\\\"Piece \" + rankName + \" \" + fileName + \"\\\"/>\";\r

      \      $(\"#ChessBoard\").append(imageString);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function SetInitialBoardPieces(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SqFromAlg:
    name: SqFromAlg
    code: "function SqFromAlg(moveAlg) {\r

      \  if (moveAlg.length != 2) return SQUARES.NO_SQ;\r

      \  if (moveAlg[0] > 'h' || moveAlg[0] < 'a') return SQUARES.NO_SQ;\r

      \  if (moveAlg[1] > '8' || moveAlg[1] < '1') return SQUARES.NO_SQ;\r

      \  file = moveAlg[0].charCodeAt() - 'a'.charCodeAt();\r

      \  rank = moveAlg[1].charCodeAt() - '1'.charCodeAt();\r

      \  return FR2SQ(file, rank);\r

      }\r\n"
    sig: function SqFromAlg(moveAlg){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PrintMoveList:
    name: PrintMoveList
    code: "function PrintMoveList() {\r

      \  var index;\r

      \  var move;\r

      \  console.log(\"MoveList:\");\r

      \  for (index = brd_moveListStart[brd_ply]; index <
      brd_moveListStart[brd_ply + 1]; ++index) {\r

      \    move = brd_moveList[index];\r

      \    console.log(\"Move:\" + (index + 1) + \" > \" +
      PrMove(move));\r

      \  }\r

      }\r\n"
    sig: function PrintMoveList(){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PrSq:
    name: PrSq
    code: "function PrSq(sq) {\r

      \  var file = FilesBrd[sq];\r

      \  var rank = RanksBrd[sq];\r

      \  var sqStr = String.fromCharCode('a'.charCodeAt() + file) +
      String.fromCharCode('1'.charCodeAt() + rank);\r

      \  return sqStr;\r

      }\r\n"
    sig: function PrSq(sq){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PrMove:
    name: PrMove
    code: "function PrMove(move) {\r

      \  var MvStr;\r

      \  var ff = FilesBrd[FROMSQ(move)];\r

      \  var rf = RanksBrd[FROMSQ(move)];\r

      \  var ft = FilesBrd[TOSQ(move)];\r

      \  var rt = RanksBrd[TOSQ(move)];\r

      \  MvStr = String.fromCharCode('a'.charCodeAt() + ff) +
      String.fromCharCode('1'.charCodeAt() + rf) +\r

      \    String.fromCharCode('a'.charCodeAt() + ft) +
      String.fromCharCode('1'.charCodeAt() + rt)\r

      \  var promoted = PROMOTED(move);\r

      \  if (promoted != PIECES.EMPTY) {\r

      \    var pchar = 'q';\r

      \    if (PieceKnight[promoted] == BOOL.TRUE) {\r

      \      pchar = 'n';\r

      \    } else if (PieceRookQueen[promoted] == BOOL.TRUE &&
      PieceBishopQueen[promoted] == BOOL.FALSE) {\r

      \      pchar = 'r';\r

      \    } else if (PieceRookQueen[promoted] == BOOL.FALSE &&
      PieceBishopQueen[promoted] == BOOL.TRUE) {\r

      \      pchar = 'b';\r

      \    }\r

      \    MvStr += pchar;\r

      \  }\r

      \  return MvStr;\r

      }\r\n"
    sig: function PrMove(move){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ParseMove:
    name: ParseMove
    code: "function ParseMove(from, to) {\r

      \  GenerateMoves();\r

      \  var Move = NOMOVE;\r

      \  var PromPce = PIECES.EMPTY;\r

      \  var found = BOOL.FALSE;\r

      \  for (index = brd_moveListStart[brd_ply]; index <
      brd_moveListStart[brd_ply + 1]; ++index) {\r

      \    Move = brd_moveList[index];\r

      \    if (FROMSQ(Move) == from && TOSQ(Move) == to) {\r

      \      PromPce = PROMOTED(Move);\r

      \      if (PromPce != PIECES.EMPTY) {\r

      \        if ((PromPce == PIECES.wQ && brd_side == COLOURS.WHITE) ||
      (PromPce == PIECES.bQ && brd_side == COLOURS.BLACK)) {\r

      \          found = BOOL.TRUE;\r

      \          break;\r

      \        }\r

      \        continue;\r

      \      }\r

      \      found = BOOL.TRUE;\r

      \      break;\r

      \    }\r

      \  }\r

      \  if (found != BOOL.FALSE) {\r

      \    if (MakeMove(Move) == BOOL.FALSE) {\r

      \      return NOMOVE;\r

      \    }\r

      \    TakeMove();\r

      \    return Move;\r

      \  }\r

      \  return NOMOVE;\r

      }\r\n"
    sig: function ParseMove(from, to){}
    region: helpers (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  init:
    name: init
    code: "function init() {\r

      \  createPeeps()\r

      \  resize()\r

      \  gsap.ticker.add(render)\r

      \  window.addEventListener('resize', resize)\r

      }\r\n"
    sig: function init(){}
    region: const (crowd.js)
    filename: crowd.js
    type: func
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  InitColsRowsBrd:
    name: InitColsRowsBrd
    code: "function InitColsRowsBrd() {\r

      \  var index = 0;\r

      \  var col = COLUMNS.COL_A;\r

      \  var row = ROWS.ROW_1;\r

      \  var sq = SQUARES.A1;\r

      \  var sq64 = 0;\r

      \  for(index = 0; index < BRD_SQ_NUM; ++index) {\r

      \    ColBrd[index] = SQUARES.OFFBOARD;\r

      \    RowBrd[index] = SQUARES.OFFBOARD;\r

      \  }\r

      \  for(row = ROWS.ROW_1; row <= ROWS.ROW_8; ++row) {\r

      \    for(col = COLUMNS.COL_A; col <= COLUMNS.COL_H; ++col) {\r

      \      sq = fromRCMxToNumArrSq(col,row);\r

      \      ColBrd[sq] = col;\r

      \      RowBrd[sq] = row;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function InitColsRowsBrd(){}
    region: funcs (main.js)
    filename: main.js
    type: func
    fname: main.js
    path: C:\xampp\htdocs\aroot\_other\chmultOrig\js\main.js
    datetime: 2021-08-27-09-14
    timestamp: 1630080867046.6338
    size: 3496
  InitBoardVars:
    name: InitBoardVars
    code: "function InitBoardVars() {\r

      \  var index = 0;\r

      \  for (index = 0; index < MAXGAMEMOVES; index++) {\r

      \    brd_history.push({\r

      \      move: NOMOVE,\r

      \      castlePerm: 0,\r

      \      enPas: 0,\r

      \      fiftyMove: 0,\r

      \      posKey: 0\r

      \    });\r

      \  }\r

      \  for (index = 0; index < PVENTRIES; index++) {\r

      \    brd_PvTable.push({\r

      \      move: NOMOVE,\r

      \      posKey: 0\r

      \    });\r

      \  }\r

      }\r\n"
    sig: function InitBoardVars(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  EvalInit:
    name: EvalInit
    code: "function EvalInit() {\r

      \  var index = 0;\r

      \  for (index = 0; index < 10; ++index) {\r

      \    PawnRanksWhite[index] = 0;\r

      \    PawnRanksBlack[index] = 0;\r

      \  }\r

      }\r\n"
    sig: function EvalInit(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  InitHashKeys:
    name: InitHashKeys
    code: "function InitHashKeys() {\r

      \  var index = 0;\r

      \  for (index = 0; index < 13 * 120; ++index) {\r

      \    PieceKeys[index] = RAND_32();\r

      \  }\r

      \  SideKey = RAND_32();\r

      \  for (index = 0; index < 16; ++index) {\r

      \    CastleKeys[index] = RAND_32();\r

      \  }\r

      }\r\n"
    sig: function InitHashKeys(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  InitSq120To64:
    name: InitSq120To64
    code: "function InitSq120To64() {\r

      \  var index = 0;\r

      \  var file = FILES.FILE_A;\r

      \  var rank = RANKS.RANK_1;\r

      \  var sq = SQUARES.A1;\r

      \  var sq64 = 0;\r

      \  for (index = 0; index < BRD_SQ_NUM; ++index) {\r

      \    Sq120ToSq64[index] = 65;\r

      \  }\r

      \  for (index = 0; index < 64; ++index) {\r

      \    Sq64ToSq120[index] = 120;\r

      \  }\r

      \  for (rank = RANKS.RANK_1; rank <= RANKS.RANK_8; ++rank) {\r

      \    for (file = FILES.FILE_A; file <= FILES.FILE_H; ++file) {\r

      \      sq = FR2SQ(file, rank);\r

      \      Sq64ToSq120[sq64] = sq;\r

      \      Sq120ToSq64[sq] = sq64;\r

      \      sq64++;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function InitSq120To64(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ClearPiece:
    name: ClearPiece
    code: "function ClearPiece(sq) {\r

      \  var pce = brd_pieces[sq];\r

      \  var col = PieceCol[pce];\r

      \  var index = 0;\r

      \  var t_pceNum = -1;\r

      \  HASH_PCE(pce, sq);\r

      \  brd_pieces[sq] = PIECES.EMPTY;\r

      \  brd_material[col] -= PieceVal[pce];\r

      \  for (index = 0; index < brd_pceNum[pce]; ++index) {\r

      \    if (brd_pList[PCEINDEX(pce, index)] == sq) {\r

      \      t_pceNum = index;\r

      \      break;\r

      \    }\r

      \  }\r

      \  brd_pceNum[pce]--;\r

      \  brd_pList[PCEINDEX(pce, t_pceNum)] = brd_pList[PCEINDEX(pce,
      brd_pceNum[pce])];\r

      }\r\n"
    sig: function ClearPiece(sq){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddPiece:
    name: AddPiece
    code: "function AddPiece(sq, pce) {\r

      \  var col = PieceCol[pce];\r

      \  HASH_PCE(pce, sq);\r

      \  brd_pieces[sq] = pce;\r

      \  brd_material[col] += PieceVal[pce];\r

      \  brd_pList[PCEINDEX(pce, brd_pceNum[pce])] = sq;\r

      \  brd_pceNum[pce]++;\r

      }\r\n"
    sig: function AddPiece(sq, pce){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MovePiece:
    name: MovePiece
    code: "function MovePiece(from, to) {\r

      \  var index = 0;\r

      \  var pce = brd_pieces[from];\r

      \  var col = PieceCol[pce];\r

      \  HASH_PCE(pce, from);\r

      \  brd_pieces[from] = PIECES.EMPTY;\r

      \  HASH_PCE(pce, to);\r

      \  brd_pieces[to] = pce;\r

      \  for (index = 0; index < brd_pceNum[pce]; ++index) {\r

      \    if (brd_pList[PCEINDEX(pce, index)] == from) {\r

      \      brd_pList[PCEINDEX(pce, index)] = to;\r

      \      break;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function MovePiece(from, to){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MakeMove:
    name: MakeMove
    code: "function MakeMove(move) {\r

      \  var from = FROMSQ(move);\r

      \  var to = TOSQ(move);\r

      \  var side = brd_side;\r

      \  brd_history[brd_hisPly].posKey = brd_posKey;\r

      \  if ((move & MFLAGEP) != 0) {\r

      \    if (side == COLOURS.WHITE) {\r

      \      ClearPiece(to - 10);\r

      \    } else {\r

      \      ClearPiece(to + 10);\r

      \    }\r

      \  } else if ((move & MFLAGCA) != 0) {\r

      \    switch (to) {\r

      \      case SQUARES.C1:\r

      \        MovePiece(SQUARES.A1, SQUARES.D1);\r

      \        break;\r

      \      case SQUARES.C8:\r

      \        MovePiece(SQUARES.A8, SQUARES.D8);\r

      \        break;\r

      \      case SQUARES.G1:\r

      \        MovePiece(SQUARES.H1, SQUARES.F1);\r

      \        break;\r

      \      case SQUARES.G8:\r

      \        MovePiece(SQUARES.H8, SQUARES.F8);\r

      \        break;\r

      \      default: break;\r

      \    }\r

      \  }\r

      \  if (brd_enPas != SQUARES.NO_SQ) HASH_EP();\r

      \  HASH_CA();\r

      \  brd_history[brd_hisPly].move = move;\r

      \  brd_history[brd_hisPly].fiftyMove = brd_fiftyMove;\r

      \  brd_history[brd_hisPly].enPas = brd_enPas;\r

      \  brd_history[brd_hisPly].castlePerm = brd_castlePerm;\r

      \  brd_castlePerm &= CastlePerm[from];\r

      \  brd_castlePerm &= CastlePerm[to];\r

      \  brd_enPas = SQUARES.NO_SQ;\r

      \  HASH_CA();\r

      \  var captured = CAPTURED(move);\r

      \  brd_fiftyMove++;\r

      \  if (captured != PIECES.EMPTY) {\r

      \    ClearPiece(to);\r

      \    brd_fiftyMove = 0;\r

      \  }\r

      \  brd_hisPly++;\r

      \  brd_ply++;\r

      \  if (PiecePawn[brd_pieces[from]] == BOOL.TRUE) {\r

      \    brd_fiftyMove = 0;\r

      \    if ((move & MFLAGPS) != 0) {\r

      \      if (side == COLOURS.WHITE) {\r

      \        brd_enPas = from + 10;\r

      \      } else {\r

      \        brd_enPas = from - 10;\r

      \      }\r

      \      HASH_EP();\r

      \    }\r

      \  }\r

      \  MovePiece(from, to);\r

      \  var prPce = PROMOTED(move);\r

      \  if (prPce != PIECES.EMPTY) {\r

      \    ClearPiece(to);\r

      \    AddPiece(to, prPce);\r

      \  }\r

      \  brd_side ^= 1;\r

      \  HASH_SIDE();\r

      \  if (SqAttacked(brd_pList[PCEINDEX(Kings[side], 0)], brd_side))
      {\r

      \    TakeMove();\r

      \    return BOOL.FALSE;\r

      \  }\r

      \  return BOOL.TRUE;\r

      }\r\n"
    sig: function MakeMove(move){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  TakeMove:
    name: TakeMove
    code: "function TakeMove() {\r

      \  brd_hisPly--;\r

      \  brd_ply--;\r

      \  var move = brd_history[brd_hisPly].move;\r

      \  var from = FROMSQ(move);\r

      \  var to = TOSQ(move);\r

      \  if (brd_enPas != SQUARES.NO_SQ) HASH_EP();\r

      \  HASH_CA();\r

      \  brd_castlePerm = brd_history[brd_hisPly].castlePerm;\r

      \  brd_fiftyMove = brd_history[brd_hisPly].fiftyMove;\r

      \  brd_enPas = brd_history[brd_hisPly].enPas;\r

      \  if (brd_enPas != SQUARES.NO_SQ) HASH_EP();\r

      \  HASH_CA();\r

      \  brd_side ^= 1;\r

      \  HASH_SIDE();\r

      \  if ((MFLAGEP & move) != 0) {\r

      \    if (brd_side == COLOURS.WHITE) {\r

      \      AddPiece(to - 10, PIECES.bP);\r

      \    } else {\r

      \      AddPiece(to + 10, PIECES.wP);\r

      \    }\r

      \  } else if ((MFLAGCA & move) != 0) {\r

      \    switch (to) {\r

      \      case SQUARES.C1: MovePiece(SQUARES.D1, SQUARES.A1); break;\r

      \      case SQUARES.C8: MovePiece(SQUARES.D8, SQUARES.A8); break;\r

      \      case SQUARES.G1: MovePiece(SQUARES.F1, SQUARES.H1); break;\r

      \      case SQUARES.G8: MovePiece(SQUARES.F8, SQUARES.H8); break;\r

      \      default: break;\r

      \    }\r

      \  }\r

      \  MovePiece(to, from);\r

      \  var captured = CAPTURED(move);\r

      \  if (captured != PIECES.EMPTY) {\r

      \    AddPiece(to, captured);\r

      \  }\r

      \  if (PROMOTED(move) != PIECES.EMPTY) {\r

      \    ClearPiece(from);\r

      \    AddPiece(from, (PieceCol[PROMOTED(move)] == COLOURS.WHITE ?
      PIECES.wP : PIECES.bP));\r

      \  }\r

      }\r\n"
    sig: function TakeMove(){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  InitMvvLva:
    name: InitMvvLva
    code: "function InitMvvLva() {\r

      \  var Attacker;\r

      \  var Victim;\r

      \  for (Attacker = PIECES.wP; Attacker <= PIECES.bK; ++Attacker) {\r

      \    for (Victim = PIECES.wP; Victim <= PIECES.bK; ++Victim) {\r

      \      MvvLvaScores[Victim * 14 + Attacker] = VictimScore[Victim] +
      6 - (VictimScore[Attacker] / 100);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function InitMvvLva(){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MOVE:
    name: MOVE
    code: "function MOVE(from, to, captured, promoted, flag) { return (from | (to <<
      7) | (captured << 14) | (promoted << 20) | flag); }\r\n"
    sig: function MOVE(from, to, captured, promoted, flag){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  MoveExists:
    name: MoveExists
    code: "function MoveExists(move) {\r

      \  GenerateMoves();\r

      \  var index;\r

      \  var moveFound = NOMOVE;\r

      \  for (index = brd_moveListStart[brd_ply]; index <
      brd_moveListStart[brd_ply + 1]; ++index) {\r

      \    moveFound = brd_moveList[index];\r

      \    if (MakeMove(moveFound) == BOOL.FALSE) {\r

      \      continue;\r

      \    }\r

      \    TakeMove();\r

      \    if (move == moveFound) {\r

      \      return BOOL.TRUE;\r

      \    }\r

      \  }\r

      \  return BOOL.FALSE;\r

      }\r\n"
    sig: function MoveExists(move){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddCaptureMove:
    name: AddCaptureMove
    code: "function AddCaptureMove(move) {\r

      \  brd_moveList[brd_moveListStart[brd_ply + 1]] = move;\r

      \  brd_moveScores[brd_moveListStart[brd_ply + 1]++] =
      MvvLvaScores[CAPTURED(move) * 14 + brd_pieces[FROMSQ(move)]] + 1000000;\r

      }\r\n"
    sig: function AddCaptureMove(move){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddQuietMove:
    name: AddQuietMove
    code: "function AddQuietMove(move) {\r

      \  brd_moveList[brd_moveListStart[brd_ply + 1]] = move;\r

      \  if (brd_searchKillers[brd_ply] == move) {\r

      \    brd_moveScores[brd_moveListStart[brd_ply + 1]] = 900000;\r

      \  } else if (brd_searchKillers[MAXDEPTH + brd_ply] == move) {\r

      \    brd_moveScores[brd_moveListStart[brd_ply + 1]] = 800000;\r

      \  } else {\r

      \    brd_moveScores[brd_moveListStart[brd_ply + 1]] =
      brd_searchHistory[brd_pieces[FROMSQ(move)] * BRD_SQ_NUM + TOSQ(move)];\r

      \  }\r

      \  brd_moveListStart[brd_ply + 1]++;\r

      }\r\n"
    sig: function AddQuietMove(move){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddEnPassantMove:
    name: AddEnPassantMove
    code: "function AddEnPassantMove(move) {\r

      \  brd_moveList[brd_moveListStart[brd_ply + 1]] = move;\r

      \  brd_moveScores[brd_moveListStart[brd_ply + 1]++] = 105 +
      1000000;\r

      }\r\n"
    sig: function AddEnPassantMove(move){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddWhitePawnCaptureMove:
    name: AddWhitePawnCaptureMove
    code: "function AddWhitePawnCaptureMove(from, to, cap) {\r

      \  if (RanksBrd[from] == RANKS.RANK_7) {\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.wQ, 0));\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.wR, 0));\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.wB, 0));\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.wN, 0));\r

      \  } else {\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.EMPTY, 0));\r

      \  }\r

      }\r\n"
    sig: function AddWhitePawnCaptureMove(from, to, cap){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddWhitePawnQuietMove:
    name: AddWhitePawnQuietMove
    code: "function AddWhitePawnQuietMove(from, to) {\r

      \  if (RanksBrd[from] == RANKS.RANK_7) {\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.wQ, 0));\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.wR, 0));\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.wB, 0));\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.wN, 0));\r

      \  } else {\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.EMPTY, 0));\r

      \  }\r

      }\r\n"
    sig: function AddWhitePawnQuietMove(from, to){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddBlackPawnCaptureMove:
    name: AddBlackPawnCaptureMove
    code: "function AddBlackPawnCaptureMove(from, to, cap) {\r

      \  if (RanksBrd[from] == RANKS.RANK_2) {\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.bQ, 0));\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.bR, 0));\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.bB, 0));\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.bN, 0));\r

      \  } else {\r

      \    AddCaptureMove(MOVE(from, to, cap, PIECES.EMPTY, 0));\r

      \  }\r

      }\r\n"
    sig: function AddBlackPawnCaptureMove(from, to, cap){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AddBlackPawnQuietMove:
    name: AddBlackPawnQuietMove
    code: "function AddBlackPawnQuietMove(from, to) {\r

      \  if (RanksBrd[from] == RANKS.RANK_2) {\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.bQ, 0));\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.bR, 0));\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.bB, 0));\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.bN, 0));\r

      \  } else {\r

      \    AddQuietMove(MOVE(from, to, PIECES.EMPTY, PIECES.EMPTY, 0));\r

      \  }\r

      }\r\n"
    sig: function AddBlackPawnQuietMove(from, to){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  GenerateMoves:
    name: GenerateMoves
    code: "function GenerateMoves() {\r

      \  brd_moveListStart[brd_ply + 1] = brd_moveListStart[brd_ply];\r

      \  var pceType;\r

      \  var pceNum;\r

      \  var pceIndex;\r

      \  var pce;\r

      \  var sq;\r

      \  var tsq;\r

      \  var index;\r

      \  if (brd_side == COLOURS.WHITE) {\r

      \    pceType = PIECES.wP;\r

      \    for (pceNum = 0; pceNum < brd_pceNum[pceType]; ++pceNum) {\r

      \      sq = brd_pList[PCEINDEX(pceType, pceNum)];\r

      \      if (brd_pieces[sq + 10] == PIECES.EMPTY) {\r

      \        AddWhitePawnQuietMove(sq, sq + 10);\r

      \        if (RanksBrd[sq] == RANKS.RANK_2 && brd_pieces[sq + 20] ==
      PIECES.EMPTY) {\r

      \          AddQuietMove(MOVE(sq, (sq + 20), PIECES.EMPTY,
      PIECES.EMPTY, MFLAGPS));\r

      \        }\r

      \      }\r

      \      if (SQOFFBOARD(sq + 9) == BOOL.FALSE &&
      PieceCol[brd_pieces[sq + 9]] == COLOURS.BLACK) {\r

      \        AddWhitePawnCaptureMove(sq, sq + 9, brd_pieces[sq + 9]);\r

      \      }\r

      \      if (SQOFFBOARD(sq + 11) == BOOL.FALSE &&
      PieceCol[brd_pieces[sq + 11]] == COLOURS.BLACK) {\r

      \        AddWhitePawnCaptureMove(sq, sq + 11, brd_pieces[sq +
      11]);\r

      \      }\r

      \      if (brd_enPas != SQUARES.NO_SQ) {\r

      \        if (sq + 9 == brd_enPas) {\r

      \          AddEnPassantMove(MOVE(sq, sq + 9, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGEP));\r

      \        }\r

      \        if (sq + 11 == brd_enPas) {\r

      \          AddEnPassantMove(MOVE(sq, sq + 11, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGEP));\r

      \        }\r

      \      }\r

      \    }\r

      \    if (brd_castlePerm & CASTLEBIT.WKCA) {\r

      \      if (brd_pieces[SQUARES.F1] == PIECES.EMPTY &&
      brd_pieces[SQUARES.G1] == PIECES.EMPTY) {\r

      \        if (SqAttacked(SQUARES.E1, COLOURS.BLACK) == BOOL.FALSE &&
      SqAttacked(SQUARES.F1, COLOURS.BLACK) == BOOL.FALSE) {\r

      \          AddQuietMove(MOVE(SQUARES.E1, SQUARES.G1, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGCA));\r

      \        }\r

      \      }\r

      \    }\r

      \    if (brd_castlePerm & CASTLEBIT.WQCA) {\r

      \      if (brd_pieces[SQUARES.D1] == PIECES.EMPTY &&
      brd_pieces[SQUARES.C1] == PIECES.EMPTY && brd_pieces[SQUARES.B1] ==
      PIECES.EMPTY) {\r

      \        if (SqAttacked(SQUARES.E1, COLOURS.BLACK) == BOOL.FALSE &&
      SqAttacked(SQUARES.D1, COLOURS.BLACK) == BOOL.FALSE) {\r

      \          AddQuietMove(MOVE(SQUARES.E1, SQUARES.C1, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGCA));\r

      \        }\r

      \      }\r

      \    }\r

      \    pceType = PIECES.wN; \r

      \  } else {\r

      \    pceType = PIECES.bP;\r

      \    for (pceNum = 0; pceNum < brd_pceNum[pceType]; ++pceNum) {\r

      \      sq = brd_pList[PCEINDEX(pceType, pceNum)];\r

      \      if (brd_pieces[sq - 10] == PIECES.EMPTY) {\r

      \        AddBlackPawnQuietMove(sq, sq - 10);\r

      \        if (RanksBrd[sq] == RANKS.RANK_7 && brd_pieces[sq - 20] ==
      PIECES.EMPTY) {\r

      \          AddQuietMove(MOVE(sq, (sq - 20), PIECES.EMPTY,
      PIECES.EMPTY, MFLAGPS));\r

      \        }\r

      \      }\r

      \      if (SQOFFBOARD(sq - 9) == BOOL.FALSE &&
      PieceCol[brd_pieces[sq - 9]] == COLOURS.WHITE) {\r

      \        AddBlackPawnCaptureMove(sq, sq - 9, brd_pieces[sq - 9]);\r

      \      }\r

      \      if (SQOFFBOARD(sq - 11) == BOOL.FALSE &&
      PieceCol[brd_pieces[sq - 11]] == COLOURS.WHITE) {\r

      \        AddBlackPawnCaptureMove(sq, sq - 11, brd_pieces[sq -
      11]);\r

      \      }\r

      \      if (brd_enPas != SQUARES.NO_SQ) {\r

      \        if (sq - 9 == brd_enPas) {\r

      \          AddEnPassantMove(MOVE(sq, sq - 9, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGEP));\r

      \        }\r

      \        if (sq - 11 == brd_enPas) {\r

      \          AddEnPassantMove(MOVE(sq, sq - 11, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGEP));\r

      \        }\r

      \      }\r

      \    }\r

      \    if (brd_castlePerm & CASTLEBIT.BKCA) {\r

      \      if (brd_pieces[SQUARES.F8] == PIECES.EMPTY &&
      brd_pieces[SQUARES.G8] == PIECES.EMPTY) {\r

      \        if (SqAttacked(SQUARES.E8, COLOURS.WHITE) == BOOL.FALSE &&
      SqAttacked(SQUARES.F8, COLOURS.WHITE) == BOOL.FALSE) {\r

      \          AddQuietMove(MOVE(SQUARES.E8, SQUARES.G8, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGCA));\r

      \        }\r

      \      }\r

      \    }\r

      \    if (brd_castlePerm & CASTLEBIT.BQCA) {\r

      \      if (brd_pieces[SQUARES.D8] == PIECES.EMPTY &&
      brd_pieces[SQUARES.C8] == PIECES.EMPTY && brd_pieces[SQUARES.B8] ==
      PIECES.EMPTY) {\r

      \        if (SqAttacked(SQUARES.E8, COLOURS.WHITE) == BOOL.FALSE &&
      SqAttacked(SQUARES.D8, COLOURS.WHITE) == BOOL.FALSE) {\r

      \          AddQuietMove(MOVE(SQUARES.E8, SQUARES.C8, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGCA));\r

      \        }\r

      \      }\r

      \    }\r

      \    pceType = PIECES.bN; \r

      \  }\r

      \  pceIndex = LoopSlideIndex[brd_side];\r

      \  pce = LoopSlidePce[pceIndex++];\r

      \  while (pce != 0) {\r

      \    for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \      sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \      for (index = 0; index < DirNum[pce]; ++index) {\r

      \        dir = PceDir[pce][index];\r

      \        t_sq = sq + dir;\r

      \        while (SQOFFBOARD(t_sq) == BOOL.FALSE) {\r

      \          if (brd_pieces[t_sq] != PIECES.EMPTY) {\r

      \            if (PieceCol[brd_pieces[t_sq]] == brd_side ^ 1) {\r

      \              AddCaptureMove(MOVE(sq, t_sq, brd_pieces[t_sq],
      PIECES.EMPTY, 0));\r

      \            }\r

      \            break;\r

      \          }\r

      \          AddQuietMove(MOVE(sq, t_sq, PIECES.EMPTY, PIECES.EMPTY,
      0));\r

      \          t_sq += dir;\r

      \        }\r

      \      }\r

      \    }\r

      \    pce = LoopSlidePce[pceIndex++];\r

      \  }\r

      \  pceIndex = LoopNonSlideIndex[brd_side];\r

      \  pce = LoopNonSlidePce[pceIndex++];\r

      \  while (pce != 0) {\r

      \    for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \      sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \      for (index = 0; index < DirNum[pce]; ++index) {\r

      \        dir = PceDir[pce][index];\r

      \        t_sq = sq + dir;\r

      \        if (SQOFFBOARD(t_sq) == BOOL.TRUE) {\r

      \          continue;\r

      \        }\r

      \        if (brd_pieces[t_sq] != PIECES.EMPTY) {\r

      \          if (PieceCol[brd_pieces[t_sq]] == brd_side ^ 1) {\r

      \            AddCaptureMove(MOVE(sq, t_sq, brd_pieces[t_sq],
      PIECES.EMPTY, 0));\r

      \          }\r

      \          continue;\r

      \        }\r

      \        AddQuietMove(MOVE(sq, t_sq, PIECES.EMPTY, PIECES.EMPTY,
      0));\r

      \      }\r

      \    }\r

      \    pce = LoopNonSlidePce[pceIndex++];\r

      \  }\r

      }\r\n"
    sig: function GenerateMoves(){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  GenerateCaptures:
    name: GenerateCaptures
    code: "function GenerateCaptures() {\r

      \  brd_moveListStart[brd_ply + 1] = brd_moveListStart[brd_ply];\r

      \  var pceType;\r

      \  var pceNum;\r

      \  var pceIndex;\r

      \  var pce;\r

      \  var sq;\r

      \  var tsq;\r

      \  var index;\r

      \  if (brd_side == COLOURS.WHITE) {\r

      \    pceType = PIECES.wP;\r

      \    for (pceNum = 0; pceNum < brd_pceNum[pceType]; ++pceNum) {\r

      \      sq = brd_pList[PCEINDEX(pceType, pceNum)];\r

      \      if (SQOFFBOARD(sq + 9) == BOOL.FALSE &&
      PieceCol[brd_pieces[sq + 9]] == COLOURS.BLACK) {\r

      \        AddWhitePawnCaptureMove(sq, sq + 9, brd_pieces[sq + 9]);\r

      \      }\r

      \      if (SQOFFBOARD(sq + 11) == BOOL.FALSE &&
      PieceCol[brd_pieces[sq + 11]] == COLOURS.BLACK) {\r

      \        AddWhitePawnCaptureMove(sq, sq + 11, brd_pieces[sq +
      11]);\r

      \      }\r

      \      if (brd_enPas != SQUARES.NO_SQ) {\r

      \        if (sq + 9 == brd_enPas) {\r

      \          AddEnPassantMove(MOVE(sq, sq + 9, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGEP));\r

      \        }\r

      \        if (sq + 11 == brd_enPas) {\r

      \          AddEnPassantMove(MOVE(sq, sq + 11, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGEP));\r

      \        }\r

      \      }\r

      \    }\r

      \    pceType = PIECES.wN; \r

      \  } else {\r

      \    pceType = PIECES.bP;\r

      \    for (pceNum = 0; pceNum < brd_pceNum[pceType]; ++pceNum) {\r

      \      sq = brd_pList[PCEINDEX(pceType, pceNum)];\r

      \      if (SQOFFBOARD(sq - 9) == BOOL.FALSE &&
      PieceCol[brd_pieces[sq - 9]] == COLOURS.WHITE) {\r

      \        AddBlackPawnCaptureMove(sq, sq - 9, brd_pieces[sq - 9]);\r

      \      }\r

      \      if (SQOFFBOARD(sq - 11) == BOOL.FALSE &&
      PieceCol[brd_pieces[sq - 11]] == COLOURS.WHITE) {\r

      \        AddBlackPawnCaptureMove(sq, sq - 11, brd_pieces[sq -
      11]);\r

      \      }\r

      \      if (brd_enPas != SQUARES.NO_SQ) {\r

      \        if (sq - 9 == brd_enPas) {\r

      \          AddEnPassantMove(MOVE(sq, sq - 9, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGEP));\r

      \        }\r

      \        if (sq - 11 == brd_enPas) {\r

      \          AddEnPassantMove(MOVE(sq, sq - 11, PIECES.EMPTY,
      PIECES.EMPTY, MFLAGEP));\r

      \        }\r

      \      }\r

      \    }\r

      \    pceType = PIECES.bN; \r

      \  }\r

      \  pceIndex = LoopSlideIndex[brd_side];\r

      \  pce = LoopSlidePce[pceIndex++];\r

      \  while (pce != 0) {\r

      \    for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \      sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \      for (index = 0; index < DirNum[pce]; ++index) {\r

      \        dir = PceDir[pce][index];\r

      \        t_sq = sq + dir;\r

      \        while (SQOFFBOARD(t_sq) == BOOL.FALSE) {\r

      \          if (brd_pieces[t_sq] != PIECES.EMPTY) {\r

      \            if (PieceCol[brd_pieces[t_sq]] == brd_side ^ 1) {\r

      \              AddCaptureMove(MOVE(sq, t_sq, brd_pieces[t_sq],
      PIECES.EMPTY, 0));\r

      \            }\r

      \            break;\r

      \          }\r

      \          t_sq += dir;\r

      \        }\r

      \      }\r

      \    }\r

      \    pce = LoopSlidePce[pceIndex++];\r

      \  }\r

      \  pceIndex = LoopNonSlideIndex[brd_side];\r

      \  pce = LoopNonSlidePce[pceIndex++];\r

      \  while (pce != 0) {\r

      \    for (pceNum = 0; pceNum < brd_pceNum[pce]; ++pceNum) {\r

      \      sq = brd_pList[PCEINDEX(pce, pceNum)];\r

      \      for (index = 0; index < DirNum[pce]; ++index) {\r

      \        dir = PceDir[pce][index];\r

      \        t_sq = sq + dir;\r

      \        if (SQOFFBOARD(t_sq) == BOOL.TRUE) {\r

      \          continue;\r

      \        }\r

      \        if (brd_pieces[t_sq] != PIECES.EMPTY) {\r

      \          if (PieceCol[brd_pieces[t_sq]] == brd_side ^ 1) {\r

      \            AddCaptureMove(MOVE(sq, t_sq, brd_pieces[t_sq],
      PIECES.EMPTY, 0));\r

      \          }\r

      \          continue;\r

      \        }\r

      \      }\r

      \    }\r

      \    pce = LoopNonSlidePce[pceIndex++];\r

      \  }\r

      }\r\n"
    sig: function GenerateCaptures(){}
    region: move (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  Perft:
    name: Perft
    code: "function Perft(depth) {\r

      \  MakeNullMove();\r

      \  if (brd_posKey != GeneratePosKey()) {\r

      \    console.log(printGameLine());\r

      \    PrintBoard();\r

      \    srch_stop = BOOL.TRUE;\r

      \    console.log('Hash Error After Make');\r

      \  }\r

      \  TakeNullMove();\r

      \  if (brd_posKey != GeneratePosKey()) {\r

      \    console.log(printGameLine());\r

      \    PrintBoard();\r

      \    srch_stop = BOOL.TRUE;\r

      \    console.log('Hash Error After Take');\r

      \  }\r

      \  if (depth == 0) {\r

      \    perft_leafNodes++;\r

      \    return;\r

      \  }\r

      \  GenerateMoves();\r

      \  var index;\r

      \  var move;\r

      \  for (index = brd_moveListStart[brd_ply]; index <
      brd_moveListStart[brd_ply + 1]; ++index) {\r

      \    move = brd_moveList[index];\r

      \    if (MakeMove(move) == BOOL.FALSE) {\r

      \      continue;\r

      \    }\r

      \    Perft(depth - 1);\r

      \    TakeMove();\r

      \  }\r

      \  return;\r

      }\r\n"
    sig: function Perft(depth){}
    region: perft (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PerftTest:
    name: PerftTest
    code: "function PerftTest(depth) {\r

      \  PrintBoard();\r

      \  console.log(\"Starting Test To Depth:\" + depth);\r

      \  perft_leafNodes = 0;\r

      \  GenerateMoves();\r

      \  var index;\r

      \  var move;\r

      \  var moveNum = 0;\r

      \  for (index = brd_moveListStart[brd_ply]; index <
      brd_moveListStart[brd_ply + 1]; ++index) {\r

      \    move = brd_moveList[index];\r

      \    if (MakeMove(move) == BOOL.FALSE) {\r

      \      continue;\r

      \    }\r

      \    moveNum++;\r

      \    var cumnodes = perft_leafNodes;\r

      \    Perft(depth - 1);\r

      \    TakeMove();\r

      \    var oldnodes = perft_leafNodes - cumnodes;\r

      \    console.log(\"move:\" + moveNum + \" \" + PrMove(move) + \" \"
      + oldnodes);\r

      \  }\r

      \  console.log(\"Test Complete : \" + perft_leafNodes + \" leaf
      nodes visited\");\r

      \  $(\"#FenOutput\").text(\"Test Complete : \" + perft_leafNodes +
      \" leaf nodes visited\");\r

      \  return;\r

      }\r\n"
    sig: function PerftTest(depth){}
    region: perft (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ThreeFoldRep:
    name: ThreeFoldRep
    code: "function ThreeFoldRep() {\r

      \  var i = 0, r = 0;\r

      \  for (i = 0; i < brd_hisPly; ++i) {\r

      \    if (brd_history[i].posKey == brd_posKey) {\r

      \      r++;\r

      \    }\r

      \  }\r

      \  return r;\r

      }\r\n"
    sig: function ThreeFoldRep(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  DrawMaterial:
    name: DrawMaterial
    code: "function DrawMaterial() {\r

      \  if (brd_pceNum[PIECES.wP] != 0 || brd_pceNum[PIECES.bP] != 0)
      return BOOL.FALSE;\r

      \  if (brd_pceNum[PIECES.wQ] != 0 || brd_pceNum[PIECES.bQ] != 0 ||
      brd_pceNum[PIECES.wR] != 0 || brd_pceNum[PIECES.bR] != 0) return
      BOOL.FALSE;\r

      \  if (brd_pceNum[PIECES.wB] > 1 || brd_pceNum[PIECES.bB] > 1) {
      return BOOL.FALSE; }\r

      \  if (brd_pceNum[PIECES.wN] > 1 || brd_pceNum[PIECES.bN] > 1) {
      return BOOL.FALSE; }\r

      \  if (brd_pceNum[PIECES.wN] != 0 && brd_pceNum[PIECES.wB] != 0) {
      return BOOL.FALSE; }\r

      \  if (brd_pceNum[PIECES.bN] != 0 && brd_pceNum[PIECES.bB] != 0) {
      return BOOL.FALSE; }\r

      \  return BOOL.TRUE;\r

      }\r\n"
    sig: function DrawMaterial(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  GetPvLine:
    name: GetPvLine
    code: "function GetPvLine(depth) {\r

      \  ;\r

      \  var move = ProbePvTable();\r

      \  var count = 0;\r

      \  while (move != NOMOVE && count < depth) {\r

      \    if (MoveExists(move)) {\r

      \      MakeMove(move);\r

      \      brd_PvArray[count++] = move;\r

      \    } else {\r

      \      break;\r

      \    }\r

      \    move = ProbePvTable();\r

      \  }\r

      \  while (brd_ply > 0) {\r

      \    TakeMove();\r

      \  }\r

      \  return count;\r

      }\r\n"
    sig: function GetPvLine(depth){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  StorePvMove:
    name: StorePvMove
    code: "function StorePvMove(move) {\r

      \  var index = brd_posKey % PVENTRIES;\r

      \  brd_PvTable[index].move = move;\r

      \  brd_PvTable[index].posKey = brd_posKey;\r

      }\r\n"
    sig: function StorePvMove(move){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ProbePvTable:
    name: ProbePvTable
    code: "function ProbePvTable() {\r

      \  var index = brd_posKey % PVENTRIES;\r

      \  if (brd_PvTable[index].posKey == brd_posKey) {\r

      \    return brd_PvTable[index].move;\r

      \  }\r

      \  return NOMOVE;\r

      }\r\n"
    sig: function ProbePvTable(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  CheckUp:
    name: CheckUp
    code: "function CheckUp() {\r

      \  if (($.now() - srch_start) > srch_time) srch_stop = BOOL.TRUE;\r

      }\r\n"
    sig: function CheckUp(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  PickNextMove:
    name: PickNextMove
    code: "function PickNextMove(moveNum) {\r

      \  var index = 0;\r

      \  var bestScore = 0;\r

      \  var bestNum = moveNum;\r

      \  for (index = moveNum; index < brd_moveListStart[brd_ply + 1];
      ++index) {\r

      \    if (brd_moveScores[index] > bestScore) {\r

      \      bestScore = brd_moveScores[index];\r

      \      bestNum = index;\r

      \    }\r

      \  }\r

      \  temp = brd_moveList[moveNum];\r

      \  brd_moveList[moveNum] = brd_moveList[bestNum];\r

      \  brd_moveList[bestNum] = temp;\r

      \  temp = brd_moveScores[moveNum];\r

      \  brd_moveScores[moveNum] = brd_moveScores[bestNum];\r

      \  brd_moveScores[bestNum] = temp;\r

      }\r\n"
    sig: function PickNextMove(moveNum){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  IsRepetition:
    name: IsRepetition
    code: "function IsRepetition() {\r

      \  var index = 0;\r

      \  for (index = brd_hisPly - brd_fiftyMove; index < brd_hisPly - 1;
      ++index) {\r

      \    if (brd_posKey == brd_history[index].posKey) {\r

      \      return BOOL.TRUE;\r

      \    }\r

      \  }\r

      \  return BOOL.FALSE;\r

      }\r\n"
    sig: function IsRepetition(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ClearPvTable:
    name: ClearPvTable
    code: "function ClearPvTable() {\r

      \  for (index = 0; index < PVENTRIES; index++) {\r

      \    brd_PvTable[index].move = NOMOVE;\r

      \    brd_PvTable[index].posKey = 0;\r

      \  }\r

      }\r\n"
    sig: function ClearPvTable(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ClearForSearch:
    name: ClearForSearch
    code: "function ClearForSearch() {\r

      \  var index = 0;\r

      \  var index2 = 0;\r

      \  for (index = 0; index < 14 * BRD_SQ_NUM; ++index) {\r

      \    brd_searchHistory[index] = 0;\r

      \  }\r

      \  for (index = 0; index < 3 * MAXDEPTH; ++index) {\r

      \    brd_searchKillers[index] = 0;\r

      \  }\r

      \  ClearPvTable();\r

      \  brd_ply = 0;\r

      \  srch_nodes = 0;\r

      \  srch_fh = 0;\r

      \  srch_fhf = 0;\r

      \  srch_start = $.now();\r

      \  srch_stop = BOOL.FALSE;\r

      }\r\n"
    sig: function ClearForSearch(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  Quiescence:
    name: Quiescence
    code: "function Quiescence(alpha, beta) {\r

      \  if ((srch_nodes & 2047) == 0) CheckUp();\r

      \  srch_nodes++;\r

      \  if (IsRepetition() || brd_fiftyMove >= 100) {\r

      \    return 0;\r

      \  }\r

      \  if (brd_ply > MAXDEPTH - 1) {\r

      \    return EvalPosition();\r

      \  }\r

      \  var Score = EvalPosition();\r

      \  if (Score >= beta) {\r

      \    return beta;\r

      \  }\r

      \  if (Score > alpha) {\r

      \    alpha = Score;\r

      \  }\r

      \  GenerateCaptures();\r

      \  var MoveNum = 0;\r

      \  var Legal = 0;\r

      \  var OldAlpha = alpha;\r

      \  var BestMove = NOMOVE;\r

      \  Score = -INFINITE;\r

      \  var PvMove = ProbePvTable();\r

      \  if (PvMove != NOMOVE) {\r

      \    for (MoveNum = brd_moveListStart[brd_ply]; MoveNum <
      brd_moveListStart[brd_ply + 1]; ++MoveNum) {\r

      \      if (brd_moveList[MoveNum] == PvMove) {\r

      \        brd_moveScores[MoveNum].score = 2000000;\r

      \        break;\r

      \      }\r

      \    }\r

      \  }\r

      \  for (MoveNum = brd_moveListStart[brd_ply]; MoveNum <
      brd_moveListStart[brd_ply + 1]; ++MoveNum) {\r

      \    PickNextMove(MoveNum);\r

      \    if (MakeMove(brd_moveList[MoveNum]) == BOOL.FALSE) {\r

      \      continue;\r

      \    }\r

      \    Legal++;\r

      \    Score = -Quiescence(-beta, -alpha);\r

      \    TakeMove();\r

      \    if (srch_stop == BOOL.TRUE) return 0;\r

      \    if (Score > alpha) {\r

      \      if (Score >= beta) {\r

      \        if (Legal == 1) {\r

      \          srch_fhf++;\r

      \        }\r

      \        srch_fh++;\r

      \        return beta;\r

      \      }\r

      \      alpha = Score;\r

      \      BestMove = brd_moveList[MoveNum];\r

      \    }\r

      \  }\r

      \  if (alpha != OldAlpha) {\r

      \    StorePvMove(BestMove);\r

      \  }\r

      \  return alpha;\r

      }\r\n"
    sig: function Quiescence(alpha, beta){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  AlphaBeta:
    name: AlphaBeta
    code: "function AlphaBeta(alpha, beta, depth, DoNull) {\r

      \  if (depth <= 0) {\r

      \    return Quiescence(alpha, beta);\r

      \  }\r

      \  if ((srch_nodes & 2047) == 0) CheckUp();\r

      \  srch_nodes++;\r

      \  if ((IsRepetition() || brd_fiftyMove >= 100) && brd_ply != 0) {\r

      \    return 0;\r

      \  }\r

      \  if (brd_ply > MAXDEPTH - 1) {\r

      \    return EvalPosition(pos);\r

      \  }\r

      \  var InCheck = SqAttacked(brd_pList[PCEINDEX(Kings[brd_side], 0)],
      brd_side ^ 1);\r

      \  if (InCheck == BOOL.TRUE) {\r

      \    depth++;\r

      \  }\r

      \  var Score = -INFINITE;\r

      \  if (DoNull == BOOL.TRUE && BOOL.FALSE == InCheck &&\r

      \    brd_ply != 0 && (brd_material[brd_side] > 50200) && depth >= 4)
      {\r

      \    var ePStore = brd_enPas;\r

      \    if (brd_enPas != SQUARES.NO_SQ) HASH_EP();\r

      \    brd_side ^= 1;\r

      \    HASH_SIDE();\r

      \    brd_enPas = SQUARES.NO_SQ;\r

      \    Score = -AlphaBeta(-beta, -beta + 1, depth - 4, BOOL.FALSE);\r

      \    brd_side ^= 1;\r

      \    HASH_SIDE();\r

      \    brd_enPas = ePStore;\r

      \    if (brd_enPas != SQUARES.NO_SQ) HASH_EP();\r

      \    if (srch_stop == BOOL.TRUE) return 0;\r

      \    if (Score >= beta) {\r

      \      return beta;\r

      \    }\r

      \  }\r

      \  GenerateMoves();\r

      \  var MoveNum = 0;\r

      \  var Legal = 0;\r

      \  var OldAlpha = alpha;\r

      \  var BestMove = NOMOVE;\r

      \  Score = -INFINITE;\r

      \  var PvMove = ProbePvTable();\r

      \  if (PvMove != NOMOVE) {\r

      \    for (MoveNum = brd_moveListStart[brd_ply]; MoveNum <
      brd_moveListStart[brd_ply + 1]; ++MoveNum) {\r

      \      if (brd_moveList[MoveNum] == PvMove) {\r

      \        brd_moveScores[MoveNum].score = 2000000;\r

      \        break;\r

      \      }\r

      \    }\r

      \  }\r

      \  for (MoveNum = brd_moveListStart[brd_ply]; MoveNum <
      brd_moveListStart[brd_ply + 1]; ++MoveNum) {\r

      \    PickNextMove(MoveNum);\r

      \    if (MakeMove(brd_moveList[MoveNum]) == BOOL.FALSE) {\r

      \      continue;\r

      \    }\r

      \    Legal++;\r

      \    Score = -AlphaBeta(-beta, -alpha, depth - 1, BOOL.TRUE);\r

      \    TakeMove();\r

      \    if (srch_stop == BOOL.TRUE) return 0;\r

      \    if (Score > alpha) {\r

      \      if (Score >= beta) {\r

      \        if (Legal == 1) {\r

      \          srch_fhf++;\r

      \        }\r

      \        srch_fh++;\r

      \        if ((brd_moveList[MoveNum] & MFLAGCAP) == 0) {\r

      \          brd_searchKillers[MAXDEPTH + brd_ply] =
      brd_searchKillers[brd_ply];\r

      \          brd_searchKillers[brd_ply] = brd_moveList[MoveNum];\r

      \        }\r

      \        return beta;\r

      \      }\r

      \      alpha = Score;\r

      \      BestMove = brd_moveList[MoveNum];\r

      \      if ((BestMove & MFLAGCAP) == 0) {\r

      \        brd_searchHistory[brd_pieces[FROMSQ(BestMove)] * BRD_SQ_NUM
      + TOSQ(BestMove)] += depth;\r

      \      }\r

      \    }\r

      \  }\r

      \  if (Legal == 0) {\r

      \    if (InCheck) {\r

      \      return -MATE + brd_ply;\r

      \    } else {\r

      \      return 0;\r

      \    }\r

      \  }\r

      \  if (alpha != OldAlpha) {\r

      \    StorePvMove(BestMove);\r

      \  }\r

      \  return alpha;\r

      }\r\n"
    sig: function AlphaBeta(alpha, beta, depth, DoNull){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  UpdateDOMStats:
    name: UpdateDOMStats
    code: "function UpdateDOMStats() {\r

      \  var scoreText = \"Score: \" + (domUpdate_score /
      100).toFixed(2);\r

      \  if (Math.abs(domUpdate_score) > MATE - MAXDEPTH) {\r

      \    scoreText = \"Score: \" + \"Mate In \" + (MATE -
      Math.abs(domUpdate_score)) + \" moves\";\r

      \  }\r

      \  $(\"#OrderingOut\").text(\"Ordering: \" + domUpdate_ordering +
      \"%\");\r

      \  $(\"#DepthOut\").text(\"Depth: \" + domUpdate_depth);\r

      \  $(\"#ScoreOut\").text(scoreText);\r

      \  $(\"#NodesOut\").text(\"Nodes: \" + domUpdate_nodes);\r

      \  $(\"#TimeOut\").text(\"Time: \" + (($.now() - srch_start) /
      1000).toFixed(1) + \"s\");\r

      }\r\n"
    sig: function UpdateDOMStats(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  SearchPosition:
    name: SearchPosition
    code: "function SearchPosition() {\r

      \  var bestMove = NOMOVE;\r

      \  var bestScore = -INFINITE;\r

      \  var currentDepth = 0;\r

      \  var pvNum = 0;\r

      \  var line;\r

      \  ClearForSearch();\r

      \  if (GameController.BookLoaded == BOOL.TRUE) {\r

      \    bestMove = BookMove();\r

      \    if (bestMove != NOMOVE) {\r

      \      $(\"#OrderingOut\").text(\"Ordering:\");\r

      \      $(\"#DepthOut\").text(\"Depth: \");\r

      \      $(\"#ScoreOut\").text(\"Score:\");\r

      \      $(\"#NodesOut\").text(\"Nodes:\");\r

      \      $(\"#TimeOut\").text(\"Time: 0s\");\r

      \      $(\"#BestOut\").text(\"BestMove: \" + PrMove(bestMove) +
      '(Book)');\r

      \      srch_best = bestMove;\r

      \      srch_thinking = BOOL.FALSE;\r

      \      return;\r

      \    }\r

      \  }\r

      \  for (currentDepth = 1; currentDepth <= srch_depth;
      ++currentDepth) {\r

      \    bestScore = AlphaBeta(-INFINITE, INFINITE, currentDepth,
      BOOL.TRUE);\r

      \    if (srch_stop == BOOL.TRUE) break;\r

      \    pvNum = GetPvLine(currentDepth);\r

      \    bestMove = brd_PvArray[0];\r

      \    line = (\"Depth:\" + currentDepth + \" best:\" +
      PrMove(bestMove) + \" Score:\" + bestScore + \" nodes:\" + srch_nodes);\r

      \    if (currentDepth != 1) {\r

      \      line += (\" Ordering:\" + ((srch_fhf / srch_fh) *
      100).toFixed(2) + \"%\");\r

      \    }\r

      \    domUpdate_depth = currentDepth;\r

      \    domUpdate_move = bestMove;\r

      \    domUpdate_score = bestScore;\r

      \    domUpdate_nodes = srch_nodes;\r

      \    domUpdate_ordering = ((srch_fhf / srch_fh) * 100).toFixed(2);\r

      \  }\r

      \  $(\"#BestOut\").text(\"BestMove: \" + PrMove(bestMove));\r

      \  UpdateDOMStats();\r

      \  srch_best = bestMove;\r

      \  srch_thinking = BOOL.FALSE;\r

      }\r\n"
    sig: function SearchPosition(){}
    region: rules (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  postCors:
    name: postCors
    code: "async function postCors(url, data, type, handle_result) {\r

      \  data.data_type = type;\r

      \  var formData = new FormData();\r

      \  for (const k in data) {\r

      \    formData.append(k, data[k]);\r

      \  }\r

      \  let h = new Headers();\r

      \  h.append('Accept', 'application/text');\r

      \  var resp = await fetch(url, {\r

      \    method: 'POST',\r

      \    mode: 'cors', \r

      \    headers: h,\r

      \    body: formData,\r

      \  });\r

      \  let result = await resp.text();\r

      \  try {\r

      \    let jsonResult = JSON.parse(result);\r

      \    if (isdef(handle_result)) handle_result(jsonResult); \r

      \  } catch {\r

      \    if (isdef(handle_result)) handle_result({ message: result });
      \r

      \  }\r

      }\r\n"
    sig: async function postCors(url, data, type, handle_result){}
    region: funcs (communication.js)
    filename: communication.js
    type: func
    fname: communication.js
    path: C:\xampp\htdocs\aroot\belinda\js\communication.js
    datetime: 2021-09-01-12-42
    timestamp: 1630525342956.1853
    size: 1671
  queryINSERT:
    name: queryINSERT
    code: "function queryINSERT(data){\r

      \  let newData = {};\r

      \  for (const k in data) {\r

      \    let val = data[k];\r

      \    if (!isNumber(val)) newData[k] = \"'\" + val + \"'\"; else
      newData[k] = val;\r

      \  }\r

      \  let q = 'INSERT INTO users (' + Object.keys(newData).join() + ')
      VALUES (' + Object.values(newData).join(',') + ')';\r

      \  return q;\r

      }\r\n"
    sig: function queryINSERT(data){}
    region: funcs (communication.js)
    filename: communication.js
    type: func
    fname: communication.js
    path: C:\xampp\htdocs\aroot\belinda\js\communication.js
    datetime: 2021-09-01-12-42
    timestamp: 1630525342956.1853
    size: 1671
  querySelectUser:
    name: querySelectUser
    code: "function querySelectUser(data){\r

      \  let newData = {};\r

      \  for (const k in data) {\r

      \    let val = data[k];\r

      \    if (!isNumber(val)) newData[k] = \"'\" + val + \"'\"; else
      newData[k] = val;\r

      \  }\r

      \  let q = 'SELECT * FROM users WHERE username = ' +
      newData.username;\r

      \  return q;\r

      }\r\n"
    sig: function querySelectUser(data){}
    region: funcs (communication.js)
    filename: communication.js
    type: func
    fname: communication.js
    path: C:\xampp\htdocs\aroot\belinda\js\communication.js
    datetime: 2021-09-01-12-42
    timestamp: 1630525342956.1853
    size: 1671
  show_account:
    name: show_account
    code: "function show_account() {\r

      \  if (isdef(mBy('dAccount').firstChild)) {console.log('NOPE!');
      return;}\r

      \  DA.imageChanged = false;\r

      \  let dParent = mBy('dAccount');\r

      \  clearElement(dParent);\r

      \  let d = mDiv(dParent,{matop:20});\r

      \  let dir = '../base/assets/images/';\r

      \  let imagePath = dir + (Userdata.hasImage ? Username :
      'unknown_user') + '.jpg';\r

      \  d.append(createElementFromHtml(`\r

      \  <div class=\"wrapper\" style=\"margin-top:5%; animation: appear
      4s ease;\">\r

      \  <div id=\"error\">some text</div>\r

      \  <form id=\"myform\" autocomplete=\"off\" action=\"index.php\"
      method=\"POST\">\r

      \    <div id='dImage'>\r

      \      <span style=\"font-size:11px;\">drag and drop an image to
      change</span><br>\r

      \      <img id=\"imgPreview\" src='${imagePath}'
      ondragover=\"handle_drag_and_drop(event)\"
      ondrop=\"handle_drag_and_drop(event)\"
      ondragleave=\"handle_drag_and_drop(event)\"\r

      \        style=\"height:200px;margin:10px;\" />\r

      \    </div>\r

      \    <input id='iUsername' type=\"text\" name=\"username\"
      placeholder='username' value=\"${Username}\" autofocus />\r

      \    <br />\r

      \    <!-- <input type=\"password\" name=\"password\" />\r

      \    <br /> -->\r

      \    <input type=\"submit\" />\r

      \  </form>\r

      \  </div>\r

      \  `));\r

      \  var form = document.getElementById('myform');\r

      \  form.onsubmit = e => {\r

      \    e.preventDefault();\r

      \    let el = document.getElementById('iUsername');\r

      \    let val = el.value;\r

      \    if (Username != val) {\r

      \      onClickSubmitUsernameChange(val);\r

      \    } else if (DA.imageChanged) {\r

      \      onClickSubmitImageChange();\r

      \    }\r

      \  };\r

      }\r\n"
    sig: function show_account(){}
    region: funcs (account.js)
    filename: account.js
    type: func
    fname: account.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\account.js
    datetime: 2021-09-12-07-22
    timestamp: 1631456523588.4907
    size: 1524
  getuser_1send:
    name: getuser_1send
    code: "function getuser_1send() {\r

      \  get_data('getuser', {});\r

      }\r\n"
    sig: function getuser_1send(){}
    region: funcs (getuser.js)
    filename: getuser.js
    type: func
    fname: getuser.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\getuser.js
    datetime: 2021-09-13-18-43
    timestamp: 1631583812742.5647
    size: 939
  getuser_2handleResult:
    name: getuser_2handleResult
    code: "function getuser_2handleResult(result) {\r

      \  Userdata = JSON.parse(result);\r

      \  Userdata.image = Userdata.username + '.jpg';\r

      \  Username = Userdata.username;\r

      \  let d = mBy('dUserInfo');\r

      \  clearElement(d);\r

      \  let dParent = mDiv(d);\r

      \  let dir = '../base/assets/images/';\r

      \  let path = dir + (Userdata.hasImage ? Username : 'unknown_user')
      + '.jpg';\r

      \  let size = 100;\r

      \  let styles = { 'object-fit': 'cover', rounding: '50%', margin:
      10, h: size, w: size, border: '2px solid white' };\r

      \  let dUserImage = mImg(path, dParent, styles);\r

      \  dUserImage.id = 'dUserImage';\r

      \  let dUserName = mText(Username, d, { fz: 14, family: 'opensans'
      });\r

      \  dUserName.id = 'dUserName';\r

      \  let dUserEmail = mText(Userdata.email, d, { fz: 12, opacity: .5,
      family: 'opensans' });\r

      \  dUserEmail.id = 'dUserEmail';\r

      }\r\n"
    sig: function getuser_2handleResult(result){}
    region: funcs (getuser.js)
    filename: getuser.js
    type: func
    fname: getuser.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\getuser.js
    datetime: 2021-09-13-18-43
    timestamp: 1631583812742.5647
    size: 939
  getOuterDivForMenuStyle:
    name: getOuterDivForMenuStyle
    code: "function getOuterDivForMenuStyle(){\r

      \  return createElementFromHtml(`<div
      style='max-height:430px;text-align: center; animation: appear 4s
      ease'>`);\r

      }\r\n"
    sig: function getOuterDivForMenuStyle(){}
    region: funcs (games.js)
    filename: games.js
    type: func
    fname: games.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\games.js
    datetime: 2021-09-14-06-00
    timestamp: 1631624456096.7412
    size: 2105
  show_games:
    name: show_games
    code: "function show_games(ms = 500) {\r

      \  let dParent = mBy('dGames');\r

      \  mClear(dParent);\r

      \  mText(`<h2>start new game</h2>`, dParent, { maleft: 12 });\r

      \  let d = mDiv(dParent, { fg: 'white', animation: 'appear 1s ease
      both' }, 'game_menu');\r

      \  mCenterFlex(d);\r

      \  let gamelist = 'aristo bluff spotit ferro fritz'; if (DA.TEST0)
      gamelist += ' a_game';\r

      \  for (const g of dict2list(Config.games)) {\r

      \    if (gamelist.includes(g.id)) {\r

      \      let [sym, bg, color, id] = [Syms[g.logo], g.color, null,
      getUID()];\r

      \      let d1 = mDiv(d, { cursor: 'pointer', rounding: 10, margin:
      10, vpadding: 15, wmin: 140, bg: bg, position: 'relative' }, g.id);\r

      \      d1.setAttribute('gamename', g.id);\r

      \      d1.onclick = onclick_game_menu_item;\r

      \      mCenterFlex(d1);\r

      \      mDiv(d1, { fz: 50, family: sym.family, 'line-height': 55 },
      null, sym.text);\r

      \      mLinebreak(d1);\r

      \      mDiv(d1, { fz: 18, align: 'center' }, null, g.friendly);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function show_games(ms = 500){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  contacts_2handleResult:
    name: contacts_2handleResult
    code: "function contacts_2handleResult(result) {\r

      \  let d = mBy('dContacts');\r

      \  mCenterCenterFlex(d);\r

      \  d.innerHTML = JSON.parse(result).message;\r

      }\r\n"
    sig: function contacts_2handleResult(result){}
    region: funcs (contacts.js)
    filename: contacts.js
    type: func
    fname: contacts.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\contacts.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 511
  presentInContactMenu:
    name: presentInContactMenu
    code: "function presentInContactMenu(result,d1){\r

      \  let d2 = mDiv(d1,{position:'relative'},null,null,'contact'); \r

      \  d2.setAttribute('username',result.username);\r

      \  let dir = '../base/assets/images/';\r

      \  let path = dir + (result.hasImage ? result.username :
      'unknown_user') + '.jpg';\r

      \  let img = mImg(path, d2, {});\r

      \  let name  = mText(result.username,d2);\r

      \  return d2;\r

      }\r\n"
    sig: function presentInContactMenu(result,d1){}
    region: funcs (contacts.js)
    filename: contacts.js
    type: func
    fname: contacts.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\contacts.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 511
  onClickContact:
    name: onClickContact
    code: "function onClickContact(ev) {\t\r

      \  el = evToClass(ev, 'contact');  \r

      \  DA.currentContact = el.getAttribute('username');  \r

      \  onClickMenu('chat');\r

      }\r\n"
    sig: function onClickContact(ev){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickSubmitUsernameChange:
    name: onClickSubmitUsernameChange
    code: "function onClickSubmitUsernameChange(newUsername) { window.location =
      \"index.php?user=\" + newUsername; }\r\n"
    sig: function onClickSubmitUsernameChange(newUsername){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickSubmitImageChange:
    name: onClickSubmitImageChange
    code: "function onClickSubmitImageChange() { sendHtml('imgPreview', Username);
      DA.imageChanged = false; }\r\n"
    sig: function onClickSubmitImageChange(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickMenu:
    name: onClickMenu
    code: "function onClickMenu(text) {\r

      \  let subMenu = capitalize(text);\r

      \  let id = 'd' + subMenu;\r

      \  console.log('menu id clicked:',id);\r

      \  if (id == getVisibleChild('dInnerLeft')) { console.log('NOPE!');
      return; } \r

      \  let delay1 = hideCurrent();\r

      \  setTimeout(() => {\r

      \    let delay2 = text == 'chat' || text == 'tables' ?
      closeLeftPane() : openLeftPane();\r

      \    setTimeout(() => { showCurrent(id); window['onClickMenu' +
      subMenu](); }, delay2 + 100);\r

      \  }, delay1 + 100);\r

      }\r\n"
    sig: function onClickMenu(text){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickMenuGames:
    name: onClickMenuGames
    code: "function onClickMenuGames() { show_games(); }\r\n"
    sig: function onClickMenuGames(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickMenuTables:
    name: onClickMenuTables
    code: "function onClickMenuTables() { }\r\n"
    sig: function onClickMenuTables(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickMenuChat:
    name: onClickMenuChat
    code: "async function onClickMenuChat() {\r

      \  chatStartOrActivate();\r

      }\r\n"
    sig: async function onClickMenuChat(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickMenuContacts:
    name: onClickMenuContacts
    code: "function onClickMenuContacts() { get_data('contacts'); }\r\n"
    sig: function onClickMenuContacts(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickMenuAccount:
    name: onClickMenuAccount
    code: "function onClickMenuAccount() { show_account(); }\r\n"
    sig: function onClickMenuAccount(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClick_belinda:
    name: onClick_belinda
    code: "function onClick_belinda() { window.location = '../belinda/index.php';
      }\r\n"
    sig: function onClick_belinda(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClick_books:
    name: onClick_books
    code: "function onClick_books() { closeLeftPane(); }\r\n"
    sig: function onClick_books(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClick_cardgames:
    name: onClick_cardgames
    code: "function onClick_cardgames() { closeLeftPane(); }\r\n"
    sig: function onClick_cardgames(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  onClickGamesMenu:
    name: onClickGamesMenu
    code: "function onClickGamesMenu(text) {\r

      \  console.log('clicked on menu: ', text);\r

      \  console.log('open menu is ', getVisibleChild('dGames'));\r

      \  let id = 'd' + capitalize(text);\r

      \  if (id == getVisibleChild('dGames')) { console.log('NOPE!');
      return; }\r

      \  transitionTo(id);\r

      \  window['onClick_' + text]();\r

      }\r\n"
    sig: function onClickGamesMenu(text){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\onclick.js
    datetime: 2021-09-14-06-25
    timestamp: 1631625920220.2058
    size: 1622
  createMenuUiNew:
    name: createMenuUiNew
    code: "function createMenuUiNew(dParent, keys, clickMenuHandler, outerStyles =
      {},picStyles={}, labelStyles={}, hTotal = 600) {\r

      \  clearElement(dParent);\r

      \  mCenterFlex(dParent);\r

      \  mAppend(dParent, createElementFromHTML(`<h1>Choose
      Game:</h1>`));\r

      \  mLinebreak(dParent);\r

      \  let dMenuItems = mDiv(dParent, { w: '90%', h: hTotal });\r

      \  let games = keys; \r

      \  if (!navigator.onLine) { removeInPlace(games, 'gSayPic'); }\r

      \  let items = [];\r

      \  let defaultOuterStyles = {\r

      \    display: 'inline-flex', 'flex-direction': 'column',\r

      \    'justify-content': 'center', 'align-items': 'center',
      'vertical-align': 'top',\r

      \    wmin: hTotal/4, hmin: hTotal/6, margin: 8, rounding: 6\r

      \  };\r

      \  addKeys(defaultOuterStyles, outerStyles);\r

      \  let defaultPicStyles = {fz:hTotal/10,'line-height':hTotal/10 +
      'px'};\r

      \  addKeys(defaultPicStyles,picStyles);\r

      \  for (const g of games) {\r

      \    let item = { o: DB.games[g], id: g }; iRegister(item, g);\r

      \    item.bg = getColorDictColor(item.o.color);\r

      \    item.label = capitalize(item.o.friendly);\r

      \    item.info = Syms[item.o.logo];\r

      \    let d = makeItemDiv(item, {\r

      \      outerStyles: outerStyles, ifs: { bg: true },\r

      \      picStyles: picStyles,\r

      \      labelStyles: labelStyles,\r

      \      showPic: true, showLabels: true, labelBottom: true, handler:
      clickMenuHandler\r

      \    });\r

      \    iAdd(item, { div: d });\r

      \    mAppend(dMenuItems, d);\r

      \    items.push(item);\r

      \  }\r

      \  if (nundef(G)) return;\r

      \  SelectedMenuKey = G.id;\r

      \  let selItem = Items[SelectedMenuKey]; \r

      \  toggleItemSelection(selItem);\r

      }\r\n"
    sig: function createMenuUiNew(dParent, keys, clickMenuHandler, outerStyles =
      {},picStyles={}, labelStyles={}, hTotal = 600){}
    region: funcs (menu.js)
    filename: menu.js
    type: func
    fname: menu.js
    path: C:\xampp\htdocs\aroot\belinda\js\menu.js
    datetime: 2021-09-30-06-36
    timestamp: 1633009010780
    size: 4049
  createMenuUi:
    name: createMenuUi
    code: "function createMenuUi(dParent, keys, clickMenuHandler, itemStyles = {},
      hTotal = 600) {\r

      \  clearElement(dParent);\r

      \  mCenterFlex(dParent);\r

      \  mAppend(dParent, createElementFromHTML(`<h1>Choose
      Game:</h1>`));\r

      \  mLinebreak(dParent);\r

      \  let dMenuItems = mDiv(dParent, { w: '90%', h: hTotal });\r

      \  let games = keys; \r

      \  if (!navigator.onLine) { removeInPlace(games, 'gSayPic'); }\r

      \  let items = [];\r

      \  let outerStyles = {\r

      \    display: 'inline-flex', 'flex-direction': 'column',\r

      \    'justify-content': 'center', 'align-items': 'center',
      'vertical-align': 'top',\r

      \    wmin: 140, hmin: 110, margin: 8, rounding: 6\r

      \  };\r

      \  copyKeys(itemStyles, outerStyles);\r

      \  for (const g of games) {\r

      \    let item = { o: DB.games[g], id: g }; iRegister(item, g);\r

      \    item.bg = getColorDictColor(item.o.color);\r

      \    item.label = capitalize(item.o.friendly);\r

      \    item.info = Syms[item.o.logo];\r

      \    let d = makeItemDiv(item, {\r

      \      outerStyles: outerStyles, ifs: { bg: true },\r

      \      picStyles: { fz: 60 },\r

      \      showPic: true, showLabels: true, labelBottom: true, handler:
      clickMenuHandler\r

      \    });\r

      \    iAdd(item, { div: d });\r

      \    mAppend(dMenuItems, d);\r

      \    items.push(item);\r

      \  }\r

      \  if (nundef(G)) return;\r

      \  SelectedMenuKey = G.id;\r

      \  let selItem = Items[SelectedMenuKey]; \r

      \  toggleItemSelection(selItem);\r

      }\r\n"
    sig: function createMenuUi(dParent, keys, clickMenuHandler, itemStyles = {},
      hTotal = 600){}
    region: funcs (menu.js)
    filename: menu.js
    type: func
    fname: menu.js
    path: C:\xampp\htdocs\aroot\belinda\js\menu.js
    datetime: 2021-09-30-06-36
    timestamp: 1633009010780
    size: 4049
  cardZone:
    name: cardZone
    code: "function cardZone(dParent, o, flex = 1, hmin = 170) {\r

      \  let dOuter = mDiv(dParent, { bg: o.color, fg: 'contrast', flex:
      flex, hmin: hmin }, 'd' + o.name, o.name);\r

      \  let dInner = mDiv(dOuter);\r

      \  mFlex(dInner); dInner.style.alignContent = 'flex-start';\r

      \  return dInner;\r

      }\r\n"
    sig: function cardZone(dParent, o, flex = 1, hmin = 170){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  gameItem:
    name: gameItem
    code: "function gameItem(name, color) { return mItem(name2id(name), null, {
      color: isdef(color) ? color : randomColor(), name: name }); }\r\n"
    sig: function gameItem(name, color){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  id2name:
    name: id2name
    code: "function id2name(id) { id.substring(2).split('_').join(' '); }\r\n"
    sig: function id2name(id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  name2id:
    name: name2id
    code: "function name2id(name) { return 'd_' + name.split(' ').join('_'); }\r\n"
    sig: function name2id(name){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  aristoUi:
    name: aristoUi
    code: "function aristoUi(dParent, g) {\r

      \  clearTable();\r

      \  let d1 = mDiv(dParent, { w: '100%' }); mFlex(d1, 'v');\r

      \  let dWorld = mDiv(d1, { bg: 'random', hmin: 170, flex: 1 });\r

      \  mFlex(dWorld);\r

      \  iAdd(g.me, { div: cardZone(d1, g.me, 2) });\r

      \  let others = g.others;\r

      \  for (let i = 0; i < others.length; i++) {\r

      \    let pl = others[i];\r

      \    iAdd(pl, { div: cardZone(d1, pl) });\r

      \  }\r

      \  for (const o of [g.draw_pile, g.market, g.buy_cards,
      g.discard_pile]) { iAdd(o, { div: cardZone(dWorld, o) }); }\r

      \  for (const name of ['draw_pile', 'market', 'buy_cards',
      'discard_pile']) { g[name + 'Items'] = showCards(g[name]); }\r

      \  for (const pl of g.allPlayers) {\r

      \    pl.handItems = showCards({ div: iDiv(pl), type: pl == g.me ?
      'hand' : 'handHidden', cards: pl.hand });\r

      \    if (isdef(pl.stall)) pl.stallItems = showCards({ div: iDiv(pl),
      type: g.stallsHidden ? 'cardsHidden' : 'cards', cards: pl.stall });\r

      \    if (isdef(pl.buildings)) {\r

      \      for (const building of pl.buildings) {\r

      \        let bItem = showCards({ div: iDiv(pl), type: 'hand', cards:
      building });\r

      \        lookupAddToList(pl, ['buildingItems'], bItem);\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function aristoUi(dParent, g){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  showCards:
    name: showCards
    code: "function showCards(o, type) {\r

      \  let d2 = iDiv(o);\r

      \  if (nundef(type)) type = isdef(o.type) ? o.type : 'hand';\r

      \  let arr = type == 'deck' ? o.deck.cards() : o.cards;\r

      \  let cont = type == 'deck' ? stdDeckContainer(d2, arr.length) :
      startsWith(type, 'cards') ? stdCardsContainer(d2, arr.length) :
      stdHandContainer(d2, arr.length);\r

      \  let items = arr.map(x => Card52.getItem(x % 52));\r

      \  if (endsWith(type, 'Hidden') || type == 'deck') items.map(x =>
      Card52.turnFaceDown(x, BG_CARD_BACK));\r

      \  items.map(x => mAppend(cont, iDiv(x)));\r

      \  return items;\r

      }\r\n"
    sig: function showCards(o, type){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  stdRowOverlapContainer:
    name: stdRowOverlapContainer
    code: "function stdRowOverlapContainer(dParent, n, wGrid, wCell, styles) {\r

      \  addKeys({\r

      \    w: wGrid,\r

      \    gap: 0,\r

      \    display: 'inline-grid',\r

      \    'grid-template-columns': `repeat(${n}, ${wCell}px)`\r

      \  }, styles);\r

      \  return mDiv(dParent, styles);\r

      }\r\n"
    sig: function stdRowOverlapContainer(dParent, n, wGrid, wCell, styles){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  stdDeckContainer:
    name: stdDeckContainer
    code: "function stdDeckContainer(dParent, n, ov = .25, styles = {}) { return
      stdRowOverlapContainer(dParent, n, 140, ov, addKeys({ padding: 10 },
      styles)); }\r\n"
    sig: function stdDeckContainer(dParent, n, ov = .25, styles = {}){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  stdCardsContainer:
    name: stdCardsContainer
    code: "function stdCardsContainer(dParent, n, ov = 80, styles = {}) { return
      stdRowOverlapContainer(dParent, n, n * ov + 22, ov, addKeys({ paleft: 20,
      patop: 10 }, styles)); }\r\n"
    sig: function stdCardsContainer(dParent, n, ov = 80, styles = {}){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  stdHandContainer:
    name: stdHandContainer
    code: "function stdHandContainer(dParent, n, ov = 20, styles = {}) { return
      stdRowOverlapContainer(dParent, n, 76 + n * ov + 22, ov, addKeys({
      padding: 10 }, styles)); }\r\n"
    sig: function stdHandContainer(dParent, n, ov = 20, styles = {}){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  stdGridContainer:
    name: stdGridContainer
    code: "function stdGridContainer(dParent, wCell, styles = {}) {\r

      \  addKeys({\r

      \    wmax: 500,\r

      \    margin: 'auto',\r

      \    padding: 10,\r

      \    gap: 0,\r

      \    display: 'grid',\r

      \    bg: 'green',\r

      \    'grid-template-columns': `repeat(${20}, ${wCell}px)`\r

      \  }, styles);\r

      \  return mDiv(dParent, styles);\r

      }\r\n"
    sig: function stdGridContainer(dParent, wCell, styles = {}){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  createMessageContent:
    name: createMessageContent
    code: "function createMessageContent(messages, me, other) {\r

      \  let result = `<div id='messages_holder_parent'
      onclick='set_seen(event)' style='background:silver;height:680px;'>\r

      \  <div id='messages_holder'
      style='box-sizing:border-box;height:580px;padding:10px;margin-bottom:10px\
      ;overflow-y:auto;'>`;\r

      \  result += `start of chat with ${other.username} <img
      src=\"${other.imagePath}\"
      style=\"margin-left:10px;display:inline;height:30px;\"/><br><br>`;\r

      \  for (const m of messages) {\r

      \    if (m.sender == me.username) { result += message_right(m, me);
      } else { result += message_left(m, other); }\r

      \  }\r

      \  result += message_controls(); \r

      \  return result;\r

      }\r\n"
    sig: function createMessageContent(messages, me, other){}
    region: test (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  message_left:
    name: message_left
    code: "function message_left(msg, sender) {\r

      \  image = sender.imagePath;\r

      \  $a = `\r

      \  <div id='message_left'>\r

      \  <div></div>\r

      \    <img  id='prof_img' src='${image}' class='img_person sz50'
      style='float: left;margin:2px;'>\r

      \    <b>${sender.username}</b><br>\r

      \    ${msg.message}<br><br>`;\r

      \  if (msg.files != \"\") {\r

      \    $a += `<img src='${msg.files}'
      style='margin:30px;cursor:pointer;' onclick='image_show(event)' />
      <br>`;\r

      \  }\r

      \  $a += `<span
      style='font-size:11px;color:white;'>${msg.date}<span>\r

      \  <img id='trash' src='../base/assets/images/icons/trash.png'
      onclick='delete_message(event)' msgid='${msg.id}' />\r

      \  </div>`;\r

      \  return $a;\r

      }\r\n"
    sig: function message_left(msg, sender){}
    region: test (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  message_right:
    name: message_right
    code: "function message_right(msg, sender) {\r

      \  image = sender.imagePath;\r

      \  $a = `\r

      \  <div id='message_right'>\r

      \  <div>`;\r

      \  if (msg.seen) {\r

      \    $a += \"<img src='../base/assets/images/tick.png'
      style=''/>\";\r

      \  } else if (msg.received) {\r

      \    $a += \"<img src='../base/assets/images/tick_grey.png'
      style=''/>\";\r

      \  }\r

      \  $a += `</div>\r

      \    <img id='prof_img' src='${image}'
      style='float:right;margin:2px;' class='img_person sz50'>\r

      \    <b>${sender.username}</b><br>\r

      \    ${msg.message}<br><br>`;\r

      \  if (msg.files != \"\") {\r

      \    $a += `<img src='${msg.files}'
      style='margin:30px;cursor:pointer;' onclick='image_show(event)' />
      <br>`;\r

      \  }\r

      \  $a += `<span
      style='font-size:11px;color:#888;'>${msg.date}<span>\r

      \    <img id='trash' src='../base/assets/images/icons/trash.png'
      onclick='delete_message(event)' msgid='${msg.id}' />\r

      \  </div>`;\r

      \  return $a;\r

      }\r\n"
    sig: function message_right(msg, sender){}
    region: test (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  message_controls:
    name: message_controls
    code: "function message_controls() {\r

      \  return `\r

      \  </div>\r

      \  <div
      style='display:flex;gap:10px;padding:10px;box-sizing:border-box;width:100\
      %;height:60px;'>\r

      \    <label for='message_file'><img
      src='../base/assets/images/icons/clip.png'
      style='opacity:0.8;width:30px;cursor:pointer;' ></label>\r

      \    <input type='file' id='message_file' name='file'
      style='display:none' onchange='send_image(this.files)' />\r

      \    <input id='message_text' onkeyup='enter_pressed(event)'
      style='flex:6;border:solid thin
      #ccc;border-bottom:none;font-size:14px;padding:4px;outline:none;'
      type='text' placeHolder='type your message'/>\r

      \    <input style='flex:1;cursor:pointer;outline:none;'
      type='button' value='send' onclick='send_message(event)'/>\r

      \  </div>\r

      \  <span onclick='delete_thread(event)'
      style='color:white;cursor:pointer;'>Delete this thread </span>\r

      \  </div>`;\r

      }\r\n"
    sig: function message_controls(){}
    region: test (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  createAccountContent:
    name: createAccountContent
    code: "function createAccountContent(userdata) {\r

      \  DA.imageChanged = DA.colorChanged = false; \r

      \  return `\r

      \  <div id=\"dAccount\" style=\"max-width=500px; margin-top:10px;
      display:flex; animation: appear1 1s ease;justify-content:center;
      align-content:center\">\r

      \    <div id=\"error\">some text</div>\r

      \    <div style='text-align:center'>\r

      \      <form id=\"myform\" autocomplete=\"off\"
      style='text-align:center;background:${userdata.color}'>\r

      \        <span id='img_dd_instruction'
      style=\"font-size:11px;\">drag and drop an image to change</span><br>\r

      \        <img id=\"imgPreview\"
      onload='addColorPicker(\"${userdata.color}\");'
      src='${get_image_path(userdata)}'
      ondragover=\"handle_drag_and_drop(event)\"
      ondrop=\"handle_drag_and_drop(event)\"
      ondragleave=\"handle_drag_and_drop(event)\"\r

      \          style=\"height:200px;margin:10px;\" />\r

      \        <input id='iUsername' type=\"text\" name=\"motto\"
      placeholder='motto' value=\"${userdata.motto}\" autofocus\r

      \          onkeydown=\"if (event.keyCode ===
      13){event.preventDefault();collect_data(event);}\" />\r

      \        <br />\r

      \        <input id='save_settings_button' type=\"button\"
      value=\"Submit\" onclick=\"collect_data(event)\" ><br>\r

      \      </form>\r

      \  </div></div>\r

      \  `; \r

      }\r\n"
    sig: function createAccountContent(userdata){}
    region: account (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  createContactsContent:
    name: createContactsContent
    code: "function createContactsContent(myusers, msgs) {\r

      \  let mydata = uiGetContactStylesAndStart();\r

      \  mydata += uiGetContacts(myusers, msgs);\r

      \  return mydata;\r

      }\r\n"
    sig: function createContactsContent(myusers, msgs){}
    region: misc (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  uiGetContactStylesAndStart:
    name: uiGetContactStylesAndStart
    code: "function uiGetContactStylesAndStart() {\r

      \  let mydata = `\r

      \  <style>\r

      \    @keyframes appear{\r

      \      0%{opacity:0;transform: translateY(50px)}\r

      \      100%{opacity:1;transform: translateY(0px)}\r

      \     }\r

      \     .contact{\r

      \       cursor:pointer;\r

      \       transition: all .5s cubic-bezier(0.68, -2, 0.265, 1.55);\r

      \     }\r

      \     .contact:hover{\r

      \       transform: scale(1.1);\r

      \     }\r

      \  </style>\r

      \  <div style=\"text-align: center; animation: appear 1s ease
      both\">\r

      \  `;\r

      \  return mydata;\r

      }\r\n"
    sig: function uiGetContactStylesAndStart(){}
    region: misc (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  uiGetContact:
    name: uiGetContact
    code: "function uiGetContact(row, msgs = {}) {\r

      \  let image = get_image_path(row); \r

      \  let mydata = `\r

      \      <div class='contact'
      style='position:relative;text-align:center;margin-bottom:18px;'
      username='${row.name}' onclick='start_chat(event)'>\r

      \        <img src='${image}' draggable='true'
      ondragstart='drag(event)' class='img_person sz100' style='margin:0;'/>\r

      \        <br>${row.name}`;\r

      \  if (isdef(msgs[row.username])) {\r

      \    mydata += `<div
      style='width:20px;height:20px;border-radius:50%;background-color:orange;c\
      olor:white;position:absolute;left:0px;top:0px;'>` + msgs[row.username] +
      \"</div>\";\r

      \  }\r

      \  mydata += \"</div>\";\r

      \  return mydata;\r

      }\r\n"
    sig: function uiGetContact(row, msgs = {}){}
    region: misc (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  uiGetContacts:
    name: uiGetContacts
    code: "function uiGetContacts(myusers, msgs) {\r

      \  mydata = '';\r

      \  for (const r of myusers) {\r

      \    row = r;\r

      \    mydata += uiGetContact(row, msgs);\r

      \  }\r

      \  return mydata;\r

      }\r\n"
    sig: function uiGetContacts(myusers, msgs){}
    region: misc (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  createGamesContent:
    name: createGamesContent
    code: "function createGamesContent(mygames, tables = {}) {\r

      \  let mydata = uiGetGamesStylesAndStart();\r

      \  mydata += uiGetGames(mygames, tables);\r

      \  return mydata;\r

      }\r\n"
    sig: function createGamesContent(mygames, tables = {}){}
    region: games (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  uiGetGamesStylesAndStart:
    name: uiGetGamesStylesAndStart
    code: "function uiGetGamesStylesAndStart() {\r

      \  let mydata = `\r

      \  <style>\r

      \     .contact{\r

      \       cursor:pointer;\r

      \       transition: all .5s cubic-bezier(0.68, -2, 0.265, 1.55);\r

      \     }\r

      \     .contact:hover{\r

      \       transform: scale(1.1);\r

      \     }\r

      \  </style>\r

      \  <div id='game_menu' style=\"text-align: center; animation: appear
      1s ease both\">\r

      \  `;\r

      \  return mydata;\r

      }\r\n"
    sig: function uiGetGamesStylesAndStart(){}
    region: games (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  uiGetGame:
    name: uiGetGame
    code: "function uiGetGame(gi, tables = []) {\r

      \  let sym = Syms[gi.logo];\r

      \  let bg = getColorDictColor(gi.color);\r

      \  let gname = gi.id;\r

      \  let uname = Session.cur_user;\r

      \  let color = null, id = getUID();\r

      \  if (!isEmpty(tables)) { \r

      \    let t = tables[0];\r

      \    let table_status = t.status;\r

      \    let my_status = t.player_status;\r

      \    let have_another_move = my_status == 'joined' || my_status ==
      'lamov';\r

      \    color = have_another_move ? 'green' \r

      \      : t.player_status == 'join' ? 'orange'\r

      \        : t.host == uname && t.status == 'ready' ? 'yellow'\r

      \          : table_status == 'show' || t.status == 'seen' ? 'blue'\r

      \            : t.status == 'ending' ? 'red' : 'black';\r

      \    id = `rk_${t.id}`;\r

      \  }\r

      \  return `\r

      \  <div onclick=\"onclick_game_in_games_menu(event)\"
      gamename=${gi.id}
      style='cursor:pointer;border-radius:10px;margin:10px;padding:5px;padding-\
      top:15px;width:120px;height:90px;display:inline-block;background:${bg};po\
      sition:relative;'>\r

      \  ${nundef(color) ? '' : runderkreis(color, id)}\r

      \  <span
      style='font-size:50px;font-family:${sym.family}'>${sym.text}</span><br>${\
      gi.friendly}</div>\r

      \  `;\r

      }\r\n"
    sig: function uiGetGame(gi, tables = []){}
    region: games (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  uiGetGames:
    name: uiGetGames
    code: "function uiGetGames(mygames, tables) {\r

      \  mydata = '';\r

      \  for (const r of mygames) {\r

      \    row = r;\r

      \    mydata += uiGetGame(row, tables[r.id]);\r

      \  }\r

      \  return mydata;\r

      }\r\n"
    sig: function uiGetGames(mygames, tables){}
    region: games (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  applyStyles:
    name: applyStyles
    code: "function applyStyles(g, id, styles) { g.mStyle(id, styles,
      isdef(g.getNode(id)) ? 'node' : 'edge'); }\r\n"
    sig: function applyStyles(g, id, styles){}
    region: classes (board.js)
    filename: board.js
    type: func
    fname: board.js
    path: C:\D\a04\basejs\board.js
    datetime: 2023-01-20-07-15
    timestamp: 1674227715082.112
    size: 90116
  setSymLabel:
    name: setSymLabel
    code: "function setSymLabel(g, id, key, styles = {}) {\r

      \  if (nundef(Syms[key])) return;\r

      \  let info = Syms[key];\r

      \  console.log('family', info.family);\r

      \  g.setLabel(id, info.text, addKeys({ fz: 40, family: info.family
      }, styles));\r

      }\r\n"
    sig: function setSymLabel(g, id, key, styles = {}){}
    region: classes (board.js)
    filename: board.js
    type: func
    fname: board.js
    path: C:\D\a04\basejs\board.js
    datetime: 2023-01-20-07-15
    timestamp: 1674227715082.112
    size: 90116
  game_resume_or_start:
    name: game_resume_or_start
    code: "function game_resume_or_start() {\r

      \  if (isdef(Session.game)) mBy(\"inner_left_panel\").innerHTML =
      game.screen;\r

      \  else { game_start_new(); }\r

      \  game.run();\r

      }\r\n"
    sig: function game_resume_or_start(){}
    region: var (gameplay.js)
    filename: gameplay.js
    type: func
    fname: gameplay.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\gameplay.js
    datetime: 2021-11-12-13-16
    timestamp: 1636751796522.3003
    size: 488
  game_interrupt:
    name: game_interrupt
    code: "function game_interrupt() {\r

      \  if (!mBy('radio_play').checked) return;\r

      \  interrupt();\r

      \  GAME_PLAY_UI = null;\r

      }\r\n"
    sig: function game_interrupt(){}
    region: var (gameplay.js)
    filename: gameplay.js
    type: func
    fname: gameplay.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\gameplay.js
    datetime: 2021-11-12-13-16
    timestamp: 1636751796522.3003
    size: 488
  timeConversion:
    name: timeConversion
    code: "function timeConversion(duration, format = 'Hmsh') {\r

      \  const portions = [];\r

      \  const msInHour = 1000 * 60 * 60;\r

      \  const hours = Math.trunc(duration / msInHour);\r

      \  if (format.includes('H')) portions.push((hours < 10 ? '0' : '') +
      hours);\r

      \  duration = duration - (hours * msInHour);\r

      \  const msInMinute = 1000 * 60;\r

      \  const minutes = Math.trunc(duration / msInMinute);\r

      \  if (format.includes('m')) portions.push((minutes < 10 ? '0' : '')
      + minutes);\r

      \  duration = duration - (minutes * msInMinute);\r

      \  const msInSecond = 1000;\r

      \  const seconds = Math.trunc(duration / 1000);\r

      \  if (format.includes('s')) portions.push((seconds < 10 ? '0' : '')
      + seconds);\r

      \  duration = duration - (seconds * msInSecond);\r

      \  const hundreds = duration / 10;\r

      \  if (format.includes('h')) portions.push((hundreds < 10 ? '0' :
      '') + hundreds);\r

      \  return portions.join(':');\r

      }\r\n"
    sig: function timeConversion(duration, format = 'Hmsh'){}
    region: simepl (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ipadd:
    name: ipadd
    code: "function ipadd(elem) {\r

      \  elem.setAttribute('draggable', true);\r

      \  function OnDragOver(ev) {\r

      \    elem.setAttribute('DragOver', true);\r

      \    ev.stopPropagation();    \r

      \    ev.preventDefault();     \r

      \    ev.dataTransfer.dropEffect = 'copy';\r

      \  }\r

      \  function OnDragLeave(ev) {\r

      \    elem.removeAttribute('DragOver');\r

      \  }\r

      \  function OnDrop(ev) {\r

      \    elem.removeAttribute('DragOver');\r

      \    ev.preventDefault();     \r

      \    ev.stopPropagation();\r

      \    elem.innerHTML = ev.dataTransfer.getData('text/plain');\r

      \  }\r

      \  function OnDragStart(ev) {\r

      \    console.log('insane!!!');\r

      \    ev.stopPropagation(); \r

      \    ev.dataTransfer.dropEffect = 'move';\r

      \    ev.dataTransfer.setData('text/plain', this.innerHTML);\r

      \  }\r

      \  function OnClickClick(ev) {\r

      \    ev.preventDefault();     \r

      \    ev.stopPropagation(); \r

      \    let aname = 'data_transport'; \r

      \    let source = DA[aname];\r

      \    if (isdef(source)) {\r

      \      elem.innerHTML = source.innerHTML;\r

      \      toggleSelectionOfPicture(source);\r

      \      DA[aname] = null;\r

      \    } else {\r

      \      toggleSelectionOfPicture(elem);\r

      \      DA[aname] = elem;\r

      \    }\r

      \  }\r

      \  elem.addEventListener('dragstart', OnDragStart);\r

      \  elem.addEventListener('dragover', OnDragOver);\r

      \  elem.addEventListener('dragleave', OnDragLeave);\r

      \  elem.addEventListener('drop', OnDrop);\r

      \  elem.onclick = OnClickClick;\r

      \  DA.data_transport = null;\r

      }\r\n"
    sig: function ipadd(elem){}
    region: test (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  renewTimer:
    name: renewTimer
    code: "function renewTimer(G, elem, onTimeOver = null) { if (nundef(GameTimer))
      GameTimer = new TimerClass(G); GameTimer.restart(G, elem, onTimeOver);
      }\r\n"
    sig: function renewTimer(G, elem, onTimeOver = null){}
    region: time (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  checkTimer:
    name: checkTimer
    code: "function checkTimer(G) { if (nundef(GameTimer)) return false; return
      GameTimer.check(G); }\r\n"
    sig: function checkTimer(G){}
    region: time (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  addColorPicker:
    name: addColorPicker
    code: "function addColorPicker(c) {\r

      \  let form = mBy('myform');\r

      \  let img = mBy('imgPreview');\r

      \  let picker = mColorPickerBehavior(anyColorToStandardString(c),
      img, form,\r

      \    (a) => { DA.newColor = a; DA.colorChanged = true; },\r

      \    { w: 322, h: 45, bg: 'green', rounding: 6, margin: 'auto',
      align: 'center' });\r

      \  if (is_online()) {\r

      \    img.ondragover = img.ondrop = img.ondragleave =
      handle_drag_and_drop;\r

      \  }\r

      \  mBy('img_dd_instruction').style.opacity = is_online() ? 1 : 0;\r

      \  img.onload = null;\r

      }\r\n"
    sig: function addColorPicker(c){}
    region: account (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  createAccountContent1:
    name: createAccountContent1
    code: "function createAccountContent1(userdata) {\r

      \  var d = mBy(\"inner_left_panel\");\r

      \  clearElement(d);\r

      \  let d1 = mDiv(d, { w: '100%', matop: 10, animation:
      'rotateIntoView 1s ease' });\r

      \  mCenterFlex(d1);\r

      \  let d2 = mDiv(d1, {}, 'error', 'hallo das ist ein error');\r

      \  let d3 = mDiv(d1, { align: 'center', bg: 'yellow' });\r

      \  let form = mCreate('form', { align: 'center', bg: 'red' },
      'myform');\r

      \  form.id = 'myform';\r

      \  form.setAttribute('autocomplete', 'off');\r

      \  form.onsubmit = (ev)=>{ev.preventDefault();collect_data();}\r

      \  mAppend(d3, form);\r

      \  let sp1 = mSpan(form, { fz: 11 }, null, 'drag and drop an image
      to change');\r

      \  form.innerHTML += '<br>';\r

      \  DA.imageChanged = DA.colorChanged = false;\r

      \  let img = mImg(userdata.imagePath + '?=' + Date.now(), form, { h:
      200, margin: 10 });\r

      \  img.onload = () => {\r

      \    let inp = mCreate('input');\r

      \    mAppend(form, inp);\r

      \    inp.setAttribute('type', 'text');\r

      \    inp.setAttribute('placeholder', 'username');\r

      \    inp.setAttribute('name', 'username');\r

      \    inp.setAttribute('id', 'iUsername');\r

      \    inp.setAttribute('value', userdata.username);\r

      \    inp.setAttribute('autofocus', true);\r

      \    inp.onkeydown = ev => {\r

      \      if (ev.keyCode === 13) {\r

      \        ev.preventDefault();\r

      \        console.log('WTF!!!!!!!!!!!!!!!!!!!!!!!!!!!!');\r

      \        collect_data(ev);\r

      \      }\r

      \    };\r

      \    form.innerHTML += '<br />';\r

      \    let picker = mColorPickerBehavior(U.settings.userColor, img,
      form,\r

      \      (a) => { console.log('new color is', a); DA.newColor = a;
      DA.colorChanged = true; },\r

      \      { w: 322, h: 45, bg: 'green', rounding: 6, margin: 'auto',
      align: 'center' });\r

      \    form.innerHTML += `<input id='save_account_button'
      type=\"button\" value=\"Submit\" onclick=\"collect_data(event)\" ><br>`;\r

      \  };\r

      \  img.id = 'imgPreview';\r

      \  img.setAttribute('allowDrop',true);\r

      \  img.ondragover = img.ondrop = img.ondragleave =
      handle_drag_and_drop;\r

      }\r\n"
    sig: function createAccountContent1(userdata){}
    region: account (test_ui_helpers.js)
    filename: test_ui_helpers.js
    type: func
    fname: test_ui_helpers.js
    path: C:\xampp\htdocs\aroot\belinda\js\test_ui_helpers.js
    datetime: 2021-10-22-19-25
    timestamp: 1634955925354.3196
    size: 12606
  canAct:
    name: canAct
    code: "function canAct() { return (aiActivated || uiActivated) && !auxOpen;
      }\r\n"
    sig: function canAct(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  canHumanAct:
    name: canHumanAct
    code: "function canHumanAct() { return uiActivated && !auxOpen; }\r\n"
    sig: function canHumanAct(){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  canAIAct:
    name: canAIAct
    code: "function canAIAct() { return aiActivated && !auxOpen; }\r\n"
    sig: function canAIAct(){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  setGame:
    name: setGame
    code: "function setGame(game, immediate = false) {\r

      \  cleanupOldGame();\r

      \  resetUIDs();\r

      \  if (isdef(G) && G.id != game) Score.gameChange = true;\r

      \  G = new (classByName(capitalize(game)))(game, DB.games[game]);\r

      \  Settings = new SettingsClass(G, dAux);\r

      \  if (nundef(U.games[game])) {\r

      \    if (G.controllerType == 'solitaire') { U.games[game] = {
      nTotal: 0, nCorrect: 0, nCorrect1: 0, startlevel: 0 }; }\r

      \    else U.games[game] = {};\r

      \  }\r

      \  if (isdef(G.maxlevel)) G.level =
      Math.min(getUserStartLevel(game), G.maxlevel);\r

      \  if (G.id != 'gAristo') Settings.updateGameValues(U, G); \r

      \  save_users(); \r

      \  switch (G.controllerType) {\r

      \    case 'solitaire': GC = PROJECTNAME == 'belinda'?new
      ControllerSolitaire(G, U):new ControllerSolitaireMinimal(G, U); break;\r

      \    case 'solo': GC = new ControllerTTT(G, U); break;\r

      \    case 'chess': GC = new ControllerChess(G, U); break;\r

      \    case 'c52': GC = new ControllerC52(G, U); break;\r

      \  }\r

      \  G.controller = GC;\r

      \  showGameTitle();\r

      \  if (immediate) GC.startGame();\r

      }\r\n"
    sig: function setGame(game, immediate = false){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  all2DigitFractions:
    name: all2DigitFractions
    code: "function all2DigitFractions() {\r

      \  let fr = {\r

      \    1: [2, 3, 4, 5, 6, 7, 8, 9],\r

      \    2: [3, 5, 7, 9],\r

      \    3: [2, 4, 5, 7, 8],\r

      \    4: [3, 5, 7, 9],\r

      \    5: [2, 3, 4, 6, 7, 8, 9],\r

      \    6: [5, 7],\r

      \    7: [2, 3, 4, 5, 6, 8, 9],\r

      \    8: [3, 5, 7, 9],\r

      \    9: [2, 4, 5, 7, 8],\r

      \  };\r

      \  return fr;\r

      }\r\n"
    sig: function all2DigitFractions(){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  all2DigitFractionsExpanded:
    name: all2DigitFractionsExpanded
    code: "function all2DigitFractionsExpanded() {\r

      \  let f = all2DigitFractions();\r

      \  let res = [];\r

      \  for (const i in f) {\r

      \    for (const j of f[i]) {\r

      \      res.push({ numer: i, denom: j });\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function all2DigitFractionsExpanded(){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  all2DigitFractionsUnder1:
    name: all2DigitFractionsUnder1
    code: "function all2DigitFractionsUnder1() {\r

      \  let fr = {\r

      \    1: [2, 3, 4, 5, 6, 7, 8, 9],\r

      \    2: [3, 5, 7, 9],\r

      \    3: [4, 5, 7, 8],\r

      \    4: [5, 7, 9],\r

      \    5: [6, 7, 8, 9],\r

      \    6: [7],\r

      \    7: [8, 9],\r

      \    8: [9],\r

      \  };\r

      \  return fr;\r

      }\r\n"
    sig: function all2DigitFractionsUnder1(){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  all2DigitFractionsUnder1Expanded:
    name: all2DigitFractionsUnder1Expanded
    code: "function all2DigitFractionsUnder1Expanded() {\r

      \  let f = all2DigitFractionsUnder1();\r

      \  let res = [];\r

      \  for (const i in f) {\r

      \    for (const j of f[i]) {\r

      \      res.push({ numer: i, denom: j });\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function all2DigitFractionsUnder1Expanded(){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  fractionsUnder1ByDenominator:
    name: fractionsUnder1ByDenominator
    code: "function fractionsUnder1ByDenominator() {\r

      \  let fr = {\r

      \    2: [1],\r

      \    3: [1, 2],\r

      \    4: [1, 3],\r

      \    5: [1, 2, 3, 4],\r

      \    6: [1, 5],\r

      \    7: [1, 2, 3, 4, 5, 6],\r

      \    8: [1, 3, 5, 7],\r

      \    9: [1, 2, 4, 5, 7, 8],\r

      \  };\r

      \  return fr;\r

      }\r\n"
    sig: function fractionsUnder1ByDenominator(){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getTextForMixed:
    name: getTextForMixed
    code: "function getTextForMixed(full, num, denom) {\r

      \  let s = '' + full;\r

      \  if (isdef(num) && isdef(denom)) s += ' ' + num + '&frasl;' +
      denom;\r

      \  return s;\r

      }\r\n"
    sig: function getTextForMixed(full, num, denom){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getTextForFractionX:
    name: getTextForFractionX
    code: "function getTextForFractionX(num, denom) {\r

      \  if (num == denom) return '1';\r

      \  else if (denom == 1) return num;\r

      \  else if (num / denom > 2) {\r

      \    let mixed = getMixedNumber(num, denom);\r

      \    return getTextForMixed(mixed.full, mixed.n, mixed.d);\r

      \  } else {\r

      \    let s = '' + num + '&frasl;' + denom; return s;\r

      \  }\r

      }\r\n"
    sig: function getTextForFractionX(num, denom){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getTextForFraction:
    name: getTextForFraction
    code: "function getTextForFraction(num, denom) {\r

      \  let s = '' + num + '&frasl;' + denom; return s;\r

      }\r\n"
    sig: function getTextForFraction(num, denom){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getMixedNumber:
    name: getMixedNumber
    code: "function getMixedNumber(num, denom) {\r

      \  const quotient = Math.floor(num / denom);\r

      \  const remainder = num % denom;\r

      \  if (remainder === 0) {\r

      \    return { full: quotient, frac: null, n: null, d: null };\r

      \  } else {\r

      \    return { full: quotient, frac: math.fraction(remainder, denom),
      n: remainder, d: denom };\r

      \  };\r

      }\r\n"
    sig: function getMixedNumber(num, denom){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getRandomFraction:
    name: getRandomFraction
    code: "function getRandomFraction(num, denom) {\r

      \  if (isdef(denom)) {\r

      \    if (nundef(num)) num = randomNumber(1, denom - 1);\r

      \    return math.fraction(num, denom);\r

      \  } else if (isdef(num)) {\r

      \    denom = randomNumber(2, 9);\r

      \    return math.fraction(num, denom);\r

      \  }\r

      \  let flist = all2DigitFractionsUnder1Expanded();\r

      \  let fr = chooseRandom(flist);\r

      \  return math.fraction(Number(fr.numer), Number(fr.denom));\r

      }\r\n"
    sig: function getRandomFraction(num, denom){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getFractionVariantsTrial1:
    name: getFractionVariantsTrial1
    code: "function getFractionVariantsTrial1(res) {\r

      \  let num = getRandomFractions(res, 8);\r

      \  let resInList = firstCond(nums, x => x.n == res.n && x.d ==
      res.d);\r

      \  if (!resInList) nums.push(res);\r

      \  let finalNums = nums.filter(x => x.n == res.n);\r

      \  let otherNums = nums.filter(x => x.n != res.n);\r

      \  if (finalNums.length < 4) {\r

      \    let nMissing = 4 - finalNums.length;\r

      \    let additional = choose(otherNums, nMissing);\r

      \    finalNums = finalNums.concat(additional);\r

      \  }\r

      \  nums = finalNums;\r

      \  return nums;\r

      }\r\n"
    sig: function getFractionVariantsTrial1(res){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  get3FractionVariants:
    name: get3FractionVariants
    code: "function get3FractionVariants(fr, sameNum = false, sameDenom = true) {\r

      \  let num = fr.n;\r

      \  let rnd1 = randomNumber(1, 2);\r

      \  let rnd2 = rnd1 + randomNumber(1, 3);\r

      \  let rnd3 = rnd2 + randomNumber(1, 5);\r

      \  let nums = sameNum ? [num, num, num, num] : [num, num + rnd1, num
      > 5 ? (num - rnd2) : num + rnd2, num + rnd3];\r

      \  let den = fr.d;\r

      \  let denoms = sameDenom ? [den, den, den, den] : sameNum ? [den,
      den + 1, den + 2, den > 2 ? den - 1 : den + 3]\r

      \    : [den, den + 1, den + 2, den];\r

      \  let frlist = [];\r

      \  for (let i = 0; i < 4; i++) {\r

      \    frlist.push(math.fraction(nums[i], denoms[i]));\r

      \  }\r

      \  return frlist;\r

      }\r\n"
    sig: function get3FractionVariants(fr, sameNum = false, sameDenom = true){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getRandomFractions:
    name: getRandomFractions
    code: "function getRandomFractions(n) {\r

      \  let flist = all2DigitFractionsUnder1Expanded();\r

      \  let frlist = choose(flist, n);\r

      \  return frlist.map(x => math.fraction(Number(x.numer),
      Number(x.denom)));\r

      }\r\n"
    sig: function getRandomFractions(n){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  simplifyFraction:
    name: simplifyFraction
    code: "function simplifyFraction(numerator, denominator) {\r

      \  var gcd = function gcd(a, b) {\r

      \    return b ? gcd(b, a % b) : a;\r

      \  };\r

      \  gcd = gcd(numerator, denominator);\r

      \  return [numerator / gcd, denominator / gcd];\r

      }\r\n"
    sig: function simplifyFraction(numerator, denominator){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  symbolMeasuring:
    name: symbolMeasuring
    code: "function symbolMeasuring() {\r

      \  clearElement('wrapper');\r

      \  dTable = mDiv(mBy('wrapper'), { position: 'absolute', padding:
      10, bg: 'white', overflow: 'scroll' });\r

      \  let items = []; let n = SymKeys.length;\r

      \  for (let i = 0; i < n; i++) {\r

      \    let k = SymKeys[i];\r

      \    let info = Syms[k];\r

      \    let d = mDiv(dTable, { fz: 100, family: info.family, bg:
      'random', display: 'inline' }, null, info.text);\r

      \    let item = { div: d, k: k, info: info };\r

      \    items.push(item);\r

      \  }\r

      \  setTimeout(() => symbolMeasuring2(items), 5000);\r

      }\r\n"
    sig: function symbolMeasuring(){}
    region: make (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\start.js
    datetime: 2021-10-24-09-29
    timestamp: 1635092948742.831
    size: 1855
  symbolMeasuring2:
    name: symbolMeasuring2
    code: "function symbolMeasuring2(items) {\r

      \  for (let i = 0; i < items.length; i++) {\r

      \    let item = items[i];\r

      \    let r = getRect(item.div);\r

      \    item.info.w = Math.round(r.w);\r

      \    item.info.h = Math.round(r.h);\r

      \  }\r

      \  let newDict = {};\r

      \  for (const item of items) {\r

      \    newDict[item.k] = item.info;\r

      \  }\r

      \  downloadAsYaml(newDict, 'syms');\r

      }\r\n"
    sig: function symbolMeasuring2(items){}
    region: make (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\start.js
    datetime: 2021-10-24-09-29
    timestamp: 1635092948742.831
    size: 1855
  toogle_internet_status:
    name: toogle_internet_status
    code: "function toogle_internet_status() {\r

      \  if (is_online()) {\r

      \    go_offline();\r

      \    let b = mBy('b_internet');\r

      \    b.className = 'statusbutton enabled off';\r

      \    b.innerHTML = 'offline';\r

      \  } else {\r

      \    go_online();\r

      \    db_save();\r

      \    let b = mBy('b_internet');\r

      \    b.className = 'statusbutton enabled on';\r

      \    b.innerHTML = 'online';\r

      \  }\r

      \  console.log('InternetStatus:', is_online() ? 'online' :
      'OFFLINE');\r

      }\r\n"
    sig: function toogle_internet_status(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  set_language:
    name: set_language
    code: "function set_language(lang = 'E', update_ui = true) {\r

      \  console.log('lang', lang);\r

      \  if (isdef(G)) {\r

      \    G.language = G.lang = lang; lookupSetOverride(U.games, [G.id,
      'language'], lang);\r

      \    Speech.setLanguage(lang);\r

      \  }\r

      }\r\n"
    sig: function set_language(lang = 'E', update_ui = true){}
    region: funcs (overrides.js)
    filename: overrides.js
    type: func
    fname: overrides.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\overrides.js
    datetime: 2021-10-26-19-40
    timestamp: 1635302405556.3906
    size: 2086
  update_language_choices:
    name: update_language_choices
    code: "function update_language_choices(g) {\r

      \  let langs = g.availableLanguages;\r

      \  let language_holder = mBy('language_holder');\r

      \  clearElement(language_holder);\r

      \  let friendly = { E: 'english', D: 'german', S: 'spanish', F:
      'french', C: 'mandarin' };\r

      \  if (isdef(language_holder) && isdef(langs) && langs.length > 1)
      {\r

      \    let avail = toLetterList(langs);\r

      \    let labels = avail.map(x => friendly[x]);\r

      \    let esel = mSelect(language_holder, avail, friendly,
      valf(g.lang, 'E'), (ev) => {\r

      \      let sel = ev.target;\r

      \      let val = sel.value;\r

      \      console.log('selected language', val)\r

      \      set_language(val, false);\r

      \    });\r

      \    mClass(esel.firstChild, 'statusselect');\r

      \  } else if (isdef(language_holder)) {\r

      \    mDiv(language_holder, { patop: 6 }, null, friendly[g.lang],
      'statusselect');\r

      \  }\r

      }\r\n"
    sig: function update_language_choices(g){}
    region: funcs (overrides.js)
    filename: overrides.js
    type: func
    fname: overrides.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\overrides.js
    datetime: 2021-10-26-19-40
    timestamp: 1635302405556.3906
    size: 2086
  set_sound:
    name: set_sound
    code: "function set_sound(silent = false) {\r

      \  let b = mBy('b_sound');\r

      \  if (silent) {\r

      \    b.className = 'statusbutton sym enabled off';\r

      \    b.innerHTML = '🔈️';\r

      \  } else {\r

      \    b.className = 'statusbutton sym enabled on';\r

      \    b.innerHTML = '🔊';\r

      \  }\r

      }\r\n"
    sig: function set_sound(silent = false){}
    region: funcs (overrides.js)
    filename: overrides.js
    type: func
    fname: overrides.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\overrides.js
    datetime: 2021-10-26-19-40
    timestamp: 1635302405556.3906
    size: 2086
  toggle_sound:
    name: toggle_sound
    code: "function toggle_sound() {\r

      \  U.settings.silent = !U.settings.silent;\r

      \  if (isdef(G)) G.silent = U.settings.silent;\r

      \  set_sound(U.settings.silent);\r

      }\r\n"
    sig: function toggle_sound(){}
    region: funcs (overrides.js)
    filename: overrides.js
    type: func
    fname: overrides.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\overrides.js
    datetime: 2021-10-26-19-40
    timestamp: 1635302405556.3906
    size: 2086
  create_pic_dicts:
    name: create_pic_dicts
    code: "async function create_pic_dicts(list = ['e', 'd', 'f', 's']) {\r

      \  let syms = await
      route_path_yaml_dict('../base/assets/allSyms.yaml');\r

      \  for (const l of list) {\r

      \    let di = await create_pic_dict(l, syms);\r

      \    downloadAsYaml(di, l + 'picdict');\r

      \  }\r

      \  loader_off();\r

      }\r\n"
    sig: async function create_pic_dicts(list = ['e', 'd', 'f', 's']){}
    region: dictionaries (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  create_pic_dict:
    name: create_pic_dict
    code: "async function create_pic_dict(l, syms) {\r

      \  let edict = await
      route_path_text(`../base/assets/words/${l}dict.txt`);\r

      \  console.log('dict', edict);\r

      \  let lang = l.toUpperCase();\r

      \  let words = l == 'e' ? edict.split('\\r\\n') :
      edict.split('\\n');\r

      \  console.log('words', words);\r

      \  console.log('syms', syms);\r

      \  let wdi = {};\r

      \  for (const w of words) {\r

      \    let w1 = w.trim().toLowerCase();\r

      \    if (isEmpty(w1)) continue;\r

      \    wdi[w1] = true;\r

      \  }\r

      \  let slist = [];\r

      \  for (const skey in syms) {\r

      \    let e = syms[skey][lang];\r

      \    if (nundef(e)) continue;\r

      \    e = e.trim().toLowerCase();\r

      \    slist.push({ key: skey, w: e });\r

      \  }\r

      \  slist_sorted = sortBy(slist, 'w');\r

      \  console.log('slist sorted', slist_sorted);\r

      \  console.log(wdi);\r

      \  let edi = {};\r

      \  for (const o of slist_sorted) {\r

      \    let [e, skey] = [o.w, o.key];\r

      \    if (e in wdi) edi[e] = skey;\r

      \    else console.log('word', e, 'from syms not in dict!!!');\r

      \  }\r

      \  console.log('result', edi, Object.keys(edi).length);\r

      \  return edi;\r

      \  return;\r

      \  for (const skey in syms) {\r

      \    let e = syms[skey][lang];\r

      \    if (nundef(e)) continue;\r

      \    e = e.trim().toLowerCase();\r

      \    console.assert(isdef(e) && e == e.toLowerCase(), 'word in syms
      not lowercasse:' + e);\r

      \    if (e in wdi) edi[e] = skey;\r

      \    else console.log('word', e, 'from syms not in dict!!!');\r

      \  }\r

      \  console.log('result', edi, Object.keys(edi).length);\r

      \  return edi;\r

      }\r\n"
    sig: async function create_pic_dict(l, syms){}
    region: dictionaries (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  ensureDictionary:
    name: ensureDictionary
    code: "function ensureDictionary(){\r

      \  if (nundef(Dictionary)) { Dictionary = { E: {}, S: {}, F: {}, C:
      {}, D: {} } };\r

      \  for (const k in Syms) {\r

      \    for (const lang of ['E', 'D', 'F', 'C', 'S']) {\r

      \      let w = Syms[k][lang];\r

      \      if (nundef(w)) continue;\r

      \      Dictionary[lang][w.toLowerCase()] =
      Dictionary[lang][w.toUpperCase()] = k;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function ensureDictionary(){}
    region: classes (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  game_start_new:
    name: game_start_new
    code: "function game_start_new() {\r

      \  console.log('start a new game')\r

      }\r\n"
    sig: function game_start_new(){}
    region: var (gameplay.js)
    filename: gameplay.js
    type: func
    fname: gameplay.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\gameplay.js
    datetime: 2021-11-12-13-16
    timestamp: 1636751796522.3003
    size: 488
  convert_from_row:
    name: convert_from_row
    code: "function convert_from_row(row) {\r

      \  for (const k in row) {\r

      \    let val = row[k];\r

      \    if (isNumber(val)) row[k] = Number(val);\r

      \    if (isString(val) && val[0] == '{') { row[k] = JSON.parse(val);
      }\r

      \    if (val == 'null') row[k] = null;\r

      \    if (k == 'players' && isString(row[k])) row[k] =
      val.split(',');\r

      \  }\r

      }\r\n"
    sig: function convert_from_row(row){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  convert_from_server:
    name: convert_from_server
    code: "function convert_from_server(obj) {\r

      \  if (isdef(obj.table)) convert_from_row(obj.table);\r

      \  if (isdef(obj.playerdata)) {\r

      \    for (const row of obj.playerdata) {\r

      \      convert_from_row(row);\r

      \    }\r

      \  }\r

      \  if (isdef(obj.moves)) {\r

      \    for (const row of obj.moves) {\r

      \      convert_from_row(row);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function convert_from_server(obj){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  ensure_assets:
    name: ensure_assets
    code: "function ensure_assets(obj) {\r

      \  if (nundef(DB)) {\r

      \    DB = jsyaml.load(obj.db);\r

      \    symbolDict = Syms = jsyaml.load(obj.syms);\r

      \    SymKeys = Object.keys(Syms);\r

      \    ByGroupSubgroup = jsyaml.load(obj.symGSG);\r

      \    WordP = jsyaml.load(obj.allWP);\r

      \    C52 = jsyaml.load(obj.c52);\r

      \    Cinno = jsyaml.load(obj.cinno);\r

      \    FenPositionList = csv2list(obj.fens);\r

      \    KeySets = getKeySets();\r

      \  }\r

      \  console.assert(isdef(DB), 'NO DB!!!!!!!!!!!!!!!!!!!!!!!!!!!');\r

      }\r\n"
    sig: function ensure_assets(obj){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  reload_assets:
    name: reload_assets
    code: "function reload_assets() {\r

      \  const asset_names = {\r

      \    'Syms': 'allSyms',\r

      \    'users': 'db_users',\r

      \    'games': 'db_games',\r

      \    'tables': 'db_tables',\r

      \  }\r

      \  assets_get(arguments);\r

      }\r\n"
    sig: function reload_assets(){}
    region: assets (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  assets_get:
    name: assets_get
    code: "function assets_get() {\r

      \  where([...arguments]);\r

      \  to_server([...arguments], 'assets');\r

      }\r\n"
    sig: function assets_get(){}
    region: assets (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  assets_parse:
    name: assets_parse
    code: "function assets_parse(o) {\r

      \  where(o);\r

      \  for (const k in o) {\r

      \    let text = o[k]; \r

      \    if (k == 'allSyms') {\r

      \      symbolDict = Syms = jsyaml.load(text);\r

      \      SymKeys = Object.keys(Syms);\r

      \    } else if (k == 'symGSG') {\r

      \      ByGroupSubgroup = jsyaml.load(text);\r

      \    } else if (k == 'allWP') {\r

      \      WordP = jsyaml.load(text);\r

      \    } else if (k == 'fens') {\r

      \      FenPositionList = csv2list(text);\r

      \    } else if (startsWith(k, 'db_')) {\r

      \      let okey = stringAfter(k, '_');\r

      \      DB[okey] = jsyaml.load(text);\r

      \    } else {\r

      \      window[capitalize(k)] = jsyaml.load(text); \r

      \    }\r

      \  }\r

      \  if (nundef(KeySets) && isdef(o.symGSG)) { KeySets = getKeySets();
      }\r

      }\r\n"
    sig: function assets_parse(o){}
    region: assets (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  drag:
    name: drag
    code: "function drag(ev) { clear_quick_buttons();
      ev.dataTransfer.setData(\"text\", ev.target.id); }\r\n"
    sig: function drag(ev){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  handle_drag_and_drop:
    name: handle_drag_and_drop
    code: "function handle_drag_and_drop(e) {\r

      \  if (e.type == \"dragover\") {\r

      \    e.preventDefault();\r

      \    mClass(e.target, \"dragging\");\r

      \  } else if (e.type == \"dragleave\") {\r

      \    mClassRemove(e.target, \"dragging\");\r

      \  } else if (e.type == \"drop\") {\r

      \    let target = e.target;\r

      \    let id = target.id;\r

      \    mClassRemove(e.target, \"dragging\");\r

      \    console.log('===>dropped on target:', e.target);\r

      \    e.preventDefault();\r

      \    DA.imageChanged = true;\r

      \    mClassRemove(e.target, \"dragging\");\r

      \    mDropImage(e, e.target);\r

      \  } else {\r

      \    mClassRemove(e.target, \"dragging\");\r

      \  }\r

      }\r\n"
    sig: function handle_drag_and_drop(e){}
    region: drag (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  generate_table_id:
    name: generate_table_id
    code: "function generate_table_id(gamename) {\r

      \  return gamename + '_' + get_timestamp();\r

      }\r\n"
    sig: function generate_table_id(gamename){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_image_path:
    name: get_image_path
    code: "function get_image_path(userdata) {\r

      \  let p = '../base/assets/images/';\r

      \  if (userdata.image) p += userdata.name; else p +=
      'unknown_user';\r

      \  p += '.jpg';\r

      \  if (is_online()) p += '?=' + Date.now();\r

      \  return p;\r

      }\r\n"
    sig: function get_image_path(userdata){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_timestamp:
    name: get_timestamp
    code: "function get_timestamp() { return Date.now(); }\r\n"
    sig: function get_timestamp(){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  where:
    name: where
    code: "function where(o) {\r

      \  let fname = getFunctionsNameThatCalledThisFunction();\r

      }\r\n"
    sig: function where(o){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_contacts:
    name: get_contacts
    code: "function get_contacts(e) { get_data({}, \"contacts\"); }\r\n"
    sig: function get_contacts(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  present_contacts:
    name: present_contacts
    code: "function present_contacts(obj) {\r

      \  let others = sync_users(obj.myusers);\r

      \  Session.others = others.map(x => x.name);\r

      \  var inner_left_panel = mBy(\"inner_left_panel\");\r

      \  inner_left_panel.innerHTML = createContactsContent(others,
      obj.msgs);\r

      }\r\n"
    sig: function present_contacts(obj){}
    region: misc (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  get_account:
    name: get_account
    code: "function get_account() {\r

      \  let udata = get_current_userdata();\r

      \  mBy(\"inner_left_panel\").innerHTML = present_account(udata);\r

      }\r\n"
    sig: function get_account(){}
    region: account (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_login:
    name: get_login
    code: "function get_login(php = true) { to_server(Session.cur_user, \"login\",
      php); }\r\n"
    sig: function get_login(php = true){}
    region: login (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  collect_data:
    name: collect_data
    code: "function collect_data() {\r

      \  var myform = mBy(\"myform\");\r

      \  var inputs = myform.getElementsByTagName(\"INPUT\");\r

      \  var data = {};\r

      \  for (var i = inputs.length - 1; i >= 0; i--) {\r

      \    var key = inputs[i].name;\r

      \    switch (key) {\r

      \      case \"username\":\r

      \      case \"name\":\r

      \        let uname = inputs[i].value;\r

      \        console.log(`${key} in input is`, uname);\r

      \        uname = replaceAllSpecialChars(uname, ' ', '_');\r

      \        uname = replaceAllSpecialChars(uname, '&', '_');\r

      \        uname = replaceAllSpecialChars(uname, '+', '_');\r

      \        uname = replaceAllSpecialChars(uname, '?', '_');\r

      \        uname = replaceAllSpecialChars(uname, '=', '_');\r

      \        uname = replaceAllSpecialChars(uname, '+', '_');\r

      \        uname = replaceAllSpecialChars(uname, '/', '_');\r

      \        uname = replaceAllSpecialChars(uname, '\\\\', '_');\r

      \        data[key] = uname.toLowerCase();\r

      \        break;\r

      \      case \"motto\":\r

      \        data[key] = inputs[i].value.toLowerCase();\r

      \    }\r

      \  }\r

      \  if (DA.imageChanged) {\r

      \    sendHtml('imgPreview', Session.cur_user);\r

      \  } else {\r

      \    let udata = get_current_userdata();\r

      \    let changed = false;\r

      \    if (DA.colorChanged) { udata.color = DA.newColor; changed =
      true; }\r

      \    if (data.motto != udata.motto) {\r

      \      changed = true;\r

      \      udata.motto = data.motto;\r

      \      mBy('motto').innerHTML = udata.motto;\r

      \    }\r

      \    if (changed) {\r

      \      DA.next = get_login;\r

      \      db_save(); \r

      \    }\r

      \  }\r

      }\r\n"
    sig: function collect_data(){}
    region: account (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  createLoginContent:
    name: createLoginContent
    code: "function createLoginContent(userdata) {\r

      \  return `\r

      \  <div id=\"dAccount\" style=\"max-width=500px; margin-top:10px;
      display:flex; animation: appear1 1s ease;justify-content:center;
      align-content:center\">\r

      \    <div id=\"error\">some text</div>\r

      \    <div style='text-align:center'>\r

      \      <form id=\"myform\" autocomplete=\"off\"
      style='text-align:center;background:${userdata.color}'>\r

      \        <img id=\"imgPreview\" src='${get_image_path(userdata)}'
      style=\"height:200px;margin:10px;\" />\r

      \        <input id='iUsername' type=\"text\" name=\"username\"
      placeholder='username' value=\"${userdata.name}\" autofocus\r

      \          onkeydown=\"if (event.keyCode ===
      13){event.preventDefault();console.log('WTF!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\
      ;collect_data(event);}\" />\r

      \        <br />\r

      \        <input id='save_settings_button' type=\"button\"
      value=\"Submit\" onclick=\"collect_data(event)\" ><br>\r

      \      </form>\r

      \  </div></div>\r

      \  `;\r

      }\r\n"
    sig: function createLoginContent(userdata){}
    region: account (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  sendHtml:
    name: sendHtml
    code: "function sendHtml(id, filename) {\r

      \  window.scrollTo(0, 0);\r

      \  html2canvas(document.getElementById(id)).then(function (canvas)
      {\r

      \    let imgData = canvas.toDataURL(\"image/jpeg\", 0.9);\r

      \    var profile_image = mBy(\"profile_image\");\r

      \    profile_image.src = imgData;\r

      \    mBy('imgPreview').src = imgData;\r

      \    var ajax = new XMLHttpRequest();\r

      \    ajax.open(\"POST\", \"server/save_url_encoded_image.php\",
      true);\r

      \    ajax.setRequestHeader(\"Content-type\",
      \"application/x-www-form-urlencoded\");\r

      \    ajax.send(\"image=\" + canvas.toDataURL(\"image/jpeg\", 0.9) +
      \"&filename=\" + filename + \".jpg\");\r

      \    ajax.onreadystatechange = function () {\r

      \      if (this.readyState == 4 && this.status == 200) {\r

      \        let udata = get_current_userdata();\r

      \        if (!udata.image) { udata.image = true; db_save(); } \r

      \        get_login();\r

      \      }\r

      \    };\r

      \  });\r

      }\r\n"
    sig: function sendHtml(id, filename){}
    region: account (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_login_new:
    name: get_login_new
    code: "function get_login_new(php = true) { to_server(Session.cur_user,
      \"login_new\", php); }\r\n"
    sig: function get_login_new(php = true){}
    region: NEW (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  present_login_new:
    name: present_login_new
    code: "function present_login_new(obj) {\r

      \  let others = sync_users(obj.myusers);\r

      \  Session.others = others.map(x => x.name);\r

      \  var inner_left_panel = mBy(\"inner_left_panel\");\r

      \  inner_left_panel.innerHTML = createLoginNewContent(others,
      obj.msgs);\r

      }\r\n"
    sig: function present_login_new(obj){}
    region: NEW (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  createLoginNewContent:
    name: createLoginNewContent
    code: "function createLoginNewContent(myusers, msgs) {\r

      \  let mydata = uiGetLoginNewStylesAndStart();\r

      \  mydata += uiGetLoginNewList(myusers, msgs);\r

      \  return mydata;\r

      }\r\n"
    sig: function createLoginNewContent(myusers, msgs){}
    region: NEW (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  uiGetLoginNewStylesAndStart:
    name: uiGetLoginNewStylesAndStart
    code: "function uiGetLoginNewStylesAndStart() {\r

      \  let mydata = `\r

      \  <style>\r

      \    @keyframes appear{\r

      \      0%{opacity:0;transform: translateY(50px)}\r

      \      100%{opacity:1;transform: translateY(0px)}\r

      \     }\r

      \     .contact{\r

      \       cursor:pointer;\r

      \       transition: all .5s cubic-bezier(0.68, -2, 0.265, 1.55);\r

      \     }\r

      \     .contact:hover{\r

      \       transform: scale(1.1);\r

      \     }\r

      \  </style>\r

      \  <div style=\"text-align: center; animation: appear 1s ease
      both\">\r

      \  `;\r

      \  return mydata;\r

      }\r\n"
    sig: function uiGetLoginNewStylesAndStart(){}
    region: NEW (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  uiGetLoginNewList:
    name: uiGetLoginNewList
    code: "function uiGetLoginNewList(myusers, msgs) {\r

      \  mydata = '';\r

      \  for (const r of myusers) {\r

      \    row = r;\r

      \    mydata += uiGetLoginNew(row, msgs);\r

      \  }\r

      \  return mydata;\r

      }\r\n"
    sig: function uiGetLoginNewList(myusers, msgs){}
    region: NEW (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  uiGetLoginNew:
    name: uiGetLoginNew
    code: "function uiGetLoginNew(row, msgs = {}) {\r

      \  let image = get_image_path(row); \r

      \  let mydata = `\r

      \      <div class='contact'
      style='position:relative;text-align:center;margin-bottom:18px;'
      username='${row.name}' \r

      \        onclick='onclick_user_login_new(event)'>\r

      \        <img src='${image}' draggable='true'
      ondragstart='drag(event)' class='img_person sz100' style='margin:0;'/>\r

      \        <br>${row.name}`;\r

      \  if (isdef(msgs[row.username])) {\r

      \    mydata += `<div
      style='width:20px;height:20px;border-radius:50%;background-color:orange;c\
      olor:white;position:absolute;left:0px;top:0px;'>` + msgs[row.username] +
      \"</div>\";\r

      \  }\r

      \  mydata += \"</div>\";\r

      \  return mydata;\r

      }\r\n"
    sig: function uiGetLoginNew(row, msgs = {}){}
    region: NEW (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\done.js
    datetime: 2021-11-21-08-27
    timestamp: 1637512072370.2896
    size: 15567
  param_present_contacts:
    name: param_present_contacts
    code: "function param_present_contacts(obj, dParent, onclick_func_name) {\r

      \  let others = sync_users(obj.users);\r

      \  Session.others = others.map(x => x.name);\r

      \  let msgs = valf(obj.msgs, {});\r

      \  let mydata = `\r

      \  <style>\r

      \    @keyframes appear{\r

      \      0%{opacity:0;transform: translateY(50px)}\r

      \      100%{opacity:1;transform: translateY(0px)}\r

      \     }\r

      \     .contact{\r

      \       cursor:pointer;\r

      \       transition: all .5s cubic-bezier(0.68, -2, 0.265, 1.55);\r

      \     }\r

      \     .contact:hover{\r

      \       transform: scale(1.1);\r

      \     }\r

      \  </style>\r

      \  <div style=\"text-align: center; animation: appear 1s ease
      both\">\r

      \  `;\r

      \  let mydata_list = '';\r

      \  for (const r of others) {\r

      \    row = r;\r

      \    let image = get_image_path(row); \r

      \    let mydata_element = `\r

      \        <div class='contact'
      style='position:relative;text-align:center;margin-bottom:18px;'
      username='${row.name}' \r

      \          onclick='${onclick_func_name}(event)'>\r

      \          <img src='${image}' draggable='true'
      ondragstart='drag(event)' class='img_person sz100' style='margin:0;'/>\r

      \          <br>${row.name}`;\r

      \    if (isdef(msgs[row.username])) {\r

      \      mydata_element += `<div
      style='width:20px;height:20px;border-radius:50%;background-color:orange;c\
      olor:white;position:absolute;left:0px;top:0px;'>` + msgs[row.username] +
      \"</div>\";\r

      \    }\r

      \    mydata_element += \"</div>\";\r

      \    mydata_list += mydata_element;\r

      \  }\r

      \  mydata += mydata_list;\r

      \  dParent.innerHTML = mydata;\r

      }\r\n"
    sig: function param_present_contacts(obj, dParent, onclick_func_name){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  present_table:
    name: present_table
    code: "function present_table(obj) {\r

      \  Session.cur_menu = 'play';\r

      \  console.assert(isdef(obj.table), 'present_table without
      obj.table!!!!!!!!!!!!!!');\r

      \  update_session(obj); \r

      \  let table_status = Session.cur_table.status;\r

      \  let my_status = Session.cur_me.player_status;\r

      \  let have_another_move = my_status == 'joined';\r

      \  if (table_status == 'deleted') { in_game_off();
      in_game_open_prompt_off(); status_message_off(); get_games(); return; }\r

      \  if (!in_game()) { open_game_ui(); in_game_on(); }\r

      \  let d = mBy('table'); d.animate([{ opacity: 0, transform:
      'translateY(50px)' }, { opacity: 1, transform: 'translateY(0px)' },], {
      fill: 'both', duration: 1000, easing: 'ease' });\r

      \  if (!have_another_move) { reload_last_game_state(); }\r

      \  else if (!in_game_open_prompt()) { open_prompt();
      in_game_open_prompt_on(); }\r

      \  else { uiActivated = true; }\r

      \  update_game_status(Session.cur_players); \r

      \  if (table_status == 'over') {\r

      \    stop_game();\r

      \    let winners = Session.winners = race_check_endcondition();\r

      \    if (!isEmpty(winners)) {\r

      \      stop_game();\r

      \      DA.after_status_message = onclick_gameover_screen;\r

      \      show_gameover(winners);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function present_table(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  continue_game_ending_process:
    name: continue_game_ending_process
    code: "function continue_game_ending_process() {\r

      \  let game = Session.cur_game;\r

      \  let winners = Session.winners;\r

      \  if (nundef(Session.cur_table.scoring_complete)) {\r

      \    console.log('scoring...')\r

      \    decrease_handicap_if_winstreak(winners, game);\r

      \    Session.cur_table.scoring_complete = true;\r

      \  }\r

      \  to_server({ tid: Session.cur_tid, uname: Session.cur_user },
      'seen');\r

      }\r\n"
    sig: function continue_game_ending_process(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work.js
    datetime: 2021-11-26-05-54
    timestamp: 1637934848308.069
    size: 2395
  start_with_basic_assets:
    name: start_with_basic_assets
    code: "function start_with_basic_assets() {\r

      \  //wenn mit https://www.telecave.net/aroot/bg gestartet wird, ist
      man hier ein guest!\r

      \  if (is_admin()) {\r

      \    hide('dIntro');\r

      \    let user = load_user(Session.cur_user); \r

      \    loader_off();\r

      \    DA.next = get_dictionary();\r

      \    get_games();\r

      \    show('b_polling');\r

      \  }else{\r

      \    close_sidebar();\r

      \    mBy('user_info_mini').style.display = 'flex';\r

      \    mBy('b_toggle_sidebar').style.display = 'none';\r

      \    show('dIntro');\r

      \    get_intro();\r

      \  }\r

      }\r\n"
    sig: function start_with_basic_assets(){}
    region: start (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  danext:
    name: danext
    code: "function danext() { if (isdef(DA.next)) { let f = DA.next; DA.next =
      null; f(); } }\r\n"
    sig: function danext(){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  show_guest_screen:
    name: show_guest_screen
    code: "function show_guest_screen() { get_intro(); }\r\n"
    sig: function show_guest_screen(){}
    region: intro (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  get_intro:
    name: get_intro
    code: "function get_intro() { to_server(Session.cur_user, \"intro\"); }\r\n"
    sig: function get_intro(){}
    region: intro (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  present_intro:
    name: present_intro
    code: "function present_intro() {\r

      \  let dParent = mBy('divTest'); show(dParent);
      clearElement(dParent);\r

      \  mStyle(dParent, { position: 'absolute', top: 0, bg: 'green',
      wmin: '100vw', hmin: '100vw' });\r

      \  param_present_contacts(Session, dParent,
      'onclick_user_in_intro');\r

      }\r\n"
    sig: function present_intro(){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\base\js\present.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 2927
  onclick_user_in_intro:
    name: onclick_user_in_intro
    code: "function onclick_user_in_intro(ev) {\r

      \  let uname = try_find_username(ev);\r

      \  if (uname) { present_non_admin_user(uname); }\r

      }\r\n"
    sig: function onclick_user_in_intro(ev){}
    region: non (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  intro_create_score_table:
    name: intro_create_score_table
    code: "function intro_create_score_table(fen) {\r

      \  let dParent = mBy('dIntro');\r

      \  let d = mDiv(dParent, { margin: 'auto', w: 300 }); \r

      \  html = `<div style='text-align:center;margin-top:100px'>\r

      \  <table id='customers'><tr><th>player</th><th>score</th></tr>\r

      \  `;\r

      \  let plparts = fen.split(',');\r

      \  for (const pl of plparts) {\r

      \    html += `<tr><td>${stringBefore(pl,
      ':')}</td><td>${stringAfter(pl, ':')}</td></tr>`\r

      \  }\r

      \  html += '</table></div>';\r

      \  d.innerHTML = html;\r

      }\r\n"
    sig: function intro_create_score_table(fen){}
    region: intro (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  intro_show_user_image:
    name: intro_show_user_image
    code: "function intro_show_user_image(uname) {\r

      \  let dParent = mBy('dIntro');\r

      \  let d = mDiv(dParent, { margin: 'auto', w: 300 });\r

      \  let html = `\r

      \  <div style='text-align:center;margin-top:100px'>\r

      \    <img src='../base/assets/images/${uname}.jpg'
      class=\"img_person\" height=200 />\r

      \  </div>\r

      \  `;\r

      \  d.innerHTML = html;\r

      }\r\n"
    sig: function intro_show_user_image(uname){}
    region: intro (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  create_score_table:
    name: create_score_table
    code: "function create_score_table() {\r

      \  let t = Session.cur_table;\r

      \  let fen = t.fen;\r

      \  let dParent = mBy('dIntro');\r

      \  let d = mDiv(dParent, { margin: 'auto', w: 300, bg: 'red' });\r

      \  html = `<div style='text-align:center;margin-top:200px'>\r

      \  <table id='customers'><tr><th>player</th><th>score</th></tr>\r

      \  `;\r

      \  let plparts = fen.split(',');\r

      \  for (const pl of plparts) {\r

      \    html += `<tr><td>${stringBefore(pl,
      ':')}</td><td>${stringAfter(pl, ':')}</td></tr>`\r

      \  }\r

      \  html += '</table></div>';\r

      \  d.innerHTML = html;\r

      }\r\n"
    sig: function create_score_table(){}
    region: intro (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  show_user_intro_screen:
    name: show_user_intro_screen
    code: "function show_user_intro_screen(is_show_ranking = false, is_start_poll =
      true) {\r

      \  show('dIntro'); clearElement('dIntro');\r

      \  intro_show_user_image(Session.cur_user);\r

      \  status_message(`hi, ${capitalize(Session.cur_user)}, a game is
      starting soon...`, { top: 330, classname: 'slow_gradient_blink' });\r

      \  if (is_show_ranking) {\r

      \    let t = Session.cur_table;\r

      \    let fen = t.status == 'past' ? t.fen :
      get_score_fen_from_cur_players();\r

      \    intro_create_score_table(fen);\r

      \  }\r

      \  if (is_start_poll) poll_for_table_started();\r

      }\r\n"
    sig: function show_user_intro_screen(is_show_ranking = false, is_start_poll =
      true){}
    region: intro (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 45641
  start_polling:
    name: start_polling
    code: "function start_polling(data, type, onsuccess, ms = 5000) {\r

      \  DA.poll = {\r

      \    data: data,\r

      \    type: type,\r

      \    onsuccess: onsuccess,\r

      \    ms: ms,\r

      \  };\r

      \  poll();\r

      }\r\n"
    sig: function start_polling(data, type, onsuccess, ms = 5000){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  poll:
    name: poll
    code: "function poll() {\r

      \  if (nundef(U) || nundef(G)) { console.log('poll without U or
      G!!!', U, G); return; }\r

      \  Counter.poll = isdef(Counter.poll) ? Counter.poll + 1 : 1;\r

      \  console.log('____poll:', Counter.poll);\r

      \  phpPost({ friendly: G.friendly }, 'table');\r

      }\r\n"
    sig: function poll(){}
    region: funcs (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\simple\polling.js
    datetime: 2022-04-26-06-17
    timestamp: 1650979039789.4653
    size: 912
  poll_for_table_started:
    name: poll_for_table_started
    code: "function poll_for_table_started() {\r

      \  start_polling(Session.cur_user, 'poll_table_started',
      on_poll_table_started, 3000); \r

      }\r\n"
    sig: function poll_for_table_started(){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  poll_for_table_show:
    name: poll_for_table_show
    code: "function poll_for_table_show() {\r

      \  start_polling({ uname: Session.cur_user, tid: Session.cur_tid },
      'poll_table_show', on_poll_table_show, 3000); \r

      }\r\n"
    sig: function poll_for_table_show(){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  poll_for_table_seen_or_deleted:
    name: poll_for_table_seen_or_deleted
    code: "function poll_for_table_seen_or_deleted() {\r

      \  start_polling({ uname: Session.cur_user, tid: Session.cur_tid },
      'poll_table_seen', on_poll_table_seen, 3000); \r

      }\r\n"
    sig: function poll_for_table_seen_or_deleted(){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  check_poll_table_started:
    name: check_poll_table_started
    code: "function check_poll_table_started(obj) {\r

      \  console.log('obj', obj);\r

      \  if (isdef(obj) && !isEmpty(obj.tables)) {\r

      \    DA.poll.onsuccess(obj);\r

      \  } else {\r

      \    TOTicker = setTimeout(poll, DA.poll.ms);\r

      \  }\r

      }\r\n"
    sig: function check_poll_table_started(obj){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  on_poll_table_started:
    name: on_poll_table_started
    code: "function on_poll_table_started(obj) {\r

      \  let t = obj.tables[0];\r

      \  set_start_data_from_fen(t.fen,t.game);\r

      \  Session.cur_tid = t.id;\r

      \  Session.cur_game = t.game;\r

      \  delete DA.poll;\r

      \  status_message_off();\r

      \  clearElement('dIntro');\r

      \  hide('dIntro');\r

      \  close_sidebar();\r

      \  mBy('user_info_mini').style.display = 'flex';\r

      \  get_play();\r

      }\r\n"
    sig: function on_poll_table_started(obj){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  check_poll_table_show:
    name: check_poll_table_show
    code: "function check_poll_table_show(obj) {\r

      \  if (isdef(obj) && !isEmpty(obj.table) && obj.table.status ==
      'show') {\r

      \    DA.poll.onsuccess(obj);\r

      \  } else {\r

      \    TOTicker = setTimeout(poll, DA.poll.ms);\r

      \  }\r

      }\r\n"
    sig: function check_poll_table_show(obj){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  on_poll_table_show:
    name: on_poll_table_show
    code: "function on_poll_table_show(obj) {\r

      \  delete DA.poll;\r

      \  status_message_off();\r

      \  present_table(obj);\r

      }\r\n"
    sig: function on_poll_table_show(obj){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  check_poll_table_seen:
    name: check_poll_table_seen
    code: "function check_poll_table_seen(obj) {\r

      \  console.assert(isdef(obj.table), 'check_poll_table_seen NO
      TABLE!!!!');\r

      \  let t = obj.table;\r

      \  if (t.status == 'seen' || t.status == 'past') {\r

      \    DA.poll.onsuccess(obj);\r

      \  } else {\r

      \    TOTicker = setTimeout(poll, DA.poll.ms);\r

      \  }\r

      }\r\n"
    sig: function check_poll_table_seen(obj){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  on_poll_table_seen:
    name: on_poll_table_seen
    code: "function on_poll_table_seen(obj) {\r

      \  delete DA.poll;\r

      \  update_session(obj); \r

      \  if (is_game_host()) {\r

      \    let txt = jsyaml.dump(DB);\r

      \    DA.next = get_games;\r

      \    let fen = get_score_fen_from_cur_players();\r

      \    to_server({ tid: Session.cur_tid, fen: fen, uname:
      Session.cur_user, db: txt }, 'save_and_delete');\r

      \  } else {\r

      \    show_user_intro_screen(true);\r

      \  }\r

      }\r\n"
    sig: function on_poll_table_seen(obj){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  onclick_reload_state:
    name: onclick_reload_state
    code: "function onclick_reload_state() {\r

      \  let g = Session;\r

      \  let tid = g.cur_tid;\r

      \  if (nundef(tid) && is_admin()) get_games();\r

      \  else if (nundef(tid)) get_intro();\r

      \  else if (is_admin()) { stop_game(); get_play(); }\r

      \  else {\r

      \    stop_game();\r

      \    Session.cur_tid = null;\r

      \    to_server({ uname: g.cur_user }, 'newest_table');\r

      \  }\r

      }\r\n"
    sig: function onclick_reload_state(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_edit_players:
    name: onclick_edit_players
    code: "function onclick_edit_players() {\r

      \  let ta = mBy('ta_edit_players');\r

      \  show(ta);\r

      \  let button = mBy('b_edit_players');\r

      \  button.innerHTML = 'submit';\r

      \  button.onclick = onclick_modify_def_players;\r

      \  ta.onkeyup = ev => {\r

      \    if (ev.key === \"Enter\") {\r

      \      ev.preventDefault();\r

      \      ev.cancelBubble = true;\r

      \      onclick_modify_def_players(ev);\r

      \    }\r

      \  };\r

      \  ta.focus();\r

      }\r\n"
    sig: function onclick_edit_players(){}
    region: old (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_modify_def_players:
    name: onclick_modify_def_players
    code: "function onclick_modify_def_players(ev) {\r

      \  let ta = mBy('ta_edit_players');\r

      \  let text = ta.value;\r

      \  let words = splitAtAnyOf(text, ', \\n');\r

      \  let names = [];\r

      \  let levels = {};\r

      \  for (const w of words) {\r

      \    if (w.indexOf('(') < 0) { names.push(w); continue; }\r

      \    let name = stringBefore(w, '(');\r

      \    let level = firstNumber(w);\r

      \    levels[name] = level;\r

      \    names.push(name);\r

      \  }\r

      \  console.log('levels', levels, 'names', names);\r

      \  if (!isEmpty(get_keys(levels))) {\r

      \    for (const n in levels) {\r

      \      lookupSetOverride(DB.users, [n, 'games', Session.cur_game,
      'startlevel'], levels[n]);\r

      \    }\r

      \    db_save();\r

      \  }\r

      \  let non_existent = names.filter(x => nundef(DB.users[x]));\r

      \  if (!isEmpty(non_existent)) {\r

      \    status_message('the following players will be discarded because
      they dont exist: ' + non_existent.join(', '));\r

      \    names = arrMinus(names, non_existent);\r

      \    if (names.length < 2) {\r

      \      let plname = chooseRandom(get_keys(DB.users), x => x !=
      Session.cur_user);\r

      \      names.push(plname);\r

      \    }\r

      \  }\r

      \  let final_players = get_def_players_for_user(Session.cur_user,
      names);\r

      \  populate_players(final_players);\r

      }\r\n"
    sig: function onclick_modify_def_players(ev){}
    region: old (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  modify_def_players:
    name: modify_def_players
    code: "function modify_def_players(list) {\r

      \  console.log('list', list);\r

      \  return;\r

      \  let uname = Session.cur_user;\r

      \  Session.def_players = list;\r

      \  newlist = get_def_players_for_user(uname);\r

      \  populate_players(newlist);\r

      }\r\n"
    sig: function modify_def_players(list){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  onclick_delete_table:
    name: onclick_delete_table
    code: "function onclick_delete_table() { stop_game(); stop_polling();
      delete_current_table(); }\r\n"
    sig: function onclick_delete_table(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_reset_tables:
    name: onclick_reset_tables
    code: "function onclick_reset_tables() { stop_game(); stop_polling(); DA.chain =
      [get_games]; to_server({}, 'reset_tables'); }\r\n"
    sig: function onclick_reset_tables(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_test_create1:
    name: onclick_test_create1
    code: "function onclick_test_create1() { get_create_table(); }\r\n"
    sig: function onclick_test_create1(){}
    region: onclick (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  onclick_reset_user:
    name: onclick_reset_user
    code: "function onclick_reset_user() {
      reset_game_values_for_user(Session.cur_user); db_save(); }\r\n"
    sig: function onclick_reset_user(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_reset_db:
    name: onclick_reset_db
    code: "function onclick_reset_db() { reset_db_values(); db_save(); }\r\n"
    sig: function onclick_reset_db(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_log_session:
    name: onclick_log_session
    code: "function onclick_log_session() { log_object(Session, 'Session'); }\r\n"
    sig: function onclick_log_session(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_user:
    name: onclick_user
    code: "function onclick_user(uname) {\r

      \  U = firstCond(Serverdata.users, x => x.name == uname);\r

      \  localStorage.setItem('uname', U.name);\r

      \  DA.secretuser = U.name;\r

      \  let elem = firstCond(arrChildren('dUsers'), x =>
      x.getAttribute('username') == uname);\r

      \  let img = elem.children[0];\r

      \  mShrinkTranslate(img, .75, 'dAdminRight', 400, show_username);\r

      \  mFadeClear('dUsers', 300);\r

      }\r\n"
    sig: function onclick_user(uname){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  on_ticker_status:
    name: on_ticker_status
    code: "function on_ticker_status(obj) {\r

      \  console.log('status:', TCount);\r

      \  if (in_game_open_prompt()) {\r

      \    update_session(obj);\r

      \    update_game_status(Session.cur_players);\r

      \    TOTicker = setTimeout(send_timer_ticker, 3000);\r

      \  }\r

      }\r\n"
    sig: function on_ticker_status(obj){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\onclick.js
    datetime: 2021-11-23-09-58
    timestamp: 1637690322341.5154
    size: 6526
  onclick_create_game_button:
    name: onclick_create_game_button
    code: "function onclick_create_game_button() {\r

      \  console.assert(is_admin(), 'non admin is creating
      game!!!!!!!!!!!');\r

      \  collect_game_options();\r

      \  get_create_table();\r

      }\r\n"
    sig: function onclick_create_game_button(){}
    region: settings (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_game_in_games_menu:
    name: onclick_game_in_games_menu
    code: "function onclick_game_in_games_menu(ev) {\r

      \  Session.cur_game = ev_to_gname(ev);\r

      \  set_cur_tid_for_game();\r

      \  if (nundef(Session.cur_tid) && is_admin()) {
      present_game_options(Session.cur_game); }\r

      \  else if (isdef(Session.cur_tid)) get_play();\r

      }\r\n"
    sig: function onclick_game_in_games_menu(ev){}
    region: onclick (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  onclick_user_login_new:
    name: onclick_user_login_new
    code: "function onclick_user_login_new(e) {\r

      \  e.preventDefault(); e.cancelBubble = true;\r

      \  var username = e.target.getAttribute(\"username\");\r

      \  if (e.target.id == \"\") {\r

      \    username = e.target.parentNode.getAttribute(\"username\");\r

      \  }\r

      \  load_user(username);\r

      \  get_user_tables();\r

      }\r\n"
    sig: function onclick_user_login_new(e){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\onclick.js
    datetime: 2021-11-23-09-58
    timestamp: 1637690322341.5154
    size: 6526
  onclick_header:
    name: onclick_header
    code: "function onclick_header(ev) { if (!is_admin() && ev.path[0].id !=
      'header') return; open_sidebar(); close_mini_user_info(); }\r\n"
    sig: function onclick_header(ev){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_left_panel:
    name: onclick_left_panel
    code: "function onclick_left_panel(ev) { if (ev.path[0].id != 'left_panel')
      return; close_sidebar(); open_mini_user_info(); }\r\n"
    sig: function onclick_left_panel(ev){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_toggle_sidebar:
    name: onclick_toggle_sidebar
    code: "function onclick_toggle_sidebar(ev) {\r

      \  evNoBubble(ev);\r

      \  toggle_sidebar(); toggle_mini_user_info();\r

      }\r\n"
    sig: function onclick_toggle_sidebar(ev){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_internet:
    name: onclick_internet
    code: "function onclick_internet() { toogle_internet_status(); }\r\n"
    sig: function onclick_internet(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_contacts:
    name: onclick_contacts
    code: "function onclick_contacts() { if (!menu_enabled('contacts')) return;
      game_interrupt(); get_contacts(); }\r\n"
    sig: function onclick_contacts(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\onclick.js
    datetime: 2021-11-23-09-58
    timestamp: 1637690322341.5154
    size: 6526
  onclick_chat:
    name: onclick_chat
    code: "function onclick_chat() { if (!menu_enabled('chat')) return;
      game_interrupt(); get_chat(); }\r\n"
    sig: function onclick_chat(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\onclick.js
    datetime: 2021-11-23-09-58
    timestamp: 1637690322341.5154
    size: 6526
  onclick_games:
    name: onclick_games
    code: "function onclick_games() { if (!menu_enabled('games')) return;
      stop_game(); get_games(); }\r\n"
    sig: function onclick_games(){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_play:
    name: onclick_play
    code: "function onclick_play() {\r

      \  if (!menu_enabled('play')) return;\r

      \  stop_game();\r

      \  let tid = Session.cur_tid;\r

      \  if (isdef(tid)) get_play();\r

      \  else if (is_admin()) get_games();\r

      \  else present_non_admin_user();\r

      }\r\n"
    sig: function onclick_play(){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_account:
    name: onclick_account
    code: "function onclick_account() { if (!menu_enabled('account')) return;
      stop_game(); get_account(); }\r\n"
    sig: function onclick_account(){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_login:
    name: onclick_login
    code: "function onclick_login() { if (!menu_enabled('login')) return;
      stop_game(); get_login(); }\r\n"
    sig: function onclick_login(){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_login_new:
    name: onclick_login_new
    code: "function onclick_login_new() { if (!menu_enabled('login')) return;
      game_interrupt(); get_login_new(); }\r\n"
    sig: function onclick_login_new(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\onclick.js
    datetime: 2021-11-23-09-58
    timestamp: 1637690322341.5154
    size: 6526
  onclick_status_message:
    name: onclick_status_message
    code: "function onclick_status_message(ev) {\r

      \  evNoBubble(ev); hide('dMessage');\r

      \  if (isdef(DA.after_status_message)) {\r

      \    let func = DA.after_status_message;\r

      \    DA.after_status_message = null;\r

      \    func();\r

      \  }\r

      }\r\n"
    sig: function onclick_status_message(ev){}
    region: in (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_user_login:
    name: onclick_user_login
    code: "function onclick_user_login(e) {\r

      \  e.preventDefault(); e.cancelBubble = true;\r

      \  var username = e.target.getAttribute(\"username\");\r

      \  if (e.target.id == \"\") {\r

      \    username = e.target.parentNode.getAttribute(\"username\");\r

      \  }\r

      \  load_user(username);\r

      \  get_tables();\r

      }\r\n"
    sig: function onclick_user_login(e){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  stop_polling:
    name: stop_polling
    code: "function stop_polling() { clearTimeout(TOTicker); IS_POLLING_ALLOWED =
      false; console.log('polling is OFF'); }\r\n"
    sig: function stop_polling(){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  to_admin:
    name: to_admin
    code: "function to_admin() {\r

      \  show('dAdminButtons');\r

      \  U = DB.users.mimi; show_user(DB.users[U.name]);\r

      \  to_games();\r

      }\r\n"
    sig: function to_admin(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\start.js
    datetime: 2021-11-30-05-08
    timestamp: 1638277709310.1726
    size: 600
  to_games:
    name: to_games
    code: "function to_games() {\r

      \  console.log('games fuer user', U.name, 'suchen');\r

      \  get_games(U.name, show_games_menu); \r

      }\r\n"
    sig: function to_games(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\start.js
    datetime: 2021-11-30-05-08
    timestamp: 1638277709310.1726
    size: 600
  to_create_table:
    name: to_create_table
    code: "function to_create_table() {\r

      \  let t = create_table();\r

      \  server_send(t, 'create_table_and_start', to_table);\r

      }\r\n"
    sig: function to_create_table(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\start.js
    datetime: 2021-11-30-05-08
    timestamp: 1638277709310.1726
    size: 600
  to_table:
    name: to_table
    code: "function to_table(){\r

      \  console.log('table should be presented!')\r

      }\r\n"
    sig: function to_table(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\start.js
    datetime: 2021-11-30-05-08
    timestamp: 1638277709310.1726
    size: 600
  onclick_game_menu_item:
    name: onclick_game_menu_item
    code: "function onclick_game_menu_item(ev) {\r

      \  let gamename = ev_to_gname(ev);\r

      \  stop_game();\r

      \  show_game_options_menu(gamename);\r

      }\r\n"
    sig: function onclick_game_menu_item(ev){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\game\onclick.js
    datetime: 2022-12-15-08-12
    timestamp: 1671120760888.6453
    size: 163
  register_node:
    name: register_node
    code: "function register_node(content, type, oid, path, r) {\r

      \  let n = {\r

      \    content: content,\r

      \    type: type,\r

      \    oid: oid,\r

      \    path: path,\r

      \    children: [],\r

      \  };\r

      \  r.add_node(n, oid);\r

      \  return n;\r

      }\r\n"
    sig: function register_node(content, type, oid, path, r){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  rec_create_nodes_tree:
    name: rec_create_nodes_tree
    code: "function rec_create_nodes_tree(r, t, path, keys) {\r

      \  if (isLiteral(t)) {\r

      \    let type = is_game_card(t) ? 'card' : typeof t;\r

      \    return register_node(t, type, getUID('o'), path, r);\r

      \  } else if (isList(t)) {\r

      \    let content = t;\r

      \    let type;\r

      \    if (startsWith(path, 'deck') || startsWith(path,
      'achievements')) {\r

      \      type = 'deck';\r

      \    } else if (!isEmpty(t) && is_game_card(t[0])) { \r

      \      type = 'cardlist';\r

      \    }\r

      \    else {\r

      \      type = 'string';\r

      \    }\r

      \    let n = register_node(content, type, getUID('o'), path, r);\r

      \    if (type == 'cardlist') {\r

      \      let ch = [];\r

      \      let i = 0;\r

      \      for (const el of t) {\r

      \        if (!isLiteral(el)) continue;\r

      \        let type = is_game_card(el) ? 'card' : typeof t;\r

      \        let n1 = register_node(el, type, getUID('o'), path + '.' +
      el, r);\r

      \        i += 1;\r

      \        ch.push(n1.oid);\r

      \      }\r

      \      n.children = ch;\r

      \    }\r

      \    return n;\r

      \  } else if (isDict(t)) {\r

      \    let n = register_node(stringAfterLast(path, '.'), 'string',
      getUID('o'), path, r);\r

      \    let ch = [];\r

      \    for (const k in t) {\r

      \      if (nundef(keys[k]) && k.length > 1) { continue; } \r

      \      let pnew = isEmpty(path) ? k : path + '.' + k;\r

      \      let tnew = t[k];\r

      \      let n1 = rec_create_nodes_tree(r, tnew, pnew, keys);\r

      \      ch.push(n1.oid);\r

      \    }\r

      \    n.children = ch;\r

      \    return n;\r

      \  } else { \r

      \    let type = 'null'; \r

      \    return register_node('null', type, getUID('o'), path, r);\r

      \  }\r

      }\r\n"
    sig: function rec_create_nodes_tree(r, t, path, keys){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  rec_create_nodes_tree_akku:
    name: rec_create_nodes_tree_akku
    code: "function rec_create_nodes_tree_akku(r, t, path, keys, akku) {\r

      \  if (isLiteral(t)) {\r

      \    let type = is_game_card(t) ? 'card' : typeof t;\r

      \    return register_node(t, type, getUID('o'), path, r);\r

      \  } else if (isList(t)) {\r

      \    let content = t;\r

      \    let type;\r

      \    if (startsWith(path, 'deck') || startsWith(path,
      'achievements')) {\r

      \      type = 'deck';\r

      \    } else if (!isEmpty(t) && is_game_card(t[0])) { \r

      \      type = 'cardlist';\r

      \    }\r

      \    else {\r

      \      type = 'string';\r

      \    }\r

      \    let n = register_node(content, type, getUID('o'), path, r);\r

      \    if (type == 'cardlist') {\r

      \      let ch = [];\r

      \      let i = 0;\r

      \      for (const el of t) {\r

      \        if (!isLiteral(el)) continue;\r

      \        let type = is_game_card(el) ? 'card' : typeof t;\r

      \        let n1 = register_node(el, type, getUID('o'), path + '.' +
      el, r);\r

      \        i += 1;\r

      \        ch.push(n1.oid);\r

      \      }\r

      \      n.children = ch;\r

      \    }\r

      \    return n;\r

      \  } else if (isDict(t)) {\r

      \    let n = register_node(stringAfterLast(path, '.'), 'string',
      getUID('o'), path, r);\r

      \    let ch = [];\r

      \    for (const k in t) {\r

      \      if (nundef(keys[k]) && k.length > 1) { continue; } \r

      \      let pnew = isEmpty(path) ? k : path + '.' + k;\r

      \      akku.push(pnew);\r

      \      let tnew = t[k];\r

      \      let n1 = rec_create_nodes_tree_akku(r, tnew, pnew, keys,
      akku);\r

      \      ch.push(n1.oid);\r

      \    }\r

      \    n.children = ch;\r

      \    return n;\r

      \  } else { \r

      \    let type = 'null'; \r

      \    return register_node('null', type, getUID('o'), path, r);\r

      \  }\r

      }\r\n"
    sig: function rec_create_nodes_tree_akku(r, t, path, keys, akku){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  inno_create_ui_tree:
    name: inno_create_ui_tree
    code: "function inno_create_ui_tree(n, dParent, r) {\r

      \  let d;\r

      \  if (n.path.includes('splays')) {\r

      \  } else if (n.path.includes('achievements')) {\r

      \    let id = getUID('u');\r

      \    d = mDiv(dParent, { bg: 'sienna', fg: 'white', w: '100%' }, id,
      n.path);\r

      \    mFlexWrap(d);\r

      \    for (const cont of n.content) {\r

      \      let card = InnoById[cont];\r

      \      let d1 = mDiv(d, { bg: 'sienna', margin: 4, border: 'blue',
      wmin: 25 }, null, isdef(card) ? card.age : cont);\r

      \    }\r

      \    r.add_ui_node(d, id, n.oid);\r

      \  } else if (startsWith(n.path, 'deck')) {\r

      \    mFlexWrap(dParent);\r

      \    let id = getUID('u');\r

      \    let styles = isNumber(stringAfterLast(n.path, '.')) ? { bg:
      'beige', fg: 'black', margin: 4, border: 'red', wmin: 25 } : { bg:
      'beige', fg: 'black' };\r

      \    d = mDiv(dParent, styles, id, n.path);\r

      \    r.add_ui_node(d, id, n.oid);\r

      \  } else if (r.otree.player_names.includes(n.content)) {\r

      \    let id = getUID('u');\r

      \    let bg = r.otree[n.content].color;\r

      \    let styles = { bg: bg, fg: 'contrast', w: '100%' };\r

      \    d = mDiv(dParent, styles, id, n.path);\r

      \    r.add_ui_node(d, id, n.oid);\r

      \  } else if (n.type == 'cardlist' && !n.path.includes('board')) {\r

      \    let id = getUID('u');\r

      \    d = mDiv(dParent, { bg: '#00000080', gap: 10, padding: 10 },
      id, stringAfterLast(n.path, '.'));\r

      \    mCenterFlex(d);\r

      \    r.add_ui_node(d, id, n.oid);\r

      \  } else if (n.type == 'string' && !endsWith(n.path, 'board')) {\r

      \    let id = getUID('u');\r

      \    d = mDiv(dParent, { bg: 'inherit' }, id, n.content);\r

      \    r.add_ui_node(d, id, n.oid);\r

      \  } else if (endsWith(n.path, 'board')) { \r

      \    let id = getUID('u');\r

      \    d = mDiv(dParent, { bg: 'inherit' }, id, n.content);\r

      \    mFlexWrap(d);\r

      \    r.add_ui_node(d, id, n.oid);\r

      \  } else if (n.type == 'cardlist' && n.path.includes('board')) { \r

      \    let id = getUID('u');\r

      \    d = mDiv(dParent, {}, id);\r

      \    let splay = inno_get_splay(r.otree, n.path);\r

      \    let [num, wcard, hcard, ov] = [n.content.length, 300, 200,
      78];\r

      \    mContainerSplay(d, splay, wcard, hcard, num, ov);\r

      \    r.add_ui_node(d, id, n.oid);\r

      \  } else if (n.type == 'card') {\r

      \    let c;\r

      \    if (n.path.includes('board')) { \r

      \      c = inno_present_card(dParent, n.content);\r

      \      let list = lookup(Session.otree, stringBeforeLast(n.path,
      '.').split('.'));\r

      \      let splay = inno_get_splay(r.otree, n.path);\r

      \      mItemSplay(c, list, splay);\r

      \    } else {\r

      \      c = inno_present_card(dParent, n.content);\r

      \      let d = iDiv(c);\r

      \    }\r

      \    r.add_ui_node(iDiv(c), c.id, n.oid);\r

      \  }\r

      \  if (nundef(d)) return;\r

      \  for (const ch of n.children) {\r

      \    inno_create_ui_tree(r.nodes[ch], d, r);\r

      \  }\r

      }\r\n"
    sig: function inno_create_ui_tree(n, dParent, r){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  activateUis:
    name: activateUis
    code: "function activateUis(R) {\r

      \  for (const uid in R.uiNodes) {\r

      \    let n = R.uiNodes[uid];\r

      \    if (isdef(n.oid) && isdef(n.ui)) {\r

      \      n.act.activate(highSelfAndRelatives, unhighSelfAndRelatives,
      selectUid);\r

      \    }\r

      \  }\r

      \  R.isUiActive = true;\r

      }\r\n"
    sig: function activateUis(R){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  deactivateUis:
    name: deactivateUis
    code: "function deactivateUis(R) {\r

      \  for (const uid in R.uiNodes) {\r

      \    let n = R.uiNodes[uid];\r

      \    if (n.oid && n.ui) {\r

      \      n.act.deactivate();\r

      \    }\r

      \  }\r

      \  R.isUiActive = false;\r

      }\r\n"
    sig: function deactivateUis(R){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  highSelfAndRelatives:
    name: highSelfAndRelatives
    code: "function highSelfAndRelatives(uid, R) {\r

      \  for (const oid of R.uid2oids[uid]) {\r

      \    for (const uid1 of R.oid2uids[oid]) {\r

      \      let ui = R.getUI(uid1);\r

      \      mHigh(ui);\r

      \    }\r

      \  }\r

      \  let n = R.uiNodes[uid];\r

      \  if (n.potentialOverlap) {\r

      \    let ui = R.getUI(uid);\r

      \    bringToFront(ui);\r

      \  }\r

      }\r\n"
    sig: function highSelfAndRelatives(uid, R){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  unhighSelfAndRelatives:
    name: unhighSelfAndRelatives
    code: "function unhighSelfAndRelatives(uid, R) {\r

      \  for (const oid of R.uid2oids[uid]) {\r

      \    for (const uid1 of R.oid2uids[oid]) {\r

      \      let ui = R.getUI(uid1);\r

      \      mUnhigh(ui);\r

      \    }\r

      \  }\r

      \  let n = R.uiNodes[uid];\r

      \  if (n.potentialOverlap) {\r

      \    let ui = R.getUI(uid);\r

      \    sendToBack(ui);\r

      \  }\r

      }\r\n"
    sig: function unhighSelfAndRelatives(uid, R){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  selectUid:
    name: selectUid
    code: "function selectUid(uid, R) {\r

      \  console.log('user has selected', uid);\r

      }\r\n"
    sig: function selectUid(uid, R){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  bringToFront:
    name: bringToFront
    code: "function bringToFront(ui) {\r

      \  ui.style.zIndex = Activator.maxZIndex;\r

      \  Activator.maxZIndex += 1;\r

      }\r\n"
    sig: function bringToFront(ui){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  sendToBack:
    name: sendToBack
    code: "function sendToBack(ui) {\r

      \  ui.style.zIndex = 0;\r

      }\r\n"
    sig: function sendToBack(ui){}
    region: funcs (activator.js)
    filename: activator.js
    type: func
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  ari_present:
    name: ari_present
    code: "function ari_present(dParent) {\r

      \  let [fen, ui, uplayer, stage, pl] = [Z.fen, UI, Z.uplayer,
      Z.stage, Z.pl];\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent);\r

      \  if (fen.num_actions > 0 && (Z.role == 'active' || Z.mode ==
      'hotseat')) {\r

      \    mStyle(dOben, { hmin: 110 })\r

      \  }\r

      \  ari_stats(dRechts);\r

      \  show_history(fen, dRechts);\r

      \  let deck = ui.deck = ui_type_deck(fen.deck, dOpenTable, { maleft:
      12 }, 'deck', 'deck', ari_get_card);\r

      \  let market = ui.market = ui_type_market(fen.market, dOpenTable, {
      maleft: 12 }, 'market', 'market', ari_get_card, true);\r

      \  let open_discard = ui.open_discard =
      ui_type_market(fen.open_discard, dOpenTable, { maleft: 12 },
      'open_discard', 'discard', ari_get_card);\r

      \  let deck_discard = ui.deck_discard =
      ui_type_deck(fen.deck_discard, dOpenTable, { maleft: 12 }, 'deck_discard',
      '', ari_get_card);\r

      \  if (exp_commissions(Z.options)) {\r

      \    let open_commissions = ui.open_commissions =
      ui_type_market(fen.open_commissions, dOpenTable, { maleft: 12 },
      'open_commissions', 'bank', ari_get_card);\r

      \    mMagnifyOnHoverControlPopup(ui.open_commissions.cardcontainer);\
      \r

      \    let deck_commission = ui.deck_commission =
      ui_type_deck(fen.deck_commission, dOpenTable, { maleft: 4 },
      'deck_commission', '', ari_get_card);\r

      \    let comm = ui.commissioned =
      ui_type_rank_count(fen.commissioned, dOpenTable, {}, 'commissioned',
      'sentiment', ari_get_card);\r

      \    if (comm.items.length > 0) { let isent = arrLast(comm.items);
      let dsent = iDiv(isent); set_card_border(dsent, 15, 'green'); }\r

      \  }\r

      \  if (exp_church(Z.options)) {\r

      \    let church = ui.church = ui_type_church(fen.church, dOpenTable,
      { maleft: 28 }, 'church', 'church', ari_get_card);\r

      \  }\r

      \  if (exp_rumors(Z.options)) {\r

      \    let deck_rumors = ui.deck_rumors =
      ui_type_deck(fen.deck_rumors, dOpenTable, { maleft: 25 }, 'deck_rumors',
      'rumors', ari_get_card);\r

      \  }\r

      \  let uname_plays = fen.plorder.includes(Z.uname);\r

      \  let show_first = uname_plays && Z.mode == 'multi' ? Z.uname :
      uplayer;\r

      \  let order = get_present_order();\r

      \  for (const plname of order) {\r

      \    let pl = fen.players[plname];\r

      \    let playerstyles = { w: '100%', bg: '#ffffff80', fg: 'black',
      padding: 4, margin: 4, rounding: 9, border: `2px ${get_user_color(plname)}
      solid` };\r

      \    let d = mDiv(dMiddle, playerstyles, null,
      get_user_pic_html(plname, 25));\r

      \    mFlexWrap(d);\r

      \    mLinebreak(d, 9);\r

      \    let hidden = compute_hidden(plname);\r

      \    ari_present_player(plname, d, hidden);\r

      \  }\r

      \  ari_show_handsorting_buttons_for(Z.mode == 'hotseat' ? Z.uplayer
      : Z.uname); delete Clientdata.handsorting;\r

      \  show_view_buildings_button(uplayer);\r

      \  let desc = ARI.stage[Z.stage];\r

      \  Z.isWaiting = false;\r

      \  if (isdef(fen.winners)) ari_reveal_all_buildings(fen);\r

      \  else if (desc == 'comm_weitergeben' &&
      is_playerdata_set(uplayer)) {\r

      \    if ((Z.mode == 'hotseat' || Z.host == uplayer) &&
      check_resolve()) {\r

      \      Z.turn = [Z.host];\r

      \      Z.stage = 104; //'next_comm_setup_stage';\r

      \    }\r

      \    show_waiting_message(`waiting for other players...`);\r

      \    Z.isWaiting = true;\r

      \  }\r

      }\r\n"
    sig: function ari_present(dParent){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_present_player:
    name: ari_present_player
    code: "function ari_present_player(plname, d, ishidden = false) {\r

      \  let fen = Z.fen;\r

      \  let pl = fen.players[plname];\r

      \  let ui = UI.players[plname] = { div: d };\r

      \  let hand = ui.hand = ui_type_hand(pl.hand, d, {},
      `players.${plname}.hand`, 'hand', ari_get_card);\r

      \  if (ishidden) { hand.items.map(x => face_down(x)); }\r

      \  let stall = ui.stall = ui_type_market(pl.stall, d, { maleft: 12
      }, `players.${plname}.stall`, 'stall', ari_get_card);\r

      \  if (fen.stage < 5 && ishidden) { stall.items.map(x =>
      face_down(x)); }\r

      \  if (exp_commissions(Z.options)) { \r

      \    if (!ishidden) pl.commissions =
      correct_handsorting(pl.commissions, plname);\r

      \    ui.commissions = ui_type_market(pl.commissions, d, { maleft: 12
      }, `players.${plname}.commissions`, 'commissions', Z.stage == 23 ?
      ari_get_card_large : ari_get_card);\r

      \    if (ishidden) { ui.commissions.items.map(x => face_down(x));
      }\r

      \    else
      mMagnifyOnHoverControlPopup(ui.commissions.cardcontainer);\r

      \  }\r

      \  if (exp_rumors(Z.options)) { \r

      \    if (!ishidden) pl.rumors = correct_handsorting(pl.rumors,
      plname);\r

      \    ui.rumors = ui_type_market(pl.rumors, d, { maleft: 12 },
      `players.${plname}.rumors`, 'rumors', Z.stage == 24 ? ari_get_card_large :
      ari_get_card);\r

      \    if (ishidden) { ui.rumors.items.map(x => face_down(x)); }\r

      \    else mMagnifyOnHoverControlPopup(ui.rumors.cardcontainer);\r

      \  }\r

      \  ui.journeys = [];\r

      \  let i = 0;\r

      \  for (const j of pl.journeys) {\r

      \    let jui = ui_type_hand(j, d, { maleft: 12 },
      `players.${plname}.journeys.${i}`, '', ari_get_card);\r

      \    i += 1;\r

      \    ui.journeys.push(jui);\r

      \  }\r

      \  mLinebreak(d, 8);\r

      \  ui.buildinglist = [];\r

      \  ui.indexOfFirstBuilding = arrChildren(d).length;\r

      \  for (const k in pl.buildings) {\r

      \    let i = 0;\r

      \    for (const b of pl.buildings[k]) {\r

      \      let type = k;\r

      \      let b_ui = ui_type_building(b, d, { maleft: 8 },
      `players.${plname}.buildings.${k}.${i}`, type, ari_get_card, true,
      ishidden);\r

      \      b_ui.type = k;\r

      \      ui.buildinglist.push(b_ui);\r

      \      if (b.isblackmailed) { mStamp(b_ui.cardcontainer,
      'blackmail'); }\r

      \      lookupAddToList(ui, ['buildings', k], b_ui); \r

      \      i += 1;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function ari_present_player(plname, d, ishidden = false){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_redo_player_ui:
    name: ari_redo_player_ui
    code: "function ari_redo_player_ui(otree, plturn) {\r

      \  let d = G[plturn].hand.container.parentNode;\r

      \  d.innerHTML = plturn;\r

      \  ari_present_player(otree, plturn, d);\r

      }\r\n"
    sig: function ari_redo_player_ui(otree, plturn){}
    region: funcs (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\base\js\aristo.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536356.8506
    size: 4306
  ari_setup:
    name: ari_setup
    code: "function ari_setup(player_names) {\r

      \  let pre_fen = {};\r

      \  let deck = pre_fen.deck = get_keys(Aristocards).filter(x =>
      'br'.includes(x[2]));\r

      \  shuffle(deck);\r

      \  pre_fen.market = [];\r

      \  pre_fen.deck_discard = [];\r

      \  pre_fen.open_discard = [];\r

      \  let pls = pre_fen.players = {};\r

      \  for (const plname of player_names) {\r

      \    let pl = pls[plname] = {\r

      \      hand: deck_deal(deck, 7),\r

      \      buildings: { farms: [], estates: [], chateaus: [] },\r

      \      stall: [],\r

      \      stall_value: 0,\r

      \      coins: 3,\r

      \      vps: 0,\r

      \      score: 0,\r

      \    };\r

      \  }\r

      \  pre_fen.plorder = jsCopy(player_names);\r

      \  pre_fen.herald = player_names[0];\r

      \  pre_fen.phase = 'king';\r

      \  pre_fen.stage = 3;\r

      \  pre_fen.iturn = 0;\r

      \  pre_fen.plturn = pre_fen.plorder[pre_fen.iturn];\r

      \  pre_fen.round = [];\r

      \  pre_fen.step = 0;\r

      \  let fen = pre_fen;\r

      \  return fen;\r

      }\r\n"
    sig: function ari_setup(player_names){}
    region: funcs (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\base\js\aristo.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536356.8506
    size: 4306
  ari_create_ui_tree:
    name: ari_create_ui_tree
    code: "function ari_create_ui_tree(n, dParent, r) {\r

      \  let d = null;\r

      \  if (n.oid == 'o_1') {\r

      \    d = mDiv(dParent, { w: '100%' }, getUID('u'));\r

      \  } else if (startsWith(n.path, 'deck')) {\r

      \    let deck = G[n.path] = ui_type_deck(n.content);\r

      \    d = deck.container; \r

      \  } else if (r.otree.player_names.includes(n.content)) {\r

      \    d = ui_make_player(Session.otree, n.content, dParent);\r

      \  } else if (n.type == 'cardlist') {\r

      \    d = ari_make_cardlist(n.content, 2, dParent);\r

      \  } else if (n.type == 'card') {\r

      \    return;\r

      \  } else if (n.type == 'string') {\r

      \    let id = getUID('u');\r

      \    d = mDiv(dParent, { bg: 'inherit' }, id, n.content);\r

      \  }\r

      \  if (nundef(d)) return; else r.add_ui_node(d, d.id, n.oid);\r

      \  for (const ch of n.children) {\r

      \    ari_create_ui_tree(r.nodes[ch], d, r);\r

      \  }\r

      }\r\n"
    sig: function ari_create_ui_tree(n, dParent, r){}
    region: creat (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\base\js\aristo.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536356.8506
    size: 4306
  _simpleOptions:
    name: _simpleOptions
    code: "function _simpleOptions(options = {}, defsOuter = {}) {\r

      \  options.showPic = valf(options.showPic, isdef(options.fzPic));\r

      \  options.showLabels = isdef(options.fz);\r

      \  options.szPic = { w: options.w, h: options.h };\r

      \  options.fzText = options.fz;\r

      \  if (nundef(options.rounding)) options.rounding = 4;\r

      \  if (nundef(options.margin)) options.margin = 4;\r

      \  if (nundef(options.padding)) options.padding = 0;\r

      \  if (nundef(options.labelStyles)) options.labelStyles = {};\r

      \  if (options.showLabels) { if (nundef(options.labelPos))
      options.labelBottom = true; options.labelStyles.fz = options.fzText; }\r

      \  options.picStyles = { fz: options.fzPic };\r

      \  let [w, h] = [options.szPic.w, options.szPic.h];\r

      \  options.outerStyles = {\r

      \    w: w, h: h, bg: options.bg, fg: options.fg,\r

      \    display: 'inline-flex', 'flex-direction': 'column',\r

      \    'justify-content': 'center', 'align-items': 'center',
      'vertical-align': 'top',\r

      \    padding: 0, box: true, margin: options.margin, rounding:
      options.rounding,\r

      \  };\r

      \  if (isdef(defsOuter)) addKeys(defsOuter, options.outerStyles);\r

      \  return options;\r

      }\r\n"
    sig: function _simpleOptions(options = {}, defsOuter = {}){}
    region: options (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  inno_todo_init:
    name: inno_todo_init
    code: "function inno_todo_init(otree) {\r

      \  let r = {\r

      \    key: 'inno_init',\r

      \    actions: [],\r

      \    selected: null,\r

      \  };\r

      \  let list = [];\r

      \  for (const uname of otree.plorder) {\r

      \    let task = jsCopy(r);\r

      \    task.id = getUID('r');\r

      \    task.uname = uname;\r

      \    list.push(task);\r

      \  };\r

      \  otree.itask = 0;\r

      \  return list;\r

      }\r\n"
    sig: function inno_todo_init(otree){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_init_pre:
    name: inno_init_pre
    code: "function inno_init_pre(otree, r, uname) {\r

      \  r.actions = inno_get_hand_actions(otree, uname);\r

      \  activate_actions(r, uname);\r

      }\r\n"
    sig: function inno_init_pre(otree, r, uname){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_init_post:
    name: inno_init_post
    code: "function inno_init_post(otree, r, uname, action,item) {\r

      \  let path = r.selected;\r

      \  let cardname = stringAfterLast(path, '.');\r

      \  let card = inno_get_cardinfo(cardname);\r

      \  let pl = otree[uname];\r

      \  lookupAddToList(otree, ['progress'], { name: uname, key: cardname
      });\r

      \  elem_from_to(cardname, pl.hand, pl.board[card.color]);\r

      \  let i = otree.itask + 1;\r

      \  if (i >= get_num_players(otree)) {\r

      \    otree.plorder = sortBy(otree.progress, 'key').map(x =>
      x.name);\r

      \    otree.history = otree.todo;\r

      \    otree.progress = null;\r

      \    otree.todo = inno_todo_justone(otree);\r

      \  } else {\r

      \    otree.itask = i;\r

      \  }\r

      \  turn_send_move_update(otree, uname);\r

      }\r\n"
    sig: function inno_init_post(otree, r, uname, action,item){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_perform_initial_selections:
    name: inno_perform_initial_selections
    code: "function inno_perform_initial_selections(r, otree) {\r

      \  let pl_order = [];\r

      \  for (const uname of otree.turn) {\r

      \    let path = r.selected[uname][0];\r

      \    let cardname = stringAfterLast(path, '.');\r

      \    let card = inno_get_cardinfo(cardname);\r

      \    let pl = otree[uname];\r

      \    pl_order.push({ name: uname, key: cardname });\r

      \    elem_from_to(cardname, pl.hand, pl.board[card.color]);\r

      \  }\r

      \  return pl_order;\r

      }\r\n"
    sig: function inno_perform_initial_selections(r, otree){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_todo_justone:
    name: inno_todo_justone
    code: "function inno_todo_justone(otree) {\r

      \  let r = {\r

      \    key: 'inno_justone',\r

      \    actions: [],\r

      \    selected: null,\r

      \  };\r

      \  let list = otree.todo = [];\r

      \  for (const uname of otree.plorder) {\r

      \    let i = get_index_in_plorder(otree, uname);\r

      \    if (i >= otree.plorder.length / 2) break;\r

      \    let task = jsCopy(r);\r

      \    task.id = getUID('r');\r

      \    task.uname = uname;\r

      \    list.push(task);\r

      \  };\r

      \  otree.itask = 0;\r

      \  return list;\r

      }\r\n"
    sig: function inno_todo_justone(otree){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_justone_pre:
    name: inno_justone_pre
    code: "function inno_justone_pre(otree, r, uname) {\r

      \  r.actions = inno_get_all_actions(otree, uname);\r

      \  activate_actions(r, uname);\r

      }\r\n"
    sig: function inno_justone_pre(otree, r, uname){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_justone_post:
    name: inno_justone_post
    code: "function inno_justone_post(otree, r, uname, action, item) {\r

      \  inno_perform_action(otree, r, uname, action, item);\r

      \  turn_send_move_update(otree, uname);\r

      }\r\n"
    sig: function inno_justone_post(otree, r, uname, action, item){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_todo_regular:
    name: inno_todo_regular
    code: "function inno_todo_regular(otree, uname) {\r

      \  let r = {\r

      \    key: 'inno_regular',\r

      \    uname: uname,\r

      \    actions: [],\r

      \    selected: null,\r

      \  };\r

      \  let r1 = jsCopy(r); r1.id = getUID('r');\r

      \  let r2 = jsCopy(r); r2.id = getUID('r');\r

      \  let list = [r1, r2];\r

      \  otree.itask = 0;\r

      \  return list;\r

      }\r\n"
    sig: function inno_todo_regular(otree, uname){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_regular_pre:
    name: inno_regular_pre
    code: "function inno_regular_pre(otree, r, uname) {inno_justone_pre(otree, r,
      uname);}\r\n"
    sig: function inno_regular_pre(otree, r, uname){}
    region: funcs (game_turn2.js)
    filename: game_turn2.js
    type: func
    fname: game_turn2.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn2.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534652.2305
    size: 3327
  inno_agriculture_todo:
    name: inno_agriculture_todo
    code: "function inno_agriculture_todo(otree, uname) {\r

      \  let r1 = {\r

      \    id: getUID('r'),\r

      \    uname: uname,\r

      \    key: 'inno_agriculture',\r

      \    actions: [],\r

      \    selected: null,\r

      \  };\r

      \  let list = [r1];\r

      \  return list;\r

      }\r\n"
    sig: function inno_agriculture_todo(otree, uname){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_agriculture_pre:
    name: inno_agriculture_pre
    code: "function inno_agriculture_pre(otree, r, uname) {\r

      \  r.actions = inno_get_hand_actions(otree, uname);\r

      \  r.actions.push('pass');\r

      \  activate_actions(r, uname);\r

      }\r\n"
    sig: function inno_agriculture_pre(otree, r, uname){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_agriculture_post:
    name: inno_agriculture_post
    code: "function inno_agriculture_post(otree, r, uname, action, item) {\r

      \  if (action != 'pass') {\r

      \    let card = inno_get_cardinfo(stringAfterLast(action, '.'));\r

      \    let deck = otree.decks[card.exp[0]][card.age];\r

      \    return_elem_to_deck_from(card.key, otree[uname].hand, deck);\r

      \    let n = card.age + 1;\r

      \    let pl = otree[uname];\r

      \    draw_from_deck_to(otree.decks.B[n], pl.scored); \r

      \  }\r

      \  next_task(otree, r);\r

      \  turn_send_move_update(otree, uname);\r

      }\r\n"
    sig: function inno_agriculture_post(otree, r, uname, action, item){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_metalworking_todo:
    name: inno_metalworking_todo
    code: "function inno_metalworking_todo(otree, uname) {\r

      \  console.log('making todolist for metalworking!!!');\r

      \  let r1 = {\r

      \    id: getUID('r'),\r

      \    uname: uname,\r

      \    key: 'inno_metalworking',\r

      \    actions: [],\r

      \    selected: null,\r

      \  };\r

      \  let list = [r1];\r

      \  return list;\r

      }\r\n"
    sig: function inno_metalworking_todo(otree, uname){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_metalworking_pre:
    name: inno_metalworking_pre
    code: "function inno_metalworking_pre(otree, r, uname) {\r

      \  let deck_letter = inno_has_echo(otree, uname) ? 'E' : 'B';\r

      \  let card = null;\r

      \  while (nundef(card) || inno_has_towers(card)) {\r

      \    let deck_age = inno_get_deck_age(otree,deck_letter); \r

      \    let deck = otree.decks[deck_letter][deck_age];\r

      \    let peek = deck[0];\r

      \    ckey = deck.shift();\r

      \    console.log('age',deck_age,'deck length',deck.length)\r

      \    console.assert(isdef(ckey) && peek == ckey, 'metalworking: not
      drawing top card!!!!!!!');\r

      \    card = inno_get_cardinfo(ckey);\r

      \    console.log('draw card', ckey, inno_has_towers(card));\r

      \    if (inno_has_towers(card)) otree[uname].scored.push(ckey); else
      otree[uname].hand.push(ckey);\r

      \  }\r

      \  console.log('metalworking is *DONE*');\r

      \  inno_metalworking_post(otree, r, uname);\r

      }\r\n"
    sig: function inno_metalworking_pre(otree, r, uname){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_metalworking_post:
    name: inno_metalworking_post
    code: "function inno_metalworking_post(otree, r, uname, action, item) {\r

      \  next_task(otree, r);\r

      \  turn_send_move_update(otree, uname);\r

      }\r\n"
    sig: function inno_metalworking_post(otree, r, uname, action, item){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_code_of_laws_todo:
    name: inno_code_of_laws_todo
    code: "function inno_code_of_laws_todo(otree, uname) {\r

      \  console.log('making todolist for code_of_laws!!!');\r

      \  let r1 = {\r

      \    id: getUID('r'),\r

      \    uname: uname,\r

      \    key: 'inno_code_of_laws',\r

      \    actions: [],\r

      \    selected: null,\r

      \  };\r

      \  let list = [r1];\r

      \  return list;\r

      }\r\n"
    sig: function inno_code_of_laws_todo(otree, uname){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_code_of_laws_pre:
    name: inno_code_of_laws_pre
    code: "function inno_code_of_laws_pre(otree, r, uname) {\r

      \  r.actions = inno_get_hand_actions(otree, uname);\r

      \  r.actions.push('pass');\r

      \  activate_actions(r, uname);\r

      }\r\n"
    sig: function inno_code_of_laws_pre(otree, r, uname){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_code_of_laws_post:
    name: inno_code_of_laws_post
    code: "function inno_code_of_laws_post(otree, r, uname, action, item) {\r

      \  if (action != 'pass') {\r

      \    let card = inno_get_cardinfo(stringAfterLast(action, '.'));\r

      \    elem_from_to(card.key,otree[uname].hand,otree[uname].board[car\
      d.color]);\r

      \    let splay =
      inno_get_splay(otree,`${uname}.board.${card.color}`);\r

      \    if (splay == 0 && otree[uname].board[card.color].length > 1)
      otree[uname].splays[card.color] = 1;\r

      \  }\r

      \  next_task(otree, r);\r

      \  turn_send_move_update(otree, uname);\r

      }\r\n"
    sig: function inno_code_of_laws_post(otree, r, uname, action, item){}
    region: funcs (game_turn3.js)
    filename: game_turn3.js
    type: func
    fname: game_turn3.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn3.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465534573.785
    size: 3525
  inno_get_all_actions:
    name: inno_get_all_actions
    code: "function inno_get_all_actions(otree, uname) {\r

      \  let actions = [];\r

      \  let ameld = inno_action_meld(otree, uname);\r

      \  let atop = inno_action_topcard(otree, uname);\r

      \  let achieve = inno_action_achieve(otree, uname);\r

      \  let adraw = inno_action_draw(otree, uname);\r

      \  actions = atop.concat(ameld, achieve, adraw); \r

      \  return actions;\r

      }\r\n"
    sig: function inno_get_all_actions(otree, uname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_action_topcard:
    name: inno_action_topcard
    code: "function inno_action_topcard(otree, uname) {\r

      \  let top2 = inno_get_top_card_actions(otree,uname);\r

      \  return top2;\r

      }\r\n"
    sig: function inno_action_topcard(otree, uname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_action_meld:
    name: inno_action_meld
    code: "function inno_action_meld(otree, uname) {\r

      \  return otree[uname].hand.map(x => `${uname}.hand.${x}`);\r

      }\r\n"
    sig: function inno_action_meld(otree, uname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_action_achieve:
    name: inno_action_achieve
    code: "function inno_action_achieve(otree, uname) {\r

      \  return [];\r

      }\r\n"
    sig: function inno_action_achieve(otree, uname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_get_deck_info_for_player:
    name: inno_get_deck_info_for_player
    code: "function inno_get_deck_info_for_player(otree,uname){\r

      \  let has_echo = inno_has_echo(otree, uname);\r

      \  let letter = has_echo||isEmpty(otree[uname].hand) ? 'B' : 'E';\r

      \  let min_age = inno_get_player_age(otree, uname); \r

      \  let age = inno_get_deck_age(otree,letter,min_age);\r

      \  return [age,letter];\r

      }\r\n"
    sig: function inno_get_deck_info_for_player(otree,uname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_action_draw:
    name: inno_action_draw
    code: "function inno_action_draw(otree, uname) {\r

      \  let [age,letter] = inno_get_deck_info_for_player(otree,uname); \r

      \  let res = `draw.decks.${letter}.${age}`;\r

      \  return [res];\r

      }\r\n"
    sig: function inno_action_draw(otree, uname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_perform_action:
    name: inno_perform_action
    code: "function inno_perform_action(otree, r, uname, action, item) {\r

      \  console.log('inno_perform_action',otree, r, uname, action,
      item);\r

      \  let a = action;\r

      \  console.assert(r.selected == action,'r.selected NOT SAME AS
      action!!!!!!!!!!!!!!!!!!!!!!!!');\r

      \  let parts = a.split('.');\r

      \  if (parts.length == 3) {\r

      \    let [x, obj, cardname] = parts;\r

      \    if (obj == 'hand' && x == uname) {\r

      \      inno_meld(otree,r, uname, cardname);\r

      \    }\r

      \    let [deck, exp, age] = parts;\r

      \    if (deck == 'decks') {\r

      \      console.assert(false,'SHOULD NOT GET HERE HAPPEN!!!!
      inno_perform_action draw mit a=draw.decks...!!!!!!!!!!!!!!!');\r

      \    }\r

      \  } else if (parts.length == 4) {\r

      \    let [x, obj, color, cardname] = parts;\r

      \    if (obj == 'board' && x == uname) {\r

      \      inno_activate(otree, r, uname, cardname);\r

      \    }\r

      \    let [action, deck, exp, age] = parts;\r

      \    if (action =='draw' && deck == 'decks') {\r

      \      inno_draw_action(otree, r, uname, exp, age);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function inno_perform_action(otree, r, uname, action, item){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_meld:
    name: inno_meld
    code: "function inno_meld(otree,r,uname,cardname){\r

      \  let ci=inno_get_cardinfo(cardname);\r

      \  let pl = otree[uname];\r

      \  elem_from_to_top(cardname,pl.hand, pl.board[ci.color]);\r

      \  next_task(otree, r);\r

      }\r\n"
    sig: function inno_meld(otree,r,uname,cardname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_draw_action:
    name: inno_draw_action
    code: "function inno_draw_action(otree,r, uname, exp, age) {\r

      \  draw_from_deck_to(otree.decks[exp][age], otree[uname].hand);\r

      \  next_task(otree, r);\r

      }\r\n"
    sig: function inno_draw_action(otree,r, uname, exp, age){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_activate:
    name: inno_activate
    code: "function inno_activate(otree, r, uname, cardname) {\r

      \  let fname = `inno_${cardname}_todo`;\r

      \  if (nundef(window[fname])) { console.log('activate', cardname,
      'NOT IMPLEMENTED!!!!'); return; }\r

      \  let todo = window[fname](otree, uname); \r

      \  let todo_incl_sharing =
      inno_add_sharing_players(otree,uname,cardname,todo);\r

      \  let idx = otree.todo.indexOf(r);\r

      \  console.assert(idx == otree.itask, 'inno_activate: itask does NOT
      point to r!!!!!');\r

      \  otree.todo.splice(idx, 1, ...todo_incl_sharing);\r

      }\r\n"
    sig: function inno_activate(otree, r, uname, cardname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_add_sharing_players:
    name: inno_add_sharing_players
    code: "function inno_add_sharing_players(otree,uname,cardname,todo){\r

      \  otree.pl_sharing = inno_calc_sharing(otree,uname,cardname);\r

      \  let task_list = jsCopy(todo); \r

      \  todo = [];\r

      \  for(const plname of otree.pl_sharing){\r

      \    let new_task_list = [];\r

      \    for(const t of task_list){ let t1 = {}; t1.uname = plname;
      t1.id = getUID('r'); addKeys(t,t1); new_task_list.push(t1); }\r

      \    todo = todo.concat(new_task_list);\r

      \  }\r

      \  todo=todo.concat(task_list);\r

      \  return todo;\r

      }\r\n"
    sig: function inno_add_sharing_players(otree,uname,cardname,todo){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_calc_sharing:
    name: inno_calc_sharing
    code: "function inno_calc_sharing(otree,uname,ckey){\r

      \  let ci = inno_get_cardinfo(ckey);\r

      \  let sym = ci.type;\r

      \  let n=otree[uname].totals[sym];\r

      \  let pl_sharing = otree.plorder.filter(x=>x!=uname &&
      otree[x].totals[sym] >= n);\r

      \  return pl_sharing;\r

      }\r\n"
    sig: function inno_calc_sharing(otree,uname,ckey){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_has_echo:
    name: inno_has_echo
    code: "function inno_has_echo(otree, uname) {\r

      \  let handcardinfo = otree[uname].hand.map(x =>
      inno_get_cardinfo(x));\r

      \  let has_echo = firstCond(handcardinfo, x => x.exp[0] == 'E');\r

      \  return has_echo;\r

      }\r\n"
    sig: function inno_has_echo(otree, uname){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_has_towers:
    name: inno_has_towers
    code: "function inno_has_towers(cardinfo) { return
      cardinfo.resources.includes('tower'); }\r\n"
    sig: function inno_has_towers(cardinfo){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_is_figure:
    name: inno_is_figure
    code: "function inno_is_figure(cardinfo) { return cardinfo.exp[0] == 'F'; }\r\n"
    sig: function inno_is_figure(cardinfo){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_is_echoes:
    name: inno_is_echoes
    code: "function inno_is_echoes(cardinfo) { return cardinfo.exp[0] == 'E'; }\r\n"
    sig: function inno_is_echoes(cardinfo){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_is_artifact:
    name: inno_is_artifact
    code: "function inno_is_artifact(cardinfo) { return cardinfo.exp[0] == 'A';
      }\r\n"
    sig: function inno_is_artifact(cardinfo){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  inno_is_basic:
    name: inno_is_basic
    code: "function inno_is_basic(cardinfo) { return cardinfo.exp[0] == 'B'; }\r\n"
    sig: function inno_is_basic(cardinfo){}
    region: funcs (inno_functions.js)
    filename: inno_functions.js
    type: func
    fname: inno_functions.js
    path: C:\xampp\htdocs\aroot\base\js\inno_functions.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533980.2725
    size: 6467
  allow_polling:
    name: allow_polling
    code: "function allow_polling() { IS_POLLING_ALLOWED = true;if (isdef(DA.poll))
      poll(); }\r\n"
    sig: function allow_polling(){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  is_polling_on:
    name: is_polling_on
    code: "function is_polling_on() { return IS_POLLING_ALLOWED; }\r\n"
    sig: function is_polling_on(){}
    region: polling (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  start_bots:
    name: start_bots
    code: "function start_bots(obj) {\r

      \  if (is_admin() && DA.is_first_move == true) {\r

      \    DA.bots = [];\r

      \    let bots = { bob: 5000 }; \r

      \    for (const botname in bots) {\r

      \      if (obj.table.players.includes(botname)) {
      start_poll_bot_send_move(botname, bots[botname]); } \r

      \    }\r

      \  }\r

      \  DA.is_first_move = false;\r

      }\r\n"
    sig: function start_bots(obj){}
    region: BOTS (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\base\js\polling.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533574.4553
    size: 4302
  create_ai_move:
    name: create_ai_move
    code: "function create_ai_move(data) {\r

      \  let newscore = Math.min(Session.winning_score, data.score + 1);\r

      \  console.log('AI score is', newscore);\r

      \  let newstate = data.state;\r

      \  let newdata = {\r

      \    tid: data.tid,\r

      \    player_status: newscore >= Session.winning_score ? 'done' :
      'joined',\r

      \    score: newscore,\r

      \    state: newstate,\r

      \    uname: data.uname\r

      \  };\r

      \  return newdata;\r

      }\r\n"
    sig: function create_ai_move(data){}
    region: BOTS (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\base\js\polling.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533574.4553
    size: 4302
  start_poll_bot_send_move:
    name: start_poll_bot_send_move
    code: "function start_poll_bot_send_move(botname = 'bob', ms = 3000) {\r

      \  DA.bots.push(botname);\r

      \  if (DB.games[Session.cur_game].game_type == 'race') {\r

      \    let o = { tid: Session.cur_tid, player_status: 'joined', score:
      0, state: 'bot', uname: botname };\r

      \    start_polling(o, 'poll_bot_send_move', on_poll_bot_send_move,
      ms, create_ai_move); \r

      \  } else {\r

      \  }\r

      }\r\n"
    sig: function start_poll_bot_send_move(botname = 'bob', ms = 3000){}
    region: BOTS (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\base\js\polling.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533574.4553
    size: 4302
  check_poll_bot_send_move:
    name: check_poll_bot_send_move
    code: "function check_poll_bot_send_move(obj) {\r

      \  console.log('...bot check table status: ', lookup(obj, ['table',
      'status']) ?? 'no obj.table.status!!!', obj);\r

      \  if (nundef(DA.poll)) return;\r

      \  else if (isdef(obj) && isdef(obj.table) && obj.table.status ==
      'over') {\r

      \    DA.poll.onsuccess(obj);\r

      \  } else {\r

      \    BotTicker = setTimeout(poll, DA.poll.ms);\r

      \  }\r

      }\r\n"
    sig: function check_poll_bot_send_move(obj){}
    region: BOTS (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\base\js\polling.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533574.4553
    size: 4302
  on_poll_bot_send_move:
    name: on_poll_bot_send_move
    code: "function on_poll_bot_send_move(obj) {\r

      \  console.log('game is over for AI', DA.poll.data.uname);\r

      \  clearTimeout(BotTicker);\r

      \  delete DA.poll;\r

      }\r\n"
    sig: function on_poll_bot_send_move(obj){}
    region: BOTS (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\base\js\polling.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465533574.4553
    size: 4302
  ari_post_action:
    name: ari_post_action
    code: "function ari_post_action() {\r

      \  clearElement(dError);\r

      \  let otree = G.otree;\r

      \  let [step, stage, iturn, round, phase, plturn] =
      set_state_numbers(otree);\r

      \  let [deck, market, discard, open_discard] = [G.deck, G.market,
      G.deck_discard, G.open_discard];\r

      \  if (stage == 2) {\r

      \    let items = A.selected.map(x => A.items[x]);\r

      \    let n = otree.pl_tax[plturn];\r

      \    if (items.length != n) {\r

      \      output_error(`please select exactly ${n} cards`);\r

      \      return;\r

      \    }\r

      \    for (const item of items) {\r

      \      elem_from_to_top(item.key, otree[plturn].hand,
      otree.deck_discard);\r

      \    }\r

      \    ari_reorg_discard(otree);\r

      \    let [iturn, plnext] = ari_get_tax_payer(otree, otree.pl_tax,
      otree.iturn + 1);\r

      \    if (iturn == null) {\r

      \      otree.stage = 3;\r

      \      otree.iturn = 0;\r

      \      delete otree.pl_tax;\r

      \    } else {\r

      \      otree.iturn = iturn;\r

      \    }\r

      \    otree.plturn = otree.plorder[otree.iturn];\r

      \    turn_send_move_update(otree, plturn);\r

      \  } else if (stage == 3) {\r

      \    console.assert(false, 'NO SHOULD NOT COME TO POST STATE 3');\r

      \  } else if (stage == 4) {\r

      \    let selectedKeys = A.selected.map(i => A.items[i].key);\r

      \    for (const ckey of selectedKeys) {\r

      \      elem_from_to(ckey, otree[plturn].hand,
      otree[plturn].stall);\r

      \    }\r

      \    otree.round.push(plturn);\r

      \    if (is_round_over(otree)) {\r

      \      otree.round = [];\r

      \      let next =
      ari_select_next_player_according_to_stall_value(otree);\r

      \      if (!next) { ari_next_action(otree, plturn); return; }\r

      \    } else {\r

      \      otree.iturn++;\r

      \    }\r

      \    otree.plturn = otree.plorder[otree.iturn]; \r

      \    turn_send_move_update(otree, plturn); \r

      \  } else if (stage == 6 && A.selected_key == 'trade') {\r

      \    if (A.selected.length != 2) {\r

      \      output_error('please, select exactly 2 cards!');\r

      \      return;\r

      \    }\r

      \    let i0 = A.items[A.selected[0]];\r

      \    let i1 = A.items[A.selected[1]];\r

      \    if (i0.path == i1.path) {\r

      \      output_error('you cannot trade cards from the same group');\r

      \      return;\r

      \    } else {\r

      \      a2_exchange_items(otree, i0, i1); \r

      \      ari_next_action(otree, plturn);\r

      \    }\r

      \  } else if (stage == 6 && A.selected_key == 'repair') {\r

      \    if (A.selected.length != 2) {\r

      \      output_error('please, select exactly 2 cards!');\r

      \      return;\r

      \    }\r

      \    let i0 = A.items[A.selected[0]];\r

      \    let i1 = A.items[A.selected[1]];\r

      \    let [p0, p1] = [i0.path, i1.path];\r

      \    if (p0.includes('build') == p1.includes('build')) {\r

      \      output_error('select exactly one building card and one of
      your hand or stall cards!');\r

      \      return;\r

      \    }\r

      \    a2_exchange_items(otree, i0, i1); \r

      \    console.log('repair items', i0, i1);\r

      \    let ibuilding = p0.includes('build') ? i0 : i1;\r

      \    let obuilding = lookup(otree, stringBeforeLast(ibuilding.path,
      '.').split('.'));\r

      \    console.log('obuilding', obuilding);\r

      \    obuilding.schwein = null;\r

      \    ari_next_action(otree, plturn);\r

      \  } else if (stage == 6 && A.command == 'build') {\r

      \    console.log('should have paid for building!',
      otree[plturn].coins);\r

      \    if (A.selected.length < 4 || A.selected.length > 6) {\r

      \      output_error('select 4, 5, or 6 cards to build!');\r

      \      return;\r

      \    }\r

      \    ari_complete_building();\r

      \  } else if (stage == 6 && A.command == 'upgrade') {\r

      \    let n = A.selected.length;\r

      \    if (n > 2 || n == 2 && !has_farm(plturn)) {\r

      \      output_error('too many cards selected!');\r

      \      return;\r

      \    } else if (n == 0) {\r

      \      output_error('please select hand or stall card(s) to
      upgrade!');\r

      \      return;\r

      \    }\r

      \    A.upgrade_cards = A.selected.map(x => A.items[x]);\r

      \    otree.stage = 102;\r

      \    let b_items = a2_get_farms_estates_items(plturn); \r

      \    a2_add_selection(b_items, 'buildings', 1, 1);\r

      \  } else if (stage == 102) { \r

      \    A.building = A.items[A.selected[0]];\r

      \    ari_complete_upgrade();\r

      \  } else if (stage == 6 && A.command == 'downgrade') {\r

      \    A.building = A.items[A.selected[0]];\r

      \    otree.stage = 103;\r

      \    let items = a2_get_hidden_building_items(A.building.o);\r

      \    items.map(x => face_up(x.o));\r

      \    A.possible_downgrade_cards = items;\r

      \    a2_add_selection(items, 'downgrade cards');\r

      \  } else if (stage == 103) { \r

      \    A.downgrade_cards = A.selected.map(x => A.items[x]); \r

      \    let obuilding = lookup(otree, A.building.path.split('.'));\r

      \    let n = obuilding.list.length;\r

      \    let nremove = A.downgrade_cards.length;\r

      \    let nfinal = n - nremove;\r

      \    let type = A.building.o.type;\r

      \    let list = otree[plturn].buildings[type];\r

      \    removeInPlace(list, obuilding);\r

      \    let cards = A.downgrade_cards.map(x => x.key);\r

      \    if (nfinal < 4) {\r

      \      otree[plturn].hand =
      otree[plturn].hand.concat(obuilding.list);\r

      \    } else if (nfinal == 4) {\r

      \      otree[plturn].buildings.farms.push(obuilding);\r

      \      otree[plturn].hand = otree[plturn].hand.concat(cards);\r

      \    } else if (nfinal == 5) {\r

      \      otree[plturn].buildings.estates.push(obuilding);\r

      \      otree[plturn].hand = otree[plturn].hand.concat(cards);\r

      \    } else if (nfinal == 6) {\r

      \      otree[plturn].buildings.chateaus.push(obuilding);\r

      \      otree[plturn].hand = otree[plturn].hand.concat(cards);\r

      \    }\r

      \    A.downgrade_cards.map(x => removeInPlace(obuilding.list,
      x.key));\r

      \    ari_next_action(otree, plturn);\r

      \  } else if (stage == 6 && A.command == 'buy') {\r

      \    let item = A.items[A.selected[0]];\r

      \    elem_from_to(item.key, otree.open_discard,
      otree[plturn].hand);\r

      \    ari_reorg_discard(otree);\r

      \    ari_next_action(otree, plturn);\r

      \  } else if (stage == 6 && A.command == 'visit') {\r

      \    let item = A.items[A.selected[0]];\r

      \    console.log('building to inspect', item);\r

      \    let obuilding = lookup(otree, item.path.split('.'));\r

      \    let owner = stringBefore(item.path, '.');\r

      \    if (isdef(obuilding.schwein)) {\r

      \      let res = confirm('destroy the building?');\r

      \      if (!res) {\r

      \        if (otree[owner].coins > 0) {\r

      \          otree[owner].coins-=1;\r

      \          otree[plturn].coins+=1;\r

      \        }\r

      \      } else {\r

      \        let list = obuilding.list;\r

      \        console.log('!!!!!!!!!!!!!building',obuilding,'DESTROY!!!!\
      !!!!!!!!!!!!','\\nlist',list);\r

      \        let correct_key = list[0];\r

      \        let rank = correct_key[0];\r

      \        while (list.length > 0) {\r

      \          let ckey = list[0];\r

      \          if (ckey[0] != rank) {\r

      \            elem_from_to_top(ckey, list, otree.deck_discard);\r

      \          } else {\r

      \            elem_from_to(ckey, list, otree[owner].hand);\r

      \          }\r

      \        }\r

      \        if (isdef(obuilding.harvest)) {\r

      \          otree.deck_discard.unshift(obuilding.harvest);\r

      \        }\r

      \        ari_reorg_discard(otree);\r

      \        let blist = lookup(otree, stringBeforeLast(item.path,
      '.').split('.'));\r

      \        removeInPlace(blist, obuilding);\r

      \      }\r

      \    } else {\r

      \      let cards = item.o.items;\r

      \      let key = cards[0].rank;\r

      \      let schweine = false;\r

      \      let schwein = null;\r

      \      for (const c of cards) {\r

      \        if (c.rank != key) { schweine = true; schwein = c.key;
      face_up(c); break; }\r

      \      }\r

      \      if (schweine) {\r

      \        if (otree[owner].coins > 0) {\r

      \          otree[owner].coins--;\r

      \          otree[plturn].coins++;\r

      \        }\r

      \        let b = lookup(otree, item.path.split('.'));\r

      \        b.schwein = schwein;\r

      \      }\r

      \    }\r

      \    ari_next_action(otree, plturn);\r

      \  } else if (stage == 6 && A.selected_key == 'sell') {\r

      \    if (A.selected.length != 2) {\r

      \      output_error('select exactly 2 cards to sell!');\r

      \      return;\r

      \    }\r

      \    for (const i of A.selected) {\r

      \      let c = A.items[i].key;\r

      \      elem_from_to(c, otree[plturn].stall, otree.deck_discard);\r

      \    }\r

      \    ari_reorg_discard(otree);\r

      \    otree[plturn].coins += 1;\r

      \    ari_next_action(otree, plturn);\r

      \  } else if (stage == 6 && A.command == 'harvest') {\r

      \    let item = A.items[A.selected[0]];\r

      \    let obuilding = lookup(otree, item.path.split('.'));\r

      \    otree[plturn].hand.push(obuilding.h);\r

      \    obuilding.h = null;\r

      \    ari_next_action(otree, plturn);\r

      \  } else if (stage == 100) { \r

      \    console.log('pickup', A.selected_key, A.items, A.selected);\r

      \    let item = A.items[A.selected[0]];\r

      \    elem_from_to(item.key, otree[plturn].stall,
      otree[plturn].hand);\r

      \    ari_next_action(otree, plturn);\r

      \  } else if (A.selected_key == 'pass') {\r

      \    console.log('HAAAAAAAAAAAAAAAAAAAAAAAAAAAALLLLLLLLLLLLLLLLLLLL\
      LLLLLOOOOOOOOOOOOOOOOO')\r

      \    otree.num_actions = 0;\r

      \    ari_next_action(otree, plturn);\r

      \  } else if (stage == 10) { \r

      \    if (A.selected_key == 'end game') {\r

      \      for (const uname of otree.plorder) {\r

      \        let [bcorrect, realvps] =
      ari_get_correct_buildings(otree[uname].buildings);\r

      \        otree[uname].score = realvps;\r

      \      }\r

      \      let scores = otree.plorder.map(x => ({ name: x, vps:
      otree[x].realvps }));\r

      \      let sorted = sortByDescending(scores, 'vps');\r

      \      ari_reveal_all_buildings(otree);\r

      \      otree.winner = sorted[0].name;\r

      \      turn_send_gameover(otree, plturn);\r

      \    } else {\r

      \      let iturn = otree.iturn += 1;\r

      \      if (iturn >= otree.pl_gameover.length) { \r

      \        delete otree.pl_gameover;\r

      \        otree.round = [];\r

      \        otree.iturn = 0;\r

      \        otree.stage = 3;\r

      \        otree.phase = 'queen';\r

      \        otree.plturn = otree.plorder[otree.iturn];\r

      \        turn_send_move_update(otree, plturn); \r

      \      } else {\r

      \        otree.plturn = otree.plorder[otree.iturn];\r

      \        turn_send_move_update(otree, plturn); \r

      \      }\r

      \    }\r

      \  } else if (stage == 11) { \r

      \    let keys = A.selected.map(x => A.items[x]).map(x => x.key); \r

      \    keys.map(x => lookupAddIfToList(otree, ['ball', plturn], x));\r

      \    keys.map(x => removeInPlace(otree[plturn].hand, x));\r

      \    let iturn = otree.iturn += 1;\r

      \    if (iturn >= otree.plorder.length) { \r

      \      if (isdef(otree.ball)) {\r

      \        let all = [];\r

      \        for (const c of otree.market) all.push(c);\r

      \        for (const uname in otree.ball) for (const c of
      otree.ball[uname]) all.push(c);\r

      \        shuffle(all);\r

      \        otree.market = [];\r

      \        for (let i = 0; i < 2; i++) top_elem_from_to(all,
      otree.market);\r

      \        for (const uname in otree.ball) for (let i = 0; i <
      otree.ball[uname].length; i++) top_elem_from_to(all, otree[uname].hand);\r

      \        delete otree.ball;\r

      \      } \r

      \      otree.round = [];\r

      \      otree.iturn = 0;\r

      \      otree.stage = 4;\r

      \      otree.phase = 'queen';\r

      \    }\r

      \    otree.plturn = otree.plorder[otree.iturn];\r

      \    turn_send_move_update(otree, plturn); \r

      \  } else if (stage == 12) { \r

      \    let keys = A.selected.map(x => A.items[x]); \r

      \    keys.map(x => lookupAddIfToList(otree, ['auction', plturn],
      x));\r

      \    let iturn = otree.iturn += 1;\r

      \    if (iturn >= otree.plorder.length) { \r

      \      let list = dict2list(otree.auction);\r

      \      list.map(x => { x.uname = x.id; x.item = x.value[0]; x.amount
      = Number(x.item.a); });\r

      \      list = sortByDescending(list, 'amount');\r

      \      let max = list[0].amount;\r

      \      let second = otree.second_most = list[1].amount;\r

      \      otree.stage = 13;\r

      \      let maxplayers = otree.maxplayers = list.filter(x => x.amount
      == max).map(x => x.uname);\r

      \      otree.round = arrMinus(otree.plorder, maxplayers);\r

      \      otree.iturn = otree.plorder.indexOf(maxplayers[0]);\r

      \    }\r

      \    otree.plturn = otree.plorder[otree.iturn];\r

      \    turn_send_move_update(otree, plturn); \r

      \  } else if (stage == 13) { \r

      \    let item = A.selected.map(x => A.items[x])[0]; \r

      \    lookupSet(otree, ['buy', plturn], item);\r

      \    for (const uname of otree.maxplayers) {\r

      \      if (!lookup(otree, ['buy', uname])) {\r

      \        otree.iturn = otree.plorder.indexOf(uname);\r

      \        otree.plturn = otree.plorder[otree.iturn];\r

      \        turn_send_move_update(otree, plturn); \r

      \        return;\r

      \      }\r

      \    }\r

      \    let buylist = dict2list(otree.buy);\r

      \    let discardlist = [];\r

      \    for (const uname of otree.maxplayers) {\r

      \      let choice = otree.buy[uname];\r

      \      let is_unique = !firstCond(buylist, x => x.id != uname &&
      x.value == choice);\r

      \      if (is_unique) {\r

      \        otree[uname].coins -= otree.second_most;\r

      \        elem_from_to(choice.key, otree.market,
      otree[uname].hand);\r

      \      } else addIf(discardlist, choice);\r

      \    }\r

      \    for (const choice of discardlist) {\r

      \      elem_from_to(choice.key, otree.market, otree.deck_discard);\r

      \      ari_reorg_discard(otree);\r

      \    }\r

      \    otree.iturn = 0;\r

      \    otree.stage = 4;\r

      \    otree.round = [];\r

      \    otree.plturn = otree.plorder[otree.iturn];\r

      \    turn_send_move_update(otree, plturn); \r

      \  }\r

      }\r\n"
    sig: function ari_post_action(){}
    region: funcs (apost.js)
    filename: apost.js
    type: func
    fname: apost.js
    path: C:\xampp\htdocs\aroot\base\js\apost.js
    datetime: 2022-01-29-08-26
    timestamp: 1643473582113.5347
    size: 18385
  bGetCol:
    name: bGetCol
    code: "function bGetCol(arr, icol, rows, cols) {\r

      \  let iStart = icol;\r

      \  let res = [];\r

      \  for (let i = iStart; i < iStart + (cols * rows); i += cols)
      res.push(arr[i]);\r

      \  return res;\r

      }\r\n"
    sig: function bGetCol(arr, icol, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bGetRow:
    name: bGetRow
    code: "function bGetRow(arr, irow, rows, cols) {\r

      \  let iStart = irow * cols;\r

      \  let arrNew = arr.slice(iStart, iStart + cols);\r

      \  let res = [];\r

      \  for (let i = iStart; i < iStart + cols; i++) res.push(arr[i]);\r

      \  console.assert(sameList(arrNew, res), 'NOOOOOO');\r

      \  return res;\r

      }\r\n"
    sig: function bGetRow(arr, irow, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bNei:
    name: bNei
    code: "function bNei(arr, idx, rows, cols, includeDiagonals = true) {\r

      \  let nei = [];\r

      \  let [r, c] = iToRowCol(idx, rows, cols);\r

      \  if (r > 0) nei.push(idx - cols); else nei.push(null);\r

      \  if (r > 0 && c < cols - 1 && includeDiagonals) nei.push(idx -
      cols + 1); else nei.push(null);\r

      \  if (c < cols - 1) nei.push(idx + 1); else nei.push(null);\r

      \  if (r < rows - 1 && c < cols - 1 && includeDiagonals)
      nei.push(idx + cols + 1); else nei.push(null);\r

      \  if (r < rows - 1) nei.push(idx + cols); else nei.push(null);\r

      \  if (r < rows - 1 && c > 0 && includeDiagonals) nei.push(idx +
      cols - 1); else nei.push(null);\r

      \  if (c > 0) nei.push(idx - 1); else nei.push(null);\r

      \  if (r > 0 && c > 0 && includeDiagonals) nei.push(idx - cols - 1);
      else nei.push(null);\r

      \  return nei;\r

      }\r\n"
    sig: function bNei(arr, idx, rows, cols, includeDiagonals = true){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iFromRowCol:
    name: iFromRowCol
    code: "function iFromRowCol(row, col, rows, cols) { return row * cols + col;
      }\r\n"
    sig: function iFromRowCol(row, col, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iToRowCol:
    name: iToRowCol
    code: "function iToRowCol(idx, rows, cols) { let c = idx % cols; let r = (idx -
      c) / rows; return [r, c]; }\r\n"
    sig: function iToRowCol(idx, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bCheck:
    name: bCheck
    code: "function bCheck(r, c, rows, cols) { return r >= 0 && r < rows && c >= 0
      && c < cols ? r * cols + c : null; }\r\n"
    sig: function bCheck(r, c, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bNeiDir:
    name: bNeiDir
    code: "function bNeiDir(arr, idx, dir, rows, cols, includeDiagonals = true) {\r

      \  let [r, c] = iToRowCol(idx, rows, cols);\r

      \  switch (dir) {\r

      \    case 0: if (r > 0) return (idx - cols); else return (null);\r

      \    case 1: if (r > 0 && c < cols - 1 && includeDiagonals) return
      (idx - cols + 1); else return (null);\r

      \    case 2: if (c < cols - 1) return (idx + 1); else return
      (null);\r

      \    case 3: if (r < rows - 1 && c < cols - 1 && includeDiagonals)
      return (idx + cols + 1); else return (null);\r

      \    case 4: if (r < rows - 1) return (idx + cols); else return
      (null);\r

      \    case 5: if (r < rows - 1 && c > 0 && includeDiagonals) return
      (idx + cols - 1); else return (null);\r

      \    case 6: if (c > 0) return (idx - 1); else return (null);\r

      \    case 7: if (r > 0 && c > 0 && includeDiagonals) return (idx -
      cols - 1); else return (null);\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function bNeiDir(arr, idx, dir, rows, cols, includeDiagonals = true){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bRayDir:
    name: bRayDir
    code: "function bRayDir(arr, idx, dir, rows, cols) {\r

      \  let indices = [];\r

      \  let i = idx;\r

      \  while (i < arr.length) {\r

      \    let i = bNeiDir(arr, i, dir, rows, cols);\r

      \    if (!i) break; else indices.push(i);\r

      \  }\r

      \  return indices;\r

      }\r\n"
    sig: function bRayDir(arr, idx, dir, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bFreeRayDir:
    name: bFreeRayDir
    code: "function bFreeRayDir(arr, idx, dir, rows, cols) {\r

      \  let indices = [];\r

      \  let i = idx;\r

      \  while (i < arr.length) {\r

      \    i = bNeiDir(arr, i, dir, rows, cols);\r

      \    if (!i || !empty_func(arr[i])) break; else indices.push(i);\r

      \  }\r

      \  return indices;\r

      }\r\n"
    sig: function bFreeRayDir(arr, idx, dir, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bFreeRayDir1:
    name: bFreeRayDir1
    code: "function bFreeRayDir1(arr, idx, dir, rows, cols) {\r

      \  let indices = [];\r

      \  let i = idx;\r

      \  while (i < arr.length) {\r

      \    i = bNeiDir(arr, i, dir, rows, cols);\r

      \    if (!i) break;\r

      \    else indices.push(i);\r

      \    if (!empty_func(arr[i])) break;\r

      \  }\r

      \  return indices;\r

      }\r\n"
    sig: function bFreeRayDir1(arr, idx, dir, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isOppPiece:
    name: isOppPiece
    code: "function isOppPiece(sym, plSym) { return sym && sym != plSym; }\r\n"
    sig: function isOppPiece(sym, plSym){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bCapturedPieces:
    name: bCapturedPieces
    code: "function bCapturedPieces(plSym, arr, idx, rows, cols, includeDiagonals =
      true) {\r

      \  let res = [];\r

      \  let nei = bNei(arr, idx, rows, cols, includeDiagonals);\r

      \  for (let dir = 0; dir < 8; dir++) {\r

      \    let i = nei[dir];\r

      \    if (nundef(i)) continue;\r

      \    let el = arr[i];\r

      \    if (empty_func(el) || el == plSym) continue;\r

      \    let inew = [];\r

      \    let MAX = 100, cmax = 0;\r

      \    while (isOppPiece(el, plSym)) {\r

      \      if (cmax > MAX) break; cmax += 1;\r

      \      inew.push(i);\r

      \      i = bNeiDir(arr, i, dir, rows, cols);\r

      \      if (nundef(i)) break;\r

      \      el = arr[i];\r

      \    }\r

      \    if (el == plSym) {\r

      \      res = res.concat(inew);\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function bCapturedPieces(plSym, arr, idx, rows, cols, includeDiagonals =
      true){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bFullRow:
    name: bFullRow
    code: "function bFullRow(arr, irow, rows, cols) {\r

      \  let iStart = irow * cols;\r

      \  let x = arr[iStart]; if (empty_func(x)) return null;\r

      \  for (let i = iStart + 1; i < iStart + cols; i++) if (arr[i] != x)
      return null;\r

      \  return x;\r

      }\r\n"
    sig: function bFullRow(arr, irow, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bStrideRow:
    name: bStrideRow
    code: "function bStrideRow(arr, irow, rows, cols, stride) {\r

      \  for (let i = 0; i <= cols - stride; i++) {\r

      \    let ch = bStrideRowFrom(arr, irow, i, rows, cols, stride);\r

      \    if (ch) return ch;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function bStrideRow(arr, irow, rows, cols, stride){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bStrideRowFrom:
    name: bStrideRowFrom
    code: "function bStrideRowFrom(arr, irow, icol, rows, cols, stride) {\r

      \  if (cols - icol < stride) return null;\r

      \  let iStart = irow * cols + icol;\r

      \  let x = arr[iStart];\r

      \  if (empty_func(x)) return null;\r

      \  for (let i = iStart + 1; i < iStart + stride; i++) if (arr[i] !=
      x) return null;\r

      \  return x;\r

      }\r\n"
    sig: function bStrideRowFrom(arr, irow, icol, rows, cols, stride){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bStrideCol:
    name: bStrideCol
    code: "function bStrideCol(arr, icol, rows, cols, stride) {\r

      \  for (let i = 0; i <= rows - stride; i++) {\r

      \    let ch = bStrideColFrom(arr, i, icol, rows, cols, stride);\r

      \    if (ch) return ch;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function bStrideCol(arr, icol, rows, cols, stride){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bStrideColFrom:
    name: bStrideColFrom
    code: "function bStrideColFrom(arr, irow, icol, rows, cols, stride) {\r

      \  if (rows - irow < stride) return null;\r

      \  let iStart = irow * cols + icol;\r

      \  let x = arr[iStart];\r

      \  if (empty_func(x)) return null;\r

      \  for (let i = iStart + cols; i < iStart + cols * stride; i +=
      cols) if (arr[i] != x) return null;\r

      \  return x;\r

      }\r\n"
    sig: function bStrideColFrom(arr, irow, icol, rows, cols, stride){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bStrideDiagFrom:
    name: bStrideDiagFrom
    code: "function bStrideDiagFrom(arr, irow, icol, rows, cols, stride) {\r

      \  if (rows - irow < stride || cols - icol < stride) return null;\r

      \  let iStart = irow * cols + icol;\r

      \  let x = arr[iStart];\r

      \  if (empty_func(x)) return null;\r

      \  for (let i = iStart + cols + 1; i < iStart + (cols + 1) * stride;
      i += cols + 1) if (arr[i] != x) return null;\r

      \  return x;\r

      }\r\n"
    sig: function bStrideDiagFrom(arr, irow, icol, rows, cols, stride){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bStrideDiag2From:
    name: bStrideDiag2From
    code: "function bStrideDiag2From(arr, irow, icol, rows, cols, stride) {\r

      \  if (rows - irow < stride || icol - stride + 1 < 0) return null;\r

      \  let iStart = irow * cols + icol;\r

      \  let x = arr[iStart];\r

      \  if (empty_func(x)) return null;\r

      \  for (let i = iStart + cols - 1; i < iStart + (cols - 1) * stride;
      i += cols - 1) if (arr[i] != x) return null;\r

      \  return x;\r

      }\r\n"
    sig: function bStrideDiag2From(arr, irow, icol, rows, cols, stride){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bFullCol:
    name: bFullCol
    code: "function bFullCol(arr, icol, rows, cols) {\r

      \  let iStart = icol;\r

      \  let x = arr[iStart]; if (empty_func(x)) return null;\r

      \  for (let i = iStart + cols; i < iStart + (cols * rows); i +=
      cols) if (arr[i] != x) return null;\r

      \  return x;\r

      }\r\n"
    sig: function bFullCol(arr, icol, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bFullDiag:
    name: bFullDiag
    code: "function bFullDiag(arr, rows, cols) {\r

      \  let iStart = 0;\r

      \  let x = arr[iStart]; if (empty_func(x)) return null;\r

      \  for (let i = iStart + cols + 1; i < arr.length; i += cols + 1) {
      if (arr[i] != x) return null; }\r

      \  return x;\r

      }\r\n"
    sig: function bFullDiag(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bFullDiag2:
    name: bFullDiag2
    code: "function bFullDiag2(arr, rows, cols) {\r

      \  let iStart = cols - 1;\r

      \  let x = arr[iStart]; if (empty_func(x)) return null;\r

      \  for (let i = iStart + cols - 1; i < arr.length - 1; i += cols -
      1) { if (arr[i] != x) return null; }\r

      \  return x;\r

      }\r\n"
    sig: function bFullDiag2(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bPartialRow:
    name: bPartialRow
    code: "function bPartialRow(arr, irow, rows, cols) {\r

      \  let iStart = irow * cols;\r

      \  let x = null;\r

      \  for (let i = iStart; i < iStart + cols; i++) {\r

      \    if (empty_func(arr[i])) continue;\r

      \    else if (empty_func(x)) x = arr[i];\r

      \    else if (arr[i] != x) return null;\r

      \  }\r

      \  return x;\r

      }\r\n"
    sig: function bPartialRow(arr, irow, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bPartialCol:
    name: bPartialCol
    code: "function bPartialCol(arr, icol, rows, cols) {\r

      \  let iStart = icol;\r

      \  let x = null;\r

      \  for (let i = iStart; i < iStart + (cols * rows); i += cols) { if
      (empty_func(arr[i])) continue; else if (empty_func(x)) x = arr[i]; else if
      (arr[i] != x) return null; }\r

      \  return x;\r

      }\r\n"
    sig: function bPartialCol(arr, icol, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bPartialDiag:
    name: bPartialDiag
    code: "function bPartialDiag(arr, rows, cols) {\r

      \  let iStart = 0;\r

      \  let x = null;\r

      \  for (let i = iStart; i < arr.length; i += cols + 1) { if
      (empty_func(arr[i])) continue; else if (empty_func(x)) x = arr[i]; else if
      (arr[i] != x) return null; }\r

      \  return x;\r

      }\r\n"
    sig: function bPartialDiag(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bPartialDiag2:
    name: bPartialDiag2
    code: "function bPartialDiag2(arr, rows, cols) {\r

      \  let iStart = cols - 1;\r

      \  let x = null;\r

      \  for (let i = iStart; i < arr.length - 1; i += cols - 1) {\r

      \    if (empty_func(arr[i])) continue; else if (empty_func(x)) x =
      arr[i]; else if (arr[i] != x) return null;\r

      \  }\r

      \  return x;\r

      }\r\n"
    sig: function bPartialDiag2(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkWinnerPossible:
    name: checkWinnerPossible
    code: "function checkWinnerPossible(arr, rows, cols) {\r

      \  for (i = 0; i < rows; i++) { let ch = bPartialRow(arr, i, rows,
      cols); if (ch) return ch; }\r

      \  for (i = 0; i < cols; i++) { let ch = bPartialCol(arr, i, rows,
      cols); if (ch) return ch; }\r

      \  let ch = bPartialDiag(arr, rows, cols); if (ch) return ch;\r

      \  ch = bPartialDiag2(arr, rows, cols); if (ch) return ch;\r

      \  return null;\r

      }\r\n"
    sig: function checkWinnerPossible(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkWinner:
    name: checkWinner
    code: "function checkWinner(arr, rows, cols) {\r

      \  for (i = 0; i < rows; i++) { let ch = bFullRow(arr, i, rows,
      cols); if (ch) return ch; }\r

      \  for (i = 0; i < cols; i++) { let ch = bFullCol(arr, i, rows,
      cols); if (ch) return ch; }\r

      \  let ch = bFullDiag(arr, rows, cols); if (ch) return ch;\r

      \  ch = bFullDiag2(arr, rows, cols); if (ch) return ch;\r

      \  return null;\r

      }\r\n"
    sig: function checkWinner(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkBoardEmpty:
    name: checkBoardEmpty
    code: "function checkBoardEmpty(arr) { for (const x of arr) { if
      (!empty_func(x)) return false; } return true; }\r\n"
    sig: function checkBoardEmpty(arr){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkBoardFull:
    name: checkBoardFull
    code: "function checkBoardFull(arr) { for (const x of arr) if (empty_func(x))
      return false; return true; }\r\n"
    sig: function checkBoardFull(arr){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkPotentialTTT:
    name: checkPotentialTTT
    code: "function checkPotentialTTT(arr, rows, cols) { return
      checkWinnerPossible(arr, rows, cols); }\r\n"
    sig: function checkPotentialTTT(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkWinnerTTT:
    name: checkWinnerTTT
    code: "function checkWinnerTTT(arr, rows, cols) { return checkWinner(arr, rows,
      cols); }\r\n"
    sig: function checkWinnerTTT(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkWinnerC4:
    name: checkWinnerC4
    code: "function checkWinnerC4(arr, rows = 6, cols = 7, stride = 4) {\r

      \  for (i = 0; i < rows; i++) { let ch = bStrideRow(arr, i, rows,
      cols, stride); if (ch) return ch; }\r

      \  for (i = 0; i < cols; i++) { let ch = bStrideCol(arr, i, rows,
      cols, stride); if (ch) return ch; }\r

      \  for (i = 0; i < rows; i++) {\r

      \    for (j = 0; j < cols; j++) {\r

      \      let ch = bStrideDiagFrom(arr, i, j, rows, cols, stride); if
      (ch) return ch;\r

      \      ch = bStrideDiag2From(arr, i, j, rows, cols, stride); if (ch)
      return ch;\r

      \    }\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function checkWinnerC4(arr, rows = 6, cols = 7, stride = 4){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  boardToNode:
    name: boardToNode
    code: "function boardToNode(state) {\r

      \  let res = new Array();\r

      \  for (let i = 0; i < state.length; i++) {\r

      \    if (state[i] == null) res[i] = ' ';\r

      \    else res[i] = state[i];\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function boardToNode(state){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  printBoard:
    name: printBoard
    code: "function printBoard(arr, rows, cols, reduced = true) {\r

      \  let arrR = boardArrOmitFirstRowCol(arr, rows, cols);\r

      \  let s = toBoardString(arrR, rows, cols);\r

      \  console.log('board', s);\r

      }\r\n"
    sig: function printBoard(arr, rows, cols, reduced = true){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  boardArrReduced:
    name: boardArrReduced
    code: "function boardArrReduced(boardArr, rows, cols) {\r

      \  let res = [];\r

      \  for (let r = 1; r < rows; r++) {\r

      \    for (let c = 1; c < cols; c++) {\r

      \      let i = iFromRowCol(r, c, rows, cols);\r

      \      res.push(boardArr[i]);\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function boardArrReduced(boardArr, rows, cols){}
    region: var (board.js)
    filename: board.js
    type: func
    fname: board.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\board.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 22881
  toBoardString:
    name: toBoardString
    code: "function toBoardString(arr, rows, cols) {\r

      \  let s = '\\n';\r

      \  for (let r = 0; r < rows; r++) {\r

      \    for (let c = 0; c < cols; c++) {\r

      \      let item = arr[r * cols + c];\r

      \      s += '' + (nundef(item) ? '_' : item) + ' ';\r

      \    }\r

      \    s += '\\n';\r

      \  }\r

      \  return s;\r

      }\r\n"
    sig: function toBoardString(arr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  printState:
    name: printState
    code: "function printState(state, cols, rows) {\r

      \  let formattedString = '';\r

      \  state.forEach((cell, index) => {\r

      \    formattedString += isdef(cell) ? ` ${cell == '0' ? ' ' : cell}
      |` : '   |';\r

      \    if ((index + 1) % cols == 0) {\r

      \      formattedString = formattedString.slice(0, -1);\r

      \      if (index < rows * cols - 1) {\r

      \        let s = '\\u2015\\u2015\\u2015 '.repeat(cols);\r

      \        formattedString += '\\n' + s + '\\n';\r

      \      }\r

      \    }\r

      \  });\r

      \  console.log('%c' + formattedString, 'color:
      #6d4e42;font-size:10px');\r

      \  console.log();\r

      }\r\n"
    sig: function printState(state, cols, rows){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bCreateEmpty:
    name: bCreateEmpty
    code: "function bCreateEmpty(rows, cols) { return new Array(rows *
      cols).fill(null); }\r\n"
    sig: function bCreateEmpty(rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  reduceBoard:
    name: reduceBoard
    code: "function reduceBoard(board, rNew, cNew, iModify) {\r

      \  let [boardArrOld, rOld, cOld] = [board.fields.map(x =>
      isdef(x.item) ? x.item.index : null), board.rows, board.cols];\r

      \  let rest = [];\r

      \  if (rOld > rNew) { rest = bGetRow(boardArrOld, iModify, rOld,
      cOld).filter(x => x != null); }\r

      \  else if (cOld > cNew) { rest = bGetCol(boardArrOld, iModify,
      rOld, cOld).filter(x => x != null); }\r

      \  let boardArrNew = new Array(rNew * cNew);\r

      \  for (let r = 0; r < rNew; r++) {\r

      \    for (let c = 0; c < cNew; c++) {\r

      \      let i = iFromRowCol(r, c, rNew, cNew);\r

      \      let x = (rOld != rNew) ? r : c;\r

      \      if (x < iModify) {\r

      \        let iOld = iFromRowCol(r, c, rOld, cOld);\r

      \        boardArrNew[i] = boardArrOld[iOld];\r

      \      }\r

      \      else {\r

      \        let [ir, ic] = (rOld != rNew) ? [r + 1, c] : [r, c + 1];\r

      \        let iOld = iFromRowCol(ir, ic, rOld, cOld);\r

      \        boardArrNew[i] = boardArrOld[iOld];\r

      \      }\r

      \    }\r

      \  }\r

      \  return { rows: rNew, cols: cNew, boardArr: boardArrNew, extras:
      rest };\r

      }\r\n"
    sig: function reduceBoard(board, rNew, cNew, iModify){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  expandBoard:
    name: expandBoard
    code: "function expandBoard(board, rNew, cNew, iInsert) {\r

      \  let [boardArrOld, rOld, cOld] = [board.fields.map(x =>
      isdef(x.item) ? x.item.index : null), board.rows, board.cols];\r

      \  let boardArrNew = new Array(rNew * cNew);\r

      \  for (let r = 0; r < rNew; r++) {\r

      \    for (let c = 0; c < cNew; c++) {\r

      \      let i = iFromRowCol(r, c, rNew, cNew);\r

      \      let x = (rOld != rNew) ? r : c;\r

      \      if (x < iInsert) {\r

      \        let iOld = iFromRowCol(r, c, rOld, cOld);\r

      \        boardArrNew[i] = boardArrOld[iOld];\r

      \      }\r

      \      else if (x == iInsert) boardArrNew[i] = null;\r

      \      else {\r

      \        let [ir, ic] = (rOld != rNew) ? [r - 1, c] : [r, c - 1];\r

      \        let iOld = iFromRowCol(ir, ic, rOld, cOld);\r

      \        boardArrNew[i] = boardArrOld[iOld];\r

      \      }\r

      \    }\r

      \  }\r

      \  return { rows: rNew, cols: cNew, boardArr: boardArrNew, extras:
      [] };\r

      }\r\n"
    sig: function expandBoard(board, rNew, cNew, iInsert){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  insertColNew:
    name: insertColNew
    code: "function insertColNew(board, cClick) { return expandBoard(board,
      board.rows, board.cols + 1, cClick + 1); }\r\n"
    sig: function insertColNew(board, cClick){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  insertRowNew:
    name: insertRowNew
    code: "function insertRowNew(board, cClick) { return expandBoard(board,
      board.rows + 1, board.cols, cClick + 1); }\r\n"
    sig: function insertRowNew(board, cClick){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  removeColNew:
    name: removeColNew
    code: "function removeColNew(board, cClick) { return reduceBoard(board,
      board.rows, board.cols - 1, cClick); }\r\n"
    sig: function removeColNew(board, cClick){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  removeRowNew:
    name: removeRowNew
    code: "function removeRowNew(board, cClick) { return reduceBoard(board,
      board.rows - 1, board.cols, cClick); }\r\n"
    sig: function removeRowNew(board, cClick){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getCenters:
    name: getCenters
    code: "function getCenters(layout, rows, cols, wCell, hCell,) {\r

      \  if (layout == 'quad') { return quadCenters(rows, cols, wCell,
      hCell); }\r

      \  else if (layout == 'hex') { return hexCenters(rows, cols, wCell,
      hCell); }\r

      \  else if (layout == 'circle') { return circleCenters(rows, cols,
      wCell, hCell); }\r

      }\r\n"
    sig: function getCenters(layout, rows, cols, wCell, hCell,){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getCentersFromAreaSize:
    name: getCentersFromAreaSize
    code: "function getCentersFromAreaSize(layout, wBoard, hBoard, wCell, hCell) {\r

      \  let info;\r

      \  if (layout == 'quad') { info = quadCenters(rows, cols, wCell,
      hCell); }\r

      \  else if (layout == 'hex') { info = hexCenters(rows, cols, wCell,
      hCell); }\r

      \  else if (layout == 'hex1') { info = hex1Centers(rows, cols,
      wCell, hCell); }\r

      \  else if (layout == 'circle') { info = circleCenters(rows, cols,
      wCell, hCell); }\r

      \  return info;\r

      }\r\n"
    sig: function getCentersFromAreaSize(layout, wBoard, hBoard, wCell, hCell){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getCentersFromRowsCols:
    name: getCentersFromRowsCols
    code: "function getCentersFromRowsCols(layout, rows, cols, wCell, hCell) {\r

      \  let info;\r

      \  if (layout == 'quad') { info = quadCenters(rows, cols, wCell,
      hCell); }\r

      \  else if (layout == 'hex') { info = hexCenters(rows, cols, wCell,
      hCell); }\r

      \  else if (layout == 'hex1') { info = hex1Centers(rows, cols,
      wCell, hCell); }\r

      \  else if (layout == 'circle') { info = circleCenters(rows, cols,
      wCell, hCell); }\r

      \  return info;\r

      }\r\n"
    sig: function getCentersFromRowsCols(layout, rows, cols, wCell, hCell){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  quadCenters:
    name: quadCenters
    code: "function quadCenters(rows, cols, wCell, hCell) {\r

      \  let offX = wCell / 2, offY = hCell / 2;\r

      \  let centers = [];\r

      \  let x = 0; y = 0;\r

      \  for (let i = 0; i < rows; i++) {\r

      \    for (let j = 0; j < cols; j++) {\r

      \      let center = { x: x + offX, y: y + offY };\r

      \      centers.push(center);\r

      \      x += wCell;\r

      \    }\r

      \    y += hCell; x = 0;\r

      \  }\r

      \  return [centers, wCell * cols, hCell * rows];\r

      }\r\n"
    sig: function quadCenters(rows, cols, wCell, hCell){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  circleCenters:
    name: circleCenters
    code: "function circleCenters(rows, cols, wCell, hCell) {\r

      \  let [w, h] = [cols * wCell, rows * hCell];\r

      \  let cx = w / 2;\r

      \  let cy = h / 2;\r

      \  let centers = [{ x: cx, y: cy }];\r

      \  let rx = cx + wCell / 2; let dradx = rx / wCell;\r

      \  let ry = cy + hCell / 2; let drady = ry / hCell;\r

      \  let nSchichten = Math.floor(Math.min(dradx, drady));\r

      \  for (let i = 1; i < nSchichten; i++) {\r

      \    let [newCenters, wsch, hsch] = oneCircleCenters(i * 2 + 1, i *
      2 + 1, wCell, hCell);\r

      \    for (const nc of newCenters) {\r

      \      centers.push({ x: nc.x + cx - wsch / 2, y: nc.y + cy - hsch /
      2 });\r

      \    }\r

      \  }\r

      \  return [centers, wCell * cols, hCell * rows];\r

      }\r\n"
    sig: function circleCenters(rows, cols, wCell, hCell){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  oneCircleCenters:
    name: oneCircleCenters
    code: "function oneCircleCenters(rows, cols, wCell, hCell) {\r

      \  let [w, h] = [cols * wCell, rows * hCell];\r

      \  let cx = w / 2;\r

      \  let cy = h / 2;\r

      \  let centers = [{ x: cx, y: cy }];\r

      \  let n = 8;\r

      \  let radx = cx - wCell / 2;\r

      \  let rady = cy - hCell / 2;\r

      \  let peri = Math.min(radx, rady) * 2 * Math.PI;\r

      \  n = Math.floor(peri / Math.min(wCell, hCell));\r

      \  while (n > 4 && n % 4 != 0 && n % 6 != 0) n -= 1;\r

      \  centers = getEllipsePoints(radx, rady, n)\r

      \  centers = centers.map(pt => ({ x: pt.X + cx, y: pt.Y + cy }));\r

      \  return [centers, wCell * cols, hCell * rows];\r

      }\r\n"
    sig: function oneCircleCenters(rows, cols, wCell, hCell){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hexCenters:
    name: hexCenters
    code: "function hexCenters(rows, cols, wCell = 100, hCell) {\r

      \  if (nundef(hCell)) hCell = (hCell / .866);\r

      \  let hline = hCell * .75;\r

      \  let offX = wCell / 2, offY = hCell / 2;\r

      \  let centers = [];\r

      \  let startSmaller = Math.floor(rows / 2) % 2 == 1;\r

      \  let x = 0; y = 0;\r

      \  for (let r = 0; r < rows; r++) {\r

      \    let isSmaller = startSmaller && r % 2 == 0 || !startSmaller &&
      r % 2 == 1;\r

      \    let curCols = isSmaller ? cols - 1 : cols;\r

      \    let dx = isSmaller ? wCell / 2 : 0;\r

      \    dx += offX;\r

      \    for (let c = 0; c < curCols; c++) {\r

      \      let center = { x: dx + c * wCell, y: offY + r * hline };\r

      \      centers.push(center);\r

      \    }\r

      \  }\r

      \  return [centers, wCell * cols, hCell / 4 + rows * hline];\r

      }\r\n"
    sig: function hexCenters(rows, cols, wCell = 100, hCell){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _calc_hex_col_array:
    name: _calc_hex_col_array
    code: "function _calc_hex_col_array(rows, cols) {\r

      \  let colarr = [];\r

      \  let even = rows % 2 == 0;\r

      \  for (let i = 0; i < rows; i++) {\r

      \    colarr[i] = cols;\r

      \    if (even && i < (rows / 2) - 1) cols += 1;\r

      \    else if (even && i > rows / 2) cols -= 1;\r

      \    else if (!even && i < (rows - 1) / 2) cols += 1;\r

      \    else if (!even || i >= (rows - 1) / 2) cols -= 1;\r

      \  }\r

      \  return colarr;\r

      }\r\n"
    sig: function _calc_hex_col_array(rows, cols){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hex1Centers:
    name: hex1Centers
    code: "function hex1Centers(rows, cols, wCell = 100, hCell = null) {\r

      \  let colarr = _calc_hex_col_array(rows, cols);\r

      \  let maxcols = arrMax(colarr);\r

      \  if (nundef(hCell)) hCell = (hCell / .866);\r

      \  let hline = hCell * .75;\r

      \  let offX = wCell / 2, offY = hCell / 2;\r

      \  let centers = [];\r

      \  let x = 0; y = 0;\r

      \  for (let r = 0; r < colarr.length; r++) {\r

      \    let n = colarr[r];\r

      \    for (let c = 0; c < n; c++) {\r

      \      let dx = (maxcols - n) * wCell / 2;\r

      \      let dy = r * hline;\r

      \      let center = { x: dx + c * wCell + offX, y: dy + offY };\r

      \      centers.push(center);\r

      \    }\r

      \  }\r

      \  return [centers, wCell * maxcols, hCell / 4 + rows * hline];\r

      }\r\n"
    sig: function hex1Centers(rows, cols, wCell = 100, hCell = null){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  i52:
    name: i52
    code: "function i52(i) { return isList(i) ? i.map(x => Card52.getItem(x)) :
      Card52.getItem(i); }\r\n"
    sig: function i52(i){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iFaceUp:
    name: iFaceUp
    code: "function iFaceUp(item) { Card52.turnFaceUp(item); }\r\n"
    sig: function iFaceUp(item){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iFaceDown:
    name: iFaceDown
    code: "function iFaceDown(item) { Card52.turnFaceDown(item); }\r\n"
    sig: function iFaceDown(item){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iFace:
    name: iFace
    code: "function iFace(item, faceUp) { if (isdef(faceUp)) faceUp ? iFaceUp(item)
      : iFaceDown(item); }\r\n"
    sig: function iFace(item, faceUp){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iResize52:
    name: iResize52
    code: "function iResize52(i, h) { let w = h * .7; return iResize(i, w, h); }\r\n"
    sig: function iResize52(i, h){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iTableBounds:
    name: iTableBounds
    code: "function iTableBounds(i) { return iBounds(i, dTable); }\r\n"
    sig: function iTableBounds(i){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iAppend52:
    name: iAppend52
    code: "function iAppend52(i, dParent, faceUp) {\r

      \  let item = i52(i);\r

      \  iFace(item, faceUp);\r

      \  mAppend(dParent, item.div);\r

      \  return item;\r

      }\r\n"
    sig: function iAppend52(i, dParent, faceUp){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iHand52:
    name: iHand52
    code: "function iHand52(i) {\r

      \  let hand = iSplay(i, dTable);\r

      }\r\n"
    sig: function iHand52(i){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iSplay52:
    name: iSplay52
    code: "function iSplay52(i, iContainer, splay = 'right', ov = 20, ovUnit = '%',
      createiHand = true, rememberFunc = true) {\r

      \  let ilist = !isList(i) ? i : [i];\r

      \  let items = isNumber(i[0]) ? i52(ilist) : ilist;\r

      \  let res = iSplay(items, iContainer, null, 'right', 20, '%',
      true);\r

      \  return res;\r

      }\r\n"
    sig: function iSplay52(i, iContainer, splay = 'right', ov = 20, ovUnit = '%',
      createiHand = true, rememberFunc = true){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  netHandSize:
    name: netHandSize
    code: "function netHandSize(nmax, hCard, wCard, ovPercent = 20, splay = 'right')
      {\r

      \  let isHorizontal = splay == 'right' || splay == 'left';\r

      \  if (nundef(hCard)) hCard = 110;\r

      \  if (nundef(wCard)) wCard = Math.round(hCard * .7);\r

      \  return isHorizontal ? { w: wCard + (nmax - 1) * wCard * ovPercent
      / 100, h: hCard } : { w: wCard, h: hCard + (nmax - 1) * hCard * ovPercent
      / 100 };\r

      }\r\n"
    sig: function netHandSize(nmax, hCard, wCard, ovPercent = 20, splay = 'right'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iHandZone:
    name: iHandZone
    code: "function iHandZone(dParent, styles, nmax) {\r

      \  if (nundef(styles)) styles = { bg: 'random', rounding: 10 };\r

      \  if (isdef(nmax)) {\r

      \    console.log('nmax', nmax)\r

      \    let sz = netHandSize(nmax);\r

      \    styles.w = sz.w;\r

      \    styles.h = sz.h;\r

      \  }\r

      \  return mZone(dParent, styles);\r

      }\r\n"
    sig: function iHandZone(dParent, styles, nmax){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iSortHand:
    name: iSortHand
    code: "function iSortHand(dParent, h) {\r

      \  let d = h.deck;\r

      \  d.sort();\r

      \  iPresentHand(dParent, h);\r

      }\r\n"
    sig: function iSortHand(dParent, h){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iPresentHand:
    name: iPresentHand
    code: "function iPresentHand(h, dParent, styles, redo = true) {\r

      \  if (nundef(h.zone)) h.zone = iHandZone(dParent, styles); else
      clearElement(h.zone);\r

      \  if (nundef(h.iHand)) {\r

      \    let items = i52(h.deck.cards());\r

      \    h.iHand = iSplay(items, h.zone);\r

      \  } else if (redo) {\r

      \    clearElement(h.zone);\r

      \    let items = i52(h.deck.cards());\r

      \    h.iHand = iSplay(items, h.zone);\r

      \  }\r

      \  return h;\r

      }\r\n"
    sig: function iPresentHand(h, dParent, styles, redo = true){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iMakeHand:
    name: iMakeHand
    code: "function iMakeHand(iarr, dParent, styles, id) {\r

      \  let data = DA[id] = {};\r

      \  let h = data.deck = new Deck();\r

      \  h.init(iarr);\r

      \  iPresentHand(data, dParent, styles);\r

      \  return data;\r

      }\r\n"
    sig: function iMakeHand(iarr, dParent, styles, id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iRemakeHand:
    name: iRemakeHand
    code: "function iRemakeHand(data) {\r

      \  let zone = data.zone;\r

      \  let deck = data.deck;\r

      \  let items = i52(deck.cards());\r

      \  clearElement(zone);\r

      \  data.iHand = iSplay(items, zone);\r

      \  return data;\r

      }\r\n"
    sig: function iRemakeHand(data){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iH00_dep:
    name: iH00_dep
    code: "function iH00_dep(iarr, dParent, styles, id) {\r

      \  function iH00Zone(dTable, nmax = 3, padding = 10) {\r

      \    let sz = netHandSize(nmax);\r

      \    return mZone(dTable, { wmin: sz.w, h: sz.h, padding: padding,
      rounding: 10 });\r

      \  }\r

      \  let data = DA[id] = {};\r

      \  let h = data.deck = new Deck();\r

      \  h.init(iarr);\r

      \  h = data;\r

      \  if (nundef(h.zone)) h.zone = iH00Zone(dParent); else
      clearElement(h.zone);\r

      \  if (nundef(h.iHand)) {\r

      \    let items = i52(h.deck.cards());\r

      \    h.iHand = iSplay(items, h.zone);\r

      \  } else if (redo) {\r

      \    clearElement(h.zone);\r

      \    let items = i52(h.deck.cards());\r

      \    h.iHand = iSplay(items, h.zone);\r

      \  }\r

      \  return h;\r

      }\r\n"
    sig: function iH00_dep(iarr, dParent, styles, id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iH01:
    name: iH01
    code: "function iH01(iarr, dParent, styles, id, overlap) {\r

      \  function iH01Zone(dTable, nmax = 3, padding = 10) {\r

      \    let sz = netHandSize(nmax);\r

      \    return mZone(dTable, { wmin: sz.w, h: sz.h, padding: padding
      }); \r

      \  }\r

      \  let h = isdef(Items[id]) ? Items[id] : { arr: iarr, styles:
      styles, id: id };\r

      \  if (nundef(h.zone)) h.zone = iH01Zone(dParent); else
      clearElement(h.zone);\r

      \  let items = i52(iarr);\r

      \  h.iHand = iSplay(items, h.zone, {}, 'right', overlap);\r

      \  return h;\r

      }\r\n"
    sig: function iH01(iarr, dParent, styles, id, overlap){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iH00:
    name: iH00
    code: "function iH00(iarr, dParent, styles, id) {\r

      \  function iH00Zone(dTable, nmax = 7, padding = 10) {\r

      \    let sz = netHandSize(nmax);\r

      \    return mZone(dTable, { wmin: sz.w, h: sz.h, padding: padding
      }); \r

      \  }\r

      \  let h = isdef(Items[id]) ? Items[id] : { arr: iarr, styles:
      styles, id: id };\r

      \  if (nundef(h.zone)) h.zone = iH00Zone(dParent); else
      clearElement(h.zone);\r

      \  let items = i52(iarr);\r

      \  h.iHand = iSplay(items, h.zone);\r

      \  return h;\r

      }\r\n"
    sig: function iH00(iarr, dParent, styles, id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iHandZone_test:
    name: iHandZone_test
    code: "function iHandZone_test(dTable, nmax = 10, padding = 10) {\r

      \  let sz = netHandSize(nmax);\r

      \  return mZone(dTable, { wmin: sz.w, h: sz.h, bg: 'random',
      padding: padding, rounding: 10 });\r

      }\r\n"
    sig: function iHandZone_test(dTable, nmax = 10, padding = 10){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iSortHand_test:
    name: iSortHand_test
    code: "function iSortHand_test(dParent, h) {\r

      \  let d = h.deck;\r

      \  d.sort();\r

      \  iPresentHand_test(dParent, h);\r

      }\r\n"
    sig: function iSortHand_test(dParent, h){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iPresentHand_test:
    name: iPresentHand_test
    code: "function iPresentHand_test(dParent, h, redo = true) {\r

      \  if (nundef(h.zone)) h.zone = iHandZone_test(dParent); else
      clearElement(h.zone);\r

      \  if (nundef(h.iHand)) {\r

      \    let items = i52(h.deck.cards());\r

      \    h.iHand = iSplay(items, h.zone);\r

      \  } else if (redo) {\r

      \    clearElement(h.zone);\r

      \    let items = i52(h.deck.cards());\r

      \    h.iHand = iSplay(items, h.zone);\r

      \  }\r

      \  return h;\r

      }\r\n"
    sig: function iPresentHand_test(dParent, h, redo = true){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  iMakeHand_test:
    name: iMakeHand_test
    code: "function iMakeHand_test(dParent, iarr, id) {\r

      \  let data = DA[id] = {};\r

      \  let h = data.deck = new Deck();\r

      \  h.init(iarr);\r

      \  iPresentHand_test(dParent, data);\r

      \  return data;\r

      }\r\n"
    sig: function iMakeHand_test(dParent, iarr, id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  anim1:
    name: anim1
    code: "function anim1(elem, prop, from, to, ms) {\r

      \  if (prop == 'left') elem.style.position = 'absolute';\r

      \  if (isNumber(from)) from = '' + from + 'px';\r

      \  if (isNumber(to)) to = '' + to + 'px';\r

      }\r\n"
    sig: function anim1(elem, prop, from, to, ms){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  splayout:
    name: splayout
    code: "function splayout(elems, dParent, w, h, x, y, overlap = 20, splay =
      'right') {\r

      \  function splayRight(elems, d, x, y, overlap) {\r

      \    for (const c of elems) {\r

      \      mAppend(d, c);\r

      \      mStyle(c, { position: 'absolute', left: x, top: y });\r

      \      x += overlap;\r

      \    }\r

      \    return [x, y];\r

      \  }\r

      \  function splayLeft(elems, d, x, y, overlap) {\r

      \    x += (elems.length - 2) * overlap;\r

      \    let xLast = x;\r

      \    for (const c of elems) {\r

      \      mAppend(d, c);\r

      \      mStyle(c, { position: 'absolute', left: x, top: y });\r

      \      x -= overlap;\r

      \    }\r

      \    return [xLast, y];\r

      \  }\r

      \  function splayDown(elems, d, x, y, overlap) {\r

      \    for (const c of elems) {\r

      \      mAppend(d, c);\r

      \      mStyle(c, { position: 'absolute', left: x, top: y });\r

      \      y += overlap;\r

      \    }\r

      \    return [x, y];\r

      \  }\r

      \  function splayUp(elems, d, x, y, overlap) {\r

      \    y += (elems.length - 1) * overlap;\r

      \    let yLast = y;\r

      \    for (const c of elems) {\r

      \      mAppend(d, c);\r

      \      mStyle(c, { position: 'absolute', left: x, top: y });\r

      \      y -= overlap;\r

      \    }\r

      \    return [x, yLast];\r

      \  }\r

      \  if (isEmpty(elems)) return { w: 0, h: 0 };\r

      \  mStyle(dParent, { display: 'block', position: 'relative' });\r

      \  [x, y] = (eval('splay' + capitalize(splay)))(elems, dParent, x,
      y, overlap);\r

      \  let isHorizontal = splay == 'right' || splay == 'left';\r

      \  let sz = { w: (isHorizontal ? (x - overlap + w) : w), h:
      (isHorizontal ? h : (y - overlap + h)) };\r

      \  return sz;\r

      }\r\n"
    sig: function splayout(elems, dParent, w, h, x, y, overlap = 20, splay =
      'right'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mHex05:
    name: mHex05
    code: "function mHex05(dParent, w, bg) { \r

      \  let gap = 4;\r

      \  let whex = w - gap;\r

      \  let wcont = w;\r

      \  let hbrut = w / .866;\r

      \  let hhex = hbrut - gap;\r

      \  let hcont = hbrut * .75;\r

      \  let d = mDiv(dParent, { w: wcont, h: hcont, display:
      'inline-block'}); \r

      \  let d1=mDiv100(d,{position:'absolute',top:-15,'z-index':-1});\r

      \  let g = asvg(d1);\r

      \  let hex1 = agShape(g, 'hex', whex, hhex, bg);\r

      \  let dField = mDiv100(d,{padding:'0%','z-index':100});\r

      \  let dInnerField =
      mDiv(dField,{w:'99%',h:'113%',bg:'blue',rounding:'50%'});\r

      \  return d;\r

      \  function asvg(dParent, sz, originInCenter = true) {\r

      \    if (!dParent.style.position) dParent.style.position =
      'relative';\r

      \    let svg1 = gSvg();\r

      \    svg1.setAttribute('width', '100%');\r

      \    svg1.setAttribute('height', '150%');\r

      \    let style =
      'margin:0;padding:0;position:absolute;top:0px;left:0px;background:transpa\
      rent';\r

      \    svg1.setAttribute('style', style);\r

      \    dParent.appendChild(svg1);\r

      \    let g1 = document.createElementNS('http://www.w3.org/2000/svg',
      'g');\r

      \    svg1.appendChild(g1);\r

      \    if (originInCenter) { g1.style.transform = \"translate(50%,
      50%)\"; } \r

      \    return g1;\r

      \  }\r

      }\r\n"
    sig: function mHex05(dParent, w, bg){}
    region: funcs (shapes.js)
    filename: shapes.js
    type: func
    fname: shapes.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\shapes.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 5502
  mHex04:
    name: mHex04
    code: "function mHex04(dParent, w, bg) { \r

      \  let gap = 4;\r

      \  let whex = w - gap;\r

      \  let wcont = w;\r

      \  let hbrut = w / .866;\r

      \  let hhex = hbrut - gap;\r

      \  let hcont = hbrut * .75;\r

      \  let d = mDiv(dParent, { w: wcont, h: hcont, display:
      'inline-block' });\r

      \  let g = asvg(d);\r

      \  let hex1 = agShape(g, 'hex', whex, hhex, bg);\r

      \  return d;\r

      \  function asvg(dParent, sz, originInCenter = true) {\r

      \    if (!dParent.style.position) dParent.style.position =
      'relative';\r

      \    let svg1 = gSvg();\r

      \    svg1.setAttribute('width', '100%');\r

      \    svg1.setAttribute('height', '150%');\r

      \    let style =
      'margin:0;padding:0;position:absolute;top:0px;left:0px;background:transpa\
      rent';\r

      \    svg1.setAttribute('style', style);\r

      \    dParent.appendChild(svg1);\r

      \    let g1 = document.createElementNS('http://www.w3.org/2000/svg',
      'g');\r

      \    svg1.appendChild(g1);\r

      \    if (originInCenter) { g1.style.transform = \"translate(50%,
      50%)\"; } \r

      \    return g1;\r

      \  }\r

      }\r\n"
    sig: function mHex04(dParent, w, bg){}
    region: funcs (shapes.js)
    filename: shapes.js
    type: func
    fname: shapes.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\shapes.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 5502
  mHex03:
    name: mHex03
    code: "function mHex03(dParent, w, bg) {\r

      \  let gap = 4;\r

      \  let whex = w - gap;\r

      \  let wcont = w;\r

      \  let hbrut = w / .866;\r

      \  let hhex = hbrut - gap;\r

      \  let hcont = hbrut * .75;\r

      \  let d = mDiv(dParent, { w: wcont, h: hcont, display:
      'inline-block' });\r

      \  let g = asvg(d);\r

      \  let hex1 = agShape(g, 'hex', whex, hhex, bg);\r

      \  return d;\r

      \  function asvg(dParent, sz, originInCenter = true) {\r

      \    if (!dParent.style.position) dParent.style.position =
      'relative';\r

      \    let svg1 = gSvg();\r

      \    svg1.setAttribute('width', '100%');\r

      \    svg1.setAttribute('height', '150%');\r

      \    let style =
      'margin:0;padding:0;position:absolute;top:0px;left:0px;background:transpa\
      rent';\r

      \    svg1.setAttribute('style', style);\r

      \    dParent.appendChild(svg1);\r

      \    let g1 = document.createElementNS('http://www.w3.org/2000/svg',
      'g');\r

      \    svg1.appendChild(g1);\r

      \    if (originInCenter) { g1.style.transform = \"translate(50%,
      50%)\"; } \r

      \    return g1;\r

      \  }\r

      }\r\n"
    sig: function mHex03(dParent, w, bg){}
    region: funcs (shapes.js)
    filename: shapes.js
    type: func
    fname: shapes.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\shapes.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 5502
  mHex02:
    name: mHex02
    code: "function mHex02(dParent, w) {\r

      \  let gap = 4;\r

      \  let whex = w - gap;\r

      \  let wcont = w;\r

      \  let hbrut = w / .866;\r

      \  let hhex = hbrut - gap;\r

      \  let hcont = hbrut * .75;\r

      \  let d = mDiv(dParent, { w: wcont, h: hcont, display:
      'inline-block' });\r

      \  let g = asvg(d);\r

      \  let hex1 = agShape(g, 'hex', whex, hhex, randomColor());\r

      \  return d;\r

      \  function asvg(dParent, sz, originInCenter = true) {\r

      \    if (!dParent.style.position) dParent.style.position =
      'relative';\r

      \    let svg1 = gSvg();\r

      \    svg1.setAttribute('width', '100%');\r

      \    svg1.setAttribute('height', '150%');\r

      \    let style =
      'margin:0;padding:0;position:absolute;top:0px;left:0px;background:transpa\
      rent';\r

      \    svg1.setAttribute('style', style);\r

      \    dParent.appendChild(svg1);\r

      \    let g1 = document.createElementNS('http://www.w3.org/2000/svg',
      'g');\r

      \    svg1.appendChild(g1);\r

      \    if (originInCenter) { g1.style.transform = \"translate(50%,
      50%)\"; } \r

      \    return g1;\r

      \  }\r

      }\r\n"
    sig: function mHex02(dParent, w){}
    region: funcs (shapes.js)
    filename: shapes.js
    type: func
    fname: shapes.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\shapes.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 5502
  mHexWeissNicht:
    name: mHexWeissNicht
    code: "function mHexWeissNicht(dParent, styles = {}, sz = 100) {\r

      \  let szNet = (isdef(styles.padding)) ? sz - 2 * styles.padding :
      sz;\r

      \  let h = sz; w = h * 0.866;\r

      \  let d = mDiv(dParent, { w: 2 * w, h: h * 1.5 });\r

      \  let g = asvg(d);\r

      \  let hh = szNet + sz; wh = hh * 0.866;\r

      \  let colors = ['yellow', 'orange', 'red', 'green', 'violet']\r

      \  let hex1 = agShape(g, 'hex', wh, hh, chooseRandom(colors));\r

      \  if (isdef(styles)) mStyle(d, styles)\r

      \  return d;\r

      }\r\n"
    sig: function mHexWeissNicht(dParent, styles = {}, sz = 100){}
    region: funcs (shapes.js)
    filename: shapes.js
    type: func
    fname: shapes.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\shapes.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 5502
  mHex01:
    name: mHex01
    code: "function mHex01(dParent, styles = {}, sz = 100) {\r

      \  let szNet = (isdef(styles.padding)) ? sz - 2 * styles.padding :
      sz;\r

      \  let h = sz; w = h * 0.866;\r

      \  let d = mDiv(dParent, { w: w, h: h });\r

      \  let g = asvg(d);\r

      \  let hh = szNet + sz; wh = hh * 0.866;\r

      \  let colors = ['yellow', 'orange', 'red', 'green', 'violet']\r

      \  let hex1 = agShape(g, 'hex', wh, hh, chooseRandom(colors));\r

      \  if (isdef(styles)) mStyle(d, styles)\r

      \  return d;\r

      }\r\n"
    sig: function mHex01(dParent, styles = {}, sz = 100){}
    region: funcs (shapes.js)
    filename: shapes.js
    type: func
    fname: shapes.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\shapes.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 5502
  mHex00:
    name: mHex00
    code: "function mHex00(dParent, styles, id) {\r

      \  let ui = gShape('hex', 100, 100, 'blue', 4);\r

      \  let gParent = findAncestorElemWithParentOfType(dParent, 'svg');
      \r

      \  gParent.appendChild(ui);\r

      \  return ui;\r

      }\r\n"
    sig: function mHex00(dParent, styles, id){}
    region: funcs (shapes.js)
    filename: shapes.js
    type: func
    fname: shapes.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\shapes.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 5502
  makeUserAvatar:
    name: makeUserAvatar
    code: "function makeUserAvatar(username) {\r

      \  let a = { username: username };\r

      \  let d = mDiv(document.body, { rounding: '50%', align: 'center',
      position: 'fixed', w: 30, h: 30, fz: 25, bg: 'random', fg: 'contrast' },
      'd' + username);\r

      \  d.innerHTML = username[0];\r

      \  d.style.zIndex = 20;\r

      \  Avatars[username] = d;\r

      \  return d;\r

      }\r\n"
    sig: function makeUserAvatar(username){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  getAvatar:
    name: getAvatar
    code: "function getAvatar(username) { let d = Avatars[username]; if (nundef(d))
      d = makeUserAvatar(username); return d; }\r\n"
    sig: function getAvatar(username){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  moveAvatar:
    name: moveAvatar
    code: "function moveAvatar(username, x, y) { mStyle(getAvatar(username), { left:
      x, top: y }); }\r\n"
    sig: function moveAvatar(username, x, y){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  showMouseAvatar:
    name: showMouseAvatar
    code: "function showMouseAvatar(username) { show(getAvatar(username)); }\r\n"
    sig: function showMouseAvatar(username){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  hideMouseAvatar:
    name: hideMouseAvatar
    code: "function hideMouseAvatar(username) { hide(getAvatar(username)); }\r\n"
    sig: function hideMouseAvatar(username){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  handleMouse:
    name: handleMouse
    code: "function handleMouse(data) {\r

      \  let [x, y] = [data.x, data.y];\r

      \  x += $('#dFieldArea').offset().left-$(window).scrollLeft();\r

      \  y += $('#dFieldArea').offset().top- $(window).scrollTop();\r

      \  moveAvatar(data.username, x,y);\r

      }\r\n"
    sig: function handleMouse(data){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  handleShow:
    name: handleShow
    code: "function handleShow(data) { showMouseAvatar(data.username); }\r\n"
    sig: function handleShow(data){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  handleHide:
    name: handleHide
    code: "function handleHide(data) { hideMouseAvatar(data.username); }\r\n"
    sig: function handleHide(data){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  sendMousePosition:
    name: sendMousePosition
    code: "function sendMousePosition(ev) {\r

      \  if (nundef(Socket)) return;\r

      \  if (!ev.altKey || ev.ctrlKey) return;\r

      \  let [x, y] = [ev.pageX, ev.pageY];\r

      \  x = (ev.pageX - $('#dFieldArea').offset().left);\r

      \  y = (ev.pageY - $('#dFieldArea').offset().top);\r

      \  if (Math.abs(x - LastPositionX) > MOUSED || Math.abs(y -
      LastPositionY) > MOUSED) {\r

      \    LastPositionX = x; LastPositionY = y;\r

      \    MouseMoveCounter = 0;\r

      \    Socket.emit('mouse', { username: Username, x: x, y: y });\r

      \  } else MouseMoveCounter += 1;\r

      }\r\n"
    sig: function sendMousePosition(ev){}
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: func
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  makeCanvas:
    name: makeCanvas
    code: "function makeCanvas(d){\r

      \  let canvas = mCreate('canvas');\r

      \  mAppend(d,canvas);\r

      \  canvas.id='sheet';\r

      \  return canvas;\r

      }\r\n"
    sig: function makeCanvas(d){}
    region: var (canvas.js)
    filename: canvas.js
    type: func
    fname: canvas.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\canvas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3266
  onClickPaletteButton:
    name: onClickPaletteButton
    code: "function onClickPaletteButton() {\r

      \  alert('FUNCTION DISABLED!')\r

      \  return;\r

      \  IsCanvasActive = !IsCanvasActive;\r

      \  let canvas = mBy('sheet')\r

      \  if (IsCanvasActive) {\r

      \    canvas.style.userSelect = 'auto';\r

      \    console.log(G.clientBoard)\r

      \    let r = getRect(G.clientBoard.dOuter); r.left = r.x; r.top =
      r.y;\r

      \    console.log('rectBoard', r);\r

      \    mStyle(canvas,r);\r

      \    halloIchZeichneJetzt();\r

      \  } else {\r

      \    canvas.style.userSelect = 'none';\r

      \    canvas.onmousedown = null;\r

      \    canvas.onmousemove = null;\r

      \    canvas.onmouseup = null;\r

      \  }\r

      }\r\n"
    sig: function onClickPaletteButton(){}
    region: var (canvas.js)
    filename: canvas.js
    type: func
    fname: canvas.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\canvas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3266
  halloIchZeichneJetzt:
    name: halloIchZeichneJetzt
    code: "function halloIchZeichneJetzt() {\r

      \  /* Initialise variables */\r

      \  let isDrawing = false;\r

      \  let x = 0;\r

      \  let y = 0;\r

      \  /* Get canvas and context */\r

      \  const canvas = document.getElementById('sheet');\r

      \  let r = getRect(G.clientBoard.dOuter); r.left = r.x; r.top =
      r.y;\r

      \  console.log('rectBoard', r);\r

      \  canvas.width=r.w;\r

      \  canvas.height=r.h;\r

      \  var context = canvas.getContext('2d');\r

      \  /* Add the event listeners for mousedown, mousemove, and mouseup
      */\r

      \  canvas.onmousedown = e => {\r

      \    /* Drawing begins */\r

      \    x = e.offsetX;\r

      \    y = e.offsetY;\r

      \    isDrawing = true;\r

      \  };\r

      \  canvas.onmousemove = e => {\r

      \    /* Drawing continues */\r

      \    if (isDrawing === true) {\r

      \      drawLine(context, x, y, e.offsetX, e.offsetY);\r

      \      x = e.offsetX;\r

      \      y = e.offsetY;\r

      \    }\r

      \  };\r

      \  canvas.onmouseup = e => {\r

      \    /* Drawing ends */\r

      \    if (isDrawing === true) {\r

      \      drawLine(context, x, y, e.offsetX, e.offsetY);\r

      \      x = 0;\r

      \      y = 0;\r

      \      isDrawing = false;\r

      \    }\r

      \  };\r

      \  /* Initialise socket */\r

      \  var socket = io();\r

      \  /* Receiving Updates from server */\r

      \  socket.on('update_canvas', function (data) {\r

      \    let { x1, y1, x2, y2, color } = JSON.parse(data);\r

      \    drawLine(context, x1, y1, x2, y2, color, true);\r

      \  });\r

      \  /* Function to Draw line from (x1,y1) to (x2,y2) */\r

      \  function drawLine(context, x1, y1, x2, y2, color =
      selected_color, from_server = false) {\r

      \    /* Send updates to server (not re-emiting those received from
      server) */\r

      \    if (!from_server)\r

      \      socket.emit('update_canvas', JSON.stringify({ x1, y1, x2, y2,
      color }));\r

      \    /* Draw line with color, stroke etc.. */\r

      \    context.beginPath();\r

      \    context.strokeStyle = color;\r

      \    context.lineWidth = 5;\r

      \    context.lineCap = 'round'\r

      \    context.moveTo(x1, y1);\r

      \    context.lineTo(x2, y2);\r

      \    context.stroke();\r

      \    context.closePath();\r

      \  }\r

      }\r\n"
    sig: function halloIchZeichneJetzt(){}
    region: var (canvas.js)
    filename: canvas.js
    type: func
    fname: canvas.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\canvas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3266
  selectColor:
    name: selectColor
    code: "function selectColor(color) {\r

      \ 
      document.getElementsByClassName(selected_color)[0].classList.remove('sele\
      cted');\r

      \ 
      document.getElementsByClassName(color)[0].classList.add('selected');\r

      \  selected_color = color;\r

      }\r\n"
    sig: function selectColor(color){}
    region: var (canvas.js)
    filename: canvas.js
    type: func
    fname: canvas.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\canvas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3266
  calcFieldGaps:
    name: calcFieldGaps
    code: "function calcFieldGaps(sz) {\r

      \  sz = Number(sz);\r

      \  let s = G.settings;\r

      \  s.wGap = s.dxCenter - sz;\r

      \  s.hGap = s.dyCenter - sz;\r

      \  G.clientBoard = applySettings(G.clientBoard, s);\r

      }\r\n"
    sig: function calcFieldGaps(sz){}
    region: funcs (fake.js)
    filename: fake.js
    type: func
    fname: fake.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\fake.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691779.8555
    size: 11024
  calcNFields:
    name: calcNFields
    code: "function calcNFields(s) {\r

      \  let [layout, wCell, hCell, rows, cols] = [s.boardLayout,
      s.dxCenter, s.dyCenter, s.rows, s.cols];\r

      \  let boardSize = { w: s.wFieldArea, h: s.hFieldArea };\r

      \  let [w,h]=[boardSize.w,boardSize.h];\r

      \  if (layout == 'circle'){\r

      \    let hline = layout == 'circle' ? hCell * 1.2 : layout == 'hex'
      ? hCell * .78 : hCell;\r

      \    rows = Math.floor(h / hline);\r

      \    cols = Math.floor(w / wCell);\r

      \  }\r

      \  let n;\r

      \  if (layout == 'hex1') {\r

      \    let colarr = _calc_hex_col_array(rows, cols);\r

      \    n = arrSum(colarr);\r

      \  } else if (layout == 'quad') {\r

      \    n= rows * cols;\r

      \  } else if (layout == 'hex') {\r

      \    console.log('rows',rows,'cols',cols)  \r

      \    let [cs,wn,hn] = hexCenters(rows, cols, wCell, hCell);\r

      \    n= cs.length;\r

      \  } else if (layout == 'circle') {\r

      \    let [cs,wn,hn] = circleCenters(rows, cols, wCell, hCell);\r

      \    n= cs.length;\r

      \  }\r

      \  return n;\r

      }\r\n"
    sig: function calcNFields(s){}
    region: funcs (fake.js)
    filename: fake.js
    type: func
    fname: fake.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\fake.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691779.8555
    size: 11024
  createClientBoardNew:
    name: createClientBoardNew
    code: "function createClientBoardNew(o, s) {\r

      \  let [layout, wCell, hCell, wGap, hGap] = [s.boardLayout,
      s.dxCenter, s.dyCenter, s.wGap, s.hGap];\r

      \  let dInner = o.dInner;\r

      \  mCenterCenterFlex(dInner);\r

      \  let [wArea, hArea] = [Math.min(o.wOuter, s.wFieldArea),
      Math.min(o.hOuter, s.hFieldArea)];\r

      \  let dArea = o.dArea = mDiv(dInner, { matop: s.boardMarginTop,
      maleft: s.boardMarginLeft, w: wArea, h: hArea }, 'dFieldArea'); \r

      \  mCenterCenterFlex(dArea);\r

      \  let [w, h] = [wArea, hArea];\r

      \  let isHexLayout = startsWith(layout, 'hex');\r

      \  let hline = isHexLayout ? hCell * .75 : hCell;\r

      \  let rows, cols;\r

      \  if (isdef(s.rows) && layout != 'circle') rows = s.rows; else rows
      = Math.floor(h / hline);\r

      \  if (isdef(s.cols) && layout != 'circle') cols = s.cols; else cols
      = Math.floor(w / wCell)\r

      \  let [centers, wTotal, hTotal] = getCentersFromRowsCols(layout,
      rows, cols, wCell, hCell);\r

      \  let dCells = mDiv(dArea, { w: wTotal, h: hTotal, position:
      'relative' }); \r

      \  mStyle(dArea, { w: Math.max(wArea, wTotal), h: Math.max(hArea,
      hTotal) });\r

      \  let fields;\r

      \  if (isdef(centers)) fields = createFieldsFromCenters(dCells, o,
      centers, wCell, hCell, wGap, hGap, wTotal, hTotal);\r

      \  let bg = valf(s.fieldColor, colorTrans('black', .3));\r

      \  fields.map(x => mStyle(iDiv(x), { bg: bg }));\r

      \  if (s.boardRotation != 0){\r

      \    dCells.style.transform = `rotate(${s.boardRotation}deg)`;\r

      \  }\r

      }\r\n"
    sig: function createClientBoardNew(o, s){}
    region: funcs (fake.js)
    filename: fake.js
    type: func
    fname: fake.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\fake.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691779.8555
    size: 11024
  createFakeState:
    name: createFakeState
    code: "function createFakeState() {\r

      \  let settings = DB.games.gPerlen2;\r

      \  let fakeServer = new FakeServerClass(Socket, PerlenDict,
      settings, null);\r

      \  let state = fakeServer.State;\r

      \  return { settings: settings, state: state, perlenDict: PerlenDict
      };\r

      }\r\n"
    sig: function createFakeState(){}
    region: funcs (fake.js)
    filename: fake.js
    type: func
    fname: fake.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\fake.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691779.8555
    size: 11024
  addLabels:
    name: addLabels
    code: "function addLabels(items, lang = 'E', luc = 'c') {\r

      \  for (const item of items) {\r

      \    let label = item.info[lang];\r

      \    item.label = luc == 'c' ? toNoun(label) : luc == 'l' ? label :
      label.toUpperCase();\r

      \  }\r

      }\r\n"
    sig: function addLabels(items, lang = 'E', luc = 'c'){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  addRepeatInfo:
    name: addRepeatInfo
    code: "function addRepeatInfo(dPic, iRepeat, wpic) {\r

      \  let szi = Math.max(Math.floor(wpic / 8), 8);\r

      \  dPic.style.position = 'relative';\r

      \  let d2 = mText('' + iRepeat, dPic, { fz: szi, weight: 'bold', fg:
      'contrast', position: 'absolute', left: szi / 2, top: szi / 2 - 2 });\r

      \  return d2;\r

      }\r\n"
    sig: function addRepeatInfo(dPic, iRepeat, wpic){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  applyColorkey:
    name: applyColorkey
    code: "function applyColorkey(item) {\r

      \  let l = item.live;\r

      \  let sShade = '0 0 0 ' + item.textShadowColor;\r

      \  item.shadeStyles = { 'text-shadow': sShade, fg:
      anyColorToStandardString('black', l.options.contrast) };\r

      \  let ui = l.options.showPic ? l.dPic : l.dLabel;\r

      \  mStyle(ui, item.shadeStyles);\r

      }\r\n"
    sig: function applyColorkey(item){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  _extendItemsAndOptions:
    name: _extendItemsAndOptions
    code: "function _extendItemsAndOptions(items, options) {\r

      \  options.longestLabel = findLongestWord(items.map(x =>
      x.label));\r

      \  options.wLongest = extendWidth(options.longestLabel);\r

      \  let ifs = options.ifs;\r

      \  for (let i = 0; i < items.length; i++) {\r

      \    let item = items[i];\r

      \    item.index = i;\r

      \    let val;\r

      \    for (const propName in ifs) {\r

      \      let prop = ifs[propName];\r

      \      if (isLiteral(prop)) val = prop;\r

      \      else if (isList(prop)) val = prop[i % prop.length];\r

      \      else if (typeof (prop) == 'function') val = prop(i, item,
      options, items);\r

      \      else val = null;\r

      \      if (isdef(val)) item[propName] = val;\r

      \    }\r

      \  }\r

      \  if (options.numRepeat > 1) { items = zRepeatEachItem(items,
      options.numRepeat, options.shufflePositions); }\r

      \  if (isdef(options.colorKeys)) items =
      zRepeatInColorEachItem(items, options.colorKeys);\r

      \  options.N = items.length;\r

      \  return items;\r

      }\r\n"
    sig: function _extendItemsAndOptions(items, options){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  evToItem:
    name: evToItem
    code: "function evToItem(ev) {\r

      \  let id = evToId(ev);\r

      \  let item = Items[id];\r

      \  return item;\r

      }\r\n"
    sig: function evToItem(ev){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  evToItemC:
    name: evToItemC
    code: "function evToItemC(ev) { ev.cancelBubble = true; return evToItem(ev);
      }\r\n"
    sig: function evToItemC(ev){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  findItemFromEvent:
    name: findItemFromEvent
    code: "function findItemFromEvent(items, ev) { return evToItemC(ev); }\r\n"
    sig: function findItemFromEvent(items, ev){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  findItemFromElem:
    name: findItemFromElem
    code: "function findItemFromElem(items, elem) { let item = firstCond(items, x =>
      iDiv(x) == elem); return item; }\r\n"
    sig: function findItemFromElem(items, elem){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  findItemFromKey:
    name: findItemFromKey
    code: "function findItemFromKey(items, key) { return firstCond(items, x => x.key
      == key); }\r\n"
    sig: function findItemFromKey(items, key){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  registeredItemCopy:
    name: registeredItemCopy
    code: "function registeredItemCopy(orig) { let item = jsCopy(orig); item.id =
      iRegister(item); return item; }\r\n"
    sig: function registeredItemCopy(orig){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  registerAsNewItem:
    name: registerAsNewItem
    code: "function registerAsNewItem(item) { item.id = iRegister(item); return
      item; }\r\n"
    sig: function registerAsNewItem(item){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  genItems:
    name: genItems
    code: "function genItems(n, options) { let keys = genKeys(n, options); let items
      = genItemsFromKeys(keys, options); return items; }\r\n"
    sig: function genItems(n, options){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  genItemsFromKeys:
    name: genItemsFromKeys
    code: "function genItemsFromKeys(keys, options = {}) {\r

      \  let items = [];\r

      \  for (const k of keys) {\r

      \    console.assert(isdef(Syms[k]), 'key not found: ' + k);\r

      \    let info = Syms[k];\r

      \    let item = infoToItem(info);\r

      \    items.push(item);\r

      \  }\r

      \  addLabels(items, options.language, options.luc);\r

      \  items = _extendItemsAndOptions(items, options);\r

      \  return items;\r

      }\r\n"
    sig: function genItemsFromKeys(keys, options = {}){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  genItemsFromObjects:
    name: genItemsFromObjects
    code: "function genItemsFromObjects(list, keyProp, labelProp, options) {\r

      \  let keys = [];\r

      \  for (const l of list) keys.push(l[keyProp]);\r

      \  let items = list.map(x => infoToItem(Syms[x[keyProp]]));\r

      \  let i = 0, luc = options.luc;\r

      \  for (const item of items) {\r

      \    let label = list[i][labelProp];\r

      \    item.o = list[i];\r

      \    item.label = luc == 'c' ? toNoun(label) : luc == 'l' ? label :
      label.toUpperCase();\r

      \    i += 1;\r

      \  }\r

      \  items = _extendItemsAndOptions(items, options);\r

      \  return items;\r

      }\r\n"
    sig: function genItemsFromObjects(list, keyProp, labelProp, options){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  genKeys:
    name: genKeys
    code: "function genKeys(n, options) {\r

      \  let [maxlen, lang, keySet] = [options.maxlen,
      valf(options.language, 'E'), valf(options.keySet, 'all')];\r

      \  let cond = isdef(maxlen) ? ((x) => x[lang].length <= maxlen) :
      null;\r

      \  let keys = _getKeysCond(n, cond, keySet);\r

      \  return keys;\r

      }\r\n"
    sig: function genKeys(n, options){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  _getKeysCond:
    name: _getKeysCond
    code: "function _getKeysCond(n, cond, keySet = 'all') {\r

      \  if (isString(keySet)) keySet = KeySets[keySet];\r

      \  let keys = isdef(cond) ? isString(cond) ?\r

      \    isdef(KeySets[cond]) ? KeySets[cond] : keySet.filter(x =>
      x.includes(cond))\r

      \    : keySet.filter(x => cond(Syms[x])) : keySet;\r

      \  keys = n >= keys.length ? keys : choose(keys, n);\r

      \  return keys;\r

      }\r\n"
    sig: function _getKeysCond(n, cond, keySet = 'all'){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  getItem:
    name: getItem
    code: "function getItem(k) { return infoToItem(Syms[k]); }\r\n"
    sig: function getItem(k){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  getAllItems:
    name: getAllItems
    code: "function getAllItems(cond, keySet = 'all') { return getItems(10000, cond,
      keySet); }\r\n"
    sig: function getAllItems(cond, keySet = 'all'){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  getItems:
    name: getItems
    code: "function getItems(n, cond, keySet = 'all') {\r

      \  if (isNumber(n)) { n = _getKeysCond(n, cond, keySet); }\r

      \  if (isString(n[0])) n = n.map(x => Syms[x]);\r

      \  if (nundef(n[0].info)) n = n.map(x => infoToItem(x));\r

      \  return n;\r

      }\r\n"
    sig: function getItems(n, cond, keySet = 'all'){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  getItemsMaxLen:
    name: getItemsMaxLen
    code: "function getItemsMaxLen(n, len, keySet = 'all', lang = 'E', luc = 'c') {
      return getItemsMaxWordLength(...arguments); }\r\n"
    sig: function getItemsMaxLen(n, len, keySet = 'all', lang = 'E', luc = 'c'){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  getItemsMaxWordLength:
    name: getItemsMaxWordLength
    code: "function getItemsMaxWordLength(n, len, keySet = 'all', lang = 'E', luc =
      'c') {\r

      \  let items = getItems(n, x => x[lang].length <= len, keySet); \r

      \  addLabels(items, lang, luc);\r

      \  return items;\r

      }\r\n"
    sig: function getItemsMaxWordLength(n, len, keySet = 'all', lang = 'E', luc =
      'c'){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  getNItemsPerKeylist:
    name: getNItemsPerKeylist
    code: "function getNItemsPerKeylist(n, keylists, options = {}) {\r

      \  let items = [];\r

      \  for (const list of keylists) {\r

      \    options.keySet = list.keys;\r

      \    let cat = list.cat;\r

      \    let newItems = genItems(n, options);\r

      \    newItems.map(x => { x.cat = cat; items.push(x) });\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function getNItemsPerKeylist(n, keylists, options = {}){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  modifyColorkey:
    name: modifyColorkey
    code: "function modifyColorkey(item) {\r

      \  let colorkey = chooseRandom(Object.keys(ColorDict));\r

      \  let textShadowColor = ColorDict[colorkey].c;\r

      \  item.textShadowColor = textShadowColor;\r

      \  item.color = ColorDict[colorkey];\r

      \  item.colorKey = colorkey;\r

      \  applyColorkey(item);\r

      }\r\n"
    sig: function modifyColorkey(item){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  makeItemDivs:
    name: makeItemDivs
    code: "function makeItemDivs(items, options) { for (let i = 0; i < items.length;
      i++) { makeItemDiv(items[i], options) } }\r\n"
    sig: function makeItemDivs(items, options){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  makeItemHintable:
    name: makeItemHintable
    code: "function makeItemHintable(item) {\r

      \  let d = iDiv(item);\r

      \  let dov = mDiv100(d);\r

      \  let rect = getRect(d);\r

      \  mStyle(dov, { position: 'absolute', w: rect.w, h: rect.h })\r

      \  iAdd(item, { overlay: dov });\r

      \  dov.style.userSelect = 'none';\r

      }\r\n"
    sig: function makeItemHintable(item){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  makePerleDiv:
    name: makePerleDiv
    code: "function makePerleDiv(item, outerStyles, imgStyles, labelStyles, labelPos
      = null, magnify = true, handler = null, useNewImage = false) {\r

      \  let defOuterStyles = {\r

      \    display: 'inline-flex', 'flex-direction': 'column',\r

      \    'justify-content': 'center', 'align-items': 'center',
      'vertical-align': 'top',\r

      \    padding: 0, box: true\r

      \  };\r

      \  addKeys(defOuterStyles, outerStyles);\r

      \  let dOuter = mCreate('div', outerStyles);\r

      \  if (labelPos && nundef(item.label)) { item.label =
      item.text.toLowerCase(); }\r

      \  let dLabel;\r

      \  let [w, h, fz] = [labelStyles.wmax, labelStyles.hmax,
      labelStyles.fz];\r

      \  let sz = simpleFit(item.label, w, h, fz);\r

      \  labelStyles = sz; \r

      \  dLabel = mTextFit(item.label, { wmax: w, hmax: h }, null,
      labelStyles);\r

      \  if (labelPos[0] == 't') dLabel = mText(item.label, dOuter,
      labelStyles);\r

      \  let x;\r

      \  imgStyles.rounding = '50%';\r

      \  if (useNewImage) {\r

      \    imgStyles.rounding = '50%';\r

      \    x = mAppend(dOuter, NEWLY_CREATED_IMAGE);\r

      \    mStyle(x, imgStyles);\r

      \  } else {\r

      \    x = mImg(item.path, dOuter, imgStyles);\r

      \  }\r

      \  if (magnify) {\r

      \    x.onmouseenter = ev =>  { if (ev.ctrlKey) mMagnify(x,item); }\r

      \    x.onmouseleave = ev => mCancelMagnify(x, item.path);\r

      \  }\r

      \  if (labelPos[0] == 'b') dLabel = mText(item.label, dOuter,
      labelStyles);\r

      \  if (isdef(handler)) dOuter.onclick = ev => handler(ev, item);\r

      \  item.type = 'perle'; dOuter.id = iRegister(item);\r

      \  iAdd(item, { div: dOuter, dLabel: dLabel, dImg: x });\r

      \  return dOuter;\r

      }\r\n"
    sig: function makePerleDiv(item, outerStyles, imgStyles, labelStyles, labelPos =
      null, magnify = true, handler = null, useNewImage = false){}
    region: syms (item.js)
    filename: item.js
    type: func
    fname: item.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\item.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691779.8555
    size: 15076
  makeItemDiv:
    name: makeItemDiv
    code: "function makeItemDiv(item, options) {\r

      \  if (isdef(options.outerStyles) && isdef(options.ifs))
      copyKeys(item, options.outerStyles, {}, Object.keys(options.ifs)); \r

      \  let dOuter = mCreate('div', options.outerStyles, item.id);\r

      \  if (isdef(item.textShadowColor)) {\r

      \    let sShade = '0 0 0 ' + item.textShadowColor;\r

      \    if (options.showPic) {\r

      \      options.picStyles['text-shadow'] = sShade;\r

      \      options.picStyles.fg = anyColorToStandardString('black',
      options.contrast); //'#00000080' '#00000030' \r

      \    } else {\r

      \      options.labelStyles['text-shadow'] = sShade;\r

      \      options.labelStyles.fg = anyColorToStandardString('black',
      options.contrast); //'#00000080' '#00000030' \r

      \    }\r

      \  }\r

      \  let dLabel;\r

      \  if (options.showLabels && options.labelTop == true) { dLabel =
      mText(item.label, dOuter, options.labelStyles); }\r

      \  let dPic;\r

      \  if (options.showPic) {\r

      \    dPic = mDiv(dOuter, { family: item.info.family });\r

      \    dPic.innerHTML = item.info.text;\r

      \    if (isdef(options.picStyles)) mStyle(dPic,
      options.picStyles);\r

      \  }\r

      \  if (options.showLabels && options.labelBottom == true) { dLabel =
      mText(item.label, dOuter, options.labelStyles); }\r

      \  if (isdef(options.handler)) dOuter.onclick = options.handler;\r

      \  iAdd(item, { options: options, div: dOuter, dLabel: dLabel, dPic:
      dPic });\r

      \  if (isdef(item.textShadowColor)) { applyColorkey(item, options);
      }\r

      \  return dOuter;\r

      }\r\n"
    sig: function makeItemDiv(item, options){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  newItemSelection:
    name: newItemSelection
    code: "function newItemSelection(item, items, onSelectSelected = null) {\r

      \  console.log('===>', item, items)\r

      \  let selectedItem = firstCond(items, x => x.isSelected);\r

      \  if (selectedItem && selectedItem != item)
      toggleItemSelection(selectedItem);\r

      \  else if (onSelectSelected && selectedItem) {
      onSelectSelected(item); }\r

      \  toggleItemSelection(item);\r

      }\r\n"
    sig: function newItemSelection(item, items, onSelectSelected = null){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  modLabel:
    name: modLabel
    code: "function modLabel(item, newLabel, styles) {\r

      \  let dLabel = iLabel(item);\r

      \  dLabel.innerHTML = newLabel;\r

      \  mStyle(dLabel, styles);\r

      \  item.label = newLabel;\r

      \  return dLabel;\r

      }\r\n"
    sig: function modLabel(item, newLabel, styles){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  addLabel:
    name: addLabel
    code: "function addLabel(item, label, styles) {\r

      \  item.label = label;\r

      \  let div = iDiv(item);\r

      \  if (isdef(item.live.dLabel)) mRemove(item.live.dLabel);\r

      \  let dLabel = item.live.dLabel = mDiv(div, styles, null, label);\r

      \  mCenterFlex(div, true, true);\r

      \  mStyle(div, { 'vertical-align': 'top' });\r

      \  return dLabel;\r

      }\r\n"
    sig: function addLabel(item, label, styles){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  addLabel1:
    name: addLabel1
    code: "function addLabel1(item, label, replaceOld = true) {\r

      \  let div = iDiv(item);\r

      \  mStyle(div, { 'vertical-align': 'top' });\r

      \  if (isdef(item.live.dLabel)) mRemove(item.live.dLabel);\r

      \  let dLabel = item.live.dLabel = mDiv(div, { fz: 20 }, null,
      label);\r

      \  return div;\r

      }\r\n"
    sig: function addLabel1(item, label, replaceOld = true){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  removeLabel:
    name: removeLabel
    code: "function removeLabel(item) {\r

      \  if (isdef(item.live.dLabel)) {\r

      \    item.live.dLabel.remove();\r

      \    delete item.live.dLabel;\r

      \  }\r

      \  return item;\r

      }\r\n"
    sig: function removeLabel(item){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  toggleItemSelection:
    name: toggleItemSelection
    code: "function toggleItemSelection(item, selectedItems) {\r

      \  let ui = iDiv(item);\r

      \  item.isSelected = nundef(item.isSelected) ? true :
      !item.isSelected;\r

      \  if (item.isSelected) mClass(ui, 'framedPicture'); else
      mRemoveClass(ui, 'framedPicture');\r

      \  if (isdef(selectedItems)) {\r

      \    if (item.isSelected) {\r

      \      console.assert(!selectedItems.includes(item), 'UNSELECTED PIC
      IN PICLIST!!!!!!!!!!!!')\r

      \      selectedItems.push(item);\r

      \    } else {\r

      \      console.assert(selectedItems.includes(item), 'PIC NOT IN
      PICLIST BUT HAS BEEN SELECTED!!!!!!!!!!!!')\r

      \      removeInPlace(selectedItems, item);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function toggleItemSelection(item, selectedItems){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  zRepeatEachItem:
    name: zRepeatEachItem
    code: "function zRepeatEachItem(items, repeat, shufflePositions = false) {\r

      \  let orig = items;\r

      \  let itRepeat = items;\r

      \  for (let i = 1; i < repeat; i++) { itRepeat =
      itRepeat.concat(orig.map(x => registeredItemCopy(x))); }\r

      \  if (shufflePositions) { shuffle(itRepeat); }\r

      \  let labelRepeat = {};\r

      \  let idx = 0;\r

      \  for (const item of itRepeat) {\r

      \    let iRepeat = labelRepeat[item.label];\r

      \    if (nundef(iRepeat)) iRepeat = 1; else iRepeat += 1;\r

      \    item.iRepeat = iRepeat;\r

      \    item.index = idx; idx += 1;\r

      \    labelRepeat[item.label] = iRepeat;\r

      \  }\r

      \  return itRepeat;\r

      }\r\n"
    sig: function zRepeatEachItem(items, repeat, shufflePositions = false){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  zRepeatInColorEachItem:
    name: zRepeatInColorEachItem
    code: "function zRepeatInColorEachItem(items, colorKeys) {\r

      \  let itColors = [];\r

      \  for (let i = 0; i < colorKeys.length; i++) {\r

      \    let newItems;\r

      \    if (i > 0) { newItems = jsCopy(items); newItems.map(x =>
      registerAsNewItem(x)); }\r

      \    else newItems = items;\r

      \    itColors = itColors.concat(newItems);\r

      \  }\r

      \  for (let i = 0; i < colorKeys.length; i++) {\r

      \    let colorKey = colorKeys[i];\r

      \    let textShadowColor = ColorDict[colorKey].c;\r

      \    for (let j = 0; j < items.length; j++) {\r

      \      let index = i * items.length + j;\r

      \      let x = itColors[index];\r

      \      x.index = index;\r

      \      x.textShadowColor = textShadowColor;\r

      \      x.color = ColorDict[colorKey];\r

      \      x.colorKey = colorKey;\r

      \    }\r

      \  }\r

      \  return itColors;\r

      }\r\n"
    sig: function zRepeatInColorEachItem(items, colorKeys){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  onClickToolbarButton:
    name: onClickToolbarButton
    code: "function onClickToolbarButton() {\r

      \  if (isVisible('sidebar')) {\r

      \    closeAux();\r

      \    hide('sidebar');\r

      \    mStyle(dTable, { w: 'calc( 100% - 120 )' });\r

      \  } else {\r

      \    show('sidebar');\r

      \    mStyle(dTable, { w: '100%' });\r

      \  }\r

      }\r\n"
    sig: function onClickToolbarButton(){}
    region: var (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickUploadBoard:
    name: onClickUploadBoard
    code: "function onClickUploadBoard(ev) {\r

      \  openAux('upload board image');\r

      \  let form1 = new FileUploadForm(dAuxContent, 'Upload Board Image',
      'bretter',\r

      \    filename => {\r

      \      if (!filename) console.log('cancel!');\r

      \      else console.log('file ' + filename + ' uploaded
      successfully!');\r

      \      closeAux();\r

      \    });\r

      }\r\n"
    sig: function onClickUploadBoard(ev){}
    region: upload (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickUploadPerlen:
    name: onClickUploadPerlen
    code: "function onClickUploadPerlen() {\r

      \  openAux('upload perlen images');\r

      \  let form1 = new FileUploadForm(dAuxContent, 'Upload Perlen
      Images', 'perlen',\r

      \    filename => {\r

      \      if (!filename) console.log('cancel!')\r

      \      else console.log('file ' + filename + ' uploaded
      successfully!');\r

      \      closeAux();\r

      \    });\r

      }\r\n"
    sig: function onClickUploadPerlen(){}
    region: upload (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickBoardInChooseBoard:
    name: onClickBoardInChooseBoard
    code: "function onClickBoardInChooseBoard(boardFilename) {\r

      \  if (boardFilename == G.settings.boardFilename) return;\r

      \  G.settings.boardFilename = boardFilename;\r

      \  Socket.emit('settings', { settings: G.settings });\r

      }\r\n"
    sig: function onClickBoardInChooseBoard(boardFilename){}
    region: board (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickChooseBoard:
    name: onClickChooseBoard
    code: "function onClickChooseBoard() {\r

      \  openAux('click board to select');\r

      \  let boards = G.boardFilenames;\r

      \  for (const b of boards) {\r

      \    let img = mImg(PERLENPATH_FRONT + 'bretter/' + b, dAuxContent,
      { cursor: 'pointer', h: 200, margin: 8, 'vertical-align': 'baseline' });\r

      \    img.onclick = () => { closeAux(); onClickBoardInChooseBoard(b);
      } \r

      \  }\r

      \  let img = mDiv(dAuxContent, { cursor: 'pointer', display:
      'inline-block', border: 'black', w: 300, h: 200, margin: 8, box: true
      });\r

      \  img.onclick = () => { closeAux();
      onClickBoardInChooseBoard('none'); } \r

      }\r\n"
    sig: function onClickChooseBoard(){}
    region: board (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickPrefabGallery:
    name: onClickPrefabGallery
    code: "function onClickPrefabGallery() {\r

      \  openAux('choose board + layout');\r

      \  let standards = DB.standardSettings;\r

      \  let boardExamples = {};\r

      \  for (const stdName in standards) {\r

      \    let std = standards[stdName];\r

      \    let d = mDiv(dAuxContent, { margin: 10, cursor: 'pointer' });\r

      \    addKeys(G.settings, std);\r

      \    let b = applyStandard(d, std, 200, 100);\r

      \    boardExamples[stdName] = {\r

      \      key: stdName,\r

      \      board: b,\r

      \      settings: std,\r

      \      dParent: d,\r

      \    }\r

      \    d.onclick = () => {\r

      \      DA.lastPrefabName = stdName;\r

      \      copyKeys(std, G.settings);\r

      \      Socket.emit('settings', { settings: G.settings });\r

      \      closeAux();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function onClickPrefabGallery(){}
    region: board (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickActivateLayout:
    name: onClickActivateLayout
    code: "function onClickActivateLayout() { closeAux(); Socket.emit('settings', {
      settings: G.settings }); }\r\n"
    sig: function onClickActivateLayout(){}
    region: board (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickModifyLayout:
    name: onClickModifyLayout
    code: "function onClickModifyLayout(ev) {\r

      \  let button = ev.target;\r

      \  if (ActiveButton == button) { onClickActivateLayout(); return;
      }\r

      \  openAux('board settings', button);\r

      \  let wWidget = 380;\r

      \  let [s, b] = [G.settings, G.clientBoard];\r

      \  let styles = { w: wWidget, align: 'center', margin: 6 };\r

      \  let inpRows = mEditRange('rows: ', s.rows, 1, 20, 1, dAuxContent,
      (a) => { setApply('rows', a) }, styles);\r

      \  let inpCols = mEditRange('cols: ', s.cols, 1, 20, 1, dAuxContent,
      (a) => { setApply('cols', a) }, styles);\r

      \  let inpXOffset = mEditRange('x-offset: ', s.boardMarginLeft,
      -100, 100, 1, dAuxContent, (a) => { setApply('boardMarginLeft', a) },
      styles);\r

      \  let inpYOffset = mEditRange('y-offset: ', s.boardMarginTop, -100,
      100, 1, dAuxContent, (a) => { setApply('boardMarginTop', a) }, styles);\r

      \  let inpRot = mEditRange('rotation: ', s.boardRotation, 0, 90, 1,
      dAuxContent, (a) => { setApply('boardRotation', a) }, styles);\r

      \  mLinebreak(dAuxContent);\r

      \  let inpWidth = mEditRange('center dx: ', s.dxCenter, 10, 200, 1,
      dAuxContent, (a) => { setApply('dxCenter', a) }, styles);\r

      \  let inpHeight = mEditRange('center dy: ', s.dyCenter, 10, 200, 1,
      dAuxContent, (a) => { setApply('dyCenter', a) }, styles);\r

      \  let inpFieldSize = mEditRange('field size: ', s.szField, 10, 200,
      1, dAuxContent, (a) => { setApply('szField', a) }, styles);\r

      \  mLinebreak(dAuxContent);\r

      \  let inpSzPerle = mEditRange('perle %: ', s.szPerle, 50, 125, 1,
      dAuxContent, (a) => { setApply('szPerle', a) }, styles);\r

      \  let inpszPoolPerle = mEditRange('pool perle: ', s.szPoolPerle,
      40, 140, 1, dAuxContent, (a) => { setApply('szPoolPerle', a) }, styles);\r

      \  let inpDimming = mEditRange('dimming %: ', s.dimming, 0, 100, 1,
      dAuxContent, (a) => { setApply('dimming', a) }, styles);\r

      \  mLinebreak(dAuxContent);\r

      \  let inpFieldColor = mColorPickerControl('field color: ',
      s.fieldColor, b.img, dAuxContent, (a) => { setApply('fieldColor', a) },
      styles);\r

      \  let inpBaseColor = mColorPickerControl('background: ',
      s.baseColor, b.img, dAuxContent, (a) => { setApply('baseColor', a) },
      styles);\r

      \  let inpFullCover = mCheckbox('complete rows: ', s.boardLayout ==
      'hex1' ? false : true, dAuxContent,\r

      \    (a) => {\r

      \      setApply('boardLayout', a ? 'hex' : 'hex1');\r

      \    }, styles);\r

      \  let inpfreeForm = mCheckbox('free drop: ', s.freeForm ? true :
      false, dAuxContent, (a) => { setApply('freeForm', a == 1 ? true : false)
      }, styles);\r

      }\r\n"
    sig: function onClickModifyLayout(ev){}
    region: board (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickSaveAsPrefab:
    name: onClickSaveAsPrefab
    code: "function onClickSaveAsPrefab() {\r

      \  let prefabName = prompt('enter name: ', DA.lastPrefabName);\r

      \  Socket.emit('prefab', { name: prefabName, settings: G.settings
      });\r

      \  closeAux();\r

      }\r\n"
    sig: function onClickSaveAsPrefab(){}
    region: board (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickChoosePerlen:
    name: onClickChoosePerlen
    code: "function onClickChoosePerlen(ev) {\r

      \  let button = ev.target;\r

      \  if (ActiveButton == button) { \r

      \    if (isdef(DA.selectedPerlen) && !isEmpty(DA.selectedPerlen))
      {\r

      \      let keys = DA.selectedPerlen.map(x => x.key);\r

      \      Socket.emit('poolChange', { keys: keys });\r

      \      delete DA.selectedPerlen;\r

      \    }\r

      \    closeAux();\r

      \    return;\r

      \  }\r

      \  openAux('pick perlen', button);\r

      \  let d = mDiv(dAuxContent);\r

      \  let items = [];\r

      \  for (const k in G.perlenDict) {\r

      \    let p = jsCopy(G.perlenDict[k]);\r

      \    p.path = mPath(p);\r

      \    console.log('path', p.path)\r

      \    let ui = createPerle(p, d, 64, 1.3, .4);\r

      \    mStyle(ui, { opacity: 1 });\r

      \    iAdd(p, { div: ui });\r

      \    items.push(p);\r

      \  }\r

      \  DA.selectedPerlen = [];\r

      \  items.map(x => iDiv(x).onclick = ev => { toggleItemSelection(x,
      DA.selectedPerlen) });\r

      }\r\n"
    sig: function onClickChoosePerlen(ev){}
    region: perlen (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickPerlenPool:
    name: onClickPerlenPool
    code: "function onClickPerlenPool(ev) {\r

      \  let button = ev.target;\r

      \  if (ActiveButton == button) { doPerlenPoolChanges(); return; }\r

      \  openAux('perlen pool', button);\r

      \  let wWidget = 380;\r

      \  let styles = { w: wWidget, align: 'center', margin: 6 };\r

      \  let defOptions = { nAdd: 5, nRemove: 5, clearBoard: false,
      justRandom: true };\r

      \  if (nundef(G.perlenOptions)) G.perlenOptions = {};\r

      \  let s = G.perlenOptions;\r

      \  addKeys(defOptions, s);\r

      \  let dp = mBy('dAuxContent');\r

      \  let inpAddRandom = mEditRange('add: ', s.nAdd, 0, 20, 1, dp, (a)
      => { s.nAdd = a; }, styles);\r

      \  let inpRemove = mEditRange('remove: ', s.nRemove, 0, 20, 1, dp,
      (a) => { s.nRemove = a; }, styles);\r

      \  let inpClearBoard = mCheckbox('clear board: ', s.clearBoard, dp,
      (a) => { s.clearBoard = a; }, styles);\r

      \  let inpClearPool = mCheckbox('clear pool: ', s.clearPool, dp, (a)
      => { s.clearPool = a; }, styles);\r

      \  let inpOnlyRandom = mCheckbox('just random: ', s.justRandom, dp,
      (a) => { s.justRandom = a; }, styles);\r

      }\r\n"
    sig: function onClickPerlenPool(ev){}
    region: perlen (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  doPerlenPoolChanges:
    name: doPerlenPoolChanges
    code: "function doPerlenPoolChanges() {\r

      \  let s = G.perlenOptions;\r

      \  Socket.emit('perlenOptions', s);\r

      }\r\n"
    sig: function doPerlenPoolChanges(){}
    region: perlen (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickClearPerlenpool:
    name: onClickClearPerlenpool
    code: "function onClickClearPerlenpool() {\r

      \  closeAux();\r

      \  G.clearPoolUI();\r

      \  Socket.emit('clearPoolarr');\r

      }\r\n"
    sig: function onClickClearPerlenpool(){}
    region: perlen (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  loadHistoryExp:
    name: loadHistoryExp
    code: "function loadHistoryExp() {\r

      \  let hist = localStorage.getItem('history');\r

      \  if (isdef(hist)) {\r

      \    HistoryOfStates = JSON.parse(hist);\r

      \    console.log('history loaded successfully...',
      HistoryOfStates);\r

      \  } else {\r

      \    console.log('no history found!!!');\r

      \  }\r

      }\r\n"
    sig: function loadHistoryExp(){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickSaveStateAndSettings:
    name: onClickSaveStateAndSettings
    code: "function onClickSaveStateAndSettings() {\r

      \  let prefix = prompt('enter name: ');\r

      \  addStateToHistory(prefix);\r

      }\r\n"
    sig: function onClickSaveStateAndSettings(){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickLoadStateAndSettings:
    name: onClickLoadStateAndSettings
    code: "function onClickLoadStateAndSettings() {\r

      \  let prefix = prompt('enter name: ');\r

      \  if (prefix in HistoryOfStates) {\r

      \    let pack = HistoryOfStates[prefix];\r

      \    console.log('loaded state', prefix, 'freeForm',
      pack.settings.freeForm, 'board', pack.settings.boardFilename)\r

      \    Socket.emit('state', pack);\r

      \  }\r

      }\r\n"
    sig: function onClickLoadStateAndSettings(){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickDownloadHistory:
    name: onClickDownloadHistory
    code: "function onClickDownloadHistory() {\r

      \  let keys = Object.keys(HistoryOfStates);\r

      \  console.log('history keys', keys);\r

      \  for (const k in HistoryOfStates) {\r

      \    let pack = HistoryOfStates[k];\r

      \    console.log('state', k, 'freeForm', pack.settings.freeForm,
      'board', pack.settings.boardFilename)\r

      \  }\r

      \  downloadAsYaml(HistoryOfStates, `history_` + Date.now());\r

      }\r\n"
    sig: function onClickDownloadHistory(){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  addStateToHistory:
    name: addStateToHistory
    code: "function addStateToHistory(prefix = 'auto') {\r

      \  if (!isEmpty(prefix)) {\r

      \    let pack = packageState();\r

      \    HistoryOfStates[prefix] = pack;\r

      \    localStorage.setItem('history',
      JSON.stringify(HistoryOfStates));\r

      \    console.log('saved state', prefix, 'freeForm',
      pack.settings.freeForm, 'board', pack.settings.boardFilename)\r

      \  }\r

      }\r\n"
    sig: function addStateToHistory(prefix = 'auto'){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  loadAutoState:
    name: loadAutoState
    code: "function loadAutoState() {\r

      \  if ('auto' in HistoryOfStates) Socket.emit('state',
      HistoryOfStates.auto);\r

      }\r\n"
    sig: function loadAutoState(){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  packageState:
    name: packageState
    code: "function packageState() {\r

      \  let st = G.state;\r

      \  let state = { boardArr: st.boardArr, poolArr: st.poolArr, pool:
      {} };\r

      \  for (const k in st.pool) {\r

      \    let oNew = state.pool[k] = {};\r

      \    copyKeys(st.pool[k], oNew, {}, ['index', 'key']);\r

      \  }\r

      \  let pack = { settings: jsCopy(G.settings), state: state,
      randomIndices: jsCopy(G.randomIndices) };\r

      \  return pack;\r

      }\r\n"
    sig: function packageState(){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  mAddBehavior:
    name: mAddBehavior
    code: "function mAddBehavior(ui, beh, params) {\r

      \  switch (beh) {\r

      \    case 'magnifyOnHover': addMagnifyOnHover(ui, ...params);
      break;\r

      \    case 'selectOnClick': addSelectOnClick(ui, ...params); break;\r

      \  }\r

      }\r\n"
    sig: function mAddBehavior(ui, beh, params){}
    region: helpers (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  selectTextOrig:
    name: selectTextOrig
    code: "function selectTextOrig(id) {\r

      \  var sel, range;\r

      \  var el = document.getElementById(id); \r

      \  if (window.getSelection && document.createRange) { \r

      \    sel = window.getSelection();\r

      \    if (sel.toString() == '') { \r

      \      window.setTimeout(function () {\r

      \        range = document.createRange(); \r

      \        range.selectNodeContents(el); \r

      \        sel.removeAllRanges(); \r

      \        sel.addRange(range);\r

      \      }, 1);\r

      \    }\r

      \  } else if (document.selection) { \r

      \    sel = document.selection.createRange();\r

      \    if (sel.text == '') { \r

      \      range = document.body.createTextRange();\r

      \      range.moveToElementText(el);\r

      \      range.select(); \r

      \    }\r

      \  }\r

      }\r\n"
    sig: function selectTextOrig(id){}
    region: helpers (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  setApply:
    name: setApply
    code: "function setApply(prop, val) {\r

      \  let s = G.settings;\r

      \  if (isNumber(val)) val = Number(val); \r

      \  s[prop] = val;\r

      \  G.clientBoard = applySettings(G.clientBoard, s);\r

      }\r\n"
    sig: function setApply(prop, val){}
    region: helpers (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  unCamelCase:
    name: unCamelCase
    code: "function unCamelCase(s) { return separateAtCapitals(s); }\r\n"
    sig: function unCamelCase(s){}
    region: helpers (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  unCamel:
    name: unCamel
    code: "function unCamel(s) { return separateAtCapitals(s); }\r\n"
    sig: function unCamel(s){}
    region: helpers (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  separateAtCapitals:
    name: separateAtCapitals
    code: "function separateAtCapitals(s) {\r

      \  let sNew = '';\r

      \  for (let i = 0; i < s.length; i++) {\r

      \    let ch = s[i];\r

      \    if (ch.toUpperCase() != ch) sNew += ch;\r

      \    else sNew += ' ' + ch.toLowerCase();\r

      \  }\r

      \  return sNew;\r

      }\r\n"
    sig: function separateAtCapitals(s){}
    region: helpers (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  openAux:
    name: openAux
    code: "function openAux() { interrupt(); show(dAux); show('dGo'); }\r\n"
    sig: function openAux(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  closeAux:
    name: closeAux
    code: "function closeAux() {\r

      \  hide(dAux);\r

      \  hide('dGo');\r

      \  show('dGear');\r

      \  show('dFloppy');\r

      \  show('dTemple');\r

      \  if (Settings.hasChanged) { Settings.updateSettings(); db_save();
      }\r

      \  Settings.hasChanged = false;\r

      \  auxOpen = false;\r

      }\r\n"
    sig: function closeAux(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  resetActiveButton:
    name: resetActiveButton
    code: "function resetActiveButton() {\r

      \  if (ActiveButton != null) {\r

      \    let ba = ActiveButton;\r

      \    mStyle(ba, { bg: 'white', fg: 'black' });\r

      \    let caption = ba.id.substring(2);\r

      \    caption = separateAtCapitals(caption);\r

      \    ba.innerHTML = caption;\r

      \    ActiveButton = null;\r

      \  } else {\r

      \  }\r

      }\r\n"
    sig: function resetActiveButton(){}
    region: open (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  setActiveButton:
    name: setActiveButton
    code: "function setActiveButton(button) {\r

      \  ActiveButton = button;\r

      \  mStyle(button, { bg: 'dimgray', fg: 'white' });\r

      \  button.innerHTML = 'submit command!';\r

      }\r\n"
    sig: function setActiveButton(button){}
    region: open (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRemoteConnection:
    name: onClickRemoteConnection
    code: "function onClickRemoteConnection(){\r

      \  if (isdef(DA.remoteSocket)) DA.remoteSocket.disconnect();\r

      \  let socket = DA.remoteSocket =
      io('https://simplesimpleserver.herokuapp.com'); \r

      \  socket.on('fromServer',x=>console.log('msg from
      remote:',x.msg));\r

      \  socket.on('ping',x=>console.log('got pinged from remote!'));\r

      \  socket.emit('ping');\r

      }\r\n"
    sig: function onClickRemoteConnection(){}
    region: open (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickClearBoard:
    name: onClickClearBoard
    code: "function onClickClearBoard() {\r

      \  closeAux();\r

      \  let [plist, fields] = G.clearBoardUI();\r

      \  console.log('sending remove all perlen command', plist,
      fields);\r

      \  console.log('===> remove list', plist, fields);\r

      \  let data = { iPerlen: plist.map(x => x.index), iFroms:
      fields.map(x => x.index), username: Username };\r

      \  logClientSend('removePerlen', data);\r

      \  Socket.emit('removePerlen', data);\r

      }\r\n"
    sig: function onClickClearBoard(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickClearAllPerlen:
    name: onClickClearAllPerlen
    code: "function onClickClearAllPerlen() {\r

      \  closeAux();\r

      \  G.clearBoardUI();\r

      \  G.clearPoolUI();\r

      \  Socket.emit('clearPool');\r

      }\r\n"
    sig: function onClickClearAllPerlen(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickAddToPool:
    name: onClickAddToPool
    code: "function onClickAddToPool(ev) {\r

      \  let button = ev.target;\r

      \  if (ActiveButton == button) { \r

      \    if (isdef(DA.selectedPerlen) && !isEmpty(DA.selectedPerlen))
      {\r

      \      let keys = DA.selectedPerlen.map(x => x.key);\r

      \      Socket.emit('poolChange', { keys: keys });\r

      \      delete DA.selectedPerlen;\r

      \    }\r

      \    closeAux();\r

      \    return;\r

      \  }\r

      \  openAux('pick perlen', button);\r

      \  let d = mDiv(dAuxContent);\r

      \  let items = [];\r

      \  for (const k in G.perlenDict) {\r

      \    let p = jsCopy(G.perlenDict[k]);\r

      \    p.path = mPath(p);\r

      \    console.log('path', p.path)\r

      \    let ui = createPerle(p, d, 64, 1.3, .4);\r

      \    mStyle(ui, { opacity: 1 });\r

      \    iAdd(p, { div: ui });\r

      \    items.push(p);\r

      \  }\r

      \  DA.selectedPerlen = [];\r

      \  items.map(x => iDiv(x).onclick = ev => { toggleItemSelection(x,
      DA.selectedPerlen) });\r

      }\r\n"
    sig: function onClickAddToPool(ev){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickAdd5Random:
    name: onClickAdd5Random
    code: "function onClickAdd5Random() {\r

      \  closeAux();\r

      \  Socket.emit('poolChange', { n: 5 });\r

      }\r\n"
    sig: function onClickAdd5Random(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRemove5Random:
    name: onClickRemove5Random
    code: "function onClickRemove5Random() {\r

      \  closeAux();\r

      \  Socket.emit('removeRandom', { n: 5 });\r

      }\r\n"
    sig: function onClickRemove5Random(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickResetAll:
    name: onClickResetAll
    code: "function onClickResetAll() {\r

      \  Socket.emit('reset');\r

      }\r\n"
    sig: function onClickResetAll(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickSaveColor:
    name: onClickSaveColor
    code: "function onClickSaveColor() {\r

      \  localStorage.setItem('background', G.settings.baseColor);\r

      \  console.log('saved baseColor', G.settings.baseColor);\r

      }\r\n"
    sig: function onClickSaveColor(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRetrieveColor:
    name: onClickRetrieveColor
    code: "function onClickRetrieveColor() {\r

      \  let color = localStorage.getItem('background');\r

      \  console.log('retrieved baseColor', color);\r

      \  G.settings.baseColor = color;\r

      \  Socket.emit('settings', { settings: G.settings });\r

      }\r\n"
    sig: function onClickRetrieveColor(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickShowSavedColor:
    name: onClickShowSavedColor
    code: "function onClickShowSavedColor() {\r

      \  let color = localStorage.getItem('background');\r

      \  console.log('saved background is', color);\r

      }\r\n"
    sig: function onClickShowSavedColor(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRetrieveSettings_dep:
    name: onClickRetrieveSettings_dep
    code: "function onClickRetrieveSettings_dep() {\r

      \  let settings = localStorage.getItem('settings');\r

      \  if (isdef(settings)) {\r

      \    settings = JSON.parse(settings);\r

      \    console.log('retrieved settings (baseColor)',
      settings.baseColor);\r

      \    G.settings = settings;\r

      \    Socket.emit('settings', { settings: G.settings });\r

      \  } else {\r

      \    console.log('no settings in localStorage!');\r

      \  }\r

      }\r\n"
    sig: function onClickRetrieveSettings_dep(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickShowSavedSettings:
    name: onClickShowSavedSettings
    code: "function onClickShowSavedSettings() {\r

      \  let settings = localStorage.getItem('settings');\r

      \  if (isdef(settings)) {\r

      \    settings = JSON.parse(settings);\r

      \    console.log('saved settings (baseColor)',
      settings.baseColor);\r

      \  } else {\r

      \    console.log('no settings in localStorage!');\r

      \  }\r

      }\r\n"
    sig: function onClickShowSavedSettings(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickShowSavedState:
    name: onClickShowSavedState
    code: "function onClickShowSavedState() {\r

      \  let state = localStorage.getItem('state');\r

      \  let randomIndices = localStorage.getItem('randomIndices');\r

      \  if (isdef(state) && isdef(randomIndices)) {\r

      \    state = JSON.parse(state);\r

      \    randomIndices = JSON.parse(randomIndices);\r

      \    console.log('retrieved state (boardArr)',
      state.boardArr.filter(x => x !== null));\r

      \  } else {\r

      \    console.log('no state/randomIndices in localStorage!');\r

      \  }\r

      }\r\n"
    sig: function onClickShowSavedState(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRecovery:
    name: onClickRecovery
    code: "function onClickRecovery() {\r

      \  recoverStateAndSettings();\r

      }\r\n"
    sig: function onClickRecovery(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRecpoint:
    name: onClickRecpoint
    code: "function onClickRecpoint() {\r

      \  saveStateAndSettings();\r

      }\r\n"
    sig: function onClickRecpoint(){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickSaveStateAndSettings_dep:
    name: onClickSaveStateAndSettings_dep
    code: "function onClickSaveStateAndSettings_dep() {\r

      \  let prefix = prompt('enter name: ');\r

      \  if (!isEmpty(prefix)) saveStateAndSettings(prefix);\r

      }\r\n"
    sig: function onClickSaveStateAndSettings_dep(){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickLoadStateAndSettings_dep:
    name: onClickLoadStateAndSettings_dep
    code: "function onClickLoadStateAndSettings_dep() {\r

      \  let prefix = prompt('enter name: ');\r

      \  if (!isEmpty(prefix)) recoverStateAndSettings(prefix);\r

      }\r\n"
    sig: function onClickLoadStateAndSettings_dep(){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  saveStateAndSettings:
    name: saveStateAndSettings
    code: "function saveStateAndSettings(prefix = '') {\r

      \  onClickSaveState(prefix);\r

      \  onClickSaveSettings(prefix);\r

      \  console.assert(BaseColor == G.settings.baseColor, 'Colors do NOT
      match at saving state!!!')\r

      }\r\n"
    sig: function saveStateAndSettings(prefix = ''){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  recoverStateAndSettings:
    name: recoverStateAndSettings
    code: "function recoverStateAndSettings(prefix = '') {\r

      \  onClickRetrieveState(prefix);\r

      \  onClickRetrieveSettings(prefix);\r

      }\r\n"
    sig: function recoverStateAndSettings(prefix = ''){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickSaveSettings:
    name: onClickSaveSettings
    code: "function onClickSaveSettings(prefix) {\r

      \  localStorage.setItem(prefix + 'settings',
      JSON.stringify(G.settings));\r

      \  console.log('saved settings (baseColor)',
      G.settings.baseColor);\r

      }\r\n"
    sig: function onClickSaveSettings(prefix){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickSaveState:
    name: onClickSaveState
    code: "function onClickSaveState(prefix) {\r

      \  let st = G.state;\r

      \  let state = { boardArr: st.boardArr, poolArr: st.poolArr, pool:
      {} };\r

      \  for (const k in st.pool) {\r

      \    let oNew = state.pool[k] = {};\r

      \    copyKeys(st.pool[k], oNew, {}, ['index', 'key']);\r

      \  }\r

      \  localStorage.setItem(prefix + 'state', JSON.stringify(state));\r

      \  localStorage.setItem(prefix + 'randomIndices',
      JSON.stringify(G.randomIndices));\r

      }\r\n"
    sig: function onClickSaveState(prefix){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRetrieveSettings:
    name: onClickRetrieveSettings
    code: "function onClickRetrieveSettings(prefix) {\r

      \  let settings = localStorage.getItem(prefix + 'settings');\r

      \  if (isdef(settings)) {\r

      \    settings = JSON.parse(settings);\r

      \    console.log('retrieved settings (baseColor)',
      settings.baseColor);\r

      \    G.settings = settings;\r

      \    Socket.emit('settings', { settings: G.settings });\r

      \  } else {\r

      \    console.log('no settings in localStorage!');\r

      \  }\r

      }\r\n"
    sig: function onClickRetrieveSettings(prefix){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRetrieveState:
    name: onClickRetrieveState
    code: "function onClickRetrieveState(prefix) {\r

      \  let state = localStorage.getItem(prefix + 'state');\r

      \  let randomIndices = localStorage.getItem(prefix +
      'randomIndices');\r

      \  if (isdef(state) && isdef(randomIndices)) {\r

      \    state = JSON.parse(state);\r

      \    randomIndices = JSON.parse(randomIndices);\r

      \    console.log('retrieved state (boardArr)',
      state.boardArr.filter(x => x !== null));\r

      \    Socket.emit('state', { state: state, randomIndices:
      randomIndices });\r

      \  } else {\r

      \    console.log('no state/randomIndices in localStorage!');\r

      \  }\r

      }\r\n"
    sig: function onClickRetrieveState(prefix){}
    region: load (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickSaveLastState:
    name: onClickSaveLastState
    code: "function onClickSaveLastState() {\r

      \  let lastStateSaved = G.lastStateman.save(G, true);\r

      \  let s = lastStateSaved.settings;\r

      \  console.log('save baseColor', s.baseColor);\r

      }\r\n"
    sig: function onClickSaveLastState(){}
    region: lastState (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickRetrieveLastState:
    name: onClickRetrieveLastState
    code: "function onClickRetrieveLastState() {\r

      \  let lastState = G.lastStateman.getLastStateSaved();\r

      \  let s = lastState.settings;\r

      \  console.log('retrieve baseColor', s.baseColor);\r

      \  Socket.emit('initLastState', { lastState: lastState });\r

      \  return;\r

      \  let elem = createElementFromHTML(`\r

      \    <form action=\"/lastState\" method=\"post\"
      enctype=\"multipart/form-data\">\r

      \    <input type=\"file\" name=\"lastState\" placeholder=\"Select
      file\" />\r

      \    <br />\r

      \    <button>Upload</button>\r

      \    </form>\r

      \  `);\r

      \  show(dAux);\r

      \  clearElement(dAuxContent);\r

      \  mAppend(dAuxContent, elem);\r

      }\r\n"
    sig: function onClickRetrieveLastState(){}
    region: lastState (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  onClickSaveToHistory:
    name: onClickSaveToHistory
    code: "function onClickSaveToHistory() {\r

      \  console.log('save to history!');\r

      \  let l = G.lastStateman.lastState;\r

      \  downloadAsYaml(l, 'lastState');\r

      }\r\n"
    sig: function onClickSaveToHistory(){}
    region: lastState (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  saveState:
    name: saveState
    code: "function saveState(prefix = '') {\r

      \  let st = G.state;\r

      \  let state = { boardArr: st.boardArr, poolArr: st.poolArr, pool:
      {} };\r

      \  for (const k in st.pool) {\r

      \    let oNew = state.pool[k] = {};\r

      \    copyKeys(st.pool[k], oNew, {}, ['index', 'key']);\r

      \  }\r

      \  let pack = { settings: G.settings, state: state, randomIndices:
      G.randomIndices };\r

      \  localStorage.setItem(prefix + '_pack', JSON.stringify(pack));\r

      \  return pack;\r

      }\r\n"
    sig: function saveState(prefix = ''){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  retrieveState:
    name: retrieveState
    code: "function retrieveState(prefix = '') {\r

      \  let pack = localStorage.getItem(prefix + '_pack');\r

      \  if (isdef(pack)) {\r

      \    pack = JSON.parse(pack);\r

      \    console.log('retrieved settings (baseColor)',
      pack.settings.baseColor);\r

      \    G.settings = pack.settings;\r

      \    Socket.emit('state', pack);\r

      \  } else {\r

      \    alert(`no settings ${prefix} in localStorage!`);\r

      \  }\r

      }\r\n"
    sig: function retrieveState(prefix = ''){}
    region: old (onClick.js)
    filename: onClick.js
    type: func
    fname: onClick.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\onClick.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 20809
  startingSetup:
    name: startingSetup
    code: "function startingSetup(){\r\n}\r\n"
    sig: function startingSetup(){}
    region: var (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  simplestPerlenGame:
    name: simplestPerlenGame
    code: "function simplestPerlenGame() {\r

      \  hide('dMainContent');\r

      \  show('dGameScreen');\r

      \  setTitle('Glasperlenspiel');\r

      \  setSubtitle('logged in as ' + Username);\r

      \  mStyle(document.body, { opacity: 1 });\r

      \  initTable(null, 2); initSidebar(); initAux(); initScore();\r

      \  ColorThiefObject = new ColorThief();\r

      \  sendStartOrJoinPerlenGame();\r

      }\r\n"
    sig: function simplestPerlenGame(){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  sendStartOrJoinPerlenGame:
    name: sendStartOrJoinPerlenGame
    code: "function sendStartOrJoinPerlenGame() {\r

      \  if (STARTED) {\r

      \    if (isdef(G)) { addStateToHistory(); }\r

      \    console.log('SERVER RESTART?!?!?!!!');\r

      \    return;\r

      \  }\r

      \  STARTED = true;\r

      \  let data = Username;\r

      \  logClientSend('startOrJoinPerlen', data);\r

      \  Socket.emit('startOrJoinPerlen', data);\r

      \  window.onkeydown = keyDownHandler;\r

      \  window.onkeyup = keyUpHandler;\r

      \  mBy('sidebar').ondblclick = () => { closeAux(); hide('sidebar')
      };\r

      \  G = new SimpleClass7();\r

      \  startingSetup();\r

      }\r\n"
    sig: function sendStartOrJoinPerlenGame(){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  handleGameState:
    name: handleGameState
    code: "function handleGameState(data) { logClientReceive('gameState', data);
      G.presentGameState(data); }\r\n"
    sig: function handleGameState(data){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  handleDbUpdate:
    name: handleDbUpdate
    code: "function handleDbUpdate(data) { logClientReceive('dbUpdate', data);
      DB.standardSettings = data.standardSettings; }\r\n"
    sig: function handleDbUpdate(data){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  sendMovePerle:
    name: sendMovePerle
    code: "function sendMovePerle(perle, fFrom, fTo, dis) {\r

      \  let data = { dxy: perle.dxy, iPerle: perle.index, iFrom:
      fFrom.index, iTo: fTo.index, displaced: isdef(dis) ? dis.index : null,
      username: Username };\r

      \  logClientSend('movePerle', data);\r

      \  Socket.emit('movePerle', data);\r

      }\r\n"
    sig: function sendMovePerle(perle, fFrom, fTo, dis){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  sendMoveField:
    name: sendMoveField
    code: "function sendMoveField(f) {\r

      \  let data = { dxy: f.item.dxy, iField: f.index, username: Username
      };\r

      \  logClientSend('moveField', data);\r

      \  Socket.emit('moveField', data);\r

      }\r\n"
    sig: function sendMoveField(f){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  sendRemovePerle:
    name: sendRemovePerle
    code: "function sendRemovePerle(perle, fFrom) {\r

      \  let data = { iPerle: perle.index, iFrom: fFrom.index, username:
      Username };\r

      \  logClientSend('removePerle', data);\r

      \  Socket.emit('removePerle', data);\r

      }\r\n"
    sig: function sendRemovePerle(perle, fFrom){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  sendPlacePerle:
    name: sendPlacePerle
    code: "function sendPlacePerle(perle, field, dis) {\r

      \  let data = { dxy: perle.dxy, iPerle: perle.index, iField:
      field.index, displaced: isdef(dis) ? dis.index : null, username: Username
      };\r

      \  logClientSend('placePerle', data);\r

      \  Socket.emit('placePerle', data);\r

      }\r\n"
    sig: function sendPlacePerle(perle, field, dis){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  sendRelayout:
    name: sendRelayout
    code: "function sendRelayout(rows, cols, boardArr, poolArr) {\r

      \  let data = { rows: rows, cols: cols, boardArr: boardArr,
      username: Username };\r

      \  if (isdef(poolArr)) data.poolArr = poolArr;\r

      \  logClientSend('relayout', data);\r

      \  Socket.emit('relayout', data);\r

      }\r\n"
    sig: function sendRelayout(rows, cols, boardArr, poolArr){}
    region: perlen (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  onEnterPerle:
    name: onEnterPerle
    code: "function onEnterPerle(perle) {\r

      \  if (IsControlKeyDown) {\r

      \    iMagnify(perle);\r

      \  }\r

      }\r\n"
    sig: function onEnterPerle(perle){}
    region: key (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  onExitPerle:
    name: onExitPerle
    code: "function onExitPerle() { if (IsControlKeyDown) iMagnifyCancel(); }\r\n"
    sig: function onExitPerle(){}
    region: key (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  keyUpHandler:
    name: keyUpHandler
    code: "function keyUpHandler(ev) {\r

      \  if (ev.key == 'Control') {\r

      \    IsControlKeyDown = false;\r

      \    iMagnifyCancel();\r

      \  }\r

      \  if (ev.key == 'Alt' && isdef(Socket)) { Socket.emit('hide', {
      username: Username }); }\r

      \  if (ev.code == 'Escape' && isVisible('dAux')) {\r

      \    console.log('hiding dAux!')\r

      \    hide('dAux');\r

      \  }\r

      }\r\n"
    sig: function keyUpHandler(ev){}
    region: key (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  keyDownHandler:
    name: keyDownHandler
    code: "function keyDownHandler(ev) {\r

      \  if (IsControlKeyDown && MAGNIFIER_IMAGE) return;\r

      \  if (!MAGNIFIER_IMAGE && ev.key == 'Control') {\r

      \    IsControlKeyDown = true;\r

      \    let elements = document.querySelectorAll(\":hover\");\r

      \    for (const el of elements) {\r

      \      let id = el.id;\r

      \      if (isdef(id) && isdef(Items[id]) && Items[id].type ==
      'perle') {\r

      \        iMagnify(Items[id]); return;\r

      \      }\r

      \    }\r

      \  }\r

      \  if (ev.key == 'Alt' && isdef(Socket)) { Socket.emit('show', {
      username: Username }); }\r

      }\r\n"
    sig: function keyDownHandler(ev){}
    region: key (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  createPerle:
    name: createPerle
    code: "function createPerle(perle, dParent, sz = 64, wf = 1.3, hf = 0.4,
      useNewImage = false) {\r

      \  let d = makePerleDiv(perle,\r

      \    { wmin: sz + 4, h: sz * (1 + hf) + 4 },\r

      \    { w: sz, h: sz }, { wmax: sz * wf, hmax: sz * hf, fz: sz / 6
      },\r

      \    'b', true, null, useNewImage);\r

      \  mAppend(dParent, d);\r

      \  if (perle.field != null) { \r

      \    perle.live.dLabel.remove();\r

      \    let img = perle.live.dImg;\r

      \    let d = iDiv(perle);\r

      \    let rect = getRect(img);\r

      \    let szField = G.settings.szField; \r

      \    let sz = G.settings.szPerle * szField / 100;\r

      \    if (isFarbPerle(perle)) mStyle(img, { w: 1, h: 1 });\r

      \    else mStyle(img, { w: sz, h: sz });\r

      \    mStyle(d, { bg: 'transparent', w: sz, h: sz });\r

      \  } else {\r

      \    let d = iDiv(perle);\r

      \    mStyle(d, { opacity: 1 - G.settings.dimming / 100 });\r

      \    let sz = G.settings.szPoolPerle;\r

      \    if (isdef(sz)) {\r

      \      mStyle(d.firstChild, { w: sz, h: sz });\r

      \    }\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function createPerle(perle, dParent, sz = 64, wf = 1.3, hf = 0.4,
      useNewImage = false){}
    region: key (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  dragStartPreventionOnSidebarOpen:
    name: dragStartPreventionOnSidebarOpen
    code: "function dragStartPreventionOnSidebarOpen() {\r

      \  if (isdef(mBy('drop-region'))) {\r

      \    alert('please close sidebar (by DOUBLECLICK on it) before
      proceeding!');\r

      \    return false;\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function dragStartPreventionOnSidebarOpen(){}
    region: key (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  isFarbPerle:
    name: isFarbPerle
    code: "function isFarbPerle(perle) { return isGermanColorName(perle.key); }\r\n"
    sig: function isFarbPerle(perle){}
    region: key (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  mPath:
    name: mPath
    code: "function mPath(p) {\r

      \  if (!(p.path.includes('.'))) p.path += '.png';\r

      \  return PERLENPATH_FRONT + 'perlen/' + p.path;\r

      }\r\n"
    sig: function mPath(p){}
    region: key (si8Class.js)
    filename: si8Class.js
    type: func
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  applySettings:
    name: applySettings
    code: "function applySettings(b, s, h=768, topFrame = 0) {\r

      \  let isRealBoard = topFrame == 0;\r

      \  let hBoard = h, wBoard = 2 * h;\r

      \  let scale = hBoard / valf(s.hBoard, 768);\r

      \  calcLayoutParameters(s, b, scale);\r

      \  clearElement(b.dOuter);\r

      \  b.fields = null;\r

      \  createFields(s, b, scale);\r

      \  if (isRealBoard) setNewBackgroundColor(s.baseColor);\r

      \  return b;\r

      }\r\n"
    sig: function applySettings(b, s, h=768, topFrame = 0){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  isField:
    name: isField
    code: "function isField(x){return x.isField == true;}\r\n"
    sig: function isField(x){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  applyStandard:
    name: applyStandard
    code: "function applyStandard(dParent, s, h = 768, topFrame = 0) {\r

      \  let isRealBoard = topFrame == 0;\r

      \  let b = { boardFilename: s.boardFilename };\r

      \  let hBoard = h, wBoard = 2 * h;\r

      \  let scale = hBoard / valf(s.hBoard, 768);\r

      \  calcLayoutParameters(s, b, scale);\r

      \  let d0;\r

      \  if (isRealBoard){\r

      \    d0 = b.d0 = mDiv(dParent, { h: hBoard }); \r

      \  }else{\r

      \    d0 = b.d0 = mDiv(dParent, { w: wBoard + 100, h: hBoard +
      topFrame }, 'd0_' + b.boardFilename); \r

      \  }\r

      \  mCenterCenterFlex(d0);\r

      \  let dOuter = b.dOuter = mDiv(d0, {}, 'dOuter_' +
      b.boardFilename);\r

      \  mCenterCenterFlex(dOuter);\r

      \  loadBoardImage(dParent, s, b, scale, topFrame != 0);\r

      \  if (isRealBoard) setNewBackgroundColor(s.baseColor);\r

      \  createFields(s, b, scale);\r

      \  return b;\r

      }\r\n"
    sig: function applyStandard(dParent, s, h = 768, topFrame = 0){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  calcLayoutParameters:
    name: calcLayoutParameters
    code: "function calcLayoutParameters(s, b, scale = 1) {\r

      \  let [layout, horDist, vertDist, rows, cols] = [s.boardLayout,
      s.dxCenter, s.dyCenter, s.rows, s.cols];\r

      \  let isHexLayout = startsWith(layout, 'hex');\r

      \  let hline = isHexLayout ? vertDist * .75 : vertDist;\r

      \  if (nundef(rows) || layout == 'circle') rows =
      Math.floor(s.hFieldArea / hline);\r

      \  if (nundef(cols) || layout == 'circle') cols =
      Math.floor(s.wFieldArea / horDist)\r

      \  let [centers, wNeeded, hNeeded] = getCentersFromRowsCols(layout,
      rows, cols, horDist, vertDist);\r

      \  s.nFields = centers.length; \r

      \  [b.nFields, b.wNeeded, b.hNeeded, b.centers] = [s.nFields,
      wNeeded, hNeeded, centers];\r

      \  [b.layout, b.rows, b.cols, b.dxCenter, b.dyCenter, b.hline] =
      [s.boardLayout, rows, cols, horDist, vertDist, hline];\r

      \  if (scale != 1) {\r

      \    for (const c of centers) {\r

      \      c.x = c.x * scale;\r

      \      c.y = c.y * scale;\r

      \    }\r

      \    b.wNeeded *= scale;\r

      \    b.hNeeded *= scale;\r

      \    b.dxCenter *= scale;\r

      \    b.dyCenter *= scale;\r

      \    b.hline *= scale;\r

      \  }\r

      \  return s.nFields;\r

      }\r\n"
    sig: function calcLayoutParameters(s, b, scale = 1){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  createFields:
    name: createFields
    code: "function createFields(s, b, scale) {\r

      \  let dCells = b.dCells = mDiv(b.dOuter, { matop: s.boardMarginTop
      * scale, maleft: s.boardMarginLeft * scale, w: b.wNeeded, h: b.hNeeded,
      position: 'relative' },'dFieldArea'); \r

      \  let [horDist, vertDist, szField] = [b.dxCenter, b.dyCenter,
      s.szField*scale];\r

      \  let fields = b.fields = [], i = 0, dx = horDist / 2, dy =
      vertDist / 2;\r

      \  let bg = s.fieldColor;\r

      \  for (const p of b.centers) {\r

      \    let left = p.x - szField/2;\r

      \    let top = p.y - szField/2;\r

      \    let dItem = mDiv(dCells, { position: 'absolute', left: left,
      top: top, display: 'inline', w: szField, h: szField, rounding: '50%', bg:
      bg });\r

      \    mCenterCenterFlex(dItem)\r

      \    let f = { div: dItem, index: i, center: p, isField: true }; i
      += 1;\r

      \    fields.push(f);\r

      \  }\r

      \  if (s.boardRotation != 0) { dCells.style.transform =
      `rotate(${s.boardRotation}deg)`; }\r

      }\r\n"
    sig: function createFields(s, b, scale){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  createFields_dep:
    name: createFields_dep
    code: "function createFields_dep(s, b, scale) {\r

      \  let dCells = b.dCells = mDiv(b.dOuter, { matop: s.boardMarginTop
      * scale, maleft: s.boardMarginLeft * scale, w: b.wNeeded, h: b.hNeeded,
      position: 'relative' }); \r

      \  let [wCell, hCell, wGap, hGap] = [b.dxCenter, b.dyCenter, s.wGap
      * scale, s.hGap * scale];\r

      \  let fields = b.fields = [], i = 0, dx = wCell / 2, dy = hCell /
      2;\r

      \  let bg = s.fieldColor;\r

      \  for (const p of b.centers) {\r

      \    let left = p.x - dx + wGap / 2;\r

      \    let top = p.y - dy + hGap / 2;\r

      \    let dItem = mDiv(dCells, { position: 'absolute', left: left,
      top: top, display: 'inline', w: wCell - wGap, h: hCell - hGap, rounding:
      '50%', bg: bg });\r

      \    mCenterCenterFlex(dItem)\r

      \    let f = { div: dItem, index: i, center: p, isField: true }; i
      += 1;\r

      \    fields.push(f);\r

      \  }\r

      \  if (s.boardRotation != 0) { dCells.style.transform =
      `rotate(${s.boardRotation}deg)`; }\r

      }\r\n"
    sig: function createFields_dep(s, b, scale){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  getRandomPixelColor:
    name: getRandomPixelColor
    code: "function getRandomPixelColor(img) {\r

      \  let canvas = mCreate('canvas');\r

      \  let ctx = canvas.getContext('2d');\r

      \  ctx.drawImage(img, 0, 0);\r

      \  let [rx, ry] = [randomNumber(1, 100), randomNumber(1, 50)];\r

      \  console.log('______________', rx, ry)\r

      \  var p = ctx.getImageData(rx, ry, 1, 1).data;\r

      \  console.log('p', p)\r

      \  let rgb = `rgb(${p[0]},${p[1]},${p[2]})`;\r

      \  let x = rx, y = ry;\r

      \  var coord = \"x=\" + x + \", y=\" + y;\r

      \  let color = anyColorToStandardString(rgb);\r

      \  console.log('pixel', coord, 'has color', color);\r

      \  return color;\r

      }\r\n"
    sig: function getRandomPixelColor(img){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  getCornerPixelColor:
    name: getCornerPixelColor
    code: "function getCornerPixelColor(img) {\r

      \  let canvas = mCreate('canvas');\r

      \  let ctx = canvas.getContext('2d');\r

      \  ctx.drawImage(img, 0, 0);\r

      \  var p = ctx.getImageData(1, 1, 1, 1).data;\r

      \  let rgb = `rgb(${p[0]},${p[1]},${p[2]})`;\r

      \  let x = 1, y = 1;\r

      \  var coord = \"x=\" + x + \", y=\" + y;\r

      \  let color = anyColorToStandardString(rgb);\r

      \  return color;\r

      }\r\n"
    sig: function getCornerPixelColor(img){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  getValueInPixel:
    name: getValueInPixel
    code: "function getValueInPixel(val, relto) {\r

      \  if (isNumber(val)) return val;\r

      \  val = firstNumber(val);\r

      \  return val * relto / 100;\r

      }\r\n"
    sig: function getValueInPixel(val, relto){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  getBoardImagePath:
    name: getBoardImagePath
    code: "function getBoardImagePath(boardFilename) {\r

      \  console.assert(boardFilename.includes('.'), 'getImagePath: not a
      filename!!!', boardFilename)\r

      \  return PERLENPATH_FRONT + 'bretter/' + boardFilename;\r

      }\r\n"
    sig: function getBoardImagePath(boardFilename){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  getScaledSizeCss:
    name: getScaledSizeCss
    code: "function getScaledSizeCss(sz, scale) { return `${sz.w * scale}px ${sz.h *
      scale}px`; }\r\n"
    sig: function getScaledSizeCss(sz, scale){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  getBoardBackgroundPicker:
    name: getBoardBackgroundPicker
    code: "function getBoardBackgroundPicker(b) {\r

      \  let palette = getPaletteFromImage(b.img);\r

      \  let picker = mColorPicker3(b.d0, palette, c =>
      setLinearBackground(b.d0, c, 10), cornerColor);\r

      \  b.colorPicker = picker;\r

      }\r\n"
    sig: function getBoardBackgroundPicker(b){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  loadBoardImage:
    name: loadBoardImage
    code: "function loadBoardImage(dOneBoard, s, b, scale, useCornerColor=false) {\r

      \  let boardFilename = s.boardFilename;\r

      \  if (boardFilename == 'none') { return; }\r

      \  let path = getBoardImagePath(boardFilename);\r

      \  var img = mCreate('img');\r

      \  img.onload = ev => {\r

      \    let sz = s.naturalImageSize = b.imgSize = { w:
      img.naturalWidth, h: img.naturalHeight };\r

      \    let szi = s.backgroundSize;\r

      \    if (szi == 'initial' && scale != 1) szi = getScaledSizeCss(sz,
      scale);\r

      \    b.dOuter.style.backgroundImage = `url(${img.src})`;\r

      \    mStyle(b.dOuter, { 'background-size': szi, 'background-repeat':
      'no-repeat', 'background-position': 'center center' });\r

      \    let [wb, hb] = [Math.max(sz.w * scale, b.wNeeded),
      Math.max(sz.h * scale, b.hNeeded)];\r

      \    mStyle(b.dOuter, { wmin: wb, hmin: hb });\r

      \    if (useCornerColor) setLinearBackground(b.d0, s.baseColor,
      10);\r

      \    b.img = img;\r

      \  }\r

      \  img.src = path;\r

      }\r\n"
    sig: function loadBoardImage(dOneBoard, s, b, scale, useCornerColor=false){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  setGradientImageBackground:
    name: setGradientImageBackground
    code: "function setGradientImageBackground(d, path, color1 = 'red', color2 =
      'green') {\r

      \  d.style.background = color1;\r

      \  d.style.backgroundImage = `url(${path})`;/* fallback */\r

      \  d.style.backgroundImage = `url(${path}),
      linear-gradient(${color1}, ${color2})`;\r

      \  d.style.backgroundSize = '100%';\r

      }\r\n"
    sig: function setGradientImageBackground(d, path, color1 = 'red', color2 =
      'green'){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  setLinearBackground:
    name: setLinearBackground
    code: "function setLinearBackground(d, cInner = '#00000080', percentWide, cOuter
      = 'transparent') {\r

      \  if (typeof cInner == 'function') cInner = cInner();\r

      \  d.style.background = `linear-gradient(to right, ${cOuter} 0%,
      ${cInner} ${percentWide}%,${cInner} ${100 - percentWide}%, ${cOuter})
      100%`;\r

      }\r\n"
    sig: function setLinearBackground(d, cInner = '#00000080', percentWide, cOuter =
      'transparent'){}
    region: funcs (standard.js)
    filename: standard.js
    type: func
    fname: standard.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\standard.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 8360
  startTesting:
    name: startTesting
    code: "async function startTesting() {\r

      \  hide('dMainContent');\r

      \  show('dGameScreen');\r

      \  setTitle('*** Testing ***');\r

      \  setSubtitle('logged in as ' + Username);\r

      \  let color = USERNAME_SELECTION == 'local' ?
      localStorage.getItem('BaseColor') : null;\r

      \  setNewBackgroundColor(color);\r

      \  mStyle(document.body, { opacity: 1 });\r

      \  initTable(null, 2); initSidebar(); initAux(); initScore();\r

      \  runTest();\r

      }\r\n"
    sig: async function startTesting(){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  runTest:
    name: runTest
    code: "function runTest() {\r

      \  editLayoutTests();\r

      }\r\n"
    sig: function runTest(){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  editLayoutTests:
    name: editLayoutTests
    code: "async function editLayoutTests() {\r

      \  DB = await route_path_yaml_dict('./PERLENDATA/data.yaml');\r

      \  lastState = await
      route_path_yaml_dict('./PERLENDATA/lastState.yaml');\r

      \  G = { settings: lastState.settings, dParent: dTable, clientBoard:
      {} };\r

      \  applyStandard(G.dParent, G.settings);\r

      \  onClickEditLayout();\r

      }\r\n"
    sig: async function editLayoutTests(){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexBoardTests:
    name: hexBoardTests
    code: "function hexBoardTests() {\r

      \  let w = window.innerWidth;\r

      \  let sz = 100;\r

      \  let cols = math.floor(w / 100);\r

      \  let dBoard = mDiv(dTable);\r

      \  mCenterFlex(dTable);\r

      \  hexBoard(dBoard, 5, cols - 1, 100);\r

      }\r\n"
    sig: function hexBoardTests(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexBoard:
    name: hexBoard
    code: "function hexBoard(dParent, rows = 13, cols = 5, wHex = 100) {\r

      \  let hline = (wHex / .866) * .75;\r

      \  dParent = mDiv(dParent, { position: 'relative', w: wHex * cols,
      h: hline * (rows + .5), display: 'inline-block' });\r

      \  let hlist = [];\r

      \  let xOffset = 0;\r

      \  for (let r = 0; r < rows; r++) {\r

      \    let curCols = r % 2 ? cols - 1 : cols;\r

      \    let dx = r % 2 ? wHex / 2 : 0;\r

      \    dx += xOffset;\r

      \    for (let c = 0; c < curCols; c++) {\r

      \      let [dOuter, dInner] = oneHex(dParent, wHex, wHex,
      '#ffffff10');\r

      \      mStyle(dOuter, { position: 'absolute', left: dx + c * wHex,
      top: r * hline });\r

      \      hlist.push(dInner);\r

      \    }\r

      \  }\r

      \  function oneHex(dParent, w, h, bg) {\r

      \    let d1 = mDiv(dParent, { w: w, h: h, display: 'inline',
      position: 'relative' });\r

      \    let d2 = mDiv(d1, { w: w, h: h, display: 'inline', position:
      'absolute', left: 0, top: 0 });\r

      \    let g = aSvgg(d2);\r

      \    let wgap = 8, hgap = 0;\r

      \    let hex1 = agShape(g, 'hex', w - 2 * wgap, h - 2 * hgap, bg);\r

      \    let offx = 16;\r

      \    let offy = 20;\r

      \    let d3 = mDiv(d1, { w: w, h: h, display: 'inline', position:
      'absolute', left: 0, top: 0 });\r

      \    let d4 = mDiv(d3, { left: `${offx / 2}%`, top: `${offy / 2}%`,
      w: `${100 - offx}%`, h: `${100 - offy}%`, rounding: '50%', display:
      'inline', position: 'absolute' });\r

      \    return [d1, d4];\r

      \  }\r

      \  return hlist;\r

      }\r\n"
    sig: function hexBoard(dParent, rows = 13, cols = 5, wHex = 100){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest08:
    name: hexTest08
    code: "function hexTest08(dParent, rows = 13, cols = 5, wHex = 100) {\r

      \  let hline = (wHex / .866) * .75;\r

      \  dParent = mDiv(dParent, { position: 'relative', w: wHex * cols,
      h: hline * (rows + .5), display: 'inline-block' });\r

      \  let hlist = [];\r

      \  let xOffset = 0;\r

      \  for (let r = 0; r < rows; r++) {\r

      \    let curCols = r % 2 ? cols - 1 : cols;\r

      \    let dx = r % 2 ? wHex / 2 : 0;\r

      \    dx += xOffset;\r

      \    for (let c = 0; c < curCols; c++) {\r

      \      let [dOuter, dInner] = oneHex(dParent, wHex, wHex,
      '#ffffff10');\r

      \      mStyle(dOuter, { position: 'absolute', left: dx + c * wHex,
      top: r * hline });\r

      \      hlist.push(dInner);\r

      \    }\r

      \  }\r

      \  function oneHex(dParent, w, h, bg) {\r

      \    let d1 = mDiv(dParent, { w: w, h: h, display: 'inline',
      position: 'relative' });\r

      \    let d2 = mDiv(d1, { w: w, h: h, display: 'inline', position:
      'absolute', left: 0, top: 0 });\r

      \    let g = aSvgg(d2);\r

      \    let wgap = 8, hgap = 0;\r

      \    let hex1 = agShape(g, 'hex', w - 2 * wgap, h - 2 * hgap, bg);\r

      \    let offx = 16;\r

      \    let offy = 20;\r

      \    let d3 = mDiv(d1, { w: w, h: h, display: 'inline', position:
      'absolute', left: 0, top: 0 });\r

      \    let d4 = mDiv(d3, { left: `${offx / 2}%`, top: `${offy / 2}%`,
      w: `${100 - offx}%`, h: `${100 - offy}%`, rounding: '50%', display:
      'inline', position: 'absolute' });\r

      \    return [d1, d4];\r

      \  }\r

      \  return hlist;\r

      }\r\n"
    sig: function hexTest08(dParent, rows = 13, cols = 5, wHex = 100){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexBoardNO:
    name: hexBoardNO
    code: "function hexBoardNO(dParent, rows = 3, cols = 5, sz = 100) {\r

      \  let hline = (sz / .866) * .75;\r

      \  dParent = mDiv(dParent, { position: 'relative', w: sz * cols, h:
      hline * (rows + .5), display: 'inline-block' });\r

      \  let fields = [];\r

      \  for (let r = 0; r < rows; r++) {\r

      \    let curCols = r % 2 ? cols - 1 : cols;\r

      \    let dx = r % 2 ? sz / 2 : 0;\r

      \    for (let c = 0; c < curCols; c++) {\r

      \      let [dOuter, dInner] = oneHex(dParent, sz, sz, 'yellow');\r

      \      mStyle(dOuter, { position: 'absolute', left: dx + c * sz,
      top: r * hline });\r

      \      fields.push(dInner);\r

      \    }\r

      \    return fields;\r

      \  }\r

      \  function oneHex(dParent, w, h, bg) {\r

      \    let d1 = mDiv(dParent, { w: w, h: h, display: 'inline',
      position: 'relative' });\r

      \    let d2 = mDiv(d1, { w: w, h: h, display: 'inline', position:
      'absolute', left: 0, top: 0 });\r

      \    let g = aSvgg(d2);\r

      \    let wgap = 8, hgap = 0;\r

      \    let hex1 = agShape(g, 'hex', w - 2 * wgap, h - 2 * hgap, bg);\r

      \    let offx = 16;\r

      \    let offy = 20;\r

      \    let d3 = mDiv(d1, { w: w, h: h, rounding: '50%', display:
      'inline', position: 'absolute', left: 0, top: 0 });\r

      \    let d4 = mDiv(d3, { left: `${offx / 2}%`, top: `${offy / 2}%`,
      w: `${100 - offx}%`, h: `${100 - offy}%`, rounding: '50%', bg: 'random',
      display: 'inline', position: 'absolute' });\r

      \    return [d1, d4];\r

      \  }\r

      }\r\n"
    sig: function hexBoardNO(dParent, rows = 3, cols = 5, sz = 100){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest07:
    name: hexTest07
    code: "function hexTest07() {\r

      \  let dParent = dTable;\r

      \  let rows = 4, cols = 5;\r

      \  let whexBrut = 100;\r

      \  let hline = (whexBrut / .866) * .75;\r

      \  dParent = mDiv(dParent, { position: 'relative', w: whexBrut *
      cols, h: hline * (rows + .5), display: 'inline-block' });\r

      \  let hlist = [];\r

      \  for (let r = 0; r < rows; r++) {\r

      \    let curCols = r % 2 ? cols - 1 : cols;\r

      \    let dx = r % 2 ? whexBrut / 2 : 0;\r

      \    for (let c = 0; c < curCols; c++) {\r

      \      let h = oneHex(dParent, whexBrut, whexBrut, 'yellow');\r

      \      mStyle(h, { position: 'absolute', left: dx + c * whexBrut,
      top: r * hline });\r

      \      hlist.push(h);\r

      \    }\r

      \  }\r

      \  function oneHex(dParent, w, h, bg) {\r

      \    let d1 = mDiv(dParent, { w: w, h: h, display: 'inline',
      position: 'relative' });\r

      \    let d2 = mDiv(d1, { w: w, h: h, display: 'inline', position:
      'absolute', left: 0, top: 0 });\r

      \    let g = aSvgg(d2);\r

      \    let wgap = 8, hgap = 0;\r

      \    let hex1 = agShape(g, 'hex', w - 2 * wgap, h - 2 * hgap, bg);\r

      \    let offx = 16;\r

      \    let offy = 20;\r

      \    let d3 = mDiv(d1, { w: w, h: h, rounding: '50%', display:
      'inline', position: 'absolute', left: 0, top: 0 });\r

      \    let d4 = mDiv(d3, { left: `${offx / 2}%`, top: `${offy / 2}%`,
      w: `${100 - offx}%`, h: `${100 - offy}%`, rounding: '50%', bg: 'random',
      display: 'inline', position: 'absolute' });\r

      \    return d1;\r

      \  }\r

      }\r\n"
    sig: function hexTest07(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest06:
    name: hexTest06
    code: "function hexTest06() {\r

      \  let sz = 200;\r

      \  let d1 = mDiv(dTable, { w: sz, h: sz, bg: 'random', display:
      'inline', position: 'relative' });\r

      \  let d2 = mDiv(d1, { w: 200, h: 200, bg: 'random', display:
      'inline', position: 'absolute', left: 0, top: 0 });\r

      \  let g = aSvgg(d2);\r

      \  let gap = 2;\r

      \  let hex1 = agShape(g, 'hex', sz - 2 * gap, sz - 2 * gap,
      'red');\r

      \  let offx = 10;\r

      \  let offy = 20;\r

      \  let d3 = mDiv(d1, { w: 200, h: 200, rounding: '50%', display:
      'inline', position: 'absolute', left: 0, top: 0 });\r

      \  let d4 = mDiv(d3, { left: `${offx / 2}%`, top: `${offy / 2}%`, w:
      `${100 - offx}%`, h: `${100 - offy}%`, rounding: '50%', bg: 'random',
      display: 'inline', position: 'absolute' });\r

      \  return d4;\r

      }\r\n"
    sig: function hexTest06(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest05:
    name: hexTest05
    code: "function hexTest05() {\r

      \  let dParent = dTable;\r

      \  let rows = 4, cols = 9;\r

      \  let whexBrut = 100;\r

      \  let hline = (whexBrut / .866) * .75;\r

      \  dParent = mDiv(dParent, { position: 'relative', w: whexBrut *
      cols, h: hline * (rows + .5), display: 'inline-block' });\r

      \  let hlist = [];\r

      \  for (let r = 0; r < rows; r++) {\r

      \    let curCols = r % 2 ? cols - 1 : cols;\r

      \    let dx = r % 2 ? whexBrut / 2 : 0;\r

      \    for (let c = 0; c < curCols; c++) {\r

      \      let h = mHex05(dParent, whexBrut, 'yellow');\r

      \      mStyle(h, { position: 'absolute', left: dx + c * whexBrut,
      top: r * hline });\r

      \      hlist.push(h);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function hexTest05(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest04:
    name: hexTest04
    code: "function hexTest04() {\r

      \  let dParent = dTable;\r

      \  let rows = 5, cols = 5;\r

      \  let whexBrut = 100;\r

      \  let hline = (whexBrut / .866) * .75;\r

      \  dParent = mDiv(dParent, { position: 'relative', w: whexBrut *
      cols, h: hline * (rows + .5), display: 'inline-block' });\r

      \  let hlist = [];\r

      \  for (let r = 0; r < rows; r++) {\r

      \    let curCols = r % 2 ? cols - 1 : cols;\r

      \    let dx = r % 2 ? whexBrut / 2 : 0;\r

      \    for (let c = 0; c < curCols; c++) {\r

      \      let h = mHex04(dParent, whexBrut, 'yellow');\r

      \      mStyle(h, { position: 'absolute', left: dx + c * whexBrut,
      top: r * hline });\r

      \      hlist.push(h);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function hexTest04(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest03:
    name: hexTest03
    code: "function hexTest03() {\r

      \  let dParent = dTable;\r

      \  dParent = mDiv(dTable, { bg: 'random', w: 800, h: 500 });\r

      \  mCenterFlex(dParent);\r

      \  let whexBrut = 100;\r

      \  let hline = (whexBrut / .866) * .75;\r

      \  dParent = mDiv(dParent, { position: 'relative', w: whexBrut * 4,
      h: 300, bg: 'violet', display: 'inline-block' });\r

      \  let hlist = [];\r

      \  for (let i = 0; i < 4; i++) {\r

      \    let h = mHex03(dParent, whexBrut, 'yellow');\r

      \    mStyle(h, { position: 'absolute', left: i * whexBrut, top: 0
      });\r

      \    hlist.push(h);\r

      \  }\r

      \  for (let i = 0; i < 3; i++) {\r

      \    let h = mHex03(dParent, whexBrut, 'yellow');\r

      \    mStyle(h, { position: 'absolute', left: whexBrut / 2 + i *
      whexBrut, top: hline });\r

      \    hlist.push(h);\r

      \  }\r

      }\r\n"
    sig: function hexTest03(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest02:
    name: hexTest02
    code: "function hexTest02() {\r

      \  let dParent = dTable;\r

      \  dParent = mDiv(dTable, { bg: 'random', w: 800, h: 500 });\r

      \  mCenterFlex(dParent);\r

      \  let whexBrut = 100;\r

      \  dParent = mDiv(dParent, { position: 'relative', w: whexBrut * 4,
      h: 300, bg: 'violet', display: 'inline-block' });\r

      \  let hlist = [];\r

      \  for (let i = 0; i < 4; i++) {\r

      \    let h = mHex02(dParent, whexBrut);\r

      \    mStyle(h, { position: 'absolute', left: i * whexBrut, top: 0
      });\r

      \    hlist.push(h);\r

      \  }\r

      }\r\n"
    sig: function hexTest02(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest01:
    name: hexTest01
    code: "function hexTest01() {\r

      \  let dParent = dTable;\r

      \  let styles = { margin: 3 };\r

      \  styles = { padding: 4 };\r

      \  let h1 = mHex01(dParent, styles);\r

      \  let h2 = mHex01(dParent, styles);\r

      }\r\n"
    sig: function hexTest01(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  hexTest00:
    name: hexTest00
    code: "function hexTest00() {\r

      \  let dParent = dTable;\r

      \  let styles = { margin: 3 };\r

      \  styles = { padding: 4 };\r

      \  let h1 = mHex00(dParent, styles);\r

      }\r\n"
    sig: function hexTest00(){}
    region: hex (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  boardTestGetRow:
    name: boardTestGetRow
    code: "function boardTestGetRow() {\r

      \  let arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r

      \  let [rows, cols] = [6, 2];\r

      \  for (let i = 0; i < rows; i++) {\r

      \    let x = bGetRow(arr, i, rows, cols);\r

      \    console.log('arr', toBoardString(arr, rows, cols), 'row', i,
      x);\r

      \  }\r

      }\r\n"
    sig: function boardTestGetRow(){}
    region: board (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  boardTestGetCol:
    name: boardTestGetCol
    code: "function boardTestGetCol() {\r

      \  let arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r

      \  let [rows, cols] = [3, 4];\r

      \  for (let i = 0; i < cols; i++) {\r

      \    let x = bGetCol(arr, i, rows, cols);\r

      \    console.log('arr', toBoardString(arr, rows, cols), 'col', i,
      x);\r

      \  }\r

      }\r\n"
    sig: function boardTestGetCol(){}
    region: board (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 39313
  cardGameTest09:
    name: cardGameTest09
    code: "function cardGameTest09() {\r

      \  let state = {\r

      \    pl1: { hand: [1, 2, 3, 4, 5], trick: [[6], [7, 8, 9]] },\r

      \    pl2: { hand: [11, 12, 13, 14, 15], trick: [[16], [17, 18, 19]]
      },\r

      \  };\r

      \  let areaItems = makeAreasKrieg(dTable);\r

      \  presentState1(state, areaItems);\r

      }\r\n"
    sig: function cardGameTest09(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  presentState1:
    name: presentState1
    code: "function presentState1(state, areas) {\r

      \  let trick1 = arrFlatten(state.pl1.trick)\r

      \  let trick2 = arrFlatten(state.pl2.trick);\r

      \  let pl1Hand = state.pl1.hand;\r

      \  let pl2Hand = state.pl2.hand;\r

      \  let arrs = [[trick1, trick2], [pl1Hand], [pl2Hand]];\r

      \  let hands = [];\r

      \  for (let i = 0; i < 3; i++) {\r

      \    let area = areas[i];\r

      \    let d = diContent(area);\r

      \    iMessage(area, '');\r

      \    for (let j = 0; j < arrs[i].length; j++) {\r

      \      let arr = arrs[i][j]; \r

      \      let id = 'a' + i + '_h' + j;\r

      \      let what = iH00(arr, d, {}, id);\r

      \      hands.push(what);\r

      \    }\r

      \  }\r

      \  for (let i = 0; i < 2; i++) {\r

      \    let cards = hands[i].iHand.items;\r

      \    if (isEmpty(hands[i].arr)) continue;\r

      \    console.log('cards', cards, 'hands[i]', hands[i])\r

      \    for (let j = 0; j < cards.length - 1; j++) {\r

      \      Card52.turnFaceDown(cards[j]);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function presentState1(state, areas){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest08:
    name: cardGameTest08
    code: "function cardGameTest08() {\r

      \  let state = {\r

      \    pl1: { hand: [1, 2, 3, 4, 5], trick: [[6]] },\r

      \    pl2: { hand: [11, 12, 13, 14, 15], trick: [[16]] },\r

      \  };\r

      \  let trick =
      arrFlatten(state.pl1.trick).concat(arrFlatten(state.pl2.trick));\r

      \  let pl1Hand = state.pl1.hand;\r

      \  let pl2Hand = state.pl2.hand;\r

      \  let arrs = [trick, pl1Hand, pl2Hand];\r

      \  let items = makeAreasKrieg(dTable); \r

      \  for (let i = 0; i < 3; i++) {\r

      \    let arr = arrs[i];\r

      \    let item = items[i];\r

      \    let d = diContent(item);\r

      \    let id = 'h' + i;\r

      \    iMessage(item, '');\r

      \    iH00(arr, d, { bg: 'blue' }, id);\r

      \  }\r

      }\r\n"
    sig: function cardGameTest08(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest07:
    name: cardGameTest07
    code: "function cardGameTest07() {\r

      \  let items = cardGameTest07_helper();\r

      \  for (let i = 0; i < 3; i++) {\r

      \    let arr = [0, 1, 2, 10, 11].map(x => 1 + (x + i * 13) % 52);\r

      \    let d = diContent(items[i]);\r

      \    let id = 'h' + i;\r

      \    iH00(arr, d, { bg: 'blue' }, id);\r

      \  }\r

      }\r\n"
    sig: function cardGameTest07(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest07_helper:
    name: cardGameTest07_helper
    code: "function cardGameTest07_helper() {\r

      \  setBackgroundColor(null, 'random');\r

      \  let dGrid = mDiv(dTable, { gap: 10, bg: 'white', w: '90%',
      padding: 10, display: 'inline-grid', rounding: 10 }, 'dGrid');\r

      \  let layout = ['T', 'H A'];\r

      \  let areaStyles = { bg: 'green', rounding: 6 };\r

      \  let contentStyles = { lowerRounding: 6 };\r

      \  let messageStyles = { fg: 'yellow' };\r

      \  let titleStyles = { bg: 'dimgray', family: 'AlgerianRegular',
      upperRounding: 6 };\r

      \  let areas = {\r

      \    T: { title: 'table', id: 'dTrick', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles },\r

      \    H: { title: 'YOU', id: 'dHuman', showTitle: true, messageArea:
      true, areaStyles: areaStyles, contentStyles: contentStyles, messageStyles:
      messageStyles, titleStyles: titleStyles },\r

      \    A: { title: 'opponent', id: 'dAI', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles },\r

      \  };\r

      \  let x = createGridLayout(dGrid, layout);\r

      \  console.log('result', x);\r

      \  let items = [];\r

      \  for (const k in areas) {\r

      \    let item = areas[k];\r

      \    item.areaStyles['grid-area'] = k;\r

      \    let dCell = mTitledMessageDiv(item.title, dGrid, item.id,
      item.areaStyles, item.contentStyles, item.titleStyles,
      item.messageStyles)\r

      \    iRegister(item, item.id);\r

      \    iAdd(item, { div: dCell, dTitle: dCell.children[0], dMessage:
      dCell.children[1], dContent: dCell.children[2] });\r

      \    mCenterCenterFlex(diContent(item));\r

      \    mStyle(diContent(item), { gap: 10 });\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function cardGameTest07_helper(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest06_clean_OK:
    name: cardGameTest06_clean_OK
    code: "function cardGameTest06_clean_OK() {\r

      \  setBackgroundColor(null, 'random');\r

      \  let dGrid = mDiv(dTable, { gap: 10, bg: 'white', w: '90%', hmin:
      400, padding: 10, display: 'inline-grid', rounding: 10 }, 'dGrid');\r

      \  let layout = ['T', 'H A'];\r

      \  let areaStyles = { bg: 'green', rounding: 6 };\r

      \  let contentStyles = { lowerRounding: 6 };\r

      \  let messageStyles = { fg: 'yellow' };\r

      \  let titleStyles = { bg: 'dimgray', family: 'AlgerianRegular',
      upperRounding: 6 };\r

      \  let areas = {\r

      \    T: { title: 'table', id: 'dTrick', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles },\r

      \    H: { title: 'YOU', id: 'dHuman', showTitle: true, messageArea:
      true, areaStyles: areaStyles, contentStyles: contentStyles, messageStyles:
      messageStyles, titleStyles: titleStyles },\r

      \    A: { title: 'opponent', id: 'dAI', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles },\r

      \  };\r

      \  areas.T.areaStyles.w = '100%';\r

      \  let x = createGridLayout(dGrid, layout);\r

      \  console.log('result', x);\r

      \  let items = [];\r

      \  for (const k in areas) {\r

      \    let item = areas[k];\r

      \    item.areaStyles['grid-area'] = k;\r

      \    let dCell = mTitledMessageDiv(item.title, dGrid, item.id,
      item.areaStyles, item.contentStyles, item.titleStyles,
      item.messageStyles)\r

      \    iRegister(item, item.id);\r

      \    iAdd(item, { div: dCell, dTitle: dCell.children[0], dMessage:
      dCell.children[1], dContent: dCell.children[2] });\r

      \    mCenterCenterFlex(diContent(item));\r

      \    mStyle(diContent(item), { gap: 10 });\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function cardGameTest06_clean_OK(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest05:
    name: cardGameTest05
    code: "function cardGameTest05() {\r

      \  setBackgroundColor(null, 'random');\r

      \  let dGrid = mDiv(dTable, { gap: 10, bg: 'white', w: '80%', h:
      400, padding: 10, display: 'inline-grid', rounding: 10 }, 'dGrid');\r

      \  let layout = ['T', 'H A'];\r

      \  let areaStyles = { bg: 'random', rounding: 6 };\r

      \  let contentStyles = { bg: 'dimgray', lowerRounding: 6 };\r

      \  let messageStyles = { bg: 'dimgray', fg: 'yellow' };\r

      \  let titleStyles = { family: 'AlgerianRegular', upperRounding: 6
      };\r

      \  let areas = {\r

      \    T: { title: 'table', id: 'dTrick', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles },\r

      \    H: { title: 'YOU', id: 'dHuman', showTitle: true, messageArea:
      true, areaStyles: areaStyles, contentStyles: contentStyles, messageStyles:
      messageStyles, titleStyles: titleStyles },\r

      \    A: { title: 'opponent', id: 'dAI', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles },\r

      \  };\r

      \  let x = createGridLayout(dGrid, layout);\r

      \  console.log('result', x);\r

      \  let items = [];\r

      \  for (const k in areas) {\r

      \    let item = areas[k];\r

      \    item.areaStyles['grid-area'] = k;\r

      \    let dCell = mTitledMessageDiv(item.title, dGrid, item.id,
      item.areaStyles, item.contentStyles, item.titleStyles,
      item.messageStyles)\r

      \    iRegister(item, item.id);\r

      \    iAdd(item, { div: dCell, dTitle: dCell.children[0], dMessage:
      dCell.children[1], dContent: dCell.children[2] });\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function cardGameTest05(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest04:
    name: cardGameTest04
    code: "function cardGameTest04() {\r

      \  setBackgroundColor(null, 'random');\r

      \  let dGrid = mDiv(dTable, { bg: 'red', w: '80%', h: 400, padding:
      10, display: 'inline-grid', rounding: 10 }, 'dGrid');\r

      \  let layout = ['T', 'H A'];\r

      \  let x = createGridLayout(dGrid, layout);\r

      \  console.log('result', x);\r

      \  createAreas(dGrid, x, 'dGrid');\r

      }\r\n"
    sig: function cardGameTest04(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest03_OK:
    name: cardGameTest03_OK
    code: "function cardGameTest03_OK() {\r

      \  setBackgroundColor(null, 'random');\r

      \  mStyle(dTable, { h: 400, bg: 'black', padding: 10 });\r

      \  let dGrid = mDiv100(dTable, { display: 'inline-grid' });\r

      \  let layout = ['T', 'H A'];\r

      \  let x = createGridLayout(dGrid, layout);\r

      \  console.log('result', x);\r

      \  createAreas(dGrid, x, 'a');\r

      }\r\n"
    sig: function cardGameTest03_OK(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest02:
    name: cardGameTest02
    code: "function cardGameTest02() {\r

      \  setBackgroundColor(null, 'random');\r

      \  mStyle(dTable, { h: 400, bg: 'black', padding: 10 });\r

      \  let SPEC = { layout: ['T', 'H A'], showAreaNames: true };\r

      \  let s = '';\r

      \  let m = [];\r

      \  for (const line of SPEC.layout) {\r

      \    s += '\"' + line + '\" ';\r

      \    let letters = line.split(' ');\r

      \    let arr = [];\r

      \    for (const l of letters) { if (!isEmpty(l)) arr.push(l); }\r

      \    m.push(arr);\r

      \  }\r

      \  console.log('m', m, '\\ns', s); return;\r

      }\r\n"
    sig: function cardGameTest02(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cardGameTest01:
    name: cardGameTest01
    code: "function cardGameTest01() {\r

      \  rAreas();\r

      }\r\n"
    sig: function cardGameTest01(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\belinda\js\testing.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691925.8562
    size: 69588
  cTest03_2HandsRandom:
    name: cTest03_2HandsRandom
    code: "function cTest03_2HandsRandom() {\r

      \  let h1 = iMakeHand_test(dTable, [33, 7, 1, 2, 3, 4], 'h1');\r

      \  let h2 = iMakeHand_test(dTable, [13, 14, 15, 16, 17], 'h2');\r

      \  setTimeout(cTest03_2Hands_transferStarts, 1000);\r

      }\r\n"
    sig: function cTest03_2HandsRandom(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cTest03_2Hands_transferStarts:
    name: cTest03_2Hands_transferStarts
    code: "function cTest03_2Hands_transferStarts() {\r

      \  let h1 = DA.h1.iHand;\r

      \  let n1 = h1.items.length;\r

      \  let h2 = DA.h2.iHand;\r

      \  let n2 = h2.items.length;\r

      \  let c = chooseRandom(h2.items);\r

      \  DA.item = c;\r

      \  let w = c.w;\r

      \  let ov = w / 4;\r

      \  let xOffset = n1 * ov;\r

      \  console.log('w', w, 'ov', ov, 'xOffset', xOffset)\r

      \  iMoveFromTo(c, h2.div, h1.div, cTest03_2Hands_transfer, { x:
      xOffset, y: 0 });\r

      }\r\n"
    sig: function cTest03_2Hands_transferStarts(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cTest03_2Hands_transfer:
    name: cTest03_2Hands_transfer
    code: "function cTest03_2Hands_transfer() {\r

      \  let deck1 = DA.h1.deck;\r

      \  let deck2 = DA.h2.deck;\r

      \  let item = DA.item;\r

      \  deck1.addTop(item.val);\r

      \  deck2.remove(item.val);\r

      \  iPresentHand_test(dTable, DA.h1);\r

      \  iPresentHand_test(dTable, DA.h2);\r

      \  iSortHand_test(dTable, DA.h1)\r

      }\r\n"
    sig: function cTest03_2Hands_transfer(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cTest10:
    name: cTest10
    code: "function cTest10() {\r

      \  let layout = ['T', 'H A'];\r

      \  let x = createGridLayout(dTable, layout);\r

      \  console.log('x', x);\r

      }\r\n"
    sig: function cTest10(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cTest05:
    name: cTest05
    code: "function cTest05() {\r

      \  setBackgroundColor(null, 'random')\r

      \  mStyle(dTable, { h: 400, bg: 'black', padding: 10 });\r

      \  let SPEC = { layout: ['T T', 'H A'], showAreaNames: true };\r

      \  let s = '';\r

      \  let m = [];\r

      \  for (const line of SPEC.layout) {\r

      \    s += '\"' + line + '\" ';\r

      \    let letters = line.split(' ');\r

      \    let arr = [];\r

      \    for (const l of letters) { if (!isEmpty(l)) arr.push(l); }\r

      \    m.push(arr);\r

      \  }\r

      \  console.log('m', m, '\\ns', s); return;\r

      \  let rows = SPEC.layout.length;\r

      \  let hCard = 110;\r

      \  let hTitle = 20;\r

      \  let gap = 4;\r

      \  let hGrid = rows * (hCard + hTitle) + gap * (rows + 1);\r

      \  let wGrid = '80%';\r

      \  let dGrid = mDiv(dTable, { h: hGrid, w: wGrid,
      'grid-template-areas': s, bg: 'yellow' });\r

      }\r\n"
    sig: function cTest05(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cTest05B:
    name: cTest05B
    code: "function cTest05B() {\r

      \  let dGridContainer = mDiv100(dTable, { bg: 'yellow' });\r

      \  let areas = mAreas(dGridContainer);\r

      \  areas.map(x => mCenterCenterFlex(x.div));\r

      \  let dGrid = dGridContainer.children[0];\r

      \  mStyle(dGrid, { gap: 5, bg: 'blue', box: true, padding: 5 })\r

      \  console.log(dTrick, dGridContainer.children[0]);\r

      \  areas.map(x => mStyle(x.div, { h: 110 }));\r

      }\r\n"
    sig: function cTest05B(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  cTest04_2HandsRandom:
    name: cTest04_2HandsRandom
    code: "function cTest04_2HandsRandom() {\r

      \  let iarr = [33, 7, 1, 2, 3, 4], dParent = dTable, id = 'h1';\r

      \  let data = DA[id] = {};\r

      \  let h = data.deck = new Deck();\r

      \  h.init(iarr);\r

      \  let redo = true;\r

      \  h = data;\r

      \  if (nundef(h.zone)) {\r

      \    let nmax = 10, padding = 10;\r

      \    let sz = netHandSize(nmax);\r

      \    h.zone = mZone(dParent, { w: sz.w, h: sz.h, bg: 'random',
      padding: padding, rounding: 10 });\r

      \  } else {\r

      \    clearElement(h.zone);\r

      \  }\r

      \  if (nundef(h.iHand)) {\r

      \    let items = i52(h.deck.cards());\r

      \    h.iHand = iSplay(items, h.zone);\r

      \  } else if (redo) {\r

      \    clearElement(h.zone);\r

      \    let items = i52(h.deck.cards());\r

      \    h.iHand = iSplay(items, h.zone);\r

      \  }\r

      \  let h2 = iMakeHand([13, 14, 15, 16, 17], dParent, {}, 'h2');\r

      \  setTimeout(cTest03_2Hands_transferStarts, 1000);\r

      }\r\n"
    sig: function cTest04_2HandsRandom(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest01:
    name: bTest01
    code: "function bTest01() {\r

      \  let arr = [1, 1, 1, 1, 2, 1, 0, 1, 0], rows = 3, cols = 3, irow =
      0;\r

      \  console.log(bFullRow(arr, irow, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [1, 1, 1, 1, 2, 1, 1, 1, 0], rows = 3, cols = 3, irow =
      2;\r

      \  console.log(bFullRow(arr, irow, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [1, 1, 1, 1, 2, 1, 1, 1, 0], rows = 3, cols = 3, icol =
      0;\r

      \  console.log(bFullCol(arr, icol, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [1, 1, 0, 2, 1, 1, 1, 0, 1], rows = 3, cols = 3;\r

      \  console.log(bFullDiag(arr, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [2, 1, 0, 2, 1, 1, 1, 0, 1], rows = 3, cols = 3;\r

      \  console.log(bFullDiag(arr, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [2, 1, 0, 0, 2, 1, 1, 0, 1], rows = 3, cols = 3;\r

      \  console.log(bFullDiag(arr, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [2, 2, 1, 2, 1, 2, 1, 2, 2], rows = 3, cols = 3;\r

      \  console.log(bFullDiag2(arr, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [2, 1, 0, 0, 0, 1, 0, 0, 1], rows = 3, cols = 3;\r

      \  console.log(bFullDiag2(arr, rows, cols));\r

      \  console.log('============================')\r

      }\r\n"
    sig: function bTest01(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest02:
    name: bTest02
    code: "function bTest02() {\r

      \  let arr = [1, null, 1, 1, 2, 1, 0, 1, 0], rows = 3, cols = 3,
      irow = 0;\r

      \  console.log(bPartialRow(arr, irow, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [1, 1, 1, 1, 0, 1, 1, 1, 2], rows = 3, cols = 3, irow =
      2;\r

      \  console.log(bPartialRow(arr, irow, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [1, 1, 1, null, 2, 1, 1, 1, 0], rows = 3, cols = 3, icol =
      0;\r

      \  console.log(bPartialCol(arr, icol, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [1, 1, 0, 2, null, 1, 1, 0, 1], rows = 3, cols = 3;\r

      \  console.log(bPartialDiag(arr, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [2, 1, 0, 2, 1, 1, 1, 0, 1], rows = 3, cols = 3;\r

      \  console.log(bPartialDiag(arr, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [2, 1, 0, 0, 2, 1, 1, 0, 1], rows = 3, cols = 3;\r

      \  console.log(bPartialDiag(arr, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [2, 2, 1, 2, null, 2, 1, 2, 2], rows = 3, cols = 3;\r

      \  console.log(bPartialDiag2(arr, rows, cols));\r

      \  console.log('____________')\r

      \  arr = [2, 1, 0, 0, 0, 1, 0, 0, 1], rows = 3, cols = 3;\r

      \  console.log(bPartialDiag2(arr, rows, cols));\r

      }\r\n"
    sig: function bTest02(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest03:
    name: bTest03
    code: "function bTest03() {\r

      \  let arr = [[0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  ['O', 'X', 0, 0, 0, 0, 0],\r

      \  ['O', 'O', 'O', 'O', 0, 0, 0]]\r

      \  let arrf = arrFlatten(arr), rows = 6, cols = 7, irow = 5, stride
      = 4;\r

      \  console.log('arr', arr[5]);\r

      \  console.log('stride in row', irow + ':', bStrideRow(arrf, irow,
      rows, cols, stride));\r

      \  console.log('____________');\r

      \  arr = [[0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  ['O', 'X', 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 'O', 'O', 'O', 0]]\r

      \  arrf = arrFlatten(arr), rows = 6, cols = 7, irow = 5, stride =
      4;\r

      \  console.log('arr', arr[5]);\r

      \  console.log('stride in row', irow + ':', bStrideRow(arrf, irow,
      rows, cols, stride));\r

      \  console.log('____________');\r

      \  arr = [[0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  ['O', 'X', 0, 0, 0, 0, 0],\r

      \  [0, 'O', 'O', 'O', 'O', 0, 0]]\r

      \  arrf = arrFlatten(arr), rows = 6, cols = 7, irow = 5, stride =
      4;\r

      \  console.log('arr', arr[5]);\r

      \  console.log('stride in row', irow + ':', bStrideRow(arrf, irow,
      rows, cols, stride));\r

      \  console.log('____________');\r

      \  arr = [[0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  ['O', 'X', 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 'O', 'O', 'O', 'O']]\r

      \  arrf = arrFlatten(arr), rows = 6, cols = 7, irow = 5, stride =
      4;\r

      \  console.log('arr', arr[5]);\r

      \  console.log('stride in row', irow + ':', bStrideRow(arrf, irow,
      rows, cols, stride));\r

      \  console.log('____________');\r

      }\r\n"
    sig: function bTest03(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest04:
    name: bTest04
    code: "function bTest04() {\r

      \  let arr = [[0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 0, 0, 0],\r

      \  ['O', 0, 0, 0, 0, 0, 0],\r

      \  ['O', 0, 0, 0, 0, 0, 0],\r

      \  ['O', 'X', 0, 0, 0, 0, 0],\r

      \  ['O', 'O', 'O', 'O', 0, 0, 0]]\r

      \  let arrf = arrFlatten(arr), rows = 6, cols = 7, icol = 0, stride
      = 4;\r

      \  console.log('stride in col', icol + ':', bStrideCol(arrf, icol,
      rows, cols, stride));\r

      \  console.log('____________');\r

      \  arr = [[0, 0, 0, 0, 0, 0, 0],\r

      \  [0, 0, 0, 0, 'X', 0, 0],\r

      \  ['O', 0, 0, 0, 'X', 0, 0],\r

      \  ['O', 0, 0, 0, 'O', 0, 0],\r

      \  ['O', 'X', 0, 0, 'X', 0, 0],\r

      \  ['O', 'O', 'O', 'O', 0, 0, 0]]\r

      \  arrf = arrFlatten(arr), rows = 6, cols = 7, icol = 4, stride =
      4;\r

      \  console.log('stride in col', icol + ':', bStrideCol(arrf, icol,
      rows, cols, stride));\r

      \  console.log('____________');\r

      \  arr = [[0, 0, 'X', 0, 'X', 0, 0],\r

      \  [0, 0, 0, 0, 'X', 0, 0],\r

      \  ['O', 0, 0, 0, 'X', 0, 0],\r

      \  ['O', 0, 0, 0, 'X', 0, 0],\r

      \  ['O', 'X', 0, 0, 'O', 0, 0],\r

      \  ['O', 'O', 'O', 'O', 0, 0, 0]]\r

      \  arrf = arrFlatten(arr), rows = 6, cols = 7, icol = 4, stride =
      4;\r

      \  console.log('stride in col', icol + ':', bStrideCol(arrf, icol,
      rows, cols, stride));\r

      \  console.log('____________');\r

      }\r\n"
    sig: function bTest04(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest05:
    name: bTest05
    code: "function bTest05() {\r

      \  let arr = [\r

      \    [0, 0, 0, 0, 0, 0, 0],\r

      \    [0, 0, 0, 0, 0, 0, 0],\r

      \    ['O', 0, 0, 0, 0, 0, 0],\r

      \    [0, 'O', 0, 0, 0, 0, 0],\r

      \    ['O', 'X', 'O', 0, 0, 0, 0],\r

      \    ['O', 'O', 'O', 'O', 0, 0, 0]]\r

      \  let arrf = arrFlatten(arr), rows = 6, cols = 7, irow = 2, icol =
      0, stride = 4;\r

      \  console.log('stride in diag', irow, icol + ':',
      bStrideDiagFrom(arrf, irow, icol, rows, cols, stride));\r

      \  console.log('____________');\r

      \  arr = [\r

      \    [0, 0, 0, 0, 0, 0, 0],\r

      \    [0, 0, 0, 0, 0, 'X', 0],\r

      \    ['O', 0, 0, 0, 0, 0, 'X'],\r

      \    [0, 'O', 0, 0, 0, 0, 0],\r

      \    ['O', 'X', 'O', 0, 0, 0, 0],\r

      \    ['O', 'O', 'O', 'O', 0, 0, 0]]\r

      \  arrf = arrFlatten(arr), rows = 6, cols = 7, irow = 1, icol = 5,
      stride = 4;\r

      \  console.log('stride in diag', irow, icol + ':',
      bStrideDiagFrom(arrf, irow, icol, rows, cols, stride));\r

      \  console.log('____________');\r

      \  arr = [\r

      \    [0, 0, 0, 0, 0, 0, 'X'],\r

      \    [0, 0, 0, 0, 0, 'X', 0],\r

      \    ['O', 0, 0, 0, 'X', 0, 'X'],\r

      \    [0, 'O', 0, 'X', 0, 0, 0],\r

      \    ['O', 'X', 'O', 0, 0, 0, 0],\r

      \    ['O', 'O', 'O', 'O', 0, 0, 0]]\r

      \  arrf = arrFlatten(arr), rows = 6, cols = 7, irow = 0, icol = 6,
      stride = 4;\r

      \  console.log('stride in diag2', irow, icol + ':',
      bStrideDiag2From(arrf, irow, icol, rows, cols, stride));\r

      \  console.log('____________');\r

      \  arr = [\r

      \    [0, 0, 0, 0, 0, 0, 'X'],\r

      \    [0, 0, 0, 0, 0, 'X', 0],\r

      \    ['O', 0, 0, 'O', 'X', 0, 'X'],\r

      \    [0, 'O', 'O', 'X', 0, 0, 0],\r

      \    ['O', 'O', 'O', 0, 0, 0, 0],\r

      \    ['O', 'O', 'O', 'O', 0, 0, 0]]\r

      \  arrf = arrFlatten(arr), rows = 6, cols = 7, irow = 2, icol = 3,
      stride = 4;\r

      \  console.log('stride in diag2', irow, icol + ':',
      bStrideDiag2From(arrf, irow, icol, rows, cols, stride));\r

      \  console.log('____________');\r

      }\r\n"
    sig: function bTest05(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest06:
    name: bTest06
    code: "function bTest06() {\r

      \  let pos = [\r

      \    [0, 0, 0, 0, 0, 0, 0],\r

      \    [0, 0, 0, 0, 0, 0, 0],\r

      \    [0, 'X', 0, 0, 0, 0, 0],\r

      \    [0, 'X', 0, 'O', 0, 0, 0],\r

      \    ['O', 'X', 0, 'O', 0, 0, 0],\r

      \    ['O', 'X', 0, 'O', 0, 0, 0]];\r

      \  let arr = arrFlatten(pos);\r

      \  let str = bStrideCol(arr, 1, 6, 7, 4);\r

      \  console.log('stride', str)\r

      \  let w = checkWinnerC4(arr, 6, 7, 4);\r

      \  printState(arr)\r

      \  console.log('w', w);\r

      }\r\n"
    sig: function bTest06(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest07:
    name: bTest07
    code: "function bTest07() {\r

      \  let arr = [0, 0, 0, 0, 0, 0, 0, \"X\", 0, 0, 0, 0, 0, 0, \"X\",
      0, 0, \"X\", \"X\", 0, \"O\", \"X\", 0, \"X\", \"O\", \"O\", \"O\", \"X\",
      \"O\", \"X\", \"O\", \"O\", \"O\", \"X\", \"O\", \"O\", \"X\", \"O\",
      \"O\", \"O\", \"X\", \"O\"];\r

      \  let w = checkWinnerC4(arr, 6, 7, 4);\r

      \  printState(arr)\r

      \  console.log('w', w);\r

      }\r\n"
    sig: function bTest07(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest08:
    name: bTest08
    code: "function bTest08() {\r

      \  let arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      \"X\", 0, 0, 0, \"X\", 0, 0, \"O\", 0, 0, 0, \"O\", \"X\", 0, \"O\", 0, 0,
      0, \"O\", \"X\", \"O\", \"O\", \"O\", \"O\", 0];\r

      \  let w = checkWinnerC4(arr, 6, 7, 4);\r

      \  printState(arr)\r

      \  console.log('w', w);\r

      }\r\n"
    sig: function bTest08(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest09:
    name: bTest09
    code: "function bTest09() {\r

      \  let pos = [\r

      \    [0, 0, 0, 0, 0],\r

      \    [0, 0, 0, 0, 0],\r

      \    [0, 'X', 0, 0, 0],\r

      \    [0, 'X', 0, 'O', 0],\r

      \    ['O', 'X', 0, 'O', 0]];\r

      \  let arr = arrFlatten(pos);\r

      \  let nei = bNei(arr, 6, 5, 5);\r

      \  console.log(nei)\r

      \  nei = bNei(arr, 0, 5, 5);\r

      \  console.log(nei)\r

      \  nei = bNei(arr, 24, 5, 5);\r

      \  console.log(nei)\r

      }\r\n"
    sig: function bTest09(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  bTest10:
    name: bTest10
    code: "function bTest10() {\r

      \  let pos = [\r

      \    [0, 1, 2, 3, 4, 5],\r

      \    [6, 7, 8, 9, 10, 11],\r

      \    [12, 13, 14, 15, 16, 17],\r

      \    [18, 19, 20, 21, 22, 23],\r

      \    [24, 25, 26, 27, 28, 29]];\r

      \  let arr = arrFlatten(pos);\r

      \  printState(arr);\r

      \  let nei = bNei(arr, 6, 6, 6);\r

      \  console.log(nei);\r

      \  nei = bNei(arr, 7, 6, 6);\r

      \  console.log(nei);\r

      \  nei = bNei(arr, 16, 6, 6);\r

      \  console.log(nei);\r

      }\r\n"
    sig: function bTest10(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  btest11_fractions:
    name: btest11_fractions
    code: "function btest11_fractions() {\r

      \  let a = math.fraction(1, 4);\r

      \  let b = math.fraction(1, 4);\r

      \  let c = math.multiply(a, b);\r

      \  console.log(a, b, c);\r

      \  let d = math.add(a, b);\r

      \  console.log(d)\r

      \  let e = math.multiply(2, a);\r

      \  console.log(e)\r

      }\r\n"
    sig: function btest11_fractions(){}
    region: testing (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest00:
    name: kriegTest00
    code: "function kriegTest00(game) {\r

      \  game.load({ pl1: { hand: ['TH', 'KH'] }, pl2: { hand: ['9C',
      'QC'] } }); game.deck.sort(); game.print_state();\r

      \  for (let i = 0; i < 2; i++) { game.make_random_move();
      game.make_random_move(); game.print_state(); if (game.is_out_of_cards()) {
      console.log('game over!'); break; } }\r

      }\r\n"
    sig: function kriegTest00(game){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest01:
    name: kriegTest01
    code: "function kriegTest01(game) {\r

      \  game.load({ pl1: { hand: ['TH', 'QH'] }, pl2: { hand: ['9C',
      'KC'] } }); game.deck.sort(); \r

      \  game.print_state();\r

      \  for (let i = 0; i < 8; i++) {\r

      \    game.make_random_moveX();\r

      \    game.print_state();\r

      \    if (game.is_out_of_cards()) { console.log('game over!'); break;
      }\r

      \  }\r

      }\r\n"
    sig: function kriegTest01(game){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest02:
    name: kriegTest02
    code: "function kriegTest02(game) {\r

      \  game.load({ pl1: { hand: ['TH'], trick: [['2H']] }, pl2: { hand:
      ['9C', 'KC'] } }); game.deck.sort(); \r

      \  game.print_state('start:');\r

      \  for (let i = 0; i < 12; i++) {\r

      \    game.make_random_move();\r

      \    game.print_state('move:');\r

      \    game.resolve();\r

      \    game.swap_turn();\r

      \    if (i % 2 == 0) game.print_state('after resolve:');\r

      \    if (game.is_out_of_cards()) { console.log('game over!'); break;
      }\r

      \  }\r

      }\r\n"
    sig: function kriegTest02(game){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest03:
    name: kriegTest03
    code: "function kriegTest03(game) {\r

      \  game.load({ pl1: { hand: ['TH'], trick: [['2H']] }, pl2: { hand:
      ['9C'], trick: [['KC']] } }); game.deck.sort(); \r

      \  game.print_state('start:');\r

      \  for (let i = 0; i < 10; i++) {\r

      \    game.make_random_move();\r

      \    game.print_state('move:');\r

      \    game.resolve();\r

      \    game.swap_turn();\r

      \    if (i % 2 == 1) game.print_state('after resolve:');\r

      \    if (game.is_out_of_cards()) { console.log('game over!'); break;
      }\r

      \  }\r

      }\r\n"
    sig: function kriegTest03(game){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest04:
    name: kriegTest04
    code: "function kriegTest04(game) {\r

      \  game.load({ pl1: { name: 'felix', hand: ['TH'], trick: [['2H']]
      }, pl2: { name: 'max', hand: ['9C'], trick: [['2C']] } });
      game.deck.sort(); \r

      \  game.print_state('start:');\r

      \  for (let i = 0; i < 2; i++) {\r

      \    game.make_random_move();\r

      \    game.print_state('move:');\r

      \    console.log('turn', game.iturn)\r

      \    if (game.iturn == 1) {\r

      \      game.resolve();\r

      \      game.swap_turn();\r

      \      game.print_state('after resolve:');\r

      \    } else game.swap_turn();\r

      \    if (game.is_out_of_cards()) { console.log('game over! winner',
      game.winner().name); break; }\r

      \  }\r

      }\r\n"
    sig: function kriegTest04(game){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest05:
    name: kriegTest05
    code: "function kriegTest05(game) {\r

      \  game.load();\r

      \  game.print_state('start:');\r

      \  for (let i = 0; i < 25; i++) {\r

      \    game.make_random_move();\r

      \    game.print_state('move:');\r

      \    console.log('turn', game.iturn)\r

      \    if (game.iturn == 1) {\r

      \      game.resolve();\r

      \      game.swap_turn();\r

      \      game.print_state('after resolve:');\r

      \    } else game.swap_turn();\r

      \    if (game.is_out_of_cards()) { console.log('game over! winner',
      game.winner().index); break; }\r

      \  }\r

      }\r\n"
    sig: function kriegTest05(game){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest06:
    name: kriegTest06
    code: "function kriegTest06(game) {\r

      \  game.load();\r

      \  game.print_state('start:');\r

      \  let front = new GKriegFront(130, dTable);\r

      \  front.presentState(game.get_state(), dTable);\r

      \  return;\r

      \  for (let i = 0; i < 25; i++) {\r

      \    game.make_random_move();\r

      \    game.print_state('move:');\r

      \    console.log('turn', game.iturn)\r

      \    if (game.iturn == 1) {\r

      \      game.resolve();\r

      \      game.swap_turn();\r

      \      game.print_state('after resolve:');\r

      \    } else game.swap_turn();\r

      \    if (game.is_out_of_cards()) { console.log('game over! winner',
      game.winner().index); break; }\r

      \  }\r

      }\r\n"
    sig: function kriegTest06(game){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest00UI:
    name: kriegTest00UI
    code: "function kriegTest00UI() {\r

      \  setBackgroundColor(null, 'random');\r

      \  clearElement(dTable)\r

      \  let back = new GKriegBack();\r

      \  back.load({ pl1: { name: 'felix', hand: ['TH', 'KH'] }, pl2: {
      name: 'tom', hand: ['9C', 'QC'] } }); back.deck.sort();
      back.print_state();\r

      \  let front = new GKriegFront(130, dTable);\r

      \  front.presentState(back.get_state(), dTable);\r

      \  mLinebreak(dTable, 50);\r

      \  mButton('Move!', () => kriegTest00UI_engine(back, front), dTable,
      { fz: 28, matop: 10, rounding: 10, padding: 16, border: 8 },
      ['buttonClass']);\r

      }\r\n"
    sig: function kriegTest00UI(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  kriegTest00UI_engine:
    name: kriegTest00UI_engine
    code: "function kriegTest00UI_engine(back, front) {\r

      \  if (back.is_out_of_cards()) { console.log('!!!!!!!!!!!!!!!!');
      front.presentGameover(back.winner(), kriegTest00UI); return; }\r

      \  clearTable(dTable);\r

      \  back.make_random_moveX();\r

      \  back.make_random_moveX();\r

      \  back.print_state();\r

      \  front.presentState(back.get_state(), dTable);\r

      \  if (back.is_out_of_cards()) { console.log('game over!');
      front.presentGameover(back.winner(), kriegTest00UI); return; }\r

      \  mLinebreak(dTable, 50);\r

      \  mButton('Move!', () => kriegTest00UI_engine(back, front), dTable,
      { fz: 28, matop: 10, rounding: 10, padding: 16, border: 8 },
      ['buttonClass']);\r

      }\r\n"
    sig: function kriegTest00UI_engine(back, front){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  openToolbar:
    name: openToolbar
    code: "function openToolbar() {\r

      \  let d = mBy('dLeiste');\r

      \  show(d);\r

      \  mStyle(d, { w: 100 });\r

      \  Toolbar = new ToolbarClass(d);\r

      }\r\n"
    sig: function openToolbar(){}
    region: var (toolbar.js)
    filename: toolbar.js
    type: func
    fname: toolbar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\toolbar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 3541
  startClientTest:
    name: startClientTest
    code: "async function startClientTest() {\r

      \  hide('dMainContent');\r

      \  show('dGameScreen');\r

      \  setTitle('*** Testing ***');\r

      \  setSubtitle('logged in as ' + Username);\r

      \  mStyle(document.body, { opacity: 1 });\r

      \  initTable(null, 2); initSidebar(); initAux(); initScore();\r

      \  runClientTest();\r

      }\r\n"
    sig: async function startClientTest(){}
    region: funcs (clientTest.js)
    filename: clientTest.js
    type: func
    fname: clientTest.js
    path: C:\xampp\htdocs\aroot\_other\perlen\clientTest.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3327
  runClientTest:
    name: runClientTest
    code: "function runClientTest() {\r

      \  imageFileTests(); \r

      }\r\n"
    sig: function runClientTest(){}
    region: funcs (clientTest.js)
    filename: clientTest.js
    type: func
    fname: clientTest.js
    path: C:\xampp\htdocs\aroot\_other\perlen\clientTest.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3327
  imageFileTests:
    name: imageFileTests
    code: "function imageFileTests() {\r

      \  initTable(); Items = {};\r

      \  Socket = io(SERVERURL);\r

      \  let item = mFileInput(dTable);\r

      \  mLinebreak(dTable, 25);\r

      \  let btn = mButton('upload', () => mSocketUploadImage(item,
      Socket), dTable);\r

      }\r\n"
    sig: function imageFileTests(){}
    region: test (clientTest.js)
    filename: clientTest.js
    type: func
    fname: clientTest.js
    path: C:\xampp\htdocs\aroot\_other\perlen\clientTest.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3327
  mSocketUploadImage:
    name: mSocketUploadImage
    code: "function mSocketUploadImage(item, socket) {\r

      \  if (!item.loaded) {\r

      \    console.log('file not ready!click again!'); return;\r

      \  }\r

      \  socket.emit('testImageUpload', { filename: item.filename, image:
      item.base64 });\r

      }\r\n"
    sig: function mSocketUploadImage(item, socket){}
    region: test (clientTest.js)
    filename: clientTest.js
    type: func
    fname: clientTest.js
    path: C:\xampp\htdocs\aroot\_other\perlen\clientTest.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3327
  mFileInput:
    name: mFileInput
    code: "function mFileInput(dParent, dPreviewParent) {\r

      \  let dInput = mDiv(dParent, { padding: 4, h: 100, bg: '#fff',
      align: 'center', cursor: 'pointer', fg: 'gray' });\r

      \  let dMessage = mDiv(dInput, {}, null, 'click to browse');\r

      \  let dPreview = mDiv(dInput);\r

      \  var fakeInput = document.createElement(\"input\"); \r

      \  fakeInput.type = \"file\";\r

      \  fakeInput.accept = \"image/*\";\r

      \  fakeInput.multiple = false;\r

      \  dInput.onclick = () => { fakeInput.click(); };\r

      \  let item = { fileObject: null, filename: null, imgData: null,
      img: null, loaded: false };\r

      \  iAdd(item, { div: dInput, dPreview: dPreview });\r

      \  var img = mCreate(\"img\"); mAppend(dPreview, img);\r

      \  mStyle(img, { wmax: 100, hmax: 70, mabottom: 4 })\r

      \  fakeInput.onchange =  function() {\r

      \    const reader = new FileReader();\r

      \    reader.onload = function() {\r

      \      img.src=this.result;\r

      \      const base64 = this.result.replace(/.*base64,/, '');\r

      \      Socket.emit('image2', base64);\r

      \    };\r

      \    reader.readAsDataURL(this.files[0]);\r

      \  };\r

      \  return item;\r

      }\r\n"
    sig: function mFileInput(dParent, dPreviewParent){}
    region: test (clientTest.js)
    filename: clientTest.js
    type: func
    fname: clientTest.js
    path: C:\xampp\htdocs\aroot\_other\perlen\clientTest.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3327
  mFilePreview:
    name: mFilePreview
    code: "function mFilePreview(item, dParent, allowMultipleChildren = true) {\r

      \  let imgFile = item.fileObject;\r

      \  if (!allowMultipleChildren) clearElement(dParent);\r

      \  var img = mCreate(\"img\"); mAppend(dParent, img);\r

      \  mStyle(img, { wmax: 100, hmax: 70, mabottom: 4 })\r

      \  var reader = new FileReader();\r

      \  reader.onload = function (e) {\r

      \    img.src = e.target.result;\r

      \    let bytes = item.bytes = new Uint8Array(e.target.result);\r

      \    Socket.emit('image1', bytes);\r

      \    item.filenameWithExt = imgFile.name;\r

      \    item.filename = stringBefore(imgFile.name, '.');\r

      \    item.ext = stringAfter(imgFile.name, '.');\r

      \    item.img = img;\r

      \    item.previewParent = dParent;\r

      \    item.loaded = true;\r

      \    console.log('item', item);\r

      \  }\r

      \  reader.readAsArrayBuffer(imgFile);\r

      }\r\n"
    sig: function mFilePreview(item, dParent, allowMultipleChildren = true){}
    region: test (clientTest.js)
    filename: clientTest.js
    type: func
    fname: clientTest.js
    path: C:\xampp\htdocs\aroot\_other\perlen\clientTest.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 3327
  set_start_data_from_fen:
    name: set_start_data_from_fen
    code: "function set_start_data_from_fen(fen, game) {\r

      \  let parts = fen.split(',');\r

      \  for (const p of parts) {\r

      \    let [name, startlevel, lang] = p.split(':');\r

      \    startlevel = Number(startlevel);\r

      \    set_startlevel(name, game, startlevel);\r

      \    set_preferred_lang(name, lang);\r

      \  }\r

      }\r\n"
    sig: function set_start_data_from_fen(fen, game){}
    region: funcs (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_intro:
    name: got_intro
    code: "function got_intro(obj) {\r

      \  Session.users = obj.users;\r

      \  Session.users_by_name = {};\r

      \  for (const u of Session.users) {\r

      \    Session.users_by_name[u.username] = u;\r

      \    if (isdef(DB.users[u.username])) {
      copyKeys(DB.users[u.username], u); }\r

      \  }\r

      \  present_intro();\r

      }\r\n"
    sig: function got_intro(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_user_in_intro_screen:
    name: get_user_in_intro_screen
    code: "function get_user_in_intro_screen(username) {\r

      \  load_user(username);\r

      \  get_dictionary();\r

      \  got_user_in_intro_screen();\r

      }\r\n"
    sig: function get_user_in_intro_screen(username){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_dictionary:
    name: get_dictionary
    code: "function get_dictionary(){\r

      \  let u = DB.users[Session.cur_user];\r

      \  let lang = valf(u.lang,'E');\r

      \  if (isdef(Dictionary) && isdef(Dictionary[lang])) return;\r

      \  to_server(lang,'dictionary');\r

      }\r\n"
    sig: function get_dictionary(){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_dictionary:
    name: got_dictionary
    code: "function got_dictionary(obj){\r

      \  let lang = obj.lang;\r

      \  let x=obj.dict;\r

      \  Dictionary[lang] = to_words(x);\r

      \  return;\r

      \  let keys = get_keys(obj).filter(x=>endsWith(x,'dict'));\r

      \  console.log('keys',keys)\r

      \  if (isEmpty(keys)) return;\r

      \  if (nundef(Dictionary)) Dictionary = {};\r

      \  let l = obj.lang;\r

      \  for(const k of keys){\r

      \    if (nundef(Dictionary[l])){\r

      \      Dictionary[l] = to_words(obj[k]);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function got_dictionary(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  to_words:
    name: to_words
    code: "function to_words(x) {\r

      \  let list = x.split('\\n');\r

      \  let di = {};\r

      \  list.map(x => di[x.toLowerCase()] = x);\r

      \  return di;\r

      }\r\n"
    sig: function to_words(x){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  got_user_in_intro_screen:
    name: got_user_in_intro_screen
    code: "function got_user_in_intro_screen(){\r

      \  show('dIntro'); clearElement('dIntro');\r

      \  intro_show_user_image(Session.cur_user);\r

      \  present_wait_for_table_to_start();\r

      }\r\n"
    sig: function got_user_in_intro_screen(){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_non_admin_reload:
    name: get_non_admin_reload
    code: "function get_non_admin_reload() { to_server(Session.cur_user,
      'non_admin_reload'); }\r\n"
    sig: function get_non_admin_reload(){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_non_admin_reload:
    name: got_non_admin_reload
    code: "function got_non_admin_reload(obj) {\r

      \  in_game_off();\r

      \  in_game_open_prompt_off();\r

      \  console.log('got_non_admin reload: obj',obj)\r

      \  set_tables_by_game(obj);\r

      \  tables = obj.tables;\r

      \  if (isEmpty(tables)) {\r

      \    console.assert(nundef(Session.cur_tid), 'reload no table still
      cur_tid!!!!!')\r

      \    get_user_in_intro_screen();\r

      \  } else {\r

      \    get_play_start();\r

      \  }\r

      }\r\n"
    sig: function got_non_admin_reload(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_games:
    name: get_games
    code: "function get_games() {\r

      \  let d = mBy('inner_left_panel');\r

      \  d.innerHTML = \"GAMES ARE DISPLAYED HERE!\";\r

      \  get_data({ assets: nundef(Syms) }, 'games');\r

      }\r\n"
    sig: function get_games(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  got_games:
    name: got_games
    code: "function got_games(obj) {\r

      \  let tables = obj.tables;\r

      \  let bygame = set_tables_by_game(obj, false);\r

      \  set_most_recent_table_as_cur_tid(tables);\r

      \  present_games();\r

      }\r\n"
    sig: function got_games(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  present_games:
    name: present_games
    code: "function present_games() {\r

      \  let html = `<div id='game_menu' style=\"text-align: center;
      animation: appear 1s ease both\">`;\r

      \  for (const g of dict2list(DB.games)) { html +=
      ui_game_menu_item(g, Session.tables_by_game[g.id]); }\r

      \  mBy('inner_left_panel').innerHTML = html;\r

      \  mCenterCenterFlex(mBy('game_menu'));\r

      }\r\n"
    sig: function present_games(){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\base\js\present.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 2927
  get_modify_table:
    name: get_modify_table
    code: "function get_modify_table() {\r

      \  let uname = Session.cur_user;\r

      \  let table = Session.cur_table;\r

      \  if (nundef(table)) {alert('no table available!');return;}\r

      \  let game = Session.cur_game = table.game;\r

      \  let tid = Session.cur_tid = table.id;\r

      \  Session.scoring_complete = false;\r

      \  let t = {};\r

      \  t.id = Session.cur_tid;\r

      \  t.players = valf(lookup(Session, ['game_options',
      'players']),table.players);  \r

      \  t.options = valf(lookup(Session, ['game_options', 'game']),
      {});\r

      \  t.player_init = {};\r

      \  t.fen = get_start_data_fen(table.players, game);\r

      \  to_server(t, 'modify_table');\r

      }\r\n"
    sig: function get_modify_table(){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_modify_table:
    name: got_modify_table
    code: "function got_modify_table(obj) { Session.cur_tid = obj.table.id;
      Session.cur_table = obj.table; present_table(obj); }\r\n"
    sig: function got_modify_table(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_create_table:
    name: get_create_table
    code: "function get_create_table(user, game) {\r

      \  Session.cur_tid = Session.cur_table = null;\r

      \  Session.scoring_complete = false;\r

      \  let t = {};\r

      \  t.friendly = generate_friendly_table_name();\r

      \  t.game = Session.cur_game;\r

      \  t.host = Session.cur_user;\r

      \  t.players = valf(lookup(Session, ['game_options', 'players']),
      get_def_players_for_user(Session.cur_user));\r

      \  t.fen = 'noneed';\r

      \  t.options = valf(lookup(Session, ['game_options', 'game']),
      {});\r

      \  t.status = 'started'; \r

      \  t.host_status = 'joined'; \r

      \  t.player_status = 'joined'; \r

      \  t.player_init = {};\r

      \  t.fen = get_start_data_fen(t.players, t.game);\r

      \  to_server(t, 'create_table_and_start');\r

      }\r\n"
    sig: function get_create_table(user, game){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_create_table:
    name: got_create_table
    code: "function got_create_table(obj) { Session.cur_tid = obj.table.id;
      Session.cur_table = obj.table; present_table(obj); }\r\n"
    sig: function got_create_table(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_play:
    name: get_play
    code: "function get_play(e) {\r

      \  get_data({ username: Username, gamename: CURRENT_GAME, assets:
      nundef(Syms) }, \"play\");\r

      }\r\n"
    sig: function get_play(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  got_play:
    name: got_play
    code: "function got_play(obj) { present_table(obj); }\r\n"
    sig: function got_play(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_play_start:
    name: get_play_start
    code: "function get_play_start() { Session.cur_menu = 'play'; to_server({ uname:
      Session.cur_user, tid: Session.cur_tid }, 'play_start'); }\r\n"
    sig: function get_play_start(){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_play_start:
    name: got_play_start
    code: "function got_play_start(obj) { \r

      \  console.log('got_play_start',obj);\r

      \  let table = obj.table;\r

      \  console.log('fen',table.fen);\r

      \  let lang = get_preferred_lang(Session.cur_user);\r

      \  set_start_data_from_fen(obj.table.fen,obj.table.game);\r

      \  let lang2 = get_preferred_lang(Session.cur_user);\r

      \  if (lang != lang2) get_dictionary();\r

      \  present_table(obj); \r

      }\r\n"
    sig: function got_play_start(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_send_move:
    name: get_send_move
    code: "function get_send_move() {\r

      \  let me = Session.cur_players[Session.cur_user];\r

      \  let o = { tid: Session.cur_tid, player_status: me.player_status,
      score: me.score, state: me.state, uname: me.name };\r

      \  to_server(o, 'send_move');\r

      }\r\n"
    sig: function get_send_move(){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_send_move_old:
    name: get_send_move_old
    code: "function get_send_move_old() {\r

      \  let me = Session.cur_players[Session.cur_user];\r

      \  if (me.player_status == 'lamov') me.player_status = 'done'; \r

      \  let o = { tid: Session.cur_tid, player_status: me.player_status,
      score: me.score, state: me.state, uname: me.name };\r

      \  to_server(o, 'send_move');\r

      }\r\n"
    sig: function get_send_move_old(){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_send_move:
    name: got_send_move
    code: "function got_send_move(obj) { present_table(obj); }\r\n"
    sig: function got_send_move(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_tables:
    name: get_tables
    code: "function get_tables() { to_server(Session.cur_user, \"get_tables\");
      }\r\n"
    sig: function get_tables(){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_tables:
    name: got_tables
    code: "function got_tables(obj) {\r

      \  set_tables_by_game(obj);\r

      \  if (isdef(Session.cur_tid)) { get_play(); } else get_games();\r

      }\r\n"
    sig: function got_tables(obj){}
    region: get (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  present_wait_for_table_to_start:
    name: present_wait_for_table_to_start
    code: "function present_wait_for_table_to_start(){\r

      \  status_message(`hi, ${capitalize(Session.cur_user)}, a game is
      starting soon...`, { top: 330, classname: 'slow_gradient_blink' });  \r

      \  poll_for_table_started();\r

      }\r\n"
    sig: function present_wait_for_table_to_start(){}
    region: guest (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  present_wait_for_table_to_start_after_reload:
    name: present_wait_for_table_to_start_after_reload
    code: "function present_wait_for_table_to_start_after_reload(){\r

      \  status_message(`table has been canceled by host, new game
      starting soon...`, { top: 330, classname: 'slow_gradient_blink' });  \r

      \  poll_for_table_started();\r

      }\r\n"
    sig: function present_wait_for_table_to_start_after_reload(){}
    region: guest (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  onclick_stop_polling:
    name: onclick_stop_polling
    code: "function onclick_stop_polling(){ stop_polling(); }\r\n"
    sig: function onclick_stop_polling(){}
    region: onclick (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  onclick_toggle_polling:
    name: onclick_toggle_polling
    code: "function onclick_toggle_polling() { toggle_polling_status(); }\r\n"
    sig: function onclick_toggle_polling(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_gameover_screen:
    name: onclick_gameover_screen
    code: "function onclick_gameover_screen() {\r

      \  let game = Session.cur_game;\r

      \  let winners = Session.winners;\r

      \  if (!Session.scoring_complete) {\r

      \    console.log('scoring...')\r

      \    decrease_handicap_if_winstreak(winners, game);\r

      \    increase_handicap_if_losestreak();\r

      \    Session.scoring_complete = true;\r

      \  }\r

      \  if (is_admin()) {\r

      \    let txt = jsyaml.dump(DB);\r

      \    DA.next = get_games;\r

      \    let fen = get_score_fen_from_cur_players();\r

      \    to_server({ tid: Session.cur_tid, fen: fen, uname:
      Session.cur_user, db: txt }, 'save_and_delete');\r

      \  }else {\r

      \    get_got_user_in_intro_screen();\r

      \    let t = Session.cur_table;\r

      \    let fen = t.status == 'past' ? t.fen :
      get_score_fen_from_cur_players();\r

      \    intro_create_score_table(fen, t.friendly);\r

      \  }\r

      }\r\n"
    sig: function onclick_gameover_screen(){}
    region: onclick (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  onclick_settings:
    name: onclick_settings
    code: "function onclick_settings() { if (Session.cur_menu == 'games') {
      alert('click on a game icon!'); return; }
      present_game_options(Session.cur_tid); }\r\n"
    sig: function onclick_settings(){}
    region: admin (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_resume_game_button:
    name: onclick_resume_game_button
    code: "function onclick_resume_game_button() {\r

      \  console.assert(is_admin(), 'non admin is creating
      game!!!!!!!!!!!');\r

      \  collect_game_options();\r

      \  get_modify_table();\r

      }\r\n"
    sig: function onclick_resume_game_button(){}
    region: settings (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  from_server:
    name: from_server
    code: "function from_server(result, type) {\r

      \  if (type == \"modify_table\") { console.log('______from server:',
      type, '\\nresult:', result); }\r

      \  if (result.trim() == \"\") return;\r

      \  var obj = JSON.parse(result);\r

      \  convert_from_server(obj); \r

      \  switch (type) {\r

      \    case \"intro\": got_intro(obj); break;\r

      \    case 'non_admin_reload': got_non_admin_reload(obj); break;\r

      \    case \"games\": got_games(obj); break;\r

      \    case \"play_start\": got_play_start(obj); break;\r

      \    case \"play\": got_play(obj); break;\r

      \    case 'modify_table': got_modify_table(obj); break;\r

      \    case 'create_table_and_start': got_create_table(obj);break;\r

      \    case 'send_move': got_send_move(obj); break;\r

      \    case 'seen': poll_for_table_seen_or_deleted(); break;\r

      \    case 'standard_assets':\r

      \    case 'assets': assets_parse(obj.response); break;\r

      \    case 'dictionary': got_dictionary(obj); break;\r

      \    case \"get_tables\": got_tables(obj); break;\r

      \    case \"get_user_game_tables\": got_user_game_tables(obj);
      break;\r

      \    case \"poll_table_started\": check_poll_table_started(obj);
      break;\r

      \    case \"poll_table_show\": check_poll_table_show(obj); break;\r

      \    case \"poll_table_seen\": check_poll_table_seen(obj); break;\r

      \    case \"get_past_tables\": test_user_endscreen(obj); break;\r

      \    case \"contacts\": present_contacts(obj); break;\r

      \    case \"login\": present_login(obj); break;\r

      \    case \"dbsave\": console.log('db has been saved to server:');
      break; \r

      \    case 'delete_table': get_games(obj); break;\r

      \    case 'save_and_delete': alert(`${obj.message},
      ranking:${obj.fen}`);\r

      \      console.assert(is_admin(), 'SAVE_AND_DELETE NOT SENT BEI
      ADMIN!!!!');\r

      \      get_games();\r

      \      break;\r

      \    //#region sequence if dont join players automatically\r

      \    case 'create_table':\r

      \      Session.cur_tid = obj.table.id;\r

      \      Session.cur_table = obj.table;\r

      \      break;\r

      \    case \"join_table\":\r

      \      status_message('You have joined the game! Wait for the host
      to start it!');\r

      \      update_cur_table(obj, 'red');\r

      \      break;\r

      \    case \"toggle_join\":\r

      \      let t = obj.table;\r

      \      let st = obj.player_status;\r

      \      update_cur_table(obj, st == 'joined' ? 'red' : 'orange');\r

      \      status_message(`You have ${st == 'joined' ? 'joined' :
      'left'} the game! Wait for the host to start it!`);\r

      \      break;\r

      \    case \"start_table\":\r

      \      update_cur_table(obj, 'green');\r

      \      status_message('You have started the game! ',
      obj.table.status);\r

      \      break;\r

      \    //#endregion\r

      \    default: break;\r

      \  }\r

      \  danext();\r

      }\r\n"
    sig: function from_server(result, type){}
    region: server (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  to_server:
    name: to_server
    code: "function to_server(req, type, to_php = true) {\r

      \  where(type);\r

      \  if (!to_php) {\r

      \    server_offline(req, type);\r

      \  } else if (is_online()) {\r

      \    server_online(req, type);\r

      \  } else {\r

      \    if (type == 'chat') { alert('no internet!');
      mClassReplace(mBy(\"label_chat\"), 'enabled', 'disabled'); }\r

      \    server_offline(req, type);\r

      \  }\r

      }\r\n"
    sig: function to_server(req, type, to_php = true){}
    region: send (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  server_online:
    name: server_online
    code: "function server_online(req, type) {\r

      \  var xml = new XMLHttpRequest();\r

      \  var loader_holder = mBy(\"loader_holder\");\r

      \  loader_holder.className = \"loader_on\";\r

      \  xml.onload = function () {\r

      \    if (xml.readyState == 4 || xml.status == 200) {\r

      \      loader_holder.className = \"loader_off\";\r

      \      from_server(xml.responseText, type);\r

      \    }\r

      \  }\r

      \  var data = { req: req, type: type };\r

      \  data = JSON.stringify(data);\r

      \  xml.open(\"POST\", \"./server/apisi.php\", true);\r

      \  xml.send(data);\r

      }\r\n"
    sig: function server_online(req, type){}
    region: send (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  server_offline:
    name: server_offline
    code: "function server_offline(req, type) {\r

      \  if (type == 'user_info') console.log('_______to server offline!',
      'req', req, 'type', type, 'Session.cur_user', Session.cur_user);\r

      \  let response = {};\r

      \  switch (type) {\r

      \    case 'user_info':\r

      \    case 'account':\r

      \      if (nundef(req.user)) req.user = Session.cur_user;\r

      \      let u = response.message = DB.users[req.user];\r

      \      console.log('udata', u);\r

      \      response.name = u.name;\r

      \      break;\r

      \    case 'contacts':\r

      \      let usernames = get_user_names().filter(x => x !=
      Session.cur_user);\r

      \      response.users = usernames.map(x => DB.users[x]);\r

      \      break;\r

      \  }\r

      \  response.type = type;\r

      \  from_server(JSON.stringify(response), type);\r

      }\r\n"
    sig: function server_offline(req, type){}
    region: send (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  get_data:
    name: get_data
    code: "function get_data(find, type) {\r

      \  var xml = new XMLHttpRequest();\r

      \  var loader_holder = mBy(\"loader_holder\");\r

      \  loader_holder.className = \"loader_on\";\r

      \  xml.onload = function () {\r

      \    if (xml.readyState == 4 || xml.status == 200) {\r

      \      loader_holder.className = \"loader_off\";\r

      \      handle_result(xml.responseText, type);\r

      \    }\r

      \  }\r

      \  var data = {};\r

      \  data.find = find;\r

      \  data.data_type = type;\r

      \  data = JSON.stringify(data);\r

      \  xml.open(\"POST\", \"test.php\", true);\r

      \  xml.send(data);\r

      }\r\n"
    sig: function get_data(find, type){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  handle_result:
    name: handle_result
    code: "function handle_result(result, cmd) {\r

      \  if (verbose) console.log('cmd', cmd, '\\nresult', result); \r

      \  if (result.trim() == \"\") return;\r

      \  let obj;\r

      \  try { obj = JSON.parse(result); } catch { console.log('ERROR:',
      result); }\r

      \  if (Clientdata.AUTORESET) { Clientdata.AUTORESET = false; if
      (result.auto == true) { console.log('message bounced'); return; } }\r

      \  DA.result = jsCopy(obj); \r

      \  processServerdata(obj, cmd);\r

      \  switch (cmd) {\r

      \    case \"assets\": load_assets(obj); start_with_assets();
      break;\r

      \    case \"users\": show_users(); break;\r

      \    case \"tables\": show_tables(); break;\r

      \    case \"delete_table\":\r

      \    case \"delete_tables\": show_tables(); break;\r

      \    case \"table1\":\r

      \      update_table();\r

      \      console.log('cmd', cmd)\r

      \      console.log('obj', obj)\r

      \      for (const k in obj) { if (isLiteral(obj[k])) {
      console.log(k, obj[k]); } }\r

      \      clear_timeouts();\r

      \      gamestep();\r

      \      break;\r

      \    case \"gameover\":\r

      \    case \"table\":\r

      \    case \"startgame\":\r

      \      update_table();\r

      \      if (Z.skip_presentation) {
      Z.func.state_info(mBy('dTitleLeft')); autopoll(); return; }\r

      \      clear_timeouts();\r

      \      gamestep();\r

      \      break;\r

      \  }\r

      }\r\n"
    sig: function handle_result(result, cmd){}
    region: funcs (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  populate_game_settings:
    name: populate_game_settings
    code: "function populate_game_settings(dParent,tid) {\r

      \  if (nundef(tid)) Session.game_options.game = {};\r

      \  let poss = DB.games[Session.cur_game].options;\r

      \  if (nundef(poss)) return;\r

      \  for (const p in poss) {\r

      \    let key = p;\r

      \    let val = poss[p];\r

      \    if (isString(val)) {\r

      \      let list = val.split(','); \r

      \      let fs = mRadioGroup(dParent, {}, `d_${key}`, key);\r

      \      let checkfirst = nundef(tid); \r

      \      for (const v of list) {\r

      \        let d = mRadio(v, isNumber(v) ? Number(v) : v, fs, {
      cursor: 'pointer' }, null, key);\r

      \        if (checkfirst || lookup(Session.game_options.game, [key])
      == v) {\r

      \          let inp = d.firstChild;\r

      \          inp.setAttribute('checked', true);\r

      \          checkfirst = false;\r

      \        }\r

      \      }\r

      \      measure_fieldset(fs);\r

      \    } \r

      \  }\r

      }\r\n"
    sig: function populate_game_settings(dParent,tid){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  populate_playmode:
    name: populate_playmode
    code: "function populate_playmode(d, modes) {\r

      \  let group = mRadioGroup(d, {}, 'd_mode', 'play mode');\r

      \  modes = modes.split(',');\r

      \  for (const m of modes) {\r

      \    let name = m == 'pp' ? 'pass&play' : m == 'multi' ?
      'multiplayer' : m;\r

      \    let d = mRadio(name, m, group, { cursor: 'default' }, null,
      'mode');\r

      \    let inp = d.firstChild;\r

      \    inp.setAttribute('disabled', true);\r

      \    if (m != 'multi') mClass(d, 'disabled');\r

      \  }\r

      \  measure_fieldset(group);\r

      \  let mode = Session.game_options.mode =
      modes.includes(Session.def_playmode) ? Session.def_playmode : modes[0];\r

      \  let el = mBy(`i_mode_${mode}`).checked = true;\r

      }\r\n"
    sig: function populate_playmode(d, modes){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  populate_players:
    name: populate_players
    code: "function populate_players(list) {\r

      \  let d = mBy('d_players');\r

      \  if (nundef(d)) return;\r

      \  mRemoveChildrenFromIndex(d, 1);\r

      \  Session.game_options.players = [];\r

      \  for (const name of list) {\r

      \    Session.game_options.players.push(name); \r

      \    let d1 = mDiv(d,{},'dpl_'+name);\r

      \    let b=mButton('edit',ev=>open_player_editor(ev),d1);\r

      \    let label = `${name} (${get_startlevel(name,Session.cur_game)}
      ${get_preferred_lang(name)})`;\r

      \    if (name == Session.cur_user) { let el = mToggle(label, name,
      d1,{display:'inline'}); el.firstChild.setAttribute('disabled', true); }\r

      \    else { mToggle(label, name, d1, { cursor:
      'pointer',display:'inline' }); }\r

      \  }\r

      \  measure_fieldset(d);\r

      \  let styles = { fz: 14, wmin: '90%',matop:8 };\r

      \  mButton('clear all', clear_all_players, d_players, styles, null,
      'b_clear_players');\r

      \  mButton('add players', add_players, d_players, styles, null,
      'b_add_players');\r

      \  mButton('hand select', hand_select, d_players, styles, null,
      'b_select_players');\r

      \  mButton('reduce', reduce_to_current_players, d_players, styles,
      null, 'b_reduce_players');\r

      \  mButton('show all', show_all_players, d_players, styles, null,
      'b_show_all_players');\r

      }\r\n"
    sig: function populate_players(list){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  reduce_to_current_players:
    name: reduce_to_current_players
    code: "function reduce_to_current_players(){\r

      \  let d = mBy('d_players');\r

      \  let checkboxes = d.getElementsByTagName('input');\r

      \  let list = [];\r

      \  for (const chk of checkboxes) {\r

      \    if (chk.checked) {\r

      \      list.push(chk.value);\r

      \    }\r

      \  }\r

      \  populate_players(list);\r

      }\r\n"
    sig: function reduce_to_current_players(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  show_all_players:
    name: show_all_players
    code: "function
      show_all_players(){\tpopulate_players(get_def_players_for_user(Session.cu\
      r_user));}\r\n"
    sig: function show_all_players(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  present_resume_game_options:
    name: present_resume_game_options
    code: "function present_resume_game_options() {\r

      \  let gname = Session.cur_game;\r

      \  let g = DB.games[gname];\r

      \  Session.game_options = {};\r

      \  let d = mBy('inner_left_panel');\r

      \  let game = DB.games[Session.cur_game];\r

      \  let html = `\r

      \  <div id=\"lobby_holder\" class=\"layout_lobby\">\r

      \    <div id=\"lobby_header\"><div class='logo'>⛱</div>Settings for
      ${game.friendly}</div>\r

      \    <div id=\"lobby_main\">\r

      \        <div id='d_game_options' class='vCenterChildren'>\r

      \        </div>\r

      \        <div class=\"button_wrapper\">\r

      \          <button id='bJoinGame' class='button'
      style='display:none'>join game</button>\r

      \          <button id='bCreateGame' class='button'
      onclick='onclick_create_game_button()' style='display:none'>create
      game</button>\r

      \          <button id='bResumeGame' class='button'
      onclick='onclick_resume_game_button()'>resume game</button>\r

      \          <button id='bLobbyOk' class='button'
      onclick='onClickCreateGameOk()' style='display:none'>Ok</button>\r

      \          <button id='bLobbyCancel' class='button'
      onclick='onClickCreateGameCancel()' style='display:none'>Cancel</button>\r

      \          <button id='bLobbyJoinOk' class='button'
      onclick='onClickJoinGameOk()' style='display:none'>Ok</button>\r

      \          <button id='bLobbyJoinCancel' class='button'
      onclick='onClickJoinGameCancel()' style='display:none'>Cancel</button>\r

      \        </div>\r

      \      </div>\r

      \    </div>\r

      \  `;\r

      \  d.innerHTML = html;\r

      \  let d1 = mBy('d_game_options');\r

      \  group = mRadioGroup(d1, { wmin: 190 }, 'd_players', 'players');
      \r

      \  populate_game_settings(d1);\r

      \  populate_playmode(d1, g.av_modes);\r

      \  populate_players(get_def_players_for_user(Session.cur_user));\r

      }\r\n"
    sig: function present_resume_game_options(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  close_game_options:
    name: close_game_options
    code: "function close_game_options() { mBy('inner_left_panel').innerHTML = '';
      }\r\n"
    sig: function close_game_options(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  extract_game_options:
    name: extract_game_options
    code: "function extract_game_options() {\r

      \  let opt = Session.game_options;\r

      \  return Session.game_options;\r

      }\r\n"
    sig: function extract_game_options(){}
    region: game (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  get_lobby:
    name: get_lobby
    code: "function get_lobby(tid) {\r

      \  let game = DB.games[Session.cur_game];\r

      \  let resume_or_create = isdef(tid) ? 'resume' : 'create';\r

      \  let html = `\r

      \  <div id=\"lobby_holder\" class=\"layout_lobby\">\r

      \    <div id=\"lobby_header\"><div class='logo'>⛱</div>Settings for
      ${game.friendly}</div>\r

      \    <div id=\"lobby_main\">\r

      \        <div id='d_game_options' class='vCenterChildren'>\r

      \        </div>\r

      \        <div class=\"button_wrapper\">\r

      \          <button class='button'
      onclick='onclick_${resume_or_create}_game_button()'>${resume_or_create}
      game</button>\r

      \        </div>\r

      \      </div>\r

      \    </div>\r

      \  `;\r

      \  return html;\r

      }\r\n"
    sig: function get_lobby(tid){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  present_game_options:
    name: present_game_options
    code: "function present_game_options(tid) {\r

      \  if (isdef(tid)){\r

      \    let table = Session.cur_table; \r

      \    Session.cur_game = table.game;\r

      \    if (nundef(Session.game_options)) Session.game_options =
      table_options_to_game_options(table);\r

      \  }else{\r

      \    Session.game_options = {};\r

      \  }\r

      \  let gname = Session.cur_game;\r

      \  let g = DB.games[gname];\r

      \  let d = mBy('inner_left_panel');\r

      \  d.innerHTML = get_lobby(tid);\r

      \  let d1 = mBy('d_game_options');\r

      \  group = mRadioGroup(d1, { wmin: 190 }, 'd_players', 'players');
      \r

      \  populate_game_settings(d1,tid);\r

      \  populate_playmode(d1, g.av_modes); \r

      \ 
      populate_players(isdef(tid)?get_keys(Session.cur_players):get_def_players\
      _for_user(Session.cur_user));\r

      }\r\n"
    sig: function present_game_options(tid){}
    region: funcs (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  mTextArea:
    name: mTextArea
    code: "function mTextArea(rows, cols, dParent, styles = {}, id) {\r

      \  let html = `<textarea id=\"${id}\" rows=\"${rows}\"
      cols=\"${cols}\" wrap=\"hard\"></textarea>`;\r

      \  let t = mCreateFrom(html);\r

      \  mAppend(dParent, t);\r

      \  mStyle(t, styles);\r

      \  return t;\r

      }\r\n"
    sig: function mTextArea(rows, cols, dParent, styles = {}, id){}
    region: CLEANUP (basemin.js)
    filename: basemin.js
    type: func
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\games\basemin.js
    datetime: 2023-01-17-06-17
    timestamp: 1673965061239.3267
    size: 165299
  clear_all_players:
    name: clear_all_players
    code: "function clear_all_players(){\r

      \  console.log('trying to clear!!!')\r

      \  let d=mBy('d_players');\r

      \  let children = d.getElementsByTagName('input');\r

      \  console.log('children',children);\r

      \  for(const ch of children){if (!ch.getAttribute('disabled'))
      ch.checked=false;}\r

      }\r\n"
    sig: function clear_all_players(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  open_player_editor:
    name: open_player_editor
    code: "function open_player_editor(ev){\r

      \  console.log('ev',ev)\r

      \  let id = evToId(ev);\r

      \  console.log('open player editor for player ',id);\r

      \  let uname = id.substring(4);\r

      \  let game = Session.cur_game;\r

      \  console.log('player is',uname);\r

      \  let res = prompt(`enter [level lang] for player ${uname}: `);\r

      \  console.log('user entered',res);\r

      \  if (nundef(res) || isEmpty(res)) return; \r

      \  let parts = splitAtAnyOf(res,' ,');\r

      \  let level='none',lang='none';\r

      \  if (parts.length >=1)
      {level=set_startlevel(uname,game,Number(parts[0]));}\r

      \  if (parts.length >=2) {lang=set_preferred_lang(uname,parts[1]);
      }\r

      \  console.log('selected language',lang,'and level',level);\r

      \  console.log('should save DB',DB.users[uname]);\r

      \  if (isdef(DB.users[uname])) db_save();\r

      \  populate_players(Session.game_options.players);\r

      }\r\n"
    sig: function open_player_editor(ev){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  add_players:
    name: add_players
    code: "function add_players(){\r

      \  let res = prompt('enter player names to be added: ');\r

      \  let parts = splitAtAnyOf(res,' ,');\r

      \  let list = Session.game_options.players.slice(1); \r

      \  for(const p of parts) {\r

      \    let name = p.toLowerCase().trim();\r

      \    if (isdef(DB.users[name])) addIf(list,name);\r

      \  }\r

      \  list.sort();list.unshift(Session.cur_user);\r

      \  populate_players(list);\r

      }\r\n"
    sig: function add_players(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  hand_select:
    name: hand_select
    code: "function hand_select(){\r

      \  let res = prompt('enter player names: ');\r

      \  let parts = splitAtAnyOf(res,' ,');\r

      \  let list = [];\r

      \  for(const p of parts) {\r

      \    let name = p.toLowerCase().trim();\r

      \    if (isdef(DB.users[name])) addIf(list,name);\r

      \  }\r

      \  list.sort();list.unshift(Session.cur_user);\r

      \  populate_players(list);\r

      }\r\n"
    sig: function hand_select(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  populate_players_v0:
    name: populate_players_v0
    code: "function populate_players_v0(list) {\r

      \  let d = mBy('d_players');\r

      \  if (nundef(d)) return;\r

      \  mRemoveChildrenFromIndex(d, 1);\r

      \  Session.game_options.players = [];\r

      \  for (const name of list) {\r

      \    Session.game_options.players.push(name); \r

      \    if (name == Session.cur_user) { let el = mToggle(name, name,
      d); el.firstChild.setAttribute('disabled', true); }\r

      \    else { mToggle(name, name, d, { cursor: 'pointer' }); }\r

      \  }\r

      \  d_players.innerHTML += '<br>';\r

      \  mTextArea(3, 20, d_players, { fz: 16, display: 'none', resize:
      'none', border: 'none', outline: 'none' }, 'ta_edit_players');\r

      \  d_players.innerHTML += '<br>';\r

      \  measure_fieldset(d);\r

      \  mButton('edit', onclick_edit_players, d_players, { fz: 14, wmin:
      '90%' }, null, 'b_edit_players');\r

      }\r\n"
    sig: function populate_players_v0(list){}
    region: settings (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  start_prelims:
    name: start_prelims
    code: "function start_prelims() {\r

      \  Speech = new Speaker('E'); \r

      \  TOMan = new TimeoutManager();\r

      \  ColorThiefObject = new ColorThief();\r

      \  init_internet();\r

      \  init_keyhandlers();\r

      \  mBy('label_games').onclick = onclick_games;\r

      \  mBy('label_play').onclick = onclick_play;\r

      \  mBy('label_account').onclick = onclick_account;\r

      \  mBy('label_login').onclick = onclick_login;\r

      \  mBy('label_settings').onclick = onclick_settings;\r

      \  Session.cur_user = valf(queryStringToJson().user, 'guest');\r

      \  Session.cur_menu = 'games'; \r

      \  Session.cur_game = 'gSpotit'; \r

      \  Session.def_playmode = 'multi'; \r

      \  Session.def_players = ['mimi', 'felix']; \r

      \  Session.def_players =
      ['mimi','afia','amanda','annabel','blade','felix','gul','lauren','mac','n\
      asi','sarah','valerie']; \r

      \  Session.cur_chatter = 'gul'; \r

      \  go_online(); \r

      \  get_data(queryStringToJson(), 'user_info'); \r

      }\r\n"
    sig: function start_prelims(){}
    region: start (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  race_update_my_score:
    name: race_update_my_score
    code: "function race_update_my_score(inc) {\r

      \  let me = Session.cur_me;\r

      \  me.score += inc;\r

      \  if (me.score >= Session.winning_score) me.player_status = 'done';
      \r

      }\r\n"
    sig: function race_update_my_score(inc){}
    region: racing (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  race_check_endcondition:
    name: race_check_endcondition
    code: "function race_check_endcondition() {\r

      \  let players = get_values(Session.cur_players);\r

      \  let winners = players.filter(x => x.score >=
      Session.winning_score).map(x => x.name); \r

      \  return winners;\r

      }\r\n"
    sig: function race_check_endcondition(){}
    region: racing (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  race_set_fen:
    name: race_set_fen
    code: "function race_set_fen() {\r

      \  let me = Session.cur_players[Session.cur_user];\r

      \  let fen = Session.cur_funcs.fen();\r

      \  me.state = fen;\r

      }\r\n"
    sig: function race_set_fen(){}
    region: racing (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  gSpotit:
    name: gSpotit
    code: "function gSpotit() {\r

      \  function spotit_fen() {\r

      \    let items = Session.items;\r

      \    console.log('items',items)\r

      \    let fen = items.map(x => x.keys.join(' ')).join(',');\r

      \    let item_fens = [];\r

      \    for (const item of items) {\r

      \      let arr = arrFlatten(item.pattern);\r

      \      let ifen = arr.map(x => `${x.key}:${x.scale}`).join(' ');\r

      \      item_fens.push(ifen);\r

      \    }\r

      \    fen = item_fens.join(',');\r

      \    return fen;\r

      \  }\r

      \  function spotit_prompt(g, fen) {\r

      \    g.items = spotit_deal(g.num_cards, g.rows, g.cols, g.vocab,
      g.lang, g.min_scale, g.max_scale, fen);\r

      \  }\r

      \  function spotit_interact(ev) {\r

      \    ev.cancelBubble = true;\r

      \    if (!canAct()) { console.log('no act'); return; }\r

      \    let keyClicked = evToProp(ev, 'key');\r

      \    let id = evToId(ev);\r

      \    if (isdef(keyClicked) && isdef(Items[id])) {\r

      \      let item = Items[id];\r

      \      if (Object.values(item.shares).includes(keyClicked)) {\r

      \        let otherCard = spotitFindCardSharingSymbol(item,
      keyClicked);\r

      \        let cardSymbol = ev.target;\r

      \        let otherSymbol = spotitFindSymbol(otherCard,
      keyClicked);\r

      \        Selected = { isCorrect: true, feedbackUI: [cardSymbol,
      otherSymbol] };\r

      \      } else {\r

      \        let cardSymbol = ev.target;\r

      \        Selected = { isCorrect: false, feedbackUI: [cardSymbol],
      correctUis: spotit_get_shared_symbols(), correctionDelay:
      Session.items.length * 1500 };\r

      \      }\r

      \      spotit_eval();\r

      \    }\r

      \  }\r

      \  function spotit_eval() {\r

      \    if (!canAct()) return;\r

      \    uiActivated = false; clear_timeouts();\r

      \    IsAnswerCorrect = Selected.isCorrect;\r

      \    race_set_fen();\r

      \    race_update_my_score(IsAnswerCorrect ? 1 : 0);\r

      \    let delay = show_feedback(IsAnswerCorrect);\r

      \    setTimeout(() => {\r

      \      in_game_open_prompt_off();\r

      \      clear_table_events();\r

      \      race_send_move();\r

      \    }, delay);\r

      \  }\r

      \  function spotit_card(info, dParent, cardStyles, onClickSym) {\r

      \    Card.sz=300;\r

      \    copyKeys({ w: Card.sz, h: Card.sz }, cardStyles);\r

      \    let card = cRound(dParent, cardStyles, info.id);\r

      \    addKeys(info, card);\r

      \    let d = iDiv(card);\r

      \    let zipped = [];\r

      \    for (let i = 0; i < card.keys.length; i++) {\r

      \      zipped.push({ key: card.keys[i], scale: card.scales[i] });\r

      \    }\r

      \    card.pattern = fillColarr(card.colarr, zipped);\r

      \    let symStyles = { sz: Card.sz / (card.rows + 1), fg: 'random',
      hmargin: 8, vmargin: 4, cursor: 'pointer' };\r

      \    let syms = [];\r

      \    mRowsX(iDiv(card), card.pattern, symStyles, {
      'justify-content': 'center' }, { 'justify-content': 'center' }, syms);\r

      \    for (let i = 0; i < info.keys.length; i++) {\r

      \      let key = card.keys[i];\r

      \      let sym = syms[i];\r

      \      card.live[key] = sym;\r

      \      sym.setAttribute('key', key);\r

      \      sym.onclick = onClickSym;\r

      \    }\r

      \    return card;\r

      \  }\r

      \  function spotit_deal(numCards, rows, cols, vocab, lang,
      min_scale, max_scale, fen) {\r

      \    lang = valf(lang, 'E');\r

      \    let colarr = _calc_hex_col_array(rows, cols);\r

      \    if (rows == 3 && cols == 1) { colarr = [1, 3, 1]; }\r

      \    else if (rows == 2 && cols == 1) { colarr = [1, 2]; }\r

      \    else if (rows == 4 && cols == 1) { rows = 3; colarr = [2, 3,
      1]; }\r

      \    else if (rows == 5 && cols == 1) { rows = 4; cols = 1; colarr =
      [1, 3, 3, 1]; }\r

      \    else if (rows == 5 && cols == 3) { rows = 5; cols = 1; colarr =
      [1, 3, 4, 3, 1]; }\r

      \    else if (rows == 6 && cols == 2) { rows = 5.5; colarr = [2, 4,
      5, 4, 2]; }\r

      \    else if (rows == 6 && cols == 3) { rows = 5.8; colarr = [2, 4,
      5, 4, 3]; }\r

      \    let perCard = arrSum(colarr);\r

      \    let nShared = (numCards * (numCards - 1)) / 2;\r

      \    let nUnique = perCard - numCards + 1;\r

      \    let numKeysNeeded = nShared + numCards * nUnique;\r

      \    let nMin = numKeysNeeded + 3;\r

      \    let keypool = setKeys({ nMin: nMin, lang: valf(lang, 'E'), key:
      valf(vocab, 'animals'), keySets: KeySets, filterFunc: (_, x) =>
      !x.includes(' ') });\r

      \    let keys = choose(keypool, numKeysNeeded);\r

      \    let dupls = keys.slice(0, nShared); \r

      \    let uniqs = keys.slice(nShared);\r

      \    let infos = [];\r

      \    for (let i = 0; i < numCards; i++) {\r

      \      let keylist = uniqs.slice(i * nUnique, (i + 1) * nUnique);\r

      \      let info = { id: getUID(), shares: {}, keys: keylist, rows:
      rows, cols: cols, colarr: colarr, num_syms: perCard };\r

      \      infos.push(info);\r

      \    }\r

      \    let iShared = 0;\r

      \    for (let i = 0; i < numCards; i++) {\r

      \      for (let j = i + 1; j < numCards; j++) {\r

      \        let c1 = infos[i];\r

      \        let c2 = infos[j];\r

      \        let dupl = dupls[iShared++];\r

      \        c1.keys.push(dupl);\r

      \        c1.shares[c2.id] = dupl;\r

      \        c2.shares[c1.id] = dupl;\r

      \        c2.keys.push(dupl);\r

      \      }\r

      \    }\r

      \    for (const info of infos) { shuffle(info.keys); }\r

      \    for (const info of infos) {\r

      \      info.scales = info.keys.map(x => chooseRandom([.5, .75, 1,
      1.25]));\r

      \    }\r

      \    if (!isEmpty(fen)) {\r

      \      let ks_for_cards = fen.split(',');\r

      \      for (let i = 0; i < infos.length; i++) {\r

      \        let info = infos[i];\r

      \        let ks_list = ks_for_cards[i].split(' ');\r

      \        info.keys = ks_list.map(x => stringBefore(x, ':'));\r

      \        info.scales = ks_list.map(x => stringAfter(x, ':')).map(x
      => Number(x));\r

      \      }\r

      \    }\r

      \    let items = [];\r

      \    for (const info of infos) {\r

      \      let item = spotit_card(info, dTable, { margin: 20 },
      spotit_interact);\r

      \      items.push(item);\r

      \    }\r

      \    return items;\r

      \  }\r

      \  function spotit_get_shared_symbols() {\r

      \    let result = [];\r

      \    for (const item of Session.items) {\r

      \      for (const id in item.shares) {\r

      \        let k = item.shares[id];\r

      \        let ui = iGetl(item, k);\r

      \        result.push(ui);\r

      \      }\r

      \    }\r

      \    return result;\r

      \  }\r

      \  //#region future: verbessere die art wie symbols auf card
      verteilt (unused)\r

      \  function spotit_colarr_settings(num) {\r

      \    let di = {\r

      \      3: { rows: 2, colarr: [1, 2] },\r

      \      4: { rows: 2, colarr: [2, 2] },\r

      \      5: { rows: 2.5, colarr: [2, 3] },\r

      \      6: { rows: 3, colarr: [1, 2] },\r

      \      7: { rows: 3, colarr: [1, 2] },\r

      \      8: { rows: 3.2, colarr: [1, 2] },\r

      \      9: { rows: 2, colarr: [1, 2] },\r

      \      10: { rows: 2, colarr: [1, 2] },\r

      \      11: { rows: 2, colarr: [1, 2] },\r

      \      12: { rows: 2, colarr: [1, 2] },\r

      \      13: { rows: 2, colarr: [1, 2] },\r

      \      14: { rows: 2, colarr: [1, 2] },\r

      \      15: { rows: 2, colarr: [1, 2] },\r

      \    }\r

      \    let colarr = _calc_hex_col_array(rows, cols);\r

      \    if (rows == 3 && cols == 1) { colarr = [1, 3, 1]; }\r

      \    else if (rows == 2 && cols == 1) { colarr = [1, 2]; }\r

      \    else if (rows == 4 && cols == 1) { rows = 3; colarr = [2, 3,
      1]; }\r

      \    else if (rows == 5 && cols == 1) { rows = 4; cols = 1; colarr =
      [1, 3, 3, 1]; }\r

      \    else if (rows == 3 && cols == 3) { rows = 3; cols = 3; colarr =
      [1, 3, 3, 1]; }\r

      \    else if (rows == 5 && cols == 3) { rows = 5; cols = 1; colarr =
      [1, 3, 4, 3, 1]; }\r

      \    else if (rows == 6 && cols == 2) { rows = 5.5; colarr = [2, 4,
      5, 4, 2]; }\r

      \  }\r

      \  function spotit_deal_new_not_yet(numCards, rows, colarr, vocab,
      lang, min_scale, max_scale, fen) {\r

      \    lang = valf(lang, 'E');\r

      \    let perCard = arrSum(colarr);\r

      \    let nShared = (numCards * (numCards - 1)) / 2;\r

      \    let nUnique = perCard - numCards + 1;\r

      \    let numKeysNeeded = nShared + numCards * nUnique;\r

      \    let nMin = numKeysNeeded + 3;\r

      \    let keypool = setKeys({ nMin: nMin, lang: valf(lang, 'E'), key:
      valf(vocab, 'animals'), keySets: KeySets, filterFunc: (_, x) =>
      !x.includes(' ') });\r

      \    let keys = choose(keypool, numKeysNeeded);\r

      \    let dupls = keys.slice(0, nShared); \r

      \    let uniqs = keys.slice(nShared);\r

      \    let infos = [];\r

      \    for (let i = 0; i < numCards; i++) {\r

      \      let keylist = uniqs.slice(i * nUnique, (i + 1) * nUnique);\r

      \      let info = { id: getUID(), shares: {}, keys: keylist, rows:
      rows, cols: cols, colarr: colarr, num_syms: perCard };\r

      \      infos.push(info);\r

      \    }\r

      \    let iShared = 0;\r

      \    for (let i = 0; i < numCards; i++) {\r

      \      for (let j = i + 1; j < numCards; j++) {\r

      \        let c1 = infos[i];\r

      \        let c2 = infos[j];\r

      \        let dupl = dupls[iShared++];\r

      \        c1.keys.push(dupl);\r

      \        c1.shares[c2.id] = dupl;\r

      \        c2.shares[c1.id] = dupl;\r

      \        c2.keys.push(dupl);\r

      \      }\r

      \    }\r

      \    for (const info of infos) { shuffle(info.keys); }\r

      \    for (const info of infos) {\r

      \      info.scales = info.keys.map(x => chooseRandom([.6, .75, 1,
      1.25]));\r

      \    }\r

      \    if (!isEmpty(fen)) {\r

      \      let ks_for_cards = fen.split(',');\r

      \      for (let i = 0; i < infos.length; i++) {\r

      \        let info = infos[i];\r

      \        let ks_list = ks_for_cards[i].split(' ');\r

      \        info.keys = ks_list.map(x => stringBefore(x, ':'));\r

      \        info.scales = ks_list.map(x => stringAfter(x, ':')).map(x
      => Number(x));\r

      \      }\r

      \    }\r

      \    let items = [];\r

      \    for (const info of infos) {\r

      \      let item = spotit_card(info, dTable, { margin: 20 },
      spotit_interact);\r

      \      items.push(item);\r

      \    }\r

      \    return items;\r

      \  }\r

      \  //#endregion\r

      \  return {\r

      \    prompt: spotit_prompt,\r

      \    fen: spotit_fen,\r

      \  }\r

      }\r\n"
    sig: function gSpotit(){}
    region: funcs (game_race2.js)
    filename: game_race2.js
    type: func
    fname: game_race2.js
    path: C:\xampp\htdocs\aroot\base\js\game_race2.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142737298.0999
    size: 20629
  gMaze:
    name: gMaze
    code: "function gMaze() {\r

      \  function maze_fen() { return 'nix'; }\r

      \  function maze_prompt(g, fen) {\r

      \    let [rows, cols, sz, gap] = [g.rows, g.cols, g.sz, g.gap];\r

      \    clear_graph();\r

      \    let maze = new MazeGraph(dTable, rows, cols, sz, gap);\r

      \    setRectInt(maze.dGraph);\r

      \    mLinebreak(dTable, 12);\r

      \    let cellStart = maze.getTopLeftCell();\r

      \    mCellContent(iDiv(cellStart), { w: '60%', h: '60%', fz: '50%',
      padding: '5%', bg: 'green', fg: 'white', rounding: '50%' }, 'A');\r

      \    let cellGoal = maze.getBottomRightCell();\r

      \    mCellContent(iDiv(cellGoal), { w: '60%', h: '60%', fz: '50%',
      padding: '5%', bg: 'red', fg: 'white', rounding: '50%' }, 'B');\r

      \    let [roomFrom, roomTo] = [cellStart.nodeId, cellGoal.nodeId];\r

      \    if (isdef(fen)) {\r

      \      let instruction = mText('game over!', dTable, { fz: 24,
      display: 'inline-block' });\r

      \      return;\r

      \    }\r

      \    let instruction = mText('is there a path from A to B?', dTable,
      { fz: 24, display: 'inline-block' });\r

      \    mLinebreak(dTable);\r

      \    let path = maze.getShortestPathFromTo(roomFrom, roomTo);\r

      \    console.assert(path.length < Infinity, 'WAAAAAAAAAAAAAAS?');\r

      \    if (coin()) maze.cutPath(path, .5, .75);\r

      \    let len = maze.getLengthOfShortestPath(roomFrom, roomTo); \r

      \    let is_yes = len != Infinity;\r

      \    let byes = mButton('yes', (ev) => maze_eval(is_yes, ev),
      dTable, { fz: 20 }, ['donebutton', 'buttonClass']);\r

      \    let bno = mButton('no', (ev) => maze_eval(!is_yes, ev), dTable,
      { fz: 20 }, ['donebutton', 'buttonClass']);\r

      \    if (is_yes) { Goal = { b_correct: byes, b_wrong: bno, is_yes:
      true, maze: maze, path: path }; }\r

      \    else { Goal = { b_correct: bno, b_wrong: byes, is_yes: false,
      maze: maze, path: path }; }\r

      \    animatePropertyX(dTable, 'opacity', [0, 0, 1], 500, 'both',
      'ease', 0);\r

      \  }\r

      \  function maze_eval(is_correct, ev) {\r

      \    if (!canAct()) return;\r

      \    uiActivated = false; clear_timeouts();\r

      \    let button_clicked = ev.target;\r

      \    race_set_fen();\r

      \    race_update_my_score(is_correct ? 1 : -1);\r

      \    let delay = maze_feedback(is_correct, button_clicked);\r

      \    setTimeout(() => {\r

      \      in_game_open_prompt_off();\r

      \      clear_table_events();\r

      \      race_send_move();\r

      \    }, delay);\r

      \  }\r

      \  function clear_graph() { if (nundef(Goal)) return; let cy =
      lookup(Goal, ['maze', 'cy']); if (cy) cy.destroy(); }\r

      \  function maze_feedback(is_correct, button_clicked, show_feedback
      = true) {\r

      \    let delay = !is_correct && show_feedback ? 1000 : 100;\r

      \    if (!is_correct) {\r

      \      mStyle(Goal.b_correct, { bg: 'green' });\r

      \      animate(Goal.b_correct, 'komisch', 1000);\r

      \      if (Goal.is_yes) Goal.maze.breadCrumbs(Goal.path); else
      Goal.maze.colorComponents();\r

      \    }\r

      \    if (is_correct) { mStyle(button_clicked, { bg: 'green' });
      mCheckit(button_clicked, 100); }\r

      \    else { mXit(button_clicked); }\r

      \    return delay;\r

      \  }\r

      \  return {\r

      \    prompt: maze_prompt,\r

      \    fen: maze_fen, \r

      \  }\r

      }\r\n"
    sig: function gMaze(){}
    region: funcs (game_race2.js)
    filename: game_race2.js
    type: func
    fname: game_race2.js
    path: C:\xampp\htdocs\aroot\base\js\game_race2.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142737298.0999
    size: 20629
  gAnagram:
    name: gAnagram
    code: "function gAnagram() {\r

      \  function anagram_fen() {\r

      \    return { key: Goal.key, lang: Goal.lang, inputs:
      collect_innerHTML(Goal.inputs, ':'), letters:
      collect_innerHTML(Goal.letters, ':') };\r

      \  }\r

      \  function anagram_prompt(g, fen) {\r

      \    let [vocab, lang, min, max] = [g.vocab, isdef(fen) ? fen.lang :
      g.lang, g.minWordLength, g.maxWordLength];\r

      \    let keypool = KeySets[vocab];\r

      \    keypool = keypool.filter(x => { let w = Syms[x][lang]; let l =
      w.length; return w.indexOf(' ') < 0 && l >= min && l <= max; });\r

      \    let key = isdef(fen) ? fen.key : chooseRandom(keypool);
      //'carpentry saw'; \r

      \    let pic = mSym(key, dTable, { fz: 100, opacity: g.hidden ? 0 :
      1 });\r

      \    if (g.hidden) {\r

      \      let d = pic;\r

      \      let r = getRect(d, dTable);\r

      \      let dHint = mDiv(dTable, { opacity: 0, position: 'absolute',
      align: 'center', left: 0, w: '100%', top: r.t + r.h / 2 }, null,
      'category: ' + Syms[key].subgroup);\r

      \      animatePropertyX(dHint, 'opacity', [0, 0, 1], 2000, 'both',
      'ease-in', 6000);\r

      \    }\r

      \    let word = Syms[key][lang].toUpperCase();\r

      \    Goal = { div: pic, key: key, word: word, lang: lang };\r

      \    mLinebreak(dTable, 12);\r

      \    let wTotal = getRect(mBy('table')).w;\r

      \    Goal.inputs = show_letter_inputs(word, dTable, wTotal);\r

      \    mLinebreak(dTable, 12);\r

      \    Goal.letters = show_dd_click_letters(word, dTable, wTotal);\r

      \    if (isdef(fen) && isdef(fen.inputs)) {\r

      \      distribute_innerHTML(Goal.inputs, fen.inputs, ':');\r

      \      distribute_innerHTML(Goal.letters, fen.letters, ':');\r

      \    } else {\r

      \      mLinebreak(dTable, 12);\r

      \      Goal.bDone = mButton('Done!', anagram_eval, dTable, { fz: 28,
      matop: 10, rounding: 10, hpadding: 16, border: 8 }, ['buttonClass']);\r

      \    }\r

      \  }\r

      \  function anagram_eval() {\r

      \    if (!canAct()) return;\r

      \    uiActivated = false; clear_timeouts();\r

      \    let answer = collect_innerHTML(Goal.inputs);\r

      \    let is_correct = answer == Goal.word;\r

      \    let is_word;\r

      \    if (!is_correct && answer.length == Goal.word.length &&
      is_a_word(answer.toLowerCase(), Session.lang)) is_word = true;\r

      \    Selected = { answer: answer, reqAnswer: Goal.word, feedbackUI:
      Goal.inputs.map(x => iDiv(x)) };\r

      \    race_set_fen();\r

      \    race_update_my_score(is_correct ? 1 : is_word ? 0 : -1);\r

      \    let delay = anagram_feedback(is_correct, is_word);\r

      \    setTimeout(() => {\r

      \      in_game_open_prompt_off();\r

      \      clear_table_events();\r

      \      race_send_move();\r

      \    }, delay);\r

      \  }\r

      \  function anagram_feedback(is_correct, is_word, show_feedback =
      true) {\r

      \    let delay = !is_correct && show_feedback ? 1000 : 300;\r

      \    let d = iDiv(Goal);\r

      \    mStyle(d, { opacity: 1 });\r

      \    if (!is_correct) {\r

      \      for (let i = 0; i < Goal.word.length; i++) {\r

      \        let ch = Goal.word[i];\r

      \        let dl = iDiv(Goal.letters[i]);\r

      \        dl.innerHTML = ch;\r

      \        animate(dl, 'onPulse1', 600);\r

      \        if (!is_word) {\r

      \          let dwrong = iDiv(Goal.inputs[i]);\r

      \          if (dwrong.innerHTML != ch) { mXit(dwrong, 90); }\r

      \        }\r

      \      }\r

      \    } else {\r

      \      mCheckit(d, 100);\r

      \    }\r

      \    return delay;\r

      \  }\r

      \  return {\r

      \    prompt: anagram_prompt,\r

      \    fen: anagram_fen, \r

      \  }\r

      }\r\n"
    sig: function gAnagram(){}
    region: funcs (game_race2.js)
    filename: game_race2.js
    type: func
    fname: game_race2.js
    path: C:\xampp\htdocs\aroot\base\js\game_race2.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142737298.0999
    size: 20629
  collect_innerHTML:
    name: collect_innerHTML
    code: "function collect_innerHTML(arr, sep = '') { return arr.map(x =>
      iDiv(x).innerHTML).join(sep); }\r\n"
    sig: function collect_innerHTML(arr, sep = ''){}
    region: misc (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  distribute_innerHTML:
    name: distribute_innerHTML
    code: "function distribute_innerHTML(arr, s, sep = '') {\r

      \  let letters = s.split(sep);\r

      \  for (let i = 0; i < letters.length; i++) {\r

      \    let d = iDiv(arr[i]);\r

      \    let l = letters[i];\r

      \    if (l.length > 1) {\r

      \      l = '&#x' + l.substring(3) + ';'; \r

      \    }\r

      \    d.innerHTML = l; \r

      \  }\r

      \  return;\r

      \  let i = 0; arr.map(x => { iDiv(x).innerHTML = s[i]; if (i <
      s.length - 1) i++; });\r

      }\r\n"
    sig: function distribute_innerHTML(arr, s, sep = ''){}
    region: misc (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  createLetterInputsX:
    name: createLetterInputsX
    code: "function createLetterInputsX(s, dParent, style, idForContainerDiv) {\r

      \  let d = mDiv(dParent);\r

      \  if (isdef(idForContainerDiv)) d.id = idForContainerDiv;\r

      \  inputs = [];\r

      \  for (let i = 0; i < s.length; i++) {\r

      \    let d1 = mDiv(d);\r

      \    d1.innerHTML = s[i];\r

      \    mStyle(d1, style);\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function createLetterInputsX(s, dParent, style, idForContainerDiv){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  blankInputs:
    name: blankInputs
    code: "function blankInputs(d, ilist, blink = true) {\r

      \  let inputs = [];\r

      \  for (const idx of ilist) {\r

      \    let inp = d.children[idx];\r

      \    inp.innerHTML = '_';\r

      \    if (blink) mClass(inp, 'blink');\r

      \    inputs.push({ letter: Goal.label[idx].toUpperCase(), div: inp,
      index: idx });\r

      \  }\r

      \  return inputs;\r

      }\r\n"
    sig: function blankInputs(d, ilist, blink = true){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  ipaddX:
    name: ipaddX
    code: "function ipaddX(elem, role) {\r

      \  let isSource = role != 'target';\r

      \  let isTarget = role != 'source';\r

      \  if (isSource) elem.setAttribute('draggable', true);\r

      \  function OnDragOver(ev) {\r

      \    elem.setAttribute('DragOver', true);\r

      \    ev.stopPropagation();    \r

      \    ev.preventDefault();     \r

      \    ev.dataTransfer.dropEffect = 'copy';\r

      \  }\r

      \  function OnDragLeave(ev) {\r

      \    elem.removeAttribute('DragOver');\r

      \  }\r

      \  function OnDrop(ev) {\r

      \    elem.removeAttribute('DragOver');\r

      \    ev.preventDefault();     \r

      \    ev.stopPropagation();\r

      \    if (isTarget) elem.innerHTML =
      ev.dataTransfer.getData('text/plain');\r

      \  }\r

      \  function OnDragStart(ev) {\r

      \    ev.stopPropagation(); \r

      \    ev.dataTransfer.dropEffect = 'move';\r

      \    ev.dataTransfer.setData('text/plain', this.innerHTML);\r

      \  }\r

      \  function OnClickClick(ev) {\r

      \    ev.preventDefault();     \r

      \    ev.stopPropagation(); \r

      \    let aname = 'data_transport'; \r

      \    let source = DA[aname];\r

      \    if (nundef(source) && isSource) { \r

      \      toggleSelectionOfPicture(elem);\r

      \      DA[aname] = elem;\r

      \    } else if (isdef(source)) {\r

      \      if (isTarget) {\r

      \        if (source == elem) {\r

      \          console.log('INPUT');\r

      \          elem.innerHTML = '_';\r

      \        } else {\r

      \          elem.innerHTML = source.innerHTML;\r

      \        }\r

      \        toggleSelectionOfPicture(source);\r

      \        DA[aname] = null;\r

      \      }\r

      \      else if (isSource) {\r

      \        toggleSelectionOfPicture(source);\r

      \        if (source != elem) { toggleSelectionOfPicture(elem);
      DA[aname] = elem; }\r

      \        else {\r

      \          let is_letter = !isTarget;\r

      \          if (is_letter) {\r

      \            let l = elem.innerHTML;\r

      \            let inp_empty;\r

      \            for (const inp of Goal.inputs) {\r

      \              let di = iDiv(inp);\r

      \              let inner = di.innerHTML;\r

      \              if (iDiv(inp).innerHTML == '_') { inp_empty = inp;
      break; }\r

      \            }\r

      \            if (isdef(inp_empty)) iDiv(inp_empty).innerHTML = l;\r

      \          }\r

      \          DA[aname] = null;\r

      \        }\r

      \      }\r

      \    }\r

      \  }\r

      \  if (isSource) elem.addEventListener('dragstart', OnDragStart);\r

      \  elem.addEventListener('dragover', OnDragOver);\r

      \  elem.addEventListener('dragleave', OnDragLeave);\r

      \  elem.addEventListener('drop', OnDrop);\r

      \  elem.onclick = OnClickClick;\r

      \  DA.data_transport = null;\r

      }\r\n"
    sig: function ipaddX(elem, role){}
    region: misc (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  ipaddX_v1:
    name: ipaddX_v1
    code: "function ipaddX_v1(elem, role) {\r

      \  let isSource = role != 'target';\r

      \  let isTarget = role != 'source';\r

      \  if (isSource) elem.setAttribute('draggable', true);\r

      \  function OnDragOver(ev) {\r

      \    elem.setAttribute('DragOver', true);\r

      \    ev.stopPropagation();    \r

      \    ev.preventDefault();     \r

      \    ev.dataTransfer.dropEffect = 'copy';\r

      \  }\r

      \  function OnDragLeave(ev) {\r

      \    elem.removeAttribute('DragOver');\r

      \  }\r

      \  function OnDrop(ev) {\r

      \    elem.removeAttribute('DragOver');\r

      \    ev.preventDefault();     \r

      \    ev.stopPropagation();\r

      \    if (isTarget) elem.innerHTML =
      ev.dataTransfer.getData('text/plain');\r

      \  }\r

      \  function OnDragStart(ev) {\r

      \    ev.stopPropagation(); \r

      \    ev.dataTransfer.dropEffect = 'move';\r

      \    ev.dataTransfer.setData('text/plain', this.innerHTML);\r

      \  }\r

      \  function OnClickClick(ev) {\r

      \    ev.preventDefault();     \r

      \    ev.stopPropagation(); \r

      \    let aname = 'data_transport'; \r

      \    let source = DA[aname];\r

      \    if (nundef(source) && isSource) { \r

      \      toggleSelectionOfPicture(elem);\r

      \      DA[aname] = elem;\r

      \    } else if (isdef(source)) {\r

      \      if (isTarget) {\r

      \        if (source == elem) {\r

      \          console.log('INPUT');\r

      \          elem.innerHTML = '_';\r

      \        } else {\r

      \          elem.innerHTML = source.innerHTML;\r

      \        }\r

      \        toggleSelectionOfPicture(source);\r

      \        DA[aname] = null;\r

      \      }\r

      \      else if (isSource) {\r

      \        toggleSelectionOfPicture(source);\r

      \        if (source != elem) { toggleSelectionOfPicture(elem);
      DA[aname] = elem; }\r

      \        else {\r

      \          let is_letter = !isTarget;\r

      \          if (is_letter) {\r

      \            let l = elem.innerHTML;\r

      \            let inp_empty;\r

      \            for (const inp of Goal.inputs) {\r

      \              let di = iDiv(inp);\r

      \              let inner = di.innerHTML;\r

      \              if (iDiv(inp).innerHTML == '_') { inp_empty = inp;
      break; }\r

      \            }\r

      \            if (isdef(inp_empty)) iDiv(inp_empty).innerHTML = l;\r

      \          }\r

      \          DA[aname] = null;\r

      \        }\r

      \      }\r

      \    }\r

      \  }\r

      \  if (isSource) elem.addEventListener('dragstart', OnDragStart);\r

      \  elem.addEventListener('dragover', OnDragOver);\r

      \  elem.addEventListener('dragleave', OnDragLeave);\r

      \  elem.addEventListener('drop', OnDrop);\r

      \  elem.onclick = OnClickClick;\r

      \  DA.data_transport = null;\r

      }\r\n"
    sig: function ipaddX_v1(elem, role){}
    region: misc (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  ipaddX_orig:
    name: ipaddX_orig
    code: "function ipaddX_orig(elem, role) {\r

      \  let isSource = role != 'target';\r

      \  let isTarget = role != 'source';\r

      \  if (isSource) elem.setAttribute('draggable', true);\r

      \  function OnDragOver(ev) {\r

      \    elem.setAttribute('DragOver', true);\r

      \    ev.stopPropagation();    \r

      \    ev.preventDefault();     \r

      \    ev.dataTransfer.dropEffect = 'copy';\r

      \  }\r

      \  function OnDragLeave(ev) {\r

      \    elem.removeAttribute('DragOver');\r

      \  }\r

      \  function OnDrop(ev) {\r

      \    elem.removeAttribute('DragOver');\r

      \    ev.preventDefault();     \r

      \    ev.stopPropagation();\r

      \    if (isTarget) elem.innerHTML =
      ev.dataTransfer.getData('text/plain');\r

      \  }\r

      \  function OnDragStart(ev) {\r

      \    ev.stopPropagation(); \r

      \    ev.dataTransfer.dropEffect = 'move';\r

      \    ev.dataTransfer.setData('text/plain', this.innerHTML);\r

      \  }\r

      \  function OnClickClick(ev) {\r

      \    ev.preventDefault();     \r

      \    ev.stopPropagation(); \r

      \    let aname = 'data_transport'; \r

      \    let source = DA[aname];\r

      \    if (nundef(source) && isSource) { \r

      \      toggleSelectionOfPicture(elem);\r

      \      DA[aname] = elem;\r

      \    } else if (isdef(source)) {\r

      \      if (isTarget) { elem.innerHTML = source.innerHTML;
      toggleSelectionOfPicture(source); DA[aname] = null; }\r

      \      else if (isSource) {\r

      \        toggleSelectionOfPicture(source);\r

      \        if (source != elem) { toggleSelectionOfPicture(elem);
      DA[aname] = elem; }\r

      \        else { DA[aname] = null; }\r

      \      }\r

      \    }\r

      \  }\r

      \  if (isSource) elem.addEventListener('dragstart', OnDragStart);\r

      \  elem.addEventListener('dragover', OnDragOver);\r

      \  elem.addEventListener('dragleave', OnDragLeave);\r

      \  elem.addEventListener('drop', OnDrop);\r

      \  elem.onclick = OnClickClick;\r

      \  DA.data_transport = null;\r

      }\r\n"
    sig: function ipaddX_orig(elem, role){}
    region: misc (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  toggleSelectionOfPicture:
    name: toggleSelectionOfPicture
    code: "function toggleSelectionOfPicture(pic, selectedPics, className =
      'framedPicture') {\r

      \  let ui = iDiv(pic);\r

      \  pic.isSelected = !pic.isSelected;\r

      \  if (pic.isSelected) mClass(ui, className); else mClassRemove(ui,
      className);\r

      \  if (isdef(selectedPics)) {\r

      \    if (pic.isSelected) {\r

      \      console.assert(!selectedPics.includes(pic), 'UNSELECTED PIC
      IN PICLIST!!!!!!!!!!!!')\r

      \      selectedPics.push(pic);\r

      \    } else {\r

      \      console.assert(selectedPics.includes(pic), 'PIC NOT IN
      PICLIST BUT HAS BEEN SELECTED!!!!!!!!!!!!')\r

      \      removeInPlace(selectedPics, pic);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function toggleSelectionOfPicture(pic, selectedPics, className =
      'framedPicture'){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_dd_click_letters:
    name: show_dd_click_letters
    code: "function show_dd_click_letters(word, dTable, wTotal, gap = 4) {\r

      \  let wmax = wTotal / word.length;\r

      \  let fzMax = wmax - 3 * gap;\r

      \  fz = Math.min(60, fzMax);\r

      \  let dp = createLetterInputsX(word, dTable, { bg: 'silver',
      display: 'inline-block', fz: fz, w: fz, h: fz * 1.1, margin: 4 }); \r

      \  shuffle_children(dp);\r

      \  let letters = Array.from(dp.children);\r

      \  for (let i = 0; i < letters.length; i++) {\r

      \    let l = letters[i];\r

      \    l.setAttribute('draggable', true);\r

      \    ipaddX(l, 'source');\r

      \    l.id = 'letter' + i;\r

      \  }\r

      \  return letters;\r

      }\r\n"
    sig: function show_dd_click_letters(word, dTable, wTotal, gap = 4){}
    region: misc (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  show_letter_inputs:
    name: show_letter_inputs
    code: "function show_letter_inputs(word, dTable, wTotal, gap = 4) {\r

      \  let fzMax = wTotal / word.length - 3 * gap;\r

      \  let fz = Math.min(70, fzMax);\r

      \  let dpEmpty = createLetterInputsX(word, dTable, { pabottom: 5,
      bg: 'grey', display: 'inline-block', fz: fz, w: fz, h: fz * 1.1, margin:
      gap }); \r

      \  let inputs = blankInputs(dpEmpty, range(0, word.length - 1),
      false);\r

      \  for (let i = 0; i < inputs.length; i++) {\r

      \    let l = iDiv(inputs[i]);\r

      \    ipaddX(l, 'both');\r

      \    mClass(l, 'dropzone');\r

      \    l.id = 'input' + i;\r

      \  }\r

      \  return inputs;\r

      }\r\n"
    sig: function show_letter_inputs(word, dTable, wTotal, gap = 4){}
    region: misc (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  ensure_assets_old:
    name: ensure_assets_old
    code: "function ensure_assets_old(obj) {\r

      \  DB = jsyaml.load(obj.db);\r

      \  symbolDict = Syms = jsyaml.load(obj.syms);\r

      \  SymKeys = Object.keys(Syms);\r

      \  ByGroupSubgroup = jsyaml.load(obj.symGSG);\r

      \  WordP = jsyaml.load(obj.allWP);\r

      \  C52 = jsyaml.load(obj.c52);\r

      \  Cinno = jsyaml.load(obj.cinno);\r

      \  inno_create_card_assets();\r

      \  ari_create_card_assets('rbgyop');\r

      \  FenPositionList = csv2list(obj.fens);\r

      \  KeySets = getKeySets();\r

      \  if (isdef(obj.edict)) { Dictionary = { E: to_words(obj.edict), S:
      to_words(obj.sdict), F: to_words(obj.fdict), D: to_words(obj.ddict) } };\r

      \  console.assert(isdef(DB), 'NO DB!!!!!!!!!!!!!!!!!!!!!!!!!!!');\r

      }\r\n"
    sig: function ensure_assets_old(obj){}
    region: assets (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  present_games_dep:
    name: present_games_dep
    code: "function present_games_dep(obj) {\r

      \  bygame = set_tables_by_game(obj);\r

      \  Session.cur_tid = !isEmpty(obj.tables) ? obj.tables[0].id :
      null;\r

      \  mBy('inner_left_panel').innerHTML =
      createGamesContent(dict2list(DB.games), bygame);\r

      \  mCenterCenterFlex(mBy('game_menu'));\r

      }\r\n"
    sig: function present_games_dep(obj){}
    region: games (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  runderkreis:
    name: runderkreis
    code: "function runderkreis(color, id) {\r

      \  return `<div id=${id}
      style='width:20px;height:20px;border-radius:50%;background-color:${color}\
      ;color:white;position:absolute;left:0px;top:0px;'>` + '' + \"</div>\";\r

      }\r\n"
    sig: function runderkreis(color, id){}
    region: games (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  present_login:
    name: present_login
    code: "function present_login(obj) { param_present_contacts(obj,
      mBy('inner_left_panel'), 'onclick_user_login'); }\r\n"
    sig: function present_login(obj){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\base\js\present.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 2927
  compute_elo_ranking:
    name: compute_elo_ranking
    code: "function compute_elo_ranking(players, game) {\r

      \  players = sortBy(players, 'score');\r

      \  let buckets = {};\r

      \  for (const pl of players) {\r

      \    let sc = pl.score;\r

      \    if (nundef(buckets[sc])) buckets[sc] = [];\r

      \    buckets[sc].push(pl.name);\r

      \  }\r

      \  let nBuckets = get_keys(buckets).length;\r

      \  let elopart = 2 / (nBuckets - 1);\r

      \  let val = -1;\r

      \  for (const b in buckets) {\r

      \    for (const name of buckets[b]) {\r

      \      let elo = get_elo(name, game);\r

      \      set_elo(name, game, elo + val);\r

      \      console.log('user', name, 'with score', b, 'gets', val,
      'added to elo!');\r

      \    }\r

      \    val += elopart;\r

      \  }\r

      }\r\n"
    sig: function compute_elo_ranking(players, game){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  delete_current_table:
    name: delete_current_table
    code: "function delete_current_table() {\r

      \  if (nundef(Session.cur_tid)) return;\r

      \  to_server(Session.cur_tid, 'delete_table');\r

      \  Session.cur_tid = null;\r

      \  Session.cur_table = null;\r

      }\r\n"
    sig: function delete_current_table(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  decrease_handicap_if_winstreak:
    name: decrease_handicap_if_winstreak
    code: "function decrease_handicap_if_winstreak(winners, game) {\r

      \  for (const w of winners) {\r

      \    let o = lookupSet(DB.users, [w, 'games', game], {});\r

      \    o.winstreak = DB.users[w].games[game].winstreak =
      isdef(o.winstreak) ? o.winstreak + 1 : 1;\r

      \    if (o.winstreak >= 3) {\r

      \      lookupSetOverride(DB.users, [w, 'games', game, 'startlevel'],
      Math.min(o.startlevel + 1, Session.maxlevel));\r

      \      delete o.winstreak;\r

      \      console.log('...startlevel of', w, 'is increased to',
      get_startlevel(w, game));\r

      \    }\r

      \    console.log('user', w, 'db entry', o);\r

      \  }\r

      }\r\n"
    sig: function decrease_handicap_if_winstreak(winners, game){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  increase_handicap_if_losestreak:
    name: increase_handicap_if_losestreak
    code: "function increase_handicap_if_losestreak(losers, game) {\r

      \  console.log('winners', losers);\r

      \  for (const w of losers) {\r

      \    let o = lookupSet(DB.users, [w, 'games', game], {});\r

      \    if (nundef(o.losestreak)) o.losestreak = 1; else o.losestreak
      += 1;\r

      \    if (o.losestreak >= 1) {\r

      \      lookupSetOverride(o, ['startlevel'], Math.max(o.startlevel -
      1, 0));\r

      \      o.losestreak = 0;\r

      \      console.log('...startlevel of', w, 'is decreased to',
      get_startlevel(w, game));\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function increase_handicap_if_losestreak(losers, game){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  record_winners:
    name: record_winners
    code: "function record_winners(winners, game) {
      ensure_winnerlist(game).push(winners); } \r\n"
    sig: function record_winners(winners, game){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  animate:
    name: animate
    code: "function animate(elem, aniclass, timeoutms) {\r

      \  mClass(elem, aniclass);\r

      \  setTimeout(() => mRemoveClass(elem, aniclass), timeoutms);\r

      }\r\n"
    sig: function animate(elem, aniclass, timeoutms){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  clear_table_all:
    name: clear_table_all
    code: "function clear_table_all() {\r

      \  clear_table_events();\r

      \  if (isdef(mBy('table'))) clearTable();\r

      \  resetUIDs(); \r

      \  Items = {};\r

      }\r\n"
    sig: function clear_table_all(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  clear_table_events:
    name: clear_table_events
    code: "function clear_table_events() {\r

      \  clear_timeouts();\r

      \  STOPAUS = true;\r

      \  pauseSound();\r

      \  DELAY = 1000;\r

      \  uiActivated = aiActivated = false;\r

      \  onclick = null;\r

      \  clearMarkers();\r

      }\r\n"
    sig: function clear_table_events(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  clearTable:
    name: clearTable
    code: "function clearTable() {\r

      \  clearElement('dTable');\r

      \  clearElement('dHistory');\r

      \  show_title();\r

      \  clearElement('dMessage');\r

      \  clearElement('dInstruction');\r

      \  clearElement('dTitleRight');\r

      \  hide('bPauseContinue');\r

      }\r\n"
    sig: function clearTable(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  clear_timeouts:
    name: clear_timeouts
    code: "function clear_timeouts() {\r

      \  for (const k in TO) clearTimeout(TO[k]);\r

      \  stop_simple_timer();\r

      }\r\n"
    sig: function clear_timeouts(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  collect_game_options:
    name: collect_game_options
    code: "function collect_game_options() {\r

      \  collect_player_list();\r

      \  collect_game_specific_options();\r

      }\r\n"
    sig: function collect_game_options(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  db_save:
    name: db_save
    code: "function db_save() {\r

      \  if (!is_online()) { console.log('not saving! (no internet)');
      return; }\r

      \  let txt = jsyaml.dump(DB);\r

      \  to_server({ db: txt }, 'dbsave');\r

      }\r\n"
    sig: function db_save(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  ev_to_gname:
    name: ev_to_gname
    code: "function ev_to_gname(ev) { evNoBubble(ev); return evToTargetAttribute(ev,
      'gamename'); }\r\n"
    sig: function ev_to_gname(ev){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  generate_friendly_table_name:
    name: generate_friendly_table_name
    code: "function generate_friendly_table_name(game, players) {\r

      \  const europe_capitals =
      'Amsterdam,  Ankara,  Astana,  Athens,  Baku,  Belgrade,  Berlin,  Bern,  \
      Bratislava,  Brussels,  Bucharest,  Budapest,  Chisinau,  Copenhagen,  Du\
      blin,  Helsinki,  Kiev,  Lisbon,  Ljubljana,  London,  Luxembourg,  Madri\
      d,  Minsk,  Monaco,  Moscow,  Nicosia,  Oslo,  Paris,  Podgorica,  Prague\
      ,  Reykjavík,  Riga,  Rome,  San
      Marino,  Sarajevo,  Skopje,  Sofia,  Stockholm,  Tallinn,  Tbilisi,  Tira\
      na,  Vaduz,  Valletta,  Vatican
      City,  Vienna,  Vilnius,  Warsaw,  Yerevan,  Zagreb';\r

      \  const asia_capitals =
      'Amman,  Ankara,  Ashgabat,  Astana,  Baghdad,  Baku,  Bangkok,  Beijing,  \
      Beirut,  Bishkek,  Cairo,  Colombo,  Damascus,  Dhaka,  Dili,  Doha,  Dus\
      hanbe,  Hanoi,  Islamabad,  Jakarta,  Jerusalem,  Kabul,  Kathmandu,  Kua\
      la Lumpur,  Kuwait
      City,  Malé,  Manama,  Manila,  Moscow,  Muscat,  Naypyidaw,  New
      Delhi,  Nicosia,  Phnom
      Penh,  Pyongyang,  Ramallah,  Riyadh,  Seoul,  Singapore,  Taipei,  Tashk\
      ent,  Tbilisi,  Tehran,  Thimphu,  Tokyo,  Ulaanbaatar,  Vientiane,  Yere\
      van';\r

      \  return 'Battle of ' + chooseRandom(coin() ?
      europe_capitals.split(',\\t') : asia_capitals.split(',\\t'));\r

      }\r\n"
    sig: function generate_friendly_table_name(game, players){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_cur_menu:
    name: get_cur_menu
    code: "function get_cur_menu() { if (isdef(Session.cur_menu)) window['get_' +
      Session.cur_menu](); }\r\n"
    sig: function get_cur_menu(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_score_fen_from_cur_players:
    name: get_score_fen_from_cur_players
    code: "function get_score_fen_from_cur_players() {\r

      \  let players = get_values(Session.cur_players);\r

      \  let sorted = sortByDescending(players, 'score');\r

      \  let list = sorted.map(x => `${x.name}:${x.score}`);\r

      \  let fen = list.join(',');\r

      \  return fen;\r

      }\r\n"
    sig: function get_score_fen_from_cur_players(){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  get_game_option:
    name: get_game_option
    code: "function get_game_option(g, key) {\r

      \  let set_option = lookup(Session, ['cur_table', 'options',
      key]);\r

      \  if (set_option) return set_option;\r

      \  let opts = g.options[key];\r

      \  let defval = opts.split(',')[0];\r

      \  return defval;\r

      }\r\n"
    sig: function get_game_option(g, key){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_game_or_user_option:
    name: get_game_or_user_option
    code: "function get_game_or_user_option(g, key) {\r

      \  let opts = g.options[key].split(',');\r

      \  let defval = opts[0];\r

      \  let userval = lookup(DB.users, [Session.cur_user, key]);\r

      \  if (userval && opts.includes(userval)) return userval;\r

      \  let set_option = lookup(Session, ['cur_table', 'options',
      key]);\r

      \  if (set_option) return set_option;\r

      \  return defval;\r

      }\r\n"
    sig: function get_game_or_user_option(g, key){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_user_game_tables:
    name: get_user_game_tables
    code: "function get_user_game_tables() { to_server({ uname: Session.cur_user,
      game: Session.cur_game }, \"get_user_game_tables\"); }\r\n"
    sig: function get_user_game_tables(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_start_data_fen:
    name: get_start_data_fen
    code: "function get_start_data_fen(players, game) { return players.map(x =>
      `${x}:${get_startlevel(x, game)}:${get_preferred_lang(x)}`).join(',');
      }\r\n"
    sig: function get_start_data_fen(players, game){}
    region: table (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  got_user_game_tables:
    name: got_user_game_tables
    code: "function got_user_game_tables(obj) {\r

      \  let tables = obj.tables;\r

      \  if (!isEmpty(tables)) { Session.cur_tid = tables[0].id;
      Session.cur_table = tables[0]; }\r

      }\r\n"
    sig: function got_user_game_tables(obj){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  in_game:
    name: in_game
    code: "function in_game() { return isdef(mBy('table')) && Session.in_game ==
      `${Session.cur_user} ${Session.cur_tid}`; }\r\n"
    sig: function in_game(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  in_game_on:
    name: in_game_on
    code: "function in_game_on() { Session.in_game = `${Session.cur_user}
      ${Session.cur_tid}`; }\r\n"
    sig: function in_game_on(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  in_game_off:
    name: in_game_off
    code: "function in_game_off() { Session.in_game = null; }\r\n"
    sig: function in_game_off(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  in_game_open_prompt:
    name: in_game_open_prompt
    code: "function in_game_open_prompt() { return uiActivated && Session.in_prompt
      == `${Session.cur_user} ${Session.cur_tid}`; }\r\n"
    sig: function in_game_open_prompt(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  in_game_open_prompt_on:
    name: in_game_open_prompt_on
    code: "function in_game_open_prompt_on() { Session.in_prompt =
      `${Session.cur_user} ${Session.cur_tid}`; }\r\n"
    sig: function in_game_open_prompt_on(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  in_game_open_prompt_off:
    name: in_game_open_prompt_off
    code: "function in_game_open_prompt_off() { Session.in_prompt = null; }\r\n"
    sig: function in_game_open_prompt_off(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  is_admin:
    name: is_admin
    code: "function is_admin(name) { return ['mimi'].includes(isdef(name) ? name :
      Session.cur_user); }\r\n"
    sig: function is_admin(name){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  is_game_host:
    name: is_game_host
    code: "function is_game_host() { return Session.cur_table.host ==
      Session.cur_user; }\r\n"
    sig: function is_game_host(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  is_a_word:
    name: is_a_word
    code: "function is_a_word(w, lang) { return lookup(Dictionary, [lang, w]) !=
      null; }\r\n"
    sig: function is_a_word(w, lang){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  log_object:
    name: log_object
    code: "function log_object(o = {}, msg = '', props = [], indent = 0) {\r

      \  console.log(indent ? '.'.repeat(indent) : '____', msg, indent ?
      '' : `(caller:${getFunctionsNameThatCalledThisFunction()})`);\r

      \  let keys = get_keys(o); keys.sort();\r

      \  for (const k of keys) {\r

      \    if (isEmpty(props) || props.includes(k)) {\r

      \      if (isDict(o[k])) { log_object(o[k], k, get_keys(o[k]).join('
      '), indent + 1); console.log(); }\r

      \      else if (isListOf(o[k], isLiteral)) console.log('
      '.repeat(indent), k + ':', o[k].join(','));\r

      \      else console.log(' '.repeat(indent), k + ':', o[k]);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function log_object(o = {}, msg = '', props = [], indent = 0){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_players:
    name: make_players
    code: "function make_players(playernames) {\r

      \  let o = Session.cur_players = {};\r

      \  for (const plname of playernames) {\r

      \    o[plname] = { name: plname, color:
      getColorDictColor(DB.users[plname].color), imgPath:
      `../base/assets/images/${plname}.jpg`, score: 0 };\r

      \  }\r

      \  Session.cur_me = o[Session.cur_user];\r

      \  Session.cur_others = get_values(o).filter(x => x.name !=
      Session.cur_user);\r

      }\r\n"
    sig: function make_players(playernames){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  open_game_ui:
    name: open_game_ui
    code: "function open_game_ui() {\r

      \  clear_table_all();\r

      \  let hmin = firstNumber(getCssVar('--inner_left_panel_height'));\r

      \  mBy(\"inner_left_panel\").innerHTML = `<div
      style='min-height:${hmin}px'>\r

      \  <div id=\"md\" style=\"display: flex;min-height:${hmin}px\">\r

      \    <div id=\"dLeftSide\" style=\"align-self:
      stretch;min-height:${hmin}px\"></div>\r

      \    <div id=\"dRightSide\" style='min-height:${hmin}px'>\r

      \      <div id=\"table\" class=\"flexWrap\"></div>\r

      \    </div>\r

      \  </div></div>`;\r

      \  initTable();\r

      \  badges_off(); \r

      }\r\n"
    sig: function open_game_ui(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  open_prompt:
    name: open_prompt
    code: "function open_prompt() {\r

      \  console.assert(!uiActivated, 'open_prompt with uiActivated ON
      !!!!!!!!!!!!!!!!!!!!!!!!!!');\r

      \  let game = Session.cur_game;\r

      \  let uname = Session.cur_user;\r

      \  let g = Session;\r

      \  let next = lookup(DB.games, [game]); if (next) copyKeys(next, g);
      \r

      \  next = lookup(DB.users, [uname, 'games', game]); if (next)
      copyKeys(next, g); \r

      \  let level = g.level = valf(g.startlevel, g.def_startlevel);\r

      \  lookupSet(DB.users, [uname, 'games', game, 'startlevel'],
      level);\r

      \  next = lookup(DB.games, [game, 'levels']);\r

      \  if (next) copyKeys(next[level], g);\r

      \  g.maxlevel = valf(get_keys(next).length, 0) - 1;\r

      \  g.color = getColorDictColor(g.color);\r

      \  for(const k in g.options){\r

      \    g[k] = get_game_option(g,k); //'winning_score'); \r

      \    console.log('g.'+k,g[k]);\r

      \  }\r

      \  delete g.levels;\r

      \  clearTable(); set_background_color(g.color); \r

      \  QContextCounter += 1;\r

      \  show_game_name(g.friendly);\r

      \  show_title(g.table.friendly);\r

      \  show_level(g.level, g.maxlevel);\r

      \  if (Session.is_badges) setBadgeLevel(g.level);\r

      \  g.startTime = get_timestamp();\r

      \  mLinebreak(dTable, 15);\r

      \  let items = g.items = spotit_deal(g.num_cards, g.rows, g.cols,
      g.vocab, g.lang, g.min_scale, g.max_scale);\r

      \  Selected = null;\r

      \  uiActivated = true;\r

      }\r\n"
    sig: function open_prompt(){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  reload_last_game_state:
    name: reload_last_game_state
    code: "function reload_last_game_state() { if (!in_game_open_prompt())
      open_prompt(Session.cur_me.state); }\r\n"
    sig: function reload_last_game_state(){}
    region: table (allexp.js)
    filename: allexp.js
    type: func
    fname: allexp.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\allexp.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691787.8555
    size: 120525
  send_timer_ticker:
    name: send_timer_ticker
    code: "function send_timer_ticker() {\r

      \  let me = Session.cur_players[Session.cur_user];\r

      \  to_server({ tid: Session.cur_tid, score: me.score, state:
      me.state, uname: me.name }, 'ticker_status_send_receive');\r

      }\r\n"
    sig: function send_timer_ticker(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  set_background_color:
    name: set_background_color
    code: "function set_background_color(color, elem) { if (nundef(elem)) elem =
      mBy('md').parentNode; mStyle(elem, { bg: getColorDictColor(color) });
      }\r\n"
    sig: function set_background_color(color, elem){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  set_cur_tid_for_game:
    name: set_cur_tid_for_game
    code: "function set_cur_tid_for_game() {\r

      \  console.assert(isdef(Session.tables_by_game) &&
      isdef(Session.cur_game), \"set_cur_tid_for_game\");\r

      \  let tables = Session.tables_by_game;\r

      \  let game = Session.cur_game;\r

      \  if (!isEmpty(tables[game])) Session.cur_tid =
      tables[game][0].id;\r

      \  else Session.cur_tid = null;\r

      }\r\n"
    sig: function set_cur_tid_for_game(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  set_most_recent_table_as_cur_tid:
    name: set_most_recent_table_as_cur_tid
    code: "function set_most_recent_table_as_cur_tid(tables) { if (!isEmpty(tables))
      Session.cur_tid = tables[0].id; }\r\n"
    sig: function set_most_recent_table_as_cur_tid(tables){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  set_tables_by_game:
    name: set_tables_by_game
    code: "function set_tables_by_game(obj, is_set_cur_id = true) {\r

      \  let tables = Session.tables = obj.tables;\r

      \  let bygame = Session.tables_by_game = {};\r

      \  if (isEmpty(tables)) {\r

      \    Session.cur_tid = null;\r

      \    Session.tables_by_game = {};\r

      \  } else {\r

      \    if (is_set_cur_id) {\r

      \      let t = tables[0];\r

      \      Session.cur_tid = t.id; \r

      \      Session.cur_game = t.game;\r

      \    }\r

      \    for (const t of tables) { lookupAddToList(bygame, [t.game], t);
      }\r

      \  }\r

      \  return bygame;\r

      }\r\n"
    sig: function set_tables_by_game(obj, is_set_cur_id = true){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_feedback:
    name: show_feedback
    code: "function show_feedback(is_correct, correction = true) {\r

      \  function success() {\r

      \    if (isdef(Selected) && isdef(Selected.feedbackUI)) {\r

      \      let uilist;\r

      \      if (isdef(Selected.positiveFeedbackUI)) uilist =
      [Selected.positiveFeedbackUI];\r

      \      else uilist = isList(Selected.feedbackUI) ?
      Selected.feedbackUI : [Selected.feedbackUI];\r

      \      let sz = getRect(uilist[0]).h;\r

      \      for (const ui of uilist) {\r

      \        mpOver(markerSuccess(), ui, sz, 'green', 'segoeBlack'); \r

      \      }\r

      \    }\r

      \    return 500;\r

      \  }\r

      \  function fail() {\r

      \    if (isdef(Selected) && isdef(Selected.feedbackUI)) {\r

      \      let uilist = isList(Selected.feedbackUI) ?
      Selected.feedbackUI : [Selected.feedbackUI];\r

      \      let sz = getRect(uilist[0]).h;\r

      \      for (const ui of uilist) {\r

      \        mpOver(markerFail(), ui, sz, 'red', 'segoeBlack'); \r

      \      }\r

      \    }\r

      \    return 1000;\r

      \  }\r

      \  if (is_correct) { return success(); }\r

      \  else {\r

      \    if (correction) {\r

      \      let anim = valf(Selected.animation, 'onPulse5');\r

      \      for (const ui of Selected.correctUis) { mClass(ui, anim); }\r

      \    }\r

      \    return fail();\r

      \  }\r

      }\r\n"
    sig: function show_feedback(is_correct, correction = true){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_level:
    name: show_level
    code: "function show_level(level, maxlevel) {\r

      \  let handicap = maxlevel - level;\r

      \  dLevel.innerHTML = `level: ${level}`;\r

      \  mStyle(dLevel, { fg: level >= 8 ? get_user_color() : 'white'
      });\r

      }\r\n"
    sig: function show_level(level, maxlevel){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_title:
    name: show_title
    code: "function show_title() {\r

      \  Z.func.state_info(mBy('dTitleLeft'));\r

      \  show_settings(mBy('dTitleRight'));\r

      \  mBy('dTablename').innerHTML = Z.friendly;\r

      }\r\n"
    sig: function show_title(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_my_score:
    name: show_my_score
    code: "function show_my_score() { let me =
      Session.cur_players[Session.cur_user]; console.log('my', me.name, 'score
      is', me.score); }\r\n"
    sig: function show_my_score(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_game_name:
    name: show_game_name
    code: "function show_game_name(gname) { dGameTitle.innerHTML = gname; }\r\n"
    sig: function show_game_name(gname){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_gameover:
    name: show_gameover
    code: "function show_gameover(winners) {\r

      \  let pl = Session.cur_players[winners[0]];\r

      \  let styles = { bg: pl.color, fg: 'contrast', top: 220, };\r

      \  if (winners.length > 1) {\r

      \    status_message(`GAME OVER - The winners are ${winners.join(',
      ')}!!!`, styles);\r

      \  } else {\r

      \    status_message(`GAME OVER - The winner is ${winners[0]}!!!`,
      styles);\r

      \  }\r

      }\r\n"
    sig: function show_gameover(winners){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  stop_game:
    name: stop_game
    code: "function stop_game() { console.log('stopgame'); }\r\n"
    sig: function stop_game(){}
    region: game (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  toggle_polling_status:
    name: toggle_polling_status
    code: "function toggle_polling_status() {\r

      \  if (is_polling_on()) {\r

      \    stop_polling();\r

      \    let b = mBy('b_polling');\r

      \    b.className = 'buttonClass donebutton enabled off';\r

      \    b.innerHTML = 'polling off';\r

      \  } else {\r

      \    allow_polling();\r

      \    let b = mBy('b_polling');\r

      \    b.className = 'buttonClass donebutton enabled on';\r

      \    b.innerHTML = 'polling on';\r

      \  }\r

      \  console.log('Polling Status:', is_polling_on() ? 'ON' : 'OFF');\r

      }\r\n"
    sig: function toggle_polling_status(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  try_find_username:
    name: try_find_username
    code: "function try_find_username(ev) {\r

      \  evNoBubble(ev);\r

      \  let username = findAttributeInAncestors(ev.target, 'username');\r

      \  if (nundef(Session.users_by_name[username])) { alert('ERROR
      username!'); return null; }\r

      \  return username;\r

      }\r\n"
    sig: function try_find_username(ev){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  update_game_status:
    name: update_game_status
    code: "function update_game_status(players) {\r

      \  let d = dTitle;\r

      \  clearElement(d);\r

      \  let d1 = mDiv(d, { display: 'flex', 'justify-content': 'center',
      'align-items': 'space-evenly' });\r

      \  for (const plname in players) {\r

      \    let pl = players[plname];\r

      \    let d2 = mDiv(d1, { margin: 4, align: 'center' }, null, `<img
      src='${pl.imgPath}' style=\"display:block\" class='img_person' width=50
      height=50>${pl.score}`);\r

      \  }\r

      }\r\n"
    sig: function update_game_status(players){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  update_session:
    name: update_session
    code: "function update_session(obj) {\r

      \  for (const k in obj) { if (isdef(Session[k])) copyKeys(obj[k],
      Session[k]); else Session[k] = obj[k]; }\r

      \  if (isdef(obj.table)) {\r

      \    Session.cur_table = Session.table;\r

      \    Session.cur_funcs = window[Session.cur_game]();\r

      \    if (!isEmpty(obj.playerdata))
      make_players(Session.table.players);\r

      \    console.assert(isdef(Session.cur_user) && Session.cur_game ==
      Session.table.game && Session.cur_tid == Session.table.id, \"SESSION
      MISMATCH IN GAME_OPEN_FOR_MOVE!!!!!!!!!!!!!!!!!!!!!\");\r

      \  }\r

      \  if (isdef(obj.playerdata)) {\r

      \    let o = Session.cur_players;\r

      \    for (const rec of obj.playerdata) {\r

      \      if (rec.state == 'null') rec.state = null;\r

      \      copyKeys(rec, o[rec.name]);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function update_session(obj){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  clearFleetingMessage:
    name: clearFleetingMessage
    code: "function clearFleetingMessage() {\r

      \  if (isdef(dFleetingMessage)) {\r

      \    dFleetingMessage.remove();\r

      \    dFleetingMessage = null;\r

      \  }\r

      }\r\n"
    sig: function clearFleetingMessage(){}
    region: fleetingMessage (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  showActiveMessage:
    name: showActiveMessage
    code: "function showActiveMessage(msg, handler, styles = {}, fade = false) {\r

      \  let defStyles = { fz: 22, rounding: 10, vpadding: 12, hpadding:
      0, matop: 50 };\r

      \  styles = mergeOverride(defStyles, styles);\r

      \  if (nundef(styles.fg)) styles.fg = colorIdealText(G.color);\r

      \  clearFleetingMessage();\r

      \  let d = fleetingMessage(msg, styles, fade);\r

      \  d.onclick = handler;\r

      }\r\n"
    sig: function showActiveMessage(msg, handler, styles = {}, fade = false){}
    region: fleetingMessage (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showFleetingMessage:
    name: showFleetingMessage
    code: "function showFleetingMessage(msg, dParent, styles = {}, ms = 3000,
      msDelay = 0, fade = true) {\r

      \  clearFleetingMessage();\r

      \  dFleetingMessage = mDiv(dParent);\r

      \  if (msDelay) {\r

      \    TOFleetingMessage = setTimeout(() => fleetingMessage(msg,
      dFleetingMessage, styles, ms, fade), msDelay);\r

      \  } else {\r

      \    TOFleetingMessage = setTimeout(() => fleetingMessage(msg,
      dFleetingMessage, styles, ms, fade), 10);\r

      \  }\r

      }\r\n"
    sig: function showFleetingMessage(msg, dParent, styles = {}, ms = 3000, msDelay
      = 0, fade = true){}
    region: fleetingMessage (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fleetingMessage:
    name: fleetingMessage
    code: "function fleetingMessage(msg, d, styles, ms, fade) {\r

      \  if (isString(msg)) {\r

      \    dFleetingMessage.innerHTML = msg;\r

      \    mStyle(dFleetingMessage, styles);\r

      \  } else {\r

      \    mAppend(dFleetingMessage, msg);\r

      \  }\r

      \  if (fade) Animation1 = mAnimate(dFleetingMessage, 'opacity', [1,
      .4, 0], null, ms, 'ease-in', 0, 'both');\r

      \  return dFleetingMessage;\r

      }\r\n"
    sig: function fleetingMessage(msg, d, styles, ms, fade){}
    region: fleetingMessage (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getKeySets:
    name: getKeySets
    code: "function getKeySets() {\r

      \  makeCategories();\r

      \  let res = {};\r

      \  for (const k in Syms) {\r

      \    let info = Syms[k];\r

      \    if (nundef(info.cats)) continue;\r

      \    for (const ksk of info.cats) {\r

      \      lookupAddIfToList(res, [ksk], k);\r

      \    }\r

      \  }\r

      \  res.animals = getAnimals();\r

      \  res.nature = getNature();\r

      \  localStorage.setItem('KeySets', JSON.stringify(res));\r

      \  return res;\r

      }\r\n"
    sig: function getKeySets(){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getAnimals:
    name: getAnimals
    code: "function getAnimals() {\r

      \  let gr = 'Animals & Nature';\r

      \  let result = [];\r

      \  for (const sg in ByGroupSubgroup[gr]) {\r

      \    if (startsWith(sg, 'anim')) result =
      result.concat(ByGroupSubgroup[gr][sg]);\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function getAnimals(){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getNature:
    name: getNature
    code: "function getNature() {\r

      \  let gr = 'Animals & Nature';\r

      \  let result = [];\r

      \  for (const sg in ByGroupSubgroup[gr]) {\r

      \    result = result.concat(ByGroupSubgroup[gr][sg]);\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function getNature(){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getGSGElements:
    name: getGSGElements
    code: "function getGSGElements(gCond, sCond) {\r

      \  let keys = [];\r

      \  let byg = ByGroupSubgroup;\r

      \  for (const gKey in byg) {\r

      \    if (!gCond(gKey)) continue;\r

      \    for (const sKey in byg[gKey]) {\r

      \      if (!sCond(sKey)) continue;\r

      \      keys = keys.concat(byg[gKey][sKey]);\r

      \    }\r

      \  }\r

      \  return keys.sort();\r

      }\r\n"
    sig: function getGSGElements(gCond, sCond){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  makeCategories:
    name: makeCategories
    code: "function makeCategories() {\r

      \  let keys = Categories = {\r

      \    animal: getGSGElements(g => g == 'Animals & Nature', s =>
      startsWith(s, 'animal')),\r

      \    clothing: getGSGElements(g => g == 'Objects', s => s ==
      'clothing'),\r

      \    emotion: getGSGElements(g => g == 'Smileys & Emotion', s =>
      startsWith(s, 'face') && !['face-costume', 'face-hat'].includes(s)),\r

      \    food: getGSGElements(g => g == 'Food & Drink', s =>
      startsWith(s, 'food')),\r

      \    'game/toy': (['sparkler', 'firecracker', 'artist palette',
      'balloon', 'confetti
      ball'].concat(ByGroupSubgroup['Activities']['game'])).sort(),\r

      \    gesture: getGSGElements(g => g == 'People & Body', s =>
      startsWith(s, 'hand')),\r

      \    job: ByGroupSubgroup['People & Body']['job'],\r

      \    mammal: ByGroupSubgroup['Animals & Nature']['animal-mammal'],\r

      \    music: getGSGElements(g => g == 'Objects', s => startsWith(s,
      'musi')),\r

      \    object: getGSGElements(g => g == 'Objects', s => true),\r

      \    place: getGSGElements(g => g == 'Travel & Places', s =>
      startsWith(s, 'place')),\r

      \    plant: getGSGElements(g => g == 'Animals & Nature' || g ==
      'Food & Drink', s => startsWith(s, 'plant') || s == 'food-vegetable' || s
      == 'food-fruit'),\r

      \    sport: ByGroupSubgroup['Activities']['sport'],\r

      \    tool: getGSGElements(g => g == 'Objects', s => s == 'tool'),\r

      \    transport: getGSGElements(g => g == 'Travel & Places', s =>
      startsWith(s, 'transport')),\r

      \  };\r

      \  let incompatible = DA.incompatibleCats = {\r

      \    animal: ['mammal'],\r

      \    clothing: ['object'],\r

      \    emotion: ['gesture'],\r

      \    food: ['plant', 'animal'],\r

      \    'game/toy': ['object', 'music'],\r

      \    gesture: ['emotion'],\r

      \    job: ['sport'],\r

      \    mammal: ['animal'],\r

      \    music: ['object', 'game/toy'],\r

      \    object: ['music', 'clothing', 'game/toy', 'tool'],\r

      \    place: [],\r

      \    plant: ['food'],\r

      \    sport: ['job'],\r

      \    tool: ['object'],\r

      \    transport: [],\r

      \  }\r

      }\r\n"
    sig: function makeCategories(){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  genCats:
    name: genCats
    code: "function genCats(n) {\r

      \  let di = {};\r

      \  let cats = Object.keys(Categories);\r

      \  for (let i = 0; i < n; i++) {\r

      \    let cat = chooseRandom(cats);\r

      \    let incompat = DA.incompatibleCats[cat];\r

      \    cats = arrMinus(cats, incompat);\r

      \    removeInPlace(cats, cat);\r

      \    di[cat] = Categories[cat];\r

      \  }\r

      \  return di;\r

      }\r\n"
    sig: function genCats(n){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  oneWordKeys:
    name: oneWordKeys
    code: "function oneWordKeys(keys) { return keys.filter(x => !x.includes(' '));
      }\r\n"
    sig: function oneWordKeys(keys){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  removeDuplicates:
    name: removeDuplicates
    code: "function removeDuplicates(keys, prop) {\r

      \  let di = {};\r

      \  let res = [];\r

      \  let items = keys.map(x => Syms[x]);\r

      \  for (const item of items) {\r

      \    if (isdef(di[item.best])) { continue; }\r

      \    res.push(item);\r

      \    di[item.key] = true;\r

      \  }\r

      \  return res.map(x => x.key);\r

      }\r\n"
    sig: function removeDuplicates(keys, prop){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  setKeys:
    name: setKeys
    code: "function setKeys({ allowDuplicates, nMin = 25, lang, key, keySets,
      filterFunc, param, confidence, sortByFunc } = {}) {\r

      \  let keys = jsCopy(keySets[key]);\r

      \  if (isdef(nMin)) {\r

      \    let diff = nMin - keys.length;\r

      \    let additionalSet = diff > 0 ? nMin > 100 ?
      firstCondDictKeys(keySets, k => k != key && keySets[k].length > diff) :
      'best100' : null;\r

      \    if (additionalSet) KeySets[additionalSet].map(x => addIf(keys,
      x));\r

      \  }\r

      \  let primary = [];\r

      \  let spare = [];\r

      \  for (const k of keys) {\r

      \    let info = Syms[k];\r

      \    info.best = info[lang];\r

      \    if (nundef(info.best)) {\r

      \      let ersatzLang = (lang == 'D' ? 'D' : 'E');\r

      \      let klang = 'best' + ersatzLang;\r

      \      if (nundef(info[klang])) info[klang] = lastOfLanguage(k,
      ersatzLang);\r

      \    }\r

      \    let isMatch = true;\r

      \    if (isdef(filterFunc)) isMatch = isMatch && filterFunc(param,
      k, info.best);\r

      \    if (isdef(confidence)) isMatch = info[klang + 'Conf'] >=
      confidence;\r

      \    if (isMatch) { primary.push(k); } else { spare.push(k); }\r

      \  }\r

      \  if (isdef(nMin)) {\r

      \    let len = primary.length;\r

      \    let nMissing = nMin - len;\r

      \    if (nMissing > 0) { let list = choose(spare, nMissing); spare =
      arrMinus(spare, list); primary = primary.concat(list); }\r

      \  }\r

      \  if (isdef(sortByFunc)) { sortBy(primary, sortByFunc); }\r

      \  if (isdef(nMin)) console.assert(primary.length >= nMin);\r

      \  if (nundef(allowDuplicates)) {\r

      \    primary = removeDuplicates(primary);\r

      \  }\r

      \  return primary;\r

      }\r\n"
    sig: function setKeys({ allowDuplicates, nMin = 25, lang, key, keySets,
      filterFunc, param, confidence, sortByFunc } = {}){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  loader_on:
    name: loader_on
    code: "function loader_on() { let d = mBy('loader_holder'); if (isdef(d))
      d.className = 'loader_on'; }\r\n"
    sig: function loader_on(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  loader_off:
    name: loader_off
    code: "function loader_off() { let d = mBy('loader_holder'); if (isdef(d))
      d.className = 'loader_off'; }\r\n"
    sig: function loader_off(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  click_shield_on:
    name: click_shield_on
    code: "function click_shield_on(msg) { show_shield(msg); }\r\n"
    sig: function click_shield_on(msg){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  click_shield_off:
    name: click_shield_off
    code: "function click_shield_off() { mBy('dShield').style.display = 'none';
      }\r\n"
    sig: function click_shield_off(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  show_shield:
    name: show_shield
    code: "function show_shield(msg) {\r

      \  mBy('dShield').style.display = 'block';\r

      \  mBy('dShield').innerHTML = msg;\r

      }\r\n"
    sig: function show_shield(msg){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  polling_shield_on:
    name: polling_shield_on
    code: "function polling_shield_on(msg) {\r

      \  let d = mBy('dPollingShield');\r

      \  d.style.display = 'block';\r

      \  d.innerHTML = msg;\r

      }\r\n"
    sig: function polling_shield_on(msg){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  polling_shield_off:
    name: polling_shield_off
    code: "function polling_shield_off() { mBy('dPollingShield').style.display =
      'none'; }\r\n"
    sig: function polling_shield_off(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  just_message:
    name: just_message
    code: "function just_message(msg, styles = {}) {\r

      \  alert(msg);\r

      }\r\n"
    sig: function just_message(msg, styles = {}){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  status_message:
    name: status_message
    code: "function status_message(msg, styles = {}) {\r

      \  let d = mBy('dMessage'); show(d); clearElement(d);\r

      \  let def_styles = { padding: 20, align: 'center', position:
      'absolute', fg: 'contrast', fz: 24, w: '100vw' };\r

      \  copyKeys(styles, def_styles);\r

      \  let dContent = mDiv(d, def_styles, null, msg);\r

      \  return dContent;\r

      }\r\n"
    sig: function status_message(msg, styles = {}){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  status_message_off:
    name: status_message_off
    code: "function status_message_off() {\r

      \  let d = mBy('dMessage');\r

      \  clearElement(d);\r

      \  hide(d);\r

      \  onclick = null;\r

      }\r\n"
    sig: function status_message_off(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  badges_on:
    name: badges_on
    code: "function badges_on() {\r

      \  if (!isdef(mBy('dLeiste'))) initSidebar();\r

      \  Session.is_badges = true;\r

      \  Badges = [];\r

      }\r\n"
    sig: function badges_on(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  badges_off:
    name: badges_off
    code: "function badges_off() {\r

      \  hide('dLeftSide');\r

      \  delete Session.is_badges;\r

      \  Badges = [];\r

      }\r\n"
    sig: function badges_off(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  initTable:
    name: initTable
    code: "function initTable() { dTable = toElem('map'); }\r\n"
    sig: function initTable(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  initSidebar:
    name: initSidebar
    code: "function initSidebar() {\r

      \  show('dLeftSide');\r

      \  let dParent = mBy('dLeftSide');\r

      \  clearElement(dParent);\r

      \  dLeiste = mDiv(dParent);\r

      \  mStyle(dLeiste, { wmin: 70, hmax: '100vh', display: 'flex',
      'flex-flow': 'column wrap' });\r

      }\r\n"
    sig: function initSidebar(){}
    region: initTable (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  initAux:
    name: initAux
    code: "function initAux() {\r

      \  dAux = mBy('dAux');\r

      }\r\n"
    sig: function initAux(){}
    region: initTable (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  initLineTop:
    name: initLineTop
    code: "function initLineTop() {\r

      \  dLineTopOuter = mDiv(table); dLineTopOuter.id = 'lineTopOuter';\r

      \  dLineTop = mDiv(dLineTopOuter); dLineTop.id = 'lineTop';\r

      \  dLineTopLeft = mDiv(dLineTop); dLineTopLeft.id = 'lineTopLeft';\r

      \  dLineTopRight = mDiv(dLineTop); dLineTopRight.id =
      'lineTopRight';\r

      \  dLineTopMiddle = mDiv(dLineTop); dLineTopMiddle.id =
      'lineTopMiddle';\r

      \  dScore = mDiv(dLineTopMiddle);\r

      \  dScore.id = 'dScore';\r

      \  dLevel = mDiv(dLineTopLeft);\r

      \  dLevel.id = 'dLevel';\r

      \  dGameTitle = mDiv(dLineTopRight);\r

      \  dGameTitle.id = 'dGameTitle';\r

      \  let d = mDiv(dLineTopRight);\r

      \  d.id = 'time';\r

      \  mLinebreak(table);\r

      }\r\n"
    sig: function initLineTop(){}
    region: initTable (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  initLineTitle:
    name: initLineTitle
    code: "function initLineTitle() {\r

      \  dLineTitleOuter = mDiv(table); dLineTitleOuter.id =
      'lineTitleOuter';\r

      \  dLineTitle = mDiv(dLineTitleOuter); dLineTitle.id =
      'lineTitle';\r

      \  if (PROJECTNAME != 'belinda') mStyle(dLineTitle, { matop: 5 });\r

      \  dLineTitleLeft = mDiv(dLineTitle); dLineTitleLeft.id =
      'lineTitleLeft';\r

      \  dLineTitleRight = mDiv(dLineTitle); dLineTitleRight.id =
      'lineTitleRight';\r

      \  dLineTitleMiddle = mDiv(dLineTitle); dLineTitleMiddle.id =
      'lineTitleMiddle';\r

      \  mLinebreak(table);\r

      }\r\n"
    sig: function initLineTitle(){}
    region: initTable (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  initLineTable:
    name: initLineTable
    code: "function initLineTable() {\r

      \  dLineTableOuter = mDiv(table); dLineTableOuter.id =
      'lineTableOuter';\r

      \  dLineTable = mDiv(dLineTableOuter); dLineTable.id =
      'lineTable';\r

      \  dLineTableLeft = mDiv(dLineTable); dLineTableLeft.id =
      'lineTableLeft';\r

      \  dLineTableMiddle = mDiv(dLineTable); dLineTableMiddle.id =
      'lineTableMiddle';\r

      \  mClass(dLineTableMiddle, 'flexWrap');\r

      \  dLineTableRight = mDiv(dLineTable); dLineTableRight.id =
      'lineTableRight';\r

      \  mLinebreak(table);\r

      }\r\n"
    sig: function initLineTable(){}
    region: initTable (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  initLineBottom:
    name: initLineBottom
    code: "function initLineBottom() {\r

      \  dLineBottomOuter = mDiv(table); dLineBottomOuter.id =
      'lineBottomOuter';\r

      \  dLineBottom = mDiv(dLineBottomOuter); dLineBottom.id =
      'lineBottom';\r

      \  dLineBottomLeft = mDiv(dLineBottom); dLineBottomLeft.id =
      'lineBottomLeft';\r

      \  dLineBottomRight = mDiv(dLineBottom); dLineBottomRight.id =
      'lineBottomRight';\r

      \  dLineBottom = mDiv(dLineBottom); dLineBottom.id =
      'lineBottomMiddle';\r

      \  mLinebreak(table);\r

      }\r\n"
    sig: function initLineBottom(){}
    region: initTable (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  init_internet:
    name: init_internet
    code: "function init_internet() { DA.internet = navigator.onLine; } \r\n"
    sig: function init_internet(){}
    region: internet (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  go_online:
    name: go_online
    code: "function go_online() { DA.internet = true; }\r\n"
    sig: function go_online(){}
    region: internet (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  go_offline:
    name: go_offline
    code: "function go_offline() { DA.internet = false; }\r\n"
    sig: function go_offline(){}
    region: internet (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  is_online:
    name: is_online
    code: "function is_online() { return lookup(DA, ['internet']); }\r\n"
    sig: function is_online(){}
    region: internet (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  is_really_online:
    name: is_really_online
    code: "function is_really_online() { return navigator.onLine; }\r\n"
    sig: function is_really_online(){}
    region: internet (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  register_menu_item:
    name: register_menu_item
    code: "function register_menu_item(elem, key, handler) { }\r\n"
    sig: function register_menu_item(elem, key, handler){}
    region: menu (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  menu_find_elem:
    name: menu_find_elem
    code: "function menu_find_elem(key, elem) {\r

      \  elem = isdef(elem) ? elem : isdef(mBy('label_' + key)) ?
      mBy('label_' + key) : isdef(mBy(key)) ? mBy(key) : isdef(Items[key]) ?
      iDiv(Items[key]) : null;\r

      \  if (nundef(elem)) { console.log('no menu with key', key); return
      null; }\r

      \  return elem;\r

      }\r\n"
    sig: function menu_find_elem(key, elem){}
    region: menu (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  menu_enable:
    name: menu_enable
    code: "function menu_enable(key, elem) {\r

      \  let d = menu_find_elem(key, elem);\r

      \  if (d) {\r

      \    mClassRemove(d, 'disabled');\r

      \    mClass(d, 'enabled');\r

      \    d.setAttribute('enabled', true);\r

      \  }\r

      }\r\n"
    sig: function menu_enable(key, elem){}
    region: menu (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  menu_disable:
    name: menu_disable
    code: "function menu_disable(key, elem) {\r

      \  let d = menu_find_elem(key, elem);\r

      \  if (d) {\r

      \    mClassRemove(d, 'enabled');\r

      \    mClass(d, 'disabled');\r

      \    d.setAttribute('enabled', false);\r

      \  }\r

      }\r\n"
    sig: function menu_disable(key, elem){}
    region: menu (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  menu_enabled:
    name: menu_enabled
    code: "function menu_enabled(key, elem) {\r

      \  let d = menu_find_elem(key, elem);\r

      \  return d ? mHasClass(d, 'enabled') : false;\r

      }\r\n"
    sig: function menu_enabled(key, elem){}
    region: menu (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  disable_sidebar:
    name: disable_sidebar
    code: "function disable_sidebar() { close_sidebar(); }\r\n"
    sig: function disable_sidebar(){}
    region: sidebar (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  close_sidebar:
    name: close_sidebar
    code: "function close_sidebar() {\r

      \  let d = mBy('left_panel'); d.style.flex = 0;\r

      \  DA.left_panel = 'closed';\r

      }\r\n"
    sig: function close_sidebar(){}
    region: sidebar (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  open_sidebar:
    name: open_sidebar
    code: "function open_sidebar() {\r

      \  DA.left_panel = 'open';\r

      \  mBy('left_panel').style.flex = 1;\r

      }\r\n"
    sig: function open_sidebar(){}
    region: sidebar (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  toggle_sidebar:
    name: toggle_sidebar
    code: "function toggle_sidebar() {\r

      \  if (nundef(DA.left_panel) || DA.left_panel == 'open')
      close_sidebar(); else open_sidebar();\r

      }\r\n"
    sig: function toggle_sidebar(){}
    region: sidebar (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  add_new_user:
    name: add_new_user
    code: "function add_new_user(udata, save = true) {\r

      \  console.log('WILL NOT ADD NEW USERS AT THIS TIME!!!', udata);
      return;\r

      \  console.assert(isDict(udata) && isdef(udata.name) &&
      isString(udata.name) && udata.name.length < 50, 'CANNOT ADD THIS WEIRED
      USER ' + udata.name);\r

      \  DB.users[udata.name] = udata;\r

      \  if (save) db_save();\r

      \  return udata;\r

      }\r\n"
    sig: function add_new_user(udata, save = true){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  add_users_to_sql_db:
    name: add_users_to_sql_db
    code: "async function add_users_to_sql_db(not_in_sql_db) {
      to_server(not_in_sql_db, 'add_users'); }\r\n"
    sig: async function add_users_to_sql_db(not_in_sql_db){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  ensure_winnerlist:
    name: ensure_winnerlist
    code: "function ensure_winnerlist(game) { return lookupSet(DB.games, [game,
      'winnerlist'], []); }\r\n"
    sig: function ensure_winnerlist(game){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  get_def_players_for_user:
    name: get_def_players_for_user
    code: "function get_def_players_for_user(uname, list) {\r

      \  if (nundef(list)) list = Session.def_players;\r

      \  removeInPlace(list, uname);\r

      \  list.unshift(uname);\r

      \  Session.def_players = list;\r

      \  return list;\r

      }\r\n"
    sig: function get_def_players_for_user(uname, list){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  get_user_color:
    name: get_user_color
    code: "function get_user_color(uname) { let u = firstCond(Serverdata.users, x =>
      x.name == uname); return colorFrom(u.color); }\r\n"
    sig: function get_user_color(uname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_user_names:
    name: get_user_names
    code: "function get_user_names() { return Object.keys(DB.users); }\r\n"
    sig: function get_user_names(){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  get_current_userdata:
    name: get_current_userdata
    code: "function get_current_userdata() { return DB.users[Session.cur_user];
      }\r\n"
    sig: function get_current_userdata(){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  get_preferred_lang:
    name: get_preferred_lang
    code: "function get_preferred_lang(uname) { return lookup(DB.users, [uname,
      'lang']) ?? 'E'; }\r\n"
    sig: function get_preferred_lang(uname){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  get_startlevel:
    name: get_startlevel
    code: "function get_startlevel(user, game) { return lookup(DB.users, [user,
      'games', game, 'startlevel']) ?? lookup(DB.games, [game,
      'def_startlevel']) ?? 0; }\r\n"
    sig: function get_startlevel(user, game){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  set_preferred_lang:
    name: set_preferred_lang
    code: "function set_preferred_lang(uname, val) { val = val.toUpperCase(); if
      ('EDSFC'.indexOf(val) >= 0) return lookupSetOverride(DB.users, [uname,
      'lang'], val); }\r\n"
    sig: function set_preferred_lang(uname, val){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  set_startlevel:
    name: set_startlevel
    code: "function set_startlevel(user, game, val) { return
      lookupSetOverride(DB.users, [user, 'games', game, 'startlevel'], val);
      }\r\n"
    sig: function set_startlevel(user, game, val){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  get_elo:
    name: get_elo
    code: "function get_elo(user, game) { return lookup(DB.users, [user, 'games',
      game, 'elo']) ?? 100; }\r\n"
    sig: function get_elo(user, game){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  get_winnerlist:
    name: get_winnerlist
    code: "function get_winnerlist(game) { return lookupSet(DB.games, [game,
      'winnerlist'], []); }\r\n"
    sig: function get_winnerlist(game){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  set_elo:
    name: set_elo
    code: "function set_elo(user, game, val) { lookupSetOverride(DB.users, [user,
      'games', game, 'elo'], val); }\r\n"
    sig: function set_elo(user, game, val){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  reset_elo:
    name: reset_elo
    code: "function reset_elo(user, game) { set_elo(user, game, 100); }\r\n"
    sig: function reset_elo(user, game){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  reset_game_values_for_user:
    name: reset_game_values_for_user
    code: "function reset_game_values_for_user(user) {\r

      \  let defaults = {\r

      \    'gul': { gSpotit: { startlevel: 0 }, gMaze: { startlevel: 0 },
      gAnagram: { startlevel: 0 } },\r

      \    'nasi': { gSpotit: { startlevel: 0 }, gMaze: { startlevel: 0 },
      gAnagram: { startlevel: 0 } },\r

      \    'felix': { gSpotit: { startlevel: 5 }, gMaze: { startlevel: 5
      }, gAnagram: { startlevel: 3 } },\r

      \    'lauren': { gSpotit: { startlevel: 5 }, gMaze: { startlevel: 5
      }, gAnagram: { startlevel: 5 } },\r

      \    'mimi': { gSpotit: { startlevel: 0 }, gMaze: { startlevel: 0 },
      gAnagram: { startlevel: 0 } },\r

      \  };\r

      \  let norm = {};\r

      \  for (const g in DB.games) {\r

      \    norm[g] = { startlevel: DB.games[g].def_startlevel };\r

      \  }\r

      \  lookupSetOverride(DB.users, [user, 'games'], valf(defaults[user],
      norm));\r

      }\r\n"
    sig: function reset_game_values_for_user(user){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  reset_game_values_for_all_users:
    name: reset_game_values_for_all_users
    code: "function reset_game_values_for_all_users() { for (const uname in
      DB.users) { reset_game_values_for_user(uname); } }\r\n"
    sig: function reset_game_values_for_all_users(){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  reset_winnerlist_for_game:
    name: reset_winnerlist_for_game
    code: "function reset_winnerlist_for_game(game) { lookupSetOverride(DB.games,
      [game, 'winnerlist'], []); }\r\n"
    sig: function reset_winnerlist_for_game(game){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  reset_winnerlist_for_all_games:
    name: reset_winnerlist_for_all_games
    code: "function reset_winnerlist_for_all_games() { for (const gname in DB.games)
      { reset_winnerlist_for_game(gname); } }\r\n"
    sig: function reset_winnerlist_for_all_games(){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  reset_db_values:
    name: reset_db_values
    code: "function reset_db_values() {\r

      \  reset_winnerlist_for_all_games();\r

      \  reset_game_values_for_all_users();\r

      }\r\n"
    sig: function reset_db_values(){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  load_user:
    name: load_user
    code: "function load_user(name, display_ui = true) {\r

      \  if (nundef(name)) name = 'guest';\r

      \  let udata = lookup(DB, ['users', name]);\r

      \  if (!udata) udata = add_new_user({ name: name, color:
      randomColor(), motto: random_motto(), image: false, games: {}, tables: {}
      });\r

      \  Session.cur_user = name;\r

      \  if (!is_admin(name)) localStorage.setItem('user', name);\r

      \  if (display_ui) show_user(udata);\r

      \  if (name == 'mimi') show('dAdminButtons'); else
      hide('dAdminButtons');\r

      \  return udata;\r

      }\r\n"
    sig: function load_user(name, display_ui = true){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  sync_users:
    name: sync_users
    code: "function sync_users(php_users) {\r

      \  let result = [];\r

      \  let changed = false;\r

      \  for (const udata of php_users) {\r

      \    if (nundef(udata.id)) return php_users;\r

      \    let name = udata.username;\r

      \    let u = DB.users[name];\r

      \    if (nundef(u)) {\r

      \      changed = true;\r

      \      let db_user = { name: name, color: randomColor(), motto:
      random_motto(), image: startsWith(udata.image, name), games: {}, tables:
      {}, };\r

      \      add_new_user(db_user, false);\r

      \      result.push(db_user);\r

      \    } else result.push(u)\r

      \  }\r

      \  if (changed) db_save(); \r

      \  if (!is_online()) return result; \r

      \  let di = {}; php_users.map(x => di[x.username] = x);\r

      \  let not_in_sql_db = [];\r

      \  for (const name in DB.users) {\r

      \    let u = DB.users[name];\r

      \    if (nundef(di[name]) && name != Session.cur_user) {
      not_in_sql_db.push(name); addIf(result, u); }\r

      \  }\r

      \  if (!isEmpty(not_in_sql_db))
      add_users_to_sql_db(not_in_sql_db);\r

      \  return result;\r

      }\r\n"
    sig: function sync_users(php_users){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  user_already_loaded:
    name: user_already_loaded
    code: "function user_already_loaded(name) { return isdef(name && name ==
      Session.cur_user); }\r\n"
    sig: function user_already_loaded(name){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  close_mini_user_info:
    name: close_mini_user_info
    code: "function close_mini_user_info() {\r

      \  setTimeout(() => {\r

      \    mBy('user_info_mini').style.display = 'none';\r

      \  }, 500);\r

      }\r\n"
    sig: function close_mini_user_info(){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  open_mini_user_info:
    name: open_mini_user_info
    code: "function open_mini_user_info() {\r

      \  setTimeout(() => {\r

      \    mBy('user_info_mini').style.display = 'flex';\r

      \  }, 500);\r

      }\r\n"
    sig: function open_mini_user_info(){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  toggle_mini_user_info:
    name: toggle_mini_user_info
    code: "function toggle_mini_user_info() {\r

      \  if (nundef(DA.left_panel) || DA.left_panel == 'open')
      close_mini_user_info(); else open_mini_user_info();\r

      }\r\n"
    sig: function toggle_mini_user_info(){}
    region: user (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  arrToMatrix:
    name: arrToMatrix
    code: "function arrToMatrix(arr, rows, cols) {\r

      \  let i = 0, res = [];\r

      \  for (let r = 0; r < rows; r++) {\r

      \    let rarr = [];\r

      \    for (let c = 0; c < cols; c++) {\r

      \      let a = arr[i]; i++;\r

      \      rarr.push(a);\r

      \    }\r

      \    res.push(rarr);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function arrToMatrix(arr, rows, cols){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sudokuSampleToIndexMatrix:
    name: sudokuSampleToIndexMatrix
    code: "function sudokuSampleToIndexMatrix(s, rows, cols) {\r

      \  if (isNumber(s)) s = String(s);\r

      \  let letters = toLetterArray(s);\r

      \  let nums = letters.map(x => Number(x));\r

      \  let res = [];\r

      \  for (const n of nums) {\r

      \    if (n === 0) res.push(' ');\r

      \    else res.push(n - 1);\r

      \  }\r

      \  let matrix = arrToMatrix(res, rows, cols);\r

      \  return matrix;\r

      }\r\n"
    sig: function sudokuSampleToIndexMatrix(s, rows, cols){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stringToMatrix:
    name: stringToMatrix
    code: "function stringToMatrix(s, rows, cols) {\r

      \  if (isNumber(s)) s = String(s);\r

      \  let letters = toLetterArray(s);\r

      \  let nums = letters.map(x => Number(x));\r

      \  let matrix = arrToMatrix(nums, rows, cols);\r

      }\r\n"
    sig: function stringToMatrix(s, rows, cols){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getSudokuPatternFromDB:
    name: getSudokuPatternFromDB
    code: "function getSudokuPatternFromDB(r, c, index) {\r

      \  let key = '' + r + 'x' + c;\r

      \  let numSamples =
      Object.keys(DB.games.gColoku.samples[key]).length;\r

      \  if (nundef(index)) index = randomNumber(0, numSamples - 1); else
      if (index >= numSamples) index = 1;\r

      \  let sample = DB.games.gColoku.samples[key][index];\r

      \  let pattern = sudokuSampleToIndexMatrix(sample.sol, r, c);\r

      \  let puzzle = sudokuSampleToIndexMatrix(sample.min, r, c);\r

      \  return { pattern: pattern, puzzle: puzzle };\r

      }\r\n"
    sig: function getSudokuPatternFromDB(r, c, index){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getSudokuPattern:
    name: getSudokuPattern
    code: "function getSudokuPattern(r, c) {\r

      \  let patterns = {\r

      \    44: [\r

      \      [[0, 1, 2, 3], [2, 3, 0, 1], [3, 0, 1, 2], [1, 2, 3, 0]],\r

      \      [[0, 1, 2, 3], [3, 2, 0, 1], [2, 3, 1, 0], [1, 0, 3, 2]],\r

      \      [[0, 1, 2, 3], [2, 3, 0, 1], [1, 0, 3, 2], [3, 2, 1, 0]],\r

      \    ],\r

      \  };\r

      \  return chooseRandom(patterns['' + r + c]);\r

      }\r\n"
    sig: function getSudokuPattern(r, c){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  destroySudokuRule:
    name: destroySudokuRule
    code: "function destroySudokuRule(pattern, rows, cols) {\r

      \  let sz = Math.min(rows, cols);\r

      \  let [r1, r2] = choose(range(0, sz - 1), 2);\r

      \  let c = chooseRandom(range(0, sz - 1));\r

      \  if (coin(50)) { arrSwap2d(pattern, r1, c, r2, c); }\r

      \  else if (coin(50)) { arrSwap2d(pattern, c, r1, c, r2); }\r

      }\r\n"
    sig: function destroySudokuRule(pattern, rows, cols){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hasDuplicate:
    name: hasDuplicate
    code: "function hasDuplicate(arr, efunc) {\r

      \  let di = {};\r

      \  if (nundef(efunc)) efunc = x => { return x === ' ' };\r

      \  let i = -1;\r

      \  for (const a of arr) {\r

      \    i += 1;\r

      \    if (efunc(a)) continue;\r

      \    if (a in di) return { i: i, val: a };\r

      \    di[a] = true;\r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function hasDuplicate(arr, efunc){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkSudokuRule:
    name: checkSudokuRule
    code: "function checkSudokuRule(matrix) {\r

      \  let i = 0;\r

      \  for (const arr of matrix) {\r

      \    let dd = hasDuplicate(arr);\r

      \    if (dd) {\r

      \      let err = { type: 'row', row: i, col: dd.i, val: dd.val,
      info: dd, i: i };\r

      \      return err;\r

      \    }\r

      \    i += 1;\r

      \  }\r

      \  i = 0;\r

      \  for (const arr of bGetCols(matrix)) {\r

      \    let dd = hasDuplicate(arr);\r

      \    if (dd) {\r

      \      let err = { type: 'column', col: i, row: dd.i, val: dd.val,
      i: i, info: dd };\r

      \      return err;\r

      \    }\r

      \    i += 1;\r

      \  }\r

      \  let [rows, cols] = [matrix.length, matrix[0].length];\r

      \  let rowsEach = rows == 9 ? 3 : 2;\r

      \  let colsEach = cols == 4 ? 2 : 3;\r

      \  let chunks = bGetChunksWithIndices(matrix, rowsEach, colsEach);\r

      \  i = 0;\r

      \  for (const arr of chunks) {\r

      \    let dd = hasDuplicate(arr);\r

      \    if (dd) {\r

      \      let val = dd.val;\r

      \      let err = { type: 'quadrant', row: val.row, col: val.col,
      val: val.val, i: i, info: dd };\r

      \    }\r

      \    i += 1;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function checkSudokuRule(matrix){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkSudokuRule_trial1:
    name: checkSudokuRule_trial1
    code: "function checkSudokuRule_trial1(matrix) {\r

      \  for (const arr of matrix) { let dd = hasDuplicate(arr); if (dd)
      return { type: 'row', info: dd }; }\r

      \  for (const arr of bGetCols(matrix)) { let dd = hasDuplicate(arr);
      if (dd) return { type: 'column', info: dd }; }\r

      \  let chunks = bGetChunks(matrix, 2, 2);\r

      \  for (const arr of chunks) { let dd = hasDuplicate(arr); if (dd)
      return { type: 'quadrant', info: dd }; }\r

      \  return null;\r

      }\r\n"
    sig: function checkSudokuRule_trial1(matrix){}
    region: sudoku (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bGetSubMatrix:
    name: bGetSubMatrix
    code: "function bGetSubMatrix(arr2d, rFrom, rows, cFrom, cols) {\r

      \  let res = []; for (let i = 0; i < rows; i++) res.push([]);\r

      \  let [rTotal, cTotal] = [arr2d.length, arr2d[0].length];\r

      \  let rIndex = 0;\r

      \  for (let r = rFrom; r < rFrom + rows; r++) {\r

      \    for (let c = cFrom; c < cFrom + cols; c++) {\r

      \      res[rIndex].push(arr2d[r][c]);\r

      \    }\r

      \    rIndex += 1;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function bGetSubMatrix(arr2d, rFrom, rows, cFrom, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bGetSubMatrixWithIndices:
    name: bGetSubMatrixWithIndices
    code: "function bGetSubMatrixWithIndices(arr2d, rFrom, rows, cFrom, cols) {\r

      \  let res = []; for (let i = 0; i < rows; i++) res.push([]);\r

      \  let [rTotal, cTotal] = [arr2d.length, arr2d[0].length];\r

      \  let rIndex = 0;\r

      \  for (let r = rFrom; r < rFrom + rows; r++) {\r

      \    for (let c = cFrom; c < cFrom + cols; c++) {\r

      \      res[rIndex].push({ row: r, col: c, val: arr2d[r][c] });\r

      \    }\r

      \    rIndex += 1;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function bGetSubMatrixWithIndices(arr2d, rFrom, rows, cFrom, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bGetChunksWithIndices:
    name: bGetChunksWithIndices
    code: "function bGetChunksWithIndices(arr2d, rowsEach, colsEach) {\r

      \  let res = [];\r

      \  let [rTotal, cTotal] = [arr2d.length, arr2d[0].length];\r

      \  for (let r = 0; r < rTotal; r += rowsEach) {\r

      \    let m1 = [];\r

      \    for (let c = 0; c < cTotal; c += colsEach) {\r

      \      m1 = bGetSubMatrixWithIndices(arr2d, r, rowsEach, c,
      colsEach);\r

      \      res.push(arrFlatten(m1));\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function bGetChunksWithIndices(arr2d, rowsEach, colsEach){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bGetChunks:
    name: bGetChunks
    code: "function bGetChunks(arr2d, rowsEach, colsEach) {\r

      \  let res = [];\r

      \  let [rTotal, cTotal] = [arr2d.length, arr2d[0].length];\r

      \  for (let r = 0; r < rTotal; r += rowsEach) {\r

      \    let m1 = [];\r

      \    for (let c = 0; c < cTotal; c += colsEach) {\r

      \      m1 = bGetSubMatrix(arr2d, r, rowsEach, c, colsEach);\r

      \      res.push(arrFlatten(m1));\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function bGetChunks(arr2d, rowsEach, colsEach){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bGetRows:
    name: bGetRows
    code: "function bGetRows(arr2d) {\r

      \  return arr2d;\r

      }\r\n"
    sig: function bGetRows(arr2d){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bGetCols:
    name: bGetCols
    code: "function bGetCols(arr2d) {\r

      \  let rows = arr2d.length;\r

      \  let cols = arr2d[0].length;\r

      \  let res = [];\r

      \  for (let c = 0; c < cols; c++) { res.push([]); }\r

      \  for (let r = 0; r < rows; r++) {\r

      \    for (let c = 0; c < cols; c++) {\r

      \      res[c].push(arr2d[r][c]);\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function bGetCols(arr2d){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  printMatrix:
    name: printMatrix
    code: "function printMatrix(arr2d, title = 'result') {\r

      \  let rows = arr2d.length;\r

      \  let cols = arr2d[0].length;\r

      \  let arr = arrFlatten(arr2d);\r

      \  let s = toBoardString(arr, rows, cols);\r

      \  console.log(title, s)\r

      }\r\n"
    sig: function printMatrix(arr2d, title = 'result'){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  boardArrOmitFirstRowCol:
    name: boardArrOmitFirstRowCol
    code: "function boardArrOmitFirstRowCol(boardArr, rows, cols) {\r

      \  let res = [];\r

      \  for (let r = 1; r < rows; r++) {\r

      \    for (let c = 1; c < cols; c++) {\r

      \      let i = iFromRowCol(r, c, rows, cols);\r

      \      res.push(boardArr[i]);\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function boardArrOmitFirstRowCol(boardArr, rows, cols){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cCircle:
    name: cCircle
    code: "function cCircle(c, sz, n, disp = -90) {\r

      \  let rad = sz / 2;\r

      \  centers = getEllipsePoints(rad, rad, n, disp)\r

      \  centers = centers.map(pt => ({ x: pt.X + c.x, y: pt.Y + c.y
      }));\r

      \  return centers;\r

      }\r\n"
    sig: function cCircle(c, sz, n, disp = -90){}
    region: expand (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _calc_hex_col_array_old:
    name: _calc_hex_col_array_old
    code: "function _calc_hex_col_array_old(rows, cols) {\r

      \  let colarr = [];\r

      \  for (let i = 0; i < rows; i++) {\r

      \    colarr[i] = cols;\r

      \    if (i < (rows - 1) / 2) cols += 1;\r

      \    else cols -= 1;\r

      \  }\r

      \  return colarr;\r

      }\r\n"
    sig: function _calc_hex_col_array_old(rows, cols){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fillColarr:
    name: fillColarr
    code: "function fillColarr(colarr, items) {\r

      \  let i = 0;\r

      \  let result = [];\r

      \  for (const r of colarr) {\r

      \    let arr = [];\r

      \    for (let c = 0; c < r; c++) {\r

      \      arr.push(items[i]); i++;\r

      \    }\r

      \    result.push(arr);\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function fillColarr(colarr, items){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hex1Count:
    name: hex1Count
    code: "function hex1Count(rows, topcols) {\r

      \  let colarr = _calc_hex_col_array(rows, topcols);\r

      \  let total = 0;\r

      \  for (let r = 0; r < colarr.length; r++) { total += colarr[r]; }\r

      \  return total;\r

      }\r\n"
    sig: function hex1Count(rows, topcols){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hex1Indices:
    name: hex1Indices
    code: "function hex1Indices(rows, topcols) {\r

      \  let colarr = _calc_hex_col_array(rows, topcols);\r

      \  let iStart = Math.floor(rows / 2);\r

      \  let inc = -1;\r

      \  let res = [];\r

      \  for (let r = 0; r < colarr.length; r++) {\r

      \    let n = colarr[r];\r

      \    for (let c = 0; c < n; c++) {\r

      \      let icol = iStart + 2 * c;\r

      \      let irow = r;\r

      \      res.push({ row: irow, col: icol });\r

      \    }\r

      \    if (iStart == 0) inc = 1;\r

      \    iStart += inc;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function hex1Indices(rows, topcols){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hex1Board:
    name: hex1Board
    code: "function hex1Board(dParent, rows, topcols, styles = {}) {\r

      \  let g = new UIGraph(dParent, styles);\r

      \  let [w, h] = [valf(lookup(styles, ['node', 'w']), 50),
      valf(lookup(styles, ['node', 'h']), 50)];\r

      \  let total = hex1Count(rows, topcols);\r

      \  let nids = g.addNodes(total);\r

      \  g.hex1(rows, topcols, w + 4, h + 4);\r

      \  let indices = hex1Indices(rows, topcols);\r

      \  let ids = g.getNodeIds();\r

      \  let di = {};\r

      \  for (let i = 0; i < ids.length; i++) {\r

      \    let [row, col] = [indices[i].row, indices[i].col];\r

      \    let id = ids[i];\r

      \    lookupSet(di, [row, col], id);\r

      \    g.setProp(id, 'row', row);\r

      \    g.setProp(id, 'col', col);\r

      \    g.setProp(id, 'label', `${row},${col}`);\r

      \  }\r

      \  for (let i = 0; i < ids.length; i++) {\r

      \    let [row, col] = [indices[i].row, indices[i].col];\r

      \    let id = ids[i];\r

      \    let nid2 = lookup(di, [row, col + 2]); if (nid2) g.addEdge(id,
      nid2);\r

      \    nid2 = lookup(di, [row + 1, col - 1]); if (nid2) g.addEdge(id,
      nid2);\r

      \    nid2 = lookup(di, [row + 1, col + 1]); if (nid2) g.addEdge(id,
      nid2);\r

      \  }\r

      \  let byrc = {};\r

      \  for (const r in di) {\r

      \    byrc[r] = {};\r

      \    for (const c in di[r]) {\r

      \      byrc[r][c] = g.getNode(di[r][c]).data();\r

      \    }\r

      \  }\r

      \  g.di = di;\r

      \  g.byrc = byrc;\r

      \  g.rc = (i, j, f) => (isdef(f)) ? f(g.getNode(di[i][j])) :
      g.getNode(di[i][j]);\r

      \  return g;\r

      }\r\n"
    sig: function hex1Board(dParent, rows, topcols, styles = {}){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  catanBoard:
    name: catanBoard
    code: "function catanBoard(dParent, rows, topcols, styles = {}) {\r

      \  let g = hex1Board(dParent, rows, topcols, styles);\r

      \  hexCornerNodes(g);\r

      }\r\n"
    sig: function catanBoard(dParent, rows, topcols, styles = {}){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  correctPolys:
    name: correctPolys
    code: "function correctPolys(polys, approx = 10) {\r

      \  let clusters = [];\r

      \  for (const p of polys) {\r

      \    for (const pt of p) {\r

      \      let found = false;\r

      \      for (const cl of clusters) {\r

      \        for (const v of cl) {\r

      \          let dx = Math.abs(v.x - pt.x);\r

      \          let dy = Math.abs(v.y - pt.y);\r

      \          if (dx < approx && dy < approx) {\r

      \            cl.push(pt);\r

      \            found = true;\r

      \            break;\r

      \          }\r

      \        }\r

      \        if (found) break;\r

      \      }\r

      \      if (!found) {\r

      \        clusters.push([pt]);\r

      \      }\r

      \    }\r

      \  }\r

      \  let vertices = [];\r

      \  for (const cl of clusters) {\r

      \    let sumx = 0;\r

      \    let sumy = 0;\r

      \    let len = cl.length;\r

      \    for (const pt of cl) {\r

      \      sumx += pt.x;\r

      \      sumy += pt.y;\r

      \    }\r

      \    vertices.push({ x: Math.round(sumx / len), y: Math.round(sumy /
      len) });\r

      \  }\r

      \  for (const p of polys) {\r

      \    for (const pt of p) {\r

      \      let found = false;\r

      \      for (const v of vertices) {\r

      \        let dx = Math.abs(v.x - pt.x);\r

      \        let dy = Math.abs(v.y - pt.y);\r

      \        if (dx < approx && dy < approx) {\r

      \          if (dx != 0 || dy != 0) {\r

      \            pt.x = v.x;\r

      \            pt.y = v.y;\r

      \          }\r

      \          found = true;\r

      \        }\r

      \        if (found) break;\r

      \      }\r

      \      if (!found) {\r

      \        error('point not found in vertices!!! ' + pt.x + ' ' +
      pt.y);\r

      \      }\r

      \    }\r

      \  }\r

      \  return vertices;\r

      }\r\n"
    sig: function correctPolys(polys, approx = 10){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getCornerVertices:
    name: getCornerVertices
    code: "function getCornerVertices(centers, w = 100, h = 100) {\r

      \  let polys = [];\r

      \  for (const pt of centers) {\r

      \    let poly = getHexPoly(pt.x, pt.y, w, h);\r

      \    polys.push(poly);\r

      \  }\r

      \  let vertices = correctPolys(polys, 1);\r

      \  return vertices;\r

      }\r\n"
    sig: function getCornerVertices(centers, w = 100, h = 100){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hexCornerNodes:
    name: hexCornerNodes
    code: "function hexCornerNodes(g) {\r

      \  let nodes = g.getNodes();\r

      \  let centers = nodes.map(x => x.data('center'));\r

      \  let vertices = getCornerVertices(centers);\r

      \  for (const f of nodes) {\r

      \    let center = f.data('center');\r

      \    console.log('center', center)\r

      \  }\r

      }\r\n"
    sig: function hexCornerNodes(g){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  makeEdge:
    name: makeEdge
    code: "function makeEdge(dParent, v1, v2, dFromEdge, ew = 20) {\r

      \  let switched = false;\r

      \  if (v1.x == v2.x) {\r

      \    if (v1.y > v2.y) { let h = v2; v2 = v1; v1 = h; switched =
      true; }\r

      \    let w = ew / 2;\r

      \    let sp = `polygon(${v1.x - w + ew}px ${v1.y + dFromEdge +
      ew}px, ${v1.x + w + ew}px ${v1.y + dFromEdge + ew}px, ${v2.x + w + ew}px
      ${v2.y - dFromEdge + ew}px, ${v2.x - w + ew}px ${v2.y - dFromEdge +
      ew}px)`;\r

      \    let de = mDiv(dParent, { position: 'absolute', left: -ew, top:
      -ew, w: '120%', h: '120%' });\r

      \    mClass(de, 'edge');\r

      \    mStyle(de, { 'clip-path': sp });\r

      \    return mItem(null, { div: de }, { type: 'edge' }, true);\r

      \  }\r

      \  if (v1.x > v2.x) { let h = v2; v2 = v1; v1 = h; switched = true;
      }\r

      \  let dx = v2.x - v1.x;\r

      \  let dy = v2.y - v1.y;\r

      \  let m = dy / dx;\r

      \  let [x1, y1, x2, y2] = [v1.x, v1.y, v2.x, v2.y];\r

      \  let alpha = Math.atan(m);\r

      \  let xa = x1 + dFromEdge * Math.cos(alpha);\r

      \  let ya = y1 + dFromEdge * Math.sin(alpha);\r

      \  let xe = x2 - dFromEdge * Math.cos(alpha);\r

      \  let ye = y2 - dFromEdge * Math.sin(alpha);\r

      \  let m2 = -1 / m;\r

      \  let beta = Math.atan(m2);\r

      \  let w = ew / 2;\r

      \  let x1t = xa + w * Math.cos(beta);\r

      \  let y1t = ya + w * Math.sin(beta);\r

      \  let x1b = xa - w * Math.cos(beta);\r

      \  let y1b = ya - w * Math.sin(beta);\r

      \  let x2t = xe + w * Math.cos(beta);\r

      \  let y2t = ye + w * Math.sin(beta);\r

      \  let x2b = xe - w * Math.cos(beta);\r

      \  let y2b = ye - w * Math.sin(beta);\r

      \  let de = mDiv(dParent, { position: 'absolute', left: 0, top: 0,
      w: '120%', h: '120%' });\r

      \  mStyle(de, { 'clip-path': `polygon(${x1t}px ${y1t}px, ${x2t}px
      ${y2t}px, ${x2b}px ${y2b}px, ${x1b}px ${y1b}px)` });\r

      \  mClass(de, 'edge');\r

      \  return mItem(null, { div: de }, { type: 'edge' }, true);\r

      }\r\n"
    sig: function makeEdge(dParent, v1, v2, dFromEdge, ew = 20){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  neighborhood:
    name: neighborhood
    code: "function neighborhood(items, byrc) {\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of items) {\r

      \    if (info.type != 'field') continue;\r

      \    let [r, c] = [info.row, info.col];\r

      \    info.nodeItems = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r - 1, c - 1]),\r

      \    ];\r

      \    info.nodes = info.nodeItems.map(x => isdef(x) ? x.id : null);\r

      \    delete info.nodeItems;\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neiItems = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \    info.nei = info.neiItems.map(x => isdef(x) ? x.id : null);\r

      \    delete info.neiItems;\r

      \  }\r

      }\r\n"
    sig: function neighborhood(items, byrc){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  addRowsCols:
    name: addRowsCols
    code: "function addRowsCols(items) {\r

      \  let byrc = {};\r

      \  let byx = sortBy(items, 'x');\r

      \  let c = 0, x = byx[0].x;\r

      \  for (let i = 0; i < byx.length; i++) {\r

      \    let item = byx[i];\r

      \    if (!isCloseTo(item.x, x, 2)) { c += 1; x = item.x; }\r

      \    item.col = c;\r

      \  }\r

      \  let byy = sortBy(items, 'y');\r

      \  let r = 0, y = byy[0].y;\r

      \  for (let i = 0; i < byy.length; i++) {\r

      \    let item = byy[i];\r

      \    if (!isCloseTo(item.y, y, 2)) { r += 1; y = item.y; }\r

      \    item.row = r;\r

      \    lookupSet(byrc, [item.row, item.col], item);\r

      \  }\r

      \  return byrc;\r

      }\r\n"
    sig: function addRowsCols(items){}
    region: hex (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSymFramed:
    name: mSymFramed
    code: "function mSymFramed(info, bg, sz) {\r

      \  let [w, h, fz] = [sz, sz, sz * .7];\r

      \  return mCreateFrom(`<div style='\r

      \  text-align:center;display:inline;background-color:${bg};\r

      \  font-size:${fz}px;overflow:hidden;\r

      \  font-family:${info.family}'>${info.text}</div>`);\r

      }\r\n"
    sig: function mSymFramed(info, bg, sz){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mgPos:
    name: mgPos
    code: "function mgPos(card, el, x = 0, y = 0, unit = '%', anchor = 'center') {\r

      \  mAppend(iG(card), el);\r

      \  let box = el.getBBox();\r

      \  console.log('rect', box);\r

      \  el.setAttribute('x', x);\r

      \  el.setAttribute('y', y);\r

      }\r\n"
    sig: function mgPos(card, el, x = 0, y = 0, unit = '%', anchor = 'center'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mgSize:
    name: mgSize
    code: "function mgSize(el, h, w) {\r

      \  el.setAttribute('height', h);\r

      \  if (isdef(w)) el.setAttribute('width', w);\r

      }\r\n"
    sig: function mgSize(el, h, w){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mgSuit:
    name: mgSuit
    code: "function mgSuit(key) {\r

      \  let el = gCreate('use');\r

      \  el.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href',
      '#' + key);\r

      \  return el;\r

      }\r\n"
    sig: function mgSuit(key){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mgSym:
    name: mgSym
    code: "function mgSym(key) {\r

      \  let el = gCreate('text');\r

      \  let info = Syms[key];\r

      \  mStyle(el, { family: info.family });\r

      \  el.innerHTML = info.text;\r

      \  return el;\r

      }\r\n"
    sig: function mgSym(key){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mgShape:
    name: mgShape
    code: "function mgShape(key) {\r\n}\r\n"
    sig: function mgShape(key){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mgSuit1:
    name: mgSuit1
    code: "function mgSuit1(card, key, h, x, y) {\r

      \  el = document.createElementNS('http://www.w3.org/2000/svg',
      'use');\r

      \  el.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href',
      `#${key}`);\r

      \  el.setAttribute('height', h);\r

      \  el.setAttribute('width', h);\r

      \  el.setAttribute('x', x);\r

      \  el.setAttribute('y', y);\r

      \  mAppend(iG(card), el);\r

      \  return el;\r

      }\r\n"
    sig: function mgSuit1(card, key, h, x, y){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  useSymbolElemNO:
    name: useSymbolElemNO
    code: "function useSymbolElemNO(key = 'Treff', h = 50, x = 0, y = 0) {\r

      \  return mCreateFrom(`<use xlink:href=\"#${key}\" height=\"${h}\"
      x=\"${x}\" y=\"${y}\"></use>`);\r

      }\r\n"
    sig: function useSymbolElemNO(key = 'Treff', h = 50, x = 0, y = 0){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  fitSvg:
    name: fitSvg
    code: "function fitSvg(el) {\r

      \  const box = el.querySelector('text').getBBox();\r

      \  el.style.width = `${box.width}px`;\r

      \  el.style.height = `${box.height}px`;\r

      }\r\n"
    sig: function fitSvg(el){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cBlankSvg:
    name: cBlankSvg
    code: "function cBlankSvg(dParent, styles = {}) {\r

      \  if (nundef(styles.h)) styles.h = Card.sz;\r

      \  if (nundef(styles.w)) styles.w = styles.h * .7;\r

      \  if (nundef(styles.bg)) styles.bg = 'white';\r

      \  styles.position = 'relative';\r

      \  let [w, h, sz] = [styles.w, styles.h, Math.min(styles.w,
      styles.h)];\r

      \  if (nundef(styles.rounding)) styles.rounding = sz * .05;\r

      \  let d = mDiv(dParent, styles, null, null, 'card');\r

      \  let svg = mgTag('svg', d, { width: '100%', height: '100%' }); \r

      \  let g = mgTag('g', svg);\r

      \  let item = mItem(null, { div: d, svg: svg, g: g }, { type:
      'card', sz: sz });\r

      \  copyKeys(styles, item);\r

      \  return item;\r

      }\r\n"
    sig: function cBlankSvg(dParent, styles = {}){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mSymbol:
    name: mSymbol
    code: "function mSymbol(key, dParent, sz, styles = {}) {\r

      \  console.log('key', key)\r

      \  let info = symbolDict[key];\r

      \  fzStandard = info.fz;\r

      \  hStandard = info.h[0];\r

      \  wStandard = info.w[0];\r

      \  let fzMax = fzStandard * sz / Math.max(hStandard, wStandard);\r

      \  fzMax *= .9;\r

      \  let fz = isdef(styles.fz) && styles.fz < fzMax ? styles.fz :
      fzMax;\r

      \  let wi = wStandard * fz / 100;\r

      \  let hi = hStandard * fz / 100;\r

      \  let vpadding = 2 + Math.ceil((sz - hi) / 2);
      console.log('***vpadding', vpadding)\r

      \  let hpadding = Math.ceil((sz - wi) / 2);\r

      \  let margin = '' + vpadding + 'px ' + hpadding + 'px';
      //''+vpadding+'px '+hpadding+' ';\r

      \  let newStyles = deepmergeOverride({ fz: fz, align: 'center', w:
      sz, h: sz, bg: 'white' }, styles);\r

      \  newStyles.fz = fz;\r

      \  let d = mDiv(dParent, newStyles);\r

      \  console.log(key, info)\r

      \  let txt = mText(info.text, d, { family: info.family });\r

      \  console.log('-----------', margin, hpadding, vpadding);\r

      \  mStyle(txt, { margin: margin, 'box-sizing': 'border-box' });\r

      \  return d;\r

      }\r\n"
    sig: function mSymbol(key, dParent, sz, styles = {}){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  fitFont:
    name: fitFont
    code: "function fitFont(text, fz = 20, w2 = 200, h2 = 100) {\r

      \  let e1, e2, r1, r2;\r

      \  e1 = mDiv(dTable, { w: w2, h: h2, display: 'inline-block' });\r

      \  do {\r

      \    e2 = mDiv(e1, { fz: fz, display: 'inline-block' }, null,
      text);\r

      \    r1 = getRect(e1);\r

      \    r2 = getRect(e2);\r

      \    e2.remove();\r

      \    fz -= 1;\r

      \  } while (r1.w * r1.h < r2.w * r2.h);\r

      \  e1.remove();\r

      \  return [fz + 1, r2.w, r2.h];\r

      }\r\n"
    sig: function fitFont(text, fz = 20, w2 = 200, h2 = 100){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  makeInnoSymbolDiv:
    name: makeInnoSymbolDiv
    code: "function makeInnoSymbolDiv(info, bg, fz = 20) {\r

      \  return `<div
      style='text-align:center;display:inline;background-color:${bg};width:40px\
      ;padding:2px ${fz / 2}px;\r

      \ 
      font-size:${fz}px;font-family:${info.family}'>${info.text}</div>`;\r

      }\r\n"
    sig: function makeInnoSymbolDiv(info, bg, fz = 20){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  makeInnoNumberDiv:
    name: makeInnoNumberDiv
    code: "function makeInnoNumberDiv(n, fz) {\r

      \  return `<span style='background:white;color:black;padding:2px
      10px;border-radius:50%'>${n}</span>`;\r

      }\r\n"
    sig: function makeInnoNumberDiv(n, fz){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mSymInline:
    name: mSymInline
    code: "function mSymInline(key, dParent, styles) {\r

      \  let info = Syms[key];\r

      \  styles.family = info.family;\r

      \  let el = mSpan(dParent, styles, null, info.text);\r

      \  return text;\r

      }\r\n"
    sig: function mSymInline(key, dParent, styles){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  innoSymInline:
    name: innoSymInline
    code: "function innoSymInline(key, dParent) {\r

      \  s = mSymInline(INNO.sym[key].key, dParent, { fg:
      INNO.sym[key].fg, bg: INNO.sym[key].bg, rounding: 10 });\r

      \  return s;\r

      }\r\n"
    sig: function innoSymInline(key, dParent){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cardInno1:
    name: cardInno1
    code: "function cardInno1(key, wCard = 420) {\r

      \  if (nundef(key)) key = chooseRandom(Object.keys(Cinno));\r

      \  let f = wCard / 420;\r

      \  let [w, h, szSym, paSym, fz, pa, bth, vGapTxt, rnd, gap] = [420 *
      f, 200 * f, 100 * f, 8 * f, 100 * f * .8, 20 * f, 4 * f, 8 * f, 10 * f, 6
      * f].map(x => Math.ceil(x));\r

      \  let info = Cinno[key];\r

      \  info.key = key;\r

      \  let cdict = { red: RED, blue: 'royalblue', green: 'green',
      yellow: 'yelloworange', purple: 'indigo' };\r

      \  info.c = getColorDictColor(cdict[info.color]);\r

      \  let d = mDiv();\r

      \  mSize(d, w, h);\r

      \  mStyle(d, { fz: pa, margin: 8, align: 'left', bg: info.c,
      rounding: rnd, patop: paSym, paright: pa, pabottom: szSym, paleft: szSym +
      paSym, border: '' + bth + 'px solid silver', position: 'relative' })\r

      \  mText(info.key.toUpperCase(), d, { fz: pa, weight: 'bold',
      margin: 'auto' });\r

      \  mLinebreak(d);\r

      \  for (const dog of info.dogmas) {\r

      \    let text = replaceSymbols(dog);\r

      \    let d1 = mText(text, d); \r

      \    d1.style.marginBottom = '' + vGapTxt + 'px';\r

      \  }\r

      \  let syms = []; let d1;\r

      \  szSym -= gap;\r

      \  let sdict = {\r

      \    tower: { k: 'white-tower', bg: 'dimgray' }, clock: { k:
      'watch', bg: 'navy' }, crown: { k: 'crown', bg: 'black' },\r

      \    tree: { k: 'tree', bg: GREEN },\r

      \    bulb: { k: 'lightbulb', bg: 'purple' }, factory: { k:
      'factory', bg: 'red' }\r

      \  };\r

      \  for (const s in sdict) { sdict[s].sym = Syms[sdict[s].k]; }\r

      \  for (const sym of info.resources) {\r

      \    let isEcho = false;\r

      \    if (sym == 'None') {\r

      \      d1 = mDiv(d, { fz: fz * .75, fg: 'black', bg: 'white',
      rounding: '50%', display: 'inline' });\r

      \      let d2 = mText('' + info.age, d1, {});\r

      \      mClass(d2, 'centerCentered');\r

      \    } else if (sym == 'echo') {\r

      \      let text = info.echo;\r

      \      console.log('info.echo', info.echo);\r

      \      if (isList(info.echo)) text = info.echo[0];\r

      \      text = replaceSymbols(text);\r

      \      wEcho = szSym;\r

      \      let [w1, h1, w2, h2] = [wEcho, szSym, wEcho - 8, szSym -
      8];\r

      \      d1 = mDiv(d, { display: 'inline', fg: 'white', bg: 'dimgray',
      rounding: 6, h: h1, w: w1 });\r

      \      let [bestFont, w3, h3] = fitFont(text, 20, w2, h2);\r

      \      let d2 = mDiv(d1, { w: w3, h: h3, fz: bestFont }, null,
      text);\r

      \      mCenterCenterFlex(d1);\r

      \      isEcho = true;\r

      \    } else if (isNumber(sym)) {\r

      \      d1 = mDiv(d, { fz: fz * .75, fg: 'white', bg: 'brown',
      border: '2px solid black', rounding: '50%', display: 'inline' });\r

      \      mCenterCenterFlex(d1);\r

      \      let d2 = mText('' + info.age, d1, {});\r

      \    } else {\r

      \      let key = sdict[sym].k;\r

      \      let mi = mPic(key, d, { w: szSym, fz: szSym * .8, bg:
      sdict[sym].bg, rounding: '10%' });\r

      \      d1 = iDiv(mi);\r

      \    }\r

      \    syms.push({ isEcho: isEcho, div: d1 });\r

      \  }\r

      \  placeSymbol(syms[0], szSym, gap, { left: 0, top: 0 });\r

      \  placeSymbol(syms[1], szSym, gap, { left: 0, bottom: 0 });\r

      \  placeSymbol(syms[2], szSym, gap, { left: w / 2, bottom: 0 });\r

      \  placeSymbol(syms[3], szSym, gap, { right: 0, bottom: 0 });\r

      \  info.div = d;\r

      \  return info;\r

      }\r\n"
    sig: function cardInno1(key, wCard = 420){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  placeSymbol:
    name: placeSymbol
    code: "function placeSymbol(sym, szSym, margin, posStyles) {\r

      \  let d = iDiv(sym);\r

      \  posStyles.position = 'absolute';\r

      \  posStyles.margin = margin;\r

      \  posStyles.h = szSym;\r

      \  posStyles.w = szSym; \r

      \  mStyle(d, posStyles); \r

      }\r\n"
    sig: function placeSymbol(sym, szSym, margin, posStyles){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cardInno:
    name: cardInno
    code: "function cardInno(dParent, key) {\r

      \  if (nundef(key)) key = chooseRandom(Object.keys(Cinno));\r

      \  let cardInfo = Cinno[key];\r

      \  cardInfo.key = key;\r

      \  let sym = INNO.sym[cardInfo.type];\r

      \  let info = Syms[sym.key];\r

      \  let card = cBlank(dParent, { fg: 'black', bg:
      INNO.color[cardInfo.color], w: CSZ, h: CSZ * .65 });\r

      \  let [dCard, sz, szTitle, margin] = [iDiv(card), CSZ / 5, CSZ/8,
      CSZ/40];\r

      \  let [dTitle, dMain] = cTitleArea(card, szTitle);\r

      \  let d = mAddContent(dTitle, key, {\r

      \    patop: 4, bg: sym.bg, fg: 'white', h: szTitle, fz: szTitle *
      .7, align: 'center',\r

      \    position: 'relative'\r

      \  });\r

      \  mAddContent(d, cardInfo.age, { hpadding: szTitle / 4, float:
      'right' });\r

      \  let s = mSym(sym.key, d, { hpadding: szTitle / 4, h: szTitle *
      .7, fg: sym.fg, float: 'left' });\r

      \  let positions = ['tl', 'bl', 'bc', 'br'];\r

      \  for (let i = 0; i < 4; i++) {\r

      \    let r = cardInfo.resources[i];\r

      \    let pos = positions[i];\r

      \    if (r in INNO.sym) { innoSym(r, dMain, sz, pos, margin); }\r

      \    else if (r == 'None') { innoAgeNumber(cardInfo.age, dMain, sz,
      pos, margin); }\r

      \    else if (isNumber(r)) { innoBonusNumber(r, dMain, sz, pos,
      margin); }\r

      \    else if (r == 'echo') { innoEcho(cardInfo.echo, dMain, sz, pos,
      margin); }\r

      \  }\r

      \  let box = mBoxFromMargins(dMain, 10, margin, sz + margin, sz + 2
      * margin); \r

      \  mStyle(box, { align: 'left' });\r

      \  let text = '';\r

      \  for (const dog of cardInfo.dogmas) {\r

      \    console.log('text', cardInfo.type, sym);\r

      \    let t = startsWith(dog, 'I demand') ? ('I <b>demand</b>' +
      dog.substring(8)) : dog;\r

      \    text += `<span
      style=\"color:${sym.bg};font-family:${info.family}\">${info.text}</span>`
      + '&nbsp;' + t + '<br>';\r

      \  }\r

      \  let t2 = innoText(text);\r

      \  box.onclick = (ev) => makeInfobox(ev, box, 2); \r

      \  mFillText(t2, box);\r

      }\r\n"
    sig: function cardInno(dParent, key){}
    region: inno (cards.js)
    filename: cards.js
    type: func
    fname: cards.js
    path: C:\xampp\htdocs\aroot\belinda\js\cards.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 66079
  innoAgeNumber:
    name: innoAgeNumber
    code: "function innoAgeNumber(n, dParent, sz, pos, margin = 10) {\r

      \  let x = Card.sz * .04; sz -= x; \r

      \  let hOff = 0; \r

      \  let styles = { wmin: sz * 1.1, h: sz, bg: '#131313', align:
      'center' };\r

      \  let box = mShape('hexFlat', dParent, styles); mPlace(box, pos,
      margin, margin - hOff / 2); \r

      \  s = mDiv(box, { fz: sz * .6, fg: 'white', display: 'inline-block'
      }, null, n);\r

      \  mPlace(s, 'cc'); \r

      \  return box;\r

      }\r\n"
    sig: function innoAgeNumber(n, dParent, sz, pos, margin = 10){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  innoBonusNumber:
    name: innoBonusNumber
    code: "function innoBonusNumber(n, dParent, sz, pos, margin = 10) {\r

      \  let hOff = margin / 2;\r

      \  let styles = { w: sz, h: sz - hOff, bg: 'brown', box: true,
      align: 'center' };\r

      \  let box = mShape('circle', dParent, styles); mPlace(box, pos,
      margin + hOff / 2, margin);\r

      \  let dText = mDiv(box, { fz: sz * .1, fg: 'black', 'line-height':
      sz * .1, matop: sz * .05 }, null, 'bonus');\r

      \  let dNum = mDiv(box, { fz: sz * .7, fg: 'black', 'line-height':
      sz * .65 }, null, n);\r

      \  return box;\r

      }\r\n"
    sig: function innoBonusNumber(n, dParent, sz, pos, margin = 10){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  innoEcho:
    name: innoEcho
    code: "function innoEcho(text, dParent, sz, pos, margin = 10) {\r

      \  if (isList(text)) text = text.join('<br>');\r

      \  margin /= 2;\r

      \  sz += margin / 4;\r

      \  let box = mDiv(dParent, { w: sz, h: sz, bg: 'black', fg: 'white',
      rounding: 10 });\r

      \  mPlace(box, pos, margin);\r

      \  box.onclick = (ev) => makeInfobox(ev, box, 3);\r

      \  let t2 = innoText(text);\r

      \  mFillText(t2, box);\r

      \  return box;\r

      }\r\n"
    sig: function innoEcho(text, dParent, sz, pos, margin = 10){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  innoSym:
    name: innoSym
    code: "function innoSym(key, dParent, sz, pos, margin = 10) {\r

      \  let box = mDiv(dParent, { w: sz, h: sz, bg: INNO.sym[key].bg,
      rounding: 10 }); if (isdef(pos)) mPlace(box, pos, margin);\r

      \  s = mSym(INNO.sym[key].key, box, { sz: sz * .75, fg:
      INNO.sym[key].fg }, 'cc');\r

      \  return box;\r

      }\r\n"
    sig: function innoSym(key, dParent, sz, pos, margin = 10){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  innoText:
    name: innoText
    code: "function innoText(text) {\r

      \  for (const s in INNO.sym) { INNO.sym[s].sym =
      Syms[INNO.sym[s].key]; }\r

      \  let parts = text.split('[');\r

      \  let s = parts[0];\r

      \  for (let i = 1; i < parts.length; i++) {\r

      \    let part = parts[i];\r

      \    let kw = stringBefore(part, ']');\r

      \    let sp;\r

      \    let fz = Card.sz * .04;\r

      \    if (Object.keys(INNO.sym).includes(kw)) { let o = INNO.sym[kw];
      sp = makeSymbolSpan(o.sym, o.bg, o.fg, fz * .9, '20%'); }\r

      \    else if (isNumber(kw)) { sp = makeNumberSpan(kw, '#232323',
      'white', fz * .9, '20%'); }\r

      \    s += sp + stringAfter(part, ']');\r

      \  }\r

      \  return s;\r

      }\r\n"
    sig: function innoText(text){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  spotitCard:
    name: spotitCard
    code: "function spotitCard(info, dParent, cardStyles, onClickSym) {\r

      \  let styles = copyKeys({ w: Card.sz, h: Card.sz }, cardStyles);\r

      \  let card = cRound(dParent, cardStyles, info.id);\r

      \  addKeys(info, card);\r

      \  let d = iDiv(card);\r

      \  card.pattern = fillColarr(card.colarr, card.keys);\r

      \  let symStyles = { sz: Card.sz / (card.rows + 1), fg: 'random',
      hmargin: 8, vmargin: 4, cursor: 'pointer' };\r

      \  let syms = [];\r

      \  mRows(iDiv(card), card.pattern, symStyles, { 'justify-content':
      'center' }, { 'justify-content': 'center' }, syms);\r

      \  for (let i = 0; i < info.keys.length; i++) {\r

      \    let key = card.keys[i];\r

      \    let sym = syms[i];\r

      \    card.live[key] = sym;\r

      \    sym.setAttribute('key', key);\r

      \    sym.onclick = onClickSym;\r

      \  }\r

      \  return card;\r

      }\r\n"
    sig: function spotitCard(info, dParent, cardStyles, onClickSym){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  spotitDeal:
    name: spotitDeal
    code: "function spotitDeal(rows, cols, numCards, setName) {\r

      \  let colarr = _calc_hex_col_array(rows, cols);\r

      \  let perCard = arrSum(colarr);\r

      \  let nShared = (numCards * (numCards - 1)) / 2;\r

      \  let nUnique = perCard - numCards + 1;\r

      \  let keys = choose(oneWordKeys(KeySets[setName]), nShared +
      numCards * nUnique);\r

      \  let dupls = keys.slice(0, nShared); \r

      \  let uniqs = keys.slice(nShared);\r

      \  let infos = [];\r

      \  for (let i = 0; i < numCards; i++) {\r

      \    let keylist = uniqs.slice(i * nUnique, i * nUnique +
      nUnique);\r

      \    let info = { id: getUID(), shares: {}, keys: keylist, rows:
      rows, cols: cols, colarr: colarr };\r

      \    infos.push(info);\r

      \  }\r

      \  let iShared = 0;\r

      \  for (let i = 0; i < numCards; i++) {\r

      \    for (let j = i + 1; j < numCards; j++) {\r

      \      let c1 = infos[i];\r

      \      let c2 = infos[j];\r

      \      let dupl = dupls[iShared++];\r

      \      c1.keys.push(dupl);\r

      \      c1.shares[c2.id] = dupl;\r

      \      c2.shares[c1.id] = dupl;\r

      \      c2.keys.push(dupl);\r

      \    }\r

      \  }\r

      \  for (const info of infos) { shuffle(info.keys); }\r

      \  return infos;\r

      }\r\n"
    sig: function spotitDeal(rows, cols, numCards, setName){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  spotitFindCardSharingSymbol:
    name: spotitFindCardSharingSymbol
    code: "function spotitFindCardSharingSymbol(card, key) {\r

      \  let id = firstCondDict(card.shares, x => x == key);\r

      \  return Items[id];\r

      }\r\n"
    sig: function spotitFindCardSharingSymbol(card, key){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  spotitFindSymbol:
    name: spotitFindSymbol
    code: "function spotitFindSymbol(card, key) { let k =
      firstCondDictKey(card.live, x => x == key); return card.live[k]; }\r\n"
    sig: function spotitFindSymbol(card, key){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  spotitOnClickSymbol:
    name: spotitOnClickSymbol
    code: "function spotitOnClickSymbol(ev) {\r

      \  let keyClicked = evToProp(ev, 'key');\r

      \  let id = evToId(ev);\r

      \  if (isdef(keyClicked) && isdef(Items[id])) {\r

      \    let item = Items[id];\r

      \    console.log('clicked key', keyClicked, 'of card', id, item);\r

      \    if (Object.values(item.shares).includes(keyClicked)) {\r

      \      console.log('success!!!');\r

      \      let otherCard = spotitFindCardSharingSymbol(item,
      keyClicked);\r

      \      let cardSymbol = ev.target;\r

      \      let otherSymbol = spotitFindSymbol(otherCard, keyClicked);\r

      \      Selected = { success: true, feedbackUI: [cardSymbol,
      otherSymbol] };\r

      \    } else {\r

      \      console.log('fail!!!!!!!!'); \r

      \      let cardSymbol = ev.target;\r

      \      Selected = { success: false, feedbackUI: [cardSymbol] };\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function spotitOnClickSymbol(ev){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mRowsX:
    name: mRowsX
    code: "function mRowsX(dParent, arr, itemStyles = { bg: 'random' }, rowStyles,
      colStyles, akku) {\r

      \  let d0 = mDiv100(dParent, { display: 'flex', dir: 'column',
      'justify-content': 'space-between' });\r

      \  if (isdef(rowStyles)) mStyle(d0, rowStyles);\r

      \  for (let i = 0; i < arr.length; i++) {\r

      \    let content = arr[i];\r

      \    if (isList(content)) {\r

      \      let d1 = mDiv(d0); \r

      \      mColsX(d1, content, itemStyles, rowStyles, colStyles,
      akku);\r

      \    } else {\r

      \      d1 = mContentX(content, d0, itemStyles); \r

      \      akku.push(d1);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: "function mRowsX(dParent, arr, itemStyles = { bg: 'random' }, rowStyles,
      colStyles, akku){}"
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mColsX:
    name: mColsX
    code: "function mColsX(dParent, arr, itemStyles = { bg: 'random' }, rowStyles,
      colStyles, akku) {\r

      \  let d0 = mDiv100(dParent, { display: 'flex', 'justify-content':
      'space-between' }); \r

      \  if (isdef(colStyles)) mStyle(d0, colStyles);\r

      \  for (let i = 0; i < arr.length; i++) {\r

      \    let content = arr[i];\r

      \    if (isList(content)) {\r

      \      d1 = mDiv(d0); \r

      \      mRowsX(d1, content, itemStyles, rowStyles, colStyles,
      akku);\r

      \    } else {\r

      \      d1 = mContentX(content, d0, itemStyles); \r

      \      akku.push(d1);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: "function mColsX(dParent, arr, itemStyles = { bg: 'random' }, rowStyles,
      colStyles, akku){}"
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mContentX:
    name: mContentX
    code: "function mContentX(content, dParent, styles = { sz: Card.sz / 5, fg:
      'random' }) {\r

      \  let [key, scale] = isDict(content) ? [content.key, content.scale]
      : [content, 1];\r

      \  if (scale != 1) { styles.transform =
      `scale(${scale},${Math.abs(scale)})`; }\r

      \  let dResult = mDiv(dParent);\r

      \  let ds = isdef(Syms[key]) ? mSym(key, dResult, styles) :
      mDiv(dResult, styles, null, key);\r

      \  return dResult;\r

      }\r\n"
    sig: "function mContentX(content, dParent, styles = { sz: Card.sz / 5, fg:
      'random' }){}"
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mRows:
    name: mRows
    code: "function mRows(dParent, arr, itemStyles = { bg: 'random' }, rowStyles,
      colStyles, akku) {\r

      \  let d0 = mDiv100(dParent, { display: 'flex', dir: 'column',
      'justify-content': 'space-between' });\r

      \  if (isdef(rowStyles)) mStyle(d0, rowStyles);\r

      \  for (let i = 0; i < arr.length; i++) {\r

      \    let content = arr[i];\r

      \    if (isList(content)) {\r

      \      let d1 = mDiv(d0); \r

      \      mCols(d1, content, itemStyles, rowStyles, colStyles, akku);\r

      \    } else {\r

      \      d1 = mContent(content, d0, itemStyles); \r

      \      akku.push(d1);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: "function mRows(dParent, arr, itemStyles = { bg: 'random' }, rowStyles,
      colStyles, akku){}"
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mCols:
    name: mCols
    code: "function mCols(dParent, arr, itemStyles = { bg: 'random' }, rowStyles,
      colStyles, akku) {\r

      \  let d0 = mDiv100(dParent, { display: 'flex', 'justify-content':
      'space-between' }); \r

      \  if (isdef(colStyles)) mStyle(d0, colStyles);\r

      \  for (let i = 0; i < arr.length; i++) {\r

      \    let content = arr[i];\r

      \    if (isList(content)) {\r

      \      d1 = mDiv(d0); \r

      \      mRows(d1, content, itemStyles, rowStyles, colStyles, akku);\r

      \    } else {\r

      \      d1 = mContent(content, d0, itemStyles); \r

      \      akku.push(d1);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: "function mCols(dParent, arr, itemStyles = { bg: 'random' }, rowStyles,
      colStyles, akku){}"
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mContent:
    name: mContent
    code: "function mContent(content, dParent, styles) {\r

      \  let d1 = isdef(Syms[content]) ? mSymInDivShrink(content, dParent,
      styles) : mDiv(dParent, styles, null, content);\r

      \  return d1;\r

      }\r\n"
    sig: function mContent(content, dParent, styles){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mSymInDiv:
    name: mSymInDiv
    code: "function mSymInDiv(sym, dParent, styles = { sz: Card.sz / 5, fg: 'random'
      }) {\r

      \  dResult = mDiv(dParent);\r

      \  ds = mSym(sym, dResult, styles);\r

      \  return dResult;\r

      }\r\n"
    sig: "function mSymInDiv(sym, dParent, styles = { sz: Card.sz / 5, fg: 'random'
      }){}"
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mSymInDivShrink:
    name: mSymInDivShrink
    code: "function mSymInDivShrink(sym, dParent, styles = { sz: Card.sz / 5, fg:
      'random' }) {\r

      \  dResult = mDiv(dParent);\r

      \  let ds = mSym(sym, dResult, styles);\r

      \  let scale = chooseRandom([.5, .75, 1, 1.25]);\r

      \  let [scaleX, scaleY] = [coin() ? scale : -scale, scale];\r

      \  if (coin()) ds.style.transform = `scale(${scaleX},${scaleY})`;\r

      \  return dResult;\r

      }\r\n"
    sig: "function mSymInDivShrink(sym, dParent, styles = { sz: Card.sz / 5, fg:
      'random' }){}"
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cardPattern:
    name: cardPattern
    code: "function cardPattern(n, sym) {\r

      \  let di = {\r

      \    1: [sym],\r

      \    2: [[sym], [sym]],\r

      \    3: [[sym], [sym], [sym]],\r

      \    4: [[sym, sym], [sym, sym]],\r

      \    5: [[sym, sym], [sym], [sym, sym]],\r

      \    6: [[sym, sym], [sym, sym], [sym, sym]],\r

      \    7: [[sym, sym], [sym, sym, sym], [sym, sym]],\r

      \    8: [[sym, sym, sym], [sym, sym], [sym, sym, sym]],\r

      \    9: [[sym, sym, sym], [sym, sym, sym], [sym, sym, sym]],\r

      \    10: [[sym, sym, sym], [sym, sym, sym, sym], [sym, sym, sym]],\r

      \    11: [[sym, sym, sym, sym], [sym, sym, sym], [sym, sym, sym,
      sym]],\r

      \    12: [[sym, sym, sym, sym], [sym, sym, sym, sym], [sym, sym,
      sym, sym]],\r

      \    13: [[sym, sym, sym], [sym, sym], [sym, sym, sym], [sym, sym],
      [sym, sym, sym]],\r

      \    14: [[sym, sym, sym, sym], [sym, sym, sym, sym], [sym, sym,
      sym, sym]],\r

      \    15: [[sym, sym, sym, sym], [sym, sym, sym, sym], [sym, sym,
      sym, sym]],\r

      \  };\r

      \  return di[n];\r

      }\r\n"
    sig: function cardPattern(n, sym){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cRound:
    name: cRound
    code: "function cRound(dParent, styles = {}, id) {\r

      \  styles.w = valf(styles.w, Card.sz);\r

      \  styles.h = valf(styles.h, Card.sz);\r

      \  styles.rounding = '50%';\r

      \  return cBlank(dParent, styles, id);\r

      }\r\n"
    sig: function cRound(dParent, styles = {}, id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cLandscape:
    name: cLandscape
    code: "function cLandscape(dParent, styles = {}, id) {\r

      \  if (nundef(styles.w)) styles.w = Card.sz;\r

      \  if (nundef(styles.h)) styles.h = styles.w * .65;\r

      \  return cBlank(dParent, styles, id);\r

      }\r\n"
    sig: function cLandscape(dParent, styles = {}, id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cPortrait:
    name: cPortrait
    code: "function cPortrait(dParent, styles = {}, id) {\r

      \  if (nundef(styles.h)) styles.h = Card.sz;\r

      \  if (nundef(styles.w)) styles.w = styles.h * .7;\r

      \  return cBlank(dParent, styles, id);\r

      }\r\n"
    sig: function cPortrait(dParent, styles = {}, id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cBlank:
    name: cBlank
    code: "function cBlank(dParent, styles = {}, id) {\r

      \  if (nundef(styles.h)) styles.h = Card.sz;\r

      \  if (nundef(styles.w)) styles.w = styles.h * .7;\r

      \  if (nundef(styles.bg)) styles.bg = 'white';\r

      \  styles.position = 'relative';\r

      \  let [w, h, sz] = [styles.w, styles.h, Math.min(styles.w,
      styles.h)];\r

      \  if (nundef(styles.rounding)) styles.rounding = sz * .05;\r

      \  let d = mDiv(dParent, styles, id, null, 'card');\r

      \  let item = mItem(null, { div: d }, { type: 'card', sz: sz,
      rounding: styles.rounding });\r

      \  copyKeys(styles, item);\r

      \  return item;\r

      }\r\n"
    sig: function cBlank(dParent, styles = {}, id){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  cTitleArea:
    name: cTitleArea
    code: "function cTitleArea(card, h, styles, classes) {\r

      \  let dCard = iDiv(card);\r

      \  let dTitle = mDiv(dCard, { w: '100%', h: h, overflow: 'hidden',
      upperRounding: card.rounding });\r

      \  let dMain = mDiv(dCard, { w: '100%', h: card.h - h,
      lowerRounding: card.rounding });\r

      \  iAdd(card, { dTitle: dTitle, dMain: dMain });\r

      \  if (isdef(styles)) mStyle(dTitle, styles);\r

      \  return [dTitle, dMain];\r

      }\r\n"
    sig: function cTitleArea(card, h, styles, classes){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  makeInfobox:
    name: makeInfobox
    code: "function makeInfobox(ev, elem, scale) {\r

      \  let t = ev.target; while (isdef(t) && t != elem) t =
      t.parentNode; if (nundef(t)) { console.log('WRONG click', ev.target);
      return; }\r

      \  let di = DA.infobox; if (isdef(di)) {\r

      \    let inner = di.innerHTML;\r

      \    di.remove();\r

      \    DA.infobox = null;\r

      \    if (inner == elem.innerHTML) return;\r

      \  }\r

      \  let r = getRectInt(elem, dTable);\r

      \  let d = DA.infobox = mDiv(dTable, {\r

      \    bg: 'black', rounding: 10, fz: 24, position: 'absolute',\r

      \    w: r.w, h: r.h, left: r.l, top: r.t, transform:
      `scale(${scale})`\r

      \  }, 'dInfoBox', elem.innerHTML);\r

      \  d.innerHTML += '<div style=\"font-size:6px\">click to
      close</div><br>';\r

      \  d.onclick = () => { d.remove(); DA.infobox = null; }\r

      }\r\n"
    sig: function makeInfobox(ev, elem, scale){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  makeNumberSpan:
    name: makeNumberSpan
    code: "function makeNumberSpan(n, bg, fg, fz, rounding = '50%') {\r

      \  return `<span
      style='font-size:${fz}px;background:${bg};color:${fg};padding:0px
      5px;border-radius:${rounding}'>${n}</span>`;\r

      }\r\n"
    sig: function makeNumberSpan(n, bg, fg, fz, rounding = '50%'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  makeSymbolSpan:
    name: makeSymbolSpan
    code: "function makeSymbolSpan(info, bg, fg, fz, rounding = '50%') {\r

      \  let patop = Math.min(2, fz * .2);\r

      \  let pad = '5% 10%'; pad = '3px 5px'; pad = `${patop}px ${patop *
      2}px`;\r

      \  if (info.key == 'queen-crown') pad = `${patop}px ${patop}px
      ${1}px ${patop}px`;\r

      \  else if (info.key == 'leaf') pad = `${1}px ${patop}px ${patop}px
      ${patop}px`;\r

      \  else if (info.key == 'white-tower') pad = `${patop}px ${patop *
      2}px ${patop - 1}px ${patop * 2}px`;\r

      \  return `<div
      style='box-sizing:border-box;padding:${pad};min-height:${fz +
      3}px;display:inline-block;font-family:${info.family};font-size:${fz}px;ba\
      ckground:${bg};color:${fg};border-radius:${rounding}'>${info.text}</div>`;\
      \r

      }\r\n"
    sig: function makeSymbolSpan(info, bg, fg, fz, rounding = '50%'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mSymSizeToH:
    name: mSymSizeToH
    code: "function mSymSizeToH(info, h) { let f = h / info.h; return { fz: 100 * f,
      w: info.w * f, h: h }; }\r\n"
    sig: function mSymSizeToH(info, h){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSymSizeToW:
    name: mSymSizeToW
    code: "function mSymSizeToW(info, w) { let f = w / info.w; return { fz: 100 * f,
      w: w, h: info.h * f }; }\r\n"
    sig: function mSymSizeToW(info, w){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSymSizeToFz:
    name: mSymSizeToFz
    code: "function mSymSizeToFz(info, fz) { let f = fz / 100; return { fz: fz, w:
      info.w * f, h: info.h * f }; }\r\n"
    sig: function mSymSizeToFz(info, fz){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSymSizeToBox:
    name: mSymSizeToBox
    code: "function mSymSizeToBox(info, w, h) {\r

      \  let fw = w / info.w;\r

      \  let fh = h / info.h;\r

      \  let f = Math.min(fw, fh);\r

      \  return { fz: 100 * f, w: info.w * f, h: info.h * f };\r

      }\r\n"
    sig: function mSymSizeToBox(info, w, h){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPlaceText:
    name: mPlaceText
    code: "function mPlaceText(text, where, dParent, styles, innerStyles, classes)
      {\r

      \  let box;\r

      \  if (where.length == 4) {\r

      \    let [t, r, b, l] = where;\r

      \    box = mBoxFromMargins(dParent, t, r, b, l);\r

      \  } else if (where.length == 3) {\r

      \    let [wb, hb, place] = where;\r

      \    box = mDiv(dParent, { w: wb, h: hb });\r

      \    mPlace(box, place);\r

      \  }\r

      \  let r = mMeasure(box);\r

      \  let [fz, w, h] = fitFont(text, 20, r.w, r.h);\r

      \  console.log('res', fz, w, h);\r

      \  let dText = mDiv(box, {\r

      \    w: w, h: h, fz: fz,\r

      \    position: 'absolute', transform: 'translate(-50%,-50%)', top:
      '50%', left: '50%'\r

      \  }, null, text);\r

      \  if (isdef(styles)) mStyle(box, styles);\r

      \  if (isdef(innerStyles)) mStyle(dText, innerStyles);\r

      \  if (isdef(classes)) mStyle(box, classes);\r

      \  return box;\r

      }\r\n"
    sig: function mPlaceText(text, where, dParent, styles, innerStyles, classes){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mFillText:
    name: mFillText
    code: "function mFillText(text, box, padding = 10, perleft = 10, pertop = 20)
      {\r

      \  let r = mMeasure(box);\r

      \  let [fz, w, h] = fitFont(text, 14, r.w - padding, r.h -
      padding);\r

      \  let dText = mDiv(box, {\r

      \    w: w, h: h, fz: fz,\r

      \    position: 'absolute', transform:
      `translate(-${perleft}%,-${pertop}%)`, top: `${pertop}%`, left:
      `${perleft}%`\r

      \  }, null, text);\r

      \  return dText;\r

      }\r\n"
    sig: function mFillText(text, box, padding = 10, perleft = 10, pertop = 20){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  randomRank:
    name: randomRank
    code: "function randomRank() { return Card52.randomRankSuit[0]; }\r\n"
    sig: function randomRank(){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  randomSuit:
    name: randomSuit
    code: "function randomSuit() { return Card52.randomRankSuit[1]; }\r\n"
    sig: function randomSuit(){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  randomC52:
    name: randomC52
    code: "function randomC52() { return Card52.getShortString(randomCard52());
      }\r\n"
    sig: function randomC52(){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  randomCard52:
    name: randomCard52
    code: "function randomCard52() { return Card52.random(); }\r\n"
    sig: function randomCard52(){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  create_table:
    name: create_table
    code: "function create_table(options, players) {\r

      \  Session.cur_tid = Session.cur_table = Selected = null;\r

      \  let gname = Session.cur_game;\r

      \  let t = {};\r

      \  t.friendly = generate_friendly_table_name();\r

      \  t.game = Session.cur_game;\r

      \  t.host = Session.cur_user;\r

      \  t.turn = 'none'; \r

      \  t.players = valf(players, valf(lookup(Session, ['game_options',
      'players']), get_def_players_for_user(Session.cur_user)));\r

      \  t.options = valf(options, lookup(Session, ['game_options',
      'game']));\r

      \  t.pl_options = get_player_options(t.players, gname);\r

      \  t.status = 'started'; \r

      \  t.host_status = 'joined'; \r

      \  t.player_status = 'joined'; \r

      \  t.player_init = DB.games[gname].game_type == 'turn' ? null : {};
      \r

      \  if (gname == 'gPreinno') { t.fen = inno_setup(t.players); }\r

      \  else if (gname == 'gAristo') { t.fen = ari_setup(t.players); }\r

      \  return t;\r

      }\r\n"
    sig: function create_table(options, players){}
    region: create (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  parse_table_and_players:
    name: parse_table_and_players
    code: "function parse_table_and_players(obj) {\r

      \  console.log('parse_table',obj.table);\r

      \  parse_table(obj.table);\r

      \  for(const pl of S.players) copyKeys(obj.players,pl);\r

      }\r\n"
    sig: function parse_table_and_players(obj){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\helpers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691786.8557
    size: 3376
  parse_table:
    name: parse_table
    code: "function parse_table(t) {\r

      \  set_start_data_from_fen(t.fen, S.game);  \r

      \  if (isString(t.options)) t.options = JSON.parse(t.options); \r

      \  S.players = t.players.map(x=>({ name: x, color:
      getColorDictColor(DB.users[x].color), imgPath:
      `../base/assets/images/${x}.jpg`, score: 0 }));\r

      \  S.players_by_name = arr_to_dict_by(S.players, 'name');  \r

      \  S.game = t.game;\r

      \  S.tid = t.id;\r

      \  S.table = t;\r

      }\r\n"
    sig: function parse_table(t){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\helpers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691786.8557
    size: 3376
  show_games_menu:
    name: show_games_menu
    code: "function show_games_menu() {\r

      \  console.assert(isdef(S.tables_by_game), 'ERROR',
      getFunctionCallerName(), 'S.tables_by_game not set!');\r

      \  console.log('tables for user', U.name, S.tables);\r

      \  let html = `<div id='game_menu' style=\"text-align: center;
      animation: appear 1s ease both\">`;\r

      \  for (const g of dict2list(DB.games)) { html +=
      ui_game_menu_item(g, S.tables_by_game[g.id]); }\r

      \  mBy('inner_left_panel').innerHTML = html;\r

      \  mCenterCenterFlex(mBy('game_menu'));\r

      }\r\n"
    sig: function show_games_menu(){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\helpers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691786.8557
    size: 3376
  show_table:
    name: show_table
    code: "function show_table() {\r

      \  console.log('show_table S', S)\r

      }\r\n"
    sig: function show_table(){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\xampp\htdocs\aroot\_other\bella\js\helpers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691786.8557
    size: 3376
  show_user:
    name: show_user
    code: "function show_user() {\r

      \  if (isdef(U) && U.name != 'anonymous') {\r

      \    let uname = U.name;\r

      \    let sz = 36;\r

      \    let html = `\r

      \    <div username='${uname}'
      style='display:flex;align-items:center;gap:6px;height:100%'>\r

      \      <img src='../base/assets/images/${uname}.jpg' width='${sz}'
      height='${sz}' class='img_person' style='border:3px solid
      ${U.color};margin:0'>\r

      \      <span>${uname}</span>\r

      \    </div>`;\r

      \    show_title_left(html, { fg: U.color });\r

      \  }\r

      \  else show_home_logo();\r

      }\r\n"
    sig: function show_user(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  ui_game_menu_item:
    name: ui_game_menu_item
    code: "function ui_game_menu_item(g, g_tables = []) {\r

      \  function runderkreis(color, id) {\r

      \    return `<div id=${id}
      style='width:20px;height:20px;border-radius:50%;background-color:${color}\
      ;color:white;position:absolute;left:0px;top:0px;'>` + '' + \"</div>\";\r

      \  }\r

      \  let [sym, bg, color, id] = [Syms[g.logo], g.color, null,
      getUID()];\r

      \  if (!isEmpty(g_tables)) {\r

      \    let t = g_tables[0]; \r

      \    let have_another_move = t.player_status == 'joined';\r

      \    color = have_another_move ? 'green' : 'red';\r

      \    id = `rk_${t.id}`;\r

      \  }\r

      \  return `\r

      \  <div onclick=\"onclick_game_menu_item(event)\" gamename=${g.id}
      style='cursor:pointer;border-radius:10px;margin:10px;padding:5px;padding-\
      top:15px;width:120px;height:90px;display:inline-block;background:${bg};po\
      sition:relative;'>\r

      \  ${nundef(color) ? '' : runderkreis(color, id)}\r

      \  <span
      style='font-size:50px;font-family:${sym.family}'>${sym.text}</span><br>${\
      g.friendly.toString()}</div>\r

      \  `;\r

      }\r\n"
    sig: function ui_game_menu_item(g, g_tables = []){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\easy\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 195061
  show_settings:
    name: show_settings
    code: "function show_settings(dParent) {\r

      \  let [options, fen, uplayer] = [Z.options, Z.fen, Z.uplayer];\r

      \  clearElement(dParent);\r

      \  mFlex(dParent);\r

      \  mStyle(dParent, { 'justify-content': 'end', gap: 12, paright: 10
      })\r

      \  let playmode = get_playmode(uplayer);\r

      \  let game_mode = Z.mode;\r

      \  let st = { fz: 20, padding: 0, h: 40, box: true, matop: 2,
      rounding: '50%', cursor: 'pointer' };\r

      \  let dHistoryButton = miPic('scroll', dParent, st);\r

      \  dHistoryButton.onclick = show_history_popup;\r

      \  if (isdef(Config.games[Z.game].options.strategy)) {\r

      \    let dStrategy = miPic('chess pawn', dParent, st);\r

      \    dStrategy.onclick = show_strategy_popup;\r

      \  }\r

      \  let d = miPic('gear', dParent, st);\r

      \  options.playmode = playmode;\r

      \  d.onmouseenter = () => show_options_popup(options);\r

      \  d.onmouseleave = hide_options_popup;\r

      }\r\n"
    sig: function show_settings(dParent){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  test_start_test_user_endscreen:
    name: test_start_test_user_endscreen
    code: "async function test_start_test_user_endscreen() {\r

      \  console.log('na geh'); \r

      \  let fen = \"felix:20,amanda:14,mimi:13,gul:12\";\r

      \  DB = await route_path_yaml_dict('./DB.yaml');\r

      \  console.log('DB', DB);\r

      \  present_non_admin_user('gul');\r

      }\r\n"
    sig: async function test_start_test_user_endscreen(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test_timestep_js_vs_php:
    name: test_timestep_js_vs_php
    code: "function test_timestep_js_vs_php() {\r

      \  console.log('js', get_timestamp());\r

      \  to_server({}, 'timestamp_test');\r

      }\r\n"
    sig: function test_timestep_js_vs_php(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test4_load_games:
    name: test4_load_games
    code: "function test4_load_games() {\r

      }\r\n"
    sig: function test4_load_games(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test3_game_options:
    name: test3_game_options
    code: "function test3_game_options() {\r

      \  present_game_options();\r

      \  close_sidebar();\r

      }\r\n"
    sig: function test3_game_options(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test2_show_contacts:
    name: test2_show_contacts
    code: "function test2_show_contacts() {\r

      \  get_login();\r

      }\r\n"
    sig: function test2_show_contacts(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test1_change_user:
    name: test1_change_user
    code: "function test1_change_user() {\r

      \  setTimeout(() => {\r

      \    mStyle(mBy('user_info'), { opacity: 0 });\r

      \    setTimeout(() => {\r

      \      let name = chooseRandom(get_user_names(), x => x !=
      Session.cur_user);\r

      \      load_user(name);\r

      \    }, 1000);\r

      \  }, 2000)\r

      }\r\n"
    sig: function test1_change_user(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test0_load_user:
    name: test0_load_user
    code: "function test0_load_user() {\r

      \  let user = load_user(queryStringToJson().user);\r

      }\r\n"
    sig: function test0_load_user(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test9_only_syms:
    name: test9_only_syms
    code: "async function test9_only_syms(l) {\r

      \  let text = await
      route_path_text(`../base/assets/words/${l}dict.txt`);\r

      \  let picdi = await
      route_path_yaml_dict(`../base/assets/words/${l}picdict.yaml`);\r

      \  let syms = await
      route_path_yaml_dict(`../base/assets/allSyms.yaml`);\r

      \  let keys = Object.keys(syms);\r

      \  let lang = l.toUpperCase();\r

      \  let res = keys.filter(x => isdef(syms[x][lang]) &&
      nundef(picdi[syms[x][lang].toLowerCase()]));\r

      \  console.log('only syms: lang', l, res.map(x => syms[x][lang]));\r

      }\r\n"
    sig: async function test9_only_syms(l){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test8_multiple_wordlists:
    name: test8_multiple_wordlists
    code: "async function test8_multiple_wordlists() {\r

      \  for (const l of ['e', 'd', 's', 'f']) {\r

      \    for (let i = 3; i < 15; i++) {\r

      \      let res = await test7_letters_200from(l, i);\r

      \      let s = `${l} >=${i} ${res.all.length} (davon:
      ${res.pic.length} ${Math.round((res.pic.length / res.all.length) *
      100)}%)`;\r

      \      console.log('', s);\r

      \      console.log('result', res.sel)\r

      \    }\r

      \    console.log('________');\r

      \  }\r

      }\r\n"
    sig: async function test8_multiple_wordlists(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test7_letters_200from:
    name: test7_letters_200from
    code: "async function test7_letters_200from(l, n) {\r

      \  let text = await
      route_path_text(`../base/assets/words/${l}dict.txt`);\r

      \  let picdi = await
      route_path_yaml_dict(`../base/assets/words/${l}picdict.yaml`);\r

      \  let splitter = l == 'e' ? '\\r\\n' : '\\n';\r

      \  let words = text.split(splitter);\r

      \  let result = words.filter(x => x.length >= n);\r

      \  let result2 = result.filter(x => x in picdi);\r

      \  result2.sort((a, b) => a.length - b.length);\r

      \  result3 = arrTake(result2, 200);\r

      \  return { all: result, pic: result2, sel: result3 };\r

      }\r\n"
    sig: async function test7_letters_200from(l, n){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test6_multiple_wordlists:
    name: test6_multiple_wordlists
    code: "async function test6_multiple_wordlists() {\r

      \  for (const l of ['e', 'd', 's', 'f']) {\r

      \    for (let i = 3; i < 15; i++) {\r

      \      let res = await test5_letters_upto(l, i);\r

      \      let s = `${l} ${i} ${res.all.length} (davon:
      ${res.pic.length} ${Math.round((res.pic.length / res.all.length) *
      100)}%)`;\r

      \      console.log('', s);\r

      \    }\r

      \    console.log('________');\r

      \  }\r

      }\r\n"
    sig: async function test6_multiple_wordlists(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test5_letters_upto:
    name: test5_letters_upto
    code: "async function test5_letters_upto(l, n) {\r

      \  let text = await
      route_path_text(`../base/assets/words/${l}dict.txt`);\r

      \  let picdi = await
      route_path_yaml_dict(`../base/assets/words/${l}picdict.yaml`);\r

      \  let splitter = l == 'e' ? '\\r\\n' : '\\n';\r

      \  let words = text.split(splitter);\r

      \  let result = words.filter(x => x.length >= 3 && x.length <= n);\r

      \  let result2 = result.filter(x => x in picdi);\r

      \  return { all: result, pic: result2 };\r

      }\r\n"
    sig: async function test5_letters_upto(l, n){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test4_multiple_wordlists:
    name: test4_multiple_wordlists
    code: "async function test4_multiple_wordlists() {\r

      \  for (const l of ['e', 'd', 's', 'f']) {\r

      \    for (let i = 6; i < 15; i++) {\r

      \      let res = await test3_letters(l, i);\r

      \      let s = `${l} ${i} ${res.all.length} (davon:
      ${res.pic.length} ${Math.round((res.pic.length / res.all.length) *
      100)}%)`;\r

      \      console.log('', s);\r

      \    }\r

      \    console.log('________');\r

      \  }\r

      }\r\n"
    sig: async function test4_multiple_wordlists(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test3_letters:
    name: test3_letters
    code: "async function test3_letters(l, n) {\r

      \  let text = await
      route_path_text(`../base/assets/words/${l}dict.txt`);\r

      \  let picdi = await
      route_path_yaml_dict(`../base/assets/words/${l}picdict.yaml`);\r

      \  let splitter = l == 'e' ? '\\r\\n' : '\\n';\r

      \  let words = text.split(splitter);\r

      \  let result = words.filter(x => x.length == n);\r

      \  let result2 = result.filter(x => x in picdi);\r

      \  return { all: result, pic: result2 };\r

      }\r\n"
    sig: async function test3_letters(l, n){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test2_pic_dicts:
    name: test2_pic_dicts
    code: "function test2_pic_dicts() {\r

      \  create_pic_dicts(['d']);\r

      }\r\n"
    sig: function test2_pic_dicts(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test1_open_sidebar:
    name: test1_open_sidebar
    code: "function test1_open_sidebar() {\r

      \  mBy('b_test').onclick = open_sidebar;\r

      }\r\n"
    sig: function test1_open_sidebar(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test0_turn_loader_off:
    name: test0_turn_loader_off
    code: "function test0_turn_loader_off() {\r

      \  mClassReplace(mBy('loader_holder'), 'loader_off');\r

      }\r\n"
    sig: function test0_turn_loader_off(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testColarrVersions:
    name: testColarrVersions
    code: "function testColarrVersions() {\r

      \  let tests = [[2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [6, 3]];\r

      \  for (let i = 0; i < 50; i++) {\r

      \    let [rows, cols] = [randomNumber(1, 10), randomNumber(1,
      10)];\r

      \    let carr1 = _calc_hex_col_array(rows, cols);\r

      \    let carr2 = _calc_hex_col_arrayNew(rows, cols);\r

      \    let even = (rows % 2) == 0;\r

      \    console.log('rows', rows, (even ? 'even' : 'odd'), 'cols',
      cols, '\\nold', carr1, '\\nnew', carr2);\r

      \    console.assert(even || sameList(carr1, carr2),
      'FEHLER!!!!!!!!!!!!!!!!!!');\r

      \  }\r

      }\r\n"
    sig: function testColarrVersions(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testSpotit:
    name: testSpotit
    code: "function testSpotit() {\r

      \  let [rows, cols, numCards, setName] = [3, 2, 3, 'animals'];\r

      \  let infos = spotitDeal(rows, cols, numCards, setName); \r

      \  let items = [];\r

      \  for (const info of infos) {\r

      \    let item = spotitCard(info, dTable, { margin: 10 },
      spotitOnClickSymbol);\r

      \    items.push(item);\r

      \  }\r

      \  return;\r

      \  for (const item of items) {\r

      \    for (const k in item.shares) {\r

      \      let other = Items[item.shares[k]];\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function testSpotit(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testCardContent0:
    name: testCardContent0
    code: "function testCardContent0(card) {\r

      \  let dCard = iDiv(card);\r

      \  mRows(dCard, spotItPattern(5, 2), { sz: Card.sz / 6, fg:
      'random', hmargin: 8, vmargin: 4 }, { 'justify-content': 'center' }, {
      'justify-content': 'center' }); return;\r

      \  mRows(dCard, spotItPattern(5, 2), { sz: Card.sz / 8, fg:
      'random', margin: 6 }, { 'justify-content': 'center' }, {
      'justify-content': 'center' }); return;\r

      \  mRows(dCard, cardPattern(13, 'spade suit'), { sz: Card.sz / 8,
      fg: 'random', margin: 6 }, { 'justify-content': 'center' }, {
      'justify-content': 'center' }); return;\r

      \  mRows(dCard, [['frog', 'frog', 'frog'], ['frog', 'frog'],
      ['frog', 'frog', 'frog']], { sz: Card.sz / 6, fg: 'random' }, {
      'justify-content': 'center' }, { 'justify-content': 'center' }); return;\r

      \  mRows(dCard, [['frog', 'frog', 'frog'], ['frog', 'frog'],
      ['frog', 'frog', 'frog']], { sz: Card.sz / 5, fg: 'random' }, {
      'justify-content': 'center' }, { 'justify-content': 'space-evenly' });
      return;\r

      \  mSym('frog', dCard, {}, 'cc'); return;\r

      \  mRows(iDiv(card), [[['frog', 3], 'HALLO', 'bee'], ['frog',
      'HALLO', 'bee'], ['frog', 'HALLO', 4, 'bee'], 'ja das ist es!']);\r

      \  return;\r

      \  let d = iDiv(dCard, { display: 'flex', dir: 'column', h: '100%',
      'justify-content': 'center' }, 'dOuter');\r

      \  return;\r

      \  for (const arr of rows) {\r

      \    let dCol = mDiv(d, { display: 'flex', 'justify-content':
      'space-between', 'align-items': 'center' });\r

      \    for (const c of arr) {\r

      \      let dc;\r

      \      if (isdef(Syms[c])) {\r

      \        dc = mDiv(dCol, { fg: 'black' });\r

      \        ds = mSym(dc, dCol, { sz: Card.sz / 5, fg: 'random' });\r

      \      } else {\r

      \        dc = mDiv(dCol, { fg: 'black' }, null, c);\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function testCardContent0(card){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testInnoMain:
    name: testInnoMain
    code: "function testInnoMain() {\r

      \  mStyle(dTable, { gap: 10, pabottom: 150 });\r

      \  for (const k in Cinno) {\r

      \    if (isdef(Cinno[k].expansion)) cardInno(dTable, k);\r

      \  }\r

      }\r\n"
    sig: function testInnoMain(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testInnoCardPhantasie:
    name: testInnoCardPhantasie
    code: "function testInnoCardPhantasie() {\r

      \  dTable = mDiv(mBy('wrapper'), { position: 'absolute', padding:
      10, w: '100vw', h: '100vh', bg: 'white' });\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable, { fg:
      'black', bg: INNO.color.red, w: Card.sz, h: Card.sz * .65 });\r

      \  let [dCard, sz, szTitle, gap] = [iDiv(card), Card.sz / 4, 24,
      8];\r

      \  let [dTitle, dMain] = cTitleArea(card, 32);\r

      \  let d = mAddContent(dTitle, 'MetalWorking', { bg:
      INNO.sym.tower.bg, fg: 'white', h: 32, fz: 23, align: 'center', position:
      'relative' });\r

      \  mAddContent(d, '5', { float: 'right', hpadding: 10 });\r

      \  let s = mSym(INNO.sym.tower.key, d, { h: 22, fg:
      INNO.sym.tower.fg }, 'cl');\r

      \  let margin = 20;\r

      \  innoSym('leaf', dMain, sz, 'tl', margin);\r

      \  innoSym('crown', dMain, sz, 'bl', margin);\r

      \  innoSym('leaf', dMain, sz, 'bc', margin);\r

      \  innoSym('leaf', dMain, sz, 'br', margin);\r

      \  let box = mBoxFromMargins(dMain, 0, margin, sz + margin, sz +
      margin); \r

      \  let text = 'I demand if you get [tower] or [crown], immediately
      switch to age [2]. aber ich hab ja gott sei dank zeit! denn wenn nicht ist
      es ein echtes problem. dann muss ich einen anderen test machen!';\r

      \  let t2 = innoText(text);\r

      \  mFillText(t2, box);\r

      \  return;\r

      \  box = mDiv(dMain, { w: sz, h: sz, bg: 'dimgrey', rounding: 10 });
      mPlace(box, 'tl');\r

      \  s = mSym('white-tower', box, { sz: sz * .75, fg: 'silver' },
      'cc');\r

      \  box = mDiv(dMain, { w: sz, h: sz, bg: 'dimgrey', rounding: 10 });
      mPlace(box, 'bl');\r

      \  s = mSym('frog', box, { sz: sz * .75, fg: 'silver' }, 'cc');\r

      \  box = mDiv(dMain, { w: sz, h: sz, bg: 'dimgrey', rounding: 10 });
      mPlace(box, 'bc');\r

      \  s = mSym('maple-leaf', box, { sz: sz * .75, fg: 'silver' },
      'cc');\r

      \  box = mDiv(dMain, { w: sz, h: sz, bg: 'grey', alpha: .5,
      rounding: 10 }); mPlace(box, 'br');\r

      \  text = 'denn wenn es nicht geht und ich bin muede dann halt
      nicht!';\r

      \  mFillText(text, box);\r

      \  box = mBoxFromMargins(dMain, 4, 4, sz + 8, sz + 10); \r

      \  text = 'das muss jetzt ein viel laenderer text sein. aber ich hab
      ja gott sei dank zeit! denn wenn nicht ist es ein echtes problem. dann
      muss ich einen anderen test machen!';\r

      \  mFillText(text, box);\r

      \  return;\r

      \  text = 'das ist ein sehr langer text ich hoffe er ist auf jeden
      fall zu lang fuer diese box. denn wenn nicht ist es ein echtes problem.
      dann muss ich einen anderen test machen!';\r

      \  box = mPlaceText(text, [szTitle, 10, sz + gap, sz + gap], d, {
      fg: 'dimgrey' }, { bg: 'beige', border: '1px solid grey', rounding: 10
      });\r

      \  text = 'denn wenn nicht ist es ein echtes problem. dann muss ich
      einen anderen test machen!';\r

      \  box = mPlaceText(text, [sz, sz, 'bl'], d, { fg: 'dimgrey', bg:
      'pink', rounding: 10, border: '5px solid pink' });\r

      \  let x1 = mSym('crow', d, { w: sz, h: sz, fg: 'green' }, 'br');\r

      \  x1 = mSym('abacus', d, { w: sz, h: sz }, 'bc');\r

      \  box = mPlaceText('hallo das ist noch ein echo!!!', [sz, sz,
      'tl'], d, { fg: 'blue', bg: 'orange', rounding: 10 });\r

      }\r\n"
    sig: function testInnoCardPhantasie(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testRectanglesW1:
    name: testRectanglesW1
    code: "function testRectanglesW1() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable, { w:
      Card.sz, h: Card.sz * .8 });\r

      \  let [d, sz, szTitle, gap] = [iDiv(card), Card.sz / 4, 24, 8];\r

      \  let text = 'das ist ein sehr langer text ich hoffe er ist auf
      jeden fall zu lang fuer diese box. denn wenn nicht ist es ein echtes
      problem. dann muss ich einen anderen test machen!';\r

      \  box = mPlaceText(text, [szTitle, 10, sz + gap, sz + gap], d, {
      fg: 'dimgrey' }, { bg: 'beige', border: '1px solid grey', rounding: 10
      });\r

      \  text = 'denn wenn nicht ist es ein echtes problem. dann muss ich
      einen anderen test machen!';\r

      \  box = mPlaceText(text, [sz, sz, 'bl'], d, { fg: 'dimgrey', bg:
      'pink', rounding: 10, border: '5px solid pink' });\r

      \  let x1 = mSym('crow', d, { w: sz, h: sz, fg: 'green' }, 'br');\r

      \  x1 = mSym('abacus', d, { w: sz, h: sz }, 'bc');\r

      \  box = mPlaceText('hallo das ist noch ein echo!!!', [sz, sz,
      'tl'], d, { fg: 'blue', bg: 'orange', rounding: 10 });\r

      }\r\n"
    sig: function testRectanglesW1(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testRectanglesTextInBoxesW0:
    name: testRectanglesTextInBoxesW0
    code: "function testRectanglesTextInBoxesW0() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable, { w:
      Card.sz, h: Card.sz * .8 });\r

      \  let [d, sz, szTitle, gap] = [iDiv(card), Card.sz / 4, 24, 8];\r

      \  let box = mBoxFromMargins(d, szTitle, 10, sz + gap, sz + gap);\r

      \  let r = mMeasure(box);\r

      \  text = 'das ist ein sehr langer text ich hoffe er ist auf jeden
      fall zu lang fuer diese box. denn wenn nicht ist es ein echtes problem.
      dann muss ich einen anderen test machen!';\r

      \  let [fz, w, h] = fitFont(text, 20, r.w, r.h);\r

      \  console.log('res', fz, w, h);\r

      \  let dText = mDiv(box, {\r

      \    w: w, h: h, fz: fz, fg: 'black',\r

      \    position: 'absolute', transform: 'translate(-50%,-50%)', top:
      '50%', left: '50%'\r

      \  }, null, text);\r

      \  box = mDiv(d, { w: sz, h: sz });\r

      \  mPlace(box, 'bl');\r

      \  r = mMeasure(box);\r

      \  text = 'denn wenn nicht ist es ein echtes problem. dann muss ich
      einen anderen test machen!';\r

      \  [fz, w, h] = fitFont(text, 20, r.w, r.h);\r

      \  console.log('res', fz, w, h);\r

      \  dText = mDiv(box, {\r

      \    w: w, h: h, fz: fz, fg: 'black',\r

      \    position: 'absolute', transform: 'translate(-50%,-50%)', top:
      '50%', left: '50%'\r

      \  }, null, text);\r

      \  mPlaceText('hallo das ist noch ein echo!!!', [sz, sz, 'tl'], d, {
      fg: 'blue' }, { bg: 'orange', border: '1px dashed red', rounding: 10 });\r

      }\r\n"
    sig: function testRectanglesTextInBoxesW0(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testPositionCardSym:
    name: testPositionCardSym
    code: "function testPositionCardSym() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz / 5;\r

      \  let x1 = mSym('crow', d, { w: sz, h: sz, bg: 'random' }, 'cc');
      console.log('\\nx1', x1);\r

      }\r\n"
    sig: function testPositionCardSym(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testPosition3:
    name: testPosition3
    code: "function testPosition3() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz / 5;\r

      \  let x1 = mShapeR('hex', null, { w: sz, h: sz, bg: 'random' });
      console.log('\\nx1', x1);\r

      \  for (const p of ['tl', 'tc', 'tr', 'cl', 'cc', 'cr', 'bl', 'bc',
      'br']) {\r

      \    let x2 = x1.cloneNode(); mAppend(d, x2); mPlace(x2, p, 20);\r

      \  }\r

      }\r\n"
    sig: function testPosition3(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testPositionPatterns:
    name: testPositionPatterns
    code: "function testPositionPatterns() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz / 5;\r

      \  let x1 = mShapeR('hex', null, { w: sz, h: sz, bg: 'random' });
      console.log('\\nx1', x1);\r

      \  for (const p of ['tl', 'tc', 'tr', 'cl', 'cc', 'cr', 'bl', 'bc',
      'br']) {\r

      \    let x2 = x1.cloneNode(); mAppend(d, x2);  \r

      \    mPlace(x2, p, p.includes('c') ? 0 : 20);\r

      \  }\r

      }\r\n"
    sig: function testPositionPatterns(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testPositionPatterns1:
    name: testPositionPatterns1
    code: "function testPositionPatterns1() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz / 5;\r

      \  let x1 = mShapeR('circle', null, { w: sz, h: sz, bg: 'random' });
      console.log('\\nx1', x1);\r

      \  for (const p of ['tl', 'tr', 'bl', 'br']) {\r

      \    let x2 = x1.cloneNode(); mAppend(d, x2);  \r

      \    mPlace(x2, p, 20);\r

      \  }\r

      \  for (const p of ['tc', 'cl', 'cc', 'cr', 'bc']) {\r

      \    let x2 = x1.cloneNode(); mAppend(d, x2);  \r

      \    mPlace(x2, p);\r

      \  }\r

      }\r\n"
    sig: function testPositionPatterns1(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testPositionShapeR0:
    name: testPositionShapeR0
    code: "function testPositionShapeR0() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz / 4;\r

      \  let x1 = mShapeR('triup', d, { sz: sz, bg: 'random' });
      console.log('\\nx1', x1);\r

      \  mPlace(x1, 'tl');\r

      \  let x2 = mShapeR('hex', d, { sz: sz, bg: 'random' });
      console.log('\\nx1', x2);\r

      \  mPlace(x2, 'tr');\r

      \  let x3 = mShapeR('triangle', d, { sz: sz, bg: 'random' });
      console.log('\\nx1', x3);\r

      \  mPlace(x3, 'br');\r

      \  let x4 = mShapeR('hexFlat', d, { sz: sz, bg: 'random' });
      console.log('\\nx1', x4);\r

      \  mPlace(x4, 'bl');\r

      }\r\n"
    sig: function testPositionShapeR0(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKartePositionSuit:
    name: testKartePositionSuit
    code: "function testKartePositionSuit() {\r

      \  let dTable = mBy('dTable'); clearElement(dTable); mStyle(dTable,
      { hmin: 400 })\r

      \  let card = cBlank(dTable); let d = iDiv(card); let sz = card.h /
      6;\r

      \  let i = 0;\r

      \  for (let suit of ['H', 'S', 'D', 'C']) {\r

      \    let s1 = mSuit(suit, d, { w: sz, h: sz }); \r

      \    mPos(s1, sz * i, 0); i++;\r

      \  }\r

      }\r\n"
    sig: function testKartePositionSuit(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  testKarteSizing:
    name: testKarteSizing
    code: "function testKarteSizing() {\r

      \  mStyle(dTable, { gap: 10 }); let card;\r

      \  card = cBlank(dTable);\r

      \  let d = iDiv(card);\r

      \  let sz = Card.sz;\r

      \  let arr = [];\r

      \  let suit = mSuit('Pik');  \r

      \  let triangle = mShape('triangle', null, { bg: 'red' }); \r

      \  let sym = mSym('frog');\r

      \  let shape = mShape('test1');\r

      \  let x = mShapeR(); \r

      \  let h = sz / 4;\r

      \  suit.setAttribute('height', h);\r

      \  mStyle(sym, { fz: h * .75 });\r

      \  mSize(shape, h * .75); \r

      \  mSize(triangle, h * .75); \r

      \  mStyle(x, { w: h * .75 }); mClassReplace(x, 'weired1');\r

      \  arr = [triangle, suit, sym, shape, x];\r

      \  for (const x of arr) { mAppend(d, x); }\r

      \  gSizeToContent(suit);\r

      }\r\n"
    sig: function testKarteSizing(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKartePositionSuitOuterCenters:
    name: testKartePositionSuitOuterCenters
    code: "function testKartePositionSuitOuterCenters() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz / 4;\r

      \  let s1 = mSuit('Pik', d, { sz: 60 }, 'tc'); console.log('s1',
      s1);\r

      \  let s2 = mSuit('Karo', d, { sz: 60 }, 'cr'); console.log('s2',
      s2);\r

      \  let s3 = mSuit('Herz', d, { sz: 60 }, 'bc'); console.log('s3',
      s3);\r

      \  let s4 = mSuit('Treff', d, { sz: 60 }, 'cl'); console.log('s4',
      s4);\r

      }\r\n"
    sig: function testKartePositionSuitOuterCenters(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKartePosition2:
    name: testKartePosition2
    code: "function testKartePosition2() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz / 4;\r

      \  let s1 = mSuit('Pik', d, { sz: 25 }, 'tl'); console.log('s1',
      s1);\r

      \  let s2 = mSuit('Karo', d, { sz: 50 }, 'tr'); console.log('s2',
      s2);\r

      \  let s3 = mSuit('Herz', d, { sz: 75 }, 'bl'); console.log('s3',
      s3);\r

      \  let s4 = mSuit('Treff', d, { sz: 100 }, 'br'); console.log('s4',
      s4);\r

      }\r\n"
    sig: function testKartePosition2(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKartePosition1:
    name: testKartePosition1
    code: "function testKartePosition1() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz / 4;\r

      \  let s3 = mSuit('Pik', d); mSuitSize(s3, 30); mSuitTL(s3);
      console.log('s3', s3);\r

      \  let s4 = mSuit('Treff', d); mSuitSize(s4, 30); mSuitPos(s4,
      'bottom', 'right'); console.log('s4', s4); \r

      \  let s5 = mSuit('Herz', d, { sz: 30 }); mSuitPos(s5, 'bottom',
      'left'); console.log('s5', s5); \r

      \  let s6 = mSuit('Karo', d, { sz: 30 }); mSuitPos(s6, 'top',
      'right'); console.log('s6', s6); \r

      \  return;\r

      \  console.log('suit', suit);\r

      \  mPos(suit, 0, 0); \r

      \  mPos(suit1, -10, Card.h - sz); \r

      \  mPos(suit1, -10 * sz / 100, Card.h - sz); \r

      }\r\n"
    sig: function testKartePosition1(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKarte0:
    name: testKarte0
    code: "function testKarte0() {\r

      \  mStyle(dTable, { gap: 10 }); let card = cBlank(dTable); let d =
      iDiv(card); let sz = Card.sz;\r

      \  let suit = mSuit('Pik', d, { h: 300 });  \r

      \  let p = suit.firstChild;\r

      \  console.log('p', p);\r

      \  console.log('child', p.firstChild);\r

      }\r\n"
    sig: function testKarte0(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKarte8:
    name: testKarte8
    code: "function testKarte8() {\r

      \  for (let i = 0; i < 1; i++) {\r

      \    testKarte7();\r

      \  }\r

      }\r\n"
    sig: function testKarte8(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKarte6:
    name: testKarte6
    code: "function testKarte6() {\r

      \  for (let i = 0; i < 10; i++) {\r

      \    let n = i * 15; \r

      \    let x = mShapeR('triup', dTable, { sz: n, bg: 'random' });
      console.log('\\nx', x); mAppend(dTable, x);\r

      \  }\r

      }\r\n"
    sig: function testKarte6(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKarte5:
    name: testKarte5
    code: "function testKarte5() {\r

      \  for (let i = 0; i < 10; i++) {\r

      \    let n = i * 15; \r

      \    let x = mShapeR(); console.log('\\nx', x);\r

      \    mStyle(x, { w: n }); mClassReplace(x, 'weired' + (n > 120 ? 8 :
      n > 80 ? 5 : n > 50 ? 3 : 1));\r

      \    mAppend(dTable, x);\r

      \  }\r

      }\r\n"
    sig: function testKarte5(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKarte4:
    name: testKarte4
    code: "function testKarte4() {\r

      \  mStyle(dTable, { gap: 10 }); let card;\r

      \  card = cBlank(dTable);\r

      \  let d = iDiv(card);\r

      \  let sz = Card.sz;\r

      \  let arr = [];\r

      \  let suit = mSuit('Pik');  \r

      \  let triangle = mShape('triangle', null, { bg: 'red' }); \r

      \  let sym = mSym('frog');\r

      \  let shape = mShape('test1');\r

      \  let x = mShapeX98(); console.log('\\nx', x); mAppend(d, x);\r

      \  return;\r

      \  let h = sz / 4;\r

      \  suit.setAttribute('height', h);\r

      \  mStyle(sym, { fz: h * .75 });\r

      \  mSize(shape, h * .75); \r

      \  mSize(triangle, h * .75); \r

      \  arr = [triangle, suit, sym, shape, x];\r

      \  console.log('\\nx', x);\r

      \  mAppend(d, x); return;\r

      \  for (const x of arr) { mAppend(d, x); }\r

      \  gSizeToContent(suit);\r

      }\r\n"
    sig: function testKarte4(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKarte3_svg:
    name: testKarte3_svg
    code: "function testKarte3_svg() {\r

      \  mStyle(dTable, { gap: 10 }); let card;\r

      \  card = cBlankSvg(dTable);\r

      \  console.log('card', card); \r

      \  let g = iG(card); console.log('g', g);\r

      \  let x = mgSuit('Pik'); console.log('x', x);\r

      \  mgSize(x, Card.sz / 2);\r

      \  mgPos(card, x); \r

      }\r\n"
    sig: function testKarte3_svg(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKarte2:
    name: testKarte2
    code: "function testKarte2() {\r

      \  let card = cLandscape(dTable);\r

      \  let isLandscape = card.w > card.h;\r

      \  let sz = card.sz; \r

      \  console.log('sz', sz)\r

      \  let text = 'diese karte erlaubt es dir, zu verschwinden und
      aufzutauchen wo immer du willst.<br><br>pass jedoch auf: wenn du auf einer
      ungesicherten mine landest, verlierst du 1 leben!';\r

      \  let d = iDiv(card);\r

      \  let sh = [\r

      \    { type: 'html', pos: 'TL', sz: 's', content: `<div
      class=\"weired\"></div>` },\r

      \    { type: 'html', pos: 'TR', sz: 's', content: `<div
      class=\"weired\" style=\"--b:linear-gradient(red,blue);\"></div>` },\r

      \    {\r

      \      type: 'html', pos: 'BL', sz: 's', content: `<div
      class=\"weired\" style=\r

      \    \"--b:conic-gradient(green,pink,green);\r

      \    --clip:polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0%
      25%);\r

      \    --patop:100%;\r

      \    \"></div>`},\r

      \    {\r

      \      type: 'html', pos: 'BR', sz: 's', content: `<div
      class=\"weired\" style=\r

      \    \"--b:url(../assets/images/felix.jpg) center/cover;\r

      \    --clip:polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0%
      25%);\r

      \    --patop:100%;\r

      \    \"></div>`},\r

      \    { type: 'text', pos: 'CC', sz: 'l', content: 'diese karte
      erlaubt es dir, zu verschwinden und aufzutauchen wo immer du
      willst.<br><br>pass jedoch auf: wenn du auf einer ungesicherten mine
      landest, verlierst du 1 leben!' },\r

      \  ];\r

      \  var SZ = sz;\r

      \  var GAP = SZ * .1;\r

      \  var SIZE = { xs: SZ / 8, s: SZ / 4, m: SZ / 2, l: SZ * 2 / 3, xl:
      SZ };\r

      \  var POS = { TL: { top: GAP, left: GAP }, TR: { top: GAP, right:
      GAP }, BL: { bottom: GAP, right: GAP }, BR: { bottom: GAP, right: GAP }
      };\r

      \  for (const sh1 of sh) {\r

      \    let t = sh1.content;\r

      \    x = isString(t) ? t[0] == '<' ? createElementFromHtml(t) :
      makeText(t, sz, sz / 2) : t;\r

      \    mAppend(d, x);\r

      \    let pos = sh1.pos;\r

      \    if (pos != 'CC') {\r

      \      mStyle(x, { w: 80 });\r

      \      window['mPos' + sh1.pos](x, 10);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function testKarte2(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testKarte1:
    name: testKarte1
    code: "function testKarte1() {\r

      \  let card = cLandscape(dTable);\r

      \  let sz = card.sz; \r

      \  console.log('sz', sz)\r

      \  let d = iDiv(card);\r

      \  let x = mShape('triangle', d, { bg: 'blue', w: sz / 4, h: sz / 4,
      position: 'absolute', top: 10, left: 10 });\r

      \  x = mShape('test1', d, { bg: 'red', w: sz / 4, h: sz / 4,
      position: 'absolute', bottom: 10, left: 10 });\r

      \  x = mSym('bee', d, { fz: sz / 5, position: 'absolute', bottom:
      10, right: 10 });\r

      \  x = mDiv(d, { bg: YELLOW, w: sz / 4, h: sz / 4, position:
      'absolute', top: 10, right: 10 }, null, null, 'triangle');\r

      \  let text = 'diese karte erlaubt es dir, zu verschwinden und
      aufzutauchen wo immer du willst.<br><br>pass jedoch auf: wenn du auf einer
      ungesicherten mine landest, verlierst du 1 leben!';\r

      \  let [fz, w, h] = fitFont(text, 20, sz, sz / 2);\r

      \  let pos = { left: (card.w - w) / 2, top: (card.h - h) / 2 }\r

      \  x = mDiv(d, { align: 'left', fz: fz, fg: 'black', w: w, h: h,
      top: pos.top, left: pos.left, display: 'inline-block', position:
      'absolute' }, null, text);\r

      \  console.log('x', x)\r

      \  let sh0 = [\r

      \    `<div class=\"triangle\"></div>`,\r

      \    `<div class=\"triangle type2\"
      style=\"--b:linear-gradient(red,blue);\"></div>`,\r

      \    `<div class=\"triangle type3\"
      style=\"--b:conic-gradient(green,pink,green);\"></div>`,\r

      \    `<div class=\"triangle hex\"
      style=\"--b:url(https://picsum.photos/id/1067/200/200)
      center/cover;\"></div>`,\r

      \    `<div class=\"triangle hex\"
      style=\"--b:url(../assets/images/felix.jpg) center/cover;\"></div>`,\r

      \  ];\r

      \  let sh = [\r

      \    `<div class=\"weired\"></div>`,\r

      \    `<div class=\"weired\"
      style=\"--b:linear-gradient(red,blue);\"></div>`,\r

      \    `<div class=\"weired\" style=\r

      \    \"--b:conic-gradient(green,pink,green);\r

      \    --clip:polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0%
      25%);\r

      \    --patop:100%;\r

      \    \"></div>`,\r

      \    //`<div class=\"triangle hex\"
      style=\"--b:url(https://picsum.photos/id/1067/200/200)
      center/cover;\"></div>`,\r

      \  ];\r

      \  for (const sh1 of sh) {\r

      \    x = createElementFromHtml(sh1);\r

      \    mStyle(x, { w: 80 });\r

      \    mAppend(dTable, x);\r

      \  }\r

      \  return;\r

      \  let styles = { margin: 10, bg: 'random' };\r

      \  for (let i = 0; i < 3; i++) { let d = mShape('triangle', dTable);
      console.log('d', d); }\r

      }\r\n"
    sig: function testKarte1(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testInno:
    name: testInno
    code: "function testInno() {\r\n}\r\n"
    sig: function testInno(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testFindKeys:
    name: testFindKeys
    code: "function testFindKeys() {\r\n}\r\n"
    sig: function testFindKeys(){}
    region: chatas (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testCard52Cards:
    name: testCard52Cards
    code: "function testCard52Cards() {\r

      \  for (let i = 0; i < 20; i++) {\r

      \    let card = Card52.random();\r

      \    mAppend(dTable, iDiv(card));\r

      \  }\r

      }\r\n"
    sig: function testCard52Cards(){}
    region: tests (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test52CardsOther:
    name: test52CardsOther
    code: "function test52CardsOther() {\r

      \  keys = ['spades', 'hearts', 'clubs', 'diamonds'];\r

      \  for (let i = 0; i < 4; i++) {\r

      \    let k = keys[i % keys.length];\r

      \    console.log('k', k);\r

      \    let card = Karte.random(k, 110);\r

      \    mAppend(dTable, iDiv(card));\r

      \  }\r

      }\r\n"
    sig: function test52CardsOther(){}
    region: tests (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  testBirdCards:
    name: testBirdCards
    code: "function testBirdCards() {\r

      \  let keys = SymKeys.filter(x => Syms[x].family != 'emoNoto');\r

      \  console.log('groups', ByGroupSubgroup);\r

      \  console.log('keySets', KeySets);\r

      \  keys = KeySets['animal-bird'];\r

      \  for (let i = 0; i < 40; i++) {\r

      \    let k = chooseRandom(keys); \r

      \    console.log('k', k);\r

      \    let card = Karte.get(k, 300);\r

      \    mAppend(dTable, iDiv(card));\r

      \  }\r

      }\r\n"
    sig: function testBirdCards(){}
    region: tests (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  suTest00:
    name: suTest00
    code: "function suTest00() {\r

      \  let [rows, cols] = [4, 4];\r

      \  let pattern = getSudokuPattern(rows, cols);\r

      \  printMatrix(pattern, 'pattern');\r

      \  let colarrs = bGetCols(pattern); printMatrix(colarrs,
      'transposed');\r

      \  let rowarrs = bGetCols(colarrs); printMatrix(rowarrs,
      'normal');\r

      \  let cFlat = arrFlatten(rowarrs);\r

      \  let aRows = bGetRows(pattern);\r

      \  let rFlat = arrFlatten(aRows);\r

      \  console.assert(sameList(cFlat, rFlat), 'TRANSPOSE DOES NOT
      WORK!!!!!!!!!!!!!!!')\r

      \  let correct = checkSudokuRule(pattern);\r

      }\r\n"
    sig: function suTest00(){}
    region: sudoku (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  iPrepper:
    name: iPrepper
    code: "async function iPrepper() {\r

      \  symbolDict = Syms = await
      route_path_yaml_dict('../base/assets/allSyms.yaml');\r

      \  SymKeys = Object.keys(Syms);\r

      \  initTable();\r

      }\r\n"
    sig: async function iPrepper(){}
    region: iconViewer (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  iTest00:
    name: iTest00
    code: "async function iTest00() {\r

      \  await iPrepper();\r

      \  let keys = SymKeys;\r

      \  let k = chooseRandom(keys);\r

      \  let item = miPic(k, dTable, { w: 100, h: 100, fz: 80, bg: 'blue'
      });\r

      }\r\n"
    sig: async function iTest00(){}
    region: iconViewer (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  gTest13:
    name: gTest13
    code: "function gTest13() {\r

      \  let g = createSampleHex1(5, 3, 100, 100); let ids =
      g.getNodeIds(); let id = ids[0]; g.showExtent();\r

      \  let center = g.getProp(id, 'center');\r

      \  console.log('center prop', center);\r

      \  center = g.posDict['preset'][id];\r

      \  console.log('center', center);\r

      \  let size = g.getSize(id); \r

      \  console.log('size', size);\r

      \  let pN = { x: center.x, y: size.y1 }; \r

      \  let node = g.getNode(id);\r

      \  let b = node.renderedBoundingBox();\r

      \  pN = { x: b.x1 + b.w / 2, y: b.y1 };\r

      \  return;\r

      \  let nNew = g.addNode({ width: 25, height: 25 }, pN);\r

      \  console.log('new node', nNew);\r

      \  let n1 = g.getNode(nNew);\r

      \  n1.css('background-color', 'blue');\r

      \  let st = { bg: 'red', shape: 'ellipse', w: 25, h: 25 };\r

      \  let st1 = mStyleToCy(st);\r

      \  n1.css(st1);\r

      }\r\n"
    sig: function gTest13(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest12:
    name: gTest12
    code: "function gTest12() {\r

      \  let g = createSampleHex1(21, 11); let ids = g.getNodeIds(); let
      id = ids[0];\r

      \  g.showExtent();\r

      }\r\n"
    sig: function gTest12(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  createSampleHex1:
    name: createSampleHex1
    code: "function createSampleHex1(rows = 5, topcols = 3, w = 25, h = 25) {\r

      \  initTable();\r

      \  let styles = {\r

      \    outer: { bg: 'pink', padding: 25 },\r

      \    inner: { w: 500, h: 400 },\r

      \    node: { bg: 'pink', shape: 'hex', w: w, h: h },\r

      \    edge: { bg: 'white' }\r

      \  };\r

      \  let g = hex1Board(dTable, rows, topcols, styles);\r

      \  g.addLayoutControls();\r

      \  return g;\r

      }\r\n"
    sig: function createSampleHex1(rows = 5, topcols = 3, w = 25, h = 25){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest11:
    name: gTest11
    code: "function gTest11() {\r

      \  let g = createSampleHex1();\r

      \  let ids = g.getNodeIds();\r

      \  let id = ids[0];\r

      \  console.log('size', g.getSize(id),
      g.cy.getElementById(id).bb());\r

      \  let n = g.cy.getElementById(id);\r

      \  n.css({ width: '40px', height: '40px' });\r

      \  g.zoom(false);\r

      \  let bb = g.cy.elements().bb();\r

      \  console.log('gesamt graph braucht:', bb)\r

      }\r\n"
    sig: function gTest11(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest10:
    name: gTest10
    code: "function gTest10() {\r

      \  initTable();\r

      \  let [rows, topcols, w, h] = [7, 10, 50, 50];\r

      \  let styles = {\r

      \    outer: { bg: 'pink', padding: 25 },\r

      \    inner: { w: 500, h: 400 },\r

      \    node: { bg: 'pink', shape: 'hex', w: w, h: h },\r

      \    edge: { bg: 'green' }\r

      \  };\r

      \  let g = hex1Board(dTable, rows, topcols, styles);\r

      }\r\n"
    sig: function gTest10(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest09:
    name: gTest09
    code: "function gTest09() {\r

      \  initTable();\r

      \  let [w, h] = [50, 50];\r

      \  let styles = {\r

      \    outer: { bg: 'pink', padding: 25 },\r

      \    inner: { w: 500, h: 400 },\r

      \    node: { bg: 'pink', shape: 'hex', w: w, h: h },\r

      \    edge: { bg: 'green' }\r

      \  };\r

      \  let g = new UIGraph(dTable, styles);\r

      \  let [rows, topcols] = [5, 3];\r

      \  let total = hex1Count(rows, topcols);\r

      \  console.log('for rows', rows, 'and cols', topcols, 'need', total,
      'nodes')\r

      \  let nids = g.addNodes(total);\r

      \  g.hex1(rows, topcols, w + 4, h + 4);\r

      \  let indices = hex1Indices(rows, topcols);\r

      \  console.log('indices', indices);\r

      \  let ids = g.getNodeIds();\r

      \  console.log('node ids:', ids);\r

      \  let di = {};\r

      \  for (let i = 0; i < ids.length; i++) {\r

      \    let [row, col] = [indices[i].row, indices[i].col];\r

      \    let id = ids[i];\r

      \    lookupSet(di, [row, col], id);\r

      \    g.setProp(id, 'row', row);\r

      \    g.setProp(id, 'col', col);\r

      \    g.setProp(id, 'label', `${row},${col}`);\r

      \  }\r

      \  let labels = g.getNodes().map(x => x.data().label);\r

      \  console.log('labels', labels);\r

      \  let label = g.cy.getElementById(ids[1]).data('label');\r

      \  for (let i = 0; i < ids.length; i++) {\r

      \    let [row, col] = [indices[i].row, indices[i].col];\r

      \    let id = ids[i];\r

      \    let nid2 = lookup(di, [row, col + 2]); if (nid2) g.addEdge(id,
      nid2);\r

      \    nid2 = lookup(di, [row + 1, col - 1]); if (nid2) g.addEdge(id,
      nid2);\r

      \    nid2 = lookup(di, [row + 1, col + 1]); if (nid2) g.addEdge(id,
      nid2);\r

      \  }\r

      \  let deg = g.getDegree(ids[1]); \r

      \  let deg1 = g.getDegree(ids[10]); \r

      \  let deg2 = g.getDegree(ids[18]); \r

      \  console.log('das geht: label', label, deg, deg1, deg2);\r

      }\r\n"
    sig: function gTest09(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest08:
    name: gTest08
    code: "function gTest08() {\r

      \  initTable();\r

      \  let styles = {\r

      \    outer: { bg: 'pink', padding: 25 },\r

      \    inner: { w: 500, h: 400 },\r

      \    node: { bg: 'pink', shape: 'hex' },\r

      \    edge: { bg: 'green' }\r

      \  };\r

      \  let g = new UIGraph(dTable, styles);\r

      \  let nids = g.addNodes(10);\r

      \  let eids = g.addEdges(10);\r

      \  g.cose();\r

      \  g.addLayoutControls();\r

      \  let nodes = g.getNodes();\r

      \  console.log('nodes', nodes[0]);\r

      \  g.mStyle(nodes[0], { shape: 'ellipse', bg: 'black' });\r

      }\r\n"
    sig: function gTest08(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest07:
    name: gTest07
    code: "function gTest07() {\r

      \  initTable();\r

      \  let hexPoints = [0, -1, 1, -0.5, 1, 0.5, 0, 1, -1, 0.5, -1,
      -0.5];\r

      \  let styles = {\r

      \    outer: { bg: 'pink', padding: 25 },\r

      \    inner: { w: 500, h: 400 },\r

      \    node: { bg: 'pink', shape: 'hex' },\r

      \    edge: { bg: 'blue' }\r

      \    //'node.field':  { shape: 'polygon', 'shape-polygon-points':
      hexPoints, w: 90, h: 100, bg: 'black', fg: 'red', fz: 40 },\r

      \  };\r

      \  let g = new UIGraph(dTable, styles);\r

      \  let cy = g.cy;\r

      \  let nids = g.addNodes(10);\r

      \  let eids = g.addEdges(10);\r

      \  let node = g.getNodes()[0];\r

      \  node.addClass('high');\r

      \  g.cose();\r

      \  cy.style().selector('node.field').style('color', 'black');\r

      \  cy.style().selector('node.city').style('shape', 'hexagon');\r

      \  let node1 = g.getNodes()[1];\r

      \  node.addClass('city');\r

      \  node1.addClass('field');\r

      }\r\n"
    sig: function gTest07(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest06:
    name: gTest06
    code: "function gTest06() {\r

      \  initTable();\r

      \  let hexPoints = [0, -1, 1, -0.5, 1, 0.5, 0, 1, -1, 0.5, -1,
      -0.5];\r

      \  let styles = {\r

      \    outer: { bg: 'pink', padding: 25 },\r

      \    inner: { w: 500, h: 400 },\r

      \    node: { bg: 'pink' },\r

      \    edge: { bg: 'blue' }\r

      \    //'node.field':  { shape: 'polygon', 'shape-polygon-points':
      hexPoints, w: 90, h: 100, bg: 'black', fg: 'red', fz: 40 },\r

      \  };\r

      \  let g = new UIGraph(dTable, styles);\r

      \  let cy = g.cy;\r

      \  let nids = g.addNodes(10);\r

      \  let eids = g.addEdges(10);\r

      \  let node = g.getNodes()[0];\r

      \  node.addClass('high');\r

      \  g.cose();\r

      \  cy.style().selector('node.field').style('color', 'black');\r

      \  cy.style().selector('node.city').style('shape', 'hexagon');\r

      \  let node1 = g.getNodes()[1];\r

      \  node.addClass('city');\r

      \  node1.addClass('field');\r

      }\r\n"
    sig: function gTest06(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest05:
    name: gTest05
    code: "function gTest05() {\r

      \  dTable = toElem('map');\r

      \  let hexPoints = [0, -1, 1, -0.5, 1, 0.5, 0, 1, -1, 0.5, -1,
      -0.5];\r

      \  let styles = {\r

      \    outer: { bg: 'pink', padding: 25 },\r

      \    inner: { w: 500, h: 400 },\r

      \    node: { shape: 'polygon', 'shape-polygon-points': hexPoints, w:
      90, h: 100, bg: 'black', fg: 'red', fz: 40 }\r

      \  };\r

      \  let g = new UIGraph(dTable, styles);\r

      \  let nids = g.addNodes(17);\r

      \  console.log('g', g.getNodeIds(), g.getEdgeIds());\r

      \  g.hex1(5, 2, styles.node.w + 2, styles.node.h + 2);\r

      \  g.addLayoutControls();\r

      \  g.disableDD(); \r

      \  g.nodeEvent('click', x => { let id = x.id(); console.log('clicked
      ' + id); g.mStyle(id, { bg: 'yellow', fg: 'blue' }); });\r

      }\r\n"
    sig: function gTest05(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  gTest04:
    name: gTest04
    code: "function gTest04() {\r

      \  initTable();\r

      \  let d = mDiv(dTable, { w: 500, h: 360, bg: 'blue', align: 'left'
      });\r

      \  let g = new AbsGraph1(d);\r

      \  g.addVisual(d);\r

      \  let nids = g.addNodes(10);\r

      \  let eids = g.addEdges(15);\r

      \  console.log('g', g.getNodeIds(), g.getEdgeIds());\r

      \  g.cose();\r

      \  g.addLayoutControls(d);\r

      }\r\n"
    sig: function gTest04(){}
    region: old (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  gTest03:
    name: gTest03
    code: "function gTest03() {\r

      \  initTable();\r

      \  let d = mDiv(dTable, { w: 500, h: 360, bg: 'blue', align: 'left'
      });\r

      \  let g = new AbsGraph1(d);\r

      \  upgradeToSimpleGraph(g, d); \r

      \  let nids = g.addNodes(10);\r

      \  let eids = g.addEdges(15);\r

      \  console.log('g', g.getNodeIds(), g.getEdgeIds());\r

      \  g.cose();\r

      \  g.addLayoutControls();\r

      }\r\n"
    sig: function gTest03(){}
    region: old (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  upgradeToSimpleGraph:
    name: upgradeToSimpleGraph
    code: "function upgradeToSimpleGraph(g, dParent, styles = {}) {\r

      \  g.id = nundef(dParent.id) ? getUID() : dParent.id;\r

      \  let styleDict = {\r

      \    node: { 'width': 25, 'height': 25, 'background-color': 'red',
      \"color\": \"#fff\", 'label': 'data(id)', \"text-valign\": \"center\",
      \"text-halign\": \"center\", },\r

      \    edge: { 'width': 2, 'line-color': 'silver', 'curve-style':
      'haystack', },\r

      \    'node.highlight': { 'background-color': 'yellow' },\r

      \    'node.trans': { 'opacity': '0.5' },\r

      \  }\r

      \  for (const ks of ['node', 'edge', 'node.highlight',
      'node.trans']) {\r

      \    if (isdef(styles[ks])) {\r

      \      for (const k in styles[ks]) {\r

      \        let [prop, val] = translateToCssStyle(k, styles[ks][k],
      false);\r

      \        styleDict[ks][prop] = val;\r

      \      }\r

      \    }\r

      \  }\r

      \  let cyStyle = [];\r

      \  for (const k in styleDict) { cyStyle.push({ selector: k, style:
      styleDict[k] }); }\r

      \  let size = getSize(dParent);\r

      \  let d1 = mDiv(dParent, { position: 'relative', bg: 'green', w:
      size.w - 80, left: 40, top: 0, h: size.h, align: 'left' });\r

      \  g.cy.mount(d1);\r

      \  g.cy.style(cyStyle);\r

      \  g.enablePanZoom();\r

      \  iAdd(g, { div: dParent, dCy: d1 });\r

      }\r\n"
    sig: function upgradeToSimpleGraph(g, dParent, styles = {}){}
    region: nur (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  gTest02:
    name: gTest02
    code: "function gTest02() {\r

      \  initTable();\r

      \  let d = mDiv(dTable, { w: 500, h: 300, bg: 'blue', align: 'left'
      });\r

      \  let g = new SimpleGraph(d);\r

      \  let nids = g.addNodes(10);\r

      \  let eids = g.addEdges(15);\r

      \  console.log('g', g.getNodeIds(), g.getEdgeIds());\r

      \  g.cose();\r

      \  g.addLayoutControls();\r

      }\r\n"
    sig: function gTest02(){}
    region: nur (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  gTest01:
    name: gTest01
    code: "function gTest01() {\r

      \  let g = new AbsGraph1();\r

      \  let nids = g.addNodes(10);\r

      \  let eids = g.addEdges(15);\r

      \  console.log('g', g.getNodeIds(), g.getEdgeIds());\r

      }\r\n"
    sig: function gTest01(){}
    region: nur (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  gTest00:
    name: gTest00
    code: "function gTest00() {\r

      \  let g = new AbsGraph1();\r

      \  let nid1 = g.addNode();\r

      \  let nid2 = g.addNode();\r

      \  let eid1 = g.addEdge(nid1, nid2);\r

      \  console.log('g', g.getNodeIds(), g.getEdgeIds());\r

      }\r\n"
    sig: function gTest00(){}
    region: nur (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  houseTest00:
    name: houseTest00
    code: "function houseTest00() {\r

      \  let s = '\"a a b c\" \"d d e c\" \"f g e h\"';
      console.log(getRandomLetterMapping(s)); console.log('_____\\n', s, '\\n',
      getLetterSwapEncoding(s));\r

      }\r\n"
    sig: function houseTest00(){}
    region: house (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  serverTest00_postData:
    name: serverTest00_postData
    code: "async function serverTest00_postData() {\r

      \  console.log('hallo'); \r

      \  let o = { liste: [1, 2, 3], hut: 'hutX' };\r

      \  let path = './DATA/file.yaml';\r

      \  let resp = await postData('http://localhost:3000/db', { obj: o,
      path: path });\r

      \  console.log('response', resp); return;\r

      }\r\n"
    sig: async function serverTest00_postData(){}
    region: test (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  set_user_tables_by_game:
    name: set_user_tables_by_game
    code: "function set_user_tables_by_game(obj) {\r

      \  let user_tables = obj.user_tables;\r

      \  let bygame = Session.user_tables_by_game = {};\r

      \  if (isEmpty(user_tables)) {\r

      \    Session.cur_tid = null;\r

      \    Session.user_tables_by_game = {};\r

      \  } else {\r

      \    Session.cur_tid = user_tables[0].id;\r

      \    for (const t of user_tables) { lookupAddToList(bygame,
      [t.game], t); }\r

      \  }\r

      \  return bygame;\r

      }\r\n"
    sig: function set_user_tables_by_game(obj){}
    region: games (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  open_game_options:
    name: open_game_options
    code: "function open_game_options(gamename) { present_game_options(gamename);
      }\r\n"
    sig: function open_game_options(gamename){}
    region: game (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  measure_fieldset:
    name: measure_fieldset
    code: "function measure_fieldset(fs) {\r

      \  let legend = fs.firstChild;\r

      \  let r = getRect(legend);\r

      \  let labels = fs.getElementsByTagName('label');\r

      \  let wmax = 0;\r

      \  for (const l of labels) {\r

      \    let r1 = getRect(l);\r

      \    wmax = Math.max(wmax, r1.w);\r

      \  }\r

      \  let wt = r.w;\r

      \  let wo = wmax + 24;\r

      \  let diff = wt - wo;\r

      \  if (diff >= 10) {\r

      \    for (const l of labels) { let d = l.parentNode; mStyle(d, {
      maleft: diff / 2 }); }\r

      \  }\r

      \  let wneeded = Math.max(wt, wo) + 10;\r

      \  mStyle(fs, { wmin: wneeded });\r

      \  for (const l of labels) { let d = l.parentNode; mStyle(l, {
      display: 'inline-block', wmin: 50 }); mStyle(d, { wmin: wneeded - 40 });
      }\r

      }\r\n"
    sig: function measure_fieldset(fs){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  spotit_populate_settings:
    name: spotit_populate_settings
    code: "function spotit_populate_settings(dParent) {\r

      \  Session.game_options.game = {};\r

      \  let poss = DB.games[Session.cur_game].options;\r

      \  if (nundef(poss)) return;\r

      \  for (const p in poss) {\r

      \    let key = p;\r

      \    let val = poss[p];\r

      \    if (isString(val)) {\r

      \      let list = val.split(','); \r

      \      let fs = mRadioGroup(dParent, {}, `d_${key}`, key);\r

      \      let checkfirst = true;\r

      \      for (const v of list) {\r

      \        let d = mRadio(v, isNumber(v) ? Number(v) : v, fs, {
      cursor: 'pointer' }, null, key);\r

      \        if (checkfirst){\r

      \          let inp = d.firstChild;\r

      \          inp.setAttribute('checked',true); \r

      \          checkfirst = false;\r

      \        }\r

      \      }\r

      \      measure_fieldset(fs);\r

      \    } else if (val === true || val === false) {\r

      \      console.log('should make a checkbox for', key);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function spotit_populate_settings(dParent){}
    region: spotit (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  spotit_check_endcondition:
    name: spotit_check_endcondition
    code: "function spotit_check_endcondition() {\r

      \  let players = get_values(Session.cur_players);\r

      \  let winners = players.filter(x => x.score >= 2).map(x => x.name);
      \r

      \  return winners;\r

      }\r\n"
    sig: function spotit_check_endcondition(){}
    region: spotit (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  spotit_card:
    name: spotit_card
    code: "function spotit_card(info, dParent, cardStyles, onClickSym) {\r

      \  Card.sz = 300;\r

      \  copyKeys({ w: Card.sz, h: Card.sz }, cardStyles);\r

      \  let card = cRound(dParent, cardStyles, info.id);\r

      \  addKeys(info, card);\r

      \  card.faceUp = true;\r

      \  let zipped = [];\r

      \  for (let i = 0; i < card.keys.length; i++) {\r

      \    zipped.push({ key: card.keys[i], scale: card.scales[i] });\r

      \  }\r

      \  card.pattern = fillColarr(card.colarr, zipped);\r

      \  let symStyles = { sz: Card.sz / (card.rows + 1), fg: 'random',
      hmargin: 10, vmargin: 6, cursor: 'pointer' };\r

      \  let syms = [];\r

      \  mRowsX(iDiv(card), card.pattern, symStyles, { 'justify-content':
      'center' }, { 'justify-content': 'center' }, syms);\r

      \  for (let i = 0; i < info.keys.length; i++) {\r

      \    let key = card.keys[i];\r

      \    let sym = syms[i];\r

      \    card.live[key] = sym;\r

      \    sym.setAttribute('key', key);\r

      \    sym.onclick = ev => onClickSym(ev, key); \r

      \  }\r

      \  return card;\r

      }\r\n"
    sig: function spotit_card(info, dParent, cardStyles, onClickSym){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_deal:
    name: spotit_deal
    code: "function spotit_deal(numCards, rows, cols, vocab, lang, min_scale,
      max_scale, fen) {\r

      \  lang = valf(lang, 'E');\r

      \  let colarr = _calc_hex_col_array(rows, cols);\r

      \  if (rows == 3 && cols == 1) { colarr = [1, 3, 1]; }\r

      \  else if (rows == 2 && cols == 1) { colarr = [1, 2]; }\r

      \  else if (rows == 4 && cols == 1) { rows = 3; colarr = [2, 3, 1];
      }\r

      \  else if (rows == 5 && cols == 1) { rows = 4; cols = 1; colarr =
      [1, 3, 3, 1]; }\r

      \  else if (rows == 5 && cols == 3) { rows = 5; cols = 1; colarr =
      [1, 3, 4, 3, 1]; }\r

      \  else if (rows == 6 && cols == 2) { rows = 5.5; colarr = [2, 4, 5,
      4, 2]; }\r

      \  let perCard = arrSum(colarr);\r

      \  let nShared = (numCards * (numCards - 1)) / 2;\r

      \  let nUnique = perCard - numCards + 1;\r

      \  let numKeysNeeded = nShared + numCards * nUnique;\r

      \  let nMin = numKeysNeeded + 3;\r

      \  let keypool = setKeys({ nMin: nMin, lang: valf(lang, 'E'), key:
      valf(vocab, 'animals'), keySets: KeySets, filterFunc: (_, x) =>
      !x.includes(' ') });\r

      \  let keys = choose(keypool, numKeysNeeded);\r

      \  let dupls = keys.slice(0, nShared); \r

      \  let uniqs = keys.slice(nShared);\r

      \  let infos = [];\r

      \  for (let i = 0; i < numCards; i++) {\r

      \    let keylist = uniqs.slice(i * nUnique, (i + 1) * nUnique);\r

      \    let info = { id: getUID(), shares: {}, keys: keylist, rows:
      rows, cols: cols, colarr: colarr, num_syms: perCard };\r

      \    infos.push(info);\r

      \  }\r

      \  let iShared = 0;\r

      \  for (let i = 0; i < numCards; i++) {\r

      \    for (let j = i + 1; j < numCards; j++) {\r

      \      let c1 = infos[i];\r

      \      let c2 = infos[j];\r

      \      let dupl = dupls[iShared++];\r

      \      c1.keys.push(dupl);\r

      \      c1.shares[c2.id] = dupl;\r

      \      c2.shares[c1.id] = dupl;\r

      \      c2.keys.push(dupl);\r

      \    }\r

      \  }\r

      \  for (const info of infos) { shuffle(info.keys); }\r

      \  for (const info of infos) {\r

      \    info.scales = info.keys.map(x => randomNumber(min_scale * 100,
      max_scale * 100) / 100);\r

      \  }\r

      \  if (isdef(fen)) {\r

      \    let ks_for_cards = fen.split(',');\r

      \    for (let i = 0; i < infos.length; i++) {\r

      \      let info = infos[i];\r

      \      let ks_list = ks_for_cards[i].split(' ');\r

      \      info.keys = ks_list.map(x => stringBefore(x, ':'));\r

      \      info.scales = ks_list.map(x => stringAfter(x, ':')).map(x =>
      Number(x));\r

      \    }\r

      \  }\r

      \  let items = [];\r

      \  for (const info of infos) {\r

      \    let item = spotit_card(info, dTable, { margin: 20 },
      spotit_interact);\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function spotit_deal(numCards, rows, cols, vocab, lang, min_scale,
      max_scale, fen){}
    region: spotit (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  spotit_evaluate:
    name: spotit_evaluate
    code: "function spotit_evaluate() {\r

      \  if (!canAct()) return;\r

      \  uiActivated = false; clearTimeouts();\r

      \  IsAnswerCorrect = Selected.isCorrect;\r

      \  update_my_score(IsAnswerCorrect ? 1 : 0);\r

      \  let me = Session.cur_me;\r

      \  if (me.score >= Session.winning_score) me.player_status = 'done';
      \r

      \  let delay = show_feedback(IsAnswerCorrect);\r

      \  setTimeout(() => {\r

      \    in_game_open_prompt_off();\r

      \    clear_table_events();\r

      \    send_move();\r

      \  }, delay);\r

      }\r\n"
    sig: function spotit_evaluate(){}
    region: spotit (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  spotit_interact:
    name: spotit_interact
    code: "function spotit_interact(ev, key) {\r

      \  ev.cancelBubble = true;\r

      \  if (!uiActivated) { console.log('ui NOT activated'); return; }\r

      \  let keyClicked = evToProp(ev, 'key');\r

      \  let id = evToId(ev);\r

      \  if (isdef(keyClicked) && isdef(Items[id])) {\r

      \    let item = Items[id];\r

      \    let dsym = ev.target;\r

      \    let card = Items[id];\r

      \    let [success, othercard] = spotit_find_shared(card,
      keyClicked);\r

      \    spotit_move(Z.uplayer, success);\r

      \  }\r

      }\r\n"
    sig: function spotit_interact(ev, key){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_get_shared_symbols:
    name: spotit_get_shared_symbols
    code: "function spotit_get_shared_symbols() {\r

      \  let result = [];\r

      \  for (const item of Session.items) {\r

      \    for (const id in item.shares) {\r

      \      let k = item.shares[id];\r

      \      let ui = iGetl(item, k);\r

      \      result.push(ui);\r

      \    }\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function spotit_get_shared_symbols(){}
    region: spotit (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  spotit_fen:
    name: spotit_fen
    code: "function spotit_fen() {\r

      \  let me = Session.cur_players[Session.cur_user];\r

      \  let items = Session.items;\r

      \  let fen = items.map(x => x.keys.join(' ')).join(',');\r

      \  let item_fens = [];\r

      \  for (const item of items) {\r

      \    let arr = arrFlatten(item.pattern);\r

      \    let ifen = arr.map(x => `${x.key}:${x.scale}`).join(' ');\r

      \    item_fens.push(ifen);\r

      \  }\r

      \  fen = item_fens.join(',');\r

      \  me.state = fen;\r

      }\r\n"
    sig: function spotit_fen(){}
    region: spotit (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  spotit_parse_fen:
    name: spotit_parse_fen
    code: "function spotit_parse_fen() {\r

      }\r\n"
    sig: function spotit_parse_fen(){}
    region: spotit (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  create_new_table_and_join_all:
    name: create_new_table_and_join_all
    code: "function create_new_table_and_join_all(user, game) {\r

      \  Session.cut_tid = Session.cur_table = null;\r

      \  let t = {};\r

      \  t.friendly = generate_friendly_table_name();\r

      \  t.game = 'gSpotit';\r

      \  t.host = Session.cur_user;\r

      \  t.players = valf(lookup(Session, ['game_options', 'players']),
      get_def_players_for_user(Session.cur_user));\r

      \  t.fen = 'noneed';\r

      \  t.options = valf(lookup(Session, ['game_options', 'game']),
      {});\r

      \  t.status = 'started'; \r

      \  t.host_status = 'joined'; \r

      \  t.player_status = 'joined'; \r

      \  t.player_init = {};\r

      \  to_server(t, 'create_table_and_start');\r

      }\r\n"
    sig: function create_new_table_and_join_all(user, game){}
    region: start (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  get_user_tables:
    name: get_user_tables
    code: "function get_user_tables() { to_server(Session.cur_user,
      \"get_user_tables\"); }\r\n"
    sig: function get_user_tables(){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  get_keys:
    name: get_keys
    code: "function get_keys(o) { return Object.keys(o); }\r\n"
    sig: function get_keys(o){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_values:
    name: get_values
    code: "function get_values(o) { return Object.values(o); }\r\n"
    sig: function get_values(o){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  send_move:
    name: send_move
    code: "function send_move() {\r

      \  let me = Session.cur_players[Session.cur_user];\r

      \  if (me.player_status == 'lamov') me.player_status = 'done';\r

      \  let o = { tid: Session.cur_tid, player_status: me.player_status,
      score: me.score, state: me.state, uname: me.name };\r

      \  to_server(o, 'send_move');\r

      }\r\n"
    sig: function send_move(){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  update_my_score:
    name: update_my_score
    code: "function update_my_score(inc) {\r

      \  let me = Session.cur_players[Session.cur_user];\r

      \  me.score += inc;\r

      \  return me.score;\r

      }\r\n"
    sig: function update_my_score(inc){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  animateColorScale:
    name: animateColorScale
    code: "function animateColorScale(elem, color = 'green', scale = 1.5, timeoutms
      = 2000, aniClass = 'scaleInColor') {\r

      \  setCSSVariable('--aniColor', color);\r

      \  setCSSVariable('--aniScale', scale);\r

      \  mClass(elem, aniClass);\r

      \  setTimeout(() => mRemoveClass(elem, aniClass), timeoutms);\r

      }\r\n"
    sig: function animateColorScale(elem, color = 'green', scale = 1.5, timeoutms =
      2000, aniClass = 'scaleInColor'){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  aniInstruction:
    name: aniInstruction
    code: "function aniInstruction(spoken,v) {\r

      \  if (isdef(spoken)) say(spoken,v);\r

      \  mClass(dInstruction, 'onPulse');\r

      \  setTimeout(() => mRemoveClass(dInstruction, 'onPulse'), 500);\r

      }\r\n"
    sig: function aniInstruction(spoken,v){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  aniPulse:
    name: aniPulse
    code: "function aniPulse(elem, ms) { animate(elem, 'onPulse', ms); }\r\n"
    sig: function aniPulse(elem, ms){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onMouseDownOnLetter:
    name: onMouseDownOnLetter
    code: "function onMouseDownOnLetter(ev) {\r

      \  if (!canAct()) return;\r

      \  ev.preventDefault();\r

      \  let id = evToClosestId(ev);\r

      \  let source = mBy(id);\r

      \  if (isLetterElement(source)) {\r

      \    var clone = DragElem = source.cloneNode(true);\r

      \    clone.id = DragElem.id + '_' + clone;\r

      \    DragSource = source;\r

      \    mAppend(document.body, clone);\r

      \    mClass(clone, 'letter')\r

      \    mClass(clone, 'dragelem');\r

      \    mStyle(clone, { left: ev.clientX - ev.offsetX, top: ev.clientY
      - ev.offsetY });\r

      \    clone.drag = { offsetX: ev.offsetX, offsetY: ev.offsetY };\r

      \    document.body.onmousemove = onMovingCloneAround;\r

      \    document.body.onmouseup = onReleaseLetter;\r

      \  }\r

      }\r\n"
    sig: function onMouseDownOnLetter(ev){}
    region: onmousedown (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onMovingCloneAround:
    name: onMovingCloneAround
    code: "function onMovingCloneAround(ev) {\r

      \  if (DragElem === null) return;\r

      \  let mx = ev.clientX;\r

      \  let my = ev.clientY;\r

      \  let dx = mx - DragElem.drag.offsetX;\r

      \  let dy = my - DragElem.drag.offsetY;\r

      \  mStyle(DragElem, { left: dx, top: dy });\r

      }\r\n"
    sig: function onMovingCloneAround(ev){}
    region: drag (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  onReleaseLetter:
    name: onReleaseLetter
    code: "function onReleaseLetter(ev) {\r

      \  let els = allElementsFromPoint(ev.clientX, ev.clientY);\r

      \  let inputs = DropZones; \r

      \  for (const inp of inputs) {\r

      \    if (els.includes(inp)) {\r

      \      inp.innerHTML = DragElem.innerHTML;\r

      \      if (startsWith(DragElem.id, 'input')) DragSource.innerHTML =
      '_';\r

      \      let w = buildWordFromLetters(inp.parentNode);\r

      \      if (!w.includes('_')) GC.evaluate(w,
      Goal.label.toUpperCase());\r

      \    }\r

      \  }\r

      \  DragElem.remove();\r

      \  DragElem = DragSource = null;\r

      \  document.body.ondrag = document.body.ondragend = null;\r

      }\r\n"
    sig: function onReleaseLetter(ev){}
    region: DRAG (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onDragLetter:
    name: onDragLetter
    code: "function onDragLetter(ev)
      {\tconsole.log('YES!',ev.clientX,ev.clientY);}\r\n"
    sig: function onDragLetter(ev){}
    region: DRAG (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onDropLetter:
    name: onDropLetter
    code: "function onDropLetter(ev) {\r

      \  let els = allElementsFromPoint(ev.clientX, ev.clientY);\r

      \  let inputs = DropZones; \r

      \  for (const inp of inputs) {\r

      \    if (els.includes(inp)) {\r

      \      inp.innerHTML = DragElem.innerHTML;\r

      \      if (startsWith(DragElem.id, 'input')) DragSource.innerHTML =
      '_';\r

      \      let w = buildWordFromLetters(inp.parentNode);\r

      \      if (!w.includes('_')) GC.evaluate(w,
      Goal.label.toUpperCase());\r

      \    }\r

      \  }\r

      \  DragElem.remove();\r

      \  DragElem = DragSource = null;\r

      \  document.body.ondrag = document.body.ondragend = null;\r

      }\r\n"
    sig: function onDropLetter(ev){}
    region: DRAG (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onDragStartOnLetter1:
    name: onDragStartOnLetter1
    code: "function onDragStartOnLetter1(ev) {\r

      \  if (!canAct()) return;\r

      \  ev.preventDefault();\r

      \  let id = evToClosestId(ev);\r

      \  let source = mBy(id);\r

      \  if (isLetterElement(source)) {\r

      \    var clone = DragElem = source.cloneNode(true);\r

      \    clone.id = DragElem.id + '_' + clone;\r

      \    DragSource = source;\r

      \    mAppend(document.body, clone);\r

      \    mClass(clone, 'letter')\r

      \    mClass(clone, 'dragelem');\r

      \    mStyle(clone, { left: ev.clientX - ev.offsetX, top: ev.clientY
      - ev.offsetY });\r

      \    clone.drag_info = { offsetX: ev.offsetX, offsetY: ev.offsetY
      };\r

      \    clone.setAttribute('draggable',true);\r

      \    clone.ondrag = onDraggingCloneAround;\r

      \    document.body.ondragend = onReleaseLetter;\r

      \  }\r

      }\r\n"
    sig: function onDragStartOnLetter1(ev){}
    region: DRAG (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onDraggingCloneAround:
    name: onDraggingCloneAround
    code: "function onDraggingCloneAround(ev) {\r

      \  console.log('YES!')\r

      \  if (DragElem === null) return;\r

      \  console.log('ev',ev);\r

      \  let mx = ev.clientX;\r

      \  let my = ev.clientY;\r

      \  let dx = mx - DragElem.drag_info.offsetX;\r

      \  let dy = my - DragElem.drag_info.offsetY;\r

      \  mStyle(DragElem, { left: dx, top: dy });\r

      }\r\n"
    sig: function onDraggingCloneAround(ev){}
    region: DRAG (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  buildWordFromLetters:
    name: buildWordFromLetters
    code: "function buildWordFromLetters(dParent) {\r

      \  let letters = Array.from(dParent.children);\r

      \  let s = letters.map(x => x.innerHTML);\r

      \  s = s.join('');\r

      \  return s;\r

      }\r\n"
    sig: function buildWordFromLetters(dParent){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  createLetterInputs:
    name: createLetterInputs
    code: "function createLetterInputs(s, dParent, style, idForContainerDiv,
      colorWhiteSpaceChars = true, preserveColorsBetweenWhiteSpace = true) {\r

      \  let d = mDiv(dParent);\r

      \  if (isdef(idForContainerDiv)) d.id = idForContainerDiv;\r

      \  inputs = [];\r

      \  let whiteStyle = jsCopy(style);\r

      \  if (!colorWhiteSpaceChars) {\r

      \    if (isdef(whiteStyle.fg)) delete whiteStyle.fg;\r

      \    if (isdef(whiteStyle.bg)) delete whiteStyle.bg;\r

      \    if (isdef(whiteStyle.border)) delete whiteStyle.border;\r

      \  }\r

      \  let fg, fgOrig, bg, bgOrig;\r

      \  fgOrig = style.fg;\r

      \  bgOrig = style.bg;\r

      \  if (isVariableColor(fgOrig) && isdef(style.fg)) { fg =
      computeColorX(fgOrig); style.fg = fg; }\r

      \  if (isVariableColor(bgOrig) && isdef(style.bg)) { bg =
      computeColorX(bgOrig); style.bg = bg; }\r

      \  for (let i = 0; i < s.length; i++) {\r

      \    let d1 = mCreate('div');\r

      \    mAppend(d, d1);\r

      \    d1.innerHTML = s[i];\r

      \    let white = isWhiteSpace2(s[i]);\r

      \    if (white) {\r

      \      if (isVariableColor(fgOrig) && isdef(style.fg)) { fg =
      computeColorX(fgOrig); style.fg = fg; }\r

      \      if (isVariableColor(bgOrig) && isdef(style.bg)) { bg =
      computeColorX(bgOrig); style.bg = bg; }\r

      \    }\r

      \    mStyle(d1, white ? whiteStyle : style);\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function createLetterInputs(s, dParent, style, idForContainerDiv,
      colorWhiteSpaceChars = true, preserveColorsBetweenWhiteSpace = true){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  isLetterElement:
    name: isLetterElement
    code: "function isLetterElement(elem) { return
      isCapitalLetterOrDigit(elem.innerHTML); }\r\n"
    sig: function isLetterElement(elem){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  isVariableColor:
    name: isVariableColor
    code: "function isVariableColor(c) { return c == 'random' || c == 'randPastel'
      || c == 'randDark' || c == 'randLight' || isList(c); }\r\n"
    sig: function isVariableColor(c){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  scrambleInputs:
    name: scrambleInputs
    code: "function scrambleInputs(d) {\r

      \  let children = Array.from(d.children);\r

      \  shuffle(children);\r

      \  for (const ch of children) {\r

      \    mAppend(d, ch);\r

      \  }\r

      }\r\n"
    sig: function scrambleInputs(d){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getStyledItems:
    name: getStyledItems
    code: "function getStyledItems(words, bgFunc, fgFunc = 'contrast', fzFunc) {\r

      \  let items = [];\r

      \  if (isString(bgFunc)) { bgFunc = () => bgFunc; }\r

      \  if (isLiteral(fzFunc)) { fzFunc = () => fzFunc; }\r

      \  if (isString(fgFunc)) { fgFunc = () => fgFunc; }\r

      \  else if (nundef(fgFunc)) fgFunc = (i, w, bg) =>
      colorIdealText(bg);\r

      \  for (let i = 0; i < words.length; i++) {\r

      \    let w = words[i];\r

      \    let bg = bgFunc(i, w);\r

      \    let fg = fgFunc(i, w, bg);\r

      \    let item = { w: w, bg: bg, fg: fg, i: i, fz: fzFunc(i, w) };\r

      \    items.push(item)\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function getStyledItems(words, bgFunc, fgFunc = 'contrast', fzFunc){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getStyledItems1:
    name: getStyledItems1
    code: "function getStyledItems1(words, bgFunc, fgFunc = 'contrast', fzFunc) {\r

      \  let items = [];\r

      \  if (isString(bgFunc)) { bgFunc = () => bgFunc; }\r

      \  if (isLiteral(fzFunc)) { fzFunc = () => fzFunc; }\r

      \  if (isString(fgFunc)) { fgFunc = () => fgFunc; }\r

      \  else if (nundef(fgFunc)) fgFunc = (i, w, bg) =>
      colorIdealText(bg);\r

      \  for (let i = 0; i < words.length; i++) {\r

      \    let w = words[i];\r

      \    let bg = bgFunc(i, w);\r

      \    let fg = fgFunc(i, w, bg);\r

      \    let item = { w: w, bg: bg, fg: fg, i: i, fz: fzFunc(i, w) };\r

      \    items.push(item)\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function getStyledItems1(words, bgFunc, fgFunc = 'contrast', fzFunc){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  createWordInputs:
    name: createWordInputs
    code: "function createWordInputs(words, dParent, idForContainerDiv =
      'seqContainer', sep = null, styleContainer = {}, styleWord = {},
      styleLetter = {}, styleSep = {}, colorWhiteSpaceChars = true,
      preserveColorsBetweenWhiteSpace = true) {\r

      \  if (isEmpty(styleWord)) {\r

      \    let sz = 80;\r

      \    styleWord = {\r

      \      margin: 10, padding: 4, rounding: '50%', w: sz, h: sz,
      display: 'flex', fg: 'lime', bg: 'yellow', 'align-items': 'center',\r

      \      border: 'transparent', outline: 'none', fz: sz - 25,
      'justify-content': 'center',\r

      \    };\r

      \  }\r

      \  let dContainer = mDiv(dParent);\r

      \  if (!isEmpty(styleContainer)) mStyle(dContainer, styleContainer);
      else mClass(dContainer, 'flexWrap');\r

      \  dContainer.id = idForContainerDiv;\r

      \  let inputGroups = [];\r

      \  let charInputs = [];\r

      \  let iWord = 0;\r

      \  let idx = 0;\r

      \  let numWords = words.length;\r

      \  let wheel = getHueWheel(G.color, 40, numWords <= 4 ? 60 :
      numWords <= 10 ? 30 : 15, 0);\r

      \  wheel = wheel.map(x => colorHSLBuild(x, 100, 50));\r

      \  wheel = shuffle(wheel);\r

      \  let wheel1 = colorPalShadeX(anyColorToStandardString(wheel[0]),
      numWords);\r

      \  wheel = jsCopy(wheel1);\r

      \  if (G.op == 'plus') wheel.reverse();\r

      \  for (const w of words) {\r

      \    let dGroup = mDiv(dContainer);\r

      \    mStyle(dGroup, styleWord);\r

      \    let bg = wheel[iWord]; //
      dGroup.style.backgroundColor=randomColorX(G.color,40,60,0,50,50);//'yello\
      w';//randomColorX(G.color,70,80);\r

      \    dGroup.style.backgroundColor = bg;\r

      \    dGroup.style.color = colorIdealText(bg);\r

      \    dGroup.id = idForContainerDiv + '_' + iWord;\r

      \    let g = { dParent: dContainer, word: w, iWord: iWord, div:
      dGroup, oStyle: styleWord, ofg: dGroup.style.color, obg:
      dGroup.style.backgroundColor };\r

      \    inputGroups.push(g);\r

      \    let inputs = [];\r

      \    let iLetter = 0;\r

      \    let wString = w.toString();\r

      \    for (const l of wString) {\r

      \      let dLetter = mDiv(dGroup);\r

      \      if (!isEmpty(styleLetter)) mStyle(dLetter, styleLetter);\r

      \      dLetter.innerHTML = l;\r

      \      let inp = { group: g, div: dLetter, letter: l, iLetter:
      iLetter, index: idx, oStyle: styleLetter, ofg: dLetter.style.color, obg:
      dLetter.style.backgroundColor };\r

      \      charInputs.push(inp);\r

      \      inputs.push(inp);\r

      \      iLetter += 1; idx += 1;\r

      \    }\r

      \    g.charInputs = inputs;\r

      \    if (iWord < words.length - 1 && isdef(sep)) {\r

      \      let dSep = mDiv(dContainer);\r

      \      dSep.innerHTML = sep;\r

      \      if (isdef(styleSep)) mStyle(dSep, styleSep);\r

      \    }\r

      \    iWord += 1;\r

      \  }\r

      \  return { words: inputGroups, letters: charInputs };\r

      }\r\n"
    sig: function createWordInputs(words, dParent, idForContainerDiv =
      'seqContainer', sep = null, styleContainer = {}, styleWord = {},
      styleLetter = {}, styleSep = {}, colorWhiteSpaceChars = true,
      preserveColorsBetweenWhiteSpace = true){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  createNumberSequence:
    name: createNumberSequence
    code: "function createNumberSequence(n, min, max, step, op = 'plus') {\r

      \  let fBuild = x => { return op == 'plus' ? (x + step) : op ==
      'minus' ? (x - step) : x; };\r

      \  if (op == 'minus') min += step * (n - 1);\r

      \  if (min >= (max - 10)) max = min + 10;\r

      \  let seq = getRandomNumberSequence(n, min, max, fBuild,
      lastPosition);\r

      \  lastPosition = seq[0];\r

      \  return seq;\r

      }\r\n"
    sig: function createNumberSequence(n, min, max, step, op = 'plus'){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showNumberSequence:
    name: showNumberSequence
    code: "function showNumberSequence(words, dParent, idForContainerDiv =
      'seqContainer', sep = null, styleContainer = {}, styleWord = {},
      styleLetter = {}, styleSep = {}, colorWhiteSpaceChars = true,
      preserveColorsBetweenWhiteSpace = true) {\r

      \  if (isEmpty(styleWord)) {\r

      \    let sz = 80;\r

      \    styleWord = {\r

      \      margin: 10, padding: 4, rounding: '50%', w: sz, h: sz,
      display: 'flex', fg: 'lime', bg: 'yellow', 'align-items': 'center',\r

      \      border: 'transparent', outline: 'none', fz: sz - 25,
      'justify-content': 'center',\r

      \    };\r

      \  }\r

      \  let dContainer = mDiv(dParent);\r

      \  if (!isEmpty(styleContainer)) mStyle(dContainer, styleContainer);
      else mClass(dContainer, 'flexWrap');\r

      \  dContainer.id = idForContainerDiv;\r

      \  let inputGroups = [];\r

      \  let charInputs = [];\r

      \  let iWord = 0;\r

      \  let idx = 0;\r

      \  let numWords = words.length;\r

      \  let wheel = getHueWheel(G.color, 40, numWords <= 4 ? 60 :
      numWords <= 10 ? 30 : 15, 0);\r

      \  wheel = wheel.map(x => colorHSLBuild(x, 100, 50));\r

      \  wheel = shuffle(wheel);\r

      \  let wheel1 = colorPalShadeX(anyColorToStandardString(wheel[0]),
      numWords);\r

      \  wheel = jsCopy(wheel1);\r

      \  if (G.op == 'plus') wheel.reverse();\r

      \  for (const w of words) {\r

      \    let dGroup = mDiv(dContainer);\r

      \    mStyle(dGroup, styleWord);\r

      \    let bg = wheel[iWord]; //
      dGroup.style.backgroundColor=randomColorX(G.color,40,60,0,50,50);//'yello\
      w';//randomColorX(G.color,70,80);\r

      \    dGroup.style.backgroundColor = bg;\r

      \    dGroup.style.color = colorIdealText(bg);\r

      \    dGroup.id = idForContainerDiv + '_' + iWord;\r

      \    let g = { dParent: dContainer, word: w, iWord: iWord, div:
      dGroup, oStyle: styleWord, ofg: dGroup.style.color, obg:
      dGroup.style.backgroundColor };\r

      \    inputGroups.push(g);\r

      \    let inputs = [];\r

      \    let iLetter = 0;\r

      \    let wString = w.toString();\r

      \    for (const l of wString) {\r

      \      let dLetter = mDiv(dGroup);\r

      \      if (!isEmpty(styleLetter)) mStyle(dLetter, styleLetter);\r

      \      dLetter.innerHTML = l;\r

      \      let inp = { group: g, div: dLetter, letter: l, iLetter:
      iLetter, index: idx, oStyle: styleLetter, ofg: dLetter.style.color, obg:
      dLetter.style.backgroundColor };\r

      \      charInputs.push(inp);\r

      \      inputs.push(inp);\r

      \      iLetter += 1; idx += 1;\r

      \    }\r

      \    g.charInputs = inputs;\r

      \    if (iWord < words.length - 1 && isdef(sep)) {\r

      \      let dSep = mDiv(dContainer);\r

      \      dSep.innerHTML = sep;\r

      \      if (isdef(styleSep)) mStyle(dSep, styleSep);\r

      \    }\r

      \    iWord += 1;\r

      \  }\r

      \  return [inputGroups, charInputs];\r

      \  return { words: inputGroups, letters: charInputs };\r

      \  return [wi.words, wi.letters];\r

      }\r\n"
    sig: function showNumberSequence(words, dParent, idForContainerDiv =
      'seqContainer', sep = null, styleContainer = {}, styleWord = {},
      styleLetter = {}, styleSep = {}, colorWhiteSpaceChars = true,
      preserveColorsBetweenWhiteSpace = true){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  setNumberSequenceGoal:
    name: setNumberSequenceGoal
    code: "function setNumberSequenceGoal() {\r

      \  let blank = blankWordInputs(G.words, G.numMissing,
      G.posMissing);\r

      \  Goal = { seq: G.seq, words: G.words, chars: G.letters,
      blankWords: blank.words, blankChars: blank.letters, iFocus: blank.iFocus
      };\r

      \  Goal.qCharIndices = Goal.blankChars.map(x => x.index);\r

      \  Goal.qWordIndices = Goal.blankWords.map(x => x.iWord);\r

      }\r\n"
    sig: function setNumberSequenceGoal(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showEquation:
    name: showEquation
    code: "function showEquation(words, dParent, idForContainerDiv, sep = null,
      styleContainer = {}, styleWord = {}, styleLetter = {}, styleSep = {},
      colorWhiteSpaceChars = true, preserveColorsBetweenWhiteSpace = true) {\r

      \  if (isEmpty(styleWord)) {\r

      \    let sz = 80;\r

      \    let fg = helleFarbe(G.color);\r

      \    styleWord = {\r

      \      margin: 8, padding: 8, rounding: '50%', w: 'auto', h: sz,
      display: 'flex', fg: fg, bg: 'transparent',\r

      \      'align-items': 'center', border: 'transparent', outline:
      'none', fz: sz, 'justify-content': 'center',\r

      \    };\r

      \  }\r

      \  let dContainer = mDiv(dParent);\r

      \  if (!isEmpty(styleContainer)) mStyle(dContainer, styleContainer);
      else mClass(dContainer, 'flexWrap');\r

      \  dContainer.id = idForContainerDiv;\r

      \  let inputGroups = [];\r

      \  let charInputs = [];\r

      \  let iWord = 0;\r

      \  let idx = 0;\r

      \  let numWords = words.length;\r

      \  for (const w of words) {\r

      \    let dGroup = mDiv(dContainer);\r

      \    mStyle(dGroup, styleWord);\r

      \    dGroup.id = idForContainerDiv + '_' + iWord;\r

      \    let g = { dParent: dContainer, word: w, iWord: iWord, div:
      dGroup, oStyle: styleWord, ofg: dGroup.style.color, obg:
      dGroup.style.backgroundColor };\r

      \    inputGroups.push(g);\r

      \    let inputs = [];\r

      \    let iLetter = 0;\r

      \    let wString = w.toString();\r

      \    for (const l of wString) {\r

      \      let dLetter = mDiv(dGroup);\r

      \      if (!isEmpty(styleLetter)) mStyle(dLetter, styleLetter);\r

      \      dLetter.innerHTML = l;\r

      \      let inp = { group: g, div: dLetter, letter: l, iLetter:
      iLetter, index: idx, oStyle: styleLetter, ofg: dLetter.style.color, obg:
      dLetter.style.backgroundColor };\r

      \      charInputs.push(inp);\r

      \      inputs.push(inp);\r

      \      iLetter += 1; idx += 1;\r

      \    }\r

      \    g.charInputs = inputs;\r

      \    if (iWord < words.length - 1 && isdef(sep)) {\r

      \      let dSep = mDiv(dContainer);\r

      \      dSep.innerHTML = sep;\r

      \      if (isdef(styleSep)) mStyle(dSep, styleSep);\r

      \    }\r

      \    iWord += 1;\r

      \  }\r

      \  return [inputGroups, charInputs];\r

      }\r\n"
    sig: function showEquation(words, dParent, idForContainerDiv, sep = null,
      styleContainer = {}, styleWord = {}, styleLetter = {}, styleSep = {},
      colorWhiteSpaceChars = true, preserveColorsBetweenWhiteSpace = true){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  setEquationGoal:
    name: setEquationGoal
    code: "function setEquationGoal() {\r

      \  let blank = blankWordInputs(G.words, G.numMissing,
      G.posMissing);\r

      \  Goal = { seq: G.seq, words: G.words, chars: G.letters,
      blankWords: blank.words, blankChars: blank.letters, iFocus: blank.iFocus
      };\r

      \  Goal.qCharIndices = Goal.blankChars.map(x => x.index);\r

      \  Goal.qWordIndices = Goal.blankWords.map(x => x.iWord);\r

      \  let yes = true;\r

      \  for (let i = 0; i < Goal.chars.length; i++) if
      (Goal.chars[i].index != i) yes = false;\r

      \  console.assert(yes == true);\r

      }\r\n"
    sig: function setEquationGoal(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  blankWordInputs:
    name: blankWordInputs
    code: "function blankWordInputs(wi, n, pos = 'random') {\r

      \  let indivInputs = [];\r

      \  let remels =\r

      \    pos == 'random' ? choose(wi, n)\r

      \      : pos == 'notStart' ? arrTake(wi.slice(1, wi.length - 1),
      n)\r

      \        : pos == 'start' ? arrTake(wi, n)\r

      \          : takeFromTo(wi, wi.length - n, wi.length);\r

      \  for (const el of remels) {\r

      \    for (const inp of el.charInputs) { unfillCharInput(inp); }\r

      \    indivInputs = indivInputs.concat(el.charInputs);\r

      \    el.hasBlanks = true;\r

      \    el.nMissing = el.charInputs.length;\r

      \    if (n > 1) iDiv(el).onclick = onClickWordInput;\r

      \  }\r

      \  return { iFocus: null, words: remels, letters: indivInputs };\r

      }\r\n"
    sig: function blankWordInputs(wi, n, pos = 'random'){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onClickWordInput:
    name: onClickWordInput
    code: "function onClickWordInput(ev) {\r

      \  return;\r

      \  if (!canAct()) return;\r

      \  ev.cancelBubble = true;\r

      \  let id = evToClosestId(ev);\r

      \  let iWord = Number(stringAfter(id, '_'));\r

      \  let g = Goal.words[iWord];\r

      \  if (nundef(g.hasBlanks) || !g.hasBlanks) return;\r

      \  deactivateFocusGroup();\r

      \  activateFocusGroup(g.iWord);\r

      }\r\n"
    sig: function onClickWordInput(ev){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  activateFocusGroup:
    name: activateFocusGroup
    code: "function activateFocusGroup(iFocus) {\r

      \  if (isdef(iFocus)) Goal.iFocus = iFocus;\r

      \  if (Goal.iFocus === null) {\r

      \    console.log('nothing to activate');\r

      \    return;\r

      \  }\r

      \  let g = Goal.words[Goal.iFocus];\r

      \  g.div.style.backgroundColor = 'black';\r

      }\r\n"
    sig: function activateFocusGroup(iFocus){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  deactivateFocusGroup:
    name: deactivateFocusGroup
    code: "function deactivateFocusGroup() {\r

      \  if (Goal.iFocus === null) {\r

      \    return;\r

      \  }\r

      \  let g = Goal.words[Goal.iFocus];\r

      \  g.div.style.backgroundColor = g.obg;\r

      \  Goal.iFocus = null;\r

      }\r\n"
    sig: function deactivateFocusGroup(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onKeyWordInput:
    name: onKeyWordInput
    code: "function onKeyWordInput(ev) {\r

      \  let charEntered = ev.key.toString();\r

      \  if (!isAlphaNum(charEntered)) return;\r

      \  let ch = charEntered.toUpperCase();\r

      \  Selected = { lastLetterEntered: ch };\r

      \  let cands = Goal.blankChars;\r

      \  if (Goal.iFocus) {\r

      \    let word = Goal.words[Goal.iFocus];\r

      \    if (word.hasBlanks) cands = word.charInputs.filter(x =>
      x.isBlank);\r

      \    else deactivateFocusGroup();\r

      \  }\r

      \  console.assert(!isEmpty(cands));\r

      \  let isLastOfGroup = (Goal.iFocus != null) && cands.length == 1;\r

      \  let isVeryLast = Goal.blankChars.length == 1;\r

      \  let target = firstCond(cands, x => x.letter == ch);\r

      \  let isMatch = target != null;\r

      \  if (!isMatch) target = cands[0];\r

      \  fillCharInput(target, ch);\r

      \  return { target: target, isMatch: isMatch, isLastOfGroup:
      isLastOfGroup, isVeryLast: isVeryLast, ch: ch };\r

      }\r\n"
    sig: function onKeyWordInput(ev){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  unfillWord:
    name: unfillWord
    code: "function unfillWord(winp) { winp.charInputs.map(x => unfillCharInput(x));
      }\r\n"
    sig: function unfillWord(winp){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  unfillCharInput:
    name: unfillCharInput
    code: "function unfillCharInput(inp) {\r

      \  let d = iDiv(inp);\r

      \  d.innerHTML = '_';\r

      \  mClass(d, 'blink');\r

      \  inp.isBlank = true;\r

      }\r\n"
    sig: function unfillCharInput(inp){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  unfillChar:
    name: unfillChar
    code: "function unfillChar(inp) { unfillCharInput(inp); }\r\n"
    sig: function unfillChar(inp){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  fillCharInput:
    name: fillCharInput
    code: "function fillCharInput(inp, ch) {\r

      \  let d = iDiv(inp);\r

      \  d.innerHTML = ch;\r

      \  mRemoveClass(d, 'blink');\r

      }\r\n"
    sig: function fillCharInput(inp, ch){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  correctWordInput:
    name: correctWordInput
    code: "function correctWordInput(winp) { winp.charInputs.map(x =>
      refillCharInput(x, x.letter)); }\r\n"
    sig: function correctWordInput(winp){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  refillCharInput:
    name: refillCharInput
    code: "function refillCharInput(inp, ch) { fillCharInput(inp, ch); }\r\n"
    sig: function refillCharInput(inp, ch){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getInputStringOfWordi:
    name: getInputStringOfWordi
    code: "function getInputStringOfWordi(iWord) { return
      getInputStringOfWord(Goal.words[iWord]); }\r\n"
    sig: function getInputStringOfWordi(iWord){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getInputStringOfChari:
    name: getInputStringOfChari
    code: "function getInputStringOfChari(index) { return
      getInputStringOfChar(Goal.chars[index]); }\r\n"
    sig: function getInputStringOfChari(index){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getInputStringOfWord:
    name: getInputStringOfWord
    code: "function getInputStringOfWord(winp) { return winp.charInputs.map(x =>
      iDiv(x).innerHTML).join(''); }\r\n"
    sig: function getInputStringOfWord(winp){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getInputStringOfChar:
    name: getInputStringOfChar
    code: "function getInputStringOfChar(inp) { return iDiv(inp).innerHTML; }\r\n"
    sig: function getInputStringOfChar(inp){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getInputWords:
    name: getInputWords
    code: "function getInputWords() { return Goal.words.map(x =>
      getInputStringOfWord(x)); }\r\n"
    sig: function getInputWords(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getQWords:
    name: getQWords
    code: "function getQWords() { return Goal.qWordIndices.map(x => Goal.words[x]);
      }\r\n"
    sig: function getQWords(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getQChars:
    name: getQChars
    code: "function getQChars() {\r

      \  return Goal.qCharIndices.map(x => Goal.chars[x]);\r

      }\r\n"
    sig: function getQChars(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getWrongChars:
    name: getWrongChars
    code: "function getWrongChars() { return getQChars().filter(x =>
      getInputStringOfChar(x) != x.letter); }\r\n"
    sig: function getWrongChars(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getIndicesOfWrongChars:
    name: getIndicesOfWrongChars
    code: "function getIndicesOfWrongChars() { return getWrongChars().map(x =>
      x.index); }\r\n"
    sig: function getIndicesOfWrongChars(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getWrongWords:
    name: getWrongWords
    code: "function getWrongWords() { return getQWords().filter(x =>
      getInputStringOfWord(x) != x.word); }\r\n"
    sig: function getWrongWords(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getIndicesOfWrongWords:
    name: getIndicesOfWrongWords
    code: "function getIndicesOfWrongWords() { return getWrongWords().map(x =>
      x.iWord); }\r\n"
    sig: function getIndicesOfWrongWords(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getCorrectlyAnsweredWords:
    name: getCorrectlyAnsweredWords
    code: "function getCorrectlyAnsweredWords() { return getQWords().filter(x =>
      getInputStringOfWord(x) == x.word); }\r\n"
    sig: function getCorrectlyAnsweredWords(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getIndicesOfCorrectlyAnsweredWords:
    name: getIndicesOfCorrectlyAnsweredWords
    code: "function getIndicesOfCorrectlyAnsweredWords() { return
      getCorrectlyAnsweredWords().map(x => x.iWord); }\r\n"
    sig: function getIndicesOfCorrectlyAnsweredWords(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getCorrectWords:
    name: getCorrectWords
    code: "function getCorrectWords() { return Goal.seq; }\r\n"
    sig: function getCorrectWords(){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getCorrectWordString:
    name: getCorrectWordString
    code: "function getCorrectWordString(sep = ' ') { return
      getCorrectWords().join(sep); }\r\n"
    sig: function getCorrectWordString(sep = ' '){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getInputWordString:
    name: getInputWordString
    code: "function getInputWordString(sep = ' ') { return
      getInputWords().join(sep); }\r\n"
    sig: function getInputWordString(sep = ' '){}
    region: createWordInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  makeExpSequence:
    name: makeExpSequence
    code: "function makeExpSequence() {\r

      \  G.operand = randomNumber(G.minNum, G.maxNum);\r

      \  G.op = chooseRandom(G.ops); \r

      \  G.step = G.op == 'minus' ? randomNumber(0, G.operand) :
      randomNumber(G.minFactor, G.maxFactor); \r

      \  G.oop = OPS[G.op];\r

      \  G.result = G.oop.f(G.operand, G.step);\r

      \  G.seq = [G.operand, G.oop.wr, G.step, '=', G.result];\r

      \  return G.seq;\r

      }\r\n"
    sig: function makeExpSequence(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  readExp:
    name: readExp
    code: "function readExp() { }\r\n"
    sig: function readExp(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  writeExp:
    name: writeExp
    code: "function writeExp() { }\r\n"
    sig: function writeExp(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  blankExpResult:
    name: blankExpResult
    code: "function blankExpResult() { }\r\n"
    sig: function blankExpResult(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  evalExp:
    name: evalExp
    code: "function evalExp() { }\r\n"
    sig: function evalExp(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  blankOperand2:
    name: blankOperand2
    code: "function blankOperand2() { }\r\n"
    sig: function blankOperand2(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  blankOperator:
    name: blankOperator
    code: "function blankOperator() { }\r\n"
    sig: function blankOperator(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  generateExpAnswers:
    name: generateExpAnswers
    code: "function generateExpAnswers() { }\r\n"
    sig: function generateExpAnswers(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  setExpGoal:
    name: setExpGoal
    code: "function setExpGoal() { }\r\n"
    sig: function setExpGoal(){}
    region: math (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  logicMulti:
    name: logicMulti
    code: "function logicMulti(n) {\r

      \  let allPics = Pictures;\r

      \  let maxPics = 4;\r

      \  let [s1, w1, pics1, prop1] = logicFilter(allPics, []);\r

      \  let [s, w, pics, prop] = [s1, w1, pics1, prop1];\r

      \  let maxloop = 3; cntloop = 0; let propsUsed = [prop1];\r

      \  while (pics.length > maxPics && cntloop < maxloop) {\r

      \    cntloop += 1;\r

      \    let opp = arrMinus(allPics, pics);\r

      \    if (opp.length <= maxPics) {\r

      \      let lst = ['eliminate', 'all', 'EXCEPT'];\r

      \      if (G.language == 'D') lst = lst.map(x => DD[x]);\r

      \      let prefix = lst.join(' ');\r

      \      s = prefix + ' ' + s;\r

      \      w = prefix + ' ' + w;\r

      \      return [s, w, opp];\r

      \    }\r

      \    [s1, w1, pics1, prop1] = logicFilter(pics, propsUsed);\r

      \    if (isEmpty(pics1)) return [s, w, pics];\r

      \    else {\r

      \      pics = pics1;\r

      \      prop = prop1;\r

      \      if (prop1 == 'label') {\r

      \        s = s1 + ' ' + s;\r

      \        w = w1 + ' ' + w;\r

      \      } else if (arrLast(propsUsed) == 'label') {\r

      \        let conn = G.language == 'E' ? ' with ' : ' mit ';\r

      \        s1 = s1.substring(s1.indexOf(' '));\r

      \        w1 = w1.substring(w1.indexOf(' '));\r

      \        s = s + conn + s1; w = w + conn + w1;\r

      \      } else {\r

      \        let conn = G.language == 'E' ? ' and ' : ' und ';\r

      \        s1 = s1.substring(s1.indexOf(' '));\r

      \        w1 = w1.substring(w1.indexOf(' '));\r

      \        s = s + conn + s1; w = w + conn + w1;\r

      \      }\r

      \      propsUsed.push(prop1);\r

      \    }\r

      \  }\r

      \  let lst1 = ['click', 'all'];\r

      \  if (G.language == 'D') lst1 = lst1.map(x => DD[x]);\r

      \  let prefix = lst1.join(' ');\r

      \  s = prefix + ' ' + s;\r

      \  w = prefix + ' ' + w;\r

      \  return [s, w, pics];\r

      }\r\n"
    sig: function logicMulti(n){}
    region: logic (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  logicFilter:
    name: logicFilter
    code: "function logicFilter(allPics, exceptProps) {\r

      \  let props = { label: { vals: getDistinctVals(allPics, 'label'),
      friendly: '' } };\r

      \  if (G.numColors > 1) props.colorKey = { vals:
      getDistinctVals(allPics, 'colorKey'), friendly: 'color' };\r

      \  if (G.numRepeat > 1) props.iRepeat = { vals:
      getDistinctVals(allPics, 'iRepeat'), friendly: 'number' };\r

      \  if (sameList(Object.keys(props), exceptProps)) return ['no props
      left', 'no', [], 'unknown'];\r

      \  let lstSpoken, lstWritten, piclist = [];\r

      \  let prop = chooseRandom(arrWithout(Object.keys(props),
      exceptProps));\r

      \  let val = chooseRandom(props[prop].vals);\r

      \  lstSpoken = [];\r

      \  if (prop == 'label') {\r

      \    lstSpoken.push(val);\r

      \    lstWritten = [labelPrepper(val)];\r

      \    piclist = allPics.filter(x => x.label == val);\r

      \  } else if (prop == 'colorKey') {\r

      \    lstSpoken = lstSpoken.concat(['with', props[prop].friendly,
      ColorDict[val][G.language]]);\r

      \    lstWritten = ['with', props[prop].friendly,
      colorPrepper(val)];\r

      \    piclist = allPics.filter(x => x[prop] == val);\r

      \  } else if (prop == 'iRepeat') {\r

      \    let op = (G.level > 2 && G.numRepeat > 2 && val > 1 && val <
      G.numRepeat) ? chooseRandom(['leq', 'geq', 'eq']) : 'eq';\r

      \    let oop = OPS[op];\r

      \    lstSpoken = lstSpoken.concat(['with', props[prop].friendly,
      oop.sp, val]);\r

      \    lstWritten = ['with', props[prop].friendly, oop.wr, val];\r

      \    piclist = allPics.filter(x => oop.f(x[prop], val));\r

      \  }\r

      \  if (nundef(lstWritten)) lstWritten = lstSpoken;\r

      \  let s = lstSpoken.join(' ');\r

      \  let w = lstWritten.join(' ');\r

      \  if (G.language == 'D') {\r

      \    s = s.split(' ').map(x => translateToGerman(x)).join(' ');\r

      \    w = w.split(' ').map(x => translateToGerman(x)).join(' ');\r

      \  }\r

      \  return [s, w, piclist, prop];\r

      }\r\n"
    sig: function logicFilter(allPics, exceptProps){}
    region: logic (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  colorPrepper:
    name: colorPrepper
    code: "function colorPrepper(val) {\r

      \  return `<span
      style=\"color:${ColorDict[val].c}\">${ColorDict[val][G.language].toUpperC\
      ase()}</span>`;\r

      }\r\n"
    sig: function colorPrepper(val){}
    region: logic (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  labelPrepper:
    name: labelPrepper
    code: "function labelPrepper(val) { return `<b>${val.toUpperCase()}</b>`; }\r\n"
    sig: function labelPrepper(val){}
    region: logic (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  logicCheck:
    name: logicCheck
    code: "function logicCheck(pic) {\r\n}\r\n"
    sig: function logicCheck(pic){}
    region: logic (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  logicReset:
    name: logicReset
    code: "function logicReset() {\r\n}\r\n"
    sig: function logicReset(){}
    region: logic (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  hintEngineStart:
    name: hintEngineStart
    code: "function hintEngineStart(hintFunc, hintlist, initialDelay) {\r

      \  G.hintFunc = hintFunc;\r

      \  recShowHints(hintlist, QContextCounter, initialDelay, d =>
      initialDelay + 2000); \r

      }\r\n"
    sig: function hintEngineStart(hintFunc, hintlist, initialDelay){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getOperationHintString:
    name: getOperationHintString
    code: "function getOperationHintString(i) {\r

      \  if (i == 0) {\r

      \    let spOp = G.oop.sp; if (G.language == 'D') spOp = DD[spOp];\r

      \    let sSpoken = [G.operand, spOp, G.step].join(' ');\r

      \    let sWritten = visOperation(G.op, G.operand, G.step, null,
      '?');\r

      \    return [sSpoken, sWritten];\r

      \  } else {\r

      \    let result = G.oop.f(G.operand, G.step);\r

      \    let lstSpoken = i == 1 ? result == 0 ? [result] : ['count',
      'the red dots'] : [G.operand, G.oop.sp, G.step, 'equals', result];\r

      \    if (G.language == 'D') lstSpoken = lstSpoken.map(x =>
      translateToGerman(x));\r

      \    let sSpoken = lstSpoken.join(' ');\r

      \    let sWritten = visOperation(G.op, G.operand, G.step, null);\r

      \    return [sSpoken, sWritten];\r

      \  }\r

      }\r\n"
    sig: function getOperationHintString(i){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getNumSeqHintString:
    name: getNumSeqHintString
    code: "function getNumSeqHintString(i) {\r

      \  console.log('i', i, 'trial#', G.trialNumber)\r

      \  let cmd = G.op;\r

      \  let m = G.step;\r

      \  let lstSpoken, lstWritten;\r

      \  if (i == 0) {\r

      \    lstSpoken = [G.oop.cmd, m];\r

      \  } else if (i == 1) {\r

      \    let decl = G.op == 'plus' ? 'to' : G.op == 'minus' ? 'from' :
      'by';\r

      \    let phrase = decl + ' the previous number';\r

      \    lstSpoken = [G.oop.cmd, m, G.oop.link, ' the previous
      number'];\r

      \  } else if (i == 2) {\r

      \    let iBlank = getNextIndexOfMissingNumber();\r

      \    let iPrevious = iBlank - 1;\r

      \    let n = G.seq[iPrevious];\r

      \    lstSpoken = ['the previous number', 'is', n];\r

      \  } else if (i >= 3) { \r

      \    let iBlank = getNextIndexOfMissingNumber();\r

      \    let iPrevious = iBlank - 1;\r

      \    let n = G.seq[iPrevious];\r

      \    let oop = OPS[cmd];\r

      \    let erg = i >= 4 ? Goal.words[iBlank].word : '?';\r

      \    lstSpoken = ['', n, oop.sp, m, 'equals', erg];\r

      \    lstWritten = [n, oop.wr, m, '=', erg]; \r

      \  } else {\r

      \    let iBlank = getNextIndexOfMissingNumber();\r

      \    lstSpoken = ['enter', Goal.words[iBlank].word];\r

      \  }\r

      \  if (G.language == 'D') lstSpoken = lstSpoken.map(x =>
      translateToGerman(x));\r

      \  if (nundef(lstWritten)) lstWritten = lstSpoken;\r

      \  return [lstSpoken.join(' '), lstWritten.join(' ')];\r

      }\r\n"
    sig: function getNumSeqHintString(i){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getNumSeqHint:
    name: getNumSeqHint
    code: "function getNumSeqHint() {\r

      \  let l = G.op == 'plus' ? 'to' : 'from';\r

      \  let msg = `${G.op} ${G.step} ${l} the previous number`;\r

      \  msg = `${G.oop.cmd} ${G.step} ${G.oop.link} the previous
      number`;\r

      \  return msg;\r

      }\r\n"
    sig: function getNumSeqHint(){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getNextIndexOfMissingNumber:
    name: getNextIndexOfMissingNumber
    code: "function getNextIndexOfMissingNumber(iStart = 0) {\r

      \  for (let i = iStart; i < G.seq.length; i++) {\r

      \    if (Goal.words[i].hasBlanks) return i;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function getNextIndexOfMissingNumber(iStart = 0){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  recShowHints:
    name: recShowHints
    code: "function recShowHints(ilist, rc, delay = 3000, fProgression = d => d *
      1.5) {\r

      \  if (isEmpty(ilist) || QContextCounter != rc) return;\r

      \  let i = ilist.shift();\r

      \  TOTrial = setTimeout(() => recShowHintsNext(i, ilist, rc,
      fProgression(delay), fProgression), delay);\r

      }\r\n"
    sig: function recShowHints(ilist, rc, delay = 3000, fProgression = d => d *
      1.5){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showSayHint:
    name: showSayHint
    code: "function showSayHint(i) {\r

      \  let [spoken, written] = G.hintFunc(i);\r

      \  if (spoken) sayRandomVoice(spoken); \r

      \  if (written) showFleetingMessage(written, 0, { fz: 40 });\r

      }\r\n"
    sig: function showSayHint(i){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  recShowHintsNext:
    name: recShowHintsNext
    code: "function recShowHintsNext(i, ilist, rc, delay, fProgression) {\r

      \  showSayHint(i);\r

      \  if (QContextCounter == rc) recShowHints(ilist, rc, delay,
      fProgression);\r

      }\r\n"
    sig: function recShowHintsNext(i, ilist, rc, delay, fProgression){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  correctBlanks:
    name: correctBlanks
    code: "function correctBlanks() {\r

      \  let wrong = getWrongWords();\r

      \  if (nundef(TOList)) TOList = {};\r

      \  Selected.feedbackUI = wrong.map(x => iDiv(x));\r

      \  failPictureGoal();\r

      \  let t1 = setTimeout(removeMarkers, 1000);\r

      \  let t2 = setTimeout(() => wrong.map(x => { correctWordInput(x);
      animate(iDiv(x), 'komisch', 1300); }), 1000);\r

      \  TOList.correction = [t1, t2];\r

      \  return 2500;\r

      }\r\n"
    sig: function correctBlanks(){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  numberSequenceCorrectionAnimation:
    name: numberSequenceCorrectionAnimation
    code: "function numberSequenceCorrectionAnimation(stringFunc) {\r

      \  let wrong = getWrongWords();\r

      \  if (nundef(TOList)) TOList = {};\r

      \  let msg = stringFunc();\r

      \  showFleetingMessage(msg, 0, { fz: 32 }); \r

      \  Selected.feedbackUI = wrong.map(x => iDiv(x));\r

      \  failPictureGoal();\r

      \  let t1 = setTimeout(removeMarkers, 1000);\r

      \  let t2 = setTimeout(() => wrong.map(x => { correctWordInput(x);
      animate(iDiv(x), 'komisch', 1300); }), 1000);\r

      \  t4 = setTimeout(() => { if (G.spokenFeedback)
      sayRandomVoice(msg); }, 500);\r

      \  TOList.numseq = [t1, t2, t4];\r

      \  return 2800;\r

      }\r\n"
    sig: function numberSequenceCorrectionAnimation(stringFunc){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  translateToGerman:
    name: translateToGerman
    code: "function translateToGerman(w) {\r

      \  if (isNumber(w)) return w;\r

      \  else if (isdef(DD[w])) return DD[w];\r

      \  else return w;\r

      }\r\n"
    sig: function translateToGerman(w){}
    region: number (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  hideMouse:
    name: hideMouse
    code: "function hideMouse() {\r

      \  var x = dTable.getElementsByTagName(\"DIV\");\r

      \  for (const el of x) { el.prevCursor = el.style.cursor; }\r

      \  for (const p of Pictures) {\r

      \    mRemoveClass(iDiv(p), 'frameOnHover'); iDiv(p).style.cursor =
      'none';\r

      \    for (const ch of iDiv(p).children) ch.style.cursor = 'none';\r

      \  }\r

      \  for (const el of x) { mClass(el, 'noCursor'); }\r

      }\r\n"
    sig: function hideMouse(){}
    region: cards (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showMouse:
    name: showMouse
    code: "function showMouse() {\r

      \  var x = dTable.getElementsByTagName(\"DIV\");\r

      \  if (nundef(x) || nundef(x[0]) || nundef(x[0].prevCursor)) {
      console.log('did NOT hide mouse!'); return; }\r

      \  for (const el of x) {\r

      \    mRemoveClass(el, 'noCursor');\r

      \  } \r

      \  for (const el of x) { el.style.cursor = el.prevCursor; }\r

      \  for (const p of Pictures) {\r

      \    mRemoveClass(iDiv(p), 'noCursor');\r

      \    mClass(iDiv(p), 'frameOnHover'); iDiv(p).style.cursor =
      'pointer';\r

      \    for (const ch of iDiv(p).children) ch.style.cursor =
      'pointer';\r

      \  } \r

      }\r\n"
    sig: function showMouse(){}
    region: cards (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  turnCardsAfter:
    name: turnCardsAfter
    code: "function turnCardsAfter(secs, removeBg = false) {\r

      \  let qc = QContextCounter;\r

      \  for (const p of Pictures) { slowlyTurnFaceDown(p, secs - 1,
      removeBg); }\r

      \  TOMain = setTimeout(() => {\r

      \    let wr = 'click '+`<b>${Goal.label}</b>`;\r

      \    let sp = `click ${Goal.label}`;\r

      \    show_instruction(wr, dTitle, sp);\r

      \    showMouse();\r

      \    GC.activateUi.bind(GC)(); \r

      \  }, secs * 1000);\r

      }\r\n"
    sig: function turnCardsAfter(secs, removeBg = false){}
    region: cards (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  slowlyTurnFaceDown:
    name: slowlyTurnFaceDown
    code: "function slowlyTurnFaceDown(pic, secs = 5, removeBg = false) {\r

      \  let ui = iDiv(pic);\r

      \  for (const p1 of ui.children) {\r

      \    p1.style.transition = `opacity ${secs}s ease-in-out`;\r

      \    p1.style.opacity = 0;\r

      \  }\r

      \  if (removeBg) {\r

      \    ui.style.transition = `background-color ${secs}s
      ease-in-out`;\r

      \    ui.style.backgroundColor = 'dimgray';\r

      \  }\r

      \  pic.isFaceUp = false;\r

      }\r\n"
    sig: function slowlyTurnFaceDown(pic, secs = 5, removeBg = false){}
    region: cards (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  successThumbsUpPlus:
    name: successThumbsUpPlus
    code: "function successThumbsUpPlus(withComment = true) {\r

      \  if (withComment && G.spokenFeedback) {\r

      \    const comments = (G.language == 'E' ? ['YEAH!', 'Excellent!!!',
      'CORRECT!', 'Great!!!'] : ['gut', 'Sehr Gut!!!', 'richtig!!',
      'Bravo!!!']);\r

      \    sayRandomVoice(chooseRandom(comments));\r

      \  }\r

      \  let p1 = firstCond(Pictures, x => x.key == 'thumbs up');\r

      \  iDiv(p1).style.opacity = 1;\r

      \  let p2 = firstCond(Pictures, x => x.key == 'thumbs down');\r

      \  iDiv(p2).style.display = 'none';\r

      \  if (isdef(Selected) && isdef(Selected.feedbackUI)) {\r

      \    let uilist;\r

      \    if (isdef(Selected.positiveFeedbackUI)) uilist =
      [Selected.positiveFeedbackUI];\r

      \    else uilist = isList(Selected.feedbackUI) ? Selected.feedbackUI
      : [Selected.feedbackUI];\r

      \    let sz = getRect(uilist[0]).h;\r

      \    for (const ui of uilist) {\r

      \      let d = markerSuccess();\r

      \      mpOver(d, ui, sz * (4 / 5), 'limegreen', 'segoeBlack');\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function successThumbsUpPlus(withComment = true){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  failThumbsDownPlus:
    name: failThumbsDownPlus
    code: "function failThumbsDownPlus(withComment = false) {\r

      \  if (withComment && G.spokenFeedback) {\r

      \    const comments = (G.language == 'E' ? ['too bad'] : [\"aber
      geh'\"]);\r

      \    sayRandomVoice(chooseRandom(comments));\r

      \  }\r

      \  let p1 = firstCond(Pictures, x => x.key == 'thumbs down');\r

      \  iDiv(p1).style.opacity = 1;\r

      \  let p2 = firstCond(Pictures, x => x.key == 'thumbs up');\r

      \  iDiv(p2).style.display = 'none';\r

      \  if (isdef(Selected) && isdef(Selected.feedbackUI)) {\r

      \    let uilist = isList(Selected.feedbackUI) ? Selected.feedbackUI
      : [Selected.feedbackUI];\r

      \    let sz = getRect(uilist[0]).h;\r

      \    for (const ui of uilist) mpOver(markerFail(), ui, sz * (1 / 2),
      'red', 'openMojiTextBlack');\r

      \  }\r

      }\r\n"
    sig: function failThumbsDownPlus(withComment = false){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  successThumbsUp:
    name: successThumbsUp
    code: "function successThumbsUp(withComment = true) {\r

      \  if (withComment && G.spokenFeedback) {\r

      \    const comments = (G.language == 'E' ? ['YEAH!', 'Excellent!!!',
      'CORRECT!', 'Great!!!'] : ['gut', 'Sehr Gut!!!', 'richtig!!',
      'Bravo!!!']);\r

      \    sayRandomVoice(chooseRandom(comments));\r

      \  }\r

      \  let p1 = firstCond(Pictures, x => x.key == 'thumbs up');\r

      \  iDiv(p1).style.opacity = 1;\r

      \  let p2 = firstCond(Pictures, x => x.key == 'thumbs down');\r

      \  iDiv(p2).style.display = 'none';\r

      }\r\n"
    sig: function successThumbsUp(withComment = true){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  failThumbsDown:
    name: failThumbsDown
    code: "function failThumbsDown(withComment = false) {\r

      \  if (withComment && G.spokenFeedback) {\r

      \    const comments = (G.language == 'E' ? ['too bad'] : [\"aber
      geh'\"]);\r

      \    sayRandomVoice(chooseRandom(comments));\r

      \  }\r

      \  let p1 = firstCond(Pictures, x => x.key == 'thumbs down');\r

      \  iDiv(p1).style.opacity = 1;\r

      \  let p2 = firstCond(Pictures, x => x.key == 'thumbs up');\r

      \  iDiv(p2).style.display = 'none';\r

      }\r\n"
    sig: function failThumbsDown(withComment = false){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  successPictureGoal:
    name: successPictureGoal
    code: "function successPictureGoal(withComment = true) {\r

      \  if (withComment && G.spokenFeedback) {\r

      \    let lang = G.language;\r

      \    const comments = {\r

      \      E: ['YEAH!', 'Excellent!!!', 'CORRECT!', 'Great!!!'],\r

      \      D: ['gut', 'Sehr Gut!!!', 'richtig!!', 'Bravo!!!'],\r

      \      S: ['bien', 'muy bien!!!', 'eccelente!!', 'bravo!!!'],\r

      \      F: ['bien', 'tres bien!!!', 'fantastique!!', 'bravo!!!',
      'excellent!!!'],\r

      \      C: ['优秀', '好的!!!', '正确的!!', 'Bravo!!!'],\r

      \    }[lang];\r

      \    say(chooseRandom(comments), lang);\r

      \  }\r

      \  if (isdef(Selected) && isdef(Selected.feedbackUI)) {\r

      \    let uilist;\r

      \    if (isdef(Selected.positiveFeedbackUI)) uilist =
      [Selected.positiveFeedbackUI];\r

      \    else uilist = isList(Selected.feedbackUI) ? Selected.feedbackUI
      : [Selected.feedbackUI];\r

      \    let sz = getRect(uilist[0]).h;\r

      \    for (const ui of uilist) {\r

      \      let d = markerSuccess();\r

      \      mpOver(d, ui, sz * (4 / 5), 'limegreen', 'segoeBlack');\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function successPictureGoal(withComment = true){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  failPictureGoal:
    name: failPictureGoal
    code: "function failPictureGoal(withComment = false) {\r

      \  if (withComment && G.spokenFeedback) {\r

      \    let lang = G.language;\r

      \    const comments = {\r

      \      E: ['too bad', 'oh', 'oops', 'nope'],\r

      \      D: ['aber geh', 'nicht ganz', 'falsch'],\r

      \      S: ['no'],\r

      \      F: ['non'],\r

      \      C: ['不正确'],\r

      \    }[lang];\r

      \    say(chooseRandom(comments), lang);\r

      \  }\r

      \  if (isdef(Selected) && isdef(Selected.feedbackUI)) {\r

      \    let uilist = isList(Selected.feedbackUI) ? Selected.feedbackUI
      : [Selected.feedbackUI];\r

      \    let sz = getRect(uilist[0]).h;\r

      \    for (const ui of uilist) {\r

      \      mpOver(markerFail(), ui, sz * (1 / 2), 'red',
      'openMojiTextBlack');\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function failPictureGoal(withComment = false){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  failSomePictures:
    name: failSomePictures
    code: "function failSomePictures(withComment = false) {\r

      \  if (withComment && G.spokenFeedback) {\r

      \    const comments = (G.language == 'E' ? ['too bad'] : [\"aber
      geh'\"]);\r

      \    sayRandomVoice(chooseRandom(comments));\r

      \  }\r

      \  for (const p of Pictures) {\r

      \    let ui = iDiv(p);\r

      \    let sz = getRect(ui).h;\r

      \    if (p.isCorrect == false) {\r

      \      console.log('fail',p)\r

      \      mpOver(markerFail(), ui, sz * (1 / 2), 'red',
      'openMojiTextBlack');\r

      \    }else mpOver(markerSuccess(), ui, sz * (4 / 5), 'limegreen',
      'segoeBlack');\r

      \  }\r

      }\r\n"
    sig: function failSomePictures(withComment = false){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showCorrectWord:
    name: showCorrectWord
    code: "function showCorrectWord(sayit = true) {\r

      \  let anim = G.spokenFeedback ? 'onPulse' : 'onPulse1';\r

      \  let div = mBy(Goal.id);\r

      \  mClass(div, anim);\r

      \  if (!sayit || !G.spokenFeedback) G.spokenFeedback ? 3000 : 300;\r

      \  let correctionPhrase = isdef(Goal.correctionPhrase) ?
      Goal.correctionPhrase : Goal.label;\r

      \  say(correctionPhrase, G.language);\r

      \  return G.spokenFeedback ? 3000 : 300;\r

      }\r\n"
    sig: function showCorrectWord(sayit = true){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showCorrectUis:
    name: showCorrectUis
    code: "function showCorrectUis() {\r

      \  let anim = 'onPulse5'; \r

      \  for(const ui of Selected.correctUis){    mClass(ui,anim);  }\r

      \  return Selected.correctionDelay;\r

      }\r\n"
    sig: function showCorrectUis(){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showCorrectWordInTitle:
    name: showCorrectWordInTitle
    code: "function showCorrectWordInTitle(sayit = true) {\r

      \  let anim = G.spokenFeedback ? 'onPulse' : 'onPulse1';\r

      \  clearElement(dInstruction);\r

      \  let d1 = mText(`<b>${Goal.label}</b>`, dInstruction, { fz: 36,
      display: 'inline-block' });\r

      \  mClass(dInstruction, anim);\r

      \  showFleetingMessage(Goal.label);\r

      \  if (!sayit || !G.spokenFeedback) G.spokenFeedback ? 3000 : 300;\r

      \  let correctionPhrase = isdef(Goal.correctionPhrase) ?
      Goal.correctionPhrase : Goal.label;\r

      \  sayRandomVoice(correctionPhrase);\r

      \  return G.spokenFeedback ? 3000 : 300;\r

      }\r\n"
    sig: function showCorrectWordInTitle(sayit = true){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showCorrectWords:
    name: showCorrectWords
    code: "function showCorrectWords(sayit = true) {\r

      \  if (nundef(TOList)) TOList = {};\r

      \  TOList.correctWords = [];\r

      \  let anim = 'onPulse2';\r

      \  let to = 0;\r

      \  let speaking = sayit && G.spokenFeedback;\r

      \  let ms = speaking ? 2000 : 1000;\r

      \  for (const goal of Goal.pics) {\r

      \    TOList.correctWords.push(setTimeout(() => {\r

      \      let div = mBy(goal.id);\r

      \      mClass(div, anim);\r

      \      if (speaking) sayRandomVoice((G.language == 'E' ? 'the ' : '
      ') + goal.correctionPhrase);\r

      \    }, to));\r

      \    to += ms;\r

      \  }\r

      \  if (!sayit || !G.spokenFeedback) return to;\r

      \  return to + ms;\r

      }\r\n"
    sig: function showCorrectWords(sayit = true){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showCorrectPictureLabels:
    name: showCorrectPictureLabels
    code: "function showCorrectPictureLabels(sayit = true) { return 1000; }\r\n"
    sig: function showCorrectPictureLabels(sayit = true){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  shortHintPicRemove:
    name: shortHintPicRemove
    code: "function shortHintPicRemove() {\r

      \  mRemoveClass(mBy(Goal.id), 'onPulse1');\r

      }\r\n"
    sig: function shortHintPicRemove(){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  shortHintPic:
    name: shortHintPic
    code: "function shortHintPic() {\r

      \  mClass(mBy(Goal.id), 'onPulse1');\r

      \  TOMain = setTimeout(() => shortHintPicRemove(), 800);\r

      }\r\n"
    sig: function shortHintPic(){}
    region: fail (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  writeSound:
    name: writeSound
    code: "function writeSound() { return; console.log('calling playSound'); }\r\n"
    sig: function writeSound(){}
    region: game (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  gameOver:
    name: gameOver
    code: "function gameOver(msg, silent = false) { TOMain =
      setTimeout(aniGameOver(msg, silent), DELAY); }\r\n"
    sig: function gameOver(msg, silent = false){}
    region: game (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  aniGameOver:
    name: aniGameOver
    code: "function aniGameOver(msg, silent = false) {\r

      \  if (!silent && !G.silent) { writeSound(); playSound('goodBye');
      }\r

      \  interrupt();\r

      \  show('freezer2');\r

      \  let dComment = mBy('dCommentFreezer2');\r

      \  let dMessage = mBy('dMessageFreezer2');\r

      \  let d = mBy('dContentFreezer2');\r

      \  clearElement(d);\r

      \  mStyle(d, { fz: 20, matop: 40, bg: 'silver', fg: 'indigo',
      rounding: 20, padding: 25 })\r

      \  let style = { matop: 4 };\r

      \  dComment.innerHTML = 'Great Job!';\r

      \  dMessage.innerHTML = isdef(msg) ? msg : 'Time for a Break...';\r

      \  d.style.textAlign = 'center';\r

      \  mText('Unit Score:', d, { fz: 22 });\r

      \  for (const gname in U.session) {\r

      \    let sc = U.session[gname];\r

      \    if (sc.nTotal == 0) continue;\r

      \    if (DB.games[gname].controllerType == 'solitaire')
      mText(`${DB.games[gname].friendly}: ${sc.nCorrect}/${sc.nTotal} correct
      answers (${sc.percentage}%) `, d, style);\r

      \    else if (DB.games[gname].controllerType == 'solo') {\r

      \      mText(`${DB.games[gname].friendly}: Won:${sc.nWins},
      Lost:${sc.nLoses}, Tied:${sc.nTied} `, d, style);\r

      \    }\r

      \  }\r

      \  mClass(mBy('freezer2'), 'aniSlowlyAppear');\r

      }\r\n"
    sig: function aniGameOver(msg, silent = false){}
    region: game (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  visNumber:
    name: visNumber
    code: "function visNumber(n, dParent, color, or = 'h', asNumber = [0]) {\r

      \  if (!isNumber(n) || asNumber.includes(n)) return zText('' + n,
      dParent, { fg: 'white', fz: 64 });\r

      \  return _visualizeNumber(n, dParent, color, or);\r

      }\r\n"
    sig: function visNumber(n, dParent, color, or = 'h', asNumber = [0]){}
    region: vis (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  visOperator:
    name: visOperator
    code: "function visOperator(s, dParent, styles = { fg: 'white', fz: 64 }) {\r

      \  zText(s, dParent, styles);\r

      }\r\n"
    sig: "function visOperator(s, dParent, styles = { fg: 'white', fz: 64 }){}"
    region: vis (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  visOperation:
    name: visOperation
    code: "function visOperation(op, a, b, dParent, symResult) {\r

      \  switch (op) {\r

      \    case 'plus':\r

      \    case 'minus': return _visualizeAritOp(op, a, b, dParent,
      symResult); break;\r

      \    case 'mult': return _visualizeMult(a, b, dParent, symResult);
      break;\r

      \  }\r

      }\r\n"
    sig: function visOperation(op, a, b, dParent, symResult){}
    region: vis (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  _visualizeMult:
    name: _visualizeMult
    code: "function _visualizeMult(a, b, dParent, symResult) {\r

      \  op = OPS.mult;\r

      \  let dx = mDiv(dParent); mFlex(dx); mStyle(dx, { 'align-items':
      'center', gap: 16 });\r

      \  visNumber(a, dx, 'blue', 'v');\r

      \  for (let i = 1; i < b; i++) {\r

      \    let d2 = visOperator('+', dx);\r

      \    visNumber(a, dx, 'blue', 'v');\r

      \  }\r

      \  let d4 = visOperator('=', dx);\r

      \  let result = isdef(symResult) ? symResult : op.f(a, b);\r

      \  let d5 = visNumber(result, dx, 'red');\r

      \  return dx;\r

      }\r\n"
    sig: function _visualizeMult(a, b, dParent, symResult){}
    region: vis (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  _visualizeAritOp:
    name: _visualizeAritOp
    code: "function _visualizeAritOp(op, a, b, dParent, symResult) {\r

      \  op = isString(op) ? OPS[op] : op;\r

      \  let dx = mDiv(dParent); mFlex(dx); mStyle(dx, { 'align-items':
      'center', gap: 16 });\r

      \  let d1 = visNumber(a, dx, 'blue');\r

      \  let d2 = visOperator(op.wr, dx);\r

      \  let d3 = visNumber(b, dx, 'green');\r

      \  let d4 = visOperator('=', dx);\r

      \  let result = isdef(symResult) ? symResult : op.f(a, b);\r

      \  let d5 = visNumber(result, dx, 'red');\r

      \  return dx;\r

      }\r\n"
    sig: function _visualizeAritOp(op, a, b, dParent, symResult){}
    region: vis (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  _visualizeNumber:
    name: _visualizeNumber
    code: "function _visualizeNumber(n, dParent, color, or = 'h') {\r

      \  let root = Math.sqrt(n);\r

      \  let rows = Math.floor(root);\r

      \  let cols = Math.ceil(root);\r

      \  if (or == 'v') { let h = rows; rows = cols; cols = h; }\r

      \  let dArea = mDiv(dParent, { display: 'inline-grid',
      'grid-template-columns': `repeat(${cols}, 1fr)`, bg: 'white', fg: color
      });\r

      \  for (let i = 0; i < n; i++) {\r

      \    let item = getItem('plain-circle');\r

      \    let d = miPic(item, dArea, { fz: 12, margin: 6 });\r

      \    iAdd(item, { div: d });\r

      \    mAppend(dArea, d);\r

      \  }\r

      \  return dArea;\r

      }\r\n"
    sig: function _visualizeNumber(n, dParent, color, or = 'h'){}
    region: vis (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  zText:
    name: zText
    code: "function zText(text, dParent, textStyles, hText, vCenter = false) {\r

      \  let tSize = getSizeWithStyles(text, textStyles);\r

      \  let extra = 0, lines = 1;\r

      \  if (isdef(hText)) {\r

      \    extra = hText - tSize.h;\r

      \    if (textStyles.fz) lines = Math.floor(tSize.h /
      textStyles.fz);\r

      \  }\r

      \  let dText = isdef(text) ? mText(text, dParent, textStyles) :
      mDiv(dParent);\r

      \  if (extra > 0 && vCenter) {\r

      \    dText.style.paddingTop = (extra / 2) + 'px';\r

      \    dText.style.paddingBottom = (extra / 2) + 'px';\r

      \  }\r

      \  return { text: text, div: dText, extra: extra, lines: lines, h:
      tSize.h, w: tSize.w, fz: textStyles.fz };\r

      }\r\n"
    sig: function zText(text, dParent, textStyles, hText, vCenter = false){}
    region: vis (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  toggleFaceSimple:
    name: toggleFaceSimple
    code: "function toggleFaceSimple(pic) { if (pic.isFaceUp)
      turnFaceDownSimple(pic); else turnFaceUpSimple(pic); }\r\n"
    sig: function toggleFaceSimple(pic){}
    region: card (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  turnFaceDownSimple:
    name: turnFaceDownSimple
    code: "function turnFaceDownSimple(pic) {\r

      \  let ui = iDiv(pic);\r

      \  ui.style.transition = null;\r

      \  mRemoveClass(ui, 'frameOnHover');\r

      \  for (const ch of ui.children) { ch.style.transition = null;
      ch.style.opacity = 0; }\r

      \  pic.isFaceUp = false;\r

      }\r\n"
    sig: function turnFaceDownSimple(pic){}
    region: card (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  turnFaceUpSimple:
    name: turnFaceUpSimple
    code: "function turnFaceUpSimple(pic) {\r

      \  let ui = iDiv(pic);\r

      \  mRemoveClass(ui, 'frameOnHover');\r

      \  ui.style.transition = null;\r

      \  for (const ch of ui.children) { ch.style.transition = null;
      ch.style.opacity = 1; }\r

      \  pic.isFaceUp = true;\r

      }\r\n"
    sig: function turnFaceUpSimple(pic){}
    region: card (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  turnFaceDown:
    name: turnFaceDown
    code: "function turnFaceDown(pic) {\r

      \  let ui = iDiv(pic);\r

      \  for (const p1 of ui.children) p1.style.opacity = 0; \r

      \  ui.style.backgroundColor = 'dimgray';\r

      \  pic.isFaceUp = false;\r

      }\r\n"
    sig: function turnFaceDown(pic){}
    region: card (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  turnFaceUp:
    name: turnFaceUp
    code: "function turnFaceUp(pic, secTransition = 1) {\r

      \  let div = iDiv(pic);\r

      \  for (const ch of div.children) {\r

      \    ch.style.transition = `opacity ${secTransition}s
      ease-in-out`;\r

      \    ch.style.opacity = 1; \r

      \  }\r

      \  div.style.transition = null;\r

      \  div.style.backgroundColor = pic.bg;\r

      \  pic.isFaceUp = true;\r

      }\r\n"
    sig: function turnFaceUp(pic, secTransition = 1){}
    region: card (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  toggleFace:
    name: toggleFace
    code: "function toggleFace(pic) { if (pic.isFaceUp) turnFaceDown(pic); else
      turnFaceUp(pic); }\r\n"
    sig: function toggleFace(pic){}
    region: card (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getOptionsMinimalistic:
    name: getOptionsMinimalistic
    code: "function getOptionsMinimalistic(dParent, handler, w = 0, h = 0, ifs = {},
      options = {}, g) {\r

      \  [w, h] = detectArea(dParent, w, h);\r

      \  let defOptions = {\r

      \    isRegular: true, hugeFont: true, szPic: { w: 200, h: 200 },
      gap: 15, shufflePositions: true,\r

      \    showPic: true, showLabels: true, luc: 'l', labelPos: 'bottom',
      language: g.language, keySet: g.vocab,\r

      \    w: w, h: h, fz: 24, fzText: 24, fzPic: 96, ifs: ifs, handler:
      handler, ifs: ifs, handler: handler,\r

      \  };\r

      \  addSimpleProps(g, options);\r

      \  addKeys(defOptions, options);\r

      \  if (options.numRepeat > 1 && nundef(options.ifs.bg)) {\r

      \    let bg = isdef(options.colorKeys) ? 'white' : (i) =>
      options.sameBackground ? computeColor('random') : 'random';\r

      \    let fg = isdef(options.colorKeys) ? 'black' : 'contrast';\r

      \    options.ifs.bg = bg;\r

      \    options.ifs.fg = fg;\r

      \  }\r

      \  return options;\r

      }\r\n"
    sig: function getOptionsMinimalistic(dParent, handler, w = 0, h = 0, ifs = {},
      options = {}, g){}
    region: options (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  detectArea:
    name: detectArea
    code: "function detectArea(dParent, w, h) {\r

      \  let rect = isdef(dParent) ? getRect(dParent) : null;\r

      \  if (nundef(w)) { w = rect ? rect.w : window.innerWidth; }\r

      \  if (nundef(h)) { h = rect ? rect.h : window.innerHeight; }\r

      \  return [w, h];\r

      }\r\n"
    sig: function detectArea(dParent, w, h){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  calcRowsColsSizeAbWo:
    name: calcRowsColsSizeAbWo
    code: "function calcRowsColsSizeAbWo(n, wmax, hmax, showLabels, wimax = 200,
      himax = 200, fw = 1, fh = 1) {\r

      \  let rows = n > 35 ? 6 : n > 28 ? 5 : n > 24 && !showLabels || n >
      21 ? 4 : n > 8 ? 3 : n > 3 ? 2 : 1;\r

      \  let cols = Math.ceil(n / rows);\r

      \  return calcSizeAbWo(n, rows, cols, wmax, hmax, wimax, himax, fw,
      fh);\r

      }\r\n"
    sig: function calcRowsColsSizeAbWo(n, wmax, hmax, showLabels, wimax = 200, himax
      = 200, fw = 1, fh = 1){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  calcSizeAbWo:
    name: calcSizeAbWo
    code: "function calcSizeAbWo(n, rows, cols, wmax, hmax, wimax = 200, himax =
      200, fw = 1, fh = 1) {\r

      \  if (nundef(cols)) cols = Math.ceil(n / rows); else if
      (nundef(rows)) rows = Math.ceil(n / cols);\r

      \  let wi = wmax * fw / cols;\r

      \  let hi = hmax * fh / rows;\r

      \  wi = Math.min(wi, wimax);\r

      \  hi = Math.min(hi, himax);\r

      \  return [wi, hi, rows, cols];\r

      }\r\n"
    sig: function calcSizeAbWo(n, rows, cols, wmax, hmax, wimax = 200, himax = 200,
      fw = 1, fh = 1){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  myShowPics:
    name: myShowPics
    code: "function myShowPics(handler, ifs = {}, options = {}, keys, labels) {\r

      \  options.showPic = true; \r

      \  options.wimax = options.himax = 200;\r

      \  options.w = window.innerWidth - 180; options.h =
      window.innerHeight - 220;\r

      \  Pictures = showPictures(dTable, handler, ifs, options, keys,
      labels);\r

      }\r\n"
    sig: function myShowPics(handler, ifs = {}, options = {}, keys, labels){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  myShowLabels:
    name: myShowLabels
    code: "function myShowLabels(onClickPictureHandler, ifs = {}, options = {},
      keys, labels) {\r

      \  options.wimax = 200; options.himax = 50;\r

      \  options.w = window.innerWidth - 180; options.h = 50; options.fz =
      22;\r

      \  options.showPic = false; options.showLabels = true;\r

      \  return showPictures(dTable, onClickPictureHandler, ifs, options,
      keys, labels);\r

      }\r\n"
    sig: function myShowLabels(onClickPictureHandler, ifs = {}, options = {}, keys,
      labels){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showPictures:
    name: showPictures
    code: "function showPictures(dParent, handler, ifs = {}, options = {}, keys,
      labels) {\r

      \  options = getOptionsMinimalistic(dParent, handler, options.w,
      options.h, ifs, options, G);\r

      \  if (nundef(keys)) keys = choose(G.keys, G.numPics);\r

      \  let items = genItemsFromKeys(keys, options);\r

      \  if (isdef(labels)) {\r

      \    options.showLabels = true;\r

      \    for (let i = 0; i < items.length; i++) item[i].label = labels[i
      % labels.length];\r

      \  }\r

      \  let dArea = mDiv(dParent);\r

      \  let rect = myPresent(dArea, items, options);\r

      \  return items;\r

      }\r\n"
    sig: function showPictures(dParent, handler, ifs = {}, options = {}, keys,
      labels){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getStandardFz:
    name: getStandardFz
    code: "function getStandardFz(wi, hi, showPic, showLabels, wLongest) {\r

      \  let hText = showPic ? hi / 3 : hi;\r

      \  return showLabels ? idealFontSize(wLongest, wi, hText) : 0;\r

      }\r\n"
    sig: function getStandardFz(wi, hi, showPic, showLabels, wLongest){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getStandardFzPic:
    name: getStandardFzPic
    code: "function getStandardFzPic(wi, hi, showLabels) { return Math.min(wi * .8,
      showLabels ? hi * .6 : hi * .75); }\r\n"
    sig: function getStandardFzPic(wi, hi, showLabels){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  myPresent:
    name: myPresent
    code: "function myPresent(dArea, items, options) {\r

      \  let showLabels = options.showLabels;\r

      \  let w = options.w * valf(options.fw, .9);\r

      \  let h = options.h * valf(options.fh, .7);\r

      \  let wi, hi, rows, cols;\r

      \  if (isdef(options.rows) || isdef(options.cols)) {\r

      \    [wi, hi, rows, cols] = calcSizeAbWo(items.length, options.rows,
      options.cols, w, h, options.wimax, options.himax);\r

      \  } else[wi, hi, rows, cols] = calcRowsColsSizeAbWo(items.length,
      w, h, showLabels, options.wimax, options.himax);\r

      \  let gap = wi * .1; if (cols > 1) wi -= gap; if (rows > 1) hi -=
      gap;\r

      \  let fzPic = options.fzPic = getStandardFzPic(wi, hi,
      showLabels);\r

      \  let fz = getStandardFz(wi, hi, options.showPic,
      options.showLabels, options.wLongest);\r

      \  options.szPic = { w: wi, h: hi };\r

      \  if (nundef(options.ifs)) options.ifs = {};\r

      \  let outerStyles = {\r

      \    w: showLabels ? wi : 'auto', h: hi, rounding: 6, \r

      \    bg: valf(options.ifs.bg, 'random'), fg: 'contrast', display:
      'inline-flex', 'flex-direction': 'column',\r

      \    'justify-content': 'center', 'align-items': 'center',
      'vertical-align': 'top',\r

      \  };\r

      \  let picStyles = { fz: fzPic };\r

      \  let labelStyles = { fz: fz };\r

      \  for (const item of items) {\r

      \    for (const k in options.ifs) if (isdef(item[k])) outerStyles[k]
      = item[k];\r

      \    if (isdef(item.textShadowColor)) {\r

      \      let sShade = '0 0 0 ' + item.textShadowColor;\r

      \      if (options.showPic) {\r

      \        picStyles['text-shadow'] = sShade;\r

      \        picStyles.fg = anyColorToStandardString('black',
      options.contrast); //'#00000080' '#00000030' \r

      \      } else {\r

      \        labelStyles['text-shadow'] = sShade;\r

      \        labelStyles.fg = anyColorToStandardString('black',
      options.contrast); //'#00000080' '#00000030' \r

      \      }\r

      \    }\r

      \    let dOuter = mCreate('div', outerStyles, item.id);\r

      \    dOuter.onclick = options.handler;\r

      \    picStyles.family = item.info.family;\r

      \    let dLabel, dPic;\r

      \    if (options.showPic) { dPic = mDiv(dOuter, picStyles);
      dPic.innerHTML = item.info.text; }\r

      \    if (showLabels) dLabel = mText(item.label, dOuter,
      labelStyles);\r

      \    if (options.showRepeat) addRepeatInfo(dOuter, item.iRepeat,
      wi);\r

      \    iAdd(item, { options: options, div: dOuter, dLabel: dLabel,
      dPic: dPic });\r

      \  }\r

      \  mStyle(dArea, { display: 'inline-grid', gap: gap,
      'grid-template-columns': `repeat(${cols},${wi}px)` });\r

      \  items.map(x => mAppend(dArea, iDiv(x)));\r

      \  return getRect(dArea);\r

      }\r\n"
    sig: function myPresent(dArea, items, options){}
    region: layout (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  tileCondBelongsTo:
    name: tileCondBelongsTo
    code: "function tileCondBelongsTo(t, pl, prop) { return t[prop] == pl.id; }\r\n"
    sig: function tileCondBelongsTo(t, pl, prop){}
    region: tile (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  isYesNo:
    name: isYesNo
    code: "function isYesNo(choices) { return !firstCond(choices, x => !(['yes',
      'no'].includes(x.text))); }\r\n"
    sig: function isYesNo(choices){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  createMultipleChoiceElements:
    name: createMultipleChoiceElements
    code: "function createMultipleChoiceElements(correctAnswer, wrongAnswers,
      dParent, dFeedbackUI, styles) {\r

      \  if (nundef(Goal)) Goal = {};\r

      \  let choices = wrongAnswers; choices.push(correctAnswer);\r

      \  Goal.correctChoice = correctAnswer;\r

      \  if (isYesNo(choices)) {\r

      \    sortByDescending(choices, 'text');\r

      \  } else {\r

      \    shuffle(choices);\r

      \    if (coin()) shuffle(choices);\r

      \  }\r

      \  Goal.choices = choices;\r

      \  Goal.feedbackUI = dFeedbackUI;\r

      \  let idx = 0;\r

      \  for (const ch of choices) {\r

      \    ////'&frac57;', //'&frac12;', \r

      \    let dButton = mButton(ch.text, onClickChoice, dParent, { wmin:
      100, fz: 36, margin: 20, rounding: 4, vpadding: 4, hpadding: 10 },
      ['toggleButtonClass']);\r

      \    dButton.id = 'bChoice_' + idx; idx += 1;\r

      \    if (ch.text == correctAnswer.text) {\r

      \      Goal.choice = ch.toString();\r

      \      Goal.buttonCorrect = dButton; \r

      \    }\r

      \  }\r

      }\r\n"
    sig: function createMultipleChoiceElements(correctAnswer, wrongAnswers, dParent,
      dFeedbackUI, styles){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  onClickChoice:
    name: onClickChoice
    code: "function onClickChoice(ev) {\r

      \  let id = evToClosestId(ev);\r

      \  let b = mBy(id);\r

      \  let index = Number(stringAfter(id, '_'));\r

      \  Goal.choice = Goal.choices[index];\r

      \  Goal.buttonClicked = b;\r

      \  G.controller.evaluate.bind(G.controller)();\r

      }\r\n"
    sig: function onClickChoice(ev){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  addNthInputElement:
    name: addNthInputElement
    code: "function addNthInputElement(dParent, n) {\r

      \  mLinebreak(dParent, 10);\r

      \  let d = mDiv(dParent);\r

      \  let dInp = mCreate('input');\r

      \  dInp.type = \"text\"; dInp.autocomplete = \"off\";\r

      \  dInp.style.margin = '10px;'\r

      \  dInp.id = 'inputBox' + n;\r

      \  dInp.style.fontSize = '20pt';\r

      \  mAppend(d, dInp);\r

      \  return dInp;\r

      }\r\n"
    sig: function addNthInputElement(dParent, n){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  calcMemorizingTime:
    name: calcMemorizingTime
    code: "function calcMemorizingTime(numItems, randomGoal = true) {\r

      \  let ldep = Math.max(6, randomGoal ? numItems * 2 : numItems);\r

      \  return ldep;\r

      }\r\n"
    sig: function calcMemorizingTime(numItems, randomGoal = true){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  clearStats:
    name: clearStats
    code: "function clearStats() {\r

      \  clearLevel();\r

      \  clearScore();\r

      \  clearGameTitle();\r

      }\r\n"
    sig: function clearStats(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  clearScore:
    name: clearScore
    code: "function clearScore() { clearElement(dScore) }\r\n"
    sig: function clearScore(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  clearLevel:
    name: clearLevel
    code: "function clearLevel() { clearElement(dLevel); clearBadges(); }\r\n"
    sig: function clearLevel(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  clearGameTitle:
    name: clearGameTitle
    code: "function clearGameTitle() { clearElement(dGameTitle); }\r\n"
    sig: function clearGameTitle(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  containsColorWord:
    name: containsColorWord
    code: "function containsColorWord(s) {\r

      \  let colors = ['old', 'blond', 'red', 'blue', 'green', 'purple',
      'black', 'brown', 'white', 'grey', 'gray', 'yellow', 'orange'];\r

      \  for (const c of colors) {\r

      \    if (s.toLowerCase().includes(c)) return false;\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function containsColorWord(s){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  createContainers:
    name: createContainers
    code: "function createContainers(list, dArea, styles) {\r

      \  let i = 0;\r

      \  let containers = [];\r

      \  let defStyles = { w: 150, h: 200, bg: 'random', rounding: 12,
      display: 'inline-block', margin: 12 };\r

      \  addKeys(defStyles, styles);\r

      \  for (const cat of list) {\r

      \    let cont = mTitledDiv(cat, dArea, styles, {}, 'c' + i);\r

      \    mStyle(cont, { h: '100%' });\r

      \    i += 1;\r

      \    containers.push({ label: cat, div: cont });\r

      \  }\r

      \  return containers;\r

      }\r\n"
    sig: function createContainers(list, dArea, styles){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getActualText:
    name: getActualText
    code: "function getActualText(item) {\r

      \  if (isdef(item.live.dLabel)) return item.live.dLabel.innerHTML;\r

      }\r\n"
    sig: function getActualText(item){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getPrefixHint:
    name: getPrefixHint
    code: "function getPrefixHint() {\r

      \  let oldHintLength = isdef(G.hintLength) ? G.hintLength : 0;\r

      \  if (nundef(G.hintLength)) G.hintLength = 0;\r

      \  G.input.value = G.correctPrefix;\r

      \  let progress = G.correctPrefix.length > G.nCorrect;\r

      \  if (G.correctPrefix.length > G.nCorrect) {\r

      \    G.hintLength = 1;\r

      \    G.nCorrect = G.correctPrefix.length;\r

      \  } else if (G.hintLength < G.goal.label.length - G.nCorrect)
      G.hintLength += 1;\r

      \  if (G.hintLength == 0) G.hintLength = 1;\r

      \  let wr = substringOfMinLength(G.goal.label,
      G.correctPrefix.length, G.hintLength);\r

      \  let sp = oldHintLength == G.hintLength && !progress ?
      G.lastHintPrompt : null;\r

      \  return [wr, sp];\r

      }\r\n"
    sig: function getPrefixHint(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getGameOrLevelInfo:
    name: getGameOrLevelInfo
    code: "function getGameOrLevelInfo(k, defval) {\r

      \  let val = lookup(DB.games, [G.id, 'levels', G.level, k]);\r

      \  if (!val) val = lookupSet(DB.games, [G.id, k], defval);\r

      \  return val;\r

      }\r\n"
    sig: function getGameOrLevelInfo(k, defval){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getDistinctVals:
    name: getDistinctVals
    code: "function getDistinctVals(list, prop) {\r

      \  let res = [];\r

      \  for (const item of list) {\r

      \    let val = item[prop];\r

      \    addIf(res, val);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function getDistinctVals(list, prop){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getGlobalColors:
    name: getGlobalColors
    code: "function getGlobalColors() { return Object.keys(ColorDict).map(x => x.E);
      }\r\n"
    sig: function getGlobalColors(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getOrdinal:
    name: getOrdinal
    code: "function getOrdinal(i) { return G.numRepeat == 1 ? '' : G.language == 'E'
      ? ordinal_suffix_of(i) : '' + i + '. '; }\r\n"
    sig: function getOrdinal(i){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getColorLabelInstruction:
    name: getColorLabelInstruction
    code: "function getColorLabelInstruction(cmd, color, label) {\r

      \  if (nundef(color)) color = Goal.color;\r

      \  let colorWord = color[G.language];\r

      \  let colorSpan = `<span
      style='color:${color.c}'>${colorWord.toUpperCase()}</span>`;\r

      \  if (nundef(label)) label = Goal.label;\r

      \  let labelSpan = `<b>${label.toUpperCase()}</b>`;\r

      \  let eCommand, dCommand;\r

      \  switch (cmd) {\r

      \    case 'click': eCommand = cmd + ' the'; dCommand = cmd; break\r

      \    case 'then': eCommand = cmd + ' the'; dCommand = 'dann';
      break\r

      \  }\r

      \  let eInstr = `${eCommand} ${colorWord} ${label}`;\r

      \  let dInstr = `${dCommand} ${label} in ${colorWord}`;\r

      \  let spoken = G.language == 'E' ? eInstr : dInstr;\r

      \  let written = spoken.replace(colorWord, colorSpan).replace(label,
      labelSpan);\r

      \  console.log('spoken', spoken, 'written', written);\r

      \  return [written, spoken];\r

      }\r\n"
    sig: function getColorLabelInstruction(cmd, color, label){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  getOrdinalColorLabelInstruction:
    name: getOrdinalColorLabelInstruction
    code: "function getOrdinalColorLabelInstruction(cmd, ordinal, color, label) {\r

      \  if (nundef(ordinal)) ordinal = getOrdinal(Goal.iRepeat);\r

      \  if (nundef(color)) color = Goal.color;\r

      \  let colorWord = '', colorSpan = '';\r

      \  if (isdef(color)) {\r

      \    colorWord = nundef(color) ? '' : nundef(color[G.language]) ?
      color.E : color[G.language];\r

      \    if (G.language == 'D' && !isEmpty(ordinal) && !['lila',
      'rosa'].includes(colorWord)) colorWord += 'e';\r

      \    colorSpan = `<span
      style='color:${color.c}'>${colorWord.toUpperCase()}</span>`;\r

      \  }\r

      \  if (nundef(label)) label = Goal.label;\r

      \  let labelSpan = `<b>${label.toUpperCase()}</b>`;\r

      \  let eCommand, dCommand;\r

      \  switch (cmd) {\r

      \    case 'click': eCommand = cmd + ' the'; dCommand = cmd; break\r

      \    case 'then': eCommand = cmd + ' the'; dCommand = 'dann';
      break\r

      \  }\r

      \  let eInstr = `${eCommand} ${ordinal} ${colorWord} ${label}`;\r

      \  let dInstr = ordinal == '' ? `${dCommand} ${label} ${colorWord ==
      '' ? '' : 'in ' + colorWord}`\r

      \    : `${dCommand} ${ordinal} ${colorWord} ${label}`;\r

      \  let ecorr = `${ordinal} ${colorWord} ${label}`\r

      \  let dcorr = ordinal == '' ? `${label} ${colorWord == '' ? '' :
      'in ' + colorWord}`\r

      \    : `${ordinal} ${colorWord} ${label}`;\r

      \  let corr = G.language == 'E' ? ecorr : dcorr;\r

      \  let spoken = G.language == 'E' ? eInstr : dInstr;\r

      \  let written = spoken.replace(colorWord, colorSpan).replace(label,
      labelSpan);\r

      \  return [written, spoken, corr];\r

      }\r\n"
    sig: function getOrdinalColorLabelInstruction(cmd, ordinal, color, label){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  justClick:
    name: justClick
    code: "function justClick(ev) { console.log('click', ev.target, 'item',
      evToItemC(ev)); }\r\n"
    sig: function justClick(ev){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  makeSurePlayerColorsAreContrasting:
    name: makeSurePlayerColorsAreContrasting
    code: "function makeSurePlayerColorsAreContrasting(human, ai) {\r

      \  ai.color = RED;\r

      }\r\n"
    sig: function makeSurePlayerColorsAreContrasting(human, ai){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  removePicture:
    name: removePicture
    code: "function removePicture(pic, reorder = false) {\r

      \  removeInPlace(Pictures, pic);\r

      \  if (reorder) {\r

      \    iDiv(pic).remove();\r

      \    maLayout(Pictures, dTable);\r

      \  } else {\r

      \    iDiv(pic).style.opacity = 0;\r

      \  }\r

      }\r\n"
    sig: function removePicture(pic, reorder = false){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  resetRound:
    name: resetRound
    code: "function resetRound() {\r

      \  clearTimeouts();\r

      \  clearFleetingMessage();\r

      \  clearTable();\r

      }\r\n"
    sig: function resetRound(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  resetScore:
    name: resetScore
    code: "function resetScore() {\r

      \  Score = { gameChange: true, levelChange: true, nTotal: 0,
      nCorrect: 0, nCorrect1: 0, nPos: 0, nNeg: 0, labels: true };\r

      }\r\n"
    sig: function resetScore(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  resetState:
    name: resetState
    code: "function resetState() {\r

      \  clearTimeouts();\r

      \  pauseSound();\r

      \  removeKeyHandler('G'); \r

      \  lastPosition = 0;\r

      \  DELAY = 1000;\r

      \  setBackgroundColor();\r

      }\r\n"
    sig: function resetState(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  say:
    name: say
    code: "function say(text, lang, callback, volume, rate, pitch) {\r

      \  function sayit(text, lang, callback, volume, rate, pitch) {\r

      \    var text = valf(text, 'Hello, world!');\r

      \    var msg = new SpeechSynthesisUtterance();\r

      \    var voices = DA.voicelist;\r

      \    let voice = voices.filter(x => x.lang.includes(lang));\r

      \    if (isEmpty(voice)) voice = voices.filter(x =>
      x.name.toLowerCase().includes(lang));\r

      \    msg.voice = valf(rChoose(voice), rChoose(voices));\r

      \    if (isdef(volume)) msg.volume = volume;\r

      \    if (isdef(rate)) msg.rate = rate;\r

      \    if (isdef(pitch)) msg.pitch = pitch;\r

      \    msg.text = text;\r

      \    msg.onend = e => {\r

      \      if (callback) callback(); else console.log('ENDE',
      e.utterance, 'Finished in ' + e.elapsedTime + ' seconds.');\r

      \    };\r

      \    speechSynthesis.speak(msg);\r

      \  }\r

      \  if (!('speechSynthesis' in window)) { alert('speech not
      supported!!! connect to internet?'); return; }\r

      \  if (nundef(DA.voicelist)) {\r

      \    speechSynthesis.onvoiceschanged = function () {\r

      \      DA.voicelist = speechSynthesis.getVoices();\r

      \      sayit(text, lang, callback, volume, rate, pitch);\r

      \    }\r

      \  } else sayit(text, lang, callback, volume, rate, pitch);\r

      }\r\n"
    sig: function say(text, lang, callback, volume, rate, pitch){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sayTryAgain:
    name: sayTryAgain
    code: "function sayTryAgain() { \r

      \  if (G.silent) showFleetingMessage('Try Again!',0,{},true); \r

      \  else sayRandomVoice('try again!'); \r

      }\r\n"
    sig: function sayTryAgain(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  setBackgroundColor:
    name: setBackgroundColor
    code: "function setBackgroundColor(elem,color) { if (nundef(elem)) elem =
      mBy('md').parentNode; mStyle(elem, { bg: getColorDictColor(isdef(color) ?
      color : G.color) }); }\r\n"
    sig: function setBackgroundColor(elem,color){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  setGoal:
    name: setGoal
    code: "function setGoal(index) {\r

      \  if (nundef(index)) {\r

      \    let rnd = G.numPics < 2 ? 0 : randomNumber(0, G.numPics - 2);\r

      \    if (G.numPics >= 2 && rnd == lastPosition && coin(70)) rnd =
      G.numPics - 1;\r

      \    index = rnd;\r

      \  }\r

      \  lastPosition = index;\r

      \  Goal = Pictures[index];\r

      }\r\n"
    sig: function setGoal(index){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  setMultiGoal:
    name: setMultiGoal
    code: "function setMultiGoal(n, indices) {\r

      \  Goal = { pics: [] };\r

      \  if (nundef(indices)) {\r

      \    Goal.pics = choose(Pictures, n);\r

      \  } else {\r

      \    for (const i of indices) Goal.pics.push(Pictures[i]);\r

      \  }\r

      }\r\n"
    sig: function setMultiGoal(n, indices){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  setPlayer:
    name: setPlayer
    code: "function setPlayer(g, pl) {\r

      \  let idx;\r

      \  if (isdef(g.iPlayer)) {\r

      \    idx = (g.iPlayer + 1) % g.players.length;\r

      \  } else if (isdef(pl)) {\r

      \    idx = g.players.indexOf(pl);\r

      \  } else idx = 0;\r

      \  pl = g.players[idx];\r

      \  [GC.iPlayer, GC.plTurn] = [g.iPlayer, g.plTurn] = [idx, pl];\r

      }\r\n"
    sig: function setPlayer(g, pl){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showHiddenThumbsUpDown:
    name: showHiddenThumbsUpDown
    code: "function showHiddenThumbsUpDown(sz = 100) {\r

      \  let d = mDiv(dTable, { hmin: sz * 1.5 });\r

      \  mCenterFlex(d);\r

      \  let keys = ['thumbs up', 'thumbs down'];\r

      \  let options = getOptionsMinimalistic(d, null, 300, 100, { bg:
      'transparent', display: 'inline' }, {}, G);\r

      \  let items = Pictures = genItemsFromKeys(keys, options);\r

      \  for (const item of items) {\r

      \    let d1 = makeItemDiv(item, options);\r

      \    mAppend(d, d1);\r

      \    mStyle(d1.firstChild, { fz: sz, mabottom: 12 });\r

      \    mStyle(d1, { opacity: 0 });\r

      \  }\r

      }\r\n"
    sig: function showHiddenThumbsUpDown(sz = 100){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  show_instruction:
    name: show_instruction
    code: "function show_instruction(msg) { mBy('dSelections0').innerHTML = msg;
      }\r\n"
    sig: function show_instruction(msg){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  showLevel:
    name: showLevel
    code: "function showLevel() {\r

      \  dLevel.innerHTML = 'level: ' + (G.level + 1) + '/' + (G.maxLevel
      + 1);\r

      }\r\n"
    sig: function showLevel(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showGameTitle:
    name: showGameTitle
    code: "function showGameTitle() { dGameTitle.innerHTML = G.friendly; }\r\n"
    sig: function showGameTitle(){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showPictureHints:
    name: showPictureHints
    code: "function showPictureHints(items, dParentProp) {\r

      \  for (const item of items) {\r

      \    let d1 = item[dParentProp];\r

      \    mRemoveChildrenFromIndex(d1, 1);\r

      \    let dHint = item.dHint = miPic(item, d1);\r

      \  }\r

      }\r\n"
    sig: function showPictureHints(items, dParentProp){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showLabelPercentHintAfter:
    name: showLabelPercentHintAfter
    code: "function showLabelPercentHintAfter(percent, msecs) {\r

      \  let len = Goal.label.length;\r

      \  let sublen = Math.floor(len * percent / 100); let restlen = len -
      sublen;\r

      \  let hintWord = Goal.label.substring(0, sublen);\r

      \  for (let i = 0; i < restlen; i++) hintWord += ' _';\r

      \  hintWord = hintWord.toUpperCase();\r

      \  showFleetingMessage(hintWord, msecs, { fz: 32 });\r

      }\r\n"
    sig: function showLabelPercentHintAfter(percent, msecs){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showListOfLists:
    name: showListOfLists
    code: "function showListOfLists(arr) { let s = ''; arr.map(x => { s += '[' +
      x.toString() + '] ' }); return s; }\r\n"
    sig: function showListOfLists(arr){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showTextHints:
    name: showTextHints
    code: "function showTextHints(items, dParentProp, textProp, removeFirst = true)
      {\r

      \  for (const item of items) {\r

      \    let d1 = item[dParentProp];\r

      \    let hint = item[textProp];\r

      \    let dHint = item.dHint = mText(hint, d1);\r

      \  }\r

      }\r\n"
    sig: function showTextHints(items, dParentProp, textProp, removeFirst = true){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showScore_dep:
    name: showScore_dep
    code: "function showScore_dep(showScoreString = true) {\r

      \  if (G.controllerType == 'solitaire') {\r

      \    if (Score.gameChange) showBadgesX(dLeiste, G.level,
      onClickBadgeX, G.maxlevel);\r

      \    if (showScoreString) scoreString = 'question: ' + (Score.nTotal
      + 1) + '/' + G.samplesPerGame;\r

      \    if (Score.levelChange) {\r

      \      if (showScoreString) dScore.innerHTML = scoreString;\r

      \      setBadgeLevel(G.level);\r

      \    } else {\r

      \      setTimeout(() => {\r

      \        if (showScoreString) dScore.innerHTML = scoreString;\r

      \        setBadgeLevel(G.level);\r

      \      }, 300);\r

      \    }\r

      \  } else {\r

      \    setTimeout(() => { if (showScoreString) dScore.innerHTML =
      'score ' + GC.human.score + ':' + GC.ai.score; }, 300);\r

      \  }\r

      }\r\n"
    sig: function showScore_dep(showScoreString = true){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\game.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691775.8572
    size: 73671
  showScore:
    name: showScore
    code: "function showScore(showScoreString=true) {\r

      \  if (G.controllerType == 'solitaire') {\r

      \    if (Score.gameChange) showBadgesX(dLeiste, G.level,
      onClickBadgeX, G.maxLevel);\r

      \    if (showScoreString) scoreString = 'question: ' + (Score.nTotal
      + 1) + '/' + G.samplesPerGame;\r

      \    if (Score.levelChange) {\r

      \      if (showScoreString) dScore.innerHTML = scoreString;\r

      \      setBadgeLevel(G.level);\r

      \    } else {\r

      \      setTimeout(() => {\r

      \        if (showScoreString) dScore.innerHTML = scoreString;\r

      \        setBadgeLevel(G.level);\r

      \      }, 300);\r

      \    }\r

      \  } else {\r

      \    setTimeout(() => { if (showScoreString) dScore.innerHTML =
      'score ' + GC.human.score + ':' + GC.ai.score; }, 300);\r

      \  }\r

      }\r\n"
    sig: function showScore(showScoreString=true){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showStats:
    name: showStats
    code: "function showStats(showScoreString=true) {\r

      \  if (nundef(Score)) initScore();\r

      \  showGameTitle();\r

      \  showLevel();\r

      \  showScore(showScoreString);\r

      \  Score.levelChange = false;\r

      \  Score.gameChange = false;\r

      }\r\n"
    sig: function showStats(showScoreString=true){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  AIMinimax:
    name: AIMinimax
    code: "function AIMinimax(g, callback) {\r

      \  let state = g.getState();\r

      \  state = boardToNode(state);\r

      \  F_END = g.evalState;\r

      \  F_HEURISTIC = g.heuristic;\r

      \  F_MOVES = g.getAvailableMoves;\r

      \  F_APPLYMOVE = g.applyMove;\r

      \  F_UNDOMOVE = g.undoMove;\r

      \  MAXIMIZER = g.plTurn;\r

      \  MINIMIZER = g.plOpp;\r

      \  SelectedMove = null;\r

      \  let algorithm = g.copyState==true ? minimaxCopy : myMinimax;\r

      \  let val = algorithm(state, 0, -Infinity, Infinity, g.searchDepth,
      true);\r

      \  CCC = 0;\r

      \  callback(SelectedMove);\r

      }\r\n"
    sig: function AIMinimax(g, callback){}
    region: ai (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  myMinimax:
    name: myMinimax
    code: "function myMinimax(node, depth, alpha, beta, maxDepth, maxim) {\r

      \  CCC += 1;\r

      \  if (depth >= maxDepth) return 1;\r

      \  let ec = F_END(node, depth); if (ec.reached) return ec.val;\r

      \  depth += 1;\r

      \  var move, result;\r

      \  var availableMoves = F_MOVES(node);\r

      \  let player = maxim ? MAXIMIZER : MINIMIZER;\r

      \  for (var i = 0; i < availableMoves.length; i++) {\r

      \    move = availableMoves[i];\r

      \    F_APPLYMOVE(node, move, player);\r

      \    result = myMinimax(node, depth, alpha, beta, maxDepth,
      !maxim);\r

      \    F_UNDOMOVE(node, move, player);\r

      \    if (maxim) {\r

      \      if (result > alpha) {\r

      \        alpha = result;\r

      \        if (depth == 1) SelectedMove = move;\r

      \      } else if (alpha >= beta) { return alpha; }\r

      \    } else {\r

      \      if (result < beta) {\r

      \        beta = result;\r

      \        if (depth == 1) SelectedMove = move;\r

      \      } else if (beta <= alpha) { return beta; }\r

      \    }\r

      \  }\r

      \  return maxim ? alpha : beta;\r

      }\r\n"
    sig: function myMinimax(node, depth, alpha, beta, maxDepth, maxim){}
    region: ai (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  minimaxCopy:
    name: minimaxCopy
    code: "function minimaxCopy(node, depth, alpha, beta, maxDepth, maxim) {\r

      \  CCC += 1;\r

      \  if (depth >= maxDepth) return
      F_HEURISTIC(node,MAXIMIZER,MINIMIZER);\r

      \  let ec = F_END(node, depth); if (ec.reached) return ec.val;\r

      \  depth += 1;\r

      \  var move, result;\r

      \  var availableMoves = F_MOVES(node);\r

      \  let player = maxim ? MAXIMIZER : MINIMIZER;\r

      \  let nodeSafe = jsCopy(node);\r

      \  for (var i = 0; i < availableMoves.length; i++) {\r

      \    move = availableMoves[i];\r

      \    let node1 = jsCopy(node);\r

      \    console.assert(sameList(nodeSafe,node),'HA!');\r

      \    F_APPLYMOVE(node1, move, player);\r

      \    result = minimaxCopy(node1, depth, alpha, beta, maxDepth,
      !maxim);\r

      \    if (maxim) {\r

      \      if (result > alpha) {\r

      \        alpha = result;\r

      \        if (depth == 1) SelectedMove = move;\r

      \      } else if (alpha >= beta) { return alpha; }\r

      \    } else {\r

      \      if (result < beta) {\r

      \        beta = result;\r

      \        if (depth == 1) SelectedMove = move;\r

      \      } else if (beta <= alpha) { return beta; }\r

      \    }\r

      \  }\r

      \  return maxim ? alpha : beta;\r

      }\r\n"
    sig: function minimaxCopy(node, depth, alpha, beta, maxDepth, maxim){}
    region: ai (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  setGame_dep:
    name: setGame_dep
    code: "function setGame_dep(game, immediate = false) {\r

      \  cleanupOldGame();\r

      \  resetUIDs();\r

      \  if (isdef(G) && G.id != game) Score.gameChange = true;\r

      \  G = new (classByName(capitalize(game)))(game, DB.games[game]);\r

      \  Settings = new SettingsClass(G, dAux); \r

      \  if (nundef(U.games[game])) {\r

      \    if (G.controllerType == 'solitaire') { U.games[game] = {
      nTotal: 0, nCorrect: 0, nCorrect1: 0, startlevel: 0 }; }\r

      \    else U.games[game] = {};\r

      \  }\r

      \  if (isdef(G.maxlevel)) G.level =
      Math.min(getUserStartLevel(game), G.maxlevel);\r

      \  Settings.updateGameValues(U, G); \r

      \  save_users(); \r

      \  let s = valf(G.av_modes,'training');\r

      \  let modes = s.split(',');\r

      \  if (!modes.includes(Session.def_playmode)) Session.def_playmode =
      modes[0];\r

      \  G.playmode = Session.def_playmode;\r

      \  if (nundef(G.controller_class)) G.controller_class =
      `Controller${capitalize(G.playmode)}`;\r

      \  GC = new (classByName(G.controller_class))(G,U);  \r

      \  G.controller = GC;\r

      \  showGameTitle();\r

      \  if (immediate) GC.startGame();\r

      }\r\n"
    sig: function setGame_dep(game, immediate = false){}
    region: all (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  fixedSizeGrid:
    name: fixedSizeGrid
    code: "function fixedSizeGrid(m, d) {\r

      \  let rows = m.length;\r

      \  let cols = m[0].length;\r

      \  d.style.gridTemplateColumns = 'repeat(' + cols + ',1fr)'; //
      gtc.join(' '); //'min-content 1fr 1fr min-content';//
      'min-content'.repeat(rows);\r

      \  d.style.gridTemplateRows = 'repeat(' + rows + ',1fr)'; //
      //'min-content 1fr 1fr min-content';// 'min-content'.repeat(rows);\r

      }\r\n"
    sig: function fixedSizeGrid(m, d){}
    region: helpers (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  collapseSmallLetterAreas:
    name: collapseSmallLetterAreas
    code: "function collapseSmallLetterAreas(m, d) {\r

      \  let rows = m.length;\r

      \  let cols = m[0].length;\r

      \  let gtc = [];\r

      \  for (let c = 0; c < cols; c++) {\r

      \    gtc[c] = 'min-content';\r

      \    for (let r = 0; r < rows; r++) {\r

      \      let sArea = m[r][c];\r

      \      if (sArea[0] == sArea[0].toUpperCase()) gtc[c] = 'auto';\r

      \    }\r

      \  }\r

      \  let cres = gtc.join(' ');\r

      \  d.style.gridTemplateColumns = gtc.join(' '); //'min-content 1fr
      1fr min-content';// 'min-content'.repeat(rows);\r

      \  let gtr = [];\r

      \  for (let r = 0; r < rows; r++) {\r

      \    gtr[r] = 'min-content';\r

      \    for (let c = 0; c < cols; c++) {\r

      \      let sArea = m[r][c];\r

      \      if (sArea[0] == sArea[0].toUpperCase()) gtr[r] = 'auto';\r

      \    }\r

      \  }\r

      \  let rres = gtr.join(' ');\r

      \  d.style.gridTemplateRows = gtr.join(' '); //'min-content 1fr 1fr
      min-content';// 'min-content'.repeat(rows);\r

      }\r\n"
    sig: function collapseSmallLetterAreas(m, d){}
    region: helpers (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  createGridLayout:
    name: createGridLayout
    code: "function createGridLayout(d, layout, collapseEmptySmallLetterAreas=false)
      {\r

      \  let s = '';\r

      \  let m = [];\r

      \  let maxNum = 0;\r

      \  let areaNames = [];\r

      \  for (const line of layout) {\r

      \    let letters = line.split(' ');\r

      \    let arr = [];\r

      \    for (const l of letters) {\r

      \      if (!isEmpty(l)) {\r

      \        addIf(areaNames, l);\r

      \        arr.push(l);\r

      \      }\r

      \    }\r

      \    m.push(arr);\r

      \    if (arr.length > maxNum) maxNum = arr.length;\r

      \  }\r

      \  for (const line of m) {\r

      \    let el = line[line.length - 1];\r

      \    while (line.length < maxNum) line.push(el);\r

      \    s += '\"' + line.join(' ') + '\" ';\r

      \  }\r

      \  d.style.gridTemplateAreas = s;\r

      \  if (collapseEmptySmallLetterAreas) { collapseSmallLetterAreas(m,
      d); }\r

      \  else fixedSizeGrid(m, d);\r

      \  return areaNames;\r

      }\r\n"
    sig: function createGridLayout(d, layout, collapseEmptySmallLetterAreas=false){}
    region: helpers (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  createAreas:
    name: createAreas
    code: "function createAreas(dGrid, areaNames, prefix,
      shadeAreaBackgrounds=false, showAreaNames=true) {\r

      \  console.log('creating areas',areaNames)\r

      \  let SPEC={};SPEC.areas = { T: 'dTrick', H: 'dHuman', A: 'dAI'
      };\r

      \  let palette = getTransPalette9(); \r

      \  let ipal = 1;\r

      \  let result = [];\r

      \  for (const k in SPEC.areas) {\r

      \    let areaName = SPEC.areas[k];\r

      \    let dCell = mDiv(dGrid, { h:'100%', w:'100%', bg: 'random',
      'grid-area': k, });\r

      \    if (shadeAreaBackgrounds) { dCell.style.backgroundColor =
      palette[ipal]; ipal = (ipal + 1) % palette.length; }\r

      \    if (showAreaNames) { \r

      \      dCell=mTitledDiv(areaName,dCell,{bg: 'green',},{h:'100%',
      w:'100%', bg: 'yellow',},areaName)\r

      \    }else {dCell.id=areaName;}\r

      \    result.push({ name: areaName, div: dCell });\r

      \  }\r

      \  return result;\r

      \  for (const areaName of areaNames) {\r

      \    let d1 = document.createElement('div');\r

      \    let id = (isdef(prefix)?prefix + '.':'') + areaName;\r

      \    d1.id = id;\r

      \    d1.style.gridArea = areaName;\r

      \    mStyle(d1,{bg:'random'});\r

      \    d1.innerHTML='hallo'\r

      \    if (shadeAreaBackgrounds) { d1.style.backgroundColor =
      colorPalette[ipal]; ipal = (ipal + 1) % colorPalette.length; }\r

      \    if (showAreaNames) { d1.innerHTML =
      makeAreaNameDomel(areaName); }\r

      \    dGrid.appendChild(d1);\r

      \  }\r

      }\r\n"
    sig: function createAreas(dGrid, areaNames, prefix, shadeAreaBackgrounds=false,
      showAreaNames=true){}
    region: helpers (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  convertToGraphElements:
    name: convertToGraphElements
    code: "function convertToGraphElements(g1,house) {\r

      \  let vertices = house.rooms.map(x => Items[x]);\r

      \  let doors = [];\r

      \  for (const v of vertices) {\r

      \    v.center = getCenter(v.rect);\r

      \    v.center.x+=v.rect.l-house.rect.l;\r

      \    v.center.y+=v.rect.t-house.rect.t;\r

      \    g1.addNode(v,v.center);\r

      \    doors = union(doors, v.doors);\r

      \  }\r

      \  let centers = g1.getNodes().map(x=>x.data('center'));\r

      \  g1.storePositions('prest',centers);\r

      \  let edges = doors.map(x => Items[x]).filter(x => x.rooms.length
      == 2);\r

      \  for (const e of edges) {\r

      \    if (e.rooms.length < 2) continue;\r

      \    e.source = e.rooms[0];\r

      \    e.target = e.rooms[1];\r

      \    g1.addEdge(e.source,e.target,e);\r

      \  }\r

      }\r\n"
    sig: function convertToGraphElements(g1,house){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  makeNewLayout:
    name: makeNewLayout
    code: "function makeNewLayout(g1) {\r

      \  let nodes = g1.getNodes();\r

      \  let x = 10; let y = 10;\r

      \  for (n of nodes) {\r

      \    n.position({ x: x, y: y });\r

      \    x += 50; y += 50; if (y > 250) { y = 10; } if (x > 550) { x =
      10; }\r

      \  }\r

      }\r\n"
    sig: function makeNewLayout(g1){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  setPositionData:
    name: setPositionData
    code: "function setPositionData(g1) {\r

      \  let ids = g1.getNodeIds();\r

      \  for (const id of ids) {\r

      \    let pos = g1.getProp(id, 'center');\r

      \    g1.setPosition(id, pos.x, pos.y);\r

      \  }\r

      \  g1.reset();\r

      }\r\n"
    sig: function setPositionData(g1){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  storePositionData:
    name: storePositionData
    code: "function storePositionData(g1) {\r

      \  let ids = g1.getNodeIds();\r

      \  let x = 10; let y = 10;\r

      \  for (const id of ids) {\r

      \    g1.setProp(id, 'center', { x: x, y: y });\r

      \    x += 50; y += 50; if (y > 250) { y = 10; } if (x > 550) { x =
      10; }\r

      \  }\r

      }\r\n"
    sig: function storePositionData(g1){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  storeRoomPositions:
    name: storeRoomPositions
    code: "function storeRoomPositions(g1, house) {\r

      \  let ids = g1.getNodeIds();\r

      \  let di = g1.posDict = {};\r

      \  for (const id of ids) {\r

      \    let r = Items[id];\r

      \    let center = getCenter(iDiv(r));\r

      \    center.x += r.rect.x;\r

      \    center.y += r.rect.y;\r

      \    g1.setProp(id, 'center', center);\r

      \    di[id] = center;\r

      \  }\r

      }\r\n"
    sig: function storeRoomPositions(g1, house){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  convertToGraphElements_dep:
    name: convertToGraphElements_dep
    code: "function convertToGraphElements_dep(g1,house) {\r

      \  let elements = { nodes: [], edges: [] };\r

      \  let vertices = house.rooms.map(x => Items[x]);\r

      \  let doors = [];\r

      \  for (const v of vertices) {\r

      \    v.center = getCenter(v.rect);\r

      \    elements.nodes.push({ data: v, position: v.center });\r

      \    doors = union(doors, v.doors);\r

      \  }\r

      \  let edges = doors.map(x => Items[x]).filter(x => x.rooms.length
      == 2);\r

      \  for (const e of edges) {\r

      \    if (e.rooms.length < 2) continue;\r

      \    e.source = e.rooms[0];\r

      \    e.target = e.rooms[1];\r

      \    elements.edges.push({ data: e });\r

      \  }\r

      \  return elements;\r

      }\r\n"
    sig: function convertToGraphElements_dep(g1,house){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  iDoor:
    name: iDoor
    code: "function iDoor(r1, dir, r2, styles = {}) {\r

      \  r1 = isString(r1) ? Items[r1] : r1;\r

      \  let house = Items[r1.house];\r

      \  r2 = isdef(r2) ? isString(r2) ? Items[r2] : r2 : null;\r

      \  let wall = r2 ? findWall(r1, r2) : isdef(dir) ? findFreeWall(r1,
      r1.walls[dir]) : findFreeWall(r1);\r

      \  if (wall.door) { errlog('there is already a door between', r1.id,
      'and', r2); return; }\r

      \  let szDoor = valf(styles.szDoor, house.szDoor);\r

      \  let bg = valf(styles.bg, house.bg);\r

      \  let dParent = iDiv(house);\r

      \  let wr = wall.rect;\r

      \  if (nundef(r2) && wall.room) { r2 = Items[wall.room]; } \r

      \  let dr = jsCopy(wr);\r

      \  let or = wall.dir == 'e' || wall.dir == 'w' ? 'v' : 'h';\r

      \  if (or == 'v') {\r

      \    let len = wr.h;\r

      \    let offy = (len - szDoor) / 2;\r

      \    dr.y = dr.t = dr.t + offy;\r

      \    dr.h = szDoor;\r

      \  } else {\r

      \    let len = wr.w;\r

      \    let offx = (len - szDoor) / 2;\r

      \    dr.x = dr.l = dr.l + offx;\r

      \    dr.w = szDoor;\r

      \  }\r

      \  let id = getDoorId(r1.id, r2 ? r2.id : house.id);\r

      \  let door = { rooms: [r1.id], rect: dr, id: id, or: or }; \r

      \  if (r2) { r2.doors.push(id); door.rooms.push(r2.id); } else {
      house.doors.push(id); }\r

      \  r1.doors.push(id);\r

      \  let stylesPlus = { position: 'absolute', left: dr.x, top: dr.y,
      w: dr.w, h: dr.h, bg: bg };\r

      \  copyKeys(stylesPlus, styles);\r

      \  d = mDiv(dParent, styles);\r

      \  iAdd(door, { div: d });\r

      \  return door;\r

      }\r\n"
    sig: function iDoor(r1, dir, r2, styles = {}){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  iLabyrint:
    name: iLabyrint
    code: "function iLabyrint(dParent, cols,rows, styles = { w: 800, h: 400 }) {\r

      \  let d = mDiv(dParent, { display: 'inline-grid', position:
      'relative', box: true });\r

      \  ns = isNumber(ns) ? d.style.gridTemplateAreas =
      getLayoutSample(ns) : ns; //'\"z z d\" \"a a c\" \"a a c\"';//
      getLayoutSample(3);\r

      \  let s = d.style.gridTemplateAreas = ns;\r

      \  let letterList = filterDistinctLetters(s);\r

      \  let wallWidth = valf(styles.gap, 4);\r

      \  let lines = s.split('\"').filter(x => !isWhiteSpaceString(x));\r

      \  let wHouse = Math.round(styles.w / cols) * cols + wallWidth *
      cols + 1;\r

      \  let hHouse = Math.round(styles.h / rows) * rows + wallWidth *
      rows + 1;\r

      \  d.style.gridTemplateRows = `repeat(${rows}, 1fr)`;\r

      \  d.style.gridTemplateColumns = `repeat(${cols}, 1fr)`;\r

      \  let szDoor = valf(styles.szDoor, 40);\r

      \  let [wallColor, floorColor] = [valf(styles.fg, 'white'),
      valf(styles.bg, BLUE)];\r

      \  mStyle(d, { bg: wallColor, w: wHouse, h: hHouse, gap: wallWidth,
      padding: wallWidth });\r

      \  let rooms = [];\r

      \  for (const ch of letterList) { \r

      \    let r = iRoom(d, ch, { bg: floorColor });\r

      \    rooms.push(r);\r

      \  }\r

      \  let house = { rect: getRect(d), fg: wallColor, bg: floorColor,
      doors: [], rooms: rooms.map(x => x.id), roomLetters: letterList, szDoor:
      szDoor, wallWidth: wallWidth };\r

      \  house.roomsByLetter = {};\r

      \  rooms.map(x => house.roomsByLetter[x.ch] = x.id);\r

      \  iAdd(house, { div: d });\r

      \  rooms.map(x => x.house = house.id);\r

      \  roomAdjacency(house);\r

      \  return house;\r

      }\r\n"
    sig: "function iLabyrint(dParent, cols,rows, styles = { w: 800, h: 400 }){}"
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  iHouse:
    name: iHouse
    code: "function iHouse(dParent, ns = 1, styles = { w: 500, h: 400 }) {\r

      \  let d = mDiv(dParent, { display: 'inline-grid', position:
      'relative', box: true });\r

      \  ns = isNumber(ns) ? d.style.gridTemplateAreas =
      getLayoutSample(ns) : ns; //'\"z z d\" \"a a c\" \"a a c\"';//
      getLayoutSample(3);\r

      \  let s = d.style.gridTemplateAreas = ns;\r

      \  let letterList = filterDistinctLetters(s);\r

      \  let wallWidth = valf(styles.gap, 4);\r

      \  let lines = s.split('\"').filter(x => !isWhiteSpaceString(x));\r

      \  let cols = lines[0].split(' ').length;\r

      \  let rows = lines.length;\r

      \  let wHouse = Math.round(styles.w / cols) * cols + wallWidth *
      cols + 1;\r

      \  let hHouse = Math.round(styles.h / rows) * rows + wallWidth *
      rows + 1;\r

      \  d.style.gridTemplateRows = `repeat(${rows}, 1fr)`;\r

      \  d.style.gridTemplateColumns = `repeat(${cols}, 1fr)`;\r

      \  let szDoor = valf(styles.szDoor, 40);\r

      \  let [wallColor, floorColor] = [valf(styles.fg, 'white'),
      valf(styles.bg, BLUE)];\r

      \  mStyle(d, { bg: wallColor, w: wHouse, h: hHouse, gap: wallWidth,
      padding: wallWidth });\r

      \  let rooms = [];\r

      \  for (const ch of letterList) { \r

      \    let r = iRoom(d, ch, { bg: floorColor });\r

      \    rooms.push(r);\r

      \  }\r

      \  let house = { rect: getRect(d), fg: wallColor, bg: floorColor,
      doors: [], rooms: rooms.map(x => x.id), roomLetters: letterList, szDoor:
      szDoor, wallWidth: wallWidth };\r

      \  house.roomsByLetter = {};\r

      \  rooms.map(x => house.roomsByLetter[x.ch] = x.id);\r

      \  iAdd(house, { div: d });\r

      \  rooms.map(x => x.house = house.id);\r

      \  roomAdjacency(house);\r

      \  return house;\r

      }\r\n"
    sig: "function iHouse(dParent, ns = 1, styles = { w: 500, h: 400 }){}"
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  iRoom:
    name: iRoom
    code: "function iRoom(dParent, ch, styles) {\r

      \  let def = { 'grid-area': ch, position: 'relative' };\r

      \  copyKeys(def, styles);\r

      \  let dCell = mDiv(dParent, styles);\r

      \  let rect = getRect(dCell);\r

      \  let size = Math.round(rect.w * rect.h / 1000);\r

      \  let room = { id: ch, ch: ch, bg: dCell.style.backgroundColor,
      rect: rect, size: size };\r

      \  delete Items[ch];\r

      \  iAdd(room, { div: dCell });\r

      \  room.doors = [];\r

      \  room.furniture = [];\r

      \  room.hasDoor = () => !isEmpty(room.doors)\r

      \  room.hasPassThrough = () => room.doors.length >= 2;\r

      \  return room;\r

      }\r\n"
    sig: function iRoom(dParent, ch, styles){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  findWall:
    name: findWall
    code: "function findWall(r1, r2) {\r

      \  for (const dir in r1.walls) {\r

      \    let walls = r1.walls[dir];\r

      \    for (const wall of walls) {\r

      \      if (wall.r2 == r2.id) return wall;\r

      \    }\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function findWall(r1, r2){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  findFreeWall:
    name: findFreeWall
    code: "function findFreeWall(r1, walls) {\r

      \  r1 = isString(r1) ? Items[r1] : r1;\r

      \  if (nundef(walls)) {\r

      \    walls = [];\r

      \    for (const dir in r1.walls) {\r

      \      walls = walls.concat(r1.walls[dir]);\r

      \    }\r

      \  }\r

      \  walls = walls.filter(x => !x.door);\r

      \  return isEmpty(walls) ? null : chooseRandom(walls);\r

      }\r\n"
    sig: function findFreeWall(r1, walls){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  hideOuterDoors:
    name: hideOuterDoors
    code: "function hideOuterDoors(house) {\r

      \  for (const did of jsCopy(house.doors)) {\r

      \    let door = Items[did];\r

      \    hide(iDiv(door));\r

      \  }\r

      }\r\n"
    sig: function hideOuterDoors(house){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  removeOuterDoors:
    name: removeOuterDoors
    code: "function removeOuterDoors(house) {\r

      \  console.log(house.doors);\r

      \  for (const did of jsCopy(house.doors)) {\r

      \    console.log(did)\r

      \    let door = Items[did];\r

      \    iDiv(door).remove();\r

      \    console.log('door', door);\r

      \    for (const rid of door.rooms) { removeInPlace(Items[rid].doors,
      did); }\r

      \    removeInPlace(house.doors, did);\r

      \  }\r

      \  console.log(house.doors);\r

      }\r\n"
    sig: function removeOuterDoors(house){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  roomAdjacency:
    name: roomAdjacency
    code: "function roomAdjacency(house) {\r

      \  let rooms = house.rooms.map(x => Items[x]);\r

      \  for (let i = 0; i < rooms.length; i++) {\r

      \    for (let j = i + 1; j < rooms.length; j++) {\r

      \      let [r1, r2] = [rooms[i], rooms[j]];\r

      \      let [e1, e2] = [r1.rect, r2.rect];\r

      \      let rhoeher = e1.t < e2.t ? r1 : r2;\r

      \      let rleft = e1.x < e2.x ? r1 : r2;\r

      \      let rniedriger = (rhoeher == r1 ? r2 : r1);\r

      \      let rright = (rleft == r1 ? r2 : r1);\r

      \      let diff = 2 * house.wallWidth; \r

      \      let y1 = Math.max(e1.t, e2.t);\r

      \      let y2 = Math.min(e1.b, e2.b);\r

      \      let dCommony = y2 - y1;\r

      \      if (dCommony > diff && isCloseTo(rright.rect.l,
      rleft.rect.r)) {\r

      \        let dr = {\r

      \          x: rleft.rect.r - house.rect.l,\r

      \          y: rniedriger.rect.t - house.rect.t, \r

      \          w: rright.rect.l - rleft.rect.r, \r

      \          h: dCommony, \r

      \        };\r

      \        extendRect(dr);\r

      \        addAdjacencyFromTo(rleft, rright, 'e', dr);\r

      \      }\r

      \      let x1 = Math.max(e1.l, e2.l);\r

      \      let x2 = Math.min(e1.r, e2.r);\r

      \      let dCommonx = x2 - x1;\r

      \      if (dCommonx > diff && isCloseTo(rniedriger.rect.t,
      rhoeher.rect.b)) {\r

      \        let dr = {\r

      \          x: rright.rect.l - house.rect.l, \r

      \          y: rhoeher.rect.b - house.rect.t,\r

      \          w: dCommonx, \r

      \          h: house.wallWidth\r

      \        };\r

      \        extendRect(dr);\r

      \        addAdjacencyFromTo(rhoeher, rniedriger, 's', dr);\r

      \      }\r

      \    }\r

      \  }\r

      \  for (let i = 0; i < rooms.length; i++) {\r

      \    let r = rooms[i];\r

      \    if (isCloseTo(r.rect.l, house.rect.l)) {\r

      \      let wallRect = { x: house.rect.l, y: r.rect.t, w:
      house.wallWidth, h: r.rect.h };\r

      \      extendRect(wallRect);\r

      \      addAdjacencyFromTo(r, null, 'w', wallRect);\r

      \    }\r

      \    if (isCloseTo(r.rect.r, house.rect.r)) {\r

      \      let wallRect = { x: r.rect.r, y: r.rect.t, w:
      house.wallWidth, h: r.rect.h };\r

      \      extendRect(wallRect);\r

      \      addAdjacencyFromTo(r, null, 'e', wallRect);\r

      \    }\r

      \    if (isCloseTo(r.rect.t, house.rect.t)) {\r

      \      let wallRect = { x: r.rect.l, y: house.rect.t, w: r.rect.w,
      h: house.wallWidth };\r

      \      extendRect(wallRect);\r

      \      addAdjacencyFromTo(r, null, 'n', wallRect);\r

      \    }\r

      \    if (isCloseTo(r.rect.b, house.rect.b)) {\r

      \      let wallRect = { x: r.rect.l, y: r.rect.b, w: r.rect.w, h:
      house.wallWidth };\r

      \      extendRect(wallRect);\r

      \      addAdjacencyFromTo(r, null, 's', wallRect);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function roomAdjacency(house){}
    region: funcs (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  addAdjacencyFromTo:
    name: addAdjacencyFromTo
    code: "function addAdjacencyFromTo(r1, r2, dir, rect) {\r

      \  let house = Items[r1.house];\r

      \  if (!r2) rect = rrto(rect, house.rect);\r

      \  lookupAddToList(r1, ['walls', dir], { rect: rect, dir: dir, room:
      r2 ? r2.id : r2, door: null });\r

      \  let dir2 = r2 ? getOppDir(dir) : dir;\r

      \  lookupAddToList(r2 ? r2 : Items[r1.house], ['walls', dir2], {
      rect: rect, dir: dir2, room: r1.id, door: null });\r

      }\r\n"
    sig: function addAdjacencyFromTo(r1, r2, dir, rect){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  areNeighbors:
    name: areNeighbors
    code: "function areNeighbors(r1, r2) {\r

      \  let res = firstCond(r1.doors, x => x.includes(r1.id) &&
      x.includes(r2.id));\r

      \  return res != null;\r

      }\r\n"
    sig: function areNeighbors(r1, r2){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getDoorId:
    name: getDoorId
    code: "function getDoorId(r1, r2) { return r1 + '_' + r2 + '_' + r1; }\r\n"
    sig: function getDoorId(r1, r2){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getLayoutSample:
    name: getLayoutSample
    code: "function getLayoutSample(n) {\r

      \  if (G.level > 4){\r

      \  }\r

      \  let samples = {\r

      \    1: '\"a\"',\r

      \    2: '\"a b\"', //'\"a\" \"b\"',\r

      \    3: ['\"a b c\"', '\"a a\" \"b c\"', '\"a b\" \"c c\"'], \r

      \    4: ['\"z z d\" \"a a c\" \"a a c\"', '\"a b\" \"c d\"'],\r

      \    5: ['\"a b e\" \"c c d\"', '\"a a b\" \"c d e\"', '\"a b e\"
      \"c d e\"'],\r

      \    6: ['\"a b b c\" \"d d e f\"', '\"a b b c\" \"a d e f\"', '\"a
      b b b\" \"c d e f\"'],\r

      \    7: ['\"a b c d\" \"a b e f\"', '\"a b b c\" \"a d e c\" \"a d f
      g\"'],\r

      \    8: ['\"a a b c\" \"d d e c\" \"f g e h\"', '\"a b b c\" \"a d e
      c\" \"f g e h\"'],\r

      \    9: ['\"a a b b\" \"c d d e\" \"f g h i\"', '\"a d e b\" \"c d e
      b\" \"f g h i\"'],\r

      \    10: '\"j a b b\" \"c d d e\" \"f g h i\"',\r

      \    11: '\"j a a b b\" \"j c d d e\" \"f g h i k\"',\r

      \    12: '\"j a a b b l\" \"j c d d e l\" \"f g h i k k\"',\r

      \    13: '\"j a a b b\" \"j c d d e\" \"f g h i k\" \"l l m m
      k\"',\r

      \    14: '\"n j a a b b\" \"n j c d d e\" \"f g h i i k\" \"l l m m
      m k\"',\r

      \    15: '\"n j o o b b\" \"n j a a b b\" \"n j c d d e\" \"f g h i
      i k\" \"l l m m m k\"',\r

      \    16: [\r

      \      '\"a b c d e\" \"f f g h e\" \"o p i h j\" \"k l i m n\"',\r

      \      '\"a b b d e\" \"n f p g e\" \"i j j o k\" \"l l c m h\"',\r

      \      '\"a a p g c h\" \"a a b b c h\" \"n d d e e f\" \"o i j k l
      m\"',\r

      \      '\"a b c o d e\" \"f b c p g e\" \"f i i j g k\" \"n l m j h
      k\"'\r

      \    ],\r

      \    17: [\r

      \      '\"a b c d e\" \"f g h i j\" \"k l m i o\" \"p n q q o\"',\r

      \      '\"a a c d e\" \"f g h i j\" \"k l m i o\" \"p n q b o\"',\r

      \      '\"a b c d e\" \"f b h i j\" \"k l m i o\" \"p n m q g\"'\r

      \    ],\r

      \    18: [\r

      \      '\"a b c d e\" \"a g h i j\" \"k l m n o\" \"p q r f o\"',\r

      \      '\"a b b c d e\" \"a g h h i j\" \"k l l m n o\" \"p q q r f
      o\"',\r

      \      '\"a b b c d e\" \"a g g h i j\" \"k g g m n o\" \"p q l r f
      o\"',\r

      \      '\"a b b c d e\" \"a g h h i j\" \"k k l m n o\" \"p q l r f
      o\"',\r

      \    ],\r

      \    19: [\r

      \      '\"a b c d e\" \"f b h i j\" \"k l m s o\" \"p n q g r\"',\r

      \      '\"a a b c d e\" \"f h b i i j\" \"k l m m s o\" \"p n q g g
      r\"',\r

      \      '\"a a b c d e\" \"f h b i l j\" \"k h m m s o\" \"p n q g g
      r\"',\r

      \      '\"a q b c d e\" \"f h b i l j\" \"k h m m s o\" \"p n m m g
      r\"',\r

      \      '\"a q b c d e\" \"f h b i l j\" \"k h m m s o\" \"p n m m g
      r\"',\r

      \    ],\r

      \    20: [\r

      \      '\"a b c d e\" \"f g h i j\" \"k l m n o\" \"p q r s t\"',\r

      \      '\"a b b c d e\" \"f g h h i j\" \"k k l m n o\" \"p q r s s
      t\"',\r

      \      '\"a b b c d e\" \"f g h h i j\" \"k k l m i o\" \"p q r n s
      t\"',\r

      \      '\"a f b c d e\" \"a g h h i j\" \"k k l m i o\" \"p q r n s
      t\"',\r

      \    ],\r

      \    21: [\r

      \      '\"a b b c d e\" \"f g h h i j\" \"k u l m n o\" \"p q r s s
      t\"',\r

      \      '\"a b b c d e\" \"f u g h i j\" \"k u l m n o\" \"p q r s n
      t\"',\r

      \      '\"a b b c d e\" \"f g h u i j\" \"k k l m i o\" \"p q r n s
      t\"',\r

      \      '\"a f b c d e\" \"a g h h i j\" \"k u l m i o\" \"p q r n s
      t\"',\r

      \    ],\r

      \    22: [\r

      \      '\"a v b c d e\" \"f g h h i j\" \"k u l m n o\" \"p q r s s
      t\"',\r

      \      '\"a b b c d e e\" \"f u g h i j v\" \"k u l m n o v\" \"p q
      r s n t t\"',\r

      \      '\"a b b c d e e\" \"f u g h i j j\" \"k u l m n o v\" \"p q
      r s n t t\"',\r

      \      '\"a b b c d d e\" \"m b b c i j e\" \"f u g h i j v\" \"k u
      l l n o v\" \"p q r s n t t\"',\r

      \    ],\r

      \    23: [\r

      \      '\"a v b c d e\" \"f g h h i j\" \"k u l m n o\" \"p q r w s
      t\"',\r

      \      '\"a w b c d e e\" \"f u g h i j v\" \"k u l m n o o\" \"p q
      r s n t t\"',\r

      \      '\"a b b c d e e\" \"f w g h i j j\" \"k u l m n o v\" \"p q
      r s n t t\"',\r

      \    ],\r

      \    24: [\r

      \      '\"a v b c d e\" \"f g h x i j\" \"k u l m n o\" \"p q r w s
      t\"',\r

      \      '\"a v v b c d e\" \"f g h x x i j\" \"k u l l n o m\" \"p q
      r w s t m\"',\r

      \    ],\r

      \    25: ['\"a b c d e f g\" \"a h i k l m g\" \"o p n r s m u\" \"v
      w x y q t j\"'],\r

      \    26: ['\"a a c d e f g\" \"h i b k l j n\" \"o p q r s m u\" \"v
      w x y z t u\"'],\r

      \    27: ['\"a b c d e f g\" \"h i j k l m n\" \"o p q r s t u\" \"v
      w x y z A u\"'],\r

      \    28: ['\"a b c d e f g\" \"h i j k l m n\" \"o p q r s t u\" \"v
      w x y z A B\"'],\r

      \    29: ['\"a b c d e f g h\" \"i j k d m n o p\" \"q r r t u v w
      x\" \"y z A B C s l l\"'],\r

      \    30: ['\"a b c d e f g h\" \"i j k d m n o p\" \"q r s t u v w
      x\" \"y z A B C D l l\"'],\r

      \    31: ['\"a b c d e f g h\" \"i j k l m n o p\" \"q r s t u v w
      x\" \"y z A B C D E E\"'],\r

      \    32: ['\"a b c d e f g h\" \"i j k l m n o p\" \"q r s t u v w
      x\" \"y z A B C D E F\"'],\r

      \  };\r

      \  let s;\r

      \  if (nundef(n)) {\r

      \    let l = chooseRandom(Object.keys(samples));\r

      \    s = samples[l];\r

      \  } else {\r

      \    s = samples[n];\r

      \  }\r

      \  s = isList(s) ? chooseRandom(s) : s;\r

      \  s = getLetterSwapEncoding(s);\r

      \  return s;\r

      }\r\n"
    sig: function getLayoutSample(n){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getOppDir:
    name: getOppDir
    code: "function getOppDir(dir) { return { e: 'w', w: 'e', n: 's', s: 'n' }[dir];
      }\r\n"
    sig: function getOppDir(dir){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getRoomNE:
    name: getRoomNE
    code: "function getRoomNE(house) { return firstCond(house.rooms, x =>
      isNorthRoom(house, Items[x]) && isEastRoom(house, Items[x])); }\r\n"
    sig: function getRoomNE(house){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getRoomNW:
    name: getRoomNW
    code: "function getRoomNW(house) { return firstCond(house.rooms, x =>
      isNorthRoom(house, Items[x]) && isWestRoom(house, Items[x])); }\r\n"
    sig: function getRoomNW(house){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getRoomSE:
    name: getRoomSE
    code: "function getRoomSE(house) {\r

      \  let rooms = house.rooms.map(x => Items[x]);\r

      \  for (const r of rooms) {\r

      \    let isSouth = isSouthRoom(house, r);\r

      \    let isEast = isEastRoom(house, r);\r

      \  }\r

      \  return firstCond(house.rooms, x => isSouthRoom(house, Items[x])
      && isEastRoom(house, Items[x]));\r

      }\r\n"
    sig: function getRoomSE(house){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getRoomSW:
    name: getRoomSW
    code: "function getRoomSW(house) { return firstCond(house.rooms, x =>
      isSouthRoom(house, Items[x]) && isWestRoom(house, Items[x])); }\r\n"
    sig: function getRoomSW(house){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getDiagonallyOpposedCornerRooms:
    name: getDiagonallyOpposedCornerRooms
    code: "function getDiagonallyOpposedCornerRooms(house) {\r

      \  if (coin()) return [getRoomNW(house), getRoomSE(house)]; else
      return [getRoomSW(house), getRoomNE(house)];\r

      }\r\n"
    sig: function getDiagonallyOpposedCornerRooms(house){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getDiagRoomPairs:
    name: getDiagRoomPairs
    code: "function getDiagRoomPairs(house) {\r

      \  return [[getRoomNW(house), getRoomSE(house)], [getRoomSW(house),
      getRoomNE(house)]];\r

      }\r\n"
    sig: function getDiagRoomPairs(house){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getCornerRoomsDict:
    name: getCornerRoomsDict
    code: "function getCornerRoomsDict(house) {\r

      \  let rooms = house.rooms.map(x => Items[x]);\r

      \  let result = {};\r

      \  for (const r of rooms) {\r

      \    let isN = r.isN = isNorthRoom(house, r);\r

      \    let isS = r.isS = isSouthRoom(house, r);\r

      \    let isW = r.isW = isWestRoom(house, r);\r

      \    let isE = r.isE = isEastRoom(house, r);\r

      \    if (isN && isW) result.NW = r.id;\r

      \    else if (isN && isE) result.NE = r.id;\r

      \    else if (isS && isE) result.SE = r.id;\r

      \    else if (isS && isW) result.SW = r.id;\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function getCornerRoomsDict(house){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  getCornerRooms:
    name: getCornerRooms
    code: "function getCornerRooms(house) {\r

      \  let rooms = house.rooms.map(x => Items[x]);\r

      \  let result = [];\r

      \  for (const r of rooms) {\r

      \    if (isCornerRoom(house, r)) {\r

      \      result.push(r.id);\r

      \    }\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function getCornerRooms(house){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  isCornerRoom:
    name: isCornerRoom
    code: "function isCornerRoom(house, room) {\r

      \  let rr = room.rect;\r

      \  let rh = house.rect;\r

      \  let w = house.wallWidth;\r

      \  let isHorSide = isCloseTo(rr.x, rh.x, w) || isCloseTo(rr.r, rh.r,
      w);\r

      \  let isVertSide = isCloseTo(rr.y, rh.y, w) || isCloseTo(rr.b,
      rh.b, w);\r

      \  return isHorSide && isVertSide;\r

      }\r\n"
    sig: function isCornerRoom(house, room){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  isNorthRoom:
    name: isNorthRoom
    code: "function isNorthRoom(house, room) { return isCloseTo(room.rect.t,
      house.rect.t, house.wallWidth); }\r\n"
    sig: function isNorthRoom(house, room){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  isSouthRoom:
    name: isSouthRoom
    code: "function isSouthRoom(house, room) { return isCloseTo(room.rect.b,
      house.rect.b, house.wallWidth); }\r\n"
    sig: function isSouthRoom(house, room){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  isEastRoom:
    name: isEastRoom
    code: "function isEastRoom(house, room) { return isCloseTo(room.rect.r,
      house.rect.r, house.wallWidth); }\r\n"
    sig: function isEastRoom(house, room){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  isWestRoom:
    name: isWestRoom
    code: "function isWestRoom(house, room) { return isCloseTo(room.rect.l,
      house.rect.l, house.wallWidth); }\r\n"
    sig: function isWestRoom(house, room){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  makeAreas:
    name: makeAreas
    code: "function makeAreas(dParent, layout) {\r

      \  let dGrid = mDiv(dParent, { gap: 10, bg: 'white', w: '90%',
      padding: 10, display: 'inline-grid', rounding: 10 }, 'dGrid');\r

      \  if (nundef(layout)) layout = ['T', 'H A'];\r

      \  let x = createGridLayout(dGrid, layout); \r

      \  let areaStyles = { bg: 'green', rounding: 6 };\r

      \  let contentStyles = { lowerRounding: 6 };\r

      \  let messageStyles = { fg: 'yellow' };\r

      \  let titleStyles = { bg: 'dimgray', family: 'AlgerianRegular',
      upperRounding: 6 };\r

      \  let areas = {\r

      \    T: { title: 'table', id: 'dTrick', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles, titleOnTop: true
      },\r

      \    H: { title: 'YOU', id: 'dHuman', showTitle: true, messageArea:
      true, areaStyles: areaStyles, contentStyles: contentStyles, messageStyles:
      messageStyles, titleStyles: titleStyles, titleOnTop: false },\r

      \    A: { title: 'opponent', id: 'dAI', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles, titleOnTop: false
      },\r

      \  };\r

      \  let items = [];\r

      \  for (const k in areas) {\r

      \    let item = areas[k];\r

      \    item.areaStyles['grid-area'] = k;\r

      \    let dCell = mTitledMessageDiv(item.title, dGrid, item.id,
      item.areaStyles, item.contentStyles, item.titleStyles, item.messageStyles,
      item.titleOnTop)\r

      \    iRegister(item, item.id);\r

      \    if (item.titleOnTop) iAdd(item, { div: dCell, dTitle:
      dCell.children[0], dMessage: dCell.children[1], dContent:
      dCell.children[2] });\r

      \    else iAdd(item, { div: dCell, dTitle: dCell.children[2],
      dMessage: dCell.children[0], dContent: dCell.children[1] });\r

      \    mCenterCenterFlex(diContent(item));\r

      \    mStyle(diContent(item), { gap: 10 });\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function makeAreas(dParent, layout){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  paint:
    name: paint
    code: "function paint(dParent, r, color = 'random') {\r

      \  let d = mDiv(dParent, { position: 'absolute', left: r.x, top:
      r.y, w: r.w, h: r.h, bg: color });\r

      \  return d;\r

      }\r\n"
    sig: function paint(dParent, r, color = 'random'){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  rrto:
    name: rrto
    code: "function rrto(r1, r2) {\r

      \  let r = jsCopy(r1);\r

      \  r.x -= r2.x; r.l -= r2.x; r.r -= r2.x;\r

      \  r.y -= r2.y; r.t -= r2.y; r.b -= r2.y;\r

      \  return r;\r

      }\r\n"
    sig: function rrto(r1, r2){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  setGranularityFactor:
    name: setGranularityFactor
    code: "function setGranularityFactor(s, f = 2) {\r

      \  let lines = s.split('\"');\r

      \  let lines1 = lines.filter(x => !isEmptyOrWhiteSpace(x));\r

      \  let lines2 = [];\r

      \  for (const l of lines1) {\r

      \    let lNew = '';\r

      \    for (let i = 0; i < l.length; i++) {\r

      \      if (l[i] == ' ') continue;\r

      \      for (let x = 0; x < f; x++) lNew += l[i] + ' ';\r

      \    }\r

      \    lines2.push(lNew.trim());\r

      \  }\r

      \  let lines3 = [];\r

      \  for (const l of lines2) { for (let i = 0; i < f; i++) {
      lines3.push(l); } }\r

      \  return lines3;\r

      }\r\n"
    sig: function setGranularityFactor(s, f = 2){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  showRect:
    name: showRect
    code: "function showRect(s, o) {\r

      \  let r = o.rect;\r

      \  console.log('\\n', s, 'w', Math.round(r.w), '=', Math.round(r.l),
      Math.round(r.r), 'h', Math.round(r.h), '=', Math.round(r.t),
      Math.round(r.b));\r

      }\r\n"
    sig: function showRect(s, o){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  showRectReal:
    name: showRectReal
    code: "function showRectReal(s, o) {\r

      \  let r = o.rect;\r

      \  console.log('\\n', s, 'w', r.w, '=', r.l, r.r, 'h', r.h, '=',
      r.t, r.b);\r

      }\r\n"
    sig: function showRectReal(s, o){}
    region: helpers (house.js)
    filename: house.js
    type: func
    fname: house.js
    path: C:\xampp\htdocs\aroot\belinda\js\house.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691927.8562
    size: 24082
  setKeysG:
    name: setKeysG
    code: "function setKeysG(g, filterFunc, nMin, key) {\r

      \  if (nundef(nMin)) nMin = 25;\r

      \  if (isdef(g.numPics)) nMin = Math.max(25, g.numPics);\r

      \  return setKeys({ nMin: nMin, lang: g.language, key: valf(key,
      g.vocab), keySets: KeySets, filterFunc: filterFunc, param: g });\r

      }\r\n"
    sig: function setKeysG(g, filterFunc, nMin, key){}
    region: keys (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  filterWordByLengthG:
    name: filterWordByLengthG
    code: "function filterWordByLengthG(g, k, w, allowSpaces = false) {\r

      \  if (nundef(g.minWordLength)) g.minWordLength = 0;\r

      \  if (nundef(g.maxWordLength)) g.maxWordLength = 50;\r

      \  return filterByLength(w, g.minWordLength, g.maxWordLength,
      allowSpaces);\r

      }\r\n"
    sig: function filterWordByLengthG(g, k, w, allowSpaces = false){}
    region: keys (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  arrCycleSwap:
    name: arrCycleSwap
    code: "function arrCycleSwap(arr, prop, clockwise = true) {\r

      \  let n = arr.length;\r

      \  let h = arr[0].prop;\r

      \  for (let i = 1; i < n; i++) { arr[i - 1][prop] = arr[i][prop];
      }\r

      \  arr[n - 1][prop] = h;\r

      }\r\n"
    sig: function arrCycleSwap(arr, prop, clockwise = true){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  gatherItems:
    name: gatherItems
    code: "function gatherItems(n, options) {\r

      \  let items = null;\r

      \  while (!items) { items = Pictures = pickSuitableItems(n,
      options); }\r

      \  let l = items[0].letter;\r

      \  for (let i = 0; i < n; i++) {\r

      \    let item1 = items[i];\r

      \    let item2 = items[(i + 1) % n];\r

      \    let label = item1.origLabel = item1.label;\r

      \    let idx = item1.iLetter;\r

      \    item1.label = replaceAtString(label, idx, item2.letter);\r

      \    if (isWord(item1.label)) {\r

      \      item2.iLetter = (item2.iLetter + 1) % item2.label.length;\r

      \      item2.letter = item2.label[item2.iLetter];\r

      \      item1.label = replaceAtString(label, idx, item2.letter); \r

      \      if (isWord(item1.label)) return gatherItems(n, options);\r

      \    }\r

      \    item1.swaps = {};\r

      \    item1.swaps[idx] = {\r

      \      swapped: { itemId: item2.id, index: item2.iLetter, l:
      item2.letter },\r

      \      correct: { itemId: item1.id, index: item1.iLetter, l:
      item1.letter },\r

      \      temp: null,\r

      \    };\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function gatherItems(n, options){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  pickSuitableItems:
    name: pickSuitableItems
    code: "function pickSuitableItems(n, options) {\r

      \  let items = genItems(n, options);\r

      \  let words = items.map(x => x.label);\r

      \  let minlen = arrMinMax(words, x => x.length).min;\r

      \  let used = [];\r

      \  for (const item of items) {\r

      \    let res = minlen > 6 ? getRandomVowel(item.label, used) :
      minlen > 3 ? getRandomConsonant(item.label, used) :
      getRandomLetter(item.label, used);\r

      \    if (isEmpty(res)) return null;\r

      \    let i = item.iLetter = res.i;\r

      \    let letter = item.letter = item.label[i];\r

      \    used.push(letter);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function pickSuitableItems(n, options){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getLettersExcept:
    name: getLettersExcept
    code: "function getLettersExcept(w, except = []) {\r

      \  w = w.toLowerCase();\r

      \  let res = [];\r

      \  for (let i = 0; i < w.length; i++) {\r

      \    if (!except.includes(w[i])) res.push({ i: i, letter: w[i] });\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function getLettersExcept(w, except = []){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getVowels:
    name: getVowels
    code: "function getVowels(w, except = []) {\r

      \  w = w.toLowerCase();\r

      \  let vowels = 'aeiouy';\r

      \  let res = [];\r

      \  for (let i = 0; i < w.length; i++) {\r

      \    if (vowels.includes(w[i]) && !except.includes(w[i])) res.push({
      i: i, letter: w[i] });\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function getVowels(w, except = []){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getConsonants:
    name: getConsonants
    code: "function getConsonants(w, except = []) {\r

      \  w = w.toLowerCase();\r

      \  let vowels = 'aeiouy' + except.join('');\r

      \  let res = [];\r

      \  for (let i = 0; i < w.length; i++) {\r

      \    if (!vowels.includes(w[i])) res.push({ i: i, letter: w[i] });\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function getConsonants(w, except = []){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getRandomVowel:
    name: getRandomVowel
    code: "function getRandomVowel(w, except = []) { let vowels = getVowels(w,
      except); return chooseRandom(vowels); }\r\n"
    sig: function getRandomVowel(w, except = []){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getRandomConsonant:
    name: getRandomConsonant
    code: "function getRandomConsonant(w, except = []) { let cons = getConsonants(w,
      except); return chooseRandom(cons); }\r\n"
    sig: function getRandomConsonant(w, except = []){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getRandomLetter:
    name: getRandomLetter
    code: "function getRandomLetter(w, except = []) { let cons = getLettersExcept(w,
      except); return chooseRandom(cons); }\r\n"
    sig: function getRandomLetter(w, except = []){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getBlinkingLetter:
    name: getBlinkingLetter
    code: "function getBlinkingLetter(item) {\r

      \  if (nundef(item.letters)) return null;\r

      \  return firstCond(item.letters, x => x.isBlinking);\r

      }\r\n"
    sig: function getBlinkingLetter(item){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  iLetters:
    name: iLetters
    code: "function iLetters(s, dParent, style) {\r

      \  let d = mDiv(dParent);\r

      \  for (let i = 0; i < s.length; i++) {\r

      \    let d1 = mDiv(d);\r

      \    d1.innerHTML = s[i];\r

      \    mStyle(d1, style);\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function iLetters(s, dParent, style){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  isWord:
    name: isWord
    code: "function isWord(w) { return lookup(Dictionary,[G.language,w]); }\r\n"
    sig: function isWord(w){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  pickSuitableItems_dep:
    name: pickSuitableItems_dep
    code: "function pickSuitableItems_dep(n, options) {\r

      \  let items = genItems(n, options);\r

      \  let words = items.map(x => x.label);\r

      \  let used = [];\r

      \  for (const item of items) {\r

      \    let res = getRandomConsonant(item.label, used);\r

      \    if (isEmpty(res)) return null;\r

      \    let i = item.iLetter = res.i;\r

      \    let letter = item.letter = item.label[i];\r

      \    used.push(letter);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function pickSuitableItems_dep(n, options){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  stopBlinking:
    name: stopBlinking
    code: "function stopBlinking(item) { if (isdef(item)) { item.isBlinking = false;
      mRemoveClass(iDiv(item), 'blink'); } }\r\n"
    sig: function stopBlinking(item){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  startBlinking:
    name: startBlinking
    code: "function startBlinking(item, items, unique = true) {\r

      \  if (unique) {\r

      \    let prevLetter = firstCond(items, x => x.isBlinking == true);\r

      \    stopBlinking(prevLetter);\r

      \  }\r

      \  mClass(iDiv(item), 'blink');\r

      \  item.isBlinking = true;\r

      }\r\n"
    sig: function startBlinking(item, items, unique = true){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  startPulsating:
    name: startPulsating
    code: "function startPulsating(item, items, unique = true) {\r

      \  if (unique) {\r

      \    let prevLetter = firstCond(items, x => x.isPulsating ==
      true);\r

      \    stopPulsating(prevLetter);\r

      \  }\r

      \  mClass(iDiv(item), 'onPulse');\r

      \  item.isPulsating = true;\r

      }\r\n"
    sig: function startPulsating(item, items, unique = true){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  stopPulsating:
    name: stopPulsating
    code: "function stopPulsating(item) { if (isdef(item)) { item.isPulsating =
      false; mRemoveClass(iDiv(item), 'onPulse'); } }\r\n"
    sig: function stopPulsating(item){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  showCorrectLabelSwapping:
    name: showCorrectLabelSwapping
    code: "function showCorrectLabelSwapping() {\r

      \  for (const p of Pictures) {\r

      \    for (const l of p.letters) {\r

      \      let sw = l.swapInfo;\r

      \      if (isdef(sw)) {\r

      \        iDiv(l).innerHTML = sw.correct.l;\r

      \        if (l.i == p.iLetter) animate(iDiv(l), 'komisch', 2300);\r

      \      }\r

      \    }\r

      \  }\r

      \  DELAY = 3000;\r

      \  return 3000;\r

      }\r\n"
    sig: function showCorrectLabelSwapping(){}
    region: letter (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getOperand:
    name: getOperand
    code: "function getOperand(type) { let x = OPS[type]; return
      randomNumber(Math.max(2, x.min), x.max); }\r\n"
    sig: function getOperand(type){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getRandomWP:
    name: getRandomWP
    code: "function getRandomWP(min = 0, max = 35) { let n=randomNumber(min, max);
      console.log('wp',n); return jsCopy(WordP[n]); }\r\n"
    sig: function getRandomWP(min = 0, max = 35){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  instantiateNames:
    name: instantiateNames
    code: "function instantiateNames(wp) {\r

      \  let text = wp.text;\r

      \  let parts = text.split('@P');\r

      \  let diNames = wp.diNames = {};\r

      \  let tnew = '';\r

      \  let allNames = jsCopy(arrPlus(GirlNames, BoyNames));\r

      \  let gNames = jsCopy(GirlNames);\r

      \  let bNames = jsCopy(BoyNames);\r

      \  if (!startsWith(text, '@P')) { tnew += parts[0]; parts =
      parts.slice(1); }\r

      \  for (const part of parts) {\r

      \    let textPart = stringAfter(part, ' ');\r

      \    let hasDot = part[2] == '.';\r

      \    let key = part.substring(0, 2);\r

      \    if (['G', 'B', 'P'].includes(part[0])) {\r

      \      let nlist = part[0] == 'P' ? allNames : part[0] == 'B' ?
      bNames : gNames;\r

      \      if (isdef(diNames[key])) {\r

      \        tnew += ' ' + diNames[key];\r

      \      } else {\r

      \        diNames[key] = chooseRandom(nlist);\r

      \        removeInPlace(nlist, diNames[key]);\r

      \        removeInPlace(allNames, diNames[key]);\r

      \        tnew += ' ' + diNames[key];\r

      \      }\r

      \    }\r

      \    tnew += (hasDot ? '. ' : ' ') + textPart.trim();\r

      \  }\r

      \  wp.text = tnew.trim();\r

      \  if (wp.sol[0] == 'p') {\r

      \    let k = wp.sol.trim().substring(3);\r

      \    wp.result = { number: 0, text: diNames[k] };\r

      \    return true;\r

      \  } else { return false; }\r

      }\r\n"
    sig: function instantiateNames(wp){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  instantiateNumbers:
    name: instantiateNumbers
    code: "function instantiateNumbers(wp) {\r

      \  let text = wp.text;\r

      \  if (wp.sol[0] == 's') { wp.result = { number: 0, text:
      wp.sol.substring(1) }; return [{}, '']; }\r

      \  let diop = wp.diop = {}, res, result = [], eq;\r

      \  let solist = wp.sol.split('=>');\r

      \  for (const sol of solist) {\r

      \    [res, eq] = replaceSol(sol, diop);\r

      \    result.push(res);\r

      \  }\r

      \  result = arrLast(result).res;\r

      \  wp.result = { number: isdef(diop.R) ? diop.R : result };\r

      \  wp.result.text = '' + wp.result.number;\r

      \  for (const k in diop) {\r

      \    if (k == 'R') continue;\r

      \    text = replaceAll(text, '@' + k, valToString(diop[k]));\r

      \  }\r

      \  wp.text = text;\r

      \  fractionConvert(wp, diop);\r

      \  return [diop, eq];\r

      }\r\n"
    sig: function instantiateNumbers(wp){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  valToString:
    name: valToString
    code: "function valToString(n) { if (isFractionType(n)) return
      getTextForFractionX(n.n, n.d); else return n; }\r\n"
    sig: function valToString(n){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  replaceSol:
    name: replaceSol
    code: "function replaceSol(sol, diop) {\r

      \  let rhs = stringBefore(sol, '=');\r

      \  let type = rhs.includes('*') ? rhs.includes('R') ? 'div' : 'mult'
      : rhs.includes('R') ? 'minus' : 'plus';\r

      \  let i = 0;\r

      \  while (i < rhs.length) {\r

      \    if (rhs[i] == 'R') { diop.R = getOperand(type); i += 1; }\r

      \    else if (rhs[i] == 'r' && !isLetter(rhs[i+1])) { if
      (nundef(diop.r)) diop.r = getOperand(type); i += 1; } \r

      \    else if (rhs[i] == 'N') {\r

      \      i += 1;\r

      \      let inum = Number(rhs[i]);\r

      \      let k = 'N' + inum;\r

      \      if (nundef(diop[k])) diop[k] = getOperand(type);\r

      \      i += 1;\r

      \    } else if (rhs[i] == 'D') {\r

      \      i += 1;\r

      \      let inum = Number(rhs[i]);\r

      \      let k = 'D' + inum;\r

      \      i += 1;\r

      \      if (rhs[i] == '{') {\r

      \        let subs = rhs.substring(i);\r

      \        let inKlammern = stringBefore(subs, '}');\r

      \        rhs = rhs.substring(0, i) + stringAfter(subs, '}');\r

      \        i += inKlammern.length;\r

      \        let nums = allNumbers(inKlammern);\r

      \        diop[k] = chooseRandom(nums);\r

      \      } else if (nundef(diop[k])) {\r

      \        diop[k] = randomNumber(2, 9); \r

      \      }\r

      \    } else if (rhs[i] == 'F') {\r

      \      if (isdef(diop[rhs.substring(i, i + 2)])) { i += 2; continue;
      }\r

      \      let s_ab_i = rhs.substring(i);\r

      \      let s_vor_klammer_zu = stringBefore(s_ab_i, ')');\r

      \      let lenRaus = s_vor_klammer_zu.length + 1;\r

      \      let s_nach_fraction = stringAfter(s_ab_i, ')');\r

      \      let kFraction = s_ab_i.substring(0, 2);\r

      \      let kNum = s_ab_i.substring(3); kNum = stringBefore(kNum,
      ',');\r

      \      let kDenom = stringAfter(s_ab_i, ','); kDenom =
      stringBefore(kDenom, ')'); \r

      \      rhs = rhs.substring(0, i) + 'math.fraction(' + kNum + ',' +
      kDenom + ')' + s_nach_fraction;\r

      \      let num = isNumber(kNum) ? Number(kNum) : isdef(diop[kNum]) ?
      diop[kNum] : null;\r

      \      let denom = isNumber(kDenom) ? Number(kDenom) :
      isdef(diop[kDenom]) ? diop[kDenom] : null;\r

      \      let fr = getRandomFraction(num, denom);\r

      \      diop[kFraction] = fr;\r

      \      if (!num) diop[kNum] = fr.n;\r

      \      if (!denom) diop[kDenom] = fr.d;\r

      \      i += 20; \r

      \    } else i += 1;\r

      \  }\r

      \  i = 0;\r

      \  while (i < rhs.length) {\r

      \    if (rhs[i] == 'n') {\r

      \      i += 1;\r

      \      let inum = Number(rhs[i]);\r

      \      let k = 'n' + inum;\r

      \      let kN = 'N' + inum;\r

      \      let x = diop[kN];\r

      \      if (nundef(diop[k])) diop[k] = randomNumber(2, x - 1);\r

      \      i += 1;\r

      \    } else i += 1;\r

      \  }\r

      \  let eq = rhs;\r

      \  for (const k in diop) {\r

      \    let val = diop[k];\r

      \    if (isFractionType(val)) val =
      `math.fraction(${val.n},${val.d})`;\r

      \    eq = eq.replace(k, val); \r

      \  }\r

      \  let result = eval(eq);\r

      \  let lhs = stringAfter(sol, '=').trim();\r

      \  if (isEmpty(lhs)) lhs = 'R';\r

      \  diop[lhs] = result;\r

      \  return [result, eq];\r

      }\r\n"
    sig: function replaceSol(sol, diop){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  isFractionType:
    name: isFractionType
    code: "function isFractionType(x) { return isDict(x) && isdef(x.n) &&
      isdef(x.d); }\r\n"
    sig: function isFractionType(x){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  fractionConvert:
    name: fractionConvert
    code: "function fractionConvert(wp, diop) {\r

      \  let n = wp.result.number;\r

      \  let t = typeof n;\r

      \  if (isFractionType(n)) {\r

      \    wp.isFractionResult = true;\r

      \    wp.result.text = getTextForFraction(n.n, n.d);\r

      \  }\r

      }\r\n"
    sig: function fractionConvert(wp, diop){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  instantiateNumbersIncludingFractions:
    name: instantiateNumbersIncludingFractions
    code: "function instantiateNumbersIncludingFractions(wp) {\r

      \  let sol = wp.sol;\r

      \  console.log('________________sol', sol)\r

      \  let parts = sol.split('{');\r

      \  let di = {};\r

      \  let newSol = '';\r

      \  for (const p of parts) {\r

      \    if (p[0] == 'N') {\r

      \      let key = p.substring(0, 2);\r

      \      let n;\r

      \      console.log('p', p)\r

      \      if (p[2] == '(') {\r

      \        let nums = stringBetween(p, '(', ')');\r

      \        let lst = allNumbers(nums);\r

      \        if (lst.length <= 3 && lst[0] <= lst[1]) {\r

      \          n = randomNumber(...lst);\r

      \        } else {\r

      \          n = chooseRandom(lst);\r

      \        }\r

      \      } else {\r

      \        n = randomNumber(2, 9);\r

      \      }\r

      \      let rest = stringAfter(p, '}');\r

      \      newSol += '' + n + rest;\r

      \      di[key] = n;\r

      \    } else newSol += p;\r

      \  }\r

      \  console.log('newSol', newSol);\r

      \  let res = eval(newSol);\r

      \  console.log('res of simplify', res);\r

      \  let numResult = res[0] / res[1];\r

      \  let textResult = numResult == Math.round(numResult) ? numResult :
      '' + res[0] + '/' + res[1];\r

      \  wp.result = { number: numResult, text: textResult };\r

      \  let text = wp.text;\r

      \  for (const k in di) {\r

      \    if (k == 'R') continue;\r

      \    text = replaceAll(text, '{' + k + '}', di[k]);\r

      \  }\r

      \  console.log('_________ text', text);\r

      \  parts = text.split('{');\r

      \  let tnew = '';\r

      \  for (const p of parts) {\r

      \    if (p[0] == 'F') {\r

      \      let s = stringBefore(p, '}');\r

      \      console.log('s', s)\r

      \      let [n, d] = allNumbers(s);\r

      \      tnew += getTextForFraction(n, d);\r

      \      tnew += '; ' + stringAfter(p, '}');\r

      \    } else tnew += p;\r

      \  }\r

      \  text = tnew;\r

      \  wp.text = text;\r

      \  mText(wp.text, dTable)\r

      }\r\n"
    sig: function instantiateNumbersIncludingFractions(wp){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  instantiateFractions:
    name: instantiateFractions
    code: "function instantiateFractions(wp) {\r

      \  let text = wp.text;\r

      \  let parts = text.split('{');\r

      \  console.log('parts', parts);\r

      \  let tnew = '';\r

      \  if (!startsWith(text, '{')) { tnew += parts[0]; parts =
      parts.slice(1); }\r

      \  let denom;\r

      \  for (const part of parts) {\r

      \    let textPart = stringAfter(part, '}');\r

      \    let key = part.substring(0, 2);\r

      \    console.log('key', key);\r

      \    if (part[0] == 'F') { \r

      \      let numer = part[1] == 'a' ? 1 : isdef(denom) ? denom :
      randomNumber(2, 8);\r

      \      if (nundef(denom)) {\r

      \        denom = numer <= 2 ? randomNumber(numer + 1, 9) :\r

      \          numer < 9 ? coin() ? randomNumber(2, numer - 1) :
      randomNumber(numer + 1, 9) : randomNumber(2, number - 1);\r

      \      }\r

      \      tnew += ' ' + getTextForFraction(numer, denom);\r

      \      operands.push(numer / denom);\r

      \    }\r

      \    tnew += ' ' + textPart.trim();\r

      \  }\r

      \  wp.text = tnew.trim();\r

      }\r\n"
    sig: function instantiateFractions(wp){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  instantiateWP:
    name: instantiateWP
    code: "function instantiateWP(wp) {\r

      \  if (wp.title.includes('Fractions'))
      instantiateNumbersIncludingFractions(wp); else instantiateNumbers(wp);\r

      \  instantiateNames(wp);\r

      \  console.log('wp', wp.text, wp.result);\r

      }\r\n"
    sig: function instantiateWP(wp){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  evalWP:
    name: evalWP
    code: "function evalWP(wp) {\r

      \  let title = wp.title;\r

      \  if (title.includes('Adding') && !titla.includes('Fractions')) {\r

      \  }\r

      }\r\n"
    sig: function evalWP(wp){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  instantiateNumbers_dep:
    name: instantiateNumbers_dep
    code: "function instantiateNumbers_dep(wp) {\r

      \  let text = wp.text;\r

      \  let diop = {};\r

      \  let sol = wp.sol;\r

      \  let rhs = stringBefore(sol, '=');\r

      \  let type = rhs.includes('*') ? rhs.includes('R') ? 'div' : 'mult'
      : rhs.includes('R') ? 'minus' : 'plus';\r

      \  let i = 0;\r

      \  while (i < rhs.length) {\r

      \    if (rhs[i] == 'R') { diop.R = getOperand(type); i += 1; }\r

      \    else if (rhs[i] == 'N') {\r

      \      i += 1;\r

      \      let inum = Number(rhs[i]);\r

      \      let k = 'N' + inum;\r

      \      diop[k] = getOperand(type);\r

      \      i += 1;\r

      \    } else i += 1;\r

      \  }\r

      \  i = 0;\r

      \  while (i < rhs.length) {\r

      \    if (rhs[i] == 'n') {\r

      \      i += 1;\r

      \      let inum = Number(rhs[i]);\r

      \      let k = 'n' + inum;\r

      \      let kN = 'N' + inum;\r

      \      let x = diop[kN];\r

      \      diop[k] = randomNumber(1, x - 1);\r

      \      i += 1;\r

      \    } else i += 1;\r

      \  }\r

      \  let eq = rhs;\r

      \  for (const k in diop) {\r

      \    eq = eq.replace(k, diop[k]);\r

      \  }\r

      \  let result = eval(eq);\r

      \  let lhs = stringAfter(sol, '=');\r

      \  diop[lhs] = result;\r

      \  wp.result = { number: isdef(diop.R) ? diop.R : result };\r

      \  wp.result.text = '' + wp.result.number;\r

      \  for (const k in diop) {\r

      \    if (k == 'R') continue;\r

      \    text = text.replace('@' + k, diop[k]);\r

      \  }\r

      \  wp.text = text;\r

      \  return [diop, eq];\r

      }\r\n"
    sig: function instantiateNumbers_dep(wp){}
    region: math (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  initScore:
    name: initScore
    code: "function initScore() { resetScore(); }\r\n"
    sig: function initScore(){}
    region: scoring (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  lastStreakFalse:
    name: lastStreakFalse
    code: "function lastStreakFalse(items) {\r

      \  let n = G.decrementLevelOnNegativeStreak;\r

      \  let iFrom = items.length - 1;\r

      \  let iTo = iFrom - n;\r

      \  for (let i = iFrom; i > iTo; i--) {\r

      \    if (i < 0) return false;\r

      \    else if (items[i].isCorrect) return false;\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function lastStreakFalse(items){}
    region: scoring (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  lastStreakCorrect:
    name: lastStreakCorrect
    code: "function lastStreakCorrect(items) {\r

      \  let n = G.incrementLevelOnPositiveStreak;\r

      \  let iFrom = items.length - 1;\r

      \  let iTo = iFrom - n;\r

      \  for (let i = iFrom; i > iTo; i--) {\r

      \    if (i < 0) return false;\r

      \    else if (!items[i].isCorrect) return false;\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function lastStreakCorrect(items){}
    region: scoring (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  scoring:
    name: scoring
    code: "function scoring(isCorrect) {\r

      \  Score.nTotal += 1;\r

      \  if (isCorrect) { Score.nCorrect += 1; if (G.trialNumber == 1)
      Score.nCorrect1 += 1; }\r

      \  percentageCorrect = Math.round(100 * Score.nCorrect /
      Score.nTotal);\r

      \  if (isCorrect) { Score.nPos += 1; Score.nNeg = 0; } else {
      Score.nPos = 0; Score.nNeg += 1; }\r

      \  let levelChange = 0;\r

      \  let gameChange = false;\r

      \  let nextLevel = G.level;\r

      \  let toggle = G.pictureLabels == 'toggle';\r

      \  let hasLabels = G.showLabels == true; \r

      \  let boundary = G.samplesPerGame;\r

      \  let pos = G.incrementLevelOnPositiveStreak;\r

      \  let posSeq = pos > 0 && Score.nPos >= pos;\r

      \  let halfposSeq = pos > 0 && Score.nPos >= pos / 2;\r

      \  let neg = G.decrementLevelOnNegativeStreak;\r

      \  let negSeq = neg > 0 && Score.nNeg >= neg;\r

      \  let halfnegSeq = neg > 0 && Score.nNeg >= neg / 2;\r

      \  let labelsNextRound = G.showLabels;\r

      \  if (halfposSeq && hasLabels && toggle) { labelsNextRound = false;
      }\r

      \  else if (posSeq) { levelChange = 1; nextLevel += 1; Score.nPos =
      0; }\r

      \  if (halfnegSeq && !hasLabels && toggle) { labelsNextRound = true;
      }\r

      \  else if (negSeq) { levelChange = -1; if (nextLevel > 0) nextLevel
      -= 1; Score.nNeg = 0; }\r

      \  if (nextLevel != G.Level && nextLevel > 0 && nextLevel <=
      G.maxlevel) {\r

      \    userUpdate(['games', G.id, 'startlevel'], nextLevel);\r

      \  }\r

      \  if (Score.nTotal >= boundary) {\r

      \    gameChange = true; levelChange = false;\r

      \  }\r

      \  if (levelChange || gameChange) {\r

      \    if (toggle) labelsNextRound = true;\r

      \  } else if (!halfnegSeq && toggle && hasLabels && Score.nTotal >=
      G.samplesPerGame / 2) {\r

      \    labelsNextRound = false;\r

      \  }\r

      \  G.showLabels = labelsNextRound;\r

      \  Score.gameChange = gameChange;\r

      \  Score.levelChange = levelChange;\r

      \  return nextLevel;\r

      }\r\n"
    sig: function scoring(isCorrect){}
    region: scoring (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  cleanupOldGame:
    name: cleanupOldGame
    code: "function cleanupOldGame() {\r

      \  updateUserScore();\r

      \  if (isdef(G)) { G.clear(); }\r

      \  clearTable();\r

      \  clearStats();\r

      \  clearFleetingMessage();\r

      }\r\n"
    sig: function cleanupOldGame(){}
    region: user (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  editableUsernameUi:
    name: editableUsernameUi
    code: "function editableUsernameUi(dParent) {\r

      \  let inp = mEditableInput(dParent, 'user: ', Session.cur_user);\r

      \  inp.id = 'spUser';\r

      \  inp.addEventListener('focusout', () => {
      changeUserTo(inp.innerHTML.toLowerCase()); });\r

      \  return inp;\r

      }\r\n"
    sig: function editableUsernameUi(dParent){}
    region: user (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  getUserStartLevel:
    name: getUserStartLevel
    code: "function getUserStartLevel(game) { return valf(lookup(U, ['games', game,
      'startlevel']), 0); }\r\n"
    sig: function getUserStartLevel(game){}
    region: user (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  showUsernameOnScreen:
    name: showUsernameOnScreen
    code: "function showUsernameOnScreen(isEditable=true){\r

      \  let uiName = 'spUser';\r

      \  let dUser = mBy(uiName);\r

      \  if (isdef(dUser)) return;\r

      \  dUser = isEditable?
      editableUsernameUi(dLineTopLeft):mText(Session.cur_user, dLineTopLeft);\r

      \  dUser.id = uiName; \r

      }\r\n"
    sig: function showUsernameOnScreen(isEditable=true){}
    region: user (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  save_users:
    name: save_users
    code: "function save_users(db_dirty = true) {\r

      \  if (isdef(G)) U.lastGame = G.id;\r

      \  if (!startsWith(Session.cur_user, 'test'))
      localStorage.setItem('user', Session.cur_user);\r

      \  DB.users[Session.cur_user] = U;\r

      \  if (db_dirty) db_save();\r

      }\r\n"
    sig: function save_users(db_dirty = true){}
    region: user (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  setNextGame:
    name: setNextGame
    code: "function setNextGame() {\r

      \  let game = G.id;\r

      \  let i = U.avGames.indexOf(game);\r

      \  let iNew = (i + 1) % U.avGames.length;\r

      \  setGame(U.avGames[iNew]);\r

      }\r\n"
    sig: function setNextGame(){}
    region: user (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  updateUserScore:
    name: updateUserScore
    code: "function updateUserScore() {\r

      \  if (nundef(Score.nTotal) || Score.nTotal <= 0) return;\r

      \  let sc = { nTotal: Score.nTotal, nCorrect: Score.nCorrect,
      nCorrect1: Score.nCorrect1, nWins: Score.nWins, nLoses: Score.nLoses,
      nTied: Score.nTied };\r

      \  let g = G.id;\r

      \  let recOld = lookupSet(U, ['games', g], { startlevel: 0, nTotal:
      0, nCorrect: 0, nCorrect1: 0, nWins: 0, nLoses: 0, nTied: 0 });\r

      \  let recSession = lookupSet(U, ['session', g], { startlevel: 0,
      nTotal: 0, nCorrect: 0, nCorrect1: 0, nWins: 0, nLoses: 0, nTied: 0 });\r

      \  addByKey(sc, recSession);\r

      \  let counts = DB.games[g].controllerType == 'solo' ?
      recSession.nWins : recSession.nCorrect;\r

      \  recSession.percentage = Math.round(100 * counts /
      recSession.nTotal);\r

      \  addByKey(sc, recOld);\r

      \  counts = DB.games[g].controllerType == 'solo' ? recOld.nWins :
      recOld.nCorrect;\r

      \  recOld.percentage = Math.round(100 * recOld.nCorrect /
      recOld.nTotal);\r

      \  Score.nTotal = Score.nCorrect = Score.nCorrect1 = 0;\r

      \  save_users();\r

      }\r\n"
    sig: function updateUserScore(){}
    region: user (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  userUpdate:
    name: userUpdate
    code: "function userUpdate(proplist, val) {\r

      \  lookupSetOverride(U, proplist, val);\r

      \  save_users();\r

      }\r\n"
    sig: function userUpdate(proplist, val){}
    region: user (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  ani_say:
    name: ani_say
    code: "function ani_say(d, fSpeak) {\r

      \  if (isdef(fSpeak)) fSpeak(); \r

      \  mClass(d, 'onPulse');\r

      \  setTimeout(() => mRemoveClass(d, 'onPulse'), 500);\r

      }\r\n"
    sig: function ani_say(d, fSpeak){}
    region: instruction (workUI.js)
    filename: workUI.js
    type: func
    fname: workUI.js
    path: C:\xampp\htdocs\aroot\belinda\js\workUI.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 4137
  show_click_vocab:
    name: show_click_vocab
    code: "function show_click_vocab() {\r

      \  let cmd = 'click';\r

      \  let vocab = Goal.label;\r

      \  let voice = G.language;\r

      \  let dParent = dTitle;\r

      \  let fz = 36;\r

      \  let fSpeak = () => {\r

      \    Speech.say(cmd, 1, .8, .9, 'random', () => {\r

      \      Speech.say(vocab, 1, .8, .9, voice);\r

      \    }, 'E');\r

      \  };\r

      \  fSpeak();\r

      \  clearElement(dParent);\r

      \  let d = mDiv(dParent);\r

      \  mStyle(d, { margin: 15 })\r

      \  mClass(d, 'flexWrap');\r

      \  let msg = cmd + \" \" + `<b>${vocab.toUpperCase()}</b>`;\r

      \  if (nundef(fz)) fz = 36;\r

      \  let d1 = mText(msg, d, { fz: fz, display: 'inline-block' });\r

      \  let sym = symbolDict.speaker;\r

      \  let d2 = mText(sym.text, d, {\r

      \    fz: fz + 2, weight: 900, display: 'inline-block',\r

      \    family: sym.family, 'padding-left': 14\r

      \  });\r

      \  dFeedback = dInstruction = d;\r

      \  dInstruction.addEventListener('click', () =>
      ani_say(dInstruction, () => {\r

      \    Speech.say(vocab, 1, .8, .9, voice);}));\r

      }\r\n"
    sig: function show_click_vocab(){}
    region: instruction (workUI.js)
    filename: workUI.js
    type: func
    fname: workUI.js
    path: C:\xampp\htdocs\aroot\belinda\js\workUI.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 4137
  success_pic_goal:
    name: success_pic_goal
    code: "function success_pic_goal(withComment = true) {\r

      \  let lang = G.language;\r

      \  if (withComment && G.spokenFeedback) {\r

      \    const comments = {\r

      \      E: ['YEAH!', 'Excellent!!!', 'CORRECT!', 'Great!!!'],\r

      \      D: ['gut', 'Sehr Gut!!!', 'richtig!!', 'Bravo!!!'],\r

      \      S: ['bien', 'muy bien!!!', 'eccelente!!', 'bravo!!!'],\r

      \      F: ['bien', 'tres bien!!!', 'fantastique!!', 'bravo!!!',
      'excellent!!!'],\r

      \      C: ['优秀', '好的!!!', '正确的!!', 'Bravo!!!'],\r

      \    }[lang];\r

      \    say(chooseRandom(comments), lang);\r

      \  }\r

      \  if (isdef(Selected) && isdef(Selected.feedbackUI)) {\r

      \    let uilist;\r

      \    if (isdef(Selected.positiveFeedbackUI)) uilist =
      [Selected.positiveFeedbackUI];\r

      \    else uilist = isList(Selected.feedbackUI) ? Selected.feedbackUI
      : [Selected.feedbackUI];\r

      \    let sz = getRect(uilist[0]).h;\r

      \    for (const ui of uilist) {\r

      \      let d = markerSuccess();\r

      \      mpOver(d, ui, sz * (4 / 5), 'limegreen', 'segoeBlack');\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function success_pic_goal(withComment = true){}
    region: success (workUI.js)
    filename: workUI.js
    type: func
    fname: workUI.js
    path: C:\xampp\htdocs\aroot\belinda\js\workUI.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 4137
  show_instruction_different:
    name: show_instruction_different
    code: "function show_instruction_different(dParent, wlist, slist, styles) {\r

      \  wlist = [\r

      \    { phrase: 'click', styles: { fg: 'red' } },\r

      \    { phrase: 'tomato', styles: { fg: 'red' } },\r

      \  ];\r

      \  slist = [\r

      \    { phrase: 'click', voice: 'default', }\r

      \  ];\r

      \  console.assert(isdef(Speech));\r

      \  clearElement(dParent);\r

      \  let d = mDiv(dParent);\r

      \  mStyle(d, { margin: 15 })\r

      \  mClass(d, 'flexWrap');\r

      \  let msg = cmd + \" \" + `<b>${text.toUpperCase()}</b>`;\r

      \  if (nundef(fz)) fz = 36;\r

      \  let d1 = mText(msg, d, { fz: fz, display: 'inline-block' });\r

      \  if (nundef(fz)) fz = 36;\r

      \  d1 = mText(written, d, { fz: fz, display: 'inline-block' });\r

      \  if (isSpoken) {\r

      \    let sym = symbolDict.speaker;\r

      \    let d2 = mText(sym.text, d, {\r

      \      fz: fz + 2, weight: 900, display: 'inline-block',\r

      \      family: sym.family, 'padding-left': 14\r

      \    });\r

      \  }\r

      \  dFeedback = dInstruction = d;\r

      \  spoken = isSpoken ? isdef(spoken) ? spoken : cmd + \" \" + text :
      null;\r

      \  dInstruction.addEventListener('click', () =>
      aniInstruction(spoken));\r

      \  if (!isSpoken) return;\r

      \  sayRandomVoice(isdef(spoken) ? spoken : (cmd + \" \" + text),
      null, \"david\");\r

      \  let sym = symbolDict.speaker;\r

      \  let d2 = mText(sym.text, d, {\r

      \    fz: fz + 2, weight: 900, display: 'inline-block',\r

      \    family: sym.family, 'padding-left': 14\r

      \  });\r

      \  dFeedback = dInstruction = d;\r

      \  dInstruction.addEventListener('click', () =>
      aniInstruction(spoken));\r

      \  if (isdef(spoken)) sayRandomVoice(spoken, spoken, voice);\r

      }\r\n"
    sig: function show_instruction_different(dParent, wlist, slist, styles){}
    region: success (workUI.js)
    filename: workUI.js
    type: func
    fname: workUI.js
    path: C:\xampp\htdocs\aroot\belinda\js\workUI.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 4137
  showWritten:
    name: showWritten
    code: "function showWritten(cmd, vocab, dParent, styles) { }\r\n"
    sig: function showWritten(cmd, vocab, dParent, styles){}
    region: success (workUI.js)
    filename: workUI.js
    type: func
    fname: workUI.js
    path: C:\xampp\htdocs\aroot\belinda\js\workUI.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 4137
  showSpoken:
    name: showSpoken
    code: "function showSpoken() { }\r\n"
    sig: function showSpoken(){}
    region: workUI (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  onClickFreezer2:
    name: onClickFreezer2
    code: "function onClickFreezer2(ev) {\r

      \  clearTable(); mRemoveClass(mBy('freezer2'), 'aniSlowlyAppear');
      hide('freezer2'); auxOpen = false;\r

      \  savedb();\r

      }\r\n"
    sig: function onClickFreezer2(ev){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  onClickFloppy:
    name: onClickFloppy
    code: "function onClickFloppy() {\r

      \  savedb();\r

      }\r\n"
    sig: function onClickFloppy(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  onClickGear:
    name: onClickGear
    code: "function onClickGear() {\r

      \  openAux();\r

      \  hide('dGear');\r

      \  hide('dFloppy');\r

      \  hide('dCalibrate');\r

      \  Settings.createSettingsUi(dAux);\r

      }\r\n"
    sig: function onClickGear(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  onClickGo:
    name: onClickGo
    code: "function onClickGo(ev) {\r

      \  if (isVisible('dTemple')) {\r

      \    closeAux();\r

      \    if (G.controllerType == 'solitaire') GC.startGame(); else
      GC.activateUi();\r

      \  } else {\r

      \    let item = isdef(ev) ? evToItemC(ev) : null;\r

      \    let gKey = nundef(ev) ? SelectedMenuKey : isString(ev) ? ev :
      item.id; \r

      \    if (gKey != SelectedMenuKey) {\r

      \      if (isdef(SelectedMenuKey))
      toggleItemSelection(Items[SelectedMenuKey]);\r

      \      SelectedMenuKey = gKey;\r

      \      let item = Items[SelectedMenuKey];\r

      \      toggleItemSelection(item);\r

      \    } else {\r

      \      closeAux();\r

      \      setGame(gKey);\r

      \      GC.startGame();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function onClickGo(ev){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  onClickMenuItem:
    name: onClickMenuItem
    code: "function onClickMenuItem(ev) { onClickGo(ev); }\r\n"
    sig: function onClickMenuItem(ev){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  onClickNextGame:
    name: onClickNextGame
    code: "function onClickNextGame(){\tsetNextGame(); GC.startGame();}\r\n"
    sig: function onClickNextGame(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  onClickShield:
    name: onClickShield
    code: "function onClickShield(ev){ \r

      \  ev.stopPropagation(); \r

      \  console.log('wait...?');\r

      \  hideShield();\r

      }\r\n"
    sig: function onClickShield(ev){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  hideShield:
    name: hideShield
    code: "function hideShield(){setTimeout(()=>{mBy('dShield').style.display =
      'none'},500);}\r\n"
    sig: function hideShield(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  showShield:
    name: showShield
    code: "function showShield(){mBy('dShield').style.display = 'block';}\r\n"
    sig: function showShield(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  onClickTemple:
    name: onClickTemple
    code: "function onClickTemple() {\r

      \  openAux();\r

      \  hide('dTemple');\r

      \  createMenuUi(dAux, U.avGames, onClickMenuItem);\r

      }\r\n"
    sig: function onClickTemple(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  clearTimeouts:
    name: clearTimeouts
    code: "function clearTimeouts() {\r

      \  onclick = null;\r

      \  clearTimeout(TOMain); \r

      \  clearTimeout(TOTicker);\r

      \  clearTimeout(TOFleetingMessage);\r

      \  clearTimeout(TOTrial);\r

      \  if (isdef(TOList)) { for (const k in TOList) { TOList[k].map(x =>
      clearTimeout(x)); } }\r

      }\r\n"
    sig: function clearTimeouts(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  interrupt:
    name: interrupt
    code: "function interrupt() {\r

      \  STOPAUS = true;\r

      \  uiActivated = aiActivated = false;\r

      \  clearTimeouts(); \r

      \  if (isdef(G) && isdef(G.clear)) G.clear();\r

      \  if (isdef(GC) && isdef(GC.clear)) GC.clear();\r

      \  TOMan.clear();\r

      \  clearMarkers();\r

      }\r\n"
    sig: function interrupt(){}
    region: onClick (leg_belinda.js)
    filename: leg_belinda.js
    type: func
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  close_image:
    name: close_image
    code: "function close_image(e) {\r

      \  e.target.className = \"image_off\";\r

      }\r\n"
    sig: function close_image(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  delete_message:
    name: delete_message
    code: "function delete_message(e) {\r

      \  if (confirm(\"Are you sure you want to delete this message??\"))
      {\r

      \    var msgid = e.target.getAttribute(\"msgid\");\r

      \    get_data({\r

      \      rowid: msgid\r

      \    }, \"delete_message\");\r

      \    get_data({\r

      \      username: CURRENT_CHAT_USER,\r

      \      seen: SEEN_STATUS\r

      \    }, \"chats_refresh\");\r

      \  }\r

      }\r\n"
    sig: function delete_message(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  delete_thread:
    name: delete_thread
    code: "function delete_thread(e) {\r

      \  if (confirm(\"Are you sure you want to delete this whole
      thread??\")) {\r

      \    get_data({\r

      \      username: CURRENT_CHAT_USER\r

      \    }, \"delete_thread\");\r

      \    get_data({\r

      \      username: CURRENT_CHAT_USER,\r

      \      seen: SEEN_STATUS\r

      \    }, \"chats_refresh\");\r

      \  }\r

      }\r\n"
    sig: function delete_thread(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  enter_pressed:
    name: enter_pressed
    code: "function enter_pressed(e) { if (e.keyCode == 13) { send_message(e); }
      set_seen(); }\r\n"
    sig: function enter_pressed(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  get_account_dep:
    name: get_account_dep
    code: "function get_account_dep() { get_data({}, \"account\"); }\r\n"
    sig: function get_account_dep(){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  get_contacts_dep:
    name: get_contacts_dep
    code: "function get_contacts_dep(e) { get_data({}, \"contacts\"); }\r\n"
    sig: function get_contacts_dep(e){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  get_chat:
    name: get_chat
    code: "function get_chat(e) { get_data({ username: CURRENT_CHAT_USER },
      \"chats\"); }\r\n"
    sig: function get_chat(e){}
    region: funcs (api.js)
    filename: api.js
    type: func
    fname: api.js
    path: C:\xampp\htdocs\aroot\_other\chatas\js\api.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691879.8555
    size: 14625
  get_play_dep:
    name: get_play_dep
    code: "function get_play_dep(e) {\r

      \  get_data({ username: Session.cur_user, gamename:
      Session.cur_game, assets: nundef(Syms) }, \"play\");\r

      }\r\n"
    sig: function get_play_dep(e){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  get_games_dep:
    name: get_games_dep
    code: "function get_games_dep() {\r

      \  let d = mBy('inner_left_panel');\r

      \  d.innerHTML = \"GAMES ARE DISPLAYED HERE!\";\r

      \  get_data({ assets: nundef(Syms) }, 'games');\r

      }\r\n"
    sig: function get_games_dep(){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  get_user:
    name: get_user
    code: "function get_user(name) {\r

      \  if (nundef(name)) { get_data(queryStringToJson(), 'user_info');
      }\r

      \  else { get_data({ user: name }, 'user_info'); }\r

      }\r\n"
    sig: function get_user(name){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  get_data_orig:
    name: get_data_orig
    code: "function get_data_orig(find, type) {\r

      \  if (is_online()) {\r

      \    get_data_online(find, type);\r

      \  } else {\r

      \    if (type == 'chat') {\r

      \      alert('no internet!');\r

      \      mClassReplace(mBy(\"label_chat\"), 'enabled', 'disabled');\r

      \    }\r

      \    get_data_offline(find, type);\r

      \  }\r

      }\r\n"
    sig: function get_data_orig(find, type){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  get_data_online_orig:
    name: get_data_online_orig
    code: "function get_data_online_orig(find, type) { \r

      \  var xml = new XMLHttpRequest();\r

      \  var loader_holder = mBy(\"loader_holder\");\r

      \  loader_holder.className = \"loader_on\";\r

      \  xml.onload = function () {\r

      \    if (xml.readyState == 4 || xml.status == 200) {\r

      \      loader_holder.className = \"loader_off\";\r

      \      handle_result(xml.responseText, type);\r

      \    }\r

      \  }\r

      \  var data = {};\r

      \  data.find = find;\r

      \  data.data_type = type;\r

      \  data = JSON.stringify(data);\r

      \  xml.open(\"POST\", \"server/api.php\", true);\r

      \  xml.send(data);\r

      }\r\n"
    sig: function get_data_online_orig(find, type){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  get_data_offline_orig:
    name: get_data_offline_orig
    code: "function get_data_offline_orig(find, type) {\r

      \  let response = {};\r

      \  switch (type) {\r

      \    case 'user_info':\r

      \    case 'account':\r

      \      if (nundef(find.user)) find.user = Session.cur_user;\r

      \      let u = response.message = DB.users[find.user];\r

      \      response.name = u.username;\r

      \      break;\r

      \    case 'contacts':\r

      \      let usernames = Object.keys(DB.users).filter(x => x !=
      Session.cur_user);\r

      \      response.myusers = usernames.map(x => DB.users[x]);\r

      \      break;\r

      \  }\r

      \  response.data_type = type;\r

      \  handle_result(JSON.stringify(response), type);\r

      }\r\n"
    sig: function get_data_offline_orig(find, type){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  handle_result_orig:
    name: handle_result_orig
    code: "function handle_result_orig(result, type) {\r

      \  if (result.trim() == \"\") return;\r

      \  var obj = JSON.parse(result);\r

      \  if ('contacts chats games play account'.includes(type))
      Session.cur_menu = type; \r

      \  switch (obj.data_type) {\r

      \    case \"user_info\":\r

      \      ensure_assets_old(obj);\r

      \      start_with_basic_assets();\r

      \      break;\r

      \    case \"contacts\":\r

      \      var inner_left_panel = mBy(\"inner_left_panel\");\r

      \      inner_left_panel.innerHTML =
      createContactsContent(obj.myusers, obj.msgs);\r

      \      Session.others = obj.myusers.map(x => x.id);\r

      \      for (const u of obj.myusers) { add_live_user(u); }\r

      \      break;\r

      \    case \"games\":\r

      \      ensure_assets(obj);\r

      \      mBy('inner_left_panel').innerHTML =
      createGamesContent(dict2list(DB.games), obj.tables);\r

      \      mCenterCenterFlex(mBy('game_menu'));\r

      \      break;\r

      \    case \"chats\":\r

      \      if (isEmpty(Session.cur_chatter)) Session.cur_chatter =
      obj.other.username;\r

      \      console.log('CURRENT_CHAT_USER',Session.cur_chatter);\r

      \      SEEN_STATUS = false;\r

      \      var inner_left_panel = mBy(\"inner_left_panel\");\r

      \      inner_left_panel.innerHTML = obj.mydata;\r

      \      inner_left_panel.innerHTML =
      createMessageContent(obj.messages, obj.me, obj.other);\r

      \      var messages_holder = mBy(\"messages_holder\");\r

      \      setTimeout(function () {\r

      \        messages_holder.scrollTo(0,
      messages_holder.scrollHeight);\r

      \        var message_text = mBy(\"message_text\");\r

      \        message_text.focus();\r

      \      }, 100);\r

      \      break;\r

      \    case \"play\":\r

      \      ensure_assets(obj);\r

      \      game_resume_or_start();\r

      \      break;\r

      \    case 'account':\r

      \      mBy(\"inner_left_panel\").innerHTML = is_online() ?
      createAccountContent(obj.message) :
      createAccountContentNoDD(obj.message);\r

      \      break;\r

      \    case \"send_message\":\r

      \      sent_audio.play();\r

      \      get_chat();\r

      \      break;\r

      \    case \"dbsave\":\r

      \      break;\r

      \    case \"send_image\":\r

      \      alert(obj.message);\r

      \      get_chat();\r

      \      break;\r

      \    case \"chats_refresh\":\r

      \      SEEN_STATUS = false;\r

      \      var messages_holder = mBy(\"messages_holder\");\r

      \      messages_holder.innerHTML = obj.messages;\r

      \      if (typeof obj.new_message != 'undefined') {\r

      \        if (obj.new_message) {\r

      \          received_audio.play();\r

      \          setTimeout(function () {\r

      \            messages_holder.scrollTo(0,
      messages_holder.scrollHeight);\r

      \            var message_text = mBy(\"message_text\");\r

      \            message_text.focus();\r

      \          }, 100);\r

      \        }\r

      \      }\r

      \      break;\r

      \    case 'save_account':\r

      \      throw (\"NEEEEEEEEEEEEEEEEEIIIIIIIIIIIIIIIIIIIIIIIIIN\");\r

      \      if (obj.changed) window.location = \"index.html?user=\" +
      obj.message.username;\r

      \      else console.log('STILL SAME USERNAME',
      obj.message.username);\r

      \      break;\r

      \  }\r

      }\r\n"
    sig: function handle_result_orig(result, type){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  image_show:
    name: image_show
    code: "function image_show(e) {\r

      \  var image = e.target.src;\r

      \  var image_viewer = mBy(\"image_viewer\");\r

      \  image_viewer.innerHTML = \"<img src='\" + image + \"'
      style='width:100%' />\";\r

      \  image_viewer.className = \"image_on\";\r

      }\r\n"
    sig: function image_show(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  reload:
    name: reload
    code: "function reload() {\r

      \  console.log('reload!!!')\r

      \  if (radio_contacts.checked == true) get_contacts();\r

      \  else if (radio_chat.checked == true) get_chats();\r

      \  else if (radio_games.checked == true) get_games();\r

      \  else if (radio_play.checked == true) get_play();\r

      }\r\n"
    sig: function reload(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  send_message:
    name: send_message
    code: "function send_message(e) {\r

      \  e.cancelBubble = true;\r

      \  var message_text = mBy(\"message_text\");\r

      \  if (message_text.value.trim() == \"\") {\r

      \    alert(\"please type something to send\");\r

      \    return;\r

      \  }\r

      \  get_data({\r

      \    message: message_text.value.trim(),\r

      \    username: CURRENT_CHAT_USER\r

      \  }, \"send_message\");\r

      }\r\n"
    sig: function send_message(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  sendHtml_dep:
    name: sendHtml_dep
    code: "function sendHtml_dep(id, filename) {\r

      \  window.scrollTo(0, 0);\r

      \  html2canvas(document.getElementById(id)).then(function (canvas)
      {\r

      \    let imgData = canvas.toDataURL(\"image/jpeg\", 0.9);\r

      \    var profile_image = mBy(\"profile_image\");\r

      \    profile_image.src = imgData;\r

      \    mBy('imgPreview').src = imgData;\r

      \    var ajax = new XMLHttpRequest();\r

      \    ajax.open(\"POST\", \"server/save_url_encoded_image.php\",
      true);\r

      \    ajax.setRequestHeader(\"Content-type\",
      \"application/x-www-form-urlencoded\");\r

      \    ajax.send(\"image=\" + canvas.toDataURL(\"image/jpeg\", 0.9) +
      \"&filename=\" + filename + \".jpg\");\r

      \    ajax.onreadystatechange = function () {\r

      \      if (this.readyState == 4 && this.status == 200) {\r

      \        console.log('RESPONSE IMAGE UPLOAD!!!!!!!',
      this.responseText);\r

      \        window.location.replace('index.html');\r

      \      }\r

      \    };\r

      \  });\r

      }\r\n"
    sig: function sendHtml_dep(id, filename){}
    region: api (leg_chatas.js)
    filename: leg_chatas.js
    type: func
    fname: leg_chatas.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_chatas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 19888
  send_image:
    name: send_image
    code: "function send_image(files) {\r

      \  console.log('files', files);\r

      \  var filename = files[0].name;\r

      \  var ext_start = filename.lastIndexOf(\".\");\r

      \  var ext = filename.substr(ext_start + 1, 3);\r

      \  if (!(ext == \"jpg\" || ext == \"JPG\")) {\r

      \    alert(\"This file type is not allowed\");\r

      \    return;\r

      \  }\r

      \  var xml = new XMLHttpRequest();\r

      \  xml.onload = function () {\r

      \    if (xml.readyState == 4 || xml.status == 200) {\r

      \      handle_result(xml.responseText, \"send_image\");\r

      \    }\r

      \  }\r

      \  let data = new FormData();\r

      \  data.append('file', files[0]);\r

      \  data.append('data_type', \"send_image\");\r

      \  data.append('sender', Username);\r

      \  data.append('receiver', CURRENT_CHAT_USER);\r

      \  xml.open(\"POST\", \"uploader.php\", true);\r

      \  xml.send(data);\r

      }\r\n"
    sig: function send_image(files){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  set_seen:
    name: set_seen
    code: "function set_seen(e) { SEEN_STATUS = true; }\r\n"
    sig: function set_seen(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  start_chat:
    name: start_chat
    code: "function start_chat(e) {\r

      \  e.preventDefault(); e.cancelBubble = true;\r

      \  var username = e.target.getAttribute(\"username\");\r

      \  if (e.target.id == \"\") {\r

      \    username = e.target.parentNode.getAttribute(\"username\");\r

      \  }\r

      \  CURRENT_CHAT_USER = username;\r

      \  get_chats();\r

      \  mBy(\"radio_chat\").checked = true;\r

      }\r\n"
    sig: function start_chat(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  start_game:
    name: start_game
    code: "function start_game() {\r

      \  let gamename = DA.gamename;\r

      \  let options = collect_game_specific_options(gamename);\r

      \  let players = DA.playerlist ? DA.playerlist.map(x => ({ name:
      x.uname, playmode: x.playmode, strategy: valf(x.strategy,
      options.strategy, 'random') })) :
      create_random_players(options.nplayers);\r

      \  _start_game(gamename, players, options); hide('dMenu');\r

      }\r\n"
    sig: function start_game(){}
    region: game (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  toggleSidebar:
    name: toggleSidebar
    code: "function toggleSidebar(ev, k, key) {\r

      \  if (nundef(DA.countKey)) { DA.countKey = {}; }\r

      \  if (nundef(DA.countKey[k])) { DA.countKey[k] = 0; }\r

      \  DA.countKey[k]++;\r

      \  let isOdd = DA.countKey[k] % 2 == 1;\r

      \  if (key == 'Escape' || ev.ctrlKey && k == 122) {\r

      \    if (isOdd) { \r

      \      mBy('left_panel').style.flex = 0;\r

      \      setTimeout(() => {\r

      \        show('mini_profile_img');\r

      \        show('mini_username');\r

      \      }, 500)\r

      \      mBy('mini_menu_right').style.display = 'flex';\r

      \    } else {  \r

      \      mBy('left_panel').style.flex = 1;\r

      \      hide('mini_profile_img');\r

      \      hide('mini_username');\r

      \      mBy('mini_menu_right').style.display = 'none';\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function toggleSidebar(ev, k, key){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  setFullscreenKey:
    name: setFullscreenKey
    code: "function setFullscreenKey() {\r

      \  addKeyup('F11', (ev) => {\r

      \    let k = ev.keyCode;\r

      \    let key = ev.key;\r

      \    toggleSidebar(ev, k, key);\r

      \  });\r

      }\r\n"
    sig: function setFullscreenKey(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  setReloadOnClick:
    name: setReloadOnClick
    code: "function setReloadOnClick() {\r

      \  window.onclick = (ev) => {\r

      \    if (!['dStatusLine', 'header', 'inner_left_panel',
      'left_panel'].includes(ev.target.id)) return;\r

      \    reload();\r

      \    mBy('dStatusLine').innerHTML = 'last reload: ' + formatNow();\r

      \  };\r

      }\r\n"
    sig: function setReloadOnClick(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  reload_prompt:
    name: reload_prompt
    code: "function reload_prompt(fen) {\r

      \  console.assert(!uiActivated, 'open_prompt with uiActivated ON
      !!!!!!!!!!!!!!!!!!!!!!!!!!');\r

      \  let game = Session.cur_game;\r

      \  let uname = Session.cur_user;\r

      \  let g = Session;\r

      \  let next = lookup(DB.games, [game]); if (next) copyKeys(next, g);
      \r

      \  next = lookup(DB.users, [uname, 'games', game]); if (next)
      copyKeys(next, g); \r

      \  let level = g.level = valf(g.startlevel, g.def_startlevel);\r

      \  lookupSet(DB.users, [uname, 'games', game, 'startlevel'],
      level);\r

      \  next = lookup(DB.games, [game, 'levels']);\r

      \  if (next) copyKeys(next[level], g);\r

      \  g.maxlevel = valf(get_keys(next).length, 0) - 1;\r

      \  g.color = getColorDictColor(g.color);\r

      \  g.winning_score = Session.cur_table.options.winning_score; \r

      \  delete g.levels;\r

      \  clearTable(); set_background_color(g.color); \r

      \  QContextCounter += 1;\r

      \  show_game_name(g.friendly);\r

      \  show_title(g.table.friendly);\r

      \  show_level(g.level, g.maxlevel);\r

      \  if (Session.is_badges) setBadgeLevel(g.level);\r

      \  g.startTime = get_timestamp();\r

      \  mLinebreak(dTable, 15);\r

      \  let items = g.items = spotit_deal(g.num_cards, g.rows, g.cols,
      g.vocab, g.lang, g.min_scale, g.max_scale, fen);\r

      \  Selected = null;\r

      }\r\n"
    sig: function reload_prompt(fen){}
    region: end (work_help.js)
    filename: work_help.js
    type: func
    fname: work_help.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\work_help.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 34297
  testCardsGridOverlap:
    name: testCardsGridOverlap
    code: "function testCardsGridOverlap(){\r

      \  dTable = stdGridContainer(dMiddle);\r

      \  testAdd10Cards();\r

      }\r\n"
    sig: function testCardsGridOverlap(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  testCardsNoOverlap:
    name: testCardsNoOverlap
    code: "function testCardsNoOverlap(){\r

      \  dTable = stdContainerRowWrap(dMiddle);\r

      \  testAdd10Cards();\r

      }\r\n"
    sig: function testCardsNoOverlap(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  testAdd10Cards:
    name: testAdd10Cards
    code: "function testAdd10Cards(){\r

      \  let uilist = [],ch;\r

      \  for (let i = 0; i < 10; i++) {\r

      \    if (coin()){\r

      \      let card = Card52.getItem();\r

      \      ch = iDiv(card);\r

      \      mAppend(dTable,ch);\r

      \    }else{\r

      \      ch = mDiv(dTable,{w:76,h:110,bg:'random'});\r

      \      mClass(ch,'card');\r

      \    }\r

      \    uilist.push(ch);\r

      \  }\r

      }\r\n"
    sig: function testAdd10Cards(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  prelim:
    name: prelim
    code: "function prelim(){\r

      \  mStyle(dMain,{bg:'random'});\r

      \  let prefix = 'title';\r

      \  let title = 'Aristocracy';\r

      \  let dTitleOuter = mDiv(dMain, { bg: '#000000', alpha: .6,
      display: 'flex', 'flex-flow': 'row' });\r

      \  let dTitleLeft = mDiv(dTitleOuter, { w: 100 },
      `d${prefix}Left`);\r

      \  let dTitleMiddle = mDiv(dTitleOuter, { align: 'center', flex: '1
      0 auto' }, `d${prefix}Middle`, title);\r

      \  mCenterCenterFlex(dTitleMiddle);\r

      \  let dTitleRight = mDiv(dTitleOuter, { align: 'right', wmin: 100,
      overflow: 'hidden' }, `d${prefix}Right`);\r

      \  //#endregion\r

      \  //#region *** MAIN DIV ***\r

      \  let dOuter = mDiv(dMain, { flex: 1, display: 'flex', 'flex-flow':
      'row' });\r

      \  let dLeft = mDiv(dOuter, { bg: '#000000', alpha: .3, align:
      'center' }, 'dLeft');\r

      \  let dMiddle = mDiv(dOuter, { flex: 1, position: 'relative', bg:
      '#ffffff', alpha: .3}, 'dMiddle');\r

      \  let dRight = mDiv(dOuter, { bg: '#000000', alpha: .3, align:
      'center' }, 'dRight');\r

      \  mAddContentAndMeasureW(dLeft, 'left', { hpadding: 12 });\r

      \  mAddContentAndMeasureW(dRight, 'right', { hpadding: 12 });\r

      \  //#endregion\r

      \  //#region FOOTER\r

      \  let dFooter = mDiv(dMain, { bg: '#000000', alpha: .5, paleft: 10
      }, 'dFooter', 'footer');\r

      \  let bMenuLeft = stdMenuButton(dTitleLeft);\r

      \  stdSidebarController(bMenuLeft, 'dLeft');\r

      \  let bMenuRight = stdMenuButton(dTitleRight);\r

      \  stdSidebarController(bMenuRight, 'dRight');\r

      \  mButton('+', addRandomContentToSidebarOrTable, dTitleLeft, { },
      'mybutton');\r

      \  let w = getRect(dMiddle).w;\r

      \  //#endregion\r

      }\r\n"
    sig: function prelim(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  stdFlexContainer:
    name: stdFlexContainer
    code: "function stdFlexContainer(dParent,styles={}){\r

      \  addKeys({  wmax: '96%',\r

      \  margin: 'auto', \r

      \  padding: 10,\r

      \  gap:10, \r

      \  display:'flex',\r

      \  flex:'1 0 auto',\r

      \  wrap: true,},styles);\r

      \  return mDiv(dParent,styles);\r

      }\r\n"
    sig: function stdFlexContainer(dParent,styles={}){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  stdContainerRowWrap:
    name: stdContainerRowWrap
    code: "function stdContainerRowWrap(dParent){ return
      stdFlexContainer(dParent);}\r\n"
    sig: function stdContainerRowWrap(dParent){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  stdContainerColWrap:
    name: stdContainerColWrap
    code: "function stdContainerColWrap(dParent){return
      stdFlexContainer(dParent,{dir:'col'});}\r\n"
    sig: function stdContainerColWrap(dParent){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  stdContainerCenterRowWrap:
    name: stdContainerCenterRowWrap
    code: "function stdContainerCenterRowWrap(dParent){ return
      stdFlexContainer(dParent,{'justify-content':'center'});}\r\n"
    sig: function stdContainerCenterRowWrap(dParent){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  stdContainerCenterColWrap:
    name: stdContainerCenterColWrap
    code: "function stdContainerCenterColWrap(dParent){return
      stdFlexContainer(dParent,{dir:'col','align-content':'center'});}\r\n"
    sig: function stdContainerCenterColWrap(dParent){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  muiCard:
    name: muiCard
    code: "function muiCard(key,dParent,styles,classes){\r

      }\r\n"
    sig: function muiCard(key,dParent,styles,classes){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  recFindDOMs:
    name: recFindDOMs
    code: "function recFindDOMs(o){\r

      \  if (!isDict(o)) return [];\r

      \  if (isDOM(iDiv(o))) return [iDiv(o)];\r

      \  let akku=[];\r

      \  for(const k in o){\r

      \    let val = o[k];\r

      \    akku = akku.concat(recFindDOMs(val));\r

      \  }\r

      \  return akku;\r

      }\r\n"
    sig: function recFindDOMs(o){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  isSimpleType:
    name: isSimpleType
    code: "function isSimpleType(type) { return !['list', 'object'].includes(type);
      }\r\n"
    sig: function isSimpleType(type){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  randomType:
    name: randomType
    code: "function randomType(onlySimple = false) {\r

      \  let complexTypes = ['list'];\r

      \  let simpleTypes = ['number', 'string', 'varLenString', 'C52',
      'Card52'];//'card'?,'html','DOM'];\r

      \  let allTypes = complexTypes.concat(simpleTypes);\r

      \  type = chooseRandom(onlySimple ? simpleTypes : allTypes);\r

      \  return type;\r

      }\r\n"
    sig: function randomType(onlySimple = false){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  randomObject:
    name: randomObject
    code: "function randomObject(len = 3, onlySimple = true, elTypes) {\r

      \  if (nundef(elTypes)) { elTypes = Array.from({ length: len, }, ()
      => randomType(true)); }\r

      \  let result = { id:getUID('o')};\r

      \  let i=0;\r

      \  for(const t of elTypes){\r

      \    let key = t+'_'+i; i+=1;\r

      \    let val = randomContent(t);\r

      \    result[key]=isdef(val.content)?val.content:val;\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function randomObject(len = 3, onlySimple = true, elTypes){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  randomList:
    name: randomList
    code: "function randomList(len = 3, onlySimple = true, elType) {\r

      \  if (nundef(elType)) { elType = randomType(onlySimple); }\r

      \  let result = [];\r

      \  for (let i = 0; i < len; i++) {\r

      \    let c = randomContent(elType);\r

      \    result.push(isdef(c.content) ? c.content : c);\r

      \  }\r

      \  return { content: result, elType: elType };\r

      }\r\n"
    sig: function randomList(len = 3, onlySimple = true, elType){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  randomContent:
    name: randomContent
    code: "function randomContent(type) {\r

      \  if (nundef(type)) { type = randomType(); }\r

      \  let content = window['random' + capitalize(type)]();\r

      \  if (isDict(content)) { content.type = type; } else content = {
      content: content, type: type };\r

      \  return content;\r

      }\r\n"
    sig: function randomContent(type){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  addRandomContentToSidebarOrTable:
    name: addRandomContentToSidebarOrTable
    code: "function addRandomContentToSidebarOrTable() {\r

      \  console.log('clicked!');\r

      \  let content = randomContent();\r

      \  console.log('content is type', type, '=>', content);\r

      \  let d = chooseRandom([mBy('dLeft'), mBy('dRight'), dTable]);\r

      \  mAddContentAndMeasureW(dTable, content);\r

      }\r\n"
    sig: function addRandomContentToSidebarOrTable(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  randomVowel:
    name: randomVowel
    code: "function randomVowel() { let s = 'aeiouy'; return s[randomNumber(0,
      s.length - 1)]; }\r\n"
    sig: function randomVowel(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomConsonant:
    name: randomConsonant
    code: "function randomConsonant() { let s = 'bcdfghjklmnpqrstvwxz'; return
      s[randomNumber(0, s.length - 1)]; }\r\n"
    sig: function randomConsonant(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomVarLenString:
    name: randomVarLenString
    code: "function randomVarLenString(lmin = 3, lmax = 12, startLetter) { let len =
      randomNumber(lmin, lmax); return randomString(len, startLetter); }\r\n"
    sig: function randomVarLenString(lmin = 3, lmax = 12, startLetter){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  randomString:
    name: randomString
    code: "function randomString(len = 4, startLetter) {\r

      \  let s = '';\r

      \  if (isdef(startLetter)) { s = startLetter; len -= 1; }\r

      \  let isVowel = coin() ? true : false;\r

      \  for (let i = 0; i < len; i++) {\r

      \    if (isVowel) s += randomVowel(); else s += randomConsonant();\r

      \    isVowel = !isVowel;\r

      \  }\r

      \  return s;\r

      }\r\n"
    sig: function randomString(len = 4, startLetter){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  outputContent:
    name: outputContent
    code: "function outputContent(content){\r

      \  if (content.type == 'list') {\r

      \    console.log('list of', content.elType, content.content);\r

      \  } else {\r

      \    console.log('content', content);\r

      \  }\r

      }\r\n"
    sig: function outputContent(content){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\cards\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691878.8552
    size: 6551
  makePage:
    name: makePage
    code: "function makePage(){\r

      \  var dMain = document.getElementById('dMain');\r

      \  mStyle(dMain, { bg: 'indigo' });\r

      \  let [dHeaderLeft, dTitle, dHeaderRight] = std3title(dMain,
      'Aristocracy', { family: 'AlgerianRegular' }); \r

      \  let [dLeft, dMiddle, dRight] = std3fold(dMain);\r

      \  let dFooter = mDiv(dMain, { bg: '#00000050' }, 'dFooter',
      'footer');\r

      \  let bMenuLeft = stdMenuButton(dHeaderLeft);\r

      \  stdSidebarController(bMenuLeft, 'dLeft');\r

      \  let bMenuRight = stdMenuButton(dHeaderRight);\r

      \  stdSidebarController(bMenuRight, 'dRight');\r

      \  return dMiddle;\r

      }\r\n"
    sig: function makePage(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  stdMenuButton:
    name: stdMenuButton
    code: "function stdMenuButton(parent, styles={}) { return
      mButton(UnicodeSymbols.menu, null, parent, styles, 'mybutton'); }\r\n"
    sig: function stdMenuButton(parent, styles={}){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  stdSidebarController:
    name: stdSidebarController
    code: "function stdSidebarController(button, id) {\r

      \  let [ms, easing] = [500, 'cubic-bezier(.1,.67,.81,.68)'];\r

      \  button.onclick = () => {\r

      \    let d = mBy(id);\r

      \    let open = nundef(d.isOpen) || d.isOpen == true;\r

      \    d.isOpen = !open;\r

      \    let [from, to] = open ? [100, 0] : [0, 100];\r

      \    d.animate([{ width: `${from}px` }, { width: `${to}px` }], {
      duration: ms, easing: easing });\r

      \    setTimeout(() => d.style.width = `${to}px`, ms - 10);\r

      \  }\r

      }\r\n"
    sig: function stdSidebarController(button, id){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  std3title:
    name: std3title
    code: "function std3title(dMain,title, titleStyles) {\r

      \  let prefix = 'title';\r

      \  let dOuter = mDiv(dMain, { bg: '#000000', alpha:.5, display:
      'flex', 'flex-flow': 'row'});\r

      \  let dLeft = mDiv(dOuter, { w: 100 }, `d${prefix}Left`);\r

      \  let dMiddle = mDiv(dOuter, {  align:'center', flex: '1 0 auto' },
      `d${prefix}Middle`, title);\r

      \  mCenterCenterFlex(dMiddle);\r

      \  if (isdef(titleStyles)) mStyle(dMiddle,titleStyles);\r

      \  let dRight = mDiv(dOuter, { align:'right', wmin: 100, overflow:
      'hidden' }, `d${prefix}Right`);\r

      \  return [dLeft, dMiddle, dRight];\r

      }\r\n"
    sig: function std3title(dMain,title, titleStyles){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  std3fold:
    name: std3fold
    code: "function std3fold(dMain) {\r

      \  let dOuter = mDiv(dMain, {  flex: '1 0 auto', display: 'flex',
      'flex-flow': 'row' });\r

      \  let dLeft = mDiv(dOuter, { w: 100 }, 'dLeft', 'left');\r

      \  let dMiddle = mDiv(dOuter, {position:'relative', bg:'#ffffff80',
      flex: '1 0 auto' }, 'dMiddle');\r

      \  let dRight = mDiv(dOuter, { w: 100, overflow: 'hidden' },
      'dRight', 'right');\r

      \  return [dLeft, dMiddle, dRight];\r

      }\r\n"
    sig: function std3fold(dMain){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  std2fold:
    name: std2fold
    code: "function std2fold(dMain) {\r

      \  let dOuter = mDiv(dMain, { bg: 'random', flex: '1 0 auto',
      display: 'flex', 'flex-flow': 'row wrap' });\r

      \  let dLeft = mDiv(dOuter, { bg: 'random', w: 100 }, 'dLeft',
      'left');\r

      \  let dMiddle = mDiv(dOuter, { bg: 'random', flex: '1 0 auto' },
      'dMiddle', 'middle');\r

      \  return [dLeft, dMiddle];\r

      }\r\n"
    sig: function std2fold(dMain){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  mRight:
    name: mRight
    code: "function mRight(dParent, d, margin = 0) {\r

      \  mStyle(dParent, { display: 'flex', 'justify-content':
      'space-between', 'align-items': 'center' });\r

      \  mAppend(dParent, d);\r

      \  mStyle(d, { margin: margin, 'align-self': 'flex-end' });\r

      \  return d;\r

      }\r\n"
    sig: function mRight(dParent, d, margin = 0){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  mLeft:
    name: mLeft
    code: "function mLeft(dParent, d, margin = 0) {\r

      \  mStyle(dParent, { display: 'flex', 'justify-content':
      'space-between', 'align-items': 'center' });\r

      \  mInsertFirst(dParent, d);\r

      \  mStyle(d, { margin: margin, 'align-self': 'flex-start' });\r

      \  return d;\r

      }\r\n"
    sig: function mLeft(dParent, d, margin = 0){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  animateStyles:
    name: animateStyles
    code: "function animateStyles(d, styles1, styles2, ms) {\r

      \  d.style.transition = `${ms}ms`;\r

      \  mStyle(d, styles2);\r

      }\r\n"
    sig: function animateStyles(d, styles1, styles2, ms){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  pageLayout33:
    name: pageLayout33
    code: "function pageLayout33() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  let dHeader = mDiv(dMain, { bg: 'random' }, 'dHeader',
      'header');\r

      \  let dOuter = mDiv(dMain, { bg: 'random', flex: '1 0 auto',
      display: 'flex', 'flex-flow': 'row wrap' });\r

      \  let dLeft = mDiv(dOuter, { bg: 'random', flex: '0 0 200px' },
      'dLeft', 'left');\r

      \  let dMiddle = mDiv(dOuter, { bg: 'random', flex: '1 0 auto' },
      'dMiddle', 'middle');\r

      \  let dRight = mDiv(dOuter, { bg: 'random', flex: '0 0 200px' },
      'dRight', 'right');\r

      \  let dFooter = mDiv(dMain, { bg: 'random' }, 'dFooter',
      'footer');\r

      \  return {\r

      \    dHeader: dHeader,\r

      \    dLeft: dLeft,\r

      \    dRight: dRight,\r

      \    dMiddle: dMiddle,\r

      \    dFooter, dFooter\r

      \  }\r

      }\r\n"
    sig: function pageLayout33(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\caristo\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3853
  testMuell0:
    name: testMuell0
    code: "function testMuell0(){\r

      \  dTable = makePage(); \r

      \  mStyle(dTable,{display:'flex',})\r

      \  let dGrid = mDiv(dTable, { wmin:110, hmin:70, bg: 'white',
      padding: 3, rounding: 6 });\r

      \  let d = mTitledMessageDiv('title', dGrid, 'id1', \r

      \  { bg: 'green', rounding: 6 }, \r

      \  { lowerRounding: 6 },\r

      \  { bg: 'dimgray', align:'center', 'line-height':30, family:
      'AlgerianRegular', upperRounding: 6 }, \r

      \  { fg: 'yellow', padding:10 }, \r

      \  true);\r

      }\r\n"
    sig: function testMuell0(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  testMakeAreas:
    name: testMakeAreas
    code: "function testMakeAreas(dParent) {\r

      \  let dGrid = mDiv(dParent, { gap: 10, bg: 'white', w: '90%',
      padding: 10, display: 'inline-grid', rounding: 10 }, 'dGrid');\r

      \  let layout = ['T', 'H A'];\r

      \  let x = createGridLayout(dGrid, layout); \r

      \  let areaStyles = { bg: 'green', hmin:200, rounding: 6 };\r

      \  let contentStyles = { lowerRounding: 6 };\r

      \  let messageStyles = { fg: 'yellow' };\r

      \  let titleStyles = { bg: 'dimgray', family: 'AlgerianRegular',
      upperRounding: 6 };\r

      \  let areas = {\r

      \    T: { title: 'table', id: 'dTrick', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles, titleOnTop: true
      },\r

      \    H: { title: 'YOU', id: 'dHuman', showTitle: true, messageArea:
      true, areaStyles: areaStyles, contentStyles: contentStyles, messageStyles:
      messageStyles, titleStyles: titleStyles, titleOnTop: false },\r

      \    A: { title: 'opponent', id: 'dAI', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles, titleOnTop: false
      },\r

      \  };\r

      \  let items = [];\r

      \  for (const k in areas) {\r

      \    let item = areas[k];\r

      \    item.areaStyles['grid-area'] = k;\r

      \    let dCell = mTitledMessageDiv(item.title, dGrid, item.id,
      item.areaStyles, item.contentStyles, item.titleStyles, item.messageStyles,
      item.titleOnTop)\r

      \    iRegister(item, item.id);\r

      \    if (item.titleOnTop) iAdd(item, { div: dCell, dTitle:
      dCell.children[0], dMessage: dCell.children[1], dContent:
      dCell.children[2] });\r

      \    else iAdd(item, { div: dCell, dTitle: dCell.children[2],
      dMessage: dCell.children[0], dContent: dCell.children[1] });\r

      \    mCenterCenterFlex(diContent(item));\r

      \    mStyle(diContent(item), { gap: 10 });\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function testMakeAreas(dParent){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  presentSimpleVal:
    name: presentSimpleVal
    code: "function presentSimpleVal(d, item) {\r

      \  let d1 = mDiv(d, { display: 'inline-block', bg: 'random',
      rounding: 10, margin: 10, padding: 10 });\r

      \  d1.innerHTML = item;\r

      }\r\n"
    sig: function presentSimpleVal(d, item){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  present0:
    name: present0
    code: "function present0(dParent, item) {\r

      \  for (const k in item) {\r

      \    val = item[k];\r

      \    let d = mDiv(dParent, { display: 'inline-block', bg: 'random',
      rounding: 10, margin: 10, padding: 10 });\r

      \    if (isDict(val)) {\r

      \      present0(d, val);\r

      \    } else if (isList(val)) {\r

      \      val.map(x => presentSimpleVal(d, x));\r

      \    } else {\r

      \      presentSimpleVal(d, val);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function present0(dParent, item){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  pTest0:
    name: pTest0
    code: "function pTest0() {\r

      \  let state = DB.tables.t0;\r

      \  console.log('state', state);\r

      \  let dMiddle = makePage();\r

      \  mStyle(dMiddle, { padding: 20, overflow: 'auto' });\r

      \  mCenterCenterFlex(dMiddle)\r

      \  let dTable = mDiv100(dMiddle, { wmax: 800, box: true, rounding:
      12 });\r

      \  dTable.style.overflow = 'auto';\r

      \  console.log('dTable', dTable)\r

      \  present0(dTable, state);\r

      \  return;\r

      \  mCenterCenterFlex(dTable);\r

      \  let d1 = mDiv(dTable);\r

      \  let d2 = present_structured1(d1, state);\r

      }\r\n"
    sig: function pTest0(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test12_backToPresent:
    name: test12_backToPresent
    code: "function test12_backToPresent() {\r

      \  dMenu = mMenuLine(dMain);\r

      \  dMenu.style.display = 'block';\r

      \  let bToggle = mMenuButton(dMenu);\r

      \  let d = mDiv(dMain);\r

      \  mCenterFlex(d);\r

      \  let d1 = present_structured1(d, state);\r

      \  let sb = iSidebar(mDiv(d), d1, bToggle, 40, true);\r

      }\r\n"
    sig: function test12_backToPresent(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test11_besseresColoring:
    name: test11_besseresColoring
    code: "function test11_besseresColoring() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  mStyle(dMain, { bg: 'indigo' });\r

      \  let [dHeaderLeft, dTitle, dHeaderRight] = std3title(dMain,
      'Aristocracy', { family: 'AlgerianRegular' }); \r

      \  let [dLeft, dMiddle, dRight] = std3fold(dMain);\r

      \  let dFooter = mDiv(dMain, { bg: '#00000050' }, 'dFooter',
      'footer');\r

      \  let bMenuLeft = stdMenuButton(dHeaderLeft);\r

      \  stdSidebarController(bMenuLeft, 'dLeft');\r

      \  let bMenuRight = stdMenuButton(dHeaderRight);\r

      \  stdSidebarController(bMenuRight, 'dRight');\r

      }\r\n"
    sig: function test11_besseresColoring(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test10:
    name: test10
    code: "function test10(list){\r

      \  console.log('codebase list',list);\r

      \  let text=list.map(x=>x.text).join('\\n');\r

      \  let funcnames = list[0].di.func;\r

      \  addModuleExports(funcnames);\r

      }\r\n"
    sig: function test10(list){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test9:
    name: test9
    code: "function test9() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  let [dHeaderLeft, dTitle, dHeaderRight] = std3title(dMain,
      'Aristocracy'); \r

      \  let [dLeft, dMiddle] = std2fold(dMain);\r

      \  let dFooter = mDiv(dMain, { bg: 'random' }, 'dFooter',
      'footer');\r

      \  let bMenuLeft = stdMenuButton(dHeaderLeft);\r

      \  stdSidebarController(bMenuLeft, 'dLeft');\r

      }\r\n"
    sig: function test9(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test8:
    name: test8
    code: "function test8() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  let dHeader = mDiv(dMain, { bg: 'random' }, 'dHeader',
      'header');\r

      \  let [dLeft, dMiddle] = std2fold(dMain);\r

      \  let dFooter = mDiv(dMain, { bg: 'random' }, 'dFooter',
      'footer');\r

      \  let bMenuLeft = stdMenuButton();\r

      \  mLeft(dHeader, bMenuLeft);\r

      \  stdSidebarController(bMenuLeft, 'dLeft');\r

      }\r\n"
    sig: function test8(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test7:
    name: test7
    code: "function test7() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  let dHeader = mDiv(dMain, { bg: 'random' }, 'dHeader',
      'header');\r

      \  let [dLeft, dMiddle, dRight] = std3fold(dMain);\r

      \  let dFooter = mDiv(dMain, { bg: 'random' }, 'dFooter',
      'footer');\r

      \  let bMenuLeft = stdMenuButton();\r

      \  mLeft(dHeader, bMenuLeft);\r

      \  stdSidebarController(bMenuLeft, 'dLeft');\r

      \  let bMenuRight = stdMenuButton();\r

      \  mRight(dHeader, bMenuRight);\r

      \  stdSidebarController(bMenuRight, 'dRight');\r

      }\r\n"
    sig: function test7(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test6_33mitMenuButtons:
    name: test6_33mitMenuButtons
    code: "function test6_33mitMenuButtons() {\r

      \  let page = pageLayout33(); \r

      \  let bMenuRight = stdMenuButton();\r

      \  mRight(page.dHeader, bMenuRight);\r

      \  let bMenuLeft = stdMenuButton();\r

      \  mLeft(page.dHeader, bMenuLeft);\r

      \  dLeft.style.flex = 'unset';//'1 1 200px';\r

      \  bMenuLeft.onclick = () => {\r

      \    mStyle(mBy('dLeft'), { wmin: 0, w: 0 });\r

      \  }\r

      }\r\n"
    sig: function test6_33mitMenuButtons(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test5_33mitMenuButtons:
    name: test5_33mitMenuButtons
    code: "function test5_33mitMenuButtons() {\r

      \  let page = pageLayout33(); \r

      \  let bMenuRight = stdMenuButton();\r

      \  mRight(page.dHeader, bMenuRight);\r

      \  let bMenuLeft = stdMenuButton();\r

      \  mLeft(page.dHeader, bMenuLeft);\r

      }\r\n"
    sig: function test5_33mitMenuButtons(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test4_3rows:
    name: test4_3rows
    code: "function test4_3rows() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  let dHeader = mDiv(dMain, { bg: 'random' }, 'dHeader',
      'header');\r

      \  let dOuter = mDiv(dMain, { bg: 'random', flex: '1 0 auto',
      display: 'flex', 'flex-flow': 'row wrap' });\r

      \  let dLeft = mDiv(dOuter, { bg: 'random', flex: '0 0 200px' },
      'dLeft', 'left');\r

      \  let dMiddle = mDiv(dOuter, { bg: 'random', flex: '1 0 auto' },
      'dMiddle', 'middle');\r

      \  let dRight = mDiv(dOuter, { bg: 'random', flex: '0 0 200px' },
      'dRight', 'right');\r

      \  let dFooter = mDiv(dMain, { bg: 'random' }, 'dFooter',
      'footer');\r

      \  mSize(dHeader, '100%', 50);\r

      }\r\n"
    sig: function test4_3rows(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test3_3rows:
    name: test3_3rows
    code: "function test3_3rows() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  let dHeader = mDiv(dMain, { bg: 'random' }, 'dHeader',
      'header');\r

      \  let dOuter = mDiv(dMain, { bg: 'random', flex: '1 0 auto' },
      'dOuter', 'outer');\r

      \  let dFooter = mDiv(dMain, { bg: 'random' }, 'dFooter',
      'footer');\r

      \  mSize(dHeader, '100%', 50);\r

      }\r\n"
    sig: function test3_3rows(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test2_2rows:
    name: test2_2rows
    code: "function test2_2rows() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  let dHeader = mDiv(dMain, {}, 'dHeader', 'header', ['div1']);\r

      \  let dOuter = mDiv(dMain, {}, 'dOuter', 'outer', ['div2']);\r

      }\r\n"
    sig: function test2_2rows(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test1_3colHeaderFooter:
    name: test1_3colHeaderFooter
    code: "function test1_3colHeaderFooter() {\r

      \  var dMain = document.getElementById('dMain');\r

      \  let dHeader = mDiv(dMain, { bg: '#ABC', hmin: 150 }, 'dHeader',
      'header');\r

      \  let dOuter = mDiv(dMain, { bg: '#678', hmin: 500, display:
      'flex', 'flex-flow': 'row wrap' }, 'dOuter');\r

      \  let dLeft = mDiv(dOuter, { bg: 'random', flex: '0 0 200px' },
      'dLeft', 'left');\r

      \  let dMiddle = mDiv(dOuter, { bg: 'random', flex: '1 0 auto' },
      'dMiddle', 'middle');\r

      \  let dRight = mDiv(dOuter, { bg: 'random', flex: '0 0 200px' },
      'dRight', 'right');\r

      \  let dFooter = mDiv(dMain, { bg: '#456', hmin: 100 }, 'dFooter',
      'footer');\r

      }\r\n"
    sig: function test1_3colHeaderFooter(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  test0_divRestOfPage:
    name: test0_divRestOfPage
    code: "function test0_divRestOfPage() {\r

      \  console.log('DB', DB);\r

      \  console.log('C52', C52);\r

      \  let state = DB.tables.t0;\r

      \  console.log('state', state);\r

      \  var dMain = document.getElementById('dMain');\r

      \  let dMenu = mDiv(dMain, { bg: 'blue' }, null,
      '<span>hallo</span>');\r

      \  let bMenu = mButton(UnicodeSymbols.menu, null, null, null,
      'mybutton');\r

      \  mInsertFirst(dMenu, bMenu);\r

      \  let dRest = mDivRestOfPage(dMain, dMenu);\r

      \  let bTest = mButton('test', () => mSize(dMenu, 20, 80, '%'),
      dMenu, null, 'mybutton');\r

      }\r\n"
    sig: function test0_divRestOfPage(){}
    region: testing (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\caristo\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 10896
  queryStringToJson:
    name: queryStringToJson
    code: "function queryStringToJson() {\r

      \  let q = window.location.search;\r

      \  if (isEmpty(q)) return {};\r

      \  q = q.substring(1);\r

      \  let result = {};\r

      \  let parts = q.split('&');\r

      \  for (const p of parts) {\r

      \    let key = stringBefore(p, '=');\r

      \    let val = stringAfter(p, '=');\r

      \    result[key] = val;\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function queryStringToJson(){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  rAreas:
    name: rAreas
    code: "function rAreas() {\r

      \  let d1=mDiv(dTable,{bg:'blue',w:800,h:600},'d1');\r

      \  SPEC={views:{d1:{layout:['T','P O']}}};\r

      \  console.log(SPEC)\r

      \  for (const k in SPEC.views) { createLayout(k,
      SPEC.views[k].layout); }\r

      }\r\n"
    sig: function rAreas(){}
    region: var (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  createLayout:
    name: createLayout
    code: "function createLayout(dParent, l) {\r

      \  console.log('*** createLayout ***', dParent, l);\r

      \  let d = mBy(dParent);\r

      \  let areaNames = createGridLayout(d, l);\r

      \  console.log(areaNames, d)\r

      \  createAreas(d, areaNames, dParent);\r

      }\r\n"
    sig: function createLayout(dParent, l){}
    region: var (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  rAreas_0:
    name: rAreas_0
    code: "function rAreas_0() {\r

      \  let color = SPEC.color.theme;\r

      \  document.body.style.backgroundColor = color;\r

      \  let fg = colorIdealText(color)\r

      \  document.body.style.color = fg;\r

      \  let palette = getTransPalette9(); \r

      \  let ipal = 1;\r

      \  let d = document.getElementById('areaTable');\r

      \  setTableSize(...SPEC.tableSize);\r

      \  let s = '';\r

      \  let m = [];\r

      \  for (const line of SPEC.layout) {\r

      \    s += '\"' + line + '\" ';\r

      \    let letters = line.split(' ');\r

      \    let arr = [];\r

      \    for (const l of letters) { if (!isEmpty(l)) arr.push(l); }\r

      \    m.push(arr);\r

      \  }\r

      \  d.style.gridTemplateAreas = s;\r

      \  if (SPEC.collapseEmptySmallLetterAreas) {
      collapseSmallLetterAreas(m, d); }\r

      \  else fixedSizeGrid(m, d);\r

      \  for (const k in SPEC.areas) {\r

      \    let areaName = SPEC.areas[k];\r

      \    let d1 = document.createElement('div');\r

      \    d1.id = areaName;\r

      \    d1.style.gridArea = k;\r

      \    if (SPEC.shadeAreaBackgrounds) { d1.style.backgroundColor =
      palette[ipal]; ipal = (ipal + 1) % palette.length; }\r

      \    if (SPEC.showAreaNames) { d1.innerHTML =
      makeAreaNameDomel(areaName); }\r

      \    UIS[areaName] = { elem: d1, children: [] };\r

      \    d.appendChild(d1);\r

      \  }\r

      }\r\n"
    sig: function rAreas_0(){}
    region: var (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  rPlayerStatsAreas:
    name: rPlayerStatsAreas
    code: "function rPlayerStatsAreas() {\r

      \  if (nundef(serverData.players)) return;\r

      \  if (nundef(SPEC.playerStatsAreas)) return;\r

      \  let loc = SPEC.playerStatsAreas.loc;\r

      \  let dOthers = mById(loc);\r

      \  if (nundef(dOthers)) return;\r

      \  let func = SPEC.playerStatsAreas.type;\r

      \  let objects = [];\r

      \  for (const plid in serverData.players) {\r

      \    let o = serverData.players[plid];\r

      \    if (plid != GAMEPLID) {\r

      \      o.id = plid;\r

      \      objects.push(o)\r

      \    }\r

      \  }\r

      \  let areaNames = objects.map(x => x.name);\r

      \  let structObject = window[func](areaNames, loc);\r

      }\r\n"
    sig: function rPlayerStatsAreas(){}
    region: var (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  setTableSize:
    name: setTableSize
    code: "function setTableSize(w, h, unit = 'px') {\r

      \  let d = mBy('areaTable');\r

      \  mStyle(d, { 'min-width': w, 'min-height': h }, unit);\r

      }\r\n"
    sig: function setTableSize(w, h, unit = 'px'){}
    region: helpers (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  makeAreaNameDomel:
    name: makeAreaNameDomel
    code: "function makeAreaNameDomel(areaName) { return `<div
      style='width:100%'>${areaName}</div>`; }\r\n"
    sig: function makeAreaNameDomel(areaName){}
    region: helpers (areas.js)
    filename: areas.js
    type: func
    fname: areas.js
    path: C:\xampp\htdocs\aroot\belinda\js\areas.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691929.8552
    size: 7202
  FR2SQ:
    name: FR2SQ
    code: "function FR2SQ(f, r) { return ((21 + (f)) + ((r) * 10)); }\r\n"
    sig: function FR2SQ(f, r){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  Move2FromTo:
    name: Move2FromTo
    code: "function Move2FromTo(move) {\r

      \  var ff = FilesBrd[FROMSQ(move)];\r

      \  var rf = RanksBrd[FROMSQ(move)];\r

      \  var ft = FilesBrd[TOSQ(move)];\r

      \  var rt = RanksBrd[TOSQ(move)];\r

      \  return { from: { sq: FROMSQ(move), file: ff, rank: rf }, to: {
      sq: TOSQ(move), file: ft, rank: rt } };\r

      }\r\n"
    sig: function Move2FromTo(move){}
    region: accessors (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ActivateChessWidgets:
    name: ActivateChessWidgets
    code: "function ActivateChessWidgets() {\r

      \  StopThinking();\r

      \  $(\"#SetFen\").click(function () {\r

      \    var fenStr = $(\"#fenIn\").val();\r

      \    ParseFen(fenStr);\r

      \    PrintBoard();\r

      \    SetInitialBoardPieces();\r

      \    GameController.PlayerSide = brd_side;\r

      \    CheckAndSet();\r

      \    EvalPosition();\r

      \    NewGameAjax();\r

      \  });\r

      \  $(\"#UndoButton\").click(function () {\r

      \    console.log('Undo request... brd_hisPly:' + brd_hisPly);\r

      \    if (brd_hisPly > 0) {\r

      \      TakeMove(); if (brd_hisPly > 0) TakeMove();\r

      \      brd_ply = 0;\r

      \      SetInitialBoardPieces();\r

      \      $(\"#currentFenSpan\").text(BoardToFen());\r

      \    }\r

      \  });\r

      \  $(\"#HintButton\").click(function () {\r

      \    FLAG_HINT_ONLY = true;\r

      \    let move = PreSearch();\r

      \  });\r

      \  $(\"#SearchButton\").click(function () {\r

      \    GameController.PlayerSide = brd_side ^ 1;\r

      \    PreSearch();\r

      \  });\r

      \  $(\"#FlipButton\").click(function () {\r

      \    GameController.BoardFlipped ^= 1;\r

      \    console.log(\"Flipped:\" + GameController.BoardFlipped);\r

      \    SetInitialBoardPieces();\r

      \  });\r

      \  $(\"#EndGameButton\").click(function () {\r

      \    let fen = chooseRandom(FenPositionList).FEN;\r

      \    console.log('fen', fen)\r

      \    NewGame(fen);\r

      \    NewGameAjax();\r

      \  });\r

      \  $(\"#NewGameButton\").click(function () {\r

      \    NewGame();\r

      \    NewGameAjax();\r

      \  });\r

      }\r\n"
    sig: function ActivateChessWidgets(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  HintAnimation:
    name: HintAnimation
    code: "function HintAnimation(sq, ms = 2000) {\r

      \  if (GameController.BoardFlipped == BOOL.TRUE) { sq =
      MIRROR120(sq); }\r

      \  $(\".Square\").each(function (index) {\r

      \    if ((RanksBrd[sq] == 7 - Math.round($(this).position().top /
      60)) && (FilesBrd[sq] == Math.round($(this).position().left / 60))) {\r

      \      animateProperty(this, 'opacity', '1', '0', '1', ms);\r

      \    }\r

      \  });\r

      }\r\n"
    sig: function HintAnimation(sq, ms = 2000){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  InitBoardSquares:
    name: InitBoardSquares
    code: "function InitBoardSquares() {\r

      \  var light = 0;\r

      \  var rankName;\r

      \  var fileName;\r

      \  var divString;\r

      \  var lightString;\r

      \  var lastLight = 0;\r

      \  for (rankIter = RANKS.RANK_8; rankIter >= RANKS.RANK_1;
      rankIter--) {\r

      \    light = lastLight ^ 1;\r

      \    lastLight ^= 1;\r

      \    rankName = \"rank\" + (rankIter + 1);\r

      \    for (fileIter = FILES.FILE_A; fileIter <= FILES.FILE_H;
      fileIter++) {\r

      \      fileName = \"file\" + (fileIter + 1);\r

      \      if (light == 0) lightString = \"Light\";\r

      \      else lightString = \"Dark\";\r

      \      divString = \"<div class=\\\"Square clickElement \" +
      rankName + \" \" + fileName + \" \" + lightString + \"\\\"/>\";\r

      \      light ^= 1;\r

      \      $(\"#ChessBoard\").append(divString);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function InitBoardSquares(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  InitFilesRanksBrd:
    name: InitFilesRanksBrd
    code: "function InitFilesRanksBrd() {\r

      \  var index = 0;\r

      \  var file = FILES.FILE_A;\r

      \  var rank = RANKS.RANK_1;\r

      \  var sq = SQUARES.A1;\r

      \  var sq64 = 0;\r

      \  for (index = 0; index < BRD_SQ_NUM; ++index) {\r

      \    FilesBrd[index] = SQUARES.OFFBOARD;\r

      \    RanksBrd[index] = SQUARES.OFFBOARD;\r

      \  }\r

      \  for (rank = RANKS.RANK_1; rank <= RANKS.RANK_8; ++rank) {\r

      \    for (file = FILES.FILE_A; file <= FILES.FILE_H; ++file) {\r

      \      sq = FR2SQ(file, rank);\r

      \      FilesBrd[sq] = file;\r

      \      RanksBrd[sq] = rank;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function InitFilesRanksBrd(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  NewGameAjax:
    name: NewGameAjax
    code: "function NewGameAjax() {\r

      \  /*$.ajax({\r

      \    url : \"insertNewGame.php\",\r

      \    cache: false\r

      \    }).done(function( html ) {\r

      \      console.log('result:' + html);\r

      \    });*/\r

      }\r\n"
    sig: function NewGameAjax(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ShowChessMessage:
    name: ShowChessMessage
    code: "function ShowChessMessage(s, ms) {\r

      \  console.log('message:', s);\r

      \  $(\"#GameStatus\").text(s);\r

      \  if (isdef(ms)) setTimeout(() => $(\"#GameStatus\").text(''),
      ms)\r

      }\r\n"
    sig: function ShowChessMessage(s, ms){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  ShowFenPosition:
    name: ShowFenPosition
    code: "function ShowFenPosition() {\r

      \  $(\"#currentFenSpan\").text(BoardToFen());\r

      \  let pl = SideChar[brd_side] == 'b' ? 'BLACK (AI)' : 'WHITE
      (you)';\r

      \  mStyle(dTitle, { align: 'left' }); \r

      \  dTitle.innerHTML = `<div
      style='margin-left:78px;width:483px;text-align:center;'>Turn:
      ${pl}</div>`;\r

      }\r\n"
    sig: function ShowFenPosition(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  StartChessGame:
    name: StartChessGame
    code: "function StartChessGame() {\r

      \  InitFilesRanksBrd();\r

      \  InitSq120To64();\r

      \  InitHashKeys();\r

      \  InitBoardVars();\r

      \  InitMvvLva();\r

      \  InitBoardSquares();\r

      \  EvalInit();\r

      \  srch_thinking = BOOL.FALSE;\r

      \  $('#fenIn').val(START_FEN);\r

      \  NewGame();\r

      \  NewGameAjax();\r

      }\r\n"
    sig: function StartChessGame(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  StartThinking:
    name: StartThinking
    code: "function StartThinking() {\r

      \  let img = mBy('ThinkingPng');\r

      \  show(img);\r

      \  mClass(img, 'blinkFast');\r

      \  mBy('dShield').style.display = 'block';\r

      }\r\n"
    sig: function StartThinking(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  StopThinking:
    name: StopThinking
    code: "function StopThinking() {\r

      \  let img = mBy('ThinkingPng');\r

      \  mClassRemove(img, 'blinkFast');\r

      \  hide(img);\r

      \  hideShield();\r

      }\r\n"
    sig: function StopThinking(){}
    region: GUI (chess.js)
    filename: chess.js
    type: func
    fname: chess.js
    path: C:\xampp\htdocs\aroot\belinda\js\chess.js
    datetime: 2023-01-28-09-12
    timestamp: 1674925967905.6882
    size: 73787
  animationCallback:
    name: animationCallback
    code: "function animationCallback(secs, callback, removeBg = false) {\r

      \  for (const p of Pictures) { slowlyTurnFaceDown(p, secs - 1,
      removeBg); }\r

      \  TOMain = setTimeout(() => {\r

      \    callback();\r

      \  }, secs * 1000);\r

      }\r\n"
    sig: function animationCallback(secs, callback, removeBg = false){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  animateColor:
    name: animateColor
    code: "function animateColor(elem, from, to, classes, ms) {\r

      \  elem.style.backgroundColor = from;\r

      \  setTimeout(() => animate(elem, classes, ms), 10);\r

      }\r\n"
    sig: function animateColor(elem, from, to, classes, ms){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  aniFadeInOut_new:
    name: aniFadeInOut_new
    code: "function aniFadeInOut_new(elem, msDuration) {\r

      \  elem.animate()\r

      \  mClass(elem, 'transopaOn');\r

      \  return setTimeout(() => { mRemoveClass(elem, 'transopaOn');
      mClass(elem, 'transopaOff'); }, secs * 1000);\r

      }\r\n"
    sig: function aniFadeInOut_new(elem, msDuration){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  aniFadeInOut:
    name: aniFadeInOut
    code: "function aniFadeInOut(elem, secs) {\r

      \  mClass(elem, 'transopaOn');\r

      \  return setTimeout(() => { mRemoveClass(elem, 'transopaOn');
      mClass(elem, 'transopaOff'); }, secs * 1000);\r

      }\r\n"
    sig: function aniFadeInOut(elem, secs){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  aniFadeIn:
    name: aniFadeIn
    code: "function aniFadeIn(elem, secs) { \r

      \  elem.style.opacity = 0;\r

      \  setTimeout(() => { mRemoveClass(elem, 'transopaOff');
      mClass(elem, 'transopaOn'); }, secs * 1000);\r

      }\r\n"
    sig: function aniFadeIn(elem, secs){}
    region: animations (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  createDropInputs:
    name: createDropInputs
    code: "function createDropInputs() {\r

      \  let fz = 120; let word = Goal.label.toUpperCase(); let wlen =
      word.length;\r

      \  let dpEmpty = createLetterInputsX(word, dTable, { pabottom: 5,
      bg: 'grey', display: 'inline-block', fz: fz, w: fz, h: fz * 1.1, margin: 4
      }); \r

      \  let inputs = blankInputs(dpEmpty, range(0, wlen - 1), false);\r

      \  DropZones = [];\r

      \  for (let i = 0; i < inputs.length; i++) {\r

      \    let l = iDiv(inputs[i]);\r

      \    l.onmousedown = onMouseDownOnLetter;\r

      \    l.onclick = l.innerHTML = '_';\r

      \    mClass(l, 'dropzone');\r

      \    l.id = 'input' + i;\r

      \    DropZones.push(l);\r

      \  }\r

      \  return inputs;\r

      }\r\n"
    sig: function createDropInputs(){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  createDragLetters:
    name: createDragLetters
    code: "function createDragLetters() {\r

      \  fz = 60; let word = Goal.label.toUpperCase(); \r

      \  let dp = createLetterInputsX(word, dTable, { bg: 'silver',
      display: 'inline-block', fz: fz, w: fz, h: fz * 1.1, margin: 4 }); \r

      \  scrambleInputs(dp);\r

      \  let letters = Array.from(dp.children);\r

      \  for (let i = 0; i < letters.length; i++) {\r

      \    let l = letters[i]\r

      \    l.onmousedown = onMouseDownOnLetter;\r

      \    mClass(l, 'draggable');\r

      \    l.id = 'letter' + i;\r

      \  }\r

      \  return letters;\r

      }\r\n"
    sig: function createDragLetters(){}
    region: createLetterInputs (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  mXit:
    name: mXit
    code: "function mXit(elem, sz = 50) {\r

      \  if (nundef(sz)) sz = getRect(elem).h;\r

      \  let d = markerFail();\r

      \  mpOver(d, elem, sz / 2, 'red', 'openMojiTextBlack');\r

      \  mMoveBy(d, 0, -4);\r

      \  return d;\r

      }\r\n"
    sig: function mXit(elem, sz = 50){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mCheckit:
    name: mCheckit
    code: "function mCheckit(elem, sz = 50) {\r

      \  if (nundef(sz)) sz = getRect(elem).h;\r

      \  let d = markerSuccess();\r

      \  mpOver(d, elem, sz * (4 / 5), 'limegreen', 'segoeBlack');\r

      \  mMoveBy(d, 0, -4);\r

      \  return d;\r

      }\r\n"
    sig: function mCheckit(elem, sz = 50){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  sayRandomVoice:
    name: sayRandomVoice
    code: "function sayRandomVoice(e, g, voice = 'random') {\r

      \  if (arguments.length == 1) voice = 'random';\r

      \  let [r, p, v] = [.8, .9, 1];\r

      \  if (!G.silent) Speech.say(G.language == 'E' || nundef(g) ? e : g,
      r, p, v, voice);\r

      }\r\n"
    sig: function sayRandomVoice(e, g, voice = 'random'){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  setLanguageHALLO:
    name: setLanguageHALLO
    code: "function setLanguageHALLO(l) { Settings.language = G.language = l;
      Speech.setLanguage(l); console.log('SET LANGUAGE TO', l, G.language,
      G.lang); }\r\n"
    sig: function setLanguageHALLO(l){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  showInstruction:
    name: showInstruction
    code: "function showInstruction(text, cmd, dParent, isSpoken, spoken, fz, voice)
      {\r

      \  clearElement(dParent);\r

      \  let d = mDiv(dParent);\r

      \  mStyle(d, { margin: 15 })\r

      \  mClass(d, 'flexWrap');\r

      \  let msg = cmd + \" \" + `<b>${text.toUpperCase()}</b>`;\r

      \  if (nundef(fz)) fz = 36;\r

      \  let d1 = mText(msg, d, { fz: fz, display: 'inline-block' });\r

      \  if (isSpoken) {\r

      \    let sym = symbolDict.speaker;\r

      \    let d2 = mText(sym.text, d, {\r

      \      fz: fz + 2, weight: 900, display: 'inline-block',\r

      \      family: sym.family, 'padding-left': 14\r

      \    });\r

      \  }\r

      \  dFeedback = dInstruction = d;\r

      \  spoken = isSpoken ? isdef(spoken) ? spoken : cmd + \" \" + text :
      null;\r

      \  dInstruction.addEventListener('click', () =>
      aniInstruction(spoken));\r

      \  if (!isSpoken) return;\r

      \  sayRandomVoice(isdef(spoken) ? spoken : (cmd + \" \" + text),
      null, \"david\");\r

      }\r\n"
    sig: function showInstruction(text, cmd, dParent, isSpoken, spoken, fz, voice){}
    region: multiple (game.js)
    filename: game.js
    type: func
    fname: game.js
    path: C:\xampp\htdocs\aroot\belinda\js\game.js
    datetime: 2022-07-20-08-31
    timestamp: 1658331118396.3306
    size: 77824
  mMicrophone:
    name: mMicrophone
    code: "function mMicrophone(dParent, color) {\r

      \  let d = mDiv(dParent);\r

      \  d.innerHTML = '🎤';\r

      \  let c = bestContrastingColor(color, ['yellow', 'orange',
      'red']);\r

      \  let bg = c;\r

      \  let style = { bg: bg, rounding: '50%', fz: 50, padding: 5,
      transition: 'opacity .35s ease-in-out' };\r

      \  mStyle(d, style);\r

      \  mLinebreak(dParent);\r

      \  return d;\r

      }\r\n"
    sig: function mMicrophone(dParent, color){}
    region: Microphone (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  MicrophoneShow:
    name: MicrophoneShow
    code: "function MicrophoneShow() {\r

      \  if (nundef(MicrophoneUi)) return;\r

      \  if (RecogOutput) console.log('* mic start')\r

      \  MicrophoneUi.style.opacity = 1;\r

      }\r\n"
    sig: function MicrophoneShow(){}
    region: Microphone (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  MicrophoneHide:
    name: MicrophoneHide
    code: "function MicrophoneHide() {\r

      \  if (nundef(MicrophoneUi)) return;\r

      \  if (RecogOutput) console.log('* mic end')\r

      \  MicrophoneUi.style.opacity = .31;\r

      }\r\n"
    sig: function MicrophoneHide(){}
    region: Microphone (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  isSimilar:
    name: isSimilar
    code: "function isSimilar(reqAnswer, answer, lang) {\r

      \  if (answer == reqAnswer) return true;\r

      \  else if (replaceAll(answer, ' ', '') == replaceAll(reqAnswer, '
      ', '')) return true;\r

      \  else if (differInAtMost(reqAnswer, answer, 1)) return true;\r

      \  else if (isSimilarSound(reqAnswer, answer, lang)) return true;\r

      \  else return false;\r

      }\r\n"
    sig: function isSimilar(reqAnswer, answer, lang){}
    region: Microphone (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  convertTimesAndNumbersToWords:
    name: convertTimesAndNumbersToWords
    code: "function convertTimesAndNumbersToWords(w) {\r

      \  if (w.includes(':')) {\r

      \    let h = stringBefore(w, ':');\r

      \    let m = stringAfter(w, ':');\r

      \    let hn = Number(h);\r

      \    let mn = Number(m);\r

      \    let xlist = allIntegers(w);\r

      \    if (xlist.length == 2) {\r

      \      if (xlist[1] == 0) xlist = [xlist[0]];\r

      \      xlist = xlist.map(n => n.toString());\r

      \      let res1 = xlist.join('');\r

      \      w = res1;\r

      \    }\r

      \  }\r

      \  if (isNumber(w)) {\r

      \    let res = toWordsSpeechS(w);\r

      \    return res;\r

      \  }\r

      \  return w;\r

      }\r\n"
    sig: function convertTimesAndNumbersToWords(w){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  detectSilben:
    name: detectSilben
    code: "function detectSilben(words) {\r

      \  const syllableRegex =
      /[^aeiouy]*[aeiouy]+(?:[^aeiouy]*$|[^aeiouy](?=[^aeiouy]))?/gi;\r

      \  return words.match(syllableRegex);\r

      }\r\n"
    sig: function detectSilben(words){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  differInAtMost:
    name: differInAtMost
    code: "function differInAtMost(req, given, n = 1) {\r

      \  let diffs = levDist(req, given);\r

      \  return diffs <= n;\r

      }\r\n"
    sig: function differInAtMost(req, given, n = 1){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  isSimilarSound:
    name: isSimilarSound
    code: "function isSimilarSound(reqAnswer, s, lang) {\r

      \  let sParts = s.split(' ');\r

      \  let aParts = reqAnswer.split(' ');\r

      \  if (isNumber(s) || isTimeString(s, lang)) s =
      convertTimesAndNumbersToWords(s);\r

      \  if (isNumber(reqAnswer) || isTimeString(reqAnswer, lang))
      reqAnswer = convertTimesAndNumbersToWords(reqAnswer);\r

      \  if (sParts.length != aParts.length) return false;\r

      \  for (let i = 0; i < sParts.length; i++) {\r

      \    if (!soundsSimilar(sParts[i], aParts[i], lang)) return false;\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function isSimilarSound(reqAnswer, s, lang){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  isTimeString:
    name: isTimeString
    code: "function isTimeString(w, lang) {\r

      \  let res1 = (w.includes(':') && w.length >= 4 && w.length <= 5);\r

      \  let res2 = (lang == 'D' && stringAfterLast(w.toLowerCase(), ' ')
      == 'uhr'); \r

      \  return res1 || res2;\r

      }\r\n"
    sig: function isTimeString(w, lang){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  levDist:
    name: levDist
    code: "function levDist(s, t) {\r

      \  var d = []; \r

      \  var n = s.length;\r

      \  var m = t.length;\r

      \  if (n == 0) return m;\r

      \  if (m == 0) return n;\r

      \  for (var i = n; i >= 0; i--) d[i] = [];\r

      \  for (var i = n; i >= 0; i--) d[i][0] = i;\r

      \  for (var j = m; j >= 0; j--) d[0][j] = j;\r

      \  for (var i = 1; i <= n; i++) {\r

      \    var s_i = s.charAt(i - 1);\r

      \    for (var j = 1; j <= m; j++) {\r

      \      if (i == j && d[i][j] > 4) return n;\r

      \      var t_j = t.charAt(j - 1);\r

      \      var cost = (s_i == t_j) ? 0 : 1; \r

      \      var mi = d[i - 1][j] + 1;\r

      \      var b = d[i][j - 1] + 1;\r

      \      var c = d[i - 1][j - 1] + cost;\r

      \      if (b < mi) mi = b;\r

      \      if (c < mi) mi = c;\r

      \      d[i][j] = mi; \r

      \      if (i > 1 && j > 1 && s_i == t.charAt(j - 2) && s.charAt(i -
      2) == t_j) {\r

      \        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\r

      \      }\r

      \    }\r

      \  }\r

      \  return d[n][m];\r

      }\r\n"
    sig: function levDist(s, t){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  sepWords:
    name: sepWords
    code: "function sepWords(text, voiceKey, s = '') { \r

      \  text = text.toLowerCase();\r

      \  if (voiceKey == 'zira') {\r

      \    return text; \r

      \  } else if (startsWith(voiceKey, 'u')) { return text; }\r

      \  let words = text.split(' ');\r

      \  //s='? ';//' - ';\r

      \  text = words.join(' '); text += s;\r

      \  return text;\r

      }\r\n"
    sig: function sepWords(text, voiceKey, s = ''){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  soundsSimilar:
    name: soundsSimilar
    code: "function soundsSimilar(w1, w2, lang) {\r

      \  w1 = convertTimesAndNumbersToWords(w1);\r

      \  w2 = convertTimesAndNumbersToWords(w2);\r

      \  const syllableRegex =
      /[^aeiouy]*[aeiouy]+(?:[^aeiouy]*$|[^aeiouy](?=[^aeiouy]))?/gi;\r

      \  function syllabify(words) {\r

      \    return words.match(syllableRegex);\r

      \  }\r

      \  let a1 = syllabify(w1);\r

      \  let a2 = syllabify(w2);\r

      \  if (!a1) a1 = [w1];\r

      \  if (!a2) a2 = [w2];\r

      \  if (lang == 'D' && isdef(germanNumbers[a1]) && germanNumbers[a1]
      == germanNumbers[a2]) return true;\r

      \  if (a1.length != a2.length) return false;\r

      \  let SUPER_WEAK_SIMILARTY = false;\r

      \  if (SUPER_WEAK_SIMILARTY) {\r

      \    for (let i = 0; i < a1.length; i++) {\r

      \      let s1 = a1[i];\r

      \      let s2 = a2[i];\r

      \      if (s1 == s2) return true;\r

      \      let x1 = stringAfterLeadingConsonants(s1);\r

      \      let x2 = stringAfterLeadingConsonants(s2);\r

      \      if (lang == 'E' && 'ou'.includes(x1) && 'ou'.includes(x2) &&
      x1.substring(1) == x2.substring(1)) return true;\r

      \      if (lang == 'E' && 'oa'.includes(x1) && 'ao'.includes(x2) &&
      x1.substring(1) == x2.substring(1)) return true;\r

      \      if (lang == 'E' && x1.replace('ee', 'i') == x2.replace('ee',
      'i')) return true;\r

      \      if (lang == 'E' && x1.replace('ea', 'ai') == x2.replace('ea',
      'ai')) return true;\r

      \      if (lang == 'E' && x1.replace('au', 'o') == x2.replace('au',
      'o')) return true;\r

      \    }\r

      \  } else {\r

      \    for (let i = 0; i < a1.length; i++) {\r

      \      let yesItsAMatch = false;\r

      \      let s1 = a1[i];\r

      \      let s2 = a2[i];\r

      \      if (s1 == s2) yesItsAMatch = true;\r

      \      let x1 = stringAfterLeadingConsonants(s1);\r

      \      let x2 = stringAfterLeadingConsonants(s2);\r

      \      if (x1 == x2) yesItsAMatch = true;\r

      \      if (lang == 'E' && 'ou'.includes(x1) && 'ou'.includes(x2) &&
      x1.substring(1) == x2.substring(1)) yesItsAMatch = true;\r

      \      if (lang == 'E' && 'oa'.includes(x1) && 'ao'.includes(x2) &&
      x1.substring(1) == x2.substring(1)) yesItsAMatch = true;\r

      \      if (lang == 'E' && x1.replace('ee', 'i') == x2.replace('ee',
      'i')) yesItsAMatch = true;\r

      \      if (lang == 'E' && x1.replace('ea', 'ai') == x2.replace('ea',
      'ai')) yesItsAMatch = true;\r

      \      if (lang == 'E' && x1.replace('au', 'o') == x2.replace('au',
      'o')) yesItsAMatch = true;\r

      \      if (!yesItsAMatch) return false;\r

      \    }\r

      \    return true;\r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function soundsSimilar(w1, w2, lang){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  stringAfterLeadingConsonants:
    name: stringAfterLeadingConsonants
    code: "function stringAfterLeadingConsonants(s) {\r

      \  let regexpcons = /^([^aeiou])+/g;\r

      \  let x = s.match(regexpcons);\r

      \  return x ? s.substring(x[0].length) : s;\r

      }\r\n"
    sig: function stringAfterLeadingConsonants(s){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  toWords:
    name: toWords
    code: "function toWords(s) {\r

      \  let arr = s.split(/[\\W|_]+/);\r

      \  return arr.filter(x => !isEmpty(x));\r

      }\r\n"
    sig: function toWords(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  initSyms:
    name: initSyms
    code: "async function initSyms() {\r

      \  console.log('haloooooooooooooooo');\r

      }\r\n"
    sig: async function initSyms(){}
    region: funcs (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  _calcFontPicFromText:
    name: _calcFontPicFromText
    code: "function _calcFontPicFromText(options, overrideExisting = true) {\r

      \  if (nundef(options.fzPic) || overrideExisting) options.fzPic =
      Math.floor(options.fzText * 4 * (options.luc == 'u' ? .7 : .6)); \r

      \  return options.fzPic;\r

      }\r\n"
    sig: function _calcFontPicFromText(options, overrideExisting = true){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  _extendOptions:
    name: _extendOptions
    code: "function _extendOptions(options, defOptions, createArea = true) {\r

      \  defOptions = {\r

      \    wper: 96, hper: 96, dParent: dTable,\r

      \    showPic: true, szPic: { w: 120, h: 120 }, bg: 'random', fg:
      'white', margin: 4, rounding: 6,\r

      \    showLabels: true, luc: 'l', labelPos: 'bottom', lang: 'E',
      keySet: 'all',\r

      \    fzText: 20, fzPic: 60,\r

      \    padding: .025, gap: .1, isUniform: true, isRegular: false,
      fillArea: true,\r

      \    shufflePositions: false, sameBackground: true, showRepeat:
      false, repeat: 1,\r

      \    contrast: .32,\r

      \    ifs: {},\r

      \    handler: _standardHandler,\r

      \  };\r

      \  addKeys(defOptions, options);\r

      \  if (createArea && nundef(options.dArea)) {\r

      \    if (isdef(options.wArea) && isdef(options.hArea)) {\r

      \      options.dArea = getMainArea(options.dParent, { w:
      options.wArea, h: options.hArea });\r

      \    } else if (isdef(options.areaPadding)) {\r

      \      options.dArea = getMainAreaPadding(options.dParent, padding =
      options.areaPadding);\r

      \    } else options.dArea = getMainAreaPercent(options.dParent,
      null, options.wper, options.hper, getUID());\r

      \    options.area = getRect(options.dArea);\r

      \    options.idArea = options.dArea.id;\r

      \    options.aRatio = options.area.w / options.area.h;\r

      \    options.containerShape = options.area.w > options.area.h ? 'L'
      : 'P';\r

      \  }\r

      \  if (options.repeat > 1 && nundef(options.ifs.bg)) {\r

      \    let bg = isdef(options.colorKeys) ? 'white' : (i) =>
      options.sameBackground ? computeColor('random') : 'random';\r

      \    let fg = isdef(options.colorKeys) ? 'black' : 'white';\r

      \    options.ifs.bg = bg;\r

      \    options.ifs.fg = fg;\r

      \  }\r

      \  _calcFontPicFromText(options, false);\r

      \  if (nundef(options.labelStyles)) options.labelStyles = {};\r

      \  if (options.showLabels) {\r

      \    if (options.labelPos == 'bottom') options.labelBottom = true;
      else options.labelTop = true;\r

      \    options.labelStyles.fz = options.fzText;\r

      \  }\r

      \  options.picStyles = { fz: options.fzPic };\r

      \  let [w, h] = [options.szPic.w, options.szPic.h];\r

      \  options.outerStyles = {\r

      \    w: w, h: h, bg: options.bg, fg: options.fg,\r

      \    display: 'inline-flex', 'flex-direction': 'column',\r

      \    'justify-content': 'center', 'align-items': 'center',
      'vertical-align': 'top',\r

      \    //'place-content': 'center',\r

      \    padding: 0, box: true, margin: options.margin, rounding:
      options.rounding,\r

      \  };\r

      \  return options;\r

      }\r\n"
    sig: function _extendOptions(options, defOptions, createArea = true){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  findKeys:
    name: findKeys
    code: "function findKeys(s) { return SymKeys.filter(x => contains(x, s) ||
      contains(Syms[x].E, s) || isdef(Syms[x].D) && contains(Syms[x].D, s));
      }\r\n"
    sig: function findKeys(s){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getMainAreaPercent:
    name: getMainAreaPercent
    code: "function getMainAreaPercent(dParent, bg = 'grey', wPercent = 94, hPercent
      = 96, id) {\r

      \  clearElement(dParent);\r

      \  let aTable = percentOf(dParent, wPercent, hPercent); \r

      \  let dArea = getArea(dParent, { w: aTable.w, h: aTable.h, layout:
      'hcc', bg: bg }, id);\r

      \  return dArea;\r

      }\r\n"
    sig: function getMainAreaPercent(dParent, bg = 'grey', wPercent = 94, hPercent =
      96, id){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  getArea:
    name: getArea
    code: "function getArea(dParent, styles, id) {\r

      \  let defStyles = { display: 'inline-block' };\r

      \  styles = mergeOverride(defStyles, styles);\r

      \  let d = mDiv(dParent, styles, id);\r

      \  return d;\r

      }\r\n"
    sig: function getArea(dParent, styles, id){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  _standardHandler:
    name: _standardHandler
    code: "function _standardHandler(handler) {\r

      \  let f = isdef(handler) ?\r

      \    ev => { ev.cancelBubble = true; let res = handler(ev,
      evToItem(ev)); } \r

      \    : ev => { ev.cancelBubble = true; console.log('clicked on',
      evToClosestId(ev), evToLive(ev), evToItem(ev)); };\r

      \  return f;\r

      }\r\n"
    sig: function _standardHandler(handler){}
    region: syms (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  iconViewerTestKeysets:
    name: iconViewerTestKeysets
    code: "function iconViewerTestKeysets() {\r

      \  let allKeys = symKeysBySet.nosymbols;\r

      \  let keys = allKeys.filter(x => isdef(symbolDict[x].best100));\r

      \  let keys1 = allKeys.filter(x => isdef(symbolDict[x].best100) &&
      isdef(symbolDict[x].bestE));\r

      \  let keys2 = allKeys.filter(x => isdef(symbolDict[x].best50));\r

      \  let keys3 = allKeys.filter(x => isdef(symbolDict[x].best25));\r

      \  console.log(keys3);\r

      \  iconViewer(keys3);\r

      }\r\n"
    sig: function iconViewerTestKeysets(){}
    region: iconviewer (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  iconViewer:
    name: iconViewer
    code: "function iconViewer(keys) {\r

      \  console.log('hallo!!!')\r

      \  onclick = show100;\r

      \  IconSet = isdef(keys) ? keys : symKeysBySet['nosymbols'];\r

      \  lastIndex = 0;\r

      \  Pictures = [];\r

      \  show100();\r

      }\r\n"
    sig: function iconViewer(keys){}
    region: iconviewer (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  downloadKeySet:
    name: downloadKeySet
    code: "function downloadKeySet() {\r

      \  let keys = Pictures.filter(x => x.isSelected).map(x =>
      x.info.key);\r

      \  downloadAsYaml(keys, 'keyset');\r

      }\r\n"
    sig: function downloadKeySet(){}
    region: iconviewer (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  show100:
    name: show100
    code: "function show100() {\r

      \  console.log('hallo!!!')\r

      \  let table = mBy('table');\r

      \  clearElement(table);\r

      \  mButton('download key set', downloadKeySet, table, { fz: 30 });\r

      \  mButton('next 100', () => show100(), table, { fz: 30 });\r

      \  mLinebreak(table);\r

      \  let N = 150; \r

      \  let keys = takeFromTo(IconSet, lastIndex, lastIndex + N);\r

      \  lastIndex += N;\r

      \  for (const k of keys) {\r

      \    let item = mPic(k, table, { margin: 8, w: 50, h: 70, bg:
      'dimgray', fz: 30 });\r

      \    addLabel(item, k, { fz: 12 })\r

      \    item.onclick = toggleSelectionOfPicture;\r

      \  }\r

      }\r\n"
    sig: function show100(){}
    region: iconviewer (syms.js)
    filename: syms.js
    type: func
    fname: syms.js
    path: C:\xampp\htdocs\aroot\base\js\syms.js
    datetime: 2022-05-22-06-12
    timestamp: 1653225151331.0251
    size: 18117
  get_account_info:
    name: get_account_info
    code: "function get_account_info() { get_data({}, \"account\"); }\r\n"
    sig: function get_account_info(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  get_chats:
    name: get_chats
    code: "function get_chats(e) { get_data({ username: CURRENT_CHAT_USER },
      \"chats\"); }\r\n"
    sig: function get_chats(e){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\test.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691778.855
    size: 14271
  ltest5_catan:
    name: ltest5_catan
    code: "function ltest5_catan() {\r

      \  let [rows, cols, wCell, hCell, wCorner, hCorner, cover] = [10,
      10, 80, 80, 20, 10 * Math.sqrt(3), true];\r

      \  let [centers, wCont, hCont] = cover ? hexCenters(rows, cols,
      wCell, hCell) : hex1Centers(rows, cols, wCell, hCell);\r

      \  let dBoard = mDiv(dMain, { position: 'relative', w: wCont, h:
      hCont, margin: 100 });\r

      \  for (const pt of centers) {\r

      \    let d = drawShape('hex', dBoard, { w: wCell - 4, h: hCell - 4
      });\r

      \    mClass(d, 'field');\r

      \    mCenterAt(d, pt.x, pt.y);\r

      \  }\r

      \  let vertices = getCornerVertices(centers, wCell, hCell);\r

      \  for (const pt of vertices) {\r

      \    let d = drawShape('hexF', dBoard, { w: wCorner, h: hCorner
      });\r

      \    mClass(d, 'corner');\r

      \    mCenterAt(d, pt.x, pt.y);\r

      \  }\r

      \  let items = [];\r

      \  centers.map(x => items.push({ x: x.x, y: x.y, type: 'field'
      }));\r

      \  vertices.map(x => items.push({ x: x.x, y: x.y, type: 'corner'
      }));\r

      \  let byrc = addRowsCols(items);\r

      \  addIds(items);\r

      \  neighborhood(items, byrc);\r

      \  console.log('items', items);\r

      \  let di = {};\r

      \  let edges = [];\r

      \  for (const item of items) {\r

      \    if (item.type != 'field') continue;\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let v1 = item.nodes[i];\r

      \      let v2 = item.nodes[(i + 1) % 6];\r

      \      if (lookup(di, [v1, v2]) || lookup(di, [v2, v1])) continue;\r

      \      let e = makeEdge(dBoard, Items[v1], Items[v2], hCorner / 2,
      10);\r

      \      edges.push(e);\r

      \      lookupSet(di, [v1, v2], e);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function ltest5_catan(){}
    region: ltest (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\hive\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 6142
  ltest4_catan_1hex:
    name: ltest4_catan_1hex
    code: "function ltest4_catan_1hex() {\r

      \  let [rows, cols, wCell, hCell, wCorner, hCorner, cover] = [1, 1,
      400, 400, 100, 50 * Math.sqrt(3), true];\r

      \  let [centers, wCont, hCont] = cover ? hexCenters(rows, cols,
      wCell, hCell) : hex1Centers(rows, cols, wCell, hCell);\r

      \  let dBoard = mDiv(dMain, { position: 'relative', w: wCont, h:
      hCont, margin: 100 });\r

      \  for (const pt of centers) {\r

      \    let d = drawShape('hex', dBoard, { w: wCell - 4, h: hCell - 4
      });\r

      \    mClass(d, 'field');\r

      \    mCenterAt(d, pt.x, pt.y);\r

      \  }\r

      \  let vertices = getCornerVertices(centers, wCell, hCell);\r

      \  for (const pt of vertices) {\r

      \    let d = drawShape('hexF', dBoard, { w: wCorner, h: hCorner
      });\r

      \    mClass(d, 'corner');\r

      \    mCenterAt(d, pt.x, pt.y);\r

      \  }\r

      \  setCssVar('--color1', YELLOW);\r

      \  setCSSVariable('--color2', GREEN); \r

      \  mButton('mod colors', modifyColor, dMain);\r

      \  let items = [];\r

      \  centers.map(x => items.push({ x: x.x, y: x.y, type: 'field'
      }));\r

      \  vertices.map(x => items.push({ x: x.x, y: x.y, type: 'corner'
      }));\r

      \  let byrc = addRowsCols(items);\r

      \  addIds(items);\r

      \  neighborhood(items, byrc);\r

      \  console.log('items', items);\r

      \  let di = {};\r

      \  let edges = [];\r

      \  for (const item of items) {\r

      \    if (item.type != 'field') continue;\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let v1 = item.nodes[i];\r

      \      let v2 = item.nodes[(i + 1) % 6];\r

      \      if (lookup(di, [v1, v2]) || lookup(di, [v2, v1])) continue;\r

      \      let e = makeEdge(dBoard, Items[v1], Items[v2], hCorner /
      2);\r

      \      edges.push(e);\r

      \      lookupSet(di, [v1, v2], e);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function ltest4_catan_1hex(){}
    region: ltest (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\hive\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 6142
  modifyColor:
    name: modifyColor
    code: "function modifyColor() {\r

      \  const colors = [YELLOW, 'skyblue', \"green\", \"purple\",
      \"yellow\"];\r

      \  document.body.style.setProperty('--corner-color',
      colors[Math.floor(Math.random() * colors.length)]);\r

      \  document.body.style.setProperty('--color1',
      colors[Math.floor(Math.random() * colors.length)]);\r

      \  document.body.style.setProperty('--color2',
      colors[Math.floor(Math.random() * colors.length)]);\r

      }\r\n"
    sig: function modifyColor(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  ltest3_catan:
    name: ltest3_catan
    code: "function ltest3_catan() {\r

      \  let [rows, cols, wCell, hCell, wCorner, hCorner, cover] = [5, 5,
      100, 100, 25, 25, true];\r

      \  let [centers, wCont, hCont] = cover ? hexCenters(rows, cols,
      wCell, hCell) : hex1Centers(rows, cols, wCell, hCell);\r

      \  let dBoard = mDiv(dMain, { position: 'relative', w: wCont, h:
      hCont, margin: 25 });\r

      \  for (const pt of centers) {\r

      \    let d = drawShape('hex', dBoard, { w: wCell - 4, h: hCell - 4
      });\r

      \    mClass(d, 'field');\r

      \    mCenterAt(d, pt.x, pt.y);\r

      \  }\r

      \  let vertices = getCornerVertices(centers, wCell, hCell);\r

      \  for (const pt of vertices) {\r

      \    let d = mDiv(dBoard, { rounding: '50%', w: wCorner, h: hCorner
      });\r

      \    mClass(d, 'corner');\r

      \    mCenterAt(d, pt.x, pt.y);\r

      \  }\r

      \  mButton('mod colors', modifyColor, dMain);\r

      \  let items = [];\r

      \  centers.map(x => items.push({ x: x.x, y: x.y, type: 'field'
      }));\r

      \  vertices.map(x => items.push({ x: x.x, y: x.y, type: 'corner'
      }));\r

      \  let byrc = addRowsCols(items);\r

      \  console.log(byrc);\r

      \  console.log(items);\r

      }\r\n"
    sig: function ltest3_catan(){}
    region: ltest (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\hive\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 6142
  ltest2_hextest:
    name: ltest2_hextest
    code: "function ltest2_hextest() {\r

      \  let [centers, wCont, hCont] = hexCenters(5, 4, 100, 100);\r

      \  console.log('centers', centers);\r

      \  let dCont = mDiv(dMain, { position: 'relative', w: wCont, h:
      hCont });\r

      \  for (const pt of centers) {\r

      \    let d = drawShape('hex', dCont);\r

      \    mCenterAt(d, pt.x, pt.y);\r

      \  }\r

      \  return dCont;\r

      }\r\n"
    sig: function ltest2_hextest(){}
    region: ltest (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\hive\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 6142
  ltest1_hex:
    name: ltest1_hex
    code: "function ltest1_hex(chex = { x: 200, y: 200 }) {\r

      \  let centers = cCircle(chex, 400, 6);\r

      \  for (const c of centers) {\r

      \    let item = mPic('bee', dMain, { fz: 40, bg: 'skyblue',
      rounding: '50%', padding: 10 });\r

      \    mPos(iDiv(item), c.x, c.y);\r

      \  }\r

      \  let item = mPic('bee', dMain, { fz: 40, bg: 'skyblue', rounding:
      '50%', padding: 10 });\r

      \  mPos(iDiv(item), chex.x, chex.y);\r

      }\r\n"
    sig: "function ltest1_hex(chex = { x: 200, y: 200 }){}"
    region: ltest (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\hive\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 6142
  ltest0:
    name: ltest0
    code: "function ltest0() {\r

      \  let centers = cCircle({ x: 300, y: 300 }, 400, 6);\r

      \  for (const c of centers) {\r

      \    let item = mPic('bee', dMain, { fz: 40, bg: 'skyblue',
      rounding: '50%', padding: 10 });\r

      \    mPos(iDiv(item), c.x, c.y);\r

      \  }\r

      }\r\n"
    sig: function ltest0(){}
    region: ltest (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\hive\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 6142
  createHexboard2:
    name: createHexboard2
    code: "function createHexboard2(rows = 3, cols = 3, a = 48) {\r

      \  let sq3 = Math.sqrt(3);\r

      \  let wp = a / 4, hp = a / 4, h = sq3 * a / 2;\r

      \  let [xoff, dx, yoff, dy] = [h + wp / 2, 2 * h, hp / 2, a / 2];\r

      \  return createHexboardHelper(rows, cols, dy, dx, yoff, xoff, hp,
      wp, a);\r

      }\r\n"
    sig: function createHexboard2(rows = 3, cols = 3, a = 48){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  createHexboard1:
    name: createHexboard1
    code: "function createHexboard1(rows = 3, cols = 3, a = 48) {\r

      \  let sq3 = Math.sqrt(3);\r

      \  let wp = a / 4, hp = a / 4, h = sq3 * a / 2;\r

      \  let [xoff, dx, yoff, dy] = [h + wp / 2, 2 * h, hp / 2, a / 2];\r

      \  return createHexboardHelper(rows, cols, dy, dx, yoff, xoff, hp,
      wp, a);\r

      }\r\n"
    sig: function createHexboard1(rows = 3, cols = 3, a = 48){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  createHexboardHelper:
    name: createHexboardHelper
    code: "function createHexboardHelper(rows, cols, dy, dx, yoff, xoff, hp, wp, a)
      {\r

      \  let ys = 2 + 3 * rows;\r

      \  let xs = cols; \r

      \  let x = xoff, y = yoff;\r

      \  let pts = [];\r

      \  let infos = [];\r

      \  let idx = 0;\r

      \  let yEven = true;\r

      \  for (let i = 0; i < ys; i++) {\r

      \    let tcolOffset = yEven ? 1 : 0;\r

      \    let isCenterRow = i >= 2 && ((i - 2) % 3) == 0;\r

      \    for (let j = 0; j < xs + (1 - tcolOffset); j++) {\r

      \      let pt = { x: x, y: y };\r

      \      pts.push(pt);\r

      \      infos.push({ index: idx, tcol: tcolOffset + 2 * j, trow: i,
      x: x, y: y, pt: pt, isCenterRow: isCenterRow, isHexCenter: isCenterRow,
      isCenterCol: j % 2 == 1 });\r

      \      x += dx;\r

      \      idx += 1;\r

      \    }\r

      \    yEven = !yEven;\r

      \    y += dy; x = i % 2 ? xoff : wp / 2;\r

      \  }\r

      \  let byrc = {};\r

      \  for (const i of infos) {\r

      \    lookupSet(byrc, [i.trow, i.tcol], i.index);\r

      \  }\r

      \  let byxy = {};\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of infos) {\r

      \    let [r, c] = [info.trow, info.tcol];\r

      \    info.nodes = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      \  return { items: infos, adjList: adjList, rows: rows, cols: cols,
      dx: dx, dy: dy, sz: a, byrc: byrc }\r

      }\r\n"
    sig: function createHexboardHelper(rows, cols, dy, dx, yoff, xoff, hp, wp, a){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  createHexboard:
    name: createHexboard
    code: "function createHexboard(rows = 3, cols = 3, a = 48) {\r

      \  let sq3 = Math.sqrt(3);\r

      \  let wp = a / 4, hp = a / 4, h = sq3 * a / 2;\r

      \  let [xoff, dx, yoff, dy] = [h + wp / 2, 2 * h, hp / 2, a / 2];\r

      \  let ys = 2 + 3 * rows;\r

      \  let xs = cols; \r

      \  let x = xoff, y = yoff;\r

      \  let pts = [];\r

      \  let infos = [];\r

      \  let idx = 0;\r

      \  let yEven = true;\r

      \  for (let i = 0; i < ys; i++) {\r

      \    let tcolOffset = yEven ? 1 : 0;\r

      \    let isCenterRow = i >= 2 && ((i - 2) % 3) == 0;\r

      \    for (let j = 0; j < xs + (1 - tcolOffset); j++) {\r

      \      let pt = { x: x, y: y };\r

      \      pts.push(pt);\r

      \      infos.push({ index: idx, tcol: tcolOffset + 2 * j, trow: i,
      x: x, y: y, pt: pt, isCenterRow: isCenterRow, isHexCenter: isCenterRow,
      isCenterCol: j % 2 == 1 });\r

      \      x += dx;\r

      \      idx += 1;\r

      \    }\r

      \    yEven = !yEven;\r

      \    y += dy; x = i % 2 ? xoff : wp / 2;\r

      \  }\r

      \  let byrc = {};\r

      \  for (const i of infos) {\r

      \    lookupSet(byrc, [i.trow, i.tcol], i.index);\r

      \  }\r

      \  console.log('byrc', byrc)\r

      \  let byxy = {};\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of infos) {\r

      \    let [r, c] = [info.trow, info.tcol];\r

      \    info.nodes = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      \  return { items: infos, adjList: adjList, rows: rows, cols: cols,
      dx: dx, dy: dy, sz: a }\r

      }\r\n"
    sig: function createHexboard(rows = 3, cols = 3, a = 48){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  drawCenteredPlainCircle:
    name: drawCenteredPlainCircle
    code: "function drawCenteredPlainCircle(c) {\r

      \  let item = iContainer(dMain, { fz: 8, fg: 'black', bg: 'grey',
      padding: 1 });\r

      \  let d = iDiv(item);\r

      \  let rect = getRect(d);\r

      \  console.log('rect', rect)\r

      \  mPos(d, c.x - rect.w / 2, c.y - rect.h / 2);\r

      \  return item;\r

      }\r\n"
    sig: function drawCenteredPlainCircle(c){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  drawCenteredSym:
    name: drawCenteredSym
    code: "function drawCenteredSym(sym, c) {\r

      \  let item = mPic(sym, dMain, { w: 80, h: 80, box: true, fz: 25,
      rounding: '50%', vpadding: 14, hpadding: 4 });\r

      \  let d = iDiv(item);\r

      \  let rect = getRect(d);\r

      \  console.log('rect', rect)\r

      \  mPos(d, c.x - rect.w / 2, c.y - rect.h / 2);\r

      \  return item;\r

      }\r\n"
    sig: function drawCenteredSym(sym, c){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  drawCenteredBee:
    name: drawCenteredBee
    code: "function drawCenteredBee(c) { return drawCenteredSym('bee', c); }\r\n"
    sig: function drawCenteredBee(c){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  drawBee:
    name: drawBee
    code: "function drawBee(c) { return drawSym('bee', c); }\r\n"
    sig: function drawBee(c){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  get2Points:
    name: get2Points
    code: "function get2Points(v1, v2) {\r

      \  let dx = v2.x - v1.x;\r

      \  let dy = v2.y - v1.y;\r

      \  let alpha;\r

      \  if (dx == 1) alpha = dy > 0 ? 270 : 90;\r

      \  else alpha = 180 * Math.atan(dy / dx) / Math.PI;\r

      \  let beta = (alpha + 90) % 360;\r

      \  let stroke = 10;\r

      \  let radius = 5;\r

      \  let rbeta = beta * Math.PI / 180;\r

      \  let x1 = radius * Math.cos(rbeta);\r

      \  let y1 = radius * Math.sin(rbeta);\r

      \  let x2 = -radius * Math.cos(rbeta);\r

      \  let y2 = -radius * Math.sin(rbeta);\r

      \  return { p1: { x: x1 + v1.x, y: y1 + v1.y }, p2: { x: x2 + v1.x,
      y: y2 + v1.y }, p3: { x: x1 + v2.x, y: y1 + v2.y }, p4: { x: x2 + v2.x, y:
      y2 + v2.y } };\r

      }\r\n"
    sig: function get2Points(v1, v2){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  get2Points_mod:
    name: get2Points_mod
    code: "function get2Points_mod(v1, v2) {\r

      \  let dx = v2.x - v1.x;\r

      \  let dy = v2.y - v1.y;\r

      \  let alpha;\r

      \  if (dx == 1) alpha = dy > 0 ? 270 : 90;\r

      \  else alpha = 180 * Math.atan(dy / dx) / Math.PI;\r

      \  let beta = (alpha + 90) % 360;\r

      \  let stroke = 10;\r

      \  let radius = 5;\r

      \  let rbeta = beta * Math.PI / 180;\r

      \  let x1 = radius * Math.cos(rbeta);\r

      \  let y1 = radius * Math.sin(rbeta);\r

      \  let x2 = -radius * Math.cos(rbeta);\r

      \  let y2 = -radius * Math.sin(rbeta);\r

      \  return { p1: { x: x1 + v1.x, y: y1 + v1.y }, p2: { x: x2 + v1.x,
      y: y2 + v1.y }, p3: { x: x1 + v2.x, y: y1 + v2.y }, p4: { x: x2 + v2.x, y:
      y2 + v2.y } };\r

      }\r\n"
    sig: function get2Points_mod(v1, v2){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  hextestNewBROKEN:
    name: hextestNewBROKEN
    code: "function hextestNewBROKEN() {\r

      \  let info = createHexboard2(3, 4, 50);\r

      \  console.log('info', info);\r

      \  let [centers, maxx, maxy] = [[], 0, 0];\r

      \  let [wCell, hCell] = [100, 100];\r

      \  for (const item of info.items) {\r

      \    if (item.isHexCenter) {\r

      \      let [x, y] = [item.x, item.y];\r

      \      maxx = Math.max(maxx, x); maxy = Math.max(maxy, y);\r

      \      centers.push({ x: x, y: y });\r

      \    }\r

      \  }\r

      \  let wCont = maxx + wCell / 2;\r

      \  let hCont = maxy + hCell / 2;\r

      \  let resultOfHexCenters = [centers, wCont, hCont];\r

      \  console.log('centers', centers);\r

      \  let dCont = mDiv(dMain, { position: 'relative', w: wCont, h:
      hCont, bg: 'pink' });\r

      \  for (const pt of centers) {\r

      \    let d = drawShape('hex', dCont);\r

      \    mCenterAt(d, pt.x, pt.y);\r

      \  }\r

      }\r\n"
    sig: function hextestNewBROKEN(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  iHexboard:
    name: iHexboard
    code: "function iHexboard(cols = 3, rows = 3, a = 48) {\r

      \  let sq3 = Math.sqrt(3);\r

      \  let wp = a / 4, hp = a / 4, h = sq3 * a / 2;\r

      \  let [xoff, dx, yoff, dy] = [h + wp / 2, 2 * h, hp / 2, a / 2];\r

      \  let ys = 2 + 3 * rows;\r

      \  let xs = cols; \r

      \  let x = xoff, y = yoff;\r

      \  let pts = [];\r

      \  let infos = [];\r

      \  let idx = 0;\r

      \  let yEven = true;\r

      \  for (let i = 0; i < ys; i++) {\r

      \    let tcolOffset = yEven ? 1 : 0;\r

      \    let isCenterRow = i >= 2 && ((i - 2) % 3) == 0;\r

      \    for (let j = 0; j < xs + (1 - tcolOffset); j++) {\r

      \      let pt = { x: x, y: y };\r

      \      pts.push(pt);\r

      \      infos.push({ index: idx, tcol: tcolOffset + 2 * j, trow: i,
      x: x, y: y, pt: pt, isCenterRow: isCenterRow, isHexCenter: isCenterRow,
      isCenterCol: j % 2 == 1 });\r

      \      x += dx;\r

      \      idx += 1;\r

      \    }\r

      \    yEven = !yEven;\r

      \    y += dy; x = i % 2 ? xoff : wp / 2;\r

      \  }\r

      \  let byrc = {};\r

      \  for (const i of infos) {\r

      \    lookupSet(byrc, [i.trow, i.tcol], i.index);\r

      \  }\r

      \  let byxy = {};\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of infos) {\r

      \    let [r, c] = [info.trow, info.tcol];\r

      \    info.nodes = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      \  let boardItem = { dx: dx, dy: dy, rows: rows, cols: cols, count:
      infos.length, adjList: adjList, byrc: byrc, pts: pts, items: infos };\r

      \  return boardItem;\r

      }\r\n"
    sig: function iHexboard(cols = 3, rows = 3, a = 48){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  ltest2_iHexboard:
    name: ltest2_iHexboard
    code: "function ltest2_iHexboard() {\r

      \  let boardInfo = iHexboard(2, 3, 35);\r

      \  mFlex(dMain);\r

      \  console.log('HALLO'); \r

      \  let dParent = mPanel(dMain);\r

      \  let board = mItem(null, { div: dParent }, boardInfo);\r

      \  console.log('board', board, '\\nboard panel', iDiv(board));\r

      \  console.log('------------------')\r

      \  let sym = chooseRandom(getAnimals());\r

      \  let items = [];\r

      \  for (const info of boardInfo.items) {\r

      \    let d = mDiv(dParent, { bg: 'random', w: board.dx / 2, h:
      board.dy * 2 }); \r

      \    mPos(d, info.pt.y, info.pt.x);\r

      \    let item = mItem(null, { div: d }, info);\r

      \    items.push(item);\r

      \  }\r

      }\r\n"
    sig: function ltest2_iHexboard(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  makeVisualsForHexboard:
    name: makeVisualsForHexboard
    code: "function makeVisualsForHexboard(boardInfo) {\r

      \  let infos = boardInfo.items;\r

      \  let sym = chooseRandom(getAnimals());\r

      \  let items = [];\r

      \  for (const info of infos) {\r

      \    let item = drawText(info.trow + ',' + info.tcol, info.pt);\r

      \    if (info.isHexCenter) mStyle(iDiv(item), { bg: 'pink' })\r

      \    items.push(item);\r

      \  }\r

      }\r\n"
    sig: function makeVisualsForHexboard(boardInfo){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  makeEdge1:
    name: makeEdge1
    code: "function makeEdge1(dParent, v1, v2) {\r

      \  let poly = get2Points(v1, v2);\r

      \  let minx = 100000, miny = 100000, maxx = -100000, maxy =
      -100000;\r

      \  for (const k in poly) {\r

      \    let pt = poly[k];\r

      \    minx = Math.min(pt.x, minx);\r

      \    miny = Math.min(pt.y, miny);\r

      \    maxx = Math.max(pt.x, maxx);\r

      \    maxy = Math.max(pt.y, maxy);\r

      \  }\r

      \  let bb = { x: minx, y: miny, w: maxx - minx, h: maxy - miny };\r

      \  let de = mDiv(dParent, { position: 'absolute', left: minx, top:
      miny, w: bb.w, h: bb.h, bg: 'red' }); \r

      \  let [x1, y1, x2, y2] = [v1.x, v1.y, v2.x, v2.y];\r

      \  let stroke = 10;\r

      \  let sp = '';\r

      \  if (x1 == x2) {\r

      \    if (y1 < y2) sp = 'polygon(0% 0%, 100% 0%, 100% 100%, 0%
      100%)';\r

      \    else sp = 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)'; \r

      \  } else if (y1 == y2) {\r

      \    sp = 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)'; \r

      \  } else if (x1 < x2 && y1 < y2) {\r

      \    sp = `polygon(0% 0%, 0% 20%, 100% 100%, 100% 80%)`;\r

      \  } else if (x1 < x2 && y1 > y2) {\r

      \    sp = `polygon(0% 100%, 0% 80%, 100% 0%, 100% 20%)`;\r

      \  } else if (x1 > x2 && y1 < y2) {\r

      \    sp = `polygon(0% 100%, 0% 80%, 100% 0%, 100% 20%)`;\r

      \  } else {\r

      \    sp = `polygon(0% 0%, 0% 20%, 100% 100%, 100% 80%)`;\r

      \  }\r

      \  mStyle(de, { 'clip-path': sp });\r

      \  let e = mItem(null, { div: de }, { type: 'edge', nodes: [v1.id,
      v2.id] });\r

      \  return e;\r

      }\r\n"
    sig: function makeEdge1(dParent, v1, v2){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  makeEdgeW:
    name: makeEdgeW
    code: "function makeEdgeW(dParent, v1, v2, dFromEdge, ew = 20) {\r

      \  mCircle(dParent, v1.x, v1.y, 5, 'red');\r

      \  let switched = false;\r

      \  if (v1.x == v2.x) {\r

      \    if (v1.y > v2.y) { let h = v2; v2 = v1; v1 = h; switched =
      true; }\r

      \    let w = ew / 2;\r

      \    let sp = `polygon(${v1.x - w + ew}px ${v1.y + dFromEdge +
      ew}px, ${v1.x + w + ew}px ${v1.y + dFromEdge + ew}px, ${v2.x + w + ew}px
      ${v2.y - dFromEdge + ew}px, ${v2.x - w + ew}px ${v2.y - dFromEdge +
      ew}px)`;\r

      \    console.log('sp', sp)\r

      \    let de = mDiv(dParent, { position: 'absolute', left: -ew, top:
      -ew, w: '120%', h: '120%', bg: 'random' });\r

      \    mStyle(de, { 'clip-path': sp });\r

      \    return de;\r

      \  }\r

      \  if (v1.x > v2.x) { let h = v2; v2 = v1; v1 = h; switched = true;
      }\r

      \  let dx = v2.x - v1.x;\r

      \  let dy = v2.y - v1.y; \r

      \  let m = dy / dx;\r

      \  let [x1, y1, x2, y2] = [v1.x, v1.y, v2.x, v2.y];\r

      \  let alpha = Math.atan(m);\r

      \  let xa = x1 + dFromEdge * Math.cos(alpha);\r

      \  let ya = y1 + dFromEdge * Math.sin(alpha);\r

      \  mCircle(dParent, xa, ya, 10, 'orange');\r

      \  let xe = x2 - dFromEdge * Math.cos(alpha);\r

      \  let ye = y2 - dFromEdge * Math.sin(alpha);\r

      \  mCircle(dParent, xe, ye, 10, 'orange');\r

      \  let m2 = -1 / m;\r

      \  let beta = Math.atan(m2);\r

      \  let w = ew / 2;\r

      \  let x1t = xa + w * Math.cos(beta);\r

      \  let y1t = ya + w * Math.sin(beta);\r

      \  mCircle(dParent, x1t, y1t, 5, 'green');\r

      \  let x1b = xa - w * Math.cos(beta);\r

      \  let y1b = ya - w * Math.sin(beta);\r

      \  mCircle(dParent, x1b, y1b, 5, 'green');\r

      \  let x2t = xe + w * Math.cos(beta);\r

      \  let y2t = ye + w * Math.sin(beta);\r

      \  mCircle(dParent, x2t, y2t, 5, 'violet');\r

      \  let x2b = xe - w * Math.cos(beta);\r

      \  let y2b = ye - w * Math.sin(beta);\r

      \  mCircle(dParent, x2b, y2b, 5, 'violet');\r

      \  let de = mDiv(dParent, { position: 'absolute', left: 0, top: 0,
      w: '120%', h: '120%', bg: 'random' });\r

      \  mStyle(de, { 'clip-path': `polygon(${x1t}px ${y1t}px, ${x2t}px
      ${y2t}px, ${x2b}px ${y2b}px, ${x1b}px ${y1b}px)` });\r

      \  return de;\r

      }\r\n"
    sig: function makeEdgeW(dParent, v1, v2, dFromEdge, ew = 20){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  neighborhood2:
    name: neighborhood2
    code: "function neighborhood2(items, byrc) {\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of items) {\r

      \    let [r, c] = [info.row, info.col];\r

      \    info.nodeItems = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    info.nodes = info.nodeItems.map(x => x ? x.id : null);\r

      \    delete info.nodeItems;\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      }\r\n"
    sig: function neighborhood2(items, byrc){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  neighborhood1:
    name: neighborhood1
    code: "function neighborhood1(items, byrc) {\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of items) {\r

      \    let [r, c] = [info.row, info.col];\r

      \    info.nodes = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      }\r\n"
    sig: function neighborhood1(items, byrc){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  tri4:
    name: tri4
    code: "function tri4() {\r

      \  let sq3 = Math.sqrt(3);\r

      \  let a = 48;\r

      \  let wp = a / 4, hp = a / 4, h = sq3 * a / 2;\r

      \  let [xoff, dx, yoff, dy] = [h + wp / 2, 2 * h, hp / 2, a / 2];\r

      \  let [rows, maxcols] = [3, 4];\r

      \  let ys = 2 + 3 * rows;\r

      \  let xs = maxcols; \r

      \  let x = xoff, y = yoff;\r

      \  let pts = [];\r

      \  let infos = [];\r

      \  let idx = 0;\r

      \  let yEven = true;\r

      \  for (let i = 0; i < ys; i++) {\r

      \    let tcolOffset = yEven ? 1 : 0;\r

      \    let isCenterRow = i >= 2 && ((i - 2) % 3) == 0;\r

      \    for (let j = 0; j < xs + (1 - tcolOffset); j++) {\r

      \      let pt = { x: x, y: y };\r

      \      pts.push(pt);\r

      \      infos.push({ index: idx, tcol: tcolOffset + 2 * j, trow: i,
      x: x, y: y, pt: pt, isCenterRow: isCenterRow, isHexCenter: isCenterRow,
      isCenterCol: j % 2 == 1 });\r

      \      x += dx;\r

      \      idx += 1;\r

      \    }\r

      \    yEven = !yEven;\r

      \    y += dy; x = i % 2 ? xoff : wp / 2;\r

      \  }\r

      \  let byrc = {};\r

      \  for (const i of infos) {\r

      \    lookupSet(byrc, [i.trow, i.tcol], i.index);\r

      \  }\r

      \  console.log('byrc', byrc)\r

      \  let byxy = {};\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of infos) {\r

      \    let [r, c] = [info.trow, info.tcol];\r

      \    info.nodes = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      \  let sym = chooseRandom(getAnimals());\r

      \  let items = [];\r

      \  for (const info of infos) {\r

      \    let item = drawText(info.trow + ',' + info.tcol, info.pt);\r

      \    if (info.isHexCenter) mStyle(iDiv(item), { bg: 'pink' })\r

      \    items.push(item);\r

      \  }\r

      }\r\n"
    sig: function tri4(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  tri3:
    name: tri3
    code: "function tri3() {\r

      \  let sq3 = Math.sqrt(3);\r

      \  let a = 48;\r

      \  let wp = a / 4, hp = a / 4, h = sq3 * a / 2;\r

      \  let [xoff, dx, yoff, dy] = [h + wp / 2, 2 * h, hp / 2, a / 2];\r

      \  let [rows, maxcols] = [3, 4];\r

      \  let ys = 2 + 3 * rows;\r

      \  let xs = maxcols; \r

      \  let x = xoff, y = yoff;\r

      \  let pts = [];\r

      \  let infos = [];\r

      \  let idx = 0;\r

      \  let yEven = true;\r

      \  for (let i = 0; i < ys; i++) {\r

      \    let tcolOffset = yEven ? 1 : 0;\r

      \    let isCenterRow = i >= 2 && ((i - 2) % 3) == 0;\r

      \    for (let j = 0; j < xs + (1 - tcolOffset); j++) {\r

      \      let pt = { x: x, y: y };\r

      \      pts.push(pt);\r

      \      infos.push({ index: idx, tcol: tcolOffset + 2 * j, trow: i,
      x: x, y: y, pt: pt, isCenterRow: isCenterRow, isHexCenter: isCenterRow,
      isCenterCol: j % 2 == 1 });\r

      \      x += dx;\r

      \      idx += 1;\r

      \    }\r

      \    yEven = !yEven;\r

      \    y += dy; x = i % 2 ? xoff : wp / 2;\r

      \  }\r

      \  let byrc = {};\r

      \  for (const i of infos) {\r

      \    lookupSet(byrc, [i.trow, i.tcol], i.index);\r

      \  }\r

      \  console.log('byrc', byrc)\r

      \  let byxy = {};\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of infos) {\r

      \    let [r, c] = [info.trow, info.tcol];\r

      \    info.nodes = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      \  let sym = chooseRandom(getAnimals());\r

      \  let items = [];\r

      \  for (const info of infos) {\r

      \    let item = drawText(info.trow + ',' + info.tcol, info.pt);\r

      \    items.push(item);\r

      \  }\r

      }\r\n"
    sig: function tri3(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  tri2:
    name: tri2
    code: "function tri2() {\r

      \  let sq3 = Math.sqrt(3);\r

      \  let a = 48;\r

      \  let wp = a / 4, hp = a / 4, h = sq3 * a / 2;\r

      \  let [xoff, dx, yoff, dy] = [h + wp / 2, 2 * h, hp / 2, a / 2];\r

      \  let [rows, maxcols] = [3, 4];\r

      \  let ys = 2 + 3 * rows;\r

      \  let xs = maxcols; \r

      \  let x = xoff, y = yoff;\r

      \  let pts = [];\r

      \  let infos = [];\r

      \  let idx = 0;\r

      \  let yEven = true;\r

      \  for (let i = 0; i < ys; i++) {\r

      \    let tcolOffset = yEven ? 1 : 0;\r

      \    let isCenterRow = i >= 2 && ((i - 2) % 3) == 0;\r

      \    for (let j = 0; j < xs + (1 - tcolOffset); j++) {\r

      \      let pt = { x: x, y: y };\r

      \      pts.push(pt);\r

      \      infos.push({ index: idx, tcol: tcolOffset + 2 * j, trow: i,
      x: x, y: y, pt: pt, isCenterRow: isCenterRow, isHexCenter: isCenterRow,
      isCenterCol: j % 2 == 1 });\r

      \      x += dx;\r

      \      idx += 1;\r

      \    }\r

      \    yEven = !yEven;\r

      \    y += dy; x = i % 2 ? xoff : wp / 2;\r

      \  }\r

      \  let byrc = {};\r

      \  for (const i of infos) {\r

      \    lookupSet(byrc, [i.trow, i.tcol], i.index);\r

      \  }\r

      \  console.log('byrc', byrc)\r

      \  let byxy = {};\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of infos) {\r

      \    let [r, c] = [info.trow, info.tcol];\r

      \    info.nodes = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      \  let sym = chooseRandom(getAnimals());\r

      \  let items = [];\r

      \  for (const info of infos) {\r

      \    let item = info.isHexCenter ? drawCenteredBee(info.pt) :
      drawCenteredPlainCircle(info.pt);\r

      \    items.push(item);\r

      \    let d = iDiv(item);\r

      \    if (info.isHexCenter) mClass(d, 'hexagon');\r

      \    if (info.isHexCenter) mText(info.trow + ' ' + info.tcol, d, {
      fz: 10 });\r

      \  }\r

      }\r\n"
    sig: function tri2(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  tri1:
    name: tri1
    code: "function tri1() {\r

      \  let sq3 = Math.sqrt(3);\r

      \  let a = 48;\r

      \  let wp = a / 4, hp = a / 4, h = sq3 * a / 2;\r

      \  let [xoff, dx, yoff, dy] = [h + wp / 2, 2 * h, hp / 2, a / 2];\r

      \  let [rows, maxcols] = [3, 4];\r

      \  let ys = 2 + 3 * rows;\r

      \  let xs = maxcols; \r

      \  let x = xoff, y = yoff;\r

      \  let pts = [];\r

      \  let infos = [];\r

      \  let idx = 0;\r

      \  let yEven = true;\r

      \  for (let i = 0; i < ys; i++) {\r

      \    let tcolOffset = yEven ? 1 : 0;\r

      \    let isCenterRow = i >= 2 && ((i - 2) % 3) == 0;\r

      \    for (let j = 0; j < xs + (1 - tcolOffset); j++) {\r

      \      let pt = { x: x, y: y };\r

      \      pts.push(pt);\r

      \      infos.push({ index: idx, tcol: tcolOffset + 2 * j, trow: i,
      x: x, y: y, pt: pt, isCenterRow: isCenterRow, isHexCenter: isCenterRow,
      isCenterCol: j % 2 == 1 });\r

      \      x += dx;\r

      \      idx += 1;\r

      \    }\r

      \    yEven = !yEven;\r

      \    y += dy; x = i % 2 ? xoff : wp / 2;\r

      \  }\r

      \  let byrc = {};\r

      \  for (const i of infos) {\r

      \    lookupSet(byrc, [i.trow, i.tcol], i.index);\r

      \  }\r

      \  console.log('byrc', byrc)\r

      \  let byxy = {};\r

      \  let adjList = [];\r

      \  let di = {};\r

      \  for (const info of infos) {\r

      \    let [r, c] = [info.trow, info.tcol];\r

      \    info.nodes = [\r

      \      lookup(byrc, [r - 2, c]),\r

      \      lookup(byrc, [r - 1, c + 1]),\r

      \      lookup(byrc, [r + 1, c + 1]),\r

      \      lookup(byrc, [r + 2, c]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \      lookup(byrc, [r + 1, c - 1]),\r

      \    ];\r

      \    for (let i = 0; i < 6; i++) {\r

      \      let n1 = info.nodes[i];\r

      \      if (n1 == null) continue;\r

      \      let n2 = info.nodes[(i + 1 % 6)];\r

      \      if (n2 == null) continue;\r

      \      if (lookup(di, [n1, n2]) || lookup(di, [n2, n1])) continue;\r

      \      lookupSet(di, [n1, n2], true);\r

      \      adjList.push([n1, n2]);\r

      \    }\r

      \    info.neighbors = [\r

      \      lookup(byrc, [r - 3, c + 1]),\r

      \      lookup(byrc, [r, c + 2]),\r

      \      lookup(byrc, [r + 3, c + 1]),\r

      \      lookup(byrc, [r + 3, c - 1]),\r

      \      lookup(byrc, [r, c - 2]),\r

      \      lookup(byrc, [r - 3, c - 1]),\r

      \    ];\r

      \  }\r

      \  let sym = chooseRandom(getAnimals());\r

      \  let items = [];\r

      \  for (const info of infos) {\r

      \    let item = info.isHexCenter ? drawBee(info.pt) : drawSym(sym,
      info.pt);\r

      \    items.push(item);\r

      \  }\r

      }\r\n"
    sig: function tri1(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  tri0:
    name: tri0
    code: "function tri0() {\r

      \  let sq3 = 1.73205080757;\r

      \  let sq3b = Math.sqrt(3);\r

      \  console.log('sq3', sq3, 'sq3b', sq3b)\r

      }\r\n"
    sig: function tri0(){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\hive\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 29165
  ex02_table:
    name: ex02_table
    code: "function ex02_table(dContent) {\r

      \  console.log('dContent', dContent);\r

      \  mStyle(dContent, { bg: wyellow, position: 'relative', hmin: 1600
      });\r

      \  let dTable = mDiv100(dContent);\r

      }\r\n"
    sig: function ex02_table(dContent){}
    region: funcs (examples.js)
    filename: examples.js
    type: func
    fname: examples.js
    path: C:\xampp\htdocs\aroot\_other\klavier\examples.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 735
  ex01_table:
    name: ex01_table
    code: "function ex01_table(dContent) {\r

      \  console.log('dContent', dContent);\r

      \  mStyle(dContent, { bg: wyellow, position: 'relative' });\r

      \  let dTable = mDiv100(dContent);\r

      \  let d3 = mDiv(dTable, { position: 'absolute', left: 40, top: 4,
      bg: 'pink', w: 300, h: 300 });\r

      }\r\n"
    sig: function ex01_table(dContent){}
    region: funcs (examples.js)
    filename: examples.js
    type: func
    fname: examples.js
    path: C:\xampp\htdocs\aroot\_other\klavier\examples.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 735
  ex00_sidebar:
    name: ex00_sidebar
    code: "function ex00_sidebar(sidebar) {\r

      \  let styles = { hpadding: 12, vpadding: 4, fz: 20 };\r

      \  for (const link of ['short', 'link3super superlang dasdasdas',
      'short']) {\r

      \    sidebar.addContent(`<a href='#'>${link}</a>`, styles);\r

      \  }\r

      \  sidebar.open(null, false);\r

      }\r\n"
    sig: function ex00_sidebar(sidebar){}
    region: funcs (examples.js)
    filename: examples.js
    type: func
    fname: examples.js
    path: C:\xampp\htdocs\aroot\_other\klavier\examples.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 735
  qOptions:
    name: qOptions
    code: "function qOptions(bg = BLUEGREEN) {\r

      \  let options = {\r

      \    bCaption: '☰',\r

      \    bStyles: { fz: 30, margin: 4 },\r

      \    menuStyles: { bg: wblack, alpha: .65 },\r

      \    sbStyles: { bg: wblack, alpha: .25 },\r

      \    divStyles: { bg: wwhite, alpha: .25 },\r

      \    innerStyles: {},\r

      \    outerStyles: { bg: bg },\r

      \  };\r

      \  return options;\r

      }\r\n"
    sig: function qOptions(bg = BLUEGREEN){}
    region: funcs (q.js)
    filename: q.js
    type: func
    fname: q.js
    path: C:\xampp\htdocs\aroot\_other\klavier\q.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 685
  qPageMST:
    name: qPageMST
    code: "function qPageMST(dParent, options) {\r

      \  mStyle(dParent, { h: '100%', w: '100%', box: true, bg: 'silver'
      }); \r

      \  setRect(dParent);\r

      \  let item = iMenuSidebarDiv(dParent, options);\r

      \  return { item: item, sidebar: iGetl(item, 'sidebar'), dContent:
      iGetl(item, 'dContent'), dMenu: iGetl(item, 'dMenu') };\r

      }\r\n"
    sig: function qPageMST(dParent, options){}
    region: funcs (q.js)
    filename: q.js
    type: func
    fname: q.js
    path: C:\xampp\htdocs\aroot\_other\klavier\q.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 685
  mRow:
    name: mRow
    code: "function mRow(dParent, styles) {\r

      \  return mDiv(dParent, styles)\r

      }\r\n"
    sig: function mRow(dParent, styles){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  iMenuLine:
    name: iMenuLine
    code: "function iMenuLine(dParent, styles) {\r

      \  let d = mRow(dParent, styles);\r

      \  console.log('d', d)\r

      \  let item = mItem('dMenu', { div: d }, { type: 'menu' });\r

      \  return item;\r

      }\r\n"
    sig: function iMenuLine(dParent, styles){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  iMenuSidebarDiv:
    name: iMenuSidebarDiv
    code: "function iMenuSidebarDiv(dParent, options) {\r

      \  let d0 = mDiv100(dParent, options.outerStyles);\r

      \  setRect(d0); \r

      \  let dMenu = mDiv(d0, options.menuStyles);\r

      \  let b = mButton(options.bCaption, null, dMenu, options.bStyles,
      'mybutton', getUID('b'));\r

      \  setRect(dMenu, { hfix: true, wgrow: true });\r

      \  let st = options.innerStyles;\r

      \  st.position = 'relative';\r

      \  st.h = d0.rect.h - dMenu.rect.h - valf(st.matop, 0);\r

      \  let d = mDiv(d0, options.innerStyles);\r

      \  let dSide = mDiv(d, options.sbStyles);\r

      \  let dContent = mDiv(d, options.divStyles, getUID());\r

      \  let sb = iSidebar(dSide, dContent, b, 120, false);\r

      \  let item = mItem(getUID('comp'), { div: d0, button: b, dMenu:
      dMenu, sidebar: sb, dContent: dContent }, { type: 'component' });\r

      \  return item;\r

      }\r\n"
    sig: function iMenuSidebarDiv(dParent, options){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  iButtonSidebarDiv:
    name: iButtonSidebarDiv
    code: "function iButtonSidebarDiv(dParent, bCaption = '☰', bStyles = { fz: 30 },
      sbStyles = { bg: wpink }, divStyles = {}, outerStyles = { matop: 4, bg:
      wgrey }) {\r

      \  let d0 = mDiv100(dParent);\r

      \  let b = mButton(bCaption, null, d0, bStyles, 'mybutton',
      getUID('b'));\r

      \  outerStyles.position = 'relative';\r

      \  let h = getRect(d0).h - (getRect(b).h + outerStyles.matop);\r

      \  outerStyles.h = h;\r

      \  let d = mDiv(d0, outerStyles); \r

      \  let dSide = mDiv(d, sbStyles);\r

      \  let dContent = mDiv(d, divStyles, getUID());\r

      \  let sb = iSidebar(dSide, dContent, b, 120, false);\r

      \  let item = mItem(getUID('comp'), { div: d0, button: b, sidebar:
      sb, dContent: dContent }, { type: 'component' });\r

      \  return item;\r

      }\r\n"
    sig: "function iButtonSidebarDiv(dParent, bCaption = '☰', bStyles = { fz: 30 },
      sbStyles = { bg: wpink }, divStyles = {}, outerStyles = { matop: 4, bg:
      wgrey }){}"
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test09_WTF_das_ist_ambra:
    name: test09_WTF_das_ist_ambra
    code: "function test09_WTF_das_ist_ambra() {\r

      \  let comp = qPageMST(mBy('dMain'), qOptions());\r

      \  ex00_sidebar(comp.sidebar);\r

      }\r\n"
    sig: function test09_WTF_das_ist_ambra(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test09_WTF_start:
    name: test09_WTF_start
    code: "function test09_WTF_start(){\r

      \  ex01_table(comp.dContent);\r

      \  mCenterFlex(dTable);\r

      \  let tileStyles1 = { bg: 'pink', w: 300, h: 300, margin: 20 };\r

      \  let [rows, cols] = [5, 5];\r

      \  for (let r = 0; r < rows; r++) {\r

      \    for (let c = 0; c < cols; c++) {\r

      \      let d1 = mDiv(dTable, tileStyles1);\r

      \      if (coin()) iMenuSidebarDiv(d1, qOptions());\r

      \    }\r

      \    mGap(dTable, 0);\r

      \  }\r

      }\r\n"
    sig: function test09_WTF_start(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test08_WTF:
    name: test08_WTF
    code: "function test08_WTF() {\r

      \  let d = mBy('dMain');\r

      \  let menu = iMenuLine(d, { bg: 'dark' });\r

      \  console.log('iDiv', iDiv(menu));\r

      \  let title = mText('hello!', iDiv(menu), { fz: 30 }); \r

      }\r\n"
    sig: function test08_WTF(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test07_menu_sidebar_div:
    name: test07_menu_sidebar_div
    code: "function test07_menu_sidebar_div() {\r

      \  let dMain = mBy('dMain');\r

      \  mStyle(dMain, { h: '100%', w: '100%', box: true, bg: 'silver',
      padding: 10 });\r

      \  setRect(dMain); \r

      \  let item = iMenuSidebarDiv(dMain, options);\r

      \  let dover = mDover(dMain, { bg: 'red', alpha: .25 });\r

      \  setTimeout(() => iDelete(item.live.sidebar), 5000)\r

      }\r\n"
    sig: function test07_menu_sidebar_div(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  coButtonSidebarDiv_00:
    name: coButtonSidebarDiv_00
    code: "function coButtonSidebarDiv_00(dParent, bCaption = '☰', bStyles = { fz:
      30 }, sbStyles = { bg: wpink }, divStyles = {}, outerStyles = { matop: 4,
      bg: wgrey }) {\r

      \  let d0 = mDiv100(dParent);\r

      \  let b = mButton(bCaption, null, d0, bStyles, 'mybutton');\r

      \  outerStyles.position = 'relative';\r

      \  let h = getRect(d0).h - (getRect(b).h + outerStyles.matop);\r

      \  outerStyles.h = h;\r

      \  let d = mDiv(d0, outerStyles); \r

      \  let dSide = mDiv(d, sbStyles);\r

      \  let dContent = mDiv(d, divStyles);\r

      \  let sb = iSidebar(d, dSide, dContent, b, 120, false);\r

      \  return { button: b, sidebar: sb, div: dContent };\r

      }\r\n"
    sig: "function coButtonSidebarDiv_00(dParent, bCaption = '☰', bStyles = { fz: 30
      }, sbStyles = { bg: wpink }, divStyles = {}, outerStyles = { matop: 4, bg:
      wgrey }){}"
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test06_coButtonSidebarDiv:
    name: test06_coButtonSidebarDiv
    code: "function test06_coButtonSidebarDiv() {\r

      \  let dMain = mBy('dMain');\r

      \  mStyle(dMain, { h: '100%', w: '100%', box: true, bg: 'silver',
      padding: 10 });\r

      \  let co = coButtonSidebarDiv(dMain);\r

      \  console.log('co', co)\r

      \  let co2 = coButtonSidebarDiv(co.div);\r

      }\r\n"
    sig: function test06_coButtonSidebarDiv(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test05_div_mit_sidebar:
    name: test05_div_mit_sidebar
    code: "function test05_div_mit_sidebar() {\r

      \  let dMain = mBy('dMain');\r

      \  mStyle(dMain, { h: '100%', w: '100%', box: true, bg: 'silver',
      padding: 10 });\r

      \  let b = mButton('☰', null, dMain, { fz: 36 }, 'mybutton');\r

      \  let d = mDiv100(dMain, { matop: 4, position: 'relative', });\r

      \  let dSide = mDiv(d, { bg: 'silver' });\r

      \  let dContent = mDiv(d, { bg: worange });\r

      \  let sb = iSidebar(d, dSide, dContent, b, 120, false);\r

      }\r\n"
    sig: function test05_div_mit_sidebar(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test04_div_mit_sidebar:
    name: test04_div_mit_sidebar
    code: "function test04_div_mit_sidebar() {\r

      \  let dMain = mBy('dMain');\r

      \  mStyle(dMain, { h: '100%', w: '100%', box: true, bg: 'silver',
      padding: 10 });\r

      \  let d = mDiv100(dMain, { position: 'relative', });\r

      \  let d1 = mDiv(d, { bg: wdeeporange });\r

      \  let d2 = mDiv(d, { bg: worange });\r

      \  let sb = iSidebar04(d, d1, d2, d2, 50);\r

      \  sb.addContent('wwwwwwwwwwwwwwwwwwwwwwwwww');\r

      \  sb.toggle();\r

      \  sb.addContent('s');\r

      \  sb.toggle();\r

      }\r\n"
    sig: function test04_div_mit_sidebar(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  iSidebar04:
    name: iSidebar04
    code: "function iSidebar04(d, d1, d2, dToggle = null, w = 100, startOpen = true)
      {\r

      \  mStyle(d1, { h: '100%', w: startOpen ? w : 0, position:
      'absolute', z: 1, top: 0, left: 0, overflow: 'hidden', transition: '0.5s'
      });\r

      \  mStyle(d2, { h: '100%', maleft: startOpen ? w : 0, box: true,
      transition: '0.5s' }, null, null);\r

      \  d1.isOpen = startOpen;\r

      \  let fToggle = () => {\r

      \    d1.isOpen = !d1.isOpen;\r

      \    let wOpen = valf(d1.wNeeded, w)\r

      \    mToggle(d1, 'width', 0, wOpen);\r

      \    mToggle(d2, 'margin-left', 0, wOpen);\r

      \  }\r

      \  let fOpen = () => {\r

      \    if (d1.isOpen) return;\r

      \    fToggle();\r

      \  }\r

      \  let fClose = () => {\r

      \    if (!d1.isOpen) return;\r

      \    fToggle();\r

      \  }\r

      \  let fReplaceContent = cont => {\r

      \    d1.style.width = 'auto'; \r

      \    d1.innerHTML = cont;\r

      \    let wNeeded = d1.wNeeded = getRect(d1).w;\r

      \    d1.wCurrent = d1.style.width = makeUnitString(wNeeded); \r

      \    console.log('now wNeeded is', d1.wNeeded);\r

      \    if (!d1.isOpen) d1.style.width = 0;\r

      \  };\r

      \  let fAddContent = cont => {\r

      \    d1.style.width = 'auto'; \r

      \    mAppend(d1, isString(cont) ? mText(cont, d1) : cont);\r

      \    let wNeeded = d1.wNeeded = getRect(d1).w;\r

      \    d1.wCurrent = d1.style.width = makeUnitString(wNeeded); \r

      \    console.log('now wNeeded is', d1.wNeeded);\r

      \    if (!d1.isOpen) d1.style.width = 0;\r

      \  };\r

      \  let item = mItem({ div: d1, dParent: d, dSibling: d2 });\r

      \  d1.item = item; d1.id = item.id;\r

      \  item.toggle = fToggle;\r

      \  item.open = fOpen;\r

      \  item.close = fClose;\r

      \  item.addContent = fAddContent;\r

      \  item.replaceContent = fReplaceContent;\r

      \  item.w = w;\r

      \  if (isdef(dToggle)) { item.dToggle = dToggle; dToggle.onclick =
      fToggle; }\r

      \  return item;\r

      }\r\n"
    sig: function iSidebar04(d, d1, d2, dToggle = null, w = 100, startOpen = true){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test03_div_mit_sidebar:
    name: test03_div_mit_sidebar
    code: "function test03_div_mit_sidebar() {\r

      \  let dMain = mBy('dMain');\r

      \  mStyle(dMain, { h: '100%', w: '100%', box: true, bg: 'silver',
      padding: 10 });\r

      \  let d = mDiv100(dMain, { position: 'relative', });\r

      \  let d1 = mDiv(d, { bg: wdeeporange });\r

      \  let d2 = mDiv(d, { bg: worange });\r

      \  let sb = iSidebar01(d, d1, d2, d2, 200);\r

      \  sb.fToggle();\r

      }\r\n"
    sig: function test03_div_mit_sidebar(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  iSidebar01:
    name: iSidebar01
    code: "function iSidebar01(d, d1, d2, dToggle = null, w = 100) {\r

      \  mStyle(d1, { h: '100%', w: 100, position: 'absolute', z: 1, top:
      0, left: 0, overflow: 'hidden', transition: '0.5s' });\r

      \  mStyle(d2, { maleft: 100, h: '100%', box: true, transition:
      '0.5s' }, null, null)\r

      \  let fToggle = () => {\r

      \    mToggle(d1, 'width', 0, w); mToggle(d2, 'margin-left', 0, w);\r

      \  }\r

      \  let item = mItem({ div: d1, dParent: d, dSibling: d2 });\r

      \  item.fToggle = fToggle;\r

      \  item.w = w;\r

      \  if (isdef(dToggle)) { item.dToggle = dToggle; dToggle.onclick =
      fToggle; }\r

      \  return item;\r

      }\r\n"
    sig: function iSidebar01(d, d1, d2, dToggle = null, w = 100){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test02_div_mit_sidebar:
    name: test02_div_mit_sidebar
    code: "function test02_div_mit_sidebar() {\r

      \  let dMain = mBy('dMain');\r

      \  mStyle(dMain, { h: '100%', w: '100%', box: true, bg: 'silver',
      padding: 10 });\r

      \  let d = mDiv100(dMain, { position: 'relative', });\r

      \  let d1 = mDiv(d, { bg: wdeeporange });\r

      \  let d2 = mDiv(d, { bg: worange });\r

      \  makeSidebar00(d, d1, d2);\r

      }\r\n"
    sig: function test02_div_mit_sidebar(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  makeSidebar00:
    name: makeSidebar00
    code: "function makeSidebar00(d, d1, d2) {\r

      \  mStyle(d1, { h: '100%', w: 100, position: 'absolute', z: 1, top:
      0, left: 0, overflow: 'hidden', transition: '0.5s' });\r

      \  mStyle(d2, { maleft: 100, h: '100%', box: true, transition:
      '0.5s' }, null, null)\r

      \  d2.onclick = () => {\r

      \    mToggle(d1, 'width', 0, 100); mToggle(d2, 'margin-left', 0,
      100);\r

      \  }\r

      }\r\n"
    sig: function makeSidebar00(d, d1, d2){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test01_show_w3colors:
    name: test01_show_w3colors
    code: "function test01_show_w3colors() {\r

      \  let dMain = mBy('dMain');\r

      \  mCenterCenterFlex(dMain);\r

      \  for (const c of [wblue, wred, worange, wgreen, wamber, wyellow,
      wbrown]) {\r

      \    let d = mDiv(dMain, { w: 100, h: 100, bg: c, margin: 10 });\r

      \  }\r

      }\r\n"
    sig: function test01_show_w3colors(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  test00_div_mit_sidebar:
    name: test00_div_mit_sidebar
    code: "function test00_div_mit_sidebar() {\r

      \  let dMain = mBy('dMain');\r

      \  mStyle(dMain, { h: '100%', w: '100%', box: true, bg: 'silver',
      padding: 10 });\r

      \  let d = mDiv100(dMain, { bg: 'blue', position: 'relative', });\r

      \  let d1 = mDiv(d, { h: '100%', w: 100, position: 'absolute', z: 1,
      top: 0, left: 0, overflow: 'hidden', transition: '0.5s' }, null, 'hallo',
      ['w3-blue']);\r

      \  let d2 = mDiv(d, { maleft: 100, h: '100%', box: true, transition:
      '0.5s' }, null, null, ['w3-orange'])\r

      \  d2.onclick = () => {\r

      \    mToggle(d1, 'width', 0, 100); mToggle(d2, 'margin-left', 0,
      100);\r

      \  }\r

      }\r\n"
    sig: function test00_div_mit_sidebar(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\klavier\start.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 9684
  mAddContent:
    name: mAddContent
    code: "function mAddContent(d, content, styles, opt) { return
      mAddContentAndMeasure(d, content, styles, opt, false, false); }\r\n"
    sig: function mAddContent(d, content, styles, opt){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  contentToElement:
    name: contentToElement
    code: "function contentToElement(cont, styles, keepInLine = true) {\r

      \  let elem = cont;\r

      \  if (isString(cont)) {\r

      \    if (cont[0] === '<') {\r

      \      elem = createElementFromHtml(cont);\r

      \    } else {\r

      \      elem = mText(elem);\r

      \    }\r

      \  }\r

      \  if (keepInLine) styles['white-space'] = 'nowrap';\r

      \  mStyle(elem, styles);\r

      \  return elem;\r

      }\r\n"
    sig: function contentToElement(cont, styles, keepInLine = true){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\klavier\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3489
  multiStyleAnimation:
    name: multiStyleAnimation
    code: "function multiStyleAnimation(elist, ms, callback) {\r

      \  let els = elist.map(x => x[0]);\r

      \  let styles = elist.map(x => x[1]);\r

      \  els.map(x => x.style.transition = '' + ms + 'ms'); \r

      \  for (let i = 0; i < els.length; i++) { mStyle(els[i], styles[i]);
      }\r

      \  DA.TO = setTimeout(() => {\r

      \    els.map(x => x.style.transition = 'unset');\r

      \    if (isdef(callback)) callback();\r

      \  }, ms);\r

      }\r\n"
    sig: function multiStyleAnimation(elist, ms, callback){}
    region: funcs (work.js)
    filename: work.js
    type: func
    fname: work.js
    path: C:\xampp\htdocs\aroot\_other\klavier\work.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3489
  iSidebar:
    name: iSidebar
    code: "function iSidebar(d1, d2, dToggle = null, w = 100, startOpen = true, id)
      {\r

      \  mStyle(d1, { h: '100%', w: startOpen == true ? w : 0, position:
      'absolute', z: 1, top: 0, left: 0, 'overflow': 'hidden' }); \r

      \  mStyle(d2, { h: '100%', maleft: startOpen == true ? w : '0px',
      box: true }, null, null); \r

      \  d1.isOpen = startOpen;\r

      \  d1.wNeeded = w;\r

      \  let tell = () => console.log('sidebar is', d1.isOpen ? 'OPEN' :
      'CLOSED');\r

      \  let fToggle = (ev, animate = true) => {\r

      \    d1.isOpen = !d1.isOpen;\r

      \    let val = d1.isOpen ? d1.wNeeded : 0;\r

      \    if (animate) multiStyleAnimation([[d1, { w: val }], [d2, {
      maleft: val }]], 500, tell);\r

      \    else { mStyle(d1, { w: val }); mStyle(d2, { maleft: val });
      tell(); }\r

      \  }\r

      \  let fOpen = (ev, animate = true) => {\r

      \    if (d1.isOpen) return;\r

      \    fToggle(ev, animate);\r

      \  }\r

      \  let fClose = (ev, animate = true) => {\r

      \    if (!d1.isOpen) return;\r

      \    fToggle(ev, animate);\r

      \  }\r

      \  let fAddContent = (cont, styles) => {\r

      \    mAddContent(d1, cont, styles, { keepInLine: true, replace:
      false });\r

      \    let sz = getSizeNeeded(d1);\r

      \    d1.wNeeded = sz.w;\r

      \    if (d1.isOpen) { mStyle(d1, { w: d1.wNeeded }); mStyle(d2, {
      maleft: d1.wNeeded }); }\r

      \  };\r

      \  let fReplaceContent = (cont, styles) => { clearElement(d1);
      fAddContent(cont, styles); };\r

      \  id = isdef(id) ? id : !isEmpty(d1.id) ? d1.id : getUID('sb');\r

      \  let item = mItem(id, { div: d1 }, { type: 'sidebar', w: w,
      toggle: fToggle, open: fOpen, close: fClose, addContent: fAddContent,
      replaceContent: fReplaceContent },true);\r

      \  if (!isEmpty(d2.id)) item.idContent = d2.id;\r

      \  if (isdef(dToggle)) { iAdd(item, { dToggle: dToggle });
      dToggle.onclick = fToggle; }\r

      \  return item;\r

      }\r\n"
    sig: function iSidebar(d1, d2, dToggle = null, w = 100, startOpen = true, id){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  showChatWindow:
    name: showChatWindow
    code: "function showChatWindow() { let d = mBy('dChatWindow'); mStyle(d, {
      display: 'block' }); return d; }\r\n"
    sig: function showChatWindow(){}
    region: var (chat.js)
    filename: chat.js
    type: func
    fname: chat.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\chat.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3871
  deactivateChat:
    name: deactivateChat
    code: "function deactivateChat(key) { \r

      \  console.log('deactivate chat',key,ActiveChats[key]);\r

      \  mClassRemove(ActiveChats[key].div, 'activeChat');
      clearChatWindow(); \r

      }\r\n"
    sig: function deactivateChat(key){}
    region: var (chat.js)
    filename: chat.js
    type: func
    fname: chat.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\chat.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3871
  clearChatWindow:
    name: clearChatWindow
    code: "function clearChatWindow() { clearElement('dChatWindow'); }\r\n"
    sig: function clearChatWindow(){}
    region: var (chat.js)
    filename: chat.js
    type: func
    fname: chat.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\chat.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3871
  chatStartOrActivate:
    name: chatStartOrActivate
    code: "function chatStartOrActivate() {\r

      \  if (nundef(DA.currentContact) && nundef(DA.activeChat)) {\r

      \    console.log('no current contact!');\r

      \  } else if (nundef(DA.currentContact)) {\r

      \    console.log('no current contact! - activate activeChat!');\r

      \    console.log('(nothing to do!)')\r

      \  } else if (DA.currentContact == DA.activeChat) {\r

      \    console.log('currentContact is already active',
      DA.currentContact);\r

      \    return;\r

      \  } else if (isdef(ActiveChats[DA.currentContact])) {\r

      \    console.log('messages have been loaded for', DA.currentContact,
      '- just activate');\r

      \    activateChat(DA.currentContact);\r

      \    console.log('if another contact was active, deactivate,');\r

      \    console.log('activate this new contact');\r

      \  } else {\r

      \    console.log('new data for', DA.currentContact, 'have to be
      requested from phphost!');\r

      \    let data = { username: Username, currentContact:
      DA.currentContact, data_type: 'chat' };\r

      \    get_request('chat', data);\r

      \  }\r

      }\r\n"
    sig: function chatStartOrActivate(){}
    region: var (chat.js)
    filename: chat.js
    type: func
    fname: chat.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\chat.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3871
  activateChat:
    name: activateChat
    code: "function activateChat(username) {\r

      \  if (DA.activeChat == username) {console.log('already
      active:',username); return;}\r

      \  if (isdef(DA.activeChat) && DA.activeChat != username)
      deactivateChat(DA.activeChat);\r

      \  DA.activeChat = username;\r

      \  let active = ActiveChats[username];\r

      \  let othername = username;\r

      \  let mename = Username;\r

      \  let other = active.userdata;\r

      \  let me = Userdata;\r

      \  if (nundef(active.div)) {\r

      \    let dcontactlist = mBy('dChat');\r

      \    other.bg = randomColor();\r

      \    other.fg = colorIdealText(other.bg);\r

      \    let dContact = presentInChatList(other, dcontactlist);\r

      \    active.div = dContact;\r

      \    mStyle(dContact, { bg: other.bg, fg: other.fg });\r

      \    dContact.onclick = ()=>activateChat(username);\r

      \  } else {\r

      \    console.log('es gibt schon ein entry fuer', username, 'in chat
      menu',iDiv(active),'\\nactive',active)\r

      \  }\r

      \  mClass(active.div,'activeChat');\r

      \  let d = showChatWindow();\r

      \  clearElement(d);\r

      \  console.log('add title to chatWindow!');\r

      \  for (const msg of active.messages) {\r

      \    let className = msg.sender == othername ? 'message_left' :
      'message_right';\r

      \    let path = getProfileImagePath(msg.sender == othername ? other
      : me);\r

      \    let d1 = mDiv(d);\r

      \    if (msg.sender == othername) mStyle(d1, { bg: other.bg, fg:
      other.fg });\r

      \    let dImg = mImg(path, d1, { w: 40, h: 40, rounding: '50%' },
      'profile_img');\r

      \    let dtext = mText(msg.message, d1, {});\r

      \    mStyle(d1, { 'box-shadow': '0px 0px 10px #aaa', rounding: 10,
      padding: 10, matop: 10, display: 'flex', gap: 10, float: msg.sender ==
      othername ? 'left' : 'right', w: '60%' });\r

      \  }\r

      }\r\n"
    sig: function activateChat(username){}
    region: var (chat.js)
    filename: chat.js
    type: func
    fname: chat.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\chat.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3871
  chat_2handleResult:
    name: chat_2handleResult
    code: "function chat_2handleResult(result) {\r

      \  result = JSON.parse(result);\r

      \  console.log('chat result:', result);\r

      \  ActiveChats[result.userdata.username] = result;\r

      \  activateChat(result.userdata.username);\r

      }\r\n"
    sig: function chat_2handleResult(result){}
    region: var (chat.js)
    filename: chat.js
    type: func
    fname: chat.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\chat.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3871
  presentInChatList:
    name: presentInChatList
    code: "function presentInChatList(result, dParent) {\r

      \  let d2 = mDiv(dParent, { display: 'flex', gap: 10, margin: 10,
      padding: 10, bg: 'white', fg: 'dimgray' });\r

      \  d2.setAttribute('username', result.username);\r

      \  let path = getProfileImagePath(result);\r

      \  let img = mImg(path, d2, { h: 50 });\r

      \  let d3 = mDiv(d2);\r

      \  let name = mText(result.username, d3); \r

      \  return d2;\r

      }\r\n"
    sig: function presentInChatList(result, dParent){}
    region: var (chat.js)
    filename: chat.js
    type: func
    fname: chat.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\chat.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691784.855
    size: 3871
  initPage:
    name: initPage
    code: "function initPage() {\r

      \  let colors = ['#27344b', '#485b6c', '#383e48', '#f2f7f8'];\r

      \  mStyle(dMain, { padding: 0, margin: 0 });\r

      \  let dLeft = mDiv(dMain, { hmin: 500, bg: colors[0], flex: 1 },
      'dLeft');\r

      \  let dRight = mDiv(dMain, { hmin: 500, flex: 4 }, 'dRight');\r

      \  let dHeader = mDiv(dRight, { bg: colors[1], align: 'center', h:
      70, fz: 40, family: 'summervibes', position: 'relative' }, 'dHeader', 'My
      Chat');\r

      \  let dContainer = mDiv(dRight, { display: 'flex' });\r

      \  let dInnerLeft = mDiv(dContainer, { position: 'relative', hmin:
      430, bg: colors[2], flex: 1 }, 'dInnerLeft'); \r

      \  mCenterCenterFlex(dInnerLeft);\r

      \  let dInnerRight = mDiv(dContainer, { transition: `all
      ${DELAY_PANE}ms ease`, hmin: 430, bg: colors[3], flex: 2, align: 'center'
      }, 'dInnerRight');\r

      \  let dChatWindow = mDiv(dInnerRight, { display: 'none',
      'overflow-x': 'hidden', 'overflow-y': 'auto',padding: 10, fg: 'black',
      align: 'left' }, 'dChatWindow');\r

      \  let dGameWindow = mDiv(dInnerRight, { display: 'none', overflow:
      'hidden' }, 'dGameWindow');\r

      \  let dUserInfo = mDiv(dLeft, { padding: 10, align: 'center' },
      'dUserInfo');\r

      \  let dToolbar = mDiv(dLeft, { matop: 40, align: 'center' });\r

      \  for (const t of ['Games', 'Tables', 'Chat', 'Contacts',
      'Account']) {\r

      \    let text = t + ` <img
      src=\"../base/assets/images/icons/${t}.png\" height=\"90%\"
      style=\"float:right\"/>`;\r

      \    let dLabel = mLabel(text, dToolbar, { padding: 5, cursor:
      'pointer', w: '100%', h: 30, display: 'block', 'border-bottom': 'solid
      thin #ffffff55' });\r

      \    dLabel.onclick = () =>
      window['onClickMenu'](t.toLowerCase());\r

      \    let d = mDiv(dInnerLeft, { position: 'absolute', w: '100%', h:
      '100%', display: 'none' }, 'd' + t);\r

      \  }\r

      }\r\n"
    sig: function initPage(){}
    region: var (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  closeLeftPane:
    name: closeLeftPane
    code: "function closeLeftPane() {\r

      \  if (!paneOpen) return 0;\r

      \  let right = mBy('dInnerRight');\r

      \  mStyle(right, { flex: 2 });\r

      \  paneOpen = false;\r

      \  return DELAY_PANE;\r

      }\r\n"
    sig: function closeLeftPane(){}
    region: left (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  openLeftPane:
    name: openLeftPane
    code: "function openLeftPane() {\r

      \  if (paneOpen) return 0;\r

      \  let right = mBy('dInnerRight');\r

      \  mStyle(right, { flex: 0 });\r

      \  paneOpen = true;\r

      \  return DELAY_PANE;\r

      }\r\n"
    sig: function openLeftPane(){}
    region: left (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  showLoader:
    name: showLoader
    code: "function showLoader() { mBy('dLoader').style.display = \"unset\"; }\r\n"
    sig: function showLoader(){}
    region: loader (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  hideLoader:
    name: hideLoader
    code: "function hideLoader() { mBy('dLoader').style.display = \"none\"; }\r\n"
    sig: function hideLoader(){}
    region: loader (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  transitionTo:
    name: transitionTo
    code: "function transitionTo(id) {\r

      \  let delay = dCurrent ? .1 : 0;\r

      \  hideCurrent();\r

      \  setTimeout(() => setCurrent(id), delay);\r

      }\r\n"
    sig: function transitionTo(id){}
    region: transition (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  hideCurrent:
    name: hideCurrent
    code: "function hideCurrent() {\r

      \  if (dCurrent) {\r

      \    if (dCurrent.id == 'dChat')
      disappear(mBy('dChatWindow'),DELAY_DISAPPEAR);\r

      \    disappear(dCurrent, DELAY_DISAPPEAR); \r

      \    dCurrent = null; \r

      \    return DELAY_DISAPPEAR;\r

      \  } else return 0;\r

      }\r\n"
    sig: function hideCurrent(){}
    region: transition (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  showCurrent:
    name: showCurrent
    code: "function showCurrent(id) { if (isdef(dCurrent) && dCurrent.id == id) {
      return 0; } else { dCurrent = mBy(id); mStyle(dCurrent, { overflow:
      'hidden' }); show(id); return DELAY_APPEAR } };\r\n"
    sig: function showCurrent(id){}
    region: transition (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  setCurrent:
    name: setCurrent
    code: "function setCurrent(id) {\r

      \  if (dCurrent && dCurrent.id == id) return;\r

      \  else if (dCurrent) hideCurrent();\r

      \  dCurrent = mBy(id); mStyle(dCurrent, { overflow: 'hidden' });
      show(id); return dCurrent;\r

      }\r\n"
    sig: function setCurrent(id){}
    region: transition (page.js)
    filename: page.js
    type: func
    fname: page.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\page.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 3619
  aniSequence:
    name: aniSequence
    code: "function aniSequence() {\r\n}\r\n"
    sig: function aniSequence(){}
    region: funcs (utils.js)
    filename: utils.js
    type: func
    fname: utils.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\utils.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 4310
  aniSuper:
    name: aniSuper
    code: "function aniSuper(elem, name, duration, easing, delay, iterations,
      direction, before_after, playstate) {\r

      }\r\n"
    sig: function aniSuper(elem, name, duration, easing, delay, iterations,
      direction, before_after, playstate){}
    region: funcs (utils.js)
    filename: utils.js
    type: func
    fname: utils.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\utils.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 4310
  disappear:
    name: disappear
    code: "function disappear(elem, msDuration = 1000, msStartAfter = 0) {\r

      \  if (isString(elem)) elem = mBy(elem);\r

      \  if (nundef(elem)) return;\r

      \  mStyle(elem, { overflow: 'hidden', animation: `disappear
      ${msDuration}ms ease` });\r

      \  setTimeout(() => { hide(elem); mStyle(elem, { animation: 'unset'
      }); }, msDuration);\r

      }\r\n"
    sig: function disappear(elem, msDuration = 1000, msStartAfter = 0){}
    region: funcs (utils.js)
    filename: utils.js
    type: func
    fname: utils.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\utils.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 4310
  get_request:
    name: get_request
    code: "function get_request(type, data) {\r

      \  var xmlhttp = new XMLHttpRequest();\r

      \  xmlhttp.onreadystatechange = function () {\r

      \    if (this.readyState == 4 && this.status == 200) {\r

      \      handle_result(type, this.responseText);\r

      \    }\r

      \  };\r

      \  let url = `php/${type}.php`;\r

      \  let isFirst = true;\r

      \  for(const k in data){\r

      \    url+=(isFirst?'?':'&') + k + '=' + data[k];\r

      \    isFirst = false;\r

      \  }\r

      \  xmlhttp.open(\"GET\", url, true);\r

      \  xmlhttp.send();\r

      }\r\n"
    sig: function get_request(type, data){}
    region: funcs (utils.js)
    filename: utils.js
    type: func
    fname: utils.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\utils.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 4310
  loadassets:
    name: loadassets
    code: "async function loadassets() {\r

      \  C52 = await localOrRoute('C52', '../base/assets/c52.yaml');\r

      \  symbolDict = Syms = await localOrRoute('syms',
      '../base/assets/allSyms.yaml');\r

      \  SymKeys = Object.keys(Syms);\r

      \  ByGroupSubgroup = await localOrRoute('gsg',
      '../base/assets/symGSG.yaml');\r

      \  WordP = await
      route_path_yaml_dict('../base/assets/math/allWP.yaml');\r

      \  DB = await route_path_yaml_dict('../DB.yaml');\r

      \  start();\r

      }\r\n"
    sig: async function loadassets(){}
    region: funcs (utils.js)
    filename: utils.js
    type: func
    fname: utils.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\utils.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 4310
  getProfileImagePath:
    name: getProfileImagePath
    code: "function getProfileImagePath(userrecord){\r

      \  let dir = '../base/assets/images/';\r

      \  let path = dir + (userrecord.hasImage ? userrecord.username :
      'unknown_user') + '.jpg';\r

      \  return path;\r

      }\r\n"
    sig: function getProfileImagePath(userrecord){}
    region: funcs (utils.js)
    filename: utils.js
    type: func
    fname: utils.js
    path: C:\xampp\htdocs\aroot\_other\simply\js\utils.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691783.8542
    size: 4310
  mpOverImage:
    name: mpOverImage
    code: "function mpOverImage(d, dParent, sz) {\r

      \  let b = getRect(dParent);\r

      \  let cx = b.w / 2 + b.x;\r

      \  let cy = b.h / 2 + b.y;\r

      \  sz=Math.max(sz,50);\r

      \  d.style.top = (cy - sz / 2) + 'px';\r

      \  d.style.left = (cx - sz / 4) + 'px';\r

      \  d.style.color = 'green';\r

      \  d.style.fontSize = sz + 'px';\r

      \  d.style.display = 'block';\r

      \  return d;\r

      }\r\n"
    sig: function mpOverImage(d, dParent, sz){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  createSuccessMarker:
    name: createSuccessMarker
    code: "function createSuccessMarker(sz) {\r

      \  let d = mCreate('div');\r

      \  d.innerHTML = 'J'; \r

      \  mClass(d, 'feedbackMarker');\r

      \  document.body.appendChild(d);\r

      \  Markers.push(d);\r

      \  return d;\r

      }\r\n"
    sig: function createSuccessMarker(sz){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  createMarker_orig:
    name: createMarker_orig
    code: "function createMarker_orig(markerId) {\r

      \  let divs = document.getElementsByClassName('feedbackMarker');\r

      \  let d;\r

      \  d = mCreate('div');\r

      \  d.innerHTML = MarkerText[markerId]; \r

      \  mClass(d, 'feedbackMarker');\r

      \  document.body.appendChild(d);\r

      \  Markers.push(d);\r

      \  return d;\r

      }\r\n"
    sig: function createMarker_orig(markerId){}
    region: Markers (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  show_checkmark:
    name: show_checkmark
    code: "function show_checkmark(dParent,styles={fg:'limegreen'}){\r

      \  let b = getRect(dParent);\r

      \  let fz = b.h;\r

      \  if (nundef(styles.fz)) styles.fz = fz;\r

      \  let
      d1=mDiv(document.body,{position:'fixed',w:b.w,h:b.h,top:b.t,left:b.l,alig\
      n:'center',overflow:'visible'});\r

      \  let d2=mDiv(d1);//,{},null,'A');  //&#10003;');//'H');\r

      \  mClass(d1,'no_events');\r

      \  d2.innerHTML = 'A';\r

      \  d2.style.fontSize = ''+Math.round(b.h)+'px'; \r

      \  d2.style.color = 'green';\r

      \  Markers.push(d1);\r

      \  // let d=mDiv(document.body,styles1,null,'hallo');
      //'&#10003;');\r

      }\r\n"
    sig: function show_checkmark(dParent,styles={fg:'limegreen'}){}
    region: geht (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  create_marker:
    name: create_marker
    code: "function create_marker(text) {\r

      \  let d = mCreate('div');\r

      \  d.innerHTML = text; \r

      \  mStyle(d,{position:'fixed',fz:50});\r

      \  document.body.appendChild(d);\r

      \  Markers.push(d);\r

      \  return d;\r

      }\r\n"
    sig: function create_marker(text){}
    region: geht (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  mp_over:
    name: mp_over
    code: "function mp_over(d, dParent, fz, color, picStyle) {\r

      \  let b = getRect(dParent);\r

      \  let cx = b.w / 2 + b.x;\r

      \  let cy = b.h / 2 + b.y;\r

      \  d.style.top = picStyle == 'segoeBlack' ? ((cy - fz * 2 / 3) +
      'px') : ((cy - fz / 2) + 'px');\r

      \  d.style.left = picStyle == 'segoeBlack' ? ((cx - fz / 3) + 'px')
      : ((cx - fz * 1.2 / 2) + 'px');\r

      \  d.style.color = color;\r

      \  d.style.fontSize = fz + 'px';\r

      \  d.style.display = 'block';\r

      \  return d;\r

      }\r\n"
    sig: function mp_over(d, dParent, fz, color, picStyle){}
    region: geht (markers.js)
    filename: markers.js
    type: func
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  present_account:
    name: present_account
    code: "function present_account(userdata) {\r

      \  DA.imageChanged = DA.colorChanged = false; \r

      \  return `\r

      \  <div id=\"dAccount\" style=\"max-width=500px; margin-top:10px;
      display:flex; animation: appear1 1s ease;justify-content:center;
      align-content:center\">\r

      \    <div id=\"error\">some text</div>\r

      \    <div style='text-align:center'>\r

      \      <form id=\"myform\" autocomplete=\"off\"
      style='text-align:center;background:${userdata.color}'>\r

      \        <span id='img_dd_instruction'
      style=\"font-size:11px;\">drag and drop an image to change</span><br>\r

      \        <img id=\"imgPreview\"
      onload='addColorPicker(\"${userdata.color}\");'
      src='${get_image_path(userdata)}'
      ondragover=\"handle_drag_and_drop(event)\"
      ondrop=\"handle_drag_and_drop(event)\"
      ondragleave=\"handle_drag_and_drop(event)\"\r

      \          style=\"height:200px;margin:10px;\" />\r

      \        <input id='iUsername' type=\"text\" name=\"motto\"
      placeholder='motto' value=\"${userdata.motto}\" autofocus\r

      \          onkeydown=\"if (event.keyCode ===
      13){event.preventDefault();collect_data(event);}\" />\r

      \        <br />\r

      \        <input id='save_settings_button' type=\"button\"
      value=\"Submit\" onclick=\"collect_data(event)\" ><br>\r

      \      </form>\r

      \  </div></div>\r

      \  `; \r

      }\r\n"
    sig: function present_account(userdata){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\base\js\present.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 2927
  present_non_admin_user:
    name: present_non_admin_user
    code: "function present_non_admin_user(username) {\r

      \  load_user(username);\r

      \  get_dictionary();\r

      \  poll_for_table_started();\r

      }\r\n"
    sig: function present_non_admin_user(username){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\base\js\present.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 2927
  present_non_admin_waiting_screen:
    name: present_non_admin_waiting_screen
    code: "function present_non_admin_waiting_screen(){\r

      \  let dParent = mBy('divTest'); show(dParent);
      clearElement(dParent);\r

      \  mStyle(dParent, { position: 'absolute', top: 0, bg: 'green',
      wmin: '100vw', hmin: '100vw' });\r

      \  let dlogout =
      mDiv(dParent,{position:'absolute',right:10,top:4,cursor:'pointer'},'ddd_l\
      ogout',`logout`);\r

      \  dlogout.onclick = onclick_logout;\r

      \  show_user_image(Session.cur_user, dParent);\r

      \  status_message_new(`hi, ${capitalize(Session.cur_user)}, a game
      is starting soon...`, dParent, { classname: 'slow_gradient_blink' });\r

      \  mLinebreak(dParent, 100);\r

      \  show_rankings(dParent);\r

      }\r\n"
    sig: function present_non_admin_waiting_screen(){}
    region: funcs (present.js)
    filename: present.js
    type: func
    fname: present.js
    path: C:\xampp\htdocs\aroot\base\js\present.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 2927
  collect_game_specific_options:
    name: collect_game_specific_options
    code: "function collect_game_specific_options(game) {\r

      \  let poss = Config.games[game].options;\r

      \  if (nundef(poss)) return;\r

      \  let di = {};\r

      \  for (const p in poss) {\r

      \    let fs = mBy(`d_${p}`);\r

      \    let val = get_checked_radios(fs)[0];\r

      \    di[p] = isNumber(val) ? Number(val) : val;\r

      \  }\r

      \  return di;\r

      }\r\n"
    sig: function collect_game_specific_options(game){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  collect_player_list:
    name: collect_player_list
    code: "function collect_player_list(){\r

      \  let d = mBy('d_players');\r

      \  let checkboxes = d.getElementsByTagName('input');\r

      \  Session.game_options.players = [];\r

      \  for (const chk of checkboxes) {\r

      \    if (chk.checked) {\r

      \      Session.game_options.players.push(chk.value);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function collect_player_list(){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  table_options_to_game_options:
    name: table_options_to_game_options
    code: "function table_options_to_game_options(t){\r

      \  console.log('t',t);\r

      \  let settings = {game:{}};\r

      \  copyKeys(t.options,settings.game);\r

      \  return settings;\r

      }\r\n"
    sig: function table_options_to_game_options(t){}
    region: game (settings.js)
    filename: settings.js
    type: func
    fname: settings.js
    path: C:\xampp\htdocs\aroot\base\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 12284
  miAddLabel:
    name: miAddLabel
    code: "function miAddLabel(item, styles) {\r

      \  let d = iDiv(item);\r

      \  if (getTypeOf(d.firstChild) == 'Text') {\r

      \    let handler = d.onmousedown;\r

      \    d.onmousedown = null;\r

      \    let dPic = d;\r

      \    let dParent = d.parentNode;\r

      \    let outerStyles = jsCopy(styles);\r

      \    addKeys({\r

      \      display: 'inline-flex', 'flex-direction': 'column',\r

      \      'justify-content': 'center', 'align-items': 'center',
      'vertical-align': 'top',\r

      \    }, outerStyles);\r

      \    d = mDiv(dParent, outerStyles);\r

      \    mAppend(d, dPic);\r

      \    d.onmousedown = handler;\r

      \    let dLabel = mText(item.label, d, { fz: valf(styles.fz, 20)
      });\r

      \    iAdd(item, { div: d, dPic: dPic, dLabel: dLabel, options:
      outerStyles });\r

      \  } else if (nundef(iLabel(item))) {\r

      \    let dLabel = mText(item.label, d, { fz: valf(styles.fz, 20)
      });\r

      \    iAdd(item, { dLabel: dLabel });\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function miAddLabel(item, styles){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  translateToCssStyle:
    name: translateToCssStyle
    code: "function translateToCssStyle(prop, val) { return mStyleTranslate(prop,
      val); }\r\n"
    sig: function translateToCssStyle(prop, val){}
    region: mGraph (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  translateStylesToCy:
    name: translateStylesToCy
    code: "function translateStylesToCy(styles, group) {\r

      \  let di = {};\r

      \  for (const k in styles) {\r

      \    let v = styles[k];\r

      \    let [prop, val] = translateToCssStyle(k, v, true);\r

      \    if (group == 'edge' && k == 'bg') di['line-color'] = val;\r

      \    else if (prop == 'shape' && val == 'hex') {\r

      \      di.shape = 'polygon';\r

      \      di['shape-polygon-points'] = [0, -1, 1, -0.5, 1, 0.5, 0, 1,
      -1, 0.5, -1, -0.5];\r

      \    }\r

      \    else di[prop] = val;\r

      \  }\r

      \  return di;\r

      }\r\n"
    sig: function translateStylesToCy(styles, group){}
    region: mGraph (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getBorderPropertyForDirection:
    name: getBorderPropertyForDirection
    code: "function getBorderPropertyForDirection(dir) { return { 0: 'border-top',
      1: 'border-right', 2: 'border-bottom', 3: 'border-left' }[dir]; }\r\n"
    sig: function getBorderPropertyForDirection(dir){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mAddContentAndMeasureW:
    name: mAddContentAndMeasureW
    code: "function mAddContentAndMeasureW(d, content, styles, opt) { return
      mAddContentAndMeasure(d, content, styles, opt, true, false); }\r\n"
    sig: function mAddContentAndMeasureW(d, content, styles, opt){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mAddContentAndMeasureH:
    name: mAddContentAndMeasureH
    code: "function mAddContentAndMeasureH(d, content, styles, opt) { return
      mAddContentAndMeasure(d, content, styles, opt, false, true); }\r\n"
    sig: function mAddContentAndMeasureH(d, content, styles, opt){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mAddContentAndMeasure:
    name: mAddContentAndMeasure
    code: "function mAddContentAndMeasure(d, content, styles, opts = {}, wNeeded =
      true, hNeeded = true) {\r

      \  let keepInLine = valf(opts.keepInLine, false);\r

      \  let replace = valf(opts.replace, false);\r

      \  let newline = valf(opts.newline, false);\r

      \  let d1 = content;\r

      \  if (isDOM(content)) mAppend(d, content);\r

      \  else if (isDict(content)) {\r

      \    d1 = iDiv(content);\r

      \    if (isDOM(d1)) {\r

      \      mAppend(d, d1);\r

      \    } else if (nundef(d1)) {\r

      \      d1 = mDiv(d, { bg: 'random' });\r

      \      mNode(content, d1);\r

      \    } else {\r

      \      doms = recFindDOMs(content);\r

      \      d1 = mDiv(d, { bg: 'random' });\r

      \      for (const dom of doms) { mAppend(d1, dom); }\r

      \    }\r

      \  } else if (isList(content)) {\r

      \    d1 = mDiv(d, { bg: 'random' });\r

      \    content = content.join(',');\r

      \    d1.innerHTML = content;\r

      \  } else if (isString(content) && content[0] === '<') {\r

      \    d1 = createElementFromHtml(cont);\r

      \    mAppend(d, d1);\r

      \  } else {\r

      \    d1 = mText(content, d);\r

      \  }\r

      \  if (replace) clearElement(d);\r

      \  if (keepInLine) styles['white-space'] = 'nowrap';\r

      \  if (newline) styles.display = 'block';\r

      \  if (isdef(styles)) mStyle(d1, styles);\r

      \  if (wNeeded && hNeeded) setSizeNeeded(d);\r

      \  else if (wNeeded) setWNeeded(d);\r

      \  else if (hNeeded) setHNeeded(d);\r

      \  return d1;\r

      }\r\n"
    sig: function mAddContentAndMeasure(d, content, styles, opts = {}, wNeeded =
      true, hNeeded = true){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mAppend:
    name: mAppend
    code: "function mAppend(d, child) { toElem(d).appendChild(child); return child;
      }\r\n"
    sig: function mAppend(d, child){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mAttrs:
    name: mAttrs
    code: "function mAttrs(elem, attrs) { for (const k in attrs) {
      elem.setAttribute(k, attrs[k]); } }\r\n"
    sig: function mAttrs(elem, attrs){}
    region: from (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mBackground:
    name: mBackground
    code: "function mBackground(bg, fg) { mStyle(document.body, { bg: bg, fg: fg });
      }\r\n"
    sig: function mBackground(bg, fg){}
    region: from (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mBoxFromMargins:
    name: mBoxFromMargins
    code: "function mBoxFromMargins(dParent, t, r, b, l, styles, id, inner, classes)
      {\r

      \  let d = mDiv(dParent, { position: 'absolute', top: t, right: r,
      bottom: b, left: l }, id, inner, classes);\r

      \  let pos = dParent.style.position;\r

      \  if (pos != 'absolute') dParent.style.position = 'relative';\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  return d;\r

      }\r\n"
    sig: function mBoxFromMargins(dParent, t, r, b, l, styles, id, inner, classes){}
    region: from (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mButton:
    name: mButton
    code: "function mButton(caption, handler, dParent, styles, classes, id) {\r

      \  let x = mCreate('button');\r

      \  x.innerHTML = caption;\r

      \  if (isdef(handler)) x.onclick = handler;\r

      \  if (isdef(dParent)) toElem(dParent).appendChild(x);\r

      \  if (isdef(styles)) mStyle(x, styles);\r

      \  if (isdef(classes)) mClass(x, classes);\r

      \  if (isdef(id)) x.id = id;\r

      \  return x;\r

      }\r\n"
    sig: function mButton(caption, handler, dParent, styles, classes, id){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mBy:
    name: mBy
    code: "function mBy(id) { return document.getElementById(id); }\r\n"
    sig: function mBy(id){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCellContent:
    name: mCellContent
    code: "function mCellContent(dCell, styles, html) {\r

      \  clearElement(dCell);\r

      \  let d = mDiv(dCell, { w: '100%', h: '100%' });\r

      \  mCenterCenterFlex(d);\r

      \  let d1 = mDiv(d, styles, null, html);\r

      \  mCenterCenterFlex(d1);\r

      \  return d1;\r

      }\r\n"
    sig: function mCellContent(dCell, styles, html){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mCenterAt:
    name: mCenterAt
    code: "function mCenterAt(d, x, y) {\r

      \  let rect = getRect(d);\r

      \  mPos(d, x - rect.w / 2, y - rect.h / 2);\r

      }\r\n"
    sig: function mCenterAt(d, x, y){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mCenterCenterFlex:
    name: mCenterCenterFlex
    code: "function mCenterCenterFlex(d, gap) { mCenterFlex(d, true, true, true,
      gap); }\r\n"
    sig: function mCenterCenterFlex(d, gap){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCenterFlexNowrap:
    name: mCenterFlexNowrap
    code: "function mCenterFlexNowrap(d) { mCenterFlex(d, true, true, false); }\r\n"
    sig: function mCenterFlexNowrap(d){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mCenterFlex:
    name: mCenterFlex
    code: "function mCenterFlex(d, hCenter = true, vCenter = false, wrap = true, gap
      = null) {\r

      \  let styles = { display: 'flex' };\r

      \  if (hCenter) styles['justify-content'] = 'center';\r

      \  styles['align-content'] = vCenter ? 'center' : 'flex-start';\r

      \  if (wrap) styles['flex-wrap'] = 'wrap';\r

      \  if (gap) styles.gap = gap;\r

      \  mStyle(d, styles);\r

      }\r\n"
    sig: function mCenterFlex(d, hCenter = true, vCenter = false, wrap = true, gap =
      null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mClass0:
    name: mClass0
    code: "function mClass0(d) { d = toElem(d); d.className = ''; }\r\n"
    sig: function mClass0(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mClassReplace:
    name: mClassReplace
    code: "function mClassReplace(d, weg, her) { mClassRemove(d, weg); mClass(d,
      her); }\r\n"
    sig: function mClassReplace(d, weg, her){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mClass:
    name: mClass
    code: "function mClass(d) {\r

      \  d = toElem(d);\r

      \  if (arguments.length == 2) {\r

      \    let arg = arguments[1];\r

      \    if (isString(arg) && arg.indexOf(' ') > 0) { arg =
      [toWords(arg)]; }\r

      \    else if (isString(arg)) arg = [arg];\r

      \    if (isList(arg)) {\r

      \      for (let i = 0; i < arg.length; i++) {\r

      \        d.classList.add(arg[i]);\r

      \      }\r

      \    }\r

      \  } else for (let i = 1; i < arguments.length; i++)
      d.classList.add(arguments[i]);\r

      }\r\n"
    sig: function mClass(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mClassRemove:
    name: mClassRemove
    code: "function mClassRemove(d) { d = toElem(d); for (let i = 1; i <
      arguments.length; i++) d.classList.remove(arguments[i]); }\r\n"
    sig: function mClassRemove(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mHasClass:
    name: mHasClass
    code: "function mHasClass(el, className) {\r

      \  if (el.classList) return el.classList.contains(className);\r

      \  else return !!el.className.match(new RegExp('(\\\\s|^)' +
      className + '(\\\\s|$)'));\r

      }\r\n"
    sig: function mHasClass(el, className){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mCheckbox:
    name: mCheckbox
    code: "function mCheckbox(label, val, dParent, handler, styles) {\r

      \  styles.align = 'left';\r

      \  let d = mDiv(dParent, styles);\r

      \  let hpad = valf(styles.hpadding, 4);\r

      \  let dLabel = mDiv(d, { w: '40%', align: 'right', hpadding: hpad,
      display: 'inline-block' }, null, label); \r

      \  let d2 = mDiv(d, { display: 'inline', w: '50%', hpadding: hpad
      });\r

      \  let inp = createElementFromHTML(\r

      \    `<input type=\"checkbox\" class=\"checkbox\" ` + (val === true
      ? 'checked=true' : '') + ` >`);\r

      \  mAppend(d2, inp);\r

      \  inp.onchange = (ev) => { handler(inp.checked, ev); };\r

      \  return inp;\r

      }\r\n"
    sig: function mCheckbox(label, val, dParent, handler, styles){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mColorPickerBehavior:
    name: mColorPickerBehavior
    code: "function mColorPickerBehavior(value, targetImage, elem, handler) {\r

      \  let hues = arrTake(colorHueWheel(value), 10);\r

      \  let colorPalette = hues.map(x => colorFrom(colorHSLBuild(x)));\r

      \  let palette = isdef(targetImage) ?
      colorPaletteFromImage(targetImage) : colorPalette;\r

      \  mStyle(elem, { bg: value });\r

      \  let inp = new JSColor(elem, { alpha: 'ff', closeButton: true,
      value: value, palette: palette, });\r

      \  inp.onInput = () => { let c = inp.toHEXAString(); handler(c); }\r

      \  return inp;\r

      }\r\n"
    sig: function mColorPickerBehavior(value, targetImage, elem, handler){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mColorPickerControl:
    name: mColorPickerControl
    code: "function mColorPickerControl(label, value, targetImage, dParent, handler,
      styles = { hpadding: 25 }) {\r

      \  let d = mDiv(dParent, styles);\r

      \  let hpad = valf(styles.hpadding, 6);\r

      \  let dLabel = mDiv(d, { 'vertical-align': 'top', w: '35%', align:
      'right', hpadding: hpad, display: 'inline-block' }, null, label);\r

      \  let hues = arrTake(colorHueWheel(value), 10);\r

      \  let colorPalette = hues.map(x => colorFrom(colorHSLBuild(x)));\r

      \  let palette = isdef(targetImage) ?
      colorPaletteFromImage(targetImage) : colorPalette;\r

      \  let elem = mDiv(d, { w: '55%', hpadding: hpad, h: 24, rounding:
      hpad, display: 'inline-block' });\r

      \  let inp = new JSColor(elem, {\r

      \    alpha: 'ff',\r

      \    closeButton: true,\r

      \    value: value,\r

      \    palette: palette,\r

      \  });\r

      \  inp.onInput = () => { let c = inp.toHEXAString(); handler(c); }\r

      \  return inp;\r

      }\r\n"
    sig: "function mColorPickerControl(label, value, targetImage, dParent, handler,
      styles = { hpadding: 25 }){}"
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCreate:
    name: mCreate
    code: "function mCreate(tag, styles, id) { let d = document.createElement(tag);
      if (isdef(id)) d.id = id; if (isdef(styles)) mStyle(d, styles); return d;
      }\r\n"
    sig: function mCreate(tag, styles, id){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDestroy:
    name: mDestroy
    code: "function mDestroy(elem) { if (isString(elem)) elem = mById(elem);
      purge(elem); } \r\n"
    sig: function mDestroy(elem){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mDiv:
    name: mDiv
    code: "function mDiv(dParent, styles, id, inner, classes, sizing) {\r

      \  dParent = toElem(dParent);\r

      \  let d = mCreate('div');\r

      \  if (dParent) mAppend(dParent, d);\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  if (isdef(classes)) mClass(d, classes);\r

      \  if (isdef(id)) d.id = id;\r

      \  if (isdef(inner)) d.innerHTML = inner;\r

      \  if (isdef(sizing)) { setRect(d, sizing); }\r

      \  return d;\r

      }\r\n"
    sig: function mDiv(dParent, styles, id, inner, classes, sizing){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDiv100:
    name: mDiv100
    code: "function mDiv100(dParent, styles, id, sizing = true) { let d =
      mDiv(dParent, styles, id); mSize(d, 100, 100, '%', sizing); return d;
      }\r\n"
    sig: function mDiv100(dParent, styles, id, sizing = true){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDivRestOfPage:
    name: mDivRestOfPage
    code: "function mDivRestOfPage(dParent, dAbove, styles, id, inner, classes,
      sizing) {\r

      \  let d = mDiv(dParent, styles, id, inner, classes, sizing);\r

      \  let fSize = () => {\r

      \    let top = getRect(dAbove).h;\r

      \    console.log('top', top, '?');\r

      \    let h = window.innerHeight - (isNumber(top) ? top : 31);\r

      \    mSize(d, '100%', h);\r

      \    setRect(d);\r

      \    console.log('d', d);\r

      \  };\r

      \  new ResizeObserver(() => {\r

      \    let r = getRect(dAbove);\r

      \    console.log('haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar', r);\r

      \    fSize();\r

      \  }).observe(dAbove);\r

      \  window.onresize = fSize;\r

      \  return d;\r

      }\r\n"
    sig: function mDivRestOfPage(dParent, dAbove, styles, id, inner, classes,
      sizing){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mDover:
    name: mDover
    code: "function mDover(dParent, styles = {}, sizing = true) {\r

      \  let d = mDiv(dParent, styles);\r

      \  mIfNotRelative(dParent);\r

      \  mStyle(d, { position: 'absolute', left: 0, top: 0, w: '100%', h:
      '100%' });\r

      \  setRect(d, sizing);\r

      \  return d;\r

      }\r\n"
    sig: function mDover(dParent, styles = {}, sizing = true){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDropImage:
    name: mDropImage
    code: "function mDropImage(e, img) {\r

      \  var dt = e.dataTransfer;\r

      \  console.log('dropped', dt)\r

      \  var files = dt.files;\r

      \  if (files.length) {\r

      \    let imgFile = files[0];\r

      \    var reader = new FileReader();\r

      \    reader.onload = function (e) {\r

      \      img.src = e.target.result;\r

      \      imgFile.data = e.target.result; \r

      \    }\r

      \    reader.readAsDataURL(imgFile);\r

      \  } else {\r

      \    console.log('dropped on', e.target, 'img', img);\r

      \    clearElement(img);\r

      \    var html = dt.getData('text/html');\r

      \    console.log('__________dataTransfer', html);\r

      \    let match = html &&
      /\\bsrc=\"?([^\"\\s]+)\"?\\s*/.exec(html);\r

      \    let url = match && match[1];\r

      \    if (url) {\r

      \      console.log('JA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\r

      \      img.onerror = function () {\r

      \        alert(\"Error in uploading\");\r

      \      }\r

      \      img.crossOrigin = \"\"; \r

      \      img.src = url;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function mDropImage(e, img){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  unfocusOnEnter:
    name: unfocusOnEnter
    code: "function unfocusOnEnter(ev) {\r

      \  if (ev.key === 'Enter') {\r

      \    ev.preventDefault();\r

      \    mBy('dummy').focus();\r

      \  }\r

      }\r\n"
    sig: function unfocusOnEnter(ev){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  selectText:
    name: selectText
    code: "function selectText(el) {\r

      \  if (el instanceof HTMLTextAreaElement) { el.select(); return; }\r

      \  var sel, range;\r

      \  if (window.getSelection && document.createRange) {\r

      \    sel = window.getSelection();\r

      \    if (sel.toString() == '') {\r

      \      window.setTimeout(function () {\r

      \        range = document.createRange();\r

      \        range.selectNodeContents(el);\r

      \        sel.removeAllRanges();\r

      \        sel.addRange(range);\r

      \      }, 1);\r

      \    }\r

      \  } else if (document.selection) {\r

      \    sel = document.selection.createRange();\r

      \    if (sel.text == '') {\r

      \      range = document.body.createTextRange();\r

      \      range.moveToElementText(el);\r

      \      range.select();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function selectText(el){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  incInput:
    name: incInput
    code: "function incInput(inp, n = 1) {\r

      \  let val = Number(inp.innerHTML);\r

      \  val += n;\r

      \  inp.innerHTML = val;\r

      }\r\n"
    sig: function incInput(inp, n = 1){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mEditRange:
    name: mEditRange
    code: "function mEditRange(label, value, min, max, step, dParent, handler,
      styles, classes, id, triggerOnChange = true) {\r

      \  let d = mDiv(dParent, styles);\r

      \  let hpad = valf(styles.hpadding, 4);\r

      \  let dLabel = mDiv(d, { w: '30%', align: 'right', hpadding: hpad,
      display: 'inline-block' }, null, label);\r

      \  let inpText = mCreateFrom(`<input type='number'  step=${step}
      min=\"${min}\" max=\"${max}\" value=\"${value}\" ></input>`);\r

      \  let inp = mCreateFrom(`<input type=\"range\" step=${step}
      min=\"${min}\" max=\"${max}\" value=\"${value}\" ></input>`);\r

      \  mAppend(d, inpText);\r

      \  mAppend(d, inp);\r

      \  mStyle(inpText, { display: 'inline', w: '20%', align: 'left',
      hpadding: hpad });\r

      \  mStyle(inp, { display: 'inline', w: '40%', hpadding: hpad });\r

      \  inpText.onchange = (ev) => { inp.value = inpText.value;
      handler(inpText.value, ev); };\r

      \  inpText.onclick = ev => selectText(ev.target);\r

      \  inp.onchange = (ev) => { inpText.value = inp.value;
      handler(inpText.value, ev); };\r

      \  if (isdef(classes)) mClass(inp, classes);\r

      \  if (isdef(id)) inp.id = id;\r

      \  return inpText;\r

      }\r\n"
    sig: function mEditRange(label, value, min, max, step, dParent, handler, styles,
      classes, id, triggerOnChange = true){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mEditNumber:
    name: mEditNumber
    code: "function mEditNumber(label, value, dParent, handler, styles, classes, id,
      triggerOnChange = false) {\r

      \  let d = mDiv(dParent, styles);\r

      \  let hpad = valf(styles.hpadding, 4);\r

      \  let dLabel = mDiv(d, { w: '50%', align: 'right', hpadding: hpad,
      display: 'inline-block' }, null, label);\r

      \  if (nundef(handler)) handler = x => console.log(x);\r

      \  let inp = mCreateFrom(`<div contenteditable=\"true\"
      spellcheck=\"false\">${value}</div>  `)\r

      \  mAppend(d, inp);\r

      \  mStyle(inp, { display: 'inline-block', w: '40%', align: 'left',
      hpadding: hpad });\r

      \  inp.addEventListener('keydown', unfocusOnEnter);\r

      \  inp.addEventListener('focusout', ev => { handler(inp.innerHTML,
      ev); });\r

      \  inp.onclick = ev => selectText(ev.target);\r

      \  if (isdef(classes)) mClass(inp, classes);\r

      \  if (isdef(id)) inp.id = id;\r

      \  return inp;\r

      }\r\n"
    sig: function mEditNumber(label, value, dParent, handler, styles, classes, id,
      triggerOnChange = false){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mEdit:
    name: mEdit
    code: "function mEdit(label, value, dParent, handler, styles, classes, id) {\r

      \  let d = mDiv(dParent, styles);\r

      \  let hpad = valf(styles.hpadding, 4);\r

      \  let dLabel = mDiv(d, { w: '50%', align: 'right', hpadding: hpad,
      display: 'inline-block' }, null, label);\r

      \  let inp = mCreateFrom(`<div contenteditable=\"true\"
      spellcheck=\"false\">${value}</div>  `)\r

      \  mAppend(d, inp);\r

      \  mStyle(inp, { display: 'inline-block', w: '50%', align: 'left',
      hpadding: hpad });\r

      \  inp.addEventListener('keydown', unfocusOnEnter);\r

      \  inp.addEventListener('focusout', ev => { handler(inp.innerHTML,
      ev); });\r

      \  inp.onclick = ev => selectText(ev.target);\r

      \  if (isdef(classes)) mClass(inp, classes);\r

      \  if (isdef(id)) inp.id = id;\r

      \  return inp;\r

      }\r\n"
    sig: function mEdit(label, value, dParent, handler, styles, classes, id){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mEditX:
    name: mEditX
    code: "function mEditX(label, val, dParent, styles, classes, handler, id, opt =
      {}) {\r

      \  let defOptions = {\r

      \    alignLabel: 'right',\r

      \    fgLabel: 'silver',\r

      \    wminLabel: 120,\r

      \    alignInput: 'left',\r

      \    fgInput: 'white',\r

      \    wminInput: 50,\r

      \    wminRight: 120,\r

      \    align: 'center',\r

      \  }\r

      \  addKeys(defOptions, opt);\r

      \  let wminTotal = wminLabel + wminRight;\r

      \  if (nundef(styles)) styles = {};\r

      \  if (nundef(styles.wmin)) styles.wmin = 0;\r

      \  styles.wmin = Math.max(styles.wmin, wminTotal);\r

      \  styles.align = opt.align;\r

      \  let dOuter = mDiv(dParent, styles, id, null, classes);\r

      \  let dLabel = mDiv(dOuter, { fg: opt.fgLabel, wmin: opt.wminLabel,
      align: opt.alignLabel }, null, label);\r

      \  let dInput = mDiv(dOuter, { contenteditable: true, spellcheck:
      false, fg: opt.fgInput, wmin: opt.wminInput, align: opt.alignInput },
      null, val);\r

      \  dInput.onfocusout = ev => handler(dInput.innerHTML, ev);\r

      \  dInput.onkeydown = (ev) => {\r

      \    if (ev.key === 'Enter') {\r

      \      ev.preventDefault();\r

      \      mBy('dummy').focus();\r

      \    }\r

      \  }\r

      \  return dInput;\r

      }\r\n"
    sig: function mEditX(label, val, dParent, styles, classes, handler, id, opt =
      {}){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mEditableOnEdited:
    name: mEditableOnEdited
    code: "function mEditableOnEdited(id, dParent, label, initialVal, onEdited,
      onOpening, styles, classes) {\r

      \  let inp = mEditableInput(dParent, label, initialVal, styles,
      classes);\r

      \  inp.id = id;\r

      \  if (isdef(onOpening)) { inp.addEventListener('focus', ev =>
      onOpening(ev)); }\r

      \  inp.addEventListener('focusout', ev => {\r

      \    window.getSelection().removeAllRanges();\r

      \    if (isdef(onEdited)) onEdited(inp.innerHTML, ev);\r

      \  });\r

      \  return inp;\r

      }\r\n"
    sig: function mEditableOnEdited(id, dParent, label, initialVal, onEdited,
      onOpening, styles, classes){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mEditableInput:
    name: mEditableInput
    code: "function mEditableInput(dParent, label, val, styles, classes, id) {\r

      \  let labelElem = mCreateFrom(`<span>${label}</span>  `)\r

      \  let elem = mCreateFrom(`<span contenteditable=\"true\"
      spellcheck=\"false\">${val}</span>  `)\r

      \  elem.addEventListener('keydown', (ev) => {\r

      \    if (ev.key === 'Enter') {\r

      \      ev.preventDefault();\r

      \      mBy('dummy').focus();\r

      \    }\r

      \  });\r

      \  let dui = mDiv(dParent, { margin: 2 });\r

      \  mAppend(dui, labelElem);\r

      \  mAppend(dui, elem);\r

      \  if (isdef(styles)) {\r

      \    if (isdef(styles.wInput)) mStyle(elem, { wmin: styles.wInput
      });\r

      \    mStyle(elem, styles);\r

      \  }\r

      \  if (isdef(classes)) mStyle(elem, classes);\r

      \  if (isdef(id)) elem.id = id;\r

      \  return elem;\r

      }\r\n"
    sig: function mEditableInput(dParent, label, val, styles, classes, id){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFlexWrap:
    name: mFlexWrap
    code: "function mFlexWrap(d) { mFlex(d, 'w'); }\r\n"
    sig: function mFlexWrap(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFlex:
    name: mFlex
    code: "function mFlex(d, or = 'h') {\r

      \  d = toElem(d);\r

      \  d.style.display = 'flex';\r

      \  d.style.flexFlow = (or == 'v' ? 'column' : 'row') + ' ' + (or ==
      'w' ? 'wrap' : 'nowrap');\r

      }\r\n"
    sig: function mFlex(d, or = 'h'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mgSvg:
    name: mgSvg
    code: "function mgSvg(dParent, attrs) { return mgTag('svg', dParent, attrs);
      }\r\n"
    sig: function mgSvg(dParent, attrs){}
    region: from (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mgText:
    name: mgText
    code: "function mgText(text, dParent, attrs, styles) { return mgTag('text',
      dParent, attrs, styles, text); }\r\n"
    sig: function mgText(text, dParent, attrs, styles){}
    region: from (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mgTag:
    name: mgTag
    code: "function mgTag(tag, dParent, attrs, styles = {}, innerHTML) {\r

      \  let elem = gCreate(tag);\r

      \  mStyle(elem, styles);\r

      \  mAttrs(elem, attrs);\r

      \  if (isdef(innerHTML)) elem.innerHTML = innerHTML;\r

      \  if (isdef(dParent)) mAppend(dParent, elem);\r

      \  return elem;\r

      }\r\n"
    sig: function mgTag(tag, dParent, attrs, styles = {}, innerHTML){}
    region: from (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mGap:
    name: mGap
    code: "function mGap(d, gap = 4) { mText('_', d, { fg: 'transparent', fz: gap,
      h: gap, w: '100%' }); }\r\n"
    sig: function mGap(d, gap = 4){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mGrid:
    name: mGrid
    code: "function mGrid(rows, cols, dParent, styles = {}) {\r

      \  let d = mDiv(dParent, styles);\r

      \  d.style.gridTemplateColumns = 'repeat(' + cols + ',1fr)';\r

      \  d.style.gridTemplateRows = 'repeat(' + rows + ',1fr)';\r

      \  d.style.display = 'inline-grid';\r

      \  d.style.padding = valf(styles.padding, styles.gap) + 'px';\r

      \  return d;\r

      }\r\n"
    sig: function mGrid(rows, cols, dParent, styles = {}){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mIfNotRelative:
    name: mIfNotRelative
    code: "function mIfNotRelative(d) { if (isEmpty(d.style.position))
      d.style.position = 'relative'; }\r\n"
    sig: function mIfNotRelative(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mImage:
    name: mImage
    code: "function mImage() { return mImg(...arguments); }\r\n"
    sig: function mImage(){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mImg:
    name: mImg
    code: "function mImg(path, dParent, styles, classes, callback) {\r

      \  let d = mCreate('img');\r

      \  if (isdef(callback)) d.onload = callback;\r

      \  d.src = path;\r

      \  if (isdef(dParent)) mAppend(dParent, d);\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  if (isdef(classes)) mClass(d, classes);\r

      \  if (isdef(styles.w)) d.setAttribute('width', styles.w + 'px');\r

      \  if (isdef(styles.h)) d.setAttribute('height', styles.h + 'px');\r

      \  return d;\r

      }\r\n"
    sig: function mImg(path, dParent, styles, classes, callback){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mInner:
    name: mInner
    code: "function mInner(html, dParent, styles) { dParent.innerHTML = html; if
      (isdef(styles)) mStyle(dParent, styles); }\r\n"
    sig: function mInner(html, dParent, styles){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mInput:
    name: mInput
    code: "function mInput(dParent, styles, id, placeholder, classtr = 'input',
      tabindex = null, value = '') {\r

      \  let html = `<input type=\"text\" id=${id} class=\"${classtr}\"
      placeholder=\"${valf(placeholder, '')}\" tabindex=\"${tabindex}\"
      value=\"${value}\">`;\r

      \  let d = mAppend(dParent, mCreateFrom(html));\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  return d;\r

      }\r\n"
    sig: function mInput(dParent, styles, id, placeholder, classtr = 'input',
      tabindex = null, value = ''){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mInsertAt:
    name: mInsertAt
    code: "function mInsertAt(dParent, el, index = 0) { mInsert(dParent, el, index);
      }\r\n"
    sig: function mInsertAt(dParent, el, index = 0){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mInsertFirst:
    name: mInsertFirst
    code: "function mInsertFirst(dParent, el) { mInsert(dParent, el, 0); }\r\n"
    sig: function mInsertFirst(dParent, el){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mInsert:
    name: mInsert
    code: "function mInsert(dParent, el, index = 0) { dParent.insertBefore(el,
      dParent.childNodes[index]); return el; }\r\n"
    sig: function mInsert(dParent, el, index = 0){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mInsertAfter:
    name: mInsertAfter
    code: "function mInsertAfter(dParent, el, index = 0) {\r

      \  if (dParent.childNodes.length == index) mAppend(dParent, el);\r

      \  else mInsert(dParent, el, index + 1);\r

      }\r\n"
    sig: function mInsertAfter(dParent, el, index = 0){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mItem:
    name: mItem
    code: "function mItem(id, diDOM, di = {}, addSizing = false) {\r

      \  let item = di;\r

      \  id = isdef(id) ? id : isdef(diDOM) && isdef(diDOM.div) &&
      !isEmpty(diDOM.div.id) ? diDOM.div.id : getUID();\r

      \  item.id = iRegister(item, id);\r

      \  if (isdef(diDOM) && isdef(diDOM.div)) { diDOM.div.id = id;
      iAdd(item, diDOM); }\r

      \  if (addSizing) {\r

      \    if (nundef(item.sizing)) item.sizing = 'sizeToContent';\r

      \    if (nundef(item.positioning)) { item.positioning = 'absolute';
      }\r

      \    if (nundef(item.posType)) { item.posType = 'center'; }\r

      \    if (isdef(diDOM) && item.sizing == 'sizeToContent')
      iMeasure(item, item.sizingOptions);\r

      \  }\r

      \  return item;\r

      }\r\n"
    sig: function mItem(id, diDOM, di = {}, addSizing = false){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mLabel:
    name: mLabel
    code: "function mLabel(text, dParent, styles = {}, forId, classes) {\r

      \  let l = mCreate('label');\r

      \  l.innerHTML = text;\r

      \  mAppend(dParent, l);\r

      \  mStyle(l, styles);\r

      \  if (isdef(classes)) mClass(l, classes);\r

      \  if (isdef(forId)) { console.log('JA'); l.setAttribute('for',
      forId); }\r

      \  return l;\r

      }\r\n"
    sig: function mLabel(text, dParent, styles = {}, forId, classes){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mLinebreakNew:
    name: mLinebreakNew
    code: "function mLinebreakNew(d, gap) { mGap(d, gap); }\r\n"
    sig: function mLinebreakNew(d, gap){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mLinebreak:
    name: mLinebreak
    code: "function mLinebreak(dParent, gap) {\r

      \  dParent = toElem(dParent);\r

      \  let d;\r

      \  let display = getComputedStyle(dParent).display;\r

      \  if (display == 'flex') {\r

      \    d = mDiv(dParent, { fz: 2, 'flex-basis': '100%', h: 0, w:
      '100%' }, null, ' &nbsp; ');\r

      \  } else {\r

      \    d = mDiv(dParent, {}, null, '<br>');\r

      \  }\r

      \  if (isdef(gap)) { d.style.minHeight = gap + 'px'; d.innerHTML = '
      &nbsp; '; d.style.opacity = .2; }\r

      \  return d;\r

      }\r\n"
    sig: function mLinebreak(dParent, gap){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mLine3:
    name: mLine3
    code: "function mLine3(dParent, index, ids, styles) {\r

      \  let html = `<div class=\"lineOuter\">\r

      \    <div>\r

      \      <div id=\"${ids[0]}\" class=\"lineLeft\"> </div>\r

      \      <div id=\"${ids[1]}\" class=\"lineMiddle\"> </div>\r

      \      <div id=\"${ids[2]}\" class=\"lineRight\"> </div>\r

      \    </div>\r

      \  </div>\r

      \  `;\r

      \  let x = createElementFromHTML(html);\r

      \  mInsert(dParent, x, index);\r

      \  return [mBy(ids[0]), mBy(ids[1]), mBy(ids[2])];\r

      }\r\n"
    sig: function mLine3(dParent, index, ids, styles){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mMeasure:
    name: mMeasure
    code: "function mMeasure(d) { let r = getRect(d); mStyle(d, { w: r.w, h: r.h });
      return r; }\r\n"
    sig: function mMeasure(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mMoveBy:
    name: mMoveBy
    code: "function mMoveBy(elem, dx, dy) { let rect = getRect(elem); mPos(elem,
      rect.x + dx, rect.y + dy); }\r\n"
    sig: function mMoveBy(elem, dx, dy){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mNode:
    name: mNode
    code: "function mNode(o, dParent, title) {\r

      \  recConvertLists(o);\r

      \  console.log('mNode o', o);\r

      \  let d = mCreate('div');\r

      \  mYaml(d, o);\r

      \  let pre = d.getElementsByTagName('pre')[0];\r

      \  pre.style.fontFamily = 'inherit';\r

      \  if (isdef(title)) mInsert(d, mText(title));\r

      \  if (isdef(dParent)) mAppend(dParent, d);\r

      \  if (isDict(o)) d.style.textAlign = 'left';\r

      \  return d;\r

      }\r\n"
    sig: function mNode(o, dParent, title){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mNodeChangeContent:
    name: mNodeChangeContent
    code: "function mNodeChangeContent(ui, content) {\r

      \  let domel = ui.getElementsByTagName('pre')[0];\r

      \  domel.innerHTML = jsonToYaml(content);\r

      }\r\n"
    sig: function mNodeChangeContent(ui, content){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mNull:
    name: mNull
    code: "function mNull(d, attr) { d.removeAttribute(attr); }\r\n"
    sig: function mNull(d, attr){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mPanel:
    name: mPanel
    code: "function mPanel(dParent) {\r

      \  let d = mDiv(dParent, { position: 'relative' });\r

      \  mCenterCenterFlex(d);\r

      \  return d;\r

      }\r\n"
    sig: function mPanel(dParent){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mParent:
    name: mParent
    code: "function mParent(elem) { return elem.parentNode; }\r\n"
    sig: function mParent(elem){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mPic:
    name: mPic
    code: "function mPic(kItem, dParent, styles, classes) {\r

      \  let item;\r

      \  if (isString(kItem)) { item = { id: getUID(), key: kItem, info:
      Syms[kItem] }; }\r

      \  else if (nundef(kItem.info)) { item = { id: getUID(), key:
      kItem.key, info: kItem }; }\r

      \  else item = kItem;\r

      \  let info = item.info;\r

      \  let dOuter = mDiv(dParent);\r

      \  mCenterCenterFlex(dOuter);\r

      \  let d = mDiv(dOuter);\r

      \  d.innerHTML = info.text;\r

      \  if (nundef(styles)) styles = {};\r

      \  let picStyles = { family: info.family, fz: valf(styles.fz,
      valf(styles.h / 2, 25)), display: 'inline-block' };\r

      \  mStyle(dOuter, styles);\r

      \  mStyle(d, picStyles);\r

      \  if (isdef(classes)) mClass(dOuter, classes);\r

      \  iAdd(item, { div: dOuter, dPic: d });\r

      \  return item;\r

      }\r\n"
    sig: function mPic(kItem, dParent, styles, classes){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  miPic:
    name: miPic
    code: "function miPic(item, dParent, styles, classes) {\r

      \  let info = isString(item) ? Syms[item] : isdef(item.info) ?
      item.info : item;\r

      \  let d = mDiv(dParent);\r

      \  d.innerHTML = info.text;\r

      \  if (nundef(styles)) styles = {};\r

      \  let family = info.family;\r

      \  addKeys({ family: family, fz: 50, display: 'inline-block' },
      styles);\r

      \  mStyle(d, styles);\r

      \  if (isdef(classes)) mClass(d, classes);\r

      \  mCenterCenterFlex(d);\r

      \  return d;\r

      }\r\n"
    sig: function miPic(item, dParent, styles, classes){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPlace:
    name: mPlace
    code: "function mPlace(elem, pos, offx, offy) {\r

      \  elem = toElem(elem);\r

      \  pos = pos.toLowerCase();\r

      \  let dParent = elem.parentNode; if (dParent.style.position !=
      'absolute') dParent.style.position = 'relative';\r

      \  let vert = valf(offx, 0);\r

      \  let hor = isdef(offy) ? offy : vert;\r

      \  if (pos[0] == 'c' || pos[1] == 'c') {\r

      \    let rParent = getRect(dParent);\r

      \    let [wParent, hParent] = [rParent.w, rParent.h];\r

      \    let rElem = getRect(elem);\r

      \    let [wElem, hElem] = [rElem.w, rElem.h];\r

      \    switch (pos) {\r

      \      case 'cc': mStyle(elem, { position: 'absolute', left: hor +
      (wParent - wElem) / 2, top: vert + (hParent - hElem) / 2 }); break;\r

      \      case 'tc': mStyle(elem, { position: 'absolute', left: hor +
      (wParent - wElem) / 2, top: vert }); break;\r

      \      case 'bc': mStyle(elem, { position: 'absolute', left: hor +
      (wParent - wElem) / 2, bottom: vert }); break;\r

      \      case 'cl': mStyle(elem, { position: 'absolute', left: hor,
      top: vert + (hParent - hElem) / 2 }); break;\r

      \      case 'cr': mStyle(elem, { position: 'absolute', right: hor,
      top: vert + (hParent - hElem) / 2 }); break;\r

      \    }\r

      \    return;\r

      \  }\r

      \  let di = { t: 'top', b: 'bottom', r: 'right', l: 'left' };\r

      \  elem.style.position = 'absolute';\r

      \  elem.style[di[pos[0]]] = hor + 'px'; elem.style[di[pos[1]]] =
      vert + 'px';\r

      }\r\n"
    sig: function mPlace(elem, pos, offx, offy){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPos:
    name: mPos
    code: "function mPos(d, x, y, unit = 'px') { mStyle(d, { left: x, top: y,
      position: 'absolute' }, unit); }\r\n"
    sig: function mPos(d, x, y, unit = 'px'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPosTL:
    name: mPosTL
    code: "function mPosTL(d, x, y, unit = 'px') { y = valf(y, x); mStyle(d, { left:
      x, top: y, position: 'absolute' }, unit); }\r\n"
    sig: function mPosTL(d, x, y, unit = 'px'){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mPosTR:
    name: mPosTR
    code: "function mPosTR(d, x, y, unit = 'px') { y = valf(y, x); mStyle(d, {
      right: x, top: y, position: 'absolute' }, unit); }\r\n"
    sig: function mPosTR(d, x, y, unit = 'px'){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mPosBL:
    name: mPosBL
    code: "function mPosBL(d, x, y, unit = 'px') { y = valf(y, x); mStyle(d, { left:
      x, bottom: y, position: 'absolute' }, unit); }\r\n"
    sig: function mPosBL(d, x, y, unit = 'px'){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mPosBR:
    name: mPosBR
    code: "function mPosBR(d, x, y, unit = 'px') { y = valf(y, x); mStyle(d, {
      right: x, bottom: y, position: 'absolute' }, unit); }\r\n"
    sig: function mPosBR(d, x, y, unit = 'px'){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mPosBottom:
    name: mPosBottom
    code: "function mPosBottom(d, x, y, unit = 'px') { mStyle(d, { left: x, bottom:
      y, position: 'absolute' }, unit); }\r\n"
    sig: function mPosBottom(d, x, y, unit = 'px'){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mPosBottomRight:
    name: mPosBottomRight
    code: "function mPosBottomRight(d, x, y, unit = 'px') { mStyle(d, { right: x,
      bottom: y, position: 'absolute' }, unit); }\r\n"
    sig: function mPosBottomRight(d, x, y, unit = 'px'){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mPosRight:
    name: mPosRight
    code: "function mPosRight(d, x, y, unit = 'px') { mStyle(d, { right: x, top: y,
      position: 'absolute' }, unit); }\r\n"
    sig: function mPosRight(d, x, y, unit = 'px'){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mRadio:
    name: mRadio
    code: "function mRadio(label, val, name, dParent, styles = {}, handler,
      group_id, is_on) {\r

      \  let cursor = styles.cursor; delete styles.cursor;\r

      \  let d = mDiv(dParent, styles, group_id + '_' + val);\r

      \  let id = isdef(group_id) ? `i_${group_id}_${val}` : getUID();\r

      \  let type = isdef(group_id) ? 'radio' : 'checkbox';\r

      \  let checked = isdef(is_on) ? is_on : false;\r

      \  let inp = mCreateFrom(`<input class='radio' id='${id}'
      type=\"${type}\" name=\"${name}\" value=\"${val}\">`);\r

      \  if (checked) inp.checked = true;\r

      \  let text = mCreateFrom(`<label
      for='${inp.id}'>${label}</label>`);\r

      \  if (isdef(cursor)) { inp.style.cursor = text.style.cursor =
      cursor; }\r

      \  mAppend(d, inp);\r

      \  mAppend(d, text);\r

      \  if (isdef(handler)) {\r

      \    inp.onclick = ev => {\r

      \      ev.cancelBubble = true;\r

      \      if (handler == 'toggle') {\r

      \      } else if (isdef(handler)) {\r

      \        handler(val);\r

      \      }\r

      \    };\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function mRadio(label, val, name, dParent, styles = {}, handler, group_id,
      is_on){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mRadioGroup:
    name: mRadioGroup
    code: "function mRadioGroup(dParent, styles, id, legend, legendstyles) {\r

      \  let f = mCreate('fieldset');\r

      \  f.id = id;\r

      \  if (isdef(styles)) mStyle(f, styles);\r

      \  if (isdef(legend)) {\r

      \    let l = mCreate('legend');\r

      \    l.innerHTML = legend;\r

      \    mAppend(f, l);\r

      \    if (isdef(legendstyles)) { mStyle(l, legendstyles); }\r

      \  }\r

      \  mAppend(dParent, f);\r

      \  return f;\r

      }\r\n"
    sig: function mRadioGroup(dParent, styles, id, legend, legendstyles){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mRemove:
    name: mRemove
    code: "function mRemove(elem) {\r

      \  elem = toElem(elem);\r

      \  var a = elem.attributes, i, l, n;\r

      \  if (a) {\r

      \    for (i = a.length - 1; i >= 0; i -= 1) {\r

      \      n = a[i].name;\r

      \      if (typeof elem[n] === 'function') {\r

      \        elem[n] = null;\r

      \      }\r

      \    }\r

      \  }\r

      \  a = elem.childNodes;\r

      \  if (a) {\r

      \    l = a.length;\r

      \    for (i = a.length - 1; i >= 0; i -= 1) {\r

      \      mRemove(elem.childNodes[i]);\r

      \    }\r

      \  }\r

      \  elem.remove();\r

      }\r\n"
    sig: function mRemove(elem){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mRemoveChildrenFromIndex:
    name: mRemoveChildrenFromIndex
    code: "function mRemoveChildrenFromIndex(dParent, i) { while
      (dParent.children[i]) { mRemove(dParent.children[i]); } }\r\n"
    sig: function mRemoveChildrenFromIndex(dParent, i){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mRemoveClass:
    name: mRemoveClass
    code: "function mRemoveClass(d) { for (let i = 1; i < arguments.length; i++)
      d.classList.remove(arguments[i]); }\r\n"
    sig: function mRemoveClass(d){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mRemoveStyle:
    name: mRemoveStyle
    code: "function mRemoveStyle(d, styles) { for (const k of styles) d.style[k] =
      null; }\r\n"
    sig: function mRemoveStyle(d, styles){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mReveal:
    name: mReveal
    code: "function mReveal(d) { d.style.opacity = 1; }\r\n"
    sig: function mReveal(d){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mScreen:
    name: mScreen
    code: "function mScreen(dParent, styles) { let d = mDover(dParent); if
      (isdef(styles)) mStyle(d, styles); return d; }\r\n"
    sig: function mScreen(dParent, styles){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mSelect:
    name: mSelect
    code: "function mSelect(dParent, optionList, friendlyList, initval, onselect,
      label, styles, classes) {\r

      \  let d = mDiv(dParent);\r

      \  val = valf(initval, optionList[0]);\r

      \  let inp = mCreate('select');\r

      \  inp.onchange = onselect;\r

      \  for (let i = 0; i < optionList.length; i++) {\r

      \    let opt = optionList[i];\r

      \    let friendly = friendlyList[opt];\r

      \    let el = mCreate('option');\r

      \    el.setAttribute('value', opt);\r

      \    el.innerHTML = friendly;\r

      \    mAppend(inp, el);\r

      \    if (opt == val) el.selected = true;\r

      \  }\r

      \  mAppend(d, inp);\r

      \  if (isdef(styles)) mStyle(inp, styles);\r

      \  if (isdef(classes)) mClass(inp, classes);\r

      \  return d;\r

      }\r\n"
    sig: function mSelect(dParent, optionList, friendlyList, initval, onselect,
      label, styles, classes){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mSidebar:
    name: mSidebar
    code: "function mSidebar(title, dParent, styles, id, inner) {\r

      \  let elem = createElementFromHtml(`\r

      \  <div id=\"${id}\" class=\"w3sidebar\">\r

      \    <h1>${title}</h1>\r

      \    <a href=\"javascript:void(0)\" class=\"closebtn\">×</a>\r

      \  </div>  \r

      \  `);\r

      \  function openNav() {\r

      \    elem.style.width = \"250px\";\r

      \    dParent.style.marginLeft = \"250px\";\r

      \  }\r

      \  function closeNav() {\r

      \    elem.style.width = \"0\";\r

      \    dParent.style.marginLeft = \"0\";\r

      \  }\r

      \  elem.children[1].onclick = closeNav;\r

      \  mClass(dParent, 'w3sidebarParent');\r

      \  let dContent = mDiv(elem);\r

      \  mInsert(dParent.parentNode, elem);\r

      \  return { div: elem, dContent: dContent, fOpen: openNav, fClose:
      closeNav };\r

      }\r\n"
    sig: function mSidebar(title, dParent, styles, id, inner){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mSize:
    name: mSize
    code: "function mSize(d, w, h, unit = 'px', sizing) { if (nundef(h)) h = w;
      mStyle(d, { width: w, height: h }, unit); if (isdef(sizing)) setRect(d,
      sizing); }\r\n"
    sig: function mSize(d, w, h, unit = 'px', sizing){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSpan:
    name: mSpan
    code: "function mSpan(dParent, styles, innerHTML) {\r

      \  let d = mCreate('span');\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  if (isdef(innerHTML)) d.innerHTML = innerHTML;\r

      \  if (isdef(dParent)) mAppend(dParent, d);\r

      \  return d;\r

      }\r\n"
    sig: function mSpan(dParent, styles, innerHTML){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mShape:
    name: mShape
    code: "function mShape(shape, dParent, styles, pos, classes) {\r

      \  styles = valf(styles, { bg: 'random' });\r

      \  styles.display = 'inline-block';\r

      \  let x;\r

      \  if (isdef(PolyClips[shape])) {\r

      \    let d = mDiv(dParent, styles, null, null, classes);\r

      \    styles['clip-path'] = PolyClips[shape];\r

      \    mStyle(d, styles);\r

      \    x = d;\r

      \  } else {\r

      \    styles.rounding = shape == 'circle' || shape == 'ellipse' ?
      '50%' : styles.rounding;\r

      \    x = mDiv(dParent, styles, null, null, classes);\r

      \  }\r

      \  if (isdef(pos)) { mPlace(x, pos); }\r

      \  return x;\r

      }\r\n"
    sig: function mShape(shape, dParent, styles, pos, classes){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mShapeR:
    name: mShapeR
    code: "function mShapeR(shape = 'hex', dParent = null, styles = {}, pos,
      classes) {\r

      \  let x;\r

      \  let bg = isdef(styles.bg) ? computeColorX(styles.bg) :
      'conic-gradient(green,pink,green)';\r

      \  let sz = isdef(styles.sz) ? styles.sz : isdef(styles.w) ?
      styles.w : isdef(styles.h) ? styles.h : null;\r

      \  if (isdef(PolyClips[shape])) {\r

      \    sz = valf(sz, 80);\r

      \    let html = `<div style=\r

      \    \"--b:${bg};\r

      \    --clip:${PolyClips[shape]};\r

      \    --patop:100%;\r

      \    --w:${sz}px;\r

      \    \"></div>`;\r

      \    x = createElementFromHtml(html);\r

      \  } else {\r

      \    x = mShape(shape, dParent, styles, pos, classes);\r

      \    return x;\r

      \  }\r

      \  if (sz) {\r

      \    bvar = sz > 120 ? 8 : sz > 80 ? 5 : sz > 50 ? 3 : 1;\r

      \    mClass(x, \"weired\" + bvar);\r

      \    mStyle(x, { w: sz });\r

      \  }\r

      \  if (isdef(dParent)) mAppend(dParent, x);\r

      \  if (isdef(classes)) mClass(x, classes);\r

      \  if (isdef(pos)) { mPlace(x, pos); }\r

      \  return x;\r

      }\r\n"
    sig: function mShapeR(shape = 'hex', dParent = null, styles = {}, pos,
      classes){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mSym:
    name: mSym
    code: "function mSym(key, dParent, styles = {}, pos, classes) {\r

      \  let info = Syms[key];\r

      \  styles.display = 'inline-block';\r

      \  let family = info.family;\r

      \  styles.family = family;\r

      \  let sizes;\r

      \  if (isdef(styles.sz)) { sizes = mSymSizeToBox(info, styles.sz,
      styles.sz); }\r

      \  else if (isdef(styles.w) && isdef(styles.h)) { sizes =
      mSymSizeToBox(info, styles.w, styles.h); }\r

      \  else if (isdef(styles.fz)) { sizes = mSymSizeToFz(info,
      styles.fz); }\r

      \  else if (isdef(styles.h)) { sizes = mSymSizeToH(info, styles.h);
      }\r

      \  else if (isdef(styles.w)) { sizes = mSymSizeToW(info, styles.w);
      }\r

      \  else { sizes = mSymSizeToFz(info, 25); }\r

      \  styles.fz = sizes.fz;\r

      \  styles.w = sizes.w;\r

      \  styles.h = sizes.h;\r

      \  styles.align = 'center';\r

      \  if (isdef(styles.bg) && info.family != 'emoNoto') { styles.fg =
      styles.bg; delete styles.bg; }\r

      \  let x = mDiv(dParent, styles, null, info.text);\r

      \  if (isdef(classes)) mClass(x, classes);\r

      \  if (isdef(pos)) { mPlace(x, pos); }\r

      \  return x;\r

      }\r\n"
    sig: function mSym(key, dParent, styles = {}, pos, classes){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSuit:
    name: mSuit
    code: "function mSuit(ckey, sz = 20, color = null) {\r

      \  let suit = ckey.length == 1 ? ckey : ckey[1];\r

      \  let di = { S: '&spades;', H: '&hearts;', D: '&diams;', C:
      '&clubs;' };\r

      \  color = valf(color, suit == 'H' || suit == 'D' ? 'red' :
      'black');\r

      \  let html = `<span
      style='color:${color};font-size:${sz}px'>${di[suit]}</span>`;\r

      \  return html;\r

      }\r\n"
    sig: function mSuit(ckey, sz = 20, color = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSuitPos:
    name: mSuitPos
    code: "function mSuitPos(svg, pos) {\r

      \  pos = pos.toLowerCase();\r

      \  if (pos[0] == 'c' || pos[1] == 'c') {\r

      \    let dCard = svg.parentNode;\r

      \    let r = getRect(dCard);\r

      \    let [wCard, hCard] = [r.w, r.h];\r

      \    let [wSym, hSym] = [svg.getAttribute('width'),
      svg.getAttribute('height')];\r

      \    switch (pos) {\r

      \      case 'cc': mStyle(svg, { position: 'absolute', left: (wCard -
      wSym) / 2, top: (hCard - hSym) / 2 }); break;\r

      \      case 'tc': mStyle(svg, { position: 'absolute', left: (wCard -
      wSym) / 2, top: 0 }); break;\r

      \      case 'bc': mStyle(svg, { position: 'absolute', left: (wCard -
      wSym) / 2, bottom: 0 }); break;\r

      \      case 'cl': mStyle(svg, { position: 'absolute', left: 0, top:
      (hCard - hSym) / 2 }); break;\r

      \      case 'cr': mStyle(svg, { position: 'absolute', right: 0, top:
      (hCard - hSym) / 2 }); break;\r

      \    }\r

      \    return;\r

      \  }\r

      \  let di = { t: 'top', b: 'bottom', r: 'right', l: 'left' };\r

      \  svg.style.position = 'absolute';\r

      \  svg.style[di[pos[0]]] = svg.style[di[pos[1]]] = 0;\r

      }\r\n"
    sig: function mSuitPos(svg, pos){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mSuitSize:
    name: mSuitSize
    code: "function mSuitSize(suit, sz) { suit.setAttribute('sz', sz);
      suit.firstChild.setAttribute('height', sz); gSizeToContent(suit); }\r\n"
    sig: function mSuitSize(suit, sz){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mStyleTranslate:
    name: mStyleTranslate
    code: "function mStyleTranslate(prop, val, convertNumbers = true) {\r

      \  const paramDict = {\r

      \    align: 'text-align',\r

      \    bg: 'background-color',\r

      \    fg: 'color',\r

      \    hgap: 'column-gap',\r

      \    vgap: 'row-gap',\r

      \    matop: 'margin-top',\r

      \    maleft: 'margin-left',\r

      \    mabottom: 'margin-bottom',\r

      \    maright: 'margin-right',\r

      \    patop: 'padding-top',\r

      \    paleft: 'padding-left',\r

      \    pabottom: 'padding-bottom',\r

      \    paright: 'padding-right',\r

      \    rounding: 'border-radius',\r

      \    w: 'width',\r

      \    h: 'height',\r

      \    wmin: 'min-width',\r

      \    hmin: 'min-height',\r

      \    wmax: 'max-width',\r

      \    hmax: 'max-height',\r

      \    fontSize: 'font-size',\r

      \    fz: 'font-size',\r

      \    family: 'font-family',\r

      \    weight: 'font-weight',\r

      \    z: 'z-index'\r

      \  };\r

      \  let valDict = {\r

      \    random: randomColor(),\r

      \  };\r

      \  let propName = isdef(paramDict[prop]) ? paramDict[prop] : prop;\r

      \  let newVal = isdef(valDict[val]) ? valdict[val] : val;\r

      \  if (convertNumbers && isNumber(newVal)) newVal = '' + newVal +
      'px';\r

      \  return [propName, newVal];\r

      }\r\n"
    sig: function mStyleTranslate(prop, val, convertNumbers = true){}
    region: mGraph (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mStyleToCy:
    name: mStyleToCy
    code: "function mStyleToCy(di, group) { return translateStylesToCy(di, group);
      }\r\n"
    sig: function mStyleToCy(di, group){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mStyle:
    name: mStyle
    code: "function mStyle(elem, styles, unit = 'px') {\r

      \  elem = toElem(elem);\r

      \  let bg, fg;\r

      \  if (isdef(styles.bg) || isdef(styles.fg)) {\r

      \    [bg, fg] = colorsFromBFA(styles.bg, styles.fg, styles.alpha);\r

      \  }\r

      \  if (isdef(styles.vpadding) || isdef(styles.hpadding)) {\r

      \    styles.padding = valf(styles.vpadding, 0) + unit + ' ' +
      valf(styles.hpadding, 0) + unit;\r

      \  }\r

      \  if (isdef(styles.vmargin) || isdef(styles.hmargin)) {\r

      \    styles.margin = valf(styles.vmargin, 0) + unit + ' ' +
      valf(styles.hmargin, 0) + unit;\r

      \  }\r

      \  if (isdef(styles.upperRounding) || isdef(styles.lowerRounding))
      {\r

      \    let rtop = '' + valf(styles.upperRounding, 0) + unit;\r

      \    let rbot = '' + valf(styles.lowerRounding, 0) + unit;\r

      \    styles['border-radius'] = rtop + ' ' + rtop + ' ' + rbot + ' '
      + rbot;\r

      \  }\r

      \  if (isdef(styles.box)) styles['box-sizing'] = 'border-box';\r

      \  if (isdef(styles.round)) styles['border-radius'] = '50%';\r

      \  for (const k in styles) {\r

      \    let val = styles[k];\r

      \    let key = k;\r

      \    if (isdef(STYLE_PARAMS[k])) key = STYLE_PARAMS[k];\r

      \    else if (k == 'font' && !isString(val)) {\r

      \      let fz = f.size; if (isNumber(fz)) fz = '' + fz + 'px';\r

      \      let ff = f.family;\r

      \      let fv = f.variant;\r

      \      let fw = isdef(f.bold) ? 'bold' : isdef(f.light) ? 'light' :
      f.weight;\r

      \      let fs = isdef(f.italic) ? 'italic' : f.style;\r

      \      if (nundef(fz) || nundef(ff)) return null;\r

      \      let s = fz + ' ' + ff;\r

      \      if (isdef(fw)) s = fw + ' ' + s;\r

      \      if (isdef(fv)) s = fv + ' ' + s;\r

      \      if (isdef(fs)) s = fs + ' ' + s;\r

      \      elem.style.setProperty(k, s);\r

      \      continue;\r

      \    } else if (k == 'classname') {\r

      \      mClass(elem, styles[k]);\r

      \    } else if (k == 'border') {\r

      \      if (isNumber(val)) val = `solid ${val}px ${isdef(styles.fg) ?
      styles.fg : '#ffffff80'}`;\r

      \      if (val.indexOf(' ') < 0) val = 'solid 1px ' + val;\r

      \    } else if (k == 'ajcenter') {\r

      \      elem.style.setProperty('justify-content', 'center');\r

      \      elem.style.setProperty('align-items', 'center');\r

      \    } else if (k == 'layout') {\r

      \      if (val[0] == 'f') {\r

      \        val = val.slice(1);\r

      \        elem.style.setProperty('display', 'flex');\r

      \        elem.style.setProperty('flex-wrap', 'wrap');\r

      \        let hor, vert;\r

      \        if (val.length == 1) hor = vert = 'center';\r

      \        else {\r

      \          let di = { c: 'center', s: 'start', e: 'end' };\r

      \          hor = di[val[1]];\r

      \          vert = di[val[2]];\r

      \        }\r

      \        let justStyle = val[0] == 'v' ? vert : hor;\r

      \        let alignStyle = val[0] == 'v' ? hor : vert;\r

      \        elem.style.setProperty('justify-content', justStyle);\r

      \        elem.style.setProperty('align-items', alignStyle);\r

      \        switch (val[0]) {\r

      \          case 'v': elem.style.setProperty('flex-direction',
      'column'); break;\r

      \          case 'h': elem.style.setProperty('flex-direction',
      'row'); break;\r

      \        }\r

      \      } else if (val[0] == 'g') {\r

      \        val = val.slice(1);\r

      \        elem.style.setProperty('display', 'grid');\r

      \        let n = allNumbers(val);\r

      \        let cols = n[0];\r

      \        let w = n.length > 1 ? '' + n[1] + 'px' : 'auto';\r

      \        elem.style.setProperty('grid-template-columns',
      `repeat(${cols}, ${w})`);\r

      \        elem.style.setProperty('place-content', 'center');\r

      \      }\r

      \    } else if (k == 'layflex') {\r

      \      elem.style.setProperty('display', 'flex');\r

      \      elem.style.setProperty('flex', '0 1 auto');\r

      \      elem.style.setProperty('flex-wrap', 'wrap');\r

      \      if (val == 'v') { elem.style.setProperty('writing-mode',
      'vertical-lr'); }\r

      \    } else if (k == 'laygrid') {\r

      \      elem.style.setProperty('display', 'grid');\r

      \      let n = allNumbers(val);\r

      \      let cols = n[0];\r

      \      let w = n.length > 1 ? '' + n[1] + 'px' : 'auto';\r

      \      elem.style.setProperty('grid-template-columns',
      `repeat(${cols}, ${w})`);\r

      \      elem.style.setProperty('place-content', 'center');\r

      \    }\r

      \    if (key == 'font-weight') { elem.style.setProperty(key, val);
      continue; }\r

      \    else if (key == 'background-color') elem.style.background =
      bg;\r

      \    else if (key == 'color') elem.style.color = fg;\r

      \    else if (key == 'opacity') elem.style.opacity = val;\r

      \    else if (key == 'wrap') elem.style.flexWrap = 'wrap';\r

      \    else if (startsWith(k, 'dir')) {\r

      \      isCol = val[0] == 'c';\r

      \      elem.style.setProperty('flex-direction', 'column');\r

      \    } else if (key == 'flex') {\r

      \      if (isNumber(val)) val = '' + val + ' 1 0%';\r

      \      elem.style.setProperty(key, makeUnitString(val, unit));\r

      \    } else {\r

      \      elem.style.setProperty(key, makeUnitString(val, unit));\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function mStyle(elem, styles, unit = 'px'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mGetStyle:
    name: mGetStyle
    code: "function mGetStyle(elem, prop) {\r

      \  let val;\r

      \  elem = toElem(elem);\r

      \  if (prop == 'bg') { val = getStyleProp(elem, 'background-color');
      if (isEmpty(val)) return getStyleProp(elem, 'background'); }\r

      \  else if (isdef(STYLE_PARAMS[prop])) { val = getStyleProp(elem,
      STYLE_PARAMS[prop]); }\r

      \  else {\r

      \    switch (prop) {\r

      \      case 'vmargin': val = stringBefore(elem.style.margin, ' ');
      break;\r

      \      case 'hmargin': val = stringAfter(elem.style.margin, ' ');
      break;\r

      \      case 'vpadding': val = stringBefore(elem.style.padding, ' ');
      break;\r

      \      case 'hpadding': val = stringAfter(elem.style.padding, ' ');
      break;\r

      \      case 'box': val = elem.style.boxSizing; break;\r

      \      case 'dir': val = elem.style.flexDirection; break;\r

      \    }\r

      \  }\r

      \  if (nundef(val)) val = getStyleProp(elem, prop);\r

      \  if (val.endsWith('px')) return firstNumber(val); else return
      val;\r

      }\r\n"
    sig: function mGetStyle(elem, prop){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSwap:
    name: mSwap
    code: "function mSwap(obj1, obj2) {\r

      \  var parent2 = obj2.parentNode;\r

      \  var next2 = obj2.nextSibling;\r

      \  if (next2 === obj1) {\r

      \    parent2.insertBefore(obj1, obj2);\r

      \  } else {\r

      \    obj1.parentNode.insertBefore(obj2, obj1);\r

      \    if (next2) {\r

      \      parent2.insertBefore(obj1, next2);\r

      \    } else {\r

      \      parent2.appendChild(obj1);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function mSwap(obj1, obj2){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mText:
    name: mText
    code: "function mText(text, dParent, styles, classes) {\r

      \  if (!isString(text)) text = text.toString();\r

      \  let d = mDiv(dParent);\r

      \  if (!isEmpty(text)) { d.innerHTML = text; }\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  if (isdef(classes)) mClass(d, classes);\r

      \  return d;\r

      }\r\n"
    sig: function mText(text, dParent, styles, classes){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTextFit:
    name: mTextFit
    code: "function mTextFit(text, { wmax, hmax }, dParent, styles, classes) {\r

      \  let d = mDiv(dParent);\r

      \  if (!isEmpty(text)) d.innerHTML = text;\r

      \  if (nundef(styles) && (isdef(wmax) || isdef(hmax))) {\r

      \    styles = {};\r

      \  }\r

      \  if (isdef(wmax)) styles.width = wmax;\r

      \  if (isdef(hmax)) styles.height = hmax;\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  if (isdef(classes)) mClass(d, classes);\r

      \  return d;\r

      }\r\n"
    sig: function mTextFit(text, { wmax, hmax }, dParent, styles, classes){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mTitledDiv:
    name: mTitledDiv
    code: "function mTitledDiv(title, dParent, outerStyles = {}, innerStyles = {},
      id) {\r

      \  let d = mDiv(dParent, outerStyles);\r

      \  let dTitle = mDiv(d);\r

      \  dTitle.innerHTML = title;\r

      \  innerStyles.w = '100%';\r

      \  innerStyles.h = outerStyles.h - getRect(dTitle).h;\r

      \  let dContent = mDiv(d, innerStyles, id);\r

      \  return dContent;\r

      }\r\n"
    sig: function mTitledDiv(title, dParent, outerStyles = {}, innerStyles = {},
      id){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mTitledMessageDiv:
    name: mTitledMessageDiv
    code: "function mTitledMessageDiv(title, dParent, id, outerStyles = {},
      contentStyles = {}, titleStyles = {}, messageStyles = {}, titleOnTop =
      true) {\r

      \  let d = mDiv(dParent, outerStyles, id);\r

      \  let dTitle = mDiv(d, titleStyles, id + '.title');
      dTitle.innerHTML = title;\r

      \  let dMessage = mDiv(d, messageStyles, id + '.message');
      dMessage.innerHTML = 'hallo!';\r

      \  contentStyles.w = '100%';\r

      \  let hTitle = getRect(dTitle).h, hMessage = getRect(dMessage).h,
      hArea = getRect(d).h;\r

      \  let hContent = hArea - hTitle - hMessage - 4;\r

      \  mStyle(dMessage, { h: hMessage + 2 });\r

      \  mStyle(dTitle, { h: hTitle + 2 });\r

      \  contentStyles.hmin = hContent;\r

      \  let dContent = mDiv(d, contentStyles, id + '.content');\r

      \  if (!titleOnTop) { mAppend(d, dTitle); }\r

      \  return d;\r

      }\r\n"
    sig: function mTitledMessageDiv(title, dParent, id, outerStyles = {},
      contentStyles = {}, titleStyles = {}, messageStyles = {}, titleOnTop =
      true){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mToggle:
    name: mToggle
    code: "function mToggle(label, dParent, styles = {}, handler, is_on, styleyes,
      styleno, classes = null) {\r

      \  let cursor = styles.cursor; delete styles.cursor;\r

      \  let name = replaceWhite(label);\r

      \  let checked = isdef(is_on) ? is_on : false;\r

      \  let b = mButton(label, null, dParent, styles, classes);\r

      \  mClass(b, 'noactive');\r

      \  b.setAttribute('checked', checked);\r

      \  b.onclick = ev => {\r

      \    ev.cancelBubble = true;\r

      \    let b = ev.target;\r

      \    assertion(b == ev.target, 'NOOOOOOOOOOOOOOOOOOOOOOO')\r

      \    let oldval = b.getAttribute('checked') == 'false' ? false :
      true;\r

      \    let newval = oldval ? false : true;\r

      \    if (newval === true) {\r

      \      mStyle(b, styleyes);\r

      \    } else {\r

      \      mStyle(b, styleno);\r

      \    }\r

      \    b.setAttribute('checked', newval);\r

      \    handler(name, newval);\r

      \  };\r

      \  return b;\r

      }\r\n"
    sig: function mToggle(label, dParent, styles = {}, handler, is_on, styleyes,
      styleno, classes = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mToggle_orig_BROKEN:
    name: mToggle_orig_BROKEN
    code: "function mToggle_orig_BROKEN(label, val, dParent, styles = {}, handler =
      null, is_on = true) {\r

      \  let cursor = styles.cursor; delete styles.cursor; \r

      \  let d = mDiv(dParent, styles);\r

      \  let id = getUID();\r

      \  let inp = createElementFromHTML(`<input class='radio' id='${id}'
      type=\"checkbox\" checked=\"${is_on}\" value=\"${val}\" >`);\r

      \  let text = createElementFromHTML(`<label
      for='${id}'>${label}</label>`);\r

      \  if (isdef(cursor)) { inp.style.cursor = text.style.cursor =
      cursor; }\r

      \  mAppend(d, inp);\r

      \  mAppend(d, text);\r

      \  if (isdef(handler)) inp.onclick = ev => { ev.cancelBubble = true;
      handler(val); }\r

      \  return d;\r

      }\r\n"
    sig: function mToggle_orig_BROKEN(label, val, dParent, styles = {}, handler =
      null, is_on = true){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mToggleStyle:
    name: mToggleStyle
    code: "function mToggleStyle(d, prop, val1, val2) {\r

      \  let val = d.style[prop]; \r

      \  if (val === null && val1 == 0) val = val1;\r

      \  else if (isNumber(val1)) val = firstNumber(val);\r

      \  if (val == val1) d.style[prop] = makeUnitString(val2); else
      d.style[prop] = makeUnitString(val1);\r

      }\r\n"
    sig: function mToggleStyle(d, prop, val1, val2){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mYaml:
    name: mYaml
    code: "function mYaml(d, js) {\r

      \  d.innerHTML = '<pre>' + jsonToYaml(js) + '</pre>';\r

      \  return d;\r

      }\r\n"
    sig: function mYaml(d, js){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mZone:
    name: mZone
    code: "function mZone(dParent, styles, pos) {\r

      \  let d = mDiv(dParent);\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  if (isdef(pos)) {\r

      \    mIfNotRelative(dParent);\r

      \    mPos(d, pos.x, pos.y);\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function mZone(dParent, styles, pos){}
    region: CLEANUP (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  diMessage:
    name: diMessage
    code: "function diMessage(item) { return isdef(item.live) ? item.live.dMessage :
      null; }\r\n"
    sig: function diMessage(item){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  diTitle:
    name: diTitle
    code: "function diTitle(item) { return isdef(item.live) ? item.live.dTitle :
      null; }\r\n"
    sig: function diTitle(item){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  diContent:
    name: diContent
    code: "function diContent(item) { return isdef(item.live) ? item.live.dContent :
      null; }\r\n"
    sig: function diContent(item){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  infoToItem:
    name: infoToItem
    code: "function infoToItem(x) { let item = { info: x, key: x.key }; item.id =
      iRegister(item); return item; }\r\n"
    sig: function infoToItem(x){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  isItem:
    name: isItem
    code: "function isItem(i) { return isdef(i.live) || isdef(i.div); }\r\n"
    sig: function isItem(i){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iAdd:
    name: iAdd
    code: "function iAdd(item, liveprops, addprops) {\r

      \  let id, l;\r

      \  if (isString(item)) { id = item; item = valf(Items[id], {}); }\r

      \  let el = valf(liveprops.div, liveprops.ui, iDiv(item), null);\r

      \  id = valnwhite(item.id, (el ? el.id : getUID()), getUID());\r

      \  item.id = id; if (nundef(Items[id])) Items[id] = item; if (el)
      el.id = id;\r

      \  if (nundef(item.live)) item.live = {};\r

      \  l = item.live;\r

      \  for (const k in liveprops) {\r

      \    let val = liveprops[k];\r

      \    if (nundef(val)) { continue; }\r

      \    l[k] = val;\r

      \    if (isdef(val.id) && val.id != id) { lookupAddIfToList(val,
      ['memberOf'], id); }\r

      \  }\r

      \  if (isdef(addprops)) copyKeys(addprops, item);\r

      \  return item;\r

      }\r\n"
    sig: function iAdd(item, liveprops, addprops){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iContainer:
    name: iContainer
    code: "function iContainer(dParent, styles, classes, id, inner) {\r

      \  let item = { id: isdef(id) ? id : getUID(), type: 'plain' };\r

      \  let dOuter = mDiv(dParent);\r

      \  let dInner = mDiv100(dOuter);\r

      \  mCenterCenterFlex(dInner);\r

      \  if (isdef(inner)) d.innerHTML = inner;\r

      \  if (nundef(styles)) styles = {};\r

      \  styles.display = 'inline-block';\r

      \  mStyle(dOuter, styles);\r

      \  if (isdef(classes)) mClass(dOuter, classes);\r

      \  iAdd(item, { div: dOuter, dInner: dInner });\r

      \  item.add = elem => mAppend(dInner, elem);\r

      \  return item;\r

      }\r\n"
    sig: function iContainer(dParent, styles, classes, id, inner){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iDelete:
    name: iDelete
    code: "function iDelete(id) {\r

      \  delete Items[id];\r

      }\r\n"
    sig: function iDelete(id){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iRemoveFromLive:
    name: iRemoveFromLive
    code: "function iRemoveFromLive(pid, id) {\r

      \  if (pid == id) { console.log('!!!!!!!!!!!!!!!!!!!!', id, 'member
      of itself!!!'); return; }\r

      \  let comp = Items[pid];\r

      \  let l = comp.live;\r

      \  let tbr = null;\r

      \  for (const k in l) {\r

      \    let el = l[k];\r

      \    if (el.id == id) { tbr = k; break; }\r

      \  }\r

      \  if (tbr) delete l[tbr];\r

      }\r\n"
    sig: function iRemoveFromLive(pid, id){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iAddContent:
    name: iAddContent
    code: "function iAddContent(item, d) { let dm = diContent(item); if (isdef(dm))
      mAppend(dm, d); }\r\n"
    sig: function iAddContent(item, d){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iAppend:
    name: iAppend
    code: "function iAppend(dParent, i) { mAppend(iDiv(dParent), iDiv(i)); }\r\n"
    sig: function iAppend(dParent, i){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iBounds:
    name: iBounds
    code: "function iBounds(i, irel) { return getRect(iDiv(i), isdef(irel) ?
      iDiv(irel) : null); }\r\n"
    sig: function iBounds(i, irel){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iCenter:
    name: iCenter
    code: "function iCenter(item, offsetX, offsetY) { let d = iDiv(item);
      mCenterAbs(d, offsetX, offsetY); }\r\n"
    sig: function iCenter(item, offsetX, offsetY){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iDetect:
    name: iDetect
    code: "function iDetect(itemInfoKey) {\r

      \  let item, info, key;\r

      \  if (isString(itemInfoKey)) { key = itemInfoKey; info = Syms[key];
      item = infoToItem(info); }\r

      \  else if (isDict(itemInfoKey)) {\r

      \    if (isdef(itemInfoKey.info)) { item = itemInfoKey; info =
      item.info; key = item.info.key; }\r

      \    else { info = itemInfoKey; key = info.key; item =
      infoToItem(info); }\r

      \  }\r

      \  return [item, info, key];\r

      }\r\n"
    sig: function iDetect(itemInfoKey){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iDiv:
    name: iDiv
    code: "function iDiv(i) { return isdef(i.live) ? i.live.div : isdef(i.div) ?
      i.div : i; }\r\n"
    sig: function iDiv(i){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iSvg:
    name: iSvg
    code: "function iSvg(i) { return isdef(i.live) ? i.live.svg : isdef(i.svg) ?
      i.svg : i; }\r\n"
    sig: function iSvg(i){}
    region: from (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iG:
    name: iG
    code: "function iG(i) { return isdef(i.live) ? i.live.g : isdef(i.g) ? i.g : i;
      }\r\n"
    sig: function iG(i){}
    region: from (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iDivs:
    name: iDivs
    code: "function iDivs(ilist) { return isEmpty(ilist) ? [] : isItem(ilist[0]) ?
      ilist.map(x => iDiv(x)) : ilist; }\r\n"
    sig: function iDivs(ilist){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iDov:
    name: iDov
    code: "function iDov(item) { return isdef(item.live) ? item.live.overlay : null;
      }\r\n"
    sig: function iDov(item){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iGetl:
    name: iGetl
    code: "function iGetl(item, key) { return item.live[key]; }\r\n"
    sig: function iGetl(item, key){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iGet:
    name: iGet
    code: "function iGet(item, key) { return item[key]; }\r\n"
    sig: function iGet(item, key){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iGrid:
    name: iGrid
    code: "function iGrid(rows, cols, dParent, styles) {\r

      \  styles.display = 'inline-block';\r

      \  let items = [];\r

      \  let index = 0;\r

      \  for (let i = 0; i < rows; i++) {\r

      \    for (let j = 0; j < cols; j++) {\r

      \      let d = mDiv(dParent, styles);\r

      \      let item = { row: i, col: j, index: index };\r

      \      index += 1;\r

      \      iAdd(item, { div: d });\r

      \      items.push(item);\r

      \    }\r

      \    mLinebreak(dParent);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function iGrid(rows, cols, dParent, styles){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iHighlight:
    name: iHighlight
    code: "function iHighlight(item) { let d = iDov(item); mClass(d,
      'overlaySelected'); }\r\n"
    sig: function iHighlight(item){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iLabel:
    name: iLabel
    code: "function iLabel(i) { return isdef(i.live) ? i.live.dLabel :
      isdef(i.dLabel) ? i.dLabel : null; }\r\n"
    sig: function iLabel(i){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iMeasure:
    name: iMeasure
    code: "function iMeasure(item, sizingOptions) {\r

      \  if (nundef(iDiv(item))) return;\r

      \  setRect(iDiv(item), valf(sizingOptions, { hgrow: true, wgrow:
      true }));\r

      }\r\n"
    sig: function iMeasure(item, sizingOptions){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iMoveFromToPure:
    name: iMoveFromToPure
    code: "function iMoveFromToPure(item, d1, d2, callback, offset) {\r

      \  let bi = iBounds(item);\r

      \  let b1 = iBounds(d1);\r

      \  let b2 = iBounds(d2);\r

      \  if (nundef(offset)) offset = { x: 0, y: 0 };\r

      \  let dist = { x: b2.x - b1.x + offset.x, y: b2.y - b1.y + offset.y
      };\r

      \  item.div.style.zIndex = 100;\r

      \  let a = aTranslateBy(item.div, dist.x, dist.y, 500);\r

      \  a.onfinish = () => { if (isdef(callback)) callback(); };\r

      }\r\n"
    sig: function iMoveFromToPure(item, d1, d2, callback, offset){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iMoveFromTo:
    name: iMoveFromTo
    code: "function iMoveFromTo(item, d1, d2, callback, offset) {\r

      \  let bi = iBounds(item);\r

      \  let b1 = iBounds(d1);\r

      \  let b2 = iBounds(d2);\r

      \  if (nundef(offset)) offset = { x: 0, y: 0 };\r

      \  let dist = { x: b2.x - b1.x + offset.x, y: b2.y - b1.y + offset.y
      };\r

      \  item.div.style.zIndex = 100;\r

      \  let a = aTranslateBy(item.div, dist.x, dist.y, 500);\r

      \  a.onfinish = () => { mAppend(d2, item.div); item.div.style.zIndex
      = item.z = iZMax(); if (isdef(callback)) callback(); };\r

      }\r\n"
    sig: function iMoveFromTo(item, d1, d2, callback, offset){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iMessage:
    name: iMessage
    code: "function iMessage(item, msg) { let dm = diMessage(item); if (isdef(dm))
      dm.innerHTML = msg; }\r\n"
    sig: function iMessage(item, msg){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iParentBounds:
    name: iParentBounds
    code: "function iParentBounds(i) { return getRect(iDiv(i)); }\r\n"
    sig: function iParentBounds(i){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iPic:
    name: iPic
    code: "function iPic(i) { return isdef(i.live) ? i.live.dPic : isdef(i.dPic) ?
      i.dPic : null; }\r\n"
    sig: function iPic(i){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iPanel:
    name: iPanel
    code: "function iPanel(dParent, styles, classes, id, inner) {\r

      \  let item = { id: isdef(id) ? id : getUID(), type: 'plain' };\r

      \  let dOuter = mDiv(dParent);\r

      \  mCenterCenterFlex(dOuter);\r

      \  let d = mDiv(dOuter);\r

      \  if (isdef(inner)) d.innerHTML = inner;\r

      \  if (nundef(styles)) styles = {};\r

      \  let picStyles = { fz: valf(styles.fz, valf(styles.h / 2, 25)),
      display: 'inline-block' };\r

      \  mStyle(dOuter, styles);\r

      \  mStyle(d, picStyles);\r

      \  if (isdef(classes)) mClass(dOuter, classes);\r

      \  iAdd(item, { div: dOuter, dPic: d });\r

      \  return item;\r

      }\r\n"
    sig: function iPanel(dParent, styles, classes, id, inner){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iRegister:
    name: iRegister
    code: "function iRegister(item, id) { let uid = isdef(id) ? id : getUID();
      Items[uid] = item; return uid; }\r\n"
    sig: function iRegister(item, id){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iRegisterX:
    name: iRegisterX
    code: "function iRegisterX(item, keyProp, id) {\r

      \  let uid = isdef(id) ? id : getUID(); Items[uid] = item;\r

      \  if (isdef(item[keyProp])) ItemsByKey[item[keyProp]] = uid; return
      uid;\r

      }\r\n"
    sig: function iRegisterX(item, keyProp, id){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iResize:
    name: iResize
    code: "function iResize(i, w, h) { return isList(i) ? i.map(x => iSize(x, w, h))
      : iSize(i, w, h); }\r\n"
    sig: function iResize(i, w, h){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iSize:
    name: iSize
    code: "function iSize(i, w, h) { i.w = w; i.h = h; mSize(iDiv(i), w, h); }\r\n"
    sig: function iSize(i, w, h){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iSplay:
    name: iSplay
    code: "function iSplay(items, iContainer, containerStyles, splay = 'right', ov =
      20, ovUnit = '%', createHand = true, rememberFunc = true) {\r

      \  if (!isList(items)) items = [items];\r

      \  if (isEmpty(items)) return { w: 0, h: 0 };\r

      \  let [w, h] = [items[0].w, items[0].h];\r

      \  let isHorizontal = splay == 'right' || splay == 'left';\r

      \  for (let i = 0; i < items.length; i++) {\r

      \    let item = items[i];\r

      \    item.col = isHorizontal ? i : 0;\r

      \    item.row = isHorizontal ? 0 : i;\r

      \    item.index = item.z = i;\r

      \  }\r

      \  if (nundef(containerStyles)) containerStyles = {};\r

      \  let dContainer = iDiv(iContainer);\r

      \  let dParent, iParent;\r

      \  if (createHand) {\r

      \    dParent = mDiv(dContainer);\r

      \    iParent = { div: dParent };\r

      \  } else if (isItem(iContainer)) {\r

      \    dParent = iContainer.div;\r

      \    iParent = iContainer;\r

      \  } else dParent = iContainer;\r

      \  containerStyles.hmin = items[0].h;\r

      \  mStyle(dParent, containerStyles);\r

      \  let gap = isdef(containerStyles.padding) ?
      containerStyles.padding : 0;\r

      \  let overlap = ov;\r

      \  if (ovUnit == '%') overlap = ov == 0 ? .5 : (isHorizontal ? w :
      h) * ov / 100;\r

      \  let x = y = gap;\r

      \  let sz = splayout(items.map(x => iDiv(x)), dParent, w, h, x, y,
      overlap, splay);\r

      \  dParent.style.width = '' + sz.w + 'px';\r

      \  dParent.style.height = '' + sz.h + 'px';\r

      \  if (isdef(iParent)) { iParent.w = sz.w; iParent.h = sz.h;
      iParent.items = items; }\r

      \  return isdef(iParent) ? iParent : dParent;\r

      }\r\n"
    sig: function iSplay(items, iContainer, containerStyles, splay = 'right', ov =
      20, ovUnit = '%', createHand = true, rememberFunc = true){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iStyle:
    name: iStyle
    code: "function iStyle(i, styles) { mStyle(iDiv(i), styles); }\r\n"
    sig: function iStyle(i, styles){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iSym:
    name: iSym
    code: "function iSym(kItem, dParent, styles, classes) {\r

      \  let item;\r

      \  if (isString(kItem)) { item = { id: getUID(), key: kItem, info:
      Syms[kItem] }; }\r

      \  else if (nundef(kItem.info)) { item = { id: getUID(), key:
      kItem.key, info: kItem }; }\r

      \  else item = kItem;\r

      \  let info = item.info;\r

      \  let dOuter = mDiv(dParent);\r

      \  mCenterCenterFlex(dOuter);\r

      \  let d = mDiv(dOuter);\r

      \  d.innerHTML = info.text;\r

      \  if (nundef(styles)) styles = {};\r

      \  let picStyles = { family: info.family, fz: valf(styles.fz,
      valf(styles.h / 2, 25)), display: 'inline-block' };\r

      \  mStyle(dOuter, styles);\r

      \  mStyle(d, picStyles);\r

      \  if (isdef(classes)) mClass(dOuter, classes);\r

      \  iAdd(item, { div: dOuter, dPic: d });\r

      \  return item;\r

      }\r\n"
    sig: function iSym(kItem, dParent, styles, classes){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iTitle:
    name: iTitle
    code: "function iTitle(item, msg) { let dm = diTitle(item); if (isdef(dm))
      dm.innerHTML = msg; }\r\n"
    sig: function iTitle(item, msg){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iToggleSingleSelection:
    name: iToggleSingleSelection
    code: "function iToggleSingleSelection(item, items) {\r

      \  let ui = iDiv(item);\r

      \  let selItem = null;\r

      \  item.isSelected = !item.isSelected;\r

      \  if (item.isSelected) { mClass(ui, 'framedPicture'); selItem =
      item; }\r

      \  else { mRemoveClass(ui, 'framedPicture'); selItem = null; }\r

      \  if (isdef(items) && selItem) {\r

      \    for (const i1 of items) {\r

      \      if (i1.isSelected && i1 != item) {\r

      \        i1.isSelected = false;\r

      \        mRemoveClass(iDiv(i1), 'framedPicture');\r

      \        break;\r

      \      }\r

      \    }\r

      \  }\r

      \  return selItem;\r

      }\r\n"
    sig: function iToggleSingleSelection(item, items){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iToggleMultipleSelection:
    name: iToggleMultipleSelection
    code: "function iToggleMultipleSelection(item, items) {\r

      \  let ui = iDiv(item);\r

      \  item.isSelected = !item.isSelected;\r

      \  if (item.isSelected) mClass(ui, 'framedPicture'); else
      mRemoveClass(ui, 'framedPicture');\r

      \  if (isdef(items)) {\r

      \    for (const i1 of items) {\r

      \      if (i1.isSelected) {\r

      \        console.assert(!items.includes(i1), 'UNSELECTED PIC IN
      PICLIST!!!!!!!!!!!!')\r

      \        items.push(i1);\r

      \      } else {\r

      \        console.assert(items.includes(i1), 'PIC NOT IN PICLIST BUT
      HAS BEEN SELECTED!!!!!!!!!!!!')\r

      \        removeInPlace(items, i1);\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function iToggleMultipleSelection(item, items){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  iZMax:
    name: iZMax
    code: "function iZMax(n) { if (isdef(n)) ZMax = n; ZMax += 1; return ZMax; }\r\n"
    sig: function iZMax(n){}
    region: i (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  animateProperty:
    name: animateProperty
    code: "function animateProperty(elem, prop, start, middle, end, msDuration,
      forwards) {\r

      \  let kflist = [];\r

      \  for (const v of [start, middle, end]) {\r

      \    let o = {};\r

      \    o[prop] = isString(v) || prop == 'opacity' ? v : '' + v +
      'px';\r

      \    kflist.push(o);\r

      \  }\r

      \  let opts = { duration: msDuration };\r

      \  if (isdef(forwards)) opts.fill = forwards;\r

      \  elem.animate(kflist, opts);\r

      }\r\n"
    sig: function animateProperty(elem, prop, start, middle, end, msDuration,
      forwards){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  animatePropertyX:
    name: animatePropertyX
    code: "function animatePropertyX(elem, prop, start_middle_end, msDuration,
      forwards, easing, delay) {\r

      \  let kflist = [];\r

      \  for (const perc in start_middle_end) {\r

      \    let o = {};\r

      \    let val = start_middle_end[perc];\r

      \    o[prop] = isString(val) || prop == 'opacity' ? val : '' + val +
      'px';\r

      \    kflist.push(o);\r

      \  }\r

      \  let opts = { duration: msDuration, fill: valf(forwards, 'none'),
      easing: valf(easing, 'ease-it-out'), delay: valf(delay, 0) };\r

      \  elem.animate(kflist, opts);\r

      }\r\n"
    sig: function animatePropertyX(elem, prop, start_middle_end, msDuration,
      forwards, easing, delay){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aMove:
    name: aMove
    code: "function aMove(d, dSource, dTarget, callback, offset, ms, easing, fade)
      {\r

      \  let b1 = getRect(dSource);\r

      \  let b2 = getRect(dTarget);\r

      \  if (nundef(offset)) offset = { x: 0, y: 0 };\r

      \  let dist = { x: b2.x - b1.x + offset.x, y: b2.y - b1.y + offset.y
      };\r

      \  d.style.zIndex = 100;\r

      \  let a = d.animate({ opacity: valf(fade, 1), transform:
      `translate(${dist.x}px,${dist.y}px)` }, { easing: valf(easing, 'EASE'),
      duration: ms });\r

      \  a.onfinish = () => { d.style.zIndex = iZMax(); if
      (isdef(callback)) callback(); };\r

      }\r\n"
    sig: function aMove(d, dSource, dTarget, callback, offset, ms, easing, fade){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aTranslateFadeBy:
    name: aTranslateFadeBy
    code: "function aTranslateFadeBy(d, x, y, ms) { return d.animate({ opacity: .5,
      transform: `translate(${x}px,${y}px)` }, { easing: MyEasing, duration: ms
      }); }\r\n"
    sig: function aTranslateFadeBy(d, x, y, ms){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aTranslateBy:
    name: aTranslateBy
    code: "function aTranslateBy(d, x, y, ms) { return d.animate({ transform:
      `translate(${x}px,${y}px)` }, ms); }\r\n"
    sig: function aTranslateBy(d, x, y, ms){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aRotate:
    name: aRotate
    code: "function aRotate(d, ms = 2000) { return d.animate({ transform:
      `rotate(360deg)` }, ms); }\r\n"
    sig: function aRotate(d, ms = 2000){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aRotateAccel:
    name: aRotateAccel
    code: "function aRotateAccel(d, ms) { return d.animate({ transform:
      `rotate(1200deg)` }, { easing: 'cubic-bezier(.72, 0, 1, 1)', duration: ms
      }); }\r\n"
    sig: function aRotateAccel(d, ms){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  drawShape:
    name: drawShape
    code: "function drawShape(key, dParent, styles, classes, sizing) {\r

      \  if (nundef(styles)) styles = { w: 96, h: 96, bg: 'random' };\r

      \  if (nundef(sizing)) sizing = { hgrow: true, wgrow: true };\r

      \  let d = mDiv(dParent, styles, null, null, classes, sizing);\r

      \  if (key == 'circle' || key == 'ellipse') mStyle(d, { rounding:
      '50%' });\r

      \  else mStyle(d, { 'clip-path': PolyClips[key] });\r

      \  return d;\r

      }\r\n"
    sig: function drawShape(key, dParent, styles, classes, sizing){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  drawPlainCircle:
    name: drawPlainCircle
    code: "function drawPlainCircle(c) {\r

      \  let item = mPic('heart', dMain, { fz: 8, bg: 'red', rounding:
      '50%', padding: 1 });\r

      \  mPos(iDiv(item), c.x, c.y);\r

      \  return item;\r

      }\r\n"
    sig: function drawPlainCircle(c){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  drawText:
    name: drawText
    code: "function drawText(text, c) {\r

      \  let item = mText(text, dMain, { fz: 16, bg: 'skyblue', rounding:
      '50%', padding: 4 });\r

      \  mPos(iDiv(item), c.x, c.y);\r

      \  return item;\r

      }\r\n"
    sig: function drawText(text, c){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  drawSym:
    name: drawSym
    code: "function drawSym(sym, c) {\r

      \  let item = mPic(sym, dMain, { fz: 25, bg: 'skyblue', rounding:
      '50%', padding: 4 });\r

      \  mPos(iDiv(item), c.x, c.y);\r

      \  return item;\r

      }\r\n"
    sig: function drawSym(sym, c){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  drawTriangle:
    name: drawTriangle
    code: "function drawTriangle(dParent, styles, classes, sizing) {\r

      \  if (nundef(styles)) styles = { w: 100, h: 100, bg: 'blue' };\r

      \  if (nundef(classes)) classes = ['frameOnHover'];\r

      \  if (nundef(sizing)) sizing = { hgrow: true, wgrow: true };\r

      \  let d = mDiv(dParent, styles, null, null, classes, sizing);\r

      \  mStyle(d, { 'clip-path': 'polygon(50% 0%, 100% 100%, 0% 100%)'
      });\r

      \  return d;\r

      }\r\n"
    sig: function drawTriangle(dParent, styles, classes, sizing){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  drawFlatHex:
    name: drawFlatHex
    code: "function drawFlatHex(dParent, styles, classes, sizing) {\r

      \  if (nundef(styles)) styles = { w: 100, h: 100, bg: 'blue' };\r

      \  if (nundef(classes)) classes = ['frameOnHover'];\r

      \  if (nundef(sizing)) sizing = { hgrow: true, wgrow: true };\r

      \  let d = mDiv(dParent, styles, null, null, classes, sizing);\r

      \  mStyle(d, { 'clip-path': 'polygon(25% 0%, 75% 0%, 100% 50%, 75%
      100%, 25% 100%, 0% 50%)' });\r

      \  return d;\r

      }\r\n"
    sig: function drawFlatHex(dParent, styles, classes, sizing){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  drawHex:
    name: drawHex
    code: "function drawHex(dParent, styles, classes, sizing) {\r

      \  if (nundef(styles)) styles = { w: 100, h: 100, bg: 'blue' };\r

      \  if (nundef(classes)) classes = ['frameOnHover'];\r

      \  if (nundef(sizing)) sizing = { hgrow: true, wgrow: true };\r

      \  let d = mDiv(dParent, styles, null, null, classes, sizing);\r

      \  mStyle(d, { 'clip-path': 'polygon(50% 0%, 100% 25%, 100% 75%, 50%
      100%, 0% 75%, 0% 25%)' });\r

      \  return d;\r

      }\r\n"
    sig: function drawHex(dParent, styles, classes, sizing){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gSizeToContent:
    name: gSizeToContent
    code: "function gSizeToContent(svg) {\r

      \  var bbox = svg.getBBox();\r

      \  svg.setAttribute(\"width\", bbox.x + bbox.width + bbox.x);\r

      \  svg.setAttribute(\"height\", bbox.y + bbox.height + bbox.y);\r

      }\r\n"
    sig: function gSizeToContent(svg){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agColoredShape:
    name: agColoredShape
    code: "function agColoredShape(g, shape, w, h, color) {\r

      \  SHAPEFUNCS[shape](g, w, h);\r

      \  gBg(g, color);\r

      }\r\n"
    sig: function agColoredShape(g, shape, w, h, color){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agShape:
    name: agShape
    code: "function agShape(g, shape, w, h, color, rounding) {\r

      \  let sh = gShape(shape, w, h, color, rounding);\r

      \  g.appendChild(sh);\r

      \  return sh;\r

      }\r\n"
    sig: function agShape(g, shape, w, h, color, rounding){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gShape:
    name: gShape
    code: "function gShape(shape, w = 20, h = 20, color = 'green', rounding) {\r

      \  let el = gG();\r

      \  if (nundef(shape)) shape = 'rect';\r

      \  if (shape != 'line') agColoredShape(el, shape, w, h, color);\r

      \  else gStroke(el, color, w);\r

      \  if (isdef(rounding) && shape == 'rect') {\r

      \    let r = el.children[0];\r

      \    gRounding(r, rounding);\r

      \  }\r

      \  return el;\r

      }\r\n"
    sig: function gShape(shape, w = 20, h = 20, color = 'green', rounding){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gCreate:
    name: gCreate
    code: "function gCreate(tag) { return document.createElementNS('http:/' +
      '/www.w3.org/2000/svg', tag); }\r\n"
    sig: function gCreate(tag){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gPos:
    name: gPos
    code: "function gPos(g, x, y) { g.style.transform = `translate(${x}px, ${y}px)`;
      }\r\n"
    sig: function gPos(g, x, y){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gSize:
    name: gSize
    code: "function gSize(g, w, h, shape = null, iChild = 0) {\r

      \  let el = (getTypeOf(g) != 'g') ? g : g.children[iChild];\r

      \  let t = getTypeOf(el);\r

      \  switch (t) {\r

      \    case 'rect': el.setAttribute('width', w);
      el.setAttribute('height', h); el.setAttribute('x', -w / 2);
      el.setAttribute('y', -h / 2); break;\r

      \    case 'ellipse': el.setAttribute('rx', w / 2);
      el.setAttribute('ry', h / 2); break;\r

      \    default:\r

      \      if (shape) {\r

      \        switch (shape) {\r

      \          case 'hex': let pts = size2hex(w, h);
      el.setAttribute('points', pts); break;\r

      \        }\r

      \      }\r

      \  }\r

      \  return el;\r

      }\r\n"
    sig: function gSize(g, w, h, shape = null, iChild = 0){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gBg:
    name: gBg
    code: "function gBg(g, color) { g.setAttribute('fill', color); }\r\n"
    sig: function gBg(g, color){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gFg:
    name: gFg
    code: "function gFg(g, color, thickness) { g.setAttribute('stroke', color); if
      (thickness) g.setAttribute('stroke-width', thickness); }\r\n"
    sig: function gFg(g, color, thickness){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gRounding:
    name: gRounding
    code: "function gRounding(r, rounding) {\r

      \  r.setAttribute('rx', rounding);\r

      \  r.setAttribute('ry', rounding);\r

      }\r\n"
    sig: function gRounding(r, rounding){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gStroke:
    name: gStroke
    code: "function gStroke(g, color, thickness) { g.setAttribute('stroke', color);
      if (thickness) g.setAttribute('stroke-width', thickness); }\r\n"
    sig: function gStroke(g, color, thickness){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gSvg:
    name: gSvg
    code: "function gSvg() { return gCreate('svg'); }\r\n"
    sig: function gSvg(){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gG:
    name: gG
    code: "function gG() { return gCreate('g'); }\r\n"
    sig: function gG(){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gHex:
    name: gHex
    code: "function gHex(w, h) { let pts = size2hex(w, h); return gPoly(pts); }\r\n"
    sig: function gHex(w, h){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gPoly:
    name: gPoly
    code: "function gPoly(pts) { let r = gCreate('polygon'); if (pts)
      r.setAttribute('points', pts); return r; }\r\n"
    sig: function gPoly(pts){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gRect:
    name: gRect
    code: "function gRect(w, h) { let r = gCreate('rect'); r.setAttribute('width',
      w); r.setAttribute('height', h); r.setAttribute('x', -w / 2);
      r.setAttribute('y', -h / 2); return r; }\r\n"
    sig: function gRect(w, h){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gEllipse:
    name: gEllipse
    code: "function gEllipse(w, h) { let r = gCreate('ellipse');
      r.setAttribute('rx', w / 2); r.setAttribute('ry', h / 2); return r; }\r\n"
    sig: function gEllipse(w, h){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gLine:
    name: gLine
    code: "function gLine(x1, y1, x2, y2) { let r = gCreate('line');
      r.setAttribute('x1', x1); r.setAttribute('y1', y1); r.setAttribute('x2',
      x2); r.setAttribute('y2', y2); return r; }\r\n"
    sig: function gLine(x1, y1, x2, y2){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  gCanvas:
    name: gCanvas
    code: "function gCanvas(area, w, h, color, originInCenter = true) {\r

      \  let dParent = mBy(area);\r

      \  let div = stage3_prepContainer(dParent);\r

      \  div.style.width = w + 'px';\r

      \  div.style.height = h + 'px';\r

      \  let svg = gSvg();\r

      \  let style =
      `margin:0;padding:0;position:absolute;top:0px;left:0px;width:100%;height:\
      100%;`\r

      \  svg.setAttribute('style', style);\r

      \  mColor(svg, color);\r

      \  div.appendChild(svg);\r

      \  let g = gG();\r

      \  if (originInCenter) g.style.transform = \"translate(50%,
      50%)\";\r

      \  svg.appendChild(g);\r

      \  return g;\r

      }\r\n"
    sig: function gCanvas(area, w, h, color, originInCenter = true){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agCircle:
    name: agCircle
    code: "function agCircle(g, sz) { let r = gEllipse(sz, sz); g.appendChild(r);
      return r; }\r\n"
    sig: function agCircle(g, sz){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agEllipse:
    name: agEllipse
    code: "function agEllipse(g, w, h) { let r = gEllipse(w, h); g.appendChild(r);
      return r; }\r\n"
    sig: function agEllipse(g, w, h){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agHex:
    name: agHex
    code: "function agHex(g, w, h) { let pts = size2hex(w, h); return agPoly(g,
      pts); }\r\n"
    sig: function agHex(g, w, h){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agPoly:
    name: agPoly
    code: "function agPoly(g, pts) { let r = gPoly(pts); g.appendChild(r); return r;
      }\r\n"
    sig: function agPoly(g, pts){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agRect:
    name: agRect
    code: "function agRect(g, w, h) { let r = gRect(w, h); g.appendChild(r); return
      r; }\r\n"
    sig: function agRect(g, w, h){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agLine:
    name: agLine
    code: "function agLine(g, x1, y1, x2, y2) { let r = gLine(x1, y1, x2, y2);
      g.appendChild(r); return r; }\r\n"
    sig: function agLine(g, x1, y1, x2, y2){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  agG:
    name: agG
    code: "function agG(g) { let g1 = gG(); g.appendChild(g1); return g1; }\r\n"
    sig: function agG(g){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aSvg:
    name: aSvg
    code: "function aSvg(dParent) {\r

      \  if (!dParent.style.position) dParent.style.position =
      'relative';\r

      \  let svg1 = gSvg();\r

      \  svg1.setAttribute('width', '100%');\r

      \  svg1.setAttribute('height', '100%');\r

      \  let style =
      'margin:0;padding:0;position:absolute;top:0px;left:0px;';\r

      \  svg1.setAttribute('style', style);\r

      \  dParent.appendChild(svg1);\r

      \  return svg1;\r

      }\r\n"
    sig: function aSvg(dParent){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aSvgg:
    name: aSvgg
    code: "function aSvgg(dParent, originInCenter = true) {\r

      \  if (!dParent.style.position) dParent.style.position =
      'relative';\r

      \  let svg1 = gSvg();\r

      \  svg1.setAttribute('width', '100%');\r

      \  svg1.setAttribute('height', '100%');\r

      \  let style =
      'margin:0;padding:0;position:absolute;top:0px;left:0px;';\r

      \  svg1.setAttribute('style', style);\r

      \  dParent.appendChild(svg1);\r

      \  let g1 = document.createElementNS('http:/' +
      '/www.w3.org/2000/svg', 'g');\r

      \  svg1.appendChild(g1);\r

      \  if (originInCenter) { g1.style.transform = \"translate(50%,
      50%)\"; }\r

      \  return g1;\r

      }\r\n"
    sig: function aSvgg(dParent, originInCenter = true){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  anyColorToStandardString:
    name: anyColorToStandardString
    code: "function anyColorToStandardString(cAny, a, allowHsl = false) {\r

      \  if (Array.isArray(cAny)) {\r

      \    if (cAny.length < 3) {\r

      \      return randomHexColor();\r

      \    } else if (cAny.length == 3) {\r

      \      let r = cAny[0];\r

      \      let g = cAny[1];\r

      \      let b = cAny[2];\r

      \      return a == undefined || a == 1 ? `rgb(${r},${g},${b})` :
      `rgba(${r},${g},${b},${a})`;\r

      \    }\r

      \  } else if (isString(cAny)) {\r

      \    if (cAny[0] == '#') {\r

      \      if (a == undefined) return cAny;\r

      \      cAny = cAny.substring(0, 7);\r

      \      return cAny + (a == 1 ? '' : alphaToHex(a));\r

      \    } else if (cAny[0] == 'r' && cAny[1] == 'g') {\r

      \      if (a == undefined) return cAny;\r

      \      if (cAny[3] == 'a') {\r

      \        if (a < 1) {\r

      \          return stringBeforeLast(cAny, ',') + ',' + a + ')';\r

      \        } else {\r

      \          let parts = cAny.split(',');\r

      \          let r = firstNumber(parts[0]);\r

      \          return 'rgb(' + r + ',' + parts[1] + ',' + parts[2] +
      ')';\r

      \        }\r

      \      } else {\r

      \        if (a < 1) {\r

      \          return 'rgba' + cAny.substring(3, cAny.length - 1) + ','
      + a + ')';\r

      \        } else {\r

      \          return cAny;\r

      \        }\r

      \      }\r

      \    } else if (cAny[0] == 'h' && cAny[1] == 's') {\r

      \      if (allowHsl) {\r

      \        if (a == undefined) return cAny;\r

      \        if (cAny[3] == 'a') {\r

      \          if (a < 1) {\r

      \            return stringBeforeLast(cAny, ',') + ',' + a + ')';\r

      \          } else {\r

      \            let parts = cAny.split(',');\r

      \            let r = firstNumber(parts[0]);\r

      \            return 'hsl(' + r + ',' + parts[1] + ',' + parts[2] +
      ')';\r

      \          }\r

      \        } else {\r

      \          return a == 1 ? cAny : 'hsla' + cAny.substring(3,
      cAny.length - 1) + ',' + a + ')'; \r

      \        }\r

      \      } else {\r

      \        if (cAny[3] == 'a') {\r

      \          cAny = HSLAToRGBA(cAny);\r

      \        } else {\r

      \          cAny = HSLToRGB(cAny);\r

      \        }\r

      \        return anyColorToStandardString(cAny, a, allowHsl);\r

      \      }\r

      \    } else {\r

      \      let newcAny = colorNameToHex(cAny);\r

      \      return anyColorToStandardString(newcAny, a, allowHsl);\r

      \    }\r

      \  } else if (typeof cAny == 'object') {\r

      \    if ('h' in cAny) {\r

      \      let hslString = '';\r

      \      if (a == undefined || a == 1) {\r

      \        hslString = `hsl(${cAny.h},${Math.round(cAny.s <= 1.0 ?
      cAny.s * 100 : cAny.s)}%,${Math.round(cAny.l <= 1.0 ? cAny.l * 100 :
      cAny.l)}%)`;\r

      \      } else {\r

      \        hslString = `hsla(${cAny.h},${Math.round(cAny.s <= 1.0 ?
      cAny.s * 100 : cAny.s)}%,${Math.round(cAny.l <= 1.0 ? cAny.l * 100 :
      cAny.l)}%,${a})`;\r

      \      }\r

      \      if (allowHsl) {\r

      \        return hslString;\r

      \      } else {\r

      \        return anyColorToStandardString(hslString, a, allowHsl);\r

      \      }\r

      \    } else if ('r' in cAny) {\r

      \      if (a !== undefined && a < 1) {\r

      \        return `rgba(${cAny.r},${cAny.g},${cAny.b},${a})`;\r

      \      } else {\r

      \        return `rgb(${cAny.r},${cAny.g},${cAny.b})`;\r

      \      }\r

      \    }\r

      \  }\r

      } \r\n"
    sig: function anyColorToStandardString(cAny, a, allowHsl = false){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  alphaToHex:
    name: alphaToHex
    code: "function alphaToHex(zero1) {\r

      \  zero1 = Math.round(zero1 * 100) / 100;\r

      \  var alpha = Math.round(zero1 * 255);\r

      \  var hex = (alpha + 0x10000)\r

      \    .toString(16)\r

      \    .slice(-2)\r

      \    .toUpperCase();\r

      \  var perc = Math.round(zero1 * 100);\r

      \  return hex;\r

      }\r\n"
    sig: function alphaToHex(zero1){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bestContrastingColor:
    name: bestContrastingColor
    code: "function bestContrastingColor(color, colorlist) {\r

      \  let contrast = 0;\r

      \  let result = null;\r

      \  let rgb = colorRGB(color, true);\r

      \  rgb = [rgb.r, rgb.g, rgb.b];\r

      \  for (c1 of colorlist) {\r

      \    let x = colorRGB(c1, true)\r

      \    x = [x.r, x.g, x.b];\r

      \    let c = getContrast(rgb, x);\r

      \    if (c > contrast) { contrast = c; result = c1; }\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function bestContrastingColor(color, colorlist){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  helleFarbe:
    name: helleFarbe
    code: "function helleFarbe(contrastTo, minDiff = 25, mod = 30, start = 0) {\r

      \  let wheel = getHueWheel(contrastTo, minDiff, mod, start);\r

      \  let hue = chooseRandom(wheel);\r

      \  let hsl = colorHSLBuild(hue, 100, 50);\r

      \  return hsl;\r

      }\r\n"
    sig: function helleFarbe(contrastTo, minDiff = 25, mod = 30, start = 0){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getColorWheel:
    name: getColorWheel
    code: "function getColorWheel(contrastTo, n) {\r

      \  let hc = colorHue(contrastTo);\r

      \  let wheel = [];\r

      \  let start = hc;\r

      \  let inc = Math.round(360 / (n + 1));\r

      \  start += inc;\r

      \  for (let i = 0; i < n; i++) {\r

      \    wheel.push(start % 360);\r

      \    start += inc;\r

      \  }\r

      \  return wheel.map(x => colorHSLBuild(x));\r

      }\r\n"
    sig: function getColorWheel(contrastTo, n){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getHueWheel:
    name: getHueWheel
    code: "function getHueWheel(contrastTo, minDiff = 25, mod = 30, start = 0) {\r

      \  let hc = colorHue(contrastTo);\r

      \  let wheel = [];\r

      \  while (start < 360) {\r

      \    let d1 = Math.abs((start + 360) - hc);\r

      \    let d2 = Math.abs((start) - hc);\r

      \    let d3 = Math.abs((start - 360) - hc);\r

      \    let min = Math.min(d1, d2, d3);\r

      \    if (min > minDiff) wheel.push(start);\r

      \    start += mod;\r

      \  }\r

      \  return wheel;\r

      }\r\n"
    sig: function getHueWheel(contrastTo, minDiff = 25, mod = 30, start = 0){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getPalette:
    name: getPalette
    code: "function getPalette(color, type = 'shade') {\r

      \  color = anyColorToStandardString(color);\r

      \  return colorPalShade(color);\r

      }\r\n"
    sig: function getPalette(color, type = 'shade'){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getPaletteFromImage:
    name: getPaletteFromImage
    code: "function getPaletteFromImage(img) {\r

      \  let palette0 = ColorThiefObject.getPalette(img);\r

      \  let palette = [];\r

      \  for (const pal of palette0) {\r

      \    let color = anyColorToStandardString(pal);\r

      \    palette.push(color);\r

      \  }\r

      \  return palette;\r

      }\r\n"
    sig: function getPaletteFromImage(img){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getTransPalette:
    name: getTransPalette
    code: "function getTransPalette(color = '#000000') {\r

      \  let res = [];\r

      \  for (const alpha of [.0, .1, .2, .3, .4, .5, .6, .7, .8, .9, 1])
      res.push(colorTrans(color, alpha));\r

      \  return res;\r

      }\r\n"
    sig: function getTransPalette(color = '#000000'){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getTransPalette9:
    name: getTransPalette9
    code: "function getTransPalette9(color = '#000000') {\r

      \  let res = [];\r

      \  for (const alpha of [.1, .2, .3, .4, .5, .6, .7, .8, .9])
      res.push(colorTrans(color, alpha));\r

      \  return res;\r

      }\r\n"
    sig: function getTransPalette9(color = '#000000'){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorHue:
    name: colorHue
    code: "function colorHue(cAny) { let hsl = colorHSL(cAny, true); return hsl.h;
      }\r\n"
    sig: function colorHue(cAny){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorHSL:
    name: colorHSL
    code: "function colorHSL(cAny, asObject = false) {\r

      \  let res = colorFrom(cAny, undefined, true);\r

      \  let shsl = res;\r

      \  if (res[0] == '#') {\r

      \    if (res.length == 9) {\r

      \      shsl = hexAToHSLA(res);\r

      \    } else if (res.length == 7) {\r

      \      shsl = hexToHSL(res);\r

      \    }\r

      \  } else if (res[0] == 'r') {\r

      \    if (res[3] == 'a') {\r

      \      shsl = RGBAToHSLA(res);\r

      \    } else {\r

      \      shsl = RGBToHSL(res);\r

      \    }\r

      \  }\r

      \  let n = allNumbers(shsl);\r

      \  if (asObject) {\r

      \    return { h: n[0], s: n[1] / 100, l: n[2] / 100, a: n.length > 3
      ? n[3] : 1 };\r

      \  } else {\r

      \    return shsl;\r

      \  }\r

      }\r\n"
    sig: function colorHSL(cAny, asObject = false){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorHSLBuild:
    name: colorHSLBuild
    code: "function colorHSLBuild(hue, sat = 100, lum = 50) { let result = \"hsl(\"
      + hue + ',' + sat + '%,' + lum + '%)'; return result; }\r\n"
    sig: function colorHSLBuild(hue, sat = 100, lum = 50){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorBlend:
    name: colorBlend
    code: "function colorBlend(zero1, c0, c1, log = true) {\r

      \  c0 = anyColorToStandardString(c0);\r

      \  c1 = anyColorToStandardString(c1);\r

      \  return pSBC(zero1, c0, c1, log);\r

      } \r\n"
    sig: function colorBlend(zero1, c0, c1, log = true){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorLighter:
    name: colorLighter
    code: "function colorLighter(c, zero1 = .2, log = true) {\r

      \  c = anyColorToStandardString(c);\r

      \  return pSBC(zero1, c, undefined, !log);\r

      } \r\n"
    sig: function colorLighter(c, zero1 = .2, log = true){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorDarker:
    name: colorDarker
    code: "function colorDarker(c, zero1 = .8, log = true) {\r

      \  c = anyColorToStandardString(c);\r

      \  return pSBC(-zero1, c, undefined, !log);\r

      } \r\n"
    sig: function colorDarker(c, zero1 = .8, log = true){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorPalShadeX:
    name: colorPalShadeX
    code: "function colorPalShadeX(color, n) {\r

      \  let res = [];\r

      \  let step = 1.6 / (n - 1);\r

      \  for (let frac = -0.8; frac <= 0.8; frac += step) { \r

      \    let c = pSBC(frac, color, undefined, true); \r

      \    res.push(c);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function colorPalShadeX(color, n){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorShade:
    name: colorShade
    code: "function colorShade(plusMinus1, color, log = true) {\r

      \  let c = anyColorToStandardString(color);\r

      \  return pSBC(plusMinus1, c, undefined, !log);\r

      } \r\n"
    sig: function colorShade(plusMinus1, color, log = true){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorTrans:
    name: colorTrans
    code: "function colorTrans(cAny, alpha = 0.5) {\r

      \  return colorFrom(cAny, alpha);\r

      }\r\n"
    sig: function colorTrans(cAny, alpha = 0.5){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorIdealText:
    name: colorIdealText
    code: "function colorIdealText(bg, grayPreferred = false) {\r

      \  let rgb = colorRGB(bg, true);\r

      \  const nThreshold = 105;\r

      \  let r = rgb.r;\r

      \  let g = rgb.g;\r

      \  let b = rgb.b;\r

      \  var bgDelta = r * 0.299 + g * 0.587 + b * 0.114;\r

      \  var foreColor = 255 - bgDelta < nThreshold ? 'black' : 'white';\r

      \  if (grayPreferred) foreColor = 255 - bgDelta < nThreshold ?
      'dimgray' : 'snow';\r

      \  return foreColor;\r

      }\r\n"
    sig: function colorIdealText(bg, grayPreferred = false){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorHex:
    name: colorHex
    code: "function colorHex(cAny) {\r

      \  let c = colorFrom(cAny);\r

      \  if (c[0] == '#') {\r

      \    return c;\r

      \  } else {\r

      \    let res = pSBC(0, c, 'c');\r

      \    return res;\r

      \  }\r

      }\r\n"
    sig: function colorHex(cAny){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorRGB:
    name: colorRGB
    code: "function colorRGB(cAny, asObject = false) {\r

      \  let res = colorFrom(cAny);\r

      \  let srgb = res;\r

      \  if (res[0] == '#') {\r

      \    srgb = pSBC(0, res, 'c');\r

      \  }\r

      \  let n = allNumbers(srgb);\r

      \  if (asObject) {\r

      \    return { r: n[0], g: n[1], b: n[2], a: n.length > 3 ? n[3] : 1
      };\r

      \  } else {\r

      \    return srgb;\r

      \  }\r

      }\r\n"
    sig: function colorRGB(cAny, asObject = false){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ensureColorNames:
    name: ensureColorNames
    code: "function ensureColorNames() {\r

      \  if (isdef(ColorNames)) return;\r

      \  ColorNames = {};\r

      \  let names = getColorNames();\r

      \  let hexes = getColorHexes();\r

      \  for (let i = 0; i < names.length; i++) {\r

      \    ColorNames[names[i].toLowerCase()] = '#' + hexes[i];\r

      \  }\r

      }\r\n"
    sig: function ensureColorNames(){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorNameToHex:
    name: colorNameToHex
    code: "function colorNameToHex(cName) { let key = cName.toLowerCase();
      ensureColorNames(); return key in ColorNames ? ColorNames[key] :
      randomHexColor(); } \r\n"
    sig: function colorNameToHex(cName){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  colorPalShade:
    name: colorPalShade
    code: "function colorPalShade(color) {\r

      \  let res = [];\r

      \  for (let frac = -0.8; frac <= 0.8; frac += 0.2) {\r

      \    let c = pSBC(frac, color, undefined, true); \r

      \    res.push(c);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function colorPalShade(color){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getColorDictColor:
    name: getColorDictColor
    code: "function getColorDictColor(c) { return isdef(ColorDict[c]) ?
      ColorDict[c].c : c; }\r\n"
    sig: function getColorDictColor(c){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getColorNames:
    name: getColorNames
    code: "function getColorNames() {\r

      \  return [\r

      \    'AliceBlue',\r

      \    'AntiqueWhite',\r

      \    'Aqua',\r

      \    'Aquamarine',\r

      \    'Azure',\r

      \    'Beige',\r

      \    'Bisque',\r

      \    'Black',\r

      \    'BlanchedAlmond',\r

      \    'Blue',\r

      \    'BlueViolet',\r

      \    'Brown',\r

      \    'BurlyWood',\r

      \    'CadetBlue',\r

      \    'Chartreuse',\r

      \    'Chocolate',\r

      \    'Coral',\r

      \    'CornflowerBlue',\r

      \    'Cornsilk',\r

      \    'Crimson',\r

      \    'Cyan',\r

      \    'DarkBlue',\r

      \    'DarkCyan',\r

      \    'DarkGoldenRod',\r

      \    'DarkGray',\r

      \    'DarkGrey',\r

      \    'DarkGreen',\r

      \    'DarkKhaki',\r

      \    'DarkMagenta',\r

      \    'DarkOliveGreen',\r

      \    'DarkOrange',\r

      \    'DarkOrchid',\r

      \    'DarkRed',\r

      \    'DarkSalmon',\r

      \    'DarkSeaGreen',\r

      \    'DarkSlateBlue',\r

      \    'DarkSlateGray',\r

      \    'DarkSlateGrey',\r

      \    'DarkTurquoise',\r

      \    'DarkViolet',\r

      \    'DeepPink',\r

      \    'DeepSkyBlue',\r

      \    'DimGray',\r

      \    'DimGrey',\r

      \    'DodgerBlue',\r

      \    'FireBrick',\r

      \    'FloralWhite',\r

      \    'ForestGreen',\r

      \    'Fuchsia',\r

      \    'Gainsboro',\r

      \    'GhostWhite',\r

      \    'Gold',\r

      \    'GoldenRod',\r

      \    'Gray',\r

      \    'Grey',\r

      \    'Green',\r

      \    'GreenYellow',\r

      \    'HoneyDew',\r

      \    'HotPink',\r

      \    'IndianRed',\r

      \    'Indigo',\r

      \    'Ivory',\r

      \    'Khaki',\r

      \    'Lavender',\r

      \    'LavenderBlush',\r

      \    'LawnGreen',\r

      \    'LemonChiffon',\r

      \    'LightBlue',\r

      \    'LightCoral',\r

      \    'LightCyan',\r

      \    'LightGoldenRodYellow',\r

      \    'LightGray',\r

      \    'LightGrey',\r

      \    'LightGreen',\r

      \    'LightPink',\r

      \    'LightSalmon',\r

      \    'LightSeaGreen',\r

      \    'LightSkyBlue',\r

      \    'LightSlateGray',\r

      \    'LightSlateGrey',\r

      \    'LightSteelBlue',\r

      \    'LightYellow',\r

      \    'Lime',\r

      \    'LimeGreen',\r

      \    'Linen',\r

      \    'Magenta',\r

      \    'Maroon',\r

      \    'MediumAquaMarine',\r

      \    'MediumBlue',\r

      \    'MediumOrchid',\r

      \    'MediumPurple',\r

      \    'MediumSeaGreen',\r

      \    'MediumSlateBlue',\r

      \    'MediumSpringGreen',\r

      \    'MediumTurquoise',\r

      \    'MediumVioletRed',\r

      \    'MidnightBlue',\r

      \    'MintCream',\r

      \    'MistyRose',\r

      \    'Moccasin',\r

      \    'NavajoWhite',\r

      \    'Navy',\r

      \    'OldLace',\r

      \    'Olive',\r

      \    'OliveDrab',\r

      \    'Orange',\r

      \    'OrangeRed',\r

      \    'Orchid',\r

      \    'PaleGoldenRod',\r

      \    'PaleGreen',\r

      \    'PaleTurquoise',\r

      \    'PaleVioletRed',\r

      \    'PapayaWhip',\r

      \    'PeachPuff',\r

      \    'Peru',\r

      \    'Pink',\r

      \    'Plum',\r

      \    'PowderBlue',\r

      \    'Purple',\r

      \    'RebeccaPurple',\r

      \    'Red',\r

      \    'RosyBrown',\r

      \    'RoyalBlue',\r

      \    'SaddleBrown',\r

      \    'Salmon',\r

      \    'SandyBrown',\r

      \    'SeaGreen',\r

      \    'SeaShell',\r

      \    'Sienna',\r

      \    'Silver',\r

      \    'SkyBlue',\r

      \    'SlateBlue',\r

      \    'SlateGray',\r

      \    'SlateGrey',\r

      \    'Snow',\r

      \    'SpringGreen',\r

      \    'SteelBlue',\r

      \    'Tan',\r

      \    'Teal',\r

      \    'Thistle',\r

      \    'Tomato',\r

      \    'Turquoise',\r

      \    'Violet',\r

      \    'Wheat',\r

      \    'White',\r

      \    'WhiteSmoke',\r

      \    'Yellow',\r

      \    'YellowGreen'\r

      \  ];\r

      }\r\n"
    sig: function getColorNames(){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getColorHexes:
    name: getColorHexes
    code: "function getColorHexes(x) {\r

      \  return [\r

      \    'f0f8ff',\r

      \    'faebd7',\r

      \    '00ffff',\r

      \    '7fffd4',\r

      \    'f0ffff',\r

      \    'f5f5dc',\r

      \    'ffe4c4',\r

      \    '000000',\r

      \    'ffebcd',\r

      \    '0000ff',\r

      \    '8a2be2',\r

      \    'a52a2a',\r

      \    'deb887',\r

      \    '5f9ea0',\r

      \    '7fff00',\r

      \    'd2691e',\r

      \    'ff7f50',\r

      \    '6495ed',\r

      \    'fff8dc',\r

      \    'dc143c',\r

      \    '00ffff',\r

      \    '00008b',\r

      \    '008b8b',\r

      \    'b8860b',\r

      \    'a9a9a9',\r

      \    'a9a9a9',\r

      \    '006400',\r

      \    'bdb76b',\r

      \    '8b008b',\r

      \    '556b2f',\r

      \    'ff8c00',\r

      \    '9932cc',\r

      \    '8b0000',\r

      \    'e9967a',\r

      \    '8fbc8f',\r

      \    '483d8b',\r

      \    '2f4f4f',\r

      \    '2f4f4f',\r

      \    '00ced1',\r

      \    '9400d3',\r

      \    'ff1493',\r

      \    '00bfff',\r

      \    '696969',\r

      \    '696969',\r

      \    '1e90ff',\r

      \    'b22222',\r

      \    'fffaf0',\r

      \    '228b22',\r

      \    'ff00ff',\r

      \    'dcdcdc',\r

      \    'f8f8ff',\r

      \    'ffd700',\r

      \    'daa520',\r

      \    '808080',\r

      \    '808080',\r

      \    '008000',\r

      \    'adff2f',\r

      \    'f0fff0',\r

      \    'ff69b4',\r

      \    'cd5c5c',\r

      \    '4b0082',\r

      \    'fffff0',\r

      \    'f0e68c',\r

      \    'e6e6fa',\r

      \    'fff0f5',\r

      \    '7cfc00',\r

      \    'fffacd',\r

      \    'add8e6',\r

      \    'f08080',\r

      \    'e0ffff',\r

      \    'fafad2',\r

      \    'd3d3d3',\r

      \    'd3d3d3',\r

      \    '90ee90',\r

      \    'ffb6c1',\r

      \    'ffa07a',\r

      \    '20b2aa',\r

      \    '87cefa',\r

      \    '778899',\r

      \    '778899',\r

      \    'b0c4de',\r

      \    'ffffe0',\r

      \    '00ff00',\r

      \    '32cd32',\r

      \    'faf0e6',\r

      \    'ff00ff',\r

      \    '800000',\r

      \    '66cdaa',\r

      \    '0000cd',\r

      \    'ba55d3',\r

      \    '9370db',\r

      \    '3cb371',\r

      \    '7b68ee',\r

      \    '00fa9a',\r

      \    '48d1cc',\r

      \    'c71585',\r

      \    '191970',\r

      \    'f5fffa',\r

      \    'ffe4e1',\r

      \    'ffe4b5',\r

      \    'ffdead',\r

      \    '000080',\r

      \    'fdf5e6',\r

      \    '808000',\r

      \    '6b8e23',\r

      \    'ffa500',\r

      \    'ff4500',\r

      \    'da70d6',\r

      \    'eee8aa',\r

      \    '98fb98',\r

      \    'afeeee',\r

      \    'db7093',\r

      \    'ffefd5',\r

      \    'ffdab9',\r

      \    'cd853f',\r

      \    'ffc0cb',\r

      \    'dda0dd',\r

      \    'b0e0e6',\r

      \    '800080',\r

      \    '663399',\r

      \    'ff0000',\r

      \    'bc8f8f',\r

      \    '4169e1',\r

      \    '8b4513',\r

      \    'fa8072',\r

      \    'f4a460',\r

      \    '2e8b57',\r

      \    'fff5ee',\r

      \    'a0522d',\r

      \    'c0c0c0',\r

      \    '87ceeb',\r

      \    '6a5acd',\r

      \    '708090',\r

      \    '708090',\r

      \    'fffafa',\r

      \    '00ff7f',\r

      \    '4682b4',\r

      \    'd2b48c',\r

      \    '008080',\r

      \    'd8bfd8',\r

      \    'ff6347',\r

      \    '40e0d0',\r

      \    'ee82ee',\r

      \    'f5deb3',\r

      \    'ffffff',\r

      \    'f5f5f5',\r

      \    'ffff00',\r

      \    '9acd32'\r

      \  ];\r

      }\r\n"
    sig: function getColorHexes(x){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getBrightness:
    name: getBrightness
    code: "function getBrightness(c) {\r

      \  function luminance(r, g, b) {\r

      \    var a = [r, g, b].map(function (v) {\r

      \      v /= 255;\r

      \      return v <= 0.03928\r

      \        ? v / 12.92\r

      \        : Math.pow((v + 0.055) / 1.055, 2.4);\r

      \    });\r

      \    return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\r

      \  }\r

      \  let x = colorRGB(c, true);\r

      \  return luminance(x.r, x.g, x.b);\r

      }\r\n"
    sig: function getBrightness(c){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getContrast:
    name: getContrast
    code: "function getContrast(rgb1, rgb2) {\r

      \  var lum1 = luminance(rgb1[0], rgb1[1], rgb1[2]);\r

      \  var lum2 = luminance(rgb2[0], rgb2[1], rgb2[2]);\r

      \  var brightest = Math.max(lum1, lum2);\r

      \  var darkest = Math.min(lum1, lum2);\r

      \  return (brightest + 0.05)\r

      \    / (darkest + 0.05);\r

      }\r\n"
    sig: function getContrast(rgb1, rgb2){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  luminance:
    name: luminance
    code: "function luminance(r, g, b) {\r

      \  var a = [r, g, b].map(function (v) {\r

      \    v /= 255;\r

      \    return v <= 0.03928\r

      \      ? v / 12.92\r

      \      : Math.pow((v + 0.055) / 1.055, 2.4);\r

      \  });\r

      \  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\r

      }\r\n"
    sig: function luminance(r, g, b){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  computeColor:
    name: computeColor
    code: "function computeColor(c) { return (c == 'random') ? randomColor() : c;
      }\r\n"
    sig: function computeColor(c){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  computeColorX:
    name: computeColorX
    code: "function computeColorX(c) {\r

      \  let res = c;\r

      \  if (isList(c)) return chooseRandom(c);\r

      \  else if (isString(c) && startsWith(c, 'rand')) {\r

      \    res = randomColor();\r

      \    let spec = c.substring(4);\r

      \    if (isdef(window['color' + spec])) {\r

      \      res = window['color' + spec](res);\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function computeColorX(c){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getExtendedColors:
    name: getExtendedColors
    code: "function getExtendedColors(bg, fg, alpha) {\r

      \  //#region doc \r

      \  /* handles values random, inherit, contrast  */\r

      \  //#endregion \r

      \  bg = computeColorX(bg);\r

      \  fg = computeColorX(fg);\r

      \  if (bg == 'inherit' && (nundef(fg) || fg == 'contrast')) {\r

      \    fg = 'inherit'; \r

      \  } else if (fg == 'contrast' && isdef(bg) && bg != 'inherit') fg =
      colorIdealText(bg);\r

      \  else if (bg == 'contrast' && isdef(fg) && fg != 'inherit') { bg =
      colorIdealText(fg); }\r

      \  if (isdef(alpha)) bg = colorTrans(bg, alpha);\r

      \  return [bg, fg];\r

      }\r\n"
    sig: function getExtendedColors(bg, fg, alpha){}
    region: color (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  pSBC:
    name: pSBC
    code: "function pSBC(p, c0, c1, l) {\r

      \  let r,\r

      \    g,\r

      \    b,\r

      \    P,\r

      \    f,\r

      \    t,\r

      \    h,\r

      \    i = parseInt,\r

      \    m = Math.round,\r

      \    a = typeof c1 == 'string';\r

      \  if (typeof p != 'number' || p < -1 || p > 1 || typeof c0 !=
      'string' || (c0[0] != 'r' && c0[0] != '#') || (c1 && !a)) return null;\r

      \  if (!this.pSBCr)\r

      \    this.pSBCr = d => {\r

      \      let n = d.length,\r

      \        x = {};\r

      \      if (n > 9) {\r

      \        ([r, g, b, a] = d = d.split(',')), (n = d.length);\r

      \        if (n < 3 || n > 4) return null;\r

      \        (x.r = i(r[3] == 'a' ? r.slice(5) : r.slice(4))), (x.g =
      i(g)), (x.b = i(b)), (x.a = a ? parseFloat(a) : -1);\r

      \      } else {\r

      \        if (n == 8 || n == 6 || n < 4) return null;\r

      \        if (n < 6) d = '#' + d[1] + d[1] + d[2] + d[2] + d[3] +
      d[3] + (n > 4 ? d[4] + d[4] : '');\r

      \        d = i(d.slice(1), 16);\r

      \        if (n == 9 || n == 5) (x.r = (d >> 24) & 255), (x.g = (d >>
      16) & 255), (x.b = (d >> 8) & 255), (x.a = m((d & 255) / 0.255) / 1000);\r

      \        else (x.r = d >> 16), (x.g = (d >> 8) & 255), (x.b = d &
      255), (x.a = -1);\r

      \      }\r

      \      return x;\r

      \    };\r

      \  (h = c0.length > 9),\r

      \    (h = a ? (c1.length > 9 ? true : c1 == 'c' ? !h : false) :
      h),\r

      \    (f = pSBCr(c0)),\r

      \    (P = p < 0),\r

      \    (t = c1 && c1 != 'c' ? pSBCr(c1) : P ? { r: 0, g: 0, b: 0, a:
      -1 } : { r: 255, g: 255, b: 255, a: -1 }),\r

      \    (p = P ? p * -1 : p),\r

      \    (P = 1 - p);\r

      \  if (!f || !t) return null;\r

      \  if (l) (r = m(P * f.r + p * t.r)), (g = m(P * f.g + p * t.g)), (b
      = m(P * f.b + p * t.b));\r

      \  else (r = m((P * f.r ** 2 + p * t.r ** 2) ** 0.5)), (g = m((P *
      f.g ** 2 + p * t.g ** 2) ** 0.5)), (b = m((P * f.b ** 2 + p * t.b ** 2) **
      0.5));\r

      \  (a = f.a), (t = t.a), (f = a >= 0 || t >= 0), (a = f ? (a < 0 ? t
      : t < 0 ? a : a * P + t * p) : 0);\r

      \  if (h) return 'rgb' + (f ? 'a(' : '(') + r + ',' + g + ',' + b +
      (f ? ',' + m(a * 1000) / 1000 : '') + ')';\r

      \  else return '#' + (4294967296 + r * 16777216 + g * 65536 + b *
      256 + (f ? m(a * 255) : 0)).toString(16).slice(1, f ? undefined : -2);\r

      }\r\n"
    sig: function pSBC(p, c0, c1, l){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hexToHSL:
    name: hexToHSL
    code: "function hexToHSL(H) {\r

      \  let ex = /^#([\\da-f]{3}){1,2}$/i;\r

      \  if (ex.test(H)) {\r

      \    let r = 0,\r

      \      g = 0,\r

      \      b = 0;\r

      \    if (H.length == 4) {\r

      \      r = '0x' + H[1] + H[1];\r

      \      g = '0x' + H[2] + H[2];\r

      \      b = '0x' + H[3] + H[3];\r

      \    } else if (H.length == 7) {\r

      \      r = '0x' + H[1] + H[2];\r

      \      g = '0x' + H[3] + H[4];\r

      \      b = '0x' + H[5] + H[6];\r

      \    }\r

      \    r /= 255;\r

      \    g /= 255;\r

      \    b /= 255;\r

      \    let cmin = Math.min(r, g, b),\r

      \      cmax = Math.max(r, g, b),\r

      \      delta = cmax - cmin,\r

      \      h = 0,\r

      \      s = 0,\r

      \      l = 0;\r

      \    if (delta == 0) h = 0;\r

      \    else if (cmax == r) h = ((g - b) / delta) % 6;\r

      \    else if (cmax == g) h = (b - r) / delta + 2;\r

      \    else h = (r - g) / delta + 4;\r

      \    h = Math.round(h * 60);\r

      \    if (h < 0) h += 360;\r

      \    l = (cmax + cmin) / 2;\r

      \    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r

      \    s = +(s * 100).toFixed(1);\r

      \    l = +(l * 100).toFixed(1);\r

      \    return 'hsl(' + h + ',' + s + '%,' + l + '%)';\r

      \  } else {\r

      \    return 'Invalid input color';\r

      \  }\r

      }\r\n"
    sig: function hexToHSL(H){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hexAToHSLA:
    name: hexAToHSLA
    code: "function hexAToHSLA(H) {\r

      \  let ex = /^#([\\da-f]{4}){1,2}$/i;\r

      \  if (ex.test(H)) {\r

      \    let r = 0,\r

      \      g = 0,\r

      \      b = 0,\r

      \      a = 1;\r

      \    if (H.length == 5) {\r

      \      r = '0x' + H[1] + H[1];\r

      \      g = '0x' + H[2] + H[2];\r

      \      b = '0x' + H[3] + H[3];\r

      \      a = '0x' + H[4] + H[4];\r

      \    } else if (H.length == 9) {\r

      \      r = '0x' + H[1] + H[2];\r

      \      g = '0x' + H[3] + H[4];\r

      \      b = '0x' + H[5] + H[6];\r

      \      a = '0x' + H[7] + H[8];\r

      \    }\r

      \    r /= 255;\r

      \    g /= 255;\r

      \    b /= 255;\r

      \    let cmin = Math.min(r, g, b),\r

      \      cmax = Math.max(r, g, b),\r

      \      delta = cmax - cmin,\r

      \      h = 0,\r

      \      s = 0,\r

      \      l = 0;\r

      \    if (delta == 0) h = 0;\r

      \    else if (cmax == r) h = ((g - b) / delta) % 6;\r

      \    else if (cmax == g) h = (b - r) / delta + 2;\r

      \    else h = (r - g) / delta + 4;\r

      \    h = Math.round(h * 60);\r

      \    if (h < 0) h += 360;\r

      \    l = (cmax + cmin) / 2;\r

      \    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r

      \    s = +(s * 100).toFixed(1);\r

      \    l = +(l * 100).toFixed(1);\r

      \    a = (a / 255).toFixed(3);\r

      \    return 'hsla(' + h + ',' + s + '%,' + l + '%,' + a + ')';\r

      \  } else {\r

      \    return 'Invalid input color';\r

      \  }\r

      }\r\n"
    sig: function hexAToHSLA(H){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  HSLToRGB:
    name: HSLToRGB
    code: "function HSLToRGB(hsl, isPct) {\r

      \  let ex =
      /^hsl\\(((((([12]?[1-9]?\\d)|[12]0\\d|(3[0-5]\\d))(\\.\\d+)?)|(\\.\\d+))(\
      deg)?|(0|0?\\.\\d+)turn|(([0-6](\\.\\d+)?)|(\\.\\d+))rad)((,\\s?(([1-9]?\
      \\d(\\.\\d+)?)|100|(\\.\\d+))%){2}|(\\s(([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d\
      +))%){2})\\)$/i;\r

      \  if (ex.test(hsl)) {\r

      \    let sep = hsl.indexOf(',') > -1 ? ',' : ' ';\r

      \    hsl = hsl\r

      \      .substr(4)\r

      \      .split(')')[0]\r

      \      .split(sep);\r

      \    isPct = isPct === true;\r

      \    let h = hsl[0],\r

      \      s = hsl[1].substr(0, hsl[1].length - 1) / 100,\r

      \      l = hsl[2].substr(0, hsl[2].length - 1) / 100;\r

      \    if (h.indexOf('deg') > -1) h = h.substr(0, h.length - 3);\r

      \    else if (h.indexOf('rad') > -1) h = Math.round((h.substr(0,
      h.length - 3) / (2 * Math.PI)) * 360);\r

      \    else if (h.indexOf('turn') > -1) h = Math.round(h.substr(0,
      h.length - 4) * 360);\r

      \    if (h >= 360) h %= 360;\r

      \    let c = (1 - Math.abs(2 * l - 1)) * s,\r

      \      x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\r

      \      m = l - c / 2,\r

      \      r = 0,\r

      \      g = 0,\r

      \      b = 0;\r

      \    if (0 <= h && h < 60) {\r

      \      r = c;\r

      \      g = x;\r

      \      b = 0;\r

      \    } else if (60 <= h && h < 120) {\r

      \      r = x;\r

      \      g = c;\r

      \      b = 0;\r

      \    } else if (120 <= h && h < 180) {\r

      \      r = 0;\r

      \      g = c;\r

      \      b = x;\r

      \    } else if (180 <= h && h < 240) {\r

      \      r = 0;\r

      \      g = x;\r

      \      b = c;\r

      \    } else if (240 <= h && h < 300) {\r

      \      r = x;\r

      \      g = 0;\r

      \      b = c;\r

      \    } else if (300 <= h && h < 360) {\r

      \      r = c;\r

      \      g = 0;\r

      \      b = x;\r

      \    }\r

      \    r = Math.round((r + m) * 255);\r

      \    g = Math.round((g + m) * 255);\r

      \    b = Math.round((b + m) * 255);\r

      \    if (isPct) {\r

      \      r = +((r / 255) * 100).toFixed(1);\r

      \      g = +((g / 255) * 100).toFixed(1);\r

      \      b = +((b / 255) * 100).toFixed(1);\r

      \    }\r

      \    return 'rgb(' + (isPct ? r + '%,' + g + '%,' + b + '%' : +r +
      ',' + +g + ',' + +b) + ')';\r

      \  } else {\r

      \    return 'Invalid input color';\r

      \  }\r

      }\r\n"
    sig: function HSLToRGB(hsl, isPct){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  HSLAToRGBA:
    name: HSLAToRGBA
    code: "function HSLAToRGBA(hsla, isPct) {\r

      \  let ex =
      /^hsla\\(((((([12]?[1-9]?\\d)|[12]0\\d|(3[0-5]\\d))(\\.\\d+)?)|(\\.\\d+))\
      (deg)?|(0|0?\\.\\d+)turn|(([0-6](\\.\\d+)?)|(\\.\\d+))rad)(((,\\s?(([1-9]?\
      \\d(\\.\\d+)?)|100|(\\.\\d+))%){2},\\s?)|((\\s(([1-9]?\\d(\\.\\d+)?)|100|(\
      \\.\\d+))%){2}\\s\\/\\s))((0?\\.\\d+)|[01]|(([1-9]?\\d(\\.\\d+)?)|100|(\\.\
      \\d+))%)\\)$/i;\r

      \  if (ex.test(hsla)) {\r

      \    let sep = hsla.indexOf(',') > -1 ? ',' : ' ';\r

      \    hsla = hsla\r

      \      .substr(5)\r

      \      .split(')')[0]\r

      \      .split(sep);\r

      \    if (hsla.indexOf('/') > -1) hsla.splice(3, 1);\r

      \    isPct = isPct === true;\r

      \    let h = hsla[0],\r

      \      s = hsla[1].substr(0, hsla[1].length - 1) / 100,\r

      \      l = hsla[2].substr(0, hsla[2].length - 1) / 100,\r

      \      a = hsla[3];\r

      \    if (h.indexOf('deg') > -1) h = h.substr(0, h.length - 3);\r

      \    else if (h.indexOf('rad') > -1) h = Math.round((h.substr(0,
      h.length - 3) / (2 * Math.PI)) * 360);\r

      \    else if (h.indexOf('turn') > -1) h = Math.round(h.substr(0,
      h.length - 4) * 360);\r

      \    if (h >= 360) h %= 360;\r

      \    let c = (1 - Math.abs(2 * l - 1)) * s,\r

      \      x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\r

      \      m = l - c / 2,\r

      \      r = 0,\r

      \      g = 0,\r

      \      b = 0;\r

      \    if (0 <= h && h < 60) {\r

      \      r = c;\r

      \      g = x;\r

      \      b = 0;\r

      \    } else if (60 <= h && h < 120) {\r

      \      r = x;\r

      \      g = c;\r

      \      b = 0;\r

      \    } else if (120 <= h && h < 180) {\r

      \      r = 0;\r

      \      g = c;\r

      \      b = x;\r

      \    } else if (180 <= h && h < 240) {\r

      \      r = 0;\r

      \      g = x;\r

      \      b = c;\r

      \    } else if (240 <= h && h < 300) {\r

      \      r = x;\r

      \      g = 0;\r

      \      b = c;\r

      \    } else if (300 <= h && h < 360) {\r

      \      r = c;\r

      \      g = 0;\r

      \      b = x;\r

      \    }\r

      \    r = Math.round((r + m) * 255);\r

      \    g = Math.round((g + m) * 255);\r

      \    b = Math.round((b + m) * 255);\r

      \    let pctFound = a.indexOf('%') > -1;\r

      \    if (isPct) {\r

      \      r = +((r / 255) * 100).toFixed(1);\r

      \      g = +((g / 255) * 100).toFixed(1);\r

      \      b = +((b / 255) * 100).toFixed(1);\r

      \      if (!pctFound) {\r

      \        a *= 100;\r

      \      } else {\r

      \        a = a.substr(0, a.length - 1);\r

      \      }\r

      \    } else if (pctFound) {\r

      \      a = a.substr(0, a.length - 1) / 100;\r

      \    }\r

      \    return 'rgba(' + (isPct ? r + '%,' + g + '%,' + b + '%,' + a +
      '%' : +r + ',' + +g + ',' + +b + ',' + +a) + ')';\r

      \  } else {\r

      \    return 'Invalid input color';\r

      \  }\r

      }\r\n"
    sig: function HSLAToRGBA(hsla, isPct){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  RGBToHex7:
    name: RGBToHex7
    code: "function RGBToHex7(c) {\r

      \  let n = allNumbers(c);\r

      \  if (c.includes('%')) {\r

      \    n[0] = Math.round((n[0] * 255) / 100);\r

      \    n[1] = Math.round((n[1] * 255) / 100);\r

      \    n[2] = Math.round((n[2] * 255) / 100);\r

      \  }\r

      \  return '#' + ((1 << 24) + (n[0] << 16) + (n[1] << 8) +
      n[2]).toString(16).slice(1);\r

      }\r\n"
    sig: function RGBToHex7(c){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rgbToHex:
    name: rgbToHex
    code: "function rgbToHex(rgbStr) { return rgbStr && '#' + rgbStr.slice(4,
      -1).split(',').map(x => (+x).toString(16).padStart(2, '0')).join('');
      }\r\n"
    sig: function rgbToHex(rgbStr){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  RGBAToHex9:
    name: RGBAToHex9
    code: "function RGBAToHex9(rgba) {\r

      \  let n = allNumbers(rgba);\r

      \  if (n.length < 3) {\r

      \    return randomHexColor();\r

      \  }\r

      \  let a = n.length > 3 ? n[3] : 1;\r

      \  let sa = alphaToHex(a);\r

      \  if (rgba.includes('%')) {\r

      \    n[0] = Math.round((n[0] * 255) / 100);\r

      \    n[1] = Math.round((n[1] * 255) / 100);\r

      \    n[2] = Math.round((n[2] * 255) / 100);\r

      \  }\r

      \  return '#' + ((1 << 24) + (n[0] << 16) + (n[1] << 8) +
      n[2]).toString(16).slice(1) + sa;\r

      }\r\n"
    sig: function RGBAToHex9(rgba){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  RGBToHSL:
    name: RGBToHSL
    code: "function RGBToHSL(rgb) {\r

      \  let ex =
      /^rgb\\((((((((1?[1-9]?\\d)|10\\d|(2[0-4]\\d)|25[0-5]),\\s?)){2}|((((1?[1\
      -9]?\\d)|10\\d|(2[0-4]\\d)|25[0-5])\\s)){2})((1?[1-9]?\\d)|10\\d|(2[0-4]\
      \\d)|25[0-5]))|((((([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%,\\s?){2}|((([1-9\
      ]?\\d(\\.\\d+)?)|100|(\\.\\d+))%\\s){2})(([1-9]?\\d(\\.\\d+)?)|100|(\\.\\\
      d+))%))\\)$/i;\r

      \  if (ex.test(rgb)) {\r

      \    let sep = rgb.indexOf(',') > -1 ? ',' : ' ';\r

      \    rgb = rgb\r

      \      .substr(4)\r

      \      .split(')')[0]\r

      \      .split(sep);\r

      \    for (let R in rgb) {\r

      \      let r = rgb[R];\r

      \      if (r.indexOf('%') > -1) rgb[R] = Math.round((r.substr(0,
      r.length - 1) / 100) * 255);\r

      \    }\r

      \    let r = rgb[0] / 255,\r

      \      g = rgb[1] / 255,\r

      \      b = rgb[2] / 255,\r

      \      cmin = Math.min(r, g, b),\r

      \      cmax = Math.max(r, g, b),\r

      \      delta = cmax - cmin,\r

      \      h = 0,\r

      \      s = 0,\r

      \      l = 0;\r

      \    if (delta == 0) h = 0;\r

      \    else if (cmax == r) h = ((g - b) / delta) % 6;\r

      \    else if (cmax == g) h = (b - r) / delta + 2;\r

      \    else h = (r - g) / delta + 4;\r

      \    h = Math.round(h * 60);\r

      \    if (h < 0) h += 360;\r

      \    l = (cmax + cmin) / 2;\r

      \    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r

      \    s = +(s * 100).toFixed(1);\r

      \    l = +(l * 100).toFixed(1);\r

      \    return 'hsl(' + h + ',' + s + '%,' + l + '%)';\r

      \  } else {\r

      \    return 'Invalid input color';\r

      \  }\r

      }\r\n"
    sig: function RGBToHSL(rgb){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  RGBAToHSLA:
    name: RGBAToHSLA
    code: "function RGBAToHSLA(rgba) {\r

      \  let ex =
      /^rgba\\((((((((1?[1-9]?\\d)|10\\d|(2[0-4]\\d)|25[0-5]),\\s?)){3})|(((([1\
      -9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%,\\s?){3}))|(((((1?[1-9]?\\d)|10\\d|(2[\
      0-4]\\d)|25[0-5])\\s){3})|(((([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%\\s){3}\
      ))\\/\\s)((0?\\.\\d+)|[01]|(([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%)\\)$/i;\
      \r

      \  if (ex.test(rgba)) {\r

      \    let sep = rgba.indexOf(',') > -1 ? ',' : ' ';\r

      \    rgba = rgba\r

      \      .substr(5)\r

      \      .split(')')[0]\r

      \      .split(sep);\r

      \    if (rgba.indexOf('/') > -1) rgba.splice(3, 1);\r

      \    for (let R in rgba) {\r

      \      let r = rgba[R];\r

      \      if (r.indexOf('%') > -1) {\r

      \        let p = r.substr(0, r.length - 1) / 100;\r

      \        if (R < 3) {\r

      \          rgba[R] = Math.round(p * 255);\r

      \        }\r

      \      }\r

      \    }\r

      \    let r = rgba[0] / 255,\r

      \      g = rgba[1] / 255,\r

      \      b = rgba[2] / 255,\r

      \      a = rgba[3],\r

      \      cmin = Math.min(r, g, b),\r

      \      cmax = Math.max(r, g, b),\r

      \      delta = cmax - cmin,\r

      \      h = 0,\r

      \      s = 0,\r

      \      l = 0;\r

      \    if (delta == 0) h = 0;\r

      \    else if (cmax == r) h = ((g - b) / delta) % 6;\r

      \    else if (cmax == g) h = (b - r) / delta + 2;\r

      \    else h = (r - g) / delta + 4;\r

      \    h = Math.round(h * 60);\r

      \    if (h < 0) h += 360;\r

      \    l = (cmax + cmin) / 2;\r

      \    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r

      \    s = +(s * 100).toFixed(1);\r

      \    l = +(l * 100).toFixed(1);\r

      \    return 'hsla(' + h + ',' + s + '%,' + l + '%,' + a + ')';\r

      \  } else {\r

      \    return 'Invalid input color';\r

      \  }\r

      }\r\n"
    sig: function RGBAToHSLA(rgba){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ajaxSimple:
    name: ajaxSimple
    code: "function ajaxSimple(method, url, callback) {\r

      \  var ajax = new XMLHttpRequest();\r

      \  ajax.onload = () => {\r

      \    if (ajax.status == 200 || ajax.readyState == 4) {\r

      \      if (isdef(callback)) callback(ajax);\r

      \    }\r

      \  }\r

      \  ajax.open(method, url, true); \r

      \  ajax.send();\r

      }\r\n"
    sig: function ajaxSimple(method, url, callback){}
    region: ajax (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  realTimeIfTrue:
    name: realTimeIfTrue
    code: "function realTimeIfTrue(f, cnt) {\r

      \  console.log('counter', cnt)\r

      \  if (f()) setTimeout(() => realtimeIfTrue(f, cnt + 1), 10);\r

      }\r\n"
    sig: function realTimeIfTrue(f, cnt){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  safeLoop:
    name: safeLoop
    code: "function safeLoop(func, params) {\r

      \  let max = 100, i = 0;\r

      \  while (i < max) {\r

      \    i += 1;\r

      \    let res = func(...params);\r

      \    if (isdef(res)) return res;\r

      \  }\r

      \  console.log('safeLoop: max reached!!!!!!!!!');\r

      \  return null;\r

      }\r\n"
    sig: function safeLoop(func, params){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  sleepX:
    name: sleepX
    code: "function sleepX(msecs) {\r

      \  //#region doc \r

      \  /*  \r\n"
    sig: function sleepX(msecs){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  onkeyupHandler:
    name: onkeyupHandler
    code: "function onkeyupHandler(ev) {\r

      \  if (nundef(DA.keyup)) DA.keyup = {};\r

      \  for (const k in DA.keyup) {\r

      \    DA.keyup[k](ev);\r

      \  }\r

      }\r\n"
    sig: function onkeyupHandler(ev){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  onkeydownHandler:
    name: onkeydownHandler
    code: "function onkeydownHandler(ev) {\r

      \  if (nundef(DA.keydown)) DA.keydown = {}; for (const k in
      DA.keydown) { DA.keydown[k](ev); }\r

      }\r\n"
    sig: function onkeydownHandler(ev){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  addKeyup:
    name: addKeyup
    code: "function addKeyup(k, f) {\r

      \  if (nundef(DA.keyup)) DA.keyup = {};\r

      \  DA.keyup[k] = f;\r

      }\r\n"
    sig: function addKeyup(k, f){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  addKeydown:
    name: addKeydown
    code: "function addKeydown(k, f) { if (nundef(DA.keydown)) DA.keydown = {};
      DA.keydown[k] = f; }\r\n"
    sig: function addKeydown(k, f){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  removeKeyHandler:
    name: removeKeyHandler
    code: "function removeKeyHandler(k) {\r

      \  let f = lookup(DA, ['keyup', k]);\r

      \  if (lookup(DA, ['keyup', k])) {\r

      \    delete DA.keyup[k];\r

      \  }\r

      \  if (lookup(DA, ['keydown', k])) {\r

      \    delete DA.keydown[k];\r

      \  }\r

      }\r\n"
    sig: function removeKeyHandler(k){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  init_keyhandlers:
    name: init_keyhandlers
    code: "function init_keyhandlers() {\r

      \  onkeyup = onkeyupHandler;\r

      }\r\n"
    sig: function init_keyhandlers(){}
    region: control (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  addDDSource:
    name: addDDSource
    code: "function addDDSource(source, isCopy = true, clearTarget = false) {\r

      \  DDInfo.sources.push(source);\r

      \  let d = iDiv(source);\r

      \  d.onmousedown = (ev) => ddStart(ev, source, isCopy,
      clearTarget);\r

      }\r\n"
    sig: function addDDSource(source, isCopy = true, clearTarget = false){}
    region: drag (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  addDDTarget:
    name: addDDTarget
    code: "function addDDTarget(target, isCopy = true, clearTarget = false) {\r

      \  DDInfo.targets.push(target);\r

      \  target.isCopy = isCopy;\r

      \  target.clearTarget = clearTarget;\r

      }\r\n"
    sig: function addDDTarget(target, isCopy = true, clearTarget = false){}
    region: drag (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  enableDD:
    name: enableDD
    code: "function enableDD(sources, targets, dropHandler, isCopy, clearTarget,
      dragStartHandler) {\r

      \  DDInfo = { sources: sources, targets: targets, dropHandler:
      dropHandler, dragStartHandler };\r

      \  let sourceDivs = sources.map(x => iDiv(x));\r

      \  for (let i = 0; i < sources.length; i++) {\r

      \    let source = sources[i];\r

      \    let d = sourceDivs[i];\r

      \    d.onmousedown = (ev) => ddStart(ev, source, isCopy,
      clearTarget);\r

      \  }\r

      }\r\n"
    sig: function enableDD(sources, targets, dropHandler, isCopy, clearTarget,
      dragStartHandler){}
    region: drag (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  ddStart:
    name: ddStart
    code: "function ddStart(ev, source, isCopy = true, clearTarget = false) {\r

      \  if (!canAct() || isdef(DDInfo.dragStartHandler) &&
      !DDInfo.dragStartHandler(source)) return;\r

      \  ev.preventDefault();\r

      \  ev.stopPropagation();\r

      \  DDInfo.source = source;\r

      \  let d = iDiv(source);\r

      \  var clone = DragElem = DDInfo.clone = d.cloneNode(true);\r

      \  clone.isCopy = isCopy;\r

      \  clone.clearTarget = clearTarget;\r

      \  mAppend(document.body, clone);\r

      \  mClass(clone, 'dragelem');\r

      \  mStyle(clone, { left: ev.clientX - ev.offsetX, top: ev.clientY -
      ev.offsetY });\r

      \  DDInfo.dragOffset = clone.drag = { offsetX: ev.offsetX, offsetY:
      ev.offsetY };\r

      \  document.body.onmousemove = onMovingCloneAround;\r

      \  document.body.onmouseup = onReleaseClone;\r

      }\r\n"
    sig: function ddStart(ev, source, isCopy = true, clearTarget = false){}
    region: drag (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  onReleaseClone:
    name: onReleaseClone
    code: "function onReleaseClone(ev) {\r

      \  let els = allElementsFromPoint(ev.clientX, ev.clientY);\r

      \  let source = DDInfo.source;\r

      \  let dSource = iDiv(source);\r

      \  let dropHandler = DDInfo.dropHandler;\r

      \  for (const target of DDInfo.targets) {\r

      \    let dTarget = iDiv(target);\r

      \    if (els.includes(dTarget)) {\r

      \      if (isdef(dropHandler)) {\r

      \        let cDrop = { x: ev.clientX, y: ev.clientY };\r

      \        let rTarget = getRect(dTarget);\r

      \        let cTarget = { x: rTarget.x + rTarget.w / 2, y: rTarget.y
      + rTarget.h / 2 };\r

      \        let [dx, dy] = [cDrop.x - cTarget.x, cDrop.y -
      cTarget.y];\r

      \        let [ddx, ddy] = [DragElem.drag.offsetX,
      DragElem.drag.offsetY];\r

      \        dropHandler(source, target, DragElem.isCopy,
      DragElem.clearTarget, dx, dy, ev, DragElem);\r

      \      }\r

      \      break; \r

      \    }\r

      \  }\r

      \  DragElem.remove();\r

      \  DragElem = null;\r

      \  document.body.onmousemove = document.body.onmouseup = null;\r

      }\r\n"
    sig: function onReleaseClone(ev){}
    region: drag (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  fireClick:
    name: fireClick
    code: "function fireClick(elem) {\r

      \  const evt = new Event(\"click\", { \"bubbles\": true,
      \"cancelable\": false });\r

      \  elem.dispatchEvent(evt);\r

      }\r\n"
    sig: function fireClick(elem){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fireWheel:
    name: fireWheel
    code: "function fireWheel(node) {\r

      \  if (document.createEvent) {\r

      \    var evt = document.createEvent('MouseEvents');\r

      \    evt.initEvent('wheel', true, false);\r

      \    console.log('fireClick: createEvent and node.dispatchEvent
      exist!!!', node)\r

      \    node.dispatchEvent(evt);\r

      \  } else if (document.createEventObject) {\r

      \    console.log('fireClick: createEventObject and node.fireEvent
      exist!!!', node)\r

      \    node.fireEvent('onclick');\r

      \  } else if (typeof node.onclick == 'function') {\r

      \    console.log('fireClick: node.onclick exists!!!', node)\r

      \    node.onclick();\r

      \  }\r

      }\r\n"
    sig: function fireWheel(node){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fireKey:
    name: fireKey
    code: "function fireKey(k, { control, alt, shift } = {}) {\r

      \  console.log('fireKey called!' + document.createEvent)\r

      \  if (document.createEvent) {\r

      \    console.log('fireKey: createEvent and node.dispatchEvent
      exist!!!', k, control, alt, shift);\r

      \    window.dispatchEvent(new KeyboardEvent('keypress', { key: '+',
      ctrlKey: true }));\r

      \  } else if (document.createEventObject) {\r

      \    console.log('fireClick: createEventObject and node.fireEvent
      exist!!!', node)\r

      \    node.fireEvent('onclick');\r

      \  } else if (typeof node.onclick == 'function') {\r

      \    console.log('fireClick: node.onclick exists!!!', node)\r

      \    node.onclick();\r

      \  }\r

      }\r\n"
    sig: function fireKey(k, { control, alt, shift } = {}){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  downloadTextFile:
    name: downloadTextFile
    code: "function downloadTextFile(s, filenameNoExt, ext = 'txt') {\r

      \  saveFileAtClient(\r

      \    filenameNoExt + \".\" + ext,\r

      \    \"data:application/text\",\r

      \    new Blob([s], { type: \"\" }));\r

      }\r\n"
    sig: function downloadTextFile(s, filenameNoExt, ext = 'txt'){}
    region: file (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  saveFileAtClient:
    name: saveFileAtClient
    code: "function saveFileAtClient(name, type, data) {\r

      \  if (data != null && navigator.msSaveBlob) return
      navigator.msSaveBlob(new Blob([data], { type: type }), name);\r

      \  let a = document.createElement('a');\r

      \  a.style.display = 'none';\r

      \  let url = window.URL.createObjectURL(new Blob([data], { type:
      type }));\r

      \  a.href = url;\r

      \  a.download = name;\r

      \  document.body.appendChild(a);\r

      \  simulateClick(a);\r

      \  setTimeout(function () {\r

      \    window.URL.revokeObjectURL(url);\r

      \    a.remove();\r

      \  }, 500);\r

      }\r\n"
    sig: function saveFileAtClient(name, type, data){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  downloadAsText:
    name: downloadAsText
    code: "function downloadAsText(s, filename, ext = 'txt') {\r

      \  saveFileAtClient(\r

      \    filename + \".\" + ext,\r

      \    \"data:application/text\",\r

      \    new Blob([s], { type: \"\" }));\r

      }\r\n"
    sig: function downloadAsText(s, filename, ext = 'txt'){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  downloadAsYaml:
    name: downloadAsYaml
    code: "function downloadAsYaml(o, filename) {\r

      \  let y = jsyaml.dump(o);\r

      \  downloadAsText(y, filename, 'yaml');\r

      }\r\n"
    sig: function downloadAsYaml(o, filename){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  jsonToYaml:
    name: jsonToYaml
    code: "function jsonToYaml(o) { let y = jsyaml.dump(o); return y; }\r\n"
    sig: function jsonToYaml(o){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  previewImageFromUrl:
    name: previewImageFromUrl
    code: "function previewImageFromUrl(url, img) {\r

      \  img.onerror = function () {\r

      \    alert(\"Error in uploading\");\r

      \  }\r

      \  img.crossOrigin = \"\"; \r

      \  img.src = url;\r

      }\r\n"
    sig: function previewImageFromUrl(url, img){}
    region: file (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  previewImageFromFile:
    name: previewImageFromFile
    code: "function previewImageFromFile(imgFile, img) {\r

      \  var reader = new FileReader();\r

      \  reader.onload = function (e) {\r

      \    img.src = e.target.result;\r

      \    imgFile.data = e.target.result; \r

      \  }\r

      \  reader.readAsDataURL(imgFile);\r

      }\r\n"
    sig: function previewImageFromFile(imgFile, img){}
    region: file (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  csv2list:
    name: csv2list
    code: "function csv2list(allText, hasHeadings = true) {\r

      \  var numHeadings = 11;\r

      \  var allTextLines = allText.split(/\\r\\n|\\n/);\r

      \  var headings = allTextLines[0].split(',');\r

      \  numHeadings = headings.length;\r

      \  let entries = allTextLines.splice(1);\r

      \  var records = [];\r

      \  for (const e of entries) {\r

      \    let o = {};\r

      \    let values = e.split(',');\r

      \    for (let i = 0; i < numHeadings; i++) {\r

      \      let k = headings[i];\r

      \      o[k] = values[i];\r

      \    }\r

      \    records.push(o);\r

      \  }\r

      \  return records;\r

      }\r\n"
    sig: function csv2list(allText, hasHeadings = true){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  processCsvData_from_CBII:
    name: processCsvData_from_CBII
    code: "function processCsvData_from_CBII(allText) {\r

      \  var numHeadings = 5;  \r

      \  var allTextLines = allText.split(/\\r\\n|\\n/);\r

      \  var headings = allTextLines[0].split(',');\r

      \  numHeadings = headings.length;\r

      \  let entries = allTextLines.splice(1);\r

      \  var records = { headings: headings };\r

      \  var recordsByName = {};\r

      \  for (const e of entries) {\r

      \    let o = {};\r

      \    let values = e.split(',');\r

      \    for (let i = 0; i < numHeadings; i++) {\r

      \      let k = headings[i];\r

      \      o[k] = values[i];\r

      \    }\r

      \    records[o.hexcode] = o;\r

      \    recordsByName[o.annotation] = o.hexcode;\r

      \  }\r

      \  return { records: records, recordsByName: recordsByName };\r

      }\r\n"
    sig: function processCsvData_from_CBII(allText){}
    region: file (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getFunctionCallerName:
    name: getFunctionCallerName
    code: "function getFunctionCallerName() {\r

      \  return new Error().stack.match(/at (\\S+)/g)[1].slice(3);\r

      }\r\n"
    sig: function getFunctionCallerName(){}
    region: funcs (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getFunctionsNameThatCalledThisFunction:
    name: getFunctionsNameThatCalledThisFunction
    code: "function getFunctionsNameThatCalledThisFunction() {\r

      \  let c1 = getFunctionsNameThatCalledThisFunction.caller;\r

      \  if (nundef(c1)) return 'no caller!';\r

      \  let c2 = c1.caller;\r

      \  if (nundef(c2)) return 'no caller!';\r

      \  return c2.name;\r

      }\r\n"
    sig: function getFunctionsNameThatCalledThisFunction(){}
    region: funcs (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  dSquare:
    name: dSquare
    code: "function dSquare(pos1, pos2) {\r

      \  let dx = pos1.x - pos2.x;\r

      \  dx *= dx;\r

      \  let dy = pos1.y - pos2.y;\r

      \  dy *= dy;\r

      \  return dx + dy;\r

      }\r\n"
    sig: function dSquare(pos1, pos2){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  distance:
    name: distance
    code: "function distance(x1, y1, x2, y2) { return Math.sqrt(dSquare({ x: x1, y:
      y1 }, { x: x2, y: y2 })); }\r\n"
    sig: function distance(x1, y1, x2, y2){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isCloseTo:
    name: isCloseTo
    code: "function isCloseTo(n, m, acc = 10) { return Math.abs(n - m) <= acc + 1;
      }\r\n"
    sig: function isCloseTo(n, m, acc = 10){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getCirclePoints:
    name: getCirclePoints
    code: "function getCirclePoints(rad, n, disp = 0) {\r

      \  let pts = [];\r

      \  let i = 0;\r

      \  let da = 360 / n;\r

      \  let angle = disp;\r

      \  while (i < n) {\r

      \    let px = rad * Math.cos(toRadian(angle));\r

      \    let py = rad * Math.sin(toRadian(angle));\r

      \    pts.push({ X: px, Y: py });\r

      \    angle += da;\r

      \    i++;\r

      \  }\r

      \  return pts;\r

      }\r\n"
    sig: function getCirclePoints(rad, n, disp = 0){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getEllipsePoints:
    name: getEllipsePoints
    code: "function getEllipsePoints(radx, rady, n, disp = 0) {\r

      \  let pts = [];\r

      \  let i = 0;\r

      \  let da = 360 / n;\r

      \  let angle = disp;\r

      \  while (i < n) {\r

      \    let px = radx * Math.cos(toRadian(angle));\r

      \    let py = rady * Math.sin(toRadian(angle));\r

      \    pts.push({ X: px, Y: py });\r

      \    angle += da;\r

      \    i++;\r

      \  }\r

      \  return pts;\r

      }\r\n"
    sig: function getEllipsePoints(radx, rady, n, disp = 0){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getPoly:
    name: getPoly
    code: "function getPoly(offsets, x, y, w, h) {\r

      \  let poly = [];\r

      \  for (let p of offsets) {\r

      \    let px = Math.round(x + p[0] * w);\r

      \    let py = Math.round(y + p[1] * h);\r

      \    poly.push({ x: px, y: py });\r

      \  }\r

      \  return poly;\r

      }\r\n"
    sig: function getPoly(offsets, x, y, w, h){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getHexPoly:
    name: getHexPoly
    code: "function getHexPoly(x, y, w, h) {\r

      \  let hex = [[0, -0.5], [0.5, -0.25], [0.5, 0.25], [0, 0.5], [-0.5,
      0.25], [-0.5, -0.25]];\r

      \  return getPoly(hex, x, y, w, h);\r

      }\r\n"
    sig: function getHexPoly(x, y, w, h){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getQuadPoly:
    name: getQuadPoly
    code: "function getQuadPoly(x, y, w, h) {\r

      \  q = [[0.5, -0.5], [0.5, 0.5], [-0.5, 0.5], [-0.5, -0.5]];\r

      \  return getPoly(q, x, y, w, h);\r

      }\r\n"
    sig: function getQuadPoly(x, y, w, h){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getTriangleUpPoly:
    name: getTriangleUpPoly
    code: "function getTriangleUpPoly(x, y, w, h) {\r

      \  let triup = [[0, -0.5], [0.5, 0.5], [-0.5, 0.5]];\r

      \  return getPoly(triup, x, y, w, h);\r

      }\r\n"
    sig: function getTriangleUpPoly(x, y, w, h){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getTriangleDownPoly:
    name: getTriangleDownPoly
    code: "function getTriangleDownPoly(x, y, w, h) {\r

      \  let tridown = [[-0.5, 0.5], [0.5, 0.5], [-0.5, 0.5]];\r

      \  return getPoly(tridown, x, y, w, h);\r

      }\r\n"
    sig: function getTriangleDownPoly(x, y, w, h){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  polyPointsFrom:
    name: polyPointsFrom
    code: "function polyPointsFrom(w, h, x, y, pointArr) {\r

      \  x -= w / 2;\r

      \  y -= h / 2;\r

      \  let pts = pointArr.map(p => [p.X * w + x, p.Y * h + y]);\r

      \  let newpts = [];\r

      \  for (const p of pts) {\r

      \    newp = { X: p[0], Y: Math.round(p[1]) };\r

      \    newpts.push(newp);\r

      \  }\r

      \  pts = newpts;\r

      \  let sPoints = pts.map(p => '' + p.X + ',' + p.Y).join(' ');
      //'0,0 100,0 50,80',\r

      \  return sPoints;\r

      }\r\n"
    sig: function polyPointsFrom(w, h, x, y, pointArr){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  size2hex:
    name: size2hex
    code: "function size2hex(w = 100, h = 0, x = 0, y = 0) {\r

      \  let hexPoints = [{ X: 0.5, Y: 0 }, { X: 1, Y: 0.25 }, { X: 1, Y:
      0.75 }, { X: 0.5, Y: 1 }, { X: 0, Y: 0.75 }, { X: 0, Y: 0.25 }];\r

      \  if (h == 0) {\r

      \    h = (2 * w) / 1.73;\r

      \  }\r

      \  return polyPointsFrom(w, h, x, y, hexPoints);\r

      }\r\n"
    sig: function size2hex(w = 100, h = 0, x = 0, y = 0){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  size2triup:
    name: size2triup
    code: "function size2triup(w = 100, h = 0, x = 0, y = 0) {\r

      \  let triPoints = [{ X: 0.5, Y: 0 }, { X: 1, Y: 1 }, { X: 0, Y: 1
      }];\r

      \  if (h == 0) { h = w; }\r

      \  return polyPointsFrom(w, h, x, y, triPoints);\r

      }\r\n"
    sig: function size2triup(w = 100, h = 0, x = 0, y = 0){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  size2tridown:
    name: size2tridown
    code: "function size2tridown(w = 100, h = 0, x = 0, y = 0) {\r

      \  let triPoints = [{ X: 1, Y: 0 }, { X: 0.5, Y: 1 }, { X: 0, Y: 0
      }];\r

      \  if (h == 0) { h = w; }\r

      \  return polyPointsFrom(w, h, x, y, triPoints);\r

      }\r\n"
    sig: function size2tridown(w = 100, h = 0, x = 0, y = 0){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toRadian:
    name: toRadian
    code: "function toRadian(deg) { return deg * (Math.PI / 180); }\r\n"
    sig: function toRadian(deg){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  postData:
    name: postData
    code: "async function postData(url = '', data = {}) {\r

      \  // postData('https://example.com/answer', { answer: 42 })\r

      \  const response = await fetch(url, {\r

      \    method: 'POST', \r

      \    mode: 'cors', \r

      \    cache: 'no-cache', \r

      \    credentials: 'omit', \r

      \    headers: {\r

      \      'Content-Type': 'application/json'\r

      \    },\r

      \    redirect: 'follow', \r

      \    referrerPolicy: 'no-referrer', \r

      \    body: JSON.stringify(data) \r

      \  });\r

      \  return await response.text(); //'hallo';// response.json(); //
      parses JSON response into native JavaScript objects\r

      }\r\n"
    sig: async function postData(url = '', data = {}){}
    region: Example (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  fetch_wrapper:
    name: fetch_wrapper
    code: "async function fetch_wrapper(url) { return await fetch(url); }\r\n"
    sig: async function fetch_wrapper(url){}
    region: Example (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  route_path_yaml_dict:
    name: route_path_yaml_dict
    code: "async function route_path_yaml_dict(url) {\r

      \  let data = await fetch(url);\r

      \  let text = await data.text();\r

      \  let dict = jsyaml.load(text);\r

      \  return dict;\r

      }\r\n"
    sig: async function route_path_yaml_dict(url){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  route_path_json_dict:
    name: route_path_json_dict
    code: "async function route_path_json_dict(url) {\r

      \  let data = await fetch_wrapper(url);\r

      \  let json = await data.json();\r

      \  return json;\r

      }\r\n"
    sig: async function route_path_json_dict(url){}
    region: Example (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  route_path_text:
    name: route_path_text
    code: "async function route_path_text(url) {\r

      \  let data = await fetch(url);\r

      \  let text = await data.text();\r

      \  return text;\r

      }\r\n"
    sig: async function route_path_text(url){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  localOrRoute:
    name: localOrRoute
    code: "async function localOrRoute(key, url) {\r

      \  if (USE_LOCAL_STORAGE) {\r

      \    let x = localStorage.getItem(key);\r

      \    if (isdef(x)) return JSON.parse(x);\r

      \    else {\r

      \      let data = await route_path_yaml_dict(url);\r

      \      if (key != 'svgDict') localStorage.setItem(key,
      JSON.stringify(data));\r

      \      return data;\r

      \    }\r

      \  } else return await route_path_yaml_dict(url);\r

      }\r\n"
    sig: async function localOrRoute(key, url){}
    region: Example (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getCenter:
    name: getCenter
    code: "function getCenter(elem) { let r = isdef(elem.x) ? elem : getRect(elem);
      return { x: (r.w) / 2, y: (r.h) / 2 }; }\r\n"
    sig: function getCenter(elem){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getRectInt:
    name: getRectInt
    code: "function getRectInt(elem, relto) {\r

      \  if (isString(elem)) elem = document.getElementById(elem);\r

      \  let res = elem.getBoundingClientRect();\r

      \  if (isdef(relto)) {\r

      \    let b2 = relto.getBoundingClientRect();\r

      \    let b1 = res;\r

      \    res = {\r

      \      x: b1.x - b2.x,\r

      \      y: b1.y - b2.y,\r

      \      left: b1.left - b2.left,\r

      \      top: b1.top - b2.top,\r

      \      right: b1.right - b2.right,\r

      \      bottom: b1.bottom - b2.bottom,\r

      \      width: b1.width,\r

      \      height: b1.height\r

      \    };\r

      \  }\r

      \  let r4 = { x: Math.round(res.left), y: Math.round(res.top), w:
      Math.round(res.width), h: Math.round(res.height) };\r

      \  extendRect(r4); \r

      \  return r4;\r

      }\r\n"
    sig: function getRectInt(elem, relto){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getRect:
    name: getRect
    code: "function getRect(elem, relto) {\r

      \  if (isString(elem)) elem = document.getElementById(elem);\r

      \  let res = elem.getBoundingClientRect();\r

      \  if (isdef(relto)) {\r

      \    let b2 = relto.getBoundingClientRect();\r

      \    let b1 = res;\r

      \    res = {\r

      \      x: b1.x - b2.x,\r

      \      y: b1.y - b2.y,\r

      \      left: b1.left - b2.left,\r

      \      top: b1.top - b2.top,\r

      \      right: b1.right - b2.right,\r

      \      bottom: b1.bottom - b2.bottom,\r

      \      width: b1.width,\r

      \      height: b1.height\r

      \    };\r

      \  }\r

      \  let r = { x: res.left, y: res.top, w: res.width, h: res.height
      };\r

      \  addKeys({ l: r.x, t: r.y, r: r.x + r.w, b: r.t + r.h }, r);\r

      \  return r;\r

      }\r\n"
    sig: function getRect(elem, relto){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getSize:
    name: getSize
    code: "function getSize(elem) { let r = getRectInt(elem); return { w: r.w, h:
      r.h, sz: Math.min(r.w, r.h) }; }\r\n"
    sig: function getSize(elem){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  extendRect:
    name: extendRect
    code: "function extendRect(r4) { r4.l = r4.x; r4.t = r4.y; r4.r = r4.x + r4.w;
      r4.b = r4.t + r4.h; }\r\n"
    sig: function extendRect(r4){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  makeRect:
    name: makeRect
    code: "function makeRect(x, y, w, h) { let r = { x: x, y: y, w: w, h: h };
      extendRect(r); return r; }\r\n"
    sig: function makeRect(x, y, w, h){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  setRect:
    name: setRect
    code: "function setRect(elem, options) {\r

      \  let r = getRect(elem);\r

      \  elem.rect = r;\r

      \  elem.setAttribute('rect', `${r.w} ${r.h} ${r.t} ${r.l} ${r.b}
      ${r.r}`);\r

      \  if (isDict(options)) {\r

      \    if (options.hgrow) mStyle(elem, { hmin: r.h });\r

      \    else if (options.hfix) mStyle(elem, { h: r.h });\r

      \    else if (options.hshrink) mStyle(elem, { hmax: r.h });\r

      \    if (options.wgrow) mStyle(elem, { wmin: r.w });\r

      \    else if (options.wfix) mStyle(elem, { w: r.w });\r

      \    else if (options.wshrink) mStyle(elem, { wmax: r.w });\r

      \  }\r

      \  return r;\r

      }\r\n"
    sig: function setRect(elem, options){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  setRectInt:
    name: setRectInt
    code: "function setRectInt(elem, options) {\r

      \  let r = getRectInt(elem);\r

      \  elem.rect = r;\r

      \  elem.setAttribute('rect', `${r.w} ${r.h} ${r.t} ${r.l} ${r.b}
      ${r.r}`); \r

      \  if (isDict(options)) {\r

      \    if (options.hgrow) mStyle(elem, { hmin: r.h });\r

      \    else if (options.hfix) mStyle(elem, { h: r.h });\r

      \    else if (options.hshrink) mStyle(elem, { hmax: r.h });\r

      \    if (options.wgrow) mStyle(elem, { wmin: r.w });\r

      \    else if (options.wfix) mStyle(elem, { w: r.w });\r

      \    else if (options.wshrink) mStyle(elem, { wmax: r.w });\r

      \  }\r

      \  return r;\r

      }\r\n"
    sig: function setRectInt(elem, options){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  setWNeeded:
    name: setWNeeded
    code: "function setWNeeded(elem) {\r

      \  let sz = getSizeNeeded(elem);\r

      \  let r = getRect(elem);\r

      \  if (sz.w > r.w && elem.style.width != '100%') { r.w = sz.w;
      mStyle(elem, { w: r.w }); }\r

      \  elem.setAttribute('rect', `${r.w} ${r.h} ${r.t} ${r.l} ${r.b}
      ${r.r}`); \r

      \  return r.w;\r

      }\r\n"
    sig: function setWNeeded(elem){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  setHNeeded:
    name: setHNeeded
    code: "function setHNeeded(elem) {\r

      \  let sz = getSizeNeeded(elem);\r

      \  let r = getRect(elem);\r

      \  if (sz.h > r.h && elem.style.height != '100%') { r.h = sz.h;
      mStyle(elem, { h: r.h }); }\r

      \  elem.setAttribute('rect', `${r.w} ${r.h} ${r.t} ${r.l} ${r.b}
      ${r.r}`); \r

      \  return r.h;\r

      }\r\n"
    sig: function setHNeeded(elem){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  parseRect:
    name: parseRect
    code: "function parseRect(elem) {\r

      \  let r = elem.getAttribute('rect');\r

      \  console.log('elem.rect', r);\r

      \  if (nundef(r)) return getRect(elem);\r

      \  r = r.split(' ');\r

      \  let rect = { w: Number(r[0]), h: Number(r[1]), t: Number(r[2]),
      l: Number(r[3]), b: Number(r[4]), r: Number(r[5]) };\r

      \  return rect;\r

      }\r\n"
    sig: function parseRect(elem){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  setSizeNeeded:
    name: setSizeNeeded
    code: "function setSizeNeeded(elem) {\r

      \  let sz = getSizeNeeded(elem);\r

      \  let r = getRect(elem);\r

      \  if (sz.w > r.w && elem.style.width != '100%') { r.w = sz.w;
      mStyle(elem, { w: r.w }); }\r

      \  if (sz.h > r.h && elem.style.height != '100%') { r.h = sz.h;
      mStyle(elem, { h: r.h }); }\r

      \  elem.setAttribute('rect', `${r.w} ${r.h} ${r.t} ${r.l} ${r.b}
      ${r.r}`); \r

      \  return r;\r

      }\r\n"
    sig: function setSizeNeeded(elem){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getSizeNeeded:
    name: getSizeNeeded
    code: "function getSizeNeeded(elem) {\r

      \  var d = elem.cloneNode(true);\r

      \  d.style.width = 'auto';\r

      \  document.body.appendChild(d);\r

      \  let cStyles = {};\r

      \  cStyles.position = 'fixed';\r

      \  cStyles.opacity = 0;\r

      \  cStyles.top = '-9999px';\r

      \  mStyle(d, cStyles);\r

      \  height = d.clientHeight;\r

      \  width = d.clientWidth;\r

      \  d.parentNode.removeChild(d);\r

      \  return { w: Math.round(width), h: Math.round(height) };\r

      }\r\n"
    sig: function getSizeNeeded(elem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getSizeWithStyles:
    name: getSizeWithStyles
    code: "function getSizeWithStyles(text, styles) {\r

      \  var d = document.createElement(\"div\");\r

      \  document.body.appendChild(d);\r

      \  let cStyles = jsCopy(styles);\r

      \  cStyles.position = 'fixed';\r

      \  cStyles.opacity = 0;\r

      \  cStyles.top = '-9999px';\r

      \  mStyle(d, cStyles);\r

      \  d.innerHTML = text;\r

      \  height = d.clientHeight;\r

      \  width = d.clientWidth;\r

      \  d.parentNode.removeChild(d);\r

      \  return { w: Math.round(width), h: Math.round(height) };\r

      }\r\n"
    sig: function getSizeWithStyles(text, styles){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  idealFontSize:
    name: idealFontSize
    code: "function idealFontSize(txt, wmax, hmax, fz = 22, fzmin = 6, weight) {
      return idealFontDims(...arguments).fz; }\r\n"
    sig: function idealFontSize(txt, wmax, hmax, fz = 22, fzmin = 6, weight){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  idealFontDims:
    name: idealFontDims
    code: "function idealFontDims(txt, wmax, hmax, fz = 22, fzmin = 6, weight) {\r

      \  let tStyles = { fz: fz, family: 'arial' };\r

      \  if (isdef(weight)) tStyles.weight = weight;\r

      \  while (true) {\r

      \    let tSize = getSizeWithStyles(txt, tStyles);\r

      \    if (tSize.h <= hmax && tSize.w <= wmax || tStyles.fz <= fzmin)
      return { w: tSize.w, h: tSize.h, fz: tStyles.fz, family: 'arial' };\r

      \    else tStyles.fz -= 1;\r

      \  }\r

      }\r\n"
    sig: function idealFontDims(txt, wmax, hmax, fz = 22, fzmin = 6, weight){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  measureWord:
    name: measureWord
    code: "function measureWord(w, fz) { let styles = { fz: fz, family: 'arial' };
      return getSizeWithStyles(w, styles); }\r\n"
    sig: function measureWord(w, fz){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentOf:
    name: percentOf
    code: "function percentOf(elem, percentW, percentH) {\r

      \  if (nundef(percentH)) percentH = percentW;\r

      \  if (nundef(percentW)) percentW = percentH = 100;\r

      \  let r = getRect(elem);\r

      \  return { w: r.w * percentW / 100, h: r.h * percentH / 100 };\r

      }\r\n"
    sig: function percentOf(elem, percentW, percentH){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentVh:
    name: percentVh
    code: "function percentVh(percent) { return percent *
      document.documentElement.clientHeight / 100; }\r\n"
    sig: function percentVh(percent){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentVw:
    name: percentVw
    code: "function percentVw(percent) { return percent *
      document.documentElement.clientWidth / 100; }\r\n"
    sig: function percentVw(percent){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentVMin:
    name: percentVMin
    code: "function percentVMin(percent) { return Math.min(percentVh(percent),
      percentVw(percent)); }\r\n"
    sig: function percentVMin(percent){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentVMax:
    name: percentVMax
    code: "function percentVMax(percent) { return Math.max(percentVh(percent),
      percentVw(percent)); }\r\n"
    sig: function percentVMax(percent){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentVhIncludingScrollbar:
    name: percentVhIncludingScrollbar
    code: "function percentVhIncludingScrollbar(percent) {\r

      \  var h = Math.max(document.documentElement.clientHeight,
      window.innerHeight || 0);\r

      \  return (percent * h) / 100;\r

      }\r\n"
    sig: function percentVhIncludingScrollbar(percent){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentVwIncludingScrollbar:
    name: percentVwIncludingScrollbar
    code: "function percentVwIncludingScrollbar(percent) {\r

      \  var w = Math.max(document.documentElement.clientWidth,
      window.innerWidth || 0);\r

      \  return (percent * w) / 100;\r

      }\r\n"
    sig: function percentVwIncludingScrollbar(percent){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentVMinIncludingScrollbar:
    name: percentVMinIncludingScrollbar
    code: "function percentVMinIncludingScrollbar(percent) {\r

      \  return Math.min(percentVhIncludingScrollbar(percent),
      percentVwIncludingScrollbar(percent));\r

      }\r\n"
    sig: function percentVMinIncludingScrollbar(percent){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  percentVMaxIncludingScrollbar:
    name: percentVMaxIncludingScrollbar
    code: "function percentVMaxIncludingScrollbar(percent) {\r

      \  return Math.max(percentVhIncludingScrollbar(percent),
      percentVwIncludingScrollbar(percent));\r

      }\r\n"
    sig: function percentVMaxIncludingScrollbar(percent){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  toBase10:
    name: toBase10
    code: "function toBase10(s, base = 16) {\r

      \  let s1 = reverseString(s.toLowerCase());\r

      \  let res = 0;\r

      \  let mult = 1;\r

      \  for (let i = 0; i < s1.length; i++) {\r

      \    let l = s1[i];\r

      \    let hexarr = ['a', 'b', 'c', 'd', 'e', 'f'];\r

      \    let n = isNumber(l) ? Number(l) : 10 + hexarr.indexOf(l);\r

      \    res += mult * n;\r

      \    mult *= base;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function toBase10(s, base = 16){}
    region: measure (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  _isMergeableObject:
    name: _isMergeableObject
    code: "function _isMergeableObject(val) {\r

      \  var nonNullObject = val && typeof val === 'object'\r

      \  return nonNullObject\r

      \    && Object.prototype.toString.call(val) !== '[object RegExp]'\r

      \    && Object.prototype.toString.call(val) !== '[object Date]'\r

      }\r\n"
    sig: function _isMergeableObject(val){}
    region: internal (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  _emptyTarget:
    name: _emptyTarget
    code: "function _emptyTarget(val) {\r

      \  return Array.isArray(val) ? [] : {}\r

      }\r\n"
    sig: function _emptyTarget(val){}
    region: internal (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  _cloneIfNecessary:
    name: _cloneIfNecessary
    code: "function _cloneIfNecessary(value, optionsArgument) {\r

      \  var clone = optionsArgument && optionsArgument.clone === true\r

      \  return (clone && _isMergeableObject(value)) ?
      deepmerge(_emptyTarget(value), value, optionsArgument) : value\r

      }\r\n"
    sig: function _cloneIfNecessary(value, optionsArgument){}
    region: internal (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  _defaultArrayMerge:
    name: _defaultArrayMerge
    code: "function _defaultArrayMerge(target, source, optionsArgument) {\r

      \  var destination = target.slice()\r

      \  source.forEach(function (e, i) {\r

      \    if (typeof destination[i] === 'undefined') { \r

      \      destination[i] = _cloneIfNecessary(e, optionsArgument)\r

      \    } else if (_isMergeableObject(e)) { \r

      \      destination[i] = deepmerge(target[i], e, optionsArgument)\r

      \    } else if (target.indexOf(e) === -1) { \r

      \      destination.push(_cloneIfNecessary(e, optionsArgument))\r

      \    }\r

      \  })\r

      \  return destination\r

      }\r\n"
    sig: function _defaultArrayMerge(target, source, optionsArgument){}
    region: internal (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  _mergeObject:
    name: _mergeObject
    code: "function _mergeObject(target, source, optionsArgument) {\r

      \  var destination = {}\r

      \  if (_isMergeableObject(target)) {\r

      \    Object.keys(target).forEach(function (key) {\r

      \      destination[key] = _cloneIfNecessary(target[key],
      optionsArgument)\r

      \    })\r

      \  }\r

      \  Object.keys(source).forEach(function (key) {\r

      \    if (!_isMergeableObject(source[key]) || !target[key]) {\r

      \      destination[key] = _cloneIfNecessary(source[key],
      optionsArgument)\r

      \    } else {\r

      \      destination[key] = _deepMerge(target[key], source[key],
      optionsArgument)\r

      \    }\r

      \  })\r

      \  return destination;\r

      }\r\n"
    sig: function _mergeObject(target, source, optionsArgument){}
    region: internal (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  _deepMerge:
    name: _deepMerge
    code: "function _deepMerge(target, source, optionsArgument) {\r

      \  var array = Array.isArray(source);\r

      \  var options = optionsArgument || { arrayMerge: _defaultArrayMerge
      }\r

      \  var arrayMerge = options.arrayMerge || _defaultArrayMerge\r

      \  if (array) {\r

      \    return Array.isArray(target) ? arrayMerge(target, source,
      optionsArgument) : _cloneIfNecessary(source, optionsArgument)\r

      \  } else {\r

      \    return _mergeObject(target, source, optionsArgument)\r

      \  }\r

      }\r\n"
    sig: function _deepMerge(target, source, optionsArgument){}
    region: internal (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mergeCombine:
    name: mergeCombine
    code: "function mergeCombine(base, drueber) { return _deepMerge(base, drueber);
      }\r\n"
    sig: function mergeCombine(base, drueber){}
    region: internal (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mergeOverride:
    name: mergeOverride
    code: "function mergeOverride(base, drueber) { return _deepMerge(base, drueber,
      { arrayMerge: _overwriteMerge }); }\r\n"
    sig: function mergeOverride(base, drueber){}
    region: internal (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  addIf:
    name: addIf
    code: "function addIf(arr, el) { if (!arr.includes(el)) arr.push(el); }\r\n"
    sig: function addIf(arr, el){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  addByKey:
    name: addByKey
    code: "function addByKey(oNew, oOld, except) {\r

      \  for (const k in oNew) {\r

      \    let val = oNew[k];\r

      \    if (isdef(except) && except.includes(k) || !isNumber(val))
      continue;\r

      \    oOld[k] = isdef(oOld[k]) ? oOld[k] + val : val;\r

      \  }\r

      }\r\n"
    sig: function addByKey(oNew, oOld, except){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  addKeys:
    name: addKeys
    code: "function addKeys(ofrom, oto) { for (const k in ofrom) if (nundef(oto[k]))
      oto[k] = ofrom[k]; return oto; }\r\n"
    sig: function addKeys(ofrom, oto){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  addSimpleProps:
    name: addSimpleProps
    code: "function addSimpleProps(ofrom, oto = {}) { for (const k in ofrom) { if
      (nundef(oto[k]) && isLiteral(k)) oto[k] = ofrom[k]; } return oto; }\r\n"
    sig: function addSimpleProps(ofrom, oto = {}){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  addIfDict:
    name: addIfDict
    code: "function addIfDict(key, val, dict) { if (!(key in dict)) { dict[key] =
      [val]; } }\r\n"
    sig: function addIfDict(key, val, dict){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  allCond:
    name: allCond
    code: "function allCond(arr, cond) { return forAll(arr, cond); }\r\n"
    sig: function allCond(arr, cond){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  allCondDict:
    name: allCondDict
    code: "function allCondDict(o, cond) { return get_keys(o).filter(x =>
      cond(o[x])); }\r\n"
    sig: function allCondDict(o, cond){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  any:
    name: any
    code: "function any(arr, cond) { return !isEmpty(arr.filter(cond)); }\r\n"
    sig: function any(arr, cond){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  anyStartsWith:
    name: anyStartsWith
    code: "function anyStartsWith(arr, prefix) { return any(arr, el =>
      startsWith(el, prefix)); }\r\n"
    sig: function anyStartsWith(arr, prefix){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrAdd:
    name: arrAdd
    code: "function arrAdd(arr1, arr2) {\r

      \  let i = 0; return arr1.map(x => x + arr2[i++]);\r

      }\r\n"
    sig: function arrAdd(arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrCount:
    name: arrCount
    code: "function arrCount(arr, func) { return arr.filter(func).length; }\r\n"
    sig: function arrCount(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrChildren:
    name: arrChildren
    code: "function arrChildren(elem) { return [...toElem(elem).children]; }\r\n"
    sig: function arrChildren(elem){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrCreate:
    name: arrCreate
    code: "function arrCreate(n, func) { let res = []; for (let i = 0; i < n; i++) {
      res.push(func(i)); } return res; }\r\n"
    sig: function arrCreate(n, func){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrCycle:
    name: arrCycle
    code: "function arrCycle(arr, count) { return arrRotate(arr, count); }\r\n"
    sig: function arrCycle(arr, count){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrFirst:
    name: arrFirst
    code: "function arrFirst(arr) { return arr.length > 0 ? arr[0] : null; }\r\n"
    sig: function arrFirst(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrFirstOfLast:
    name: arrFirstOfLast
    code: "function arrFirstOfLast(arr) { if (arr.length > 0) { let l =
      arrLast(arr); return isList(l) ? arrFirst(l) : null; } else return null;
      }\r\n"
    sig: function arrFirstOfLast(arr){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrFlatten:
    name: arrFlatten
    code: "function arrFlatten(arr) {\r

      \  let res = [];\r

      \  for (let i = 0; i < arr.length; i++) {\r

      \    for (let j = 0; j < arr[i].length; j++) {\r

      \      res.push(arr[i][j]);\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function arrFlatten(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrFromIndex:
    name: arrFromIndex
    code: "function arrFromIndex(arr, i) { return arr.slice(i); }\r\n"
    sig: function arrFromIndex(arr, i){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrFromTo:
    name: arrFromTo
    code: "function arrFromTo(arr, iFrom, iTo) { return takeFromTo(arr, iFrom, iTo);
      }\r\n"
    sig: function arrFromTo(arr, iFrom, iTo){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrIndices:
    name: arrIndices
    code: "function arrIndices(arr, func) {\r

      \  let indices = [];\r

      \  for (let i = 0; i < arr.length; i++) { if (func(arr[i]))
      indices.push(i); }\r

      \  return indices;\r

      }\r\n"
    sig: function arrIndices(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrLastOfLast:
    name: arrLastOfLast
    code: "function arrLastOfLast(arr) { if (arr.length > 0) { let l = arrLast(arr);
      return isList(l) ? arrLast(l) : null; } else return null; }\r\n"
    sig: function arrLastOfLast(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrLast:
    name: arrLast
    code: "function arrLast(arr) { return arr.length > 0 ? arr[arr.length - 1] :
      null; }\r\n"
    sig: function arrLast(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrMax:
    name: arrMax
    code: "function arrMax(arr, f) { return arr_get_max(arr, f); }\r\n"
    sig: function arrMax(arr, f){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrMin:
    name: arrMin
    code: "function arrMin(arr, f) { return arr_get_min(arr, f); }\r\n"
    sig: function arrMin(arr, f){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrMinMax:
    name: arrMinMax
    code: "function arrMinMax(arr, func) {\r

      \  if (nundef(func)) func = x => x;\r

      \  let min = func(arr[0]), max = func(arr[0]), imin = 0, imax = 0;\r

      \  for (let i = 1, len = arr.length; i < len; i++) {\r

      \    let v = func(arr[i]);\r

      \    if (v < min) {\r

      \      min = v; imin = i;\r

      \    } else if (v > max) {\r

      \      max = v; imax = i;\r

      \    }\r

      \  }\r

      \  return { min: min, imin: imin, max: max, imax: imax, elmin:
      arr[imin], elmax: arr[imax] };\r

      }\r\n"
    sig: function arrMinMax(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrMinus:
    name: arrMinus
    code: "function arrMinus(a, b) { if (isList(b)) return a.filter(x =>
      !b.includes(x)); else return a.filter(x => x != b); }\r\n"
    sig: function arrMinus(a, b){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrNoDuplicates:
    name: arrNoDuplicates
    code: "function arrNoDuplicates(arr) {\r

      \  let di = {};\r

      \  let arrNew = [];\r

      \  for (const el of arr) {\r

      \    if (!isLiteral(el)) continue;\r

      \    if (isdef(di[el])) continue;\r

      \    di[el] = true;\r

      \    arrNew.push(el);\r

      \  }\r

      \  return arrNew;\r

      }\r\n"
    sig: function arrNoDuplicates(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrPlus:
    name: arrPlus
    code: "function arrPlus(a, b) { b.map(x => a.push(x)); return a; }\r\n"
    sig: function arrPlus(a, b){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrRange:
    name: arrRange
    code: "function arrRange(from = 1, to = 10, step = 1) { let res = []; for (let i
      = from; i <= to; i += step)res.push(i); return res; }\r\n"
    sig: function arrRange(from = 1, to = 10, step = 1){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrReplaceAt:
    name: arrReplaceAt
    code: "function arrReplaceAt(arr, index, val, inPlace = true) { return inPlace ?
      arrReplaceAtInPlace(arr, index, val) : arrReplaceAtCopy(arr, index, val);
      }\r\n"
    sig: function arrReplaceAt(arr, index, val, inPlace = true){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrReplaceAtInPlace:
    name: arrReplaceAtInPlace
    code: "function arrReplaceAtInPlace(arr, index, val) { arr[index] = val; }\r\n"
    sig: function arrReplaceAtInPlace(arr, index, val){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrReplaceAtCopy:
    name: arrReplaceAtCopy
    code: "function arrReplaceAtCopy(arr, index, val) {\r

      \  let res = new Array();\r

      \  for (let i = 0; i < arr.length; i++) {\r

      \    if (i == index) res[i] = val; else res[i] = arr[i];\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function arrReplaceAtCopy(arr, index, val){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrRotate:
    name: arrRotate
    code: "function arrRotate(arr, count) {\r

      \  var unshift = Array.prototype.unshift,\r

      \    splice = Array.prototype.splice;\r

      \  var len = arr.length >>> 0, count = count >> 0;\r

      \  let arr1 = jsCopy(arr);\r

      \  unshift.apply(arr1, splice.call(arr1, count % len, len));\r

      \  return arr1;\r

      }\r\n"
    sig: function arrRotate(arr, count){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrReverse:
    name: arrReverse
    code: "function arrReverse(arr) { return jsCopy(arr).reverse(); }\r\n"
    sig: function arrReverse(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrSplitByIndices:
    name: arrSplitByIndices
    code: "function arrSplitByIndices(arr, indices) {\r

      \  let [a1, a2] = [[], jsCopy(arr)];\r

      \  for (let i = 0; i < indices.length; i++) {\r

      \    let el = arr[indices[i]];\r

      \    a1.push(el);\r

      \    removeInPlace(a2, el);\r

      \  }\r

      \  return [a1, a2];\r

      }\r\n"
    sig: function arrSplitByIndices(arr, indices){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrSwap:
    name: arrSwap
    code: "function arrSwap(arr, i, j) { let h = arr[i]; arr[i] = arr[j]; arr[j] =
      h; }\r\n"
    sig: function arrSwap(arr, i, j){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrSwap2d:
    name: arrSwap2d
    code: "function arrSwap2d(arr, r1, c1, r2, c2) { let h = arr[r1][c1];
      arr[r1][c1] = arr[r2][c2]; arr[r2][c2] = h; }\r\n"
    sig: function arrSwap2d(arr, r1, c1, r2, c2){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrString:
    name: arrString
    code: "function arrString(arr, func) {\r

      \  if (isEmpty(arr)) return '[]';\r

      \  let s = '[';\r

      \  for (const el of arr) {\r

      \    if (isList(el)) s += arrString(el, func) + ','; else s +=
      (isdef(func) ? func(el) : el) + ',';\r

      \  }\r

      \  s = s.substring(0, s.length - 1);\r

      \  s += ']';\r

      \  return s;\r

      }\r\n"
    sig: function arrString(arr, func){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrSum:
    name: arrSum
    code: "function arrSum(arr, props) {\r

      \  if (nundef(props)) return arr.reduce((a, b) => a + b);\r

      \  if (!isList(props)) props = [props];\r

      \  return arr.reduce((a, b) => a + (lookup(b, props) || 0), 0);\r

      }\r\n"
    sig: function arrSum(arr, props){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrTail:
    name: arrTail
    code: "function arrTail(arr) { return arr.slice(1); }\r\n"
    sig: function arrTail(arr){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrTake:
    name: arrTake
    code: "function arrTake(arr, n = 0, from = 0) {\r

      \  if (isDict(arr)) {\r

      \    let keys = Object.keys(arr);\r

      \    return n > 0 ? keys.slice(from, from + n).map(x => (arr[x])) :
      keys.slice(from).map(x => (arr[x]));\r

      \  } else return n > 0 ? arr.slice(from, from + n) :
      arr.slice(from);\r

      }\r\n"
    sig: function arrTake(arr, n = 0, from = 0){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrTakeFromTo:
    name: arrTakeFromTo
    code: "function arrTakeFromTo(arr, a, b) { return takeFromTo(arr, a, b); }\r\n"
    sig: function arrTakeFromTo(arr, a, b){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrTakeFromEnd:
    name: arrTakeFromEnd
    code: "function arrTakeFromEnd(arr, n) {\r

      \  if (arr.length <= n) return arr.map(x => x); else return
      arr.slice(arr.length - n);\r

      }\r\n"
    sig: function arrTakeFromEnd(arr, n){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arr_to_dict_by:
    name: arr_to_dict_by
    code: "function arr_to_dict_by(arr, prop) { let di = {}; for (const a of arr) {
      lookupAddToList(di, [a[prop]], a); } return di; }\r\n"
    sig: function arr_to_dict_by(arr, prop){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrToggleMember:
    name: arrToggleMember
    code: "function arrToggleMember(arr, el) { if (arr.includes(el))
      removeInPlace(arr, el); else arr.push(el); }\r\n"
    sig: function arrToggleMember(arr, el){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrWithout:
    name: arrWithout
    code: "function arrWithout(arr, b) { return arrMinus(arr, b); }\r\n"
    sig: function arrWithout(arr, b){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cartesian:
    name: cartesian
    code: "function cartesian(...a) { return a.reduce((a, b) => a.flatMap(d =>
      b.map(e => [d, e].flat()))); }\r\n"
    sig: function cartesian(...a){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrPairs:
    name: arrPairs
    code: "function arrPairs(a) {\r

      \  let res = [];\r

      \  for (let i = 0; i < a.length; i++) {\r

      \    for (let j = i + 1; j < a.length; j++) {\r

      \      res.push([a[i], a[j]]);\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function arrPairs(a){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  classByName:
    name: classByName
    code: "function classByName(name) { return eval(name); }\r\n"
    sig: function classByName(name){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  copyKeys:
    name: copyKeys
    code: "function copyKeys(ofrom, oto, except = {}, only = null) {\r

      \  let keys = isdef(only) ? only : Object.keys(ofrom);\r

      \  for (const k of keys) {\r

      \    if (isdef(except[k])) continue;\r

      \    oto[k] = ofrom[k];\r

      \  }\r

      \  return oto;\r

      }\r\n"
    sig: function copyKeys(ofrom, oto, except = {}, only = null){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  copySimpleProps:
    name: copySimpleProps
    code: "function copySimpleProps(ofrom, oto = {}) { for (const k in ofrom) { if
      (isLiteral(k)) oto[k] = ofrom[k]; } return oto; }\r\n"
    sig: function copySimpleProps(ofrom, oto = {}){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  createClassByName:
    name: createClassByName
    code: "function createClassByName(name, ...a) { var c = eval(name); return new
      c(...a); }\r\n"
    sig: function createClassByName(name, ...a){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  createKeyIndex:
    name: createKeyIndex
    code: "function createKeyIndex(di, prop) {\r

      \  let res = {};\r

      \  for (const k in di) {\r

      \    res[di[k][prop]] = k;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function createKeyIndex(di, prop){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  dict2list:
    name: dict2list
    code: "function dict2list(d, keyName = 'id') {\r

      \  let res = [];\r

      \  for (const key in d) {\r

      \    let val = d[key];\r

      \    let o;\r

      \    if (isDict(val)) { o = jsCopy(val); } else { o = { value: val
      }; }\r

      \    o[keyName] = key;\r

      \    res.push(o);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function dict2list(d, keyName = 'id'){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fisherYates:
    name: fisherYates
    code: "function fisherYates(arr) {\r

      \  if (arr.length == 2 && coin()) { return arr; }\r

      \  var rnd, temp;\r

      \  let last = arr[0];\r

      \  for (var i = arr.length - 1; i; i--) {\r

      \    rnd = Math.random() * i | 0;\r

      \    temp = arr[i];\r

      \    arr[i] = arr[rnd];\r

      \    arr[rnd] = temp;\r

      \  }\r

      \  return arr;\r

      }\r\n"
    sig: function fisherYates(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  filterByKey:
    name: filterByKey
    code: "function filterByKey(o, keyString, exceptString) {\r

      \  let keys;\r

      \  if (isdef(keyString)) keys = keyString.split(',');\r

      \  console.log('keys', keys);\r

      \  let result = {};\r

      \  for (const k of keys) {\r

      \    if (isdef(o[k])) result[k] = o[k];\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function filterByKey(o, keyString, exceptString){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  findLongestWord:
    name: findLongestWord
    code: "function findLongestWord(arr) { return arr[arrMinMax(arr, x =>
      x.length).imax]; }\r\n"
    sig: function findLongestWord(arr){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  firstCond:
    name: firstCond
    code: "function firstCond(arr, func) {\r

      \  if (nundef(arr)) return null;\r

      \  for (const a of arr) {\r

      \    if (func(a)) return a;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function firstCond(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  firstCondDict:
    name: firstCondDict
    code: "function firstCondDict(dict, func) {\r

      \  for (const k in dict) { if (func(dict[k])) return k; }\r

      \  return null;\r

      }\r\n"
    sig: function firstCondDict(dict, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  firstCondDictKey:
    name: firstCondDictKey
    code: "function firstCondDictKey() { return firstCondDictKeys(...arguments);
      }\r\n"
    sig: function firstCondDictKey(){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  firstCondDictKeys:
    name: firstCondDictKeys
    code: "function firstCondDictKeys(dict, func) {\r

      \  for (const k in dict) { if (func(k)) return k; }\r

      \  return null;\r

      }\r\n"
    sig: function firstCondDictKeys(dict, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  firstNCond:
    name: firstNCond
    code: "function firstNCond(n, arr, func) {\r

      \  if (nundef(arr)) return [];\r

      \  let result = [];\r

      \  let cnt = 0;\r

      \  for (const a of arr) {\r

      \    cnt += 1; if (cnt > n) break;\r

      \    if (func(a)) result.push(a);\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function firstNCond(n, arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  forAll:
    name: forAll
    code: "function forAll(arr, func) { for (const a of arr) if (!func(a)) return
      false; return true; }\r\n"
    sig: function forAll(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getIndicesCondi:
    name: getIndicesCondi
    code: "function getIndicesCondi(arr, func) {\r

      \  let res = [];\r

      \  for (let i = 0; i < arr.length; i++) {\r

      \    if (func(arr[i], i)) res.push(i);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function getIndicesCondi(arr, func){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getObjectsWithSame:
    name: getObjectsWithSame
    code: "function getObjectsWithSame(olist, props, o, up = true,
      breakWhenDifferent = true) {\r

      \  let res = [];\r

      \  let val = lookup(o, props);\r

      \  if (up) {\r

      \    for (let i = 0; i <= olist.length - 1; i++) {\r

      \      let val1 = lookup(olist[i], props);\r

      \      if (val1 == val) res.push(olist[i]); else if
      (breakWhenDifferent) return res;\r

      \    }\r

      \  } else {\r

      \    for (let i = olist.length - 1; i >= 0; i--) {\r

      \      let val1 = lookup(olist[i], props);\r

      \      if (val1 == val) res.push(olist[i]); else if
      (breakWhenDifferent) return res;\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function getObjectsWithSame(olist, props, o, up = true, breakWhenDifferent
      = true){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getRandomLetterMapping:
    name: getRandomLetterMapping
    code: "function getRandomLetterMapping(s) {\r

      \  if (nundef(s)) s =
      'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r

      \  let alphabet = filterDistinctLetters(s);\r

      \  let alphabet2 = shuffle(jsCopy(alphabet));\r

      \  let di = {};\r

      \  for (let i = 0; i < alphabet.length; i++) {\r

      \    di[alphabet[i]] = alphabet2[i];\r

      \  }\r

      \  return di;\r

      }\r\n"
    sig: function getRandomLetterMapping(s){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getLetterSwapEncoding:
    name: getLetterSwapEncoding
    code: "function getLetterSwapEncoding(s) {\r

      \  let di = getRandomLetterMapping(s);\r

      \  let result = '';\r

      \  for (let i = 0; i < s.length; i++) {\r

      \    result += s[i] in di ? di[s[i]] : s[i];\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function getLetterSwapEncoding(s){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  intersection:
    name: intersection
    code: "function intersection(arr1, arr2) {\r

      \  let res = [];\r

      \  for (const a of arr1) {\r

      \    if (arr2.includes(a)) {\r

      \      addIf(res, a);\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function intersection(arr1, arr2){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lastCond:
    name: lastCond
    code: "function lastCond(arr, func) {\r

      \  if (nundef(arr)) return null;\r

      \  for (let i = arr.length - 1; i >= 0; i--) { let a = arr[i]; if
      (func(a)) return a; }\r

      \  return null;\r

      }\r\n"
    sig: function lastCond(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  loop:
    name: loop
    code: "function loop(n) { return range(1, n); }\r\n"
    sig: function loop(n){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  lookup:
    name: lookup
    code: "function lookup(dict, keys) {\r

      \  let d = dict;\r

      \  let ilast = keys.length - 1;\r

      \  let i = 0;\r

      \  for (const k of keys) {\r

      \    if (k === undefined) break;\r

      \    let e = d[k];\r

      \    if (e === undefined || e === null) return null;\r

      \    d = d[k];\r

      \    if (i == ilast) return d;\r

      \    i += 1;\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function lookup(dict, keys){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lookupDef:
    name: lookupDef
    code: "function lookupDef(o, proplist, def) { return lookup(o, proplist) || def;
      }\r\n"
    sig: function lookupDef(o, proplist, def){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  lookupSet:
    name: lookupSet
    code: "function lookupSet(dict, keys, val) {\r

      \  let d = dict;\r

      \  let ilast = keys.length - 1;\r

      \  let i = 0;\r

      \  for (const k of keys) {\r

      \    if (nundef(k)) continue;\r

      \    if (d[k] === undefined) d[k] = (i == ilast ? val : {});\r

      \    if (nundef(d[k])) d[k] = (i == ilast ? val : {});\r

      \    d = d[k];\r

      \    if (i == ilast) return d;\r

      \    i += 1;\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function lookupSet(dict, keys, val){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lookupSetOverride:
    name: lookupSetOverride
    code: "function lookupSetOverride(dict, keys, val) {\r

      \  let d = dict;\r

      \  let ilast = keys.length - 1;\r

      \  let i = 0;\r

      \  for (const k of keys) {\r

      \    if (i == ilast) {\r

      \      if (nundef(k)) {\r

      \        return null;\r

      \      } else {\r

      \        d[k] = val;\r

      \      }\r

      \      return d[k];\r

      \    }\r

      \    if (nundef(k)) continue;\r

      \    if (nundef(d[k])) d[k] = {};\r

      \    d = d[k];\r

      \    i += 1;\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function lookupSetOverride(dict, keys, val){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lookupAddToList:
    name: lookupAddToList
    code: "function lookupAddToList(dict, keys, val) {\r

      \  let d = dict;\r

      \  let ilast = keys.length - 1;\r

      \  let i = 0;\r

      \  for (const k of keys) {\r

      \    if (i == ilast) {\r

      \      if (nundef(k)) {\r

      \        console.assert(false, 'lookupAddToList: last key
      indefined!' + keys.join(' '));\r

      \        return null;\r

      \      } else if (isList(d[k])) {\r

      \        d[k].push(val);\r

      \      } else {\r

      \        d[k] = [val];\r

      \      }\r

      \      return d[k];\r

      \    }\r

      \    if (nundef(k)) continue;\r

      \    if (d[k] === undefined) d[k] = {};\r

      \    d = d[k];\r

      \    i += 1;\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function lookupAddToList(dict, keys, val){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lookupAddIfToList:
    name: lookupAddIfToList
    code: "function lookupAddIfToList(dict, keys, val) {\r

      \  let lst = lookup(dict, keys);\r

      \  if (isList(lst) && lst.includes(val)) return;\r

      \  lookupAddToList(dict, keys, val);\r

      }\r\n"
    sig: function lookupAddIfToList(dict, keys, val){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lookupRemoveFromList:
    name: lookupRemoveFromList
    code: "function lookupRemoveFromList(dict, keys, val, deleteIfEmpty = false) {\r

      \  let d = dict;\r

      \  let ilast = keys.length - 1;\r

      \  let i = 0;\r

      \  for (const k of keys) {\r

      \    if (i == ilast) {\r

      \      if (nundef(k)) {\r

      \        alert('lookupRemoveFromList: last key indefined!' +
      keys.join(' '));\r

      \        return null;\r

      \      } else if (isList(d[k])) {\r

      \        removeInPlace(d[k], val);\r

      \        if (deleteIfEmpty && isEmpty(d[k])) delete d[k];\r

      \      } else {\r

      \        if (d[k] === undefined) {\r

      \          error('lookupRemoveFromList not a list ' + d[k]);\r

      \          return null;\r

      \        }\r

      \      }\r

      \      return d[k];\r

      \    }\r

      \    if (nundef(k)) continue; \r

      \    if (d[k] === undefined) {\r

      \      error('lookupRemoveFromList key not found ' + k);\r

      \      return null;\r

      \    }\r

      \    d = d[k];\r

      \    i += 1;\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function lookupRemoveFromList(dict, keys, val, deleteIfEmpty = false){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  range:
    name: range
    code: "function range(f, t, st = 1) {\r

      \  if (nundef(t)) {\r

      \    t = f - 1;\r

      \    f = 0;\r

      \  }\r

      \  let arr = [];\r

      \  for (let i = f; i <= t; i += st) {\r

      \    arr.push(i);\r

      \  }\r

      \  return arr;\r

      }\r\n"
    sig: function range(f, t, st = 1){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  removeInPlace:
    name: removeInPlace
    code: "function removeInPlace(arr, el) {\r

      \  arrRemovip(arr, el);\r

      }\r\n"
    sig: function removeInPlace(arr, el){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sameList:
    name: sameList
    code: "function sameList(l1, l2) {\r

      \  if (l1.length != l2.length) return false;\r

      \  for (const s of l1) {\r

      \    if (!l2.includes(s)) return false;\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function sameList(l1, l2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  shuffle:
    name: shuffle
    code: "function shuffle(arr) { if (isEmpty(arr)) return []; else return
      fisherYates(arr); }\r\n"
    sig: function shuffle(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  shuffle_children:
    name: shuffle_children
    code: "function shuffle_children(d) {\r

      \  let arr = Array.from(d.children);\r

      \  shuffle(arr);\r

      \  for (const ch of arr) { mAppend(d, ch); }\r

      }\r\n"
    sig: function shuffle_children(d){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  shuffleChildren:
    name: shuffleChildren
    code: "function shuffleChildren(dParent) { shuffle_children(dParent); }\r\n"
    sig: function shuffleChildren(dParent){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sortBy:
    name: sortBy
    code: "function sortBy(arr, key) { arr.sort((a, b) => (a[key] < b[key] ? -1 :
      1)); return arr; }\r\n"
    sig: function sortBy(arr, key){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sortByDescending:
    name: sortByDescending
    code: "function sortByDescending(arr, key) { arr.sort((a, b) => (a[key] > b[key]
      ? -1 : 1)); return arr; }\r\n"
    sig: function sortByDescending(arr, key){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sortByFunc:
    name: sortByFunc
    code: "function sortByFunc(arr, func) { arr.sort((a, b) => (func(a) < func(b) ?
      -1 : 1)); return arr; }\r\n"
    sig: function sortByFunc(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sortByFuncDescending:
    name: sortByFuncDescending
    code: "function sortByFuncDescending(arr, func) { arr.sort((a, b) => (func(a) >
      func(b) ? -1 : 1)); return arr; }\r\n"
    sig: function sortByFuncDescending(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sortNumbers:
    name: sortNumbers
    code: "function sortNumbers(ilist) { ilist.sort(function (a, b) { return a - b
      }); return ilist; }\r\n"
    sig: function sortNumbers(ilist){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  takeFromStart:
    name: takeFromStart
    code: "function takeFromStart(ad, n) {\r

      \  if (isDict(ad)) {\r

      \    let keys = Object.keys(ad);\r

      \    return keys.slice(0, n).map(x => (ad[x]));\r

      \  } else return ad.slice(0, n);\r

      }\r\n"
    sig: function takeFromStart(ad, n){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  takeFromTo:
    name: takeFromTo
    code: "function takeFromTo(ad, from, to) {\r

      \  if (isDict(ad)) {\r

      \    let keys = Object.keys(ad);\r

      \    return keys.slice(from, to).map(x => (ad[x]));\r

      \  } else return ad.slice(from, to);\r

      }\r\n"
    sig: function takeFromTo(ad, from, to){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  toggle_list_member:
    name: toggle_list_member
    code: "function toggle_list_member(arr, el) { arrToggleMember(arr, el); }\r\n"
    sig: function toggle_list_member(arr, el){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  union:
    name: union
    code: "function union(lst1, lst2) {\r

      \  return [...new Set([...lst1, ...lst2])];\r

      }\r\n"
    sig: function union(lst1, lst2){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  coin:
    name: coin
    code: "function coin(percent = 50) { return Math.random() * 100 < percent; }\r\n"
    sig: function coin(percent = 50){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  choose:
    name: choose
    code: "function choose(arr, n, excepti) { return rChoose(arr, n, null, excepti);
      }\r\n"
    sig: function choose(arr, n, excepti){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  chooseRandom:
    name: chooseRandom
    code: "function chooseRandom(arr) { return rChoose(arr); }\r\n"
    sig: function chooseRandom(arr){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  chooseKeys:
    name: chooseKeys
    code: "function chooseKeys(dict, n, except) { let keys = Object.keys(dict); let
      ind = except.map(x => keys.indexOf(x)); return choose(keys, n, ind);
      }\r\n"
    sig: function chooseKeys(dict, n, except){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getRandomNumberSequence:
    name: getRandomNumberSequence
    code: "function getRandomNumberSequence(n, minStart, maxStart, fBuild,
      exceptStart) { \r

      \  let nStart = randomNumber(minStart, maxStart - n + 1);\r

      \  if (exceptStart) {\r

      \    let att = 10;\r

      \    while (att >= 0 && nStart == exceptStart) { att -= 1; nStart =
      randomNumber(minStart, maxStart - n + 1); }\r

      \  }\r

      \  if (isNumber(fBuild)) return range(nStart, nStart + (n - 1) *
      fBuild, fBuild);\r

      \  else {\r

      \    let res = [], x = nStart;\r

      \    for (let i = 0; i < n; i++) {\r

      \      res.push(x);\r

      \      x = fBuild(x);\r

      \    }\r

      \    return res;\r

      \  }\r

      }\r\n"
    sig: function getRandomNumberSequence(n, minStart, maxStart, fBuild,
      exceptStart){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  nRandomNumbers:
    name: nRandomNumbers
    code: "function nRandomNumbers(n, from, to, step) {\r

      \  let arr = range(from, to, step);\r

      \  return choose(arr, n);\r

      }\r\n"
    sig: function nRandomNumbers(n, from, to, step){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomizeNum:
    name: randomizeNum
    code: "function randomizeNum(n, percentUp = 25, percentDown = 25) {\r

      \  let max = n * percentUp / 100;\r

      \  let min = n * percentDown / 100;\r

      \  return randomNumber(n - min, n + max);\r

      }\r\n"
    sig: function randomizeNum(n, percentUp = 25, percentDown = 25){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomAlphanum:
    name: randomAlphanum
    code: "function randomAlphanum() {\r

      \  let s =
      'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r

      \  return s[randomNumber(0, s.length - 1)];\r

      }\r\n"
    sig: function randomAlphanum(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomColor:
    name: randomColor
    code: "function randomColor() { return rColor(); }\r\n"
    sig: function randomColor(){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  randomDarkColor:
    name: randomDarkColor
    code: "function randomDarkColor() {\r

      \  let s = '#';\r

      \  for (let i = 0; i < 3; i++) {\r

      \    s += chooseRandom([0, 1, 2, 3, 4, 5, 6, 7]) +
      chooseRandom(['f', 'c', '9', '6', '3', '0']);\r

      \  }\r

      \  return s;\r

      }\r\n"
    sig: function randomDarkColor(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomDigit:
    name: randomDigit
    code: "function randomDigit() { let s = '0123456789'; return s[randomNumber(0,
      s.length - 1)]; }\r\n"
    sig: function randomDigit(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomHexColor:
    name: randomHexColor
    code: "function randomHexColor() {\r

      \  let s = '#';\r

      \  for (let i = 0; i < 6; i++) {\r

      \    s += chooseRandom(['f', 'c', '9', '6', '3', '0']);\r

      \  }\r

      \  return s;\r

      }\r\n"
    sig: function randomHexColor(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomHslaColor:
    name: randomHslaColor
    code: "function randomHslaColor(s = 100, l = 70, a = 1) {\r

      \  var hue = Math.round(Math.random() * 360);\r

      \  return hslToHslaString(hue, s, l, a);\r

      }\r\n"
    sig: function randomHslaColor(s = 100, l = 70, a = 1){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomLetter:
    name: randomLetter
    code: "function randomLetter() { let s =
      'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'; return
      s[randomNumber(0, s.length - 1)]; }\r\n"
    sig: function randomLetter(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomLightColor:
    name: randomLightColor
    code: "function randomLightColor() {\r

      \  let s = '#';\r

      \  for (let i = 0; i < 3; i++) {\r

      \    s += chooseRandom(['A', 'B', 'C', 'D', 'E', 'F']) +
      chooseRandom(['f', 'c', '9', '6', '3', '0']);\r

      \  }\r

      \  return s;\r

      }\r\n"
    sig: function randomLightColor(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  random_motto:
    name: random_motto
    code: "function random_motto() { return chooseRandom([\"time to play!\",
      \"life's good\", \"one game at a time!\", \"let's play!\", \"no place like
      home\", \"cafe landmann\"]) }\r\n"
    sig: function random_motto(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomName:
    name: randomName
    code: "function randomName() { return chooseRandom(coin() ? GirlNames :
      BoyNames); }\r\n"
    sig: function randomName(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomBotName:
    name: randomBotName
    code: "function randomBotName() { return (coin() ? randomVowel() : '') +
      randomConsonant() + randomVowel() + 'bot'; }\r\n"
    sig: function randomBotName(){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomNumber:
    name: randomNumber
    code: "function randomNumber(min = 0, max = 100) {\r

      \  return Math.floor(Math.random() * (max - min + 1)) + min; \r

      }\r\n"
    sig: function randomNumber(min = 0, max = 100){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  randomUserId:
    name: randomUserId
    code: "function randomUserId(len = 20, isNumeric = false) {\r

      \  let id = '';\r

      \  if (isNumeric) for (let i = 0; i < len; i++) { id +=
      randomDigit(); }\r

      \  else for (let i = 0; i < len; i++) { id += randomAlphanum(); }\r

      \  return id;\r

      }\r\n"
    sig: function randomUserId(len = 20, isNumeric = false){}
    region: random (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  allIntegers:
    name: allIntegers
    code: "function allIntegers(s) {\r

      \  return s.match(/\\d+\\.\\d+|\\d+\\b|\\d+(?=\\w)/g).map(v => {\r

      \    return +v;\r

      \  });\r

      }\r\n"
    sig: function allIntegers(s){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  allNumbers:
    name: allNumbers
    code: "function allNumbers(s) {\r

      \  let m =
      s.match(/\\-.\\d+|\\-\\d+|\\.\\d+|\\d+\\.\\d+|\\d+\\b|\\d+(?=\\w)/g);\r

      \  if (m) return m.map(v => Number(v)); else return null;\r

      }\r\n"
    sig: function allNumbers(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  capitalize:
    name: capitalize
    code: "function capitalize(s) {\r

      \  if (typeof s !== 'string') return '';\r

      \  return s.charAt(0).toUpperCase() + s.slice(1);\r

      }\r\n"
    sig: function capitalize(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  contains:
    name: contains
    code: "function contains(s, sSub) { return
      s.toLowerCase().includes(sSub.toLowerCase()); }\r\n"
    sig: function contains(s, sSub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  endsWith:
    name: endsWith
    code: "function endsWith(s, sSub) { let i = s.indexOf(sSub); return i >= 0 && i
      == s.length - sSub.length; }\r\n"
    sig: function endsWith(s, sSub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  extendWidth:
    name: extendWidth
    code: "function extendWidth(w) { return replaceEvery(w, 'w', 2); }\r\n"
    sig: function extendWidth(w){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  filterByLength:
    name: filterByLength
    code: "function filterByLength(w, min, max, allowSpaces = false) { return
      w.length <= max && w.length >= min && (allowSpaces || !w.includes(' '));
      }\r\n"
    sig: function filterByLength(w, min, max, allowSpaces = false){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  filterDistinctLetters:
    name: filterDistinctLetters
    code: "function filterDistinctLetters(s) {\r

      \  let arr = [];\r

      \  for (let i = 0; i < s.length; i++) {\r

      \    let ch = s[i];\r

      \    if (isLetter(ch) && !arr.includes(ch)) arr.push(ch);\r

      \  }\r

      \  return arr;\r

      }\r\n"
    sig: function filterDistinctLetters(s){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  findCommonPrefix:
    name: findCommonPrefix
    code: "function findCommonPrefix(s1, s2) {\r

      \  let i = 0;\r

      \  let res = '';\r

      \  while (i < s1.length && i < s2.length) {\r

      \    if (s1[i] != s2[i]) break; else res += s1[i];\r

      \    i += 1;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function findCommonPrefix(s1, s2){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  firstNumber:
    name: firstNumber
    code: "function firstNumber(s) {\r

      \  if (s) {\r

      \    let m = s.match(/-?\\d+/);\r

      \    if (m) {\r

      \      let sh = m.shift();\r

      \      if (sh) { return Number(sh); }\r

      \    }\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function firstNumber(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  html_to_umlaut:
    name: html_to_umlaut
    code: "function html_to_umlaut(html){\r

      \  console.log('html',html);\r

      \  if (html =='u00c4'){ return 'Ä'; }\r

      \  else return html;\r

      }\r\n"
    sig: function html_to_umlaut(html){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  toUmlaut:
    name: toUmlaut
    code: "function toUmlaut(w) {\r

      \  if (isList(w)) {\r

      \    let res = [];\r

      \    for (const w1 of w) res.push(toUmlaut(w1));\r

      \    return res;\r

      \  } else {\r

      \    w = replaceAll(w, 'ue', 'ü');\r

      \    w = replaceAll(w, 'ae', 'ä');\r

      \    w = replaceAll(w, 'oe', 'ö');\r

      \    w = replaceAll(w, 'UE', 'Ü');\r

      \    w = replaceAll(w, 'AE', 'Ä');\r

      \    w = replaceAll(w, 'OE', 'Ö');\r

      \    return w;\r

      \  }\r

      }\r\n"
    sig: function toUmlaut(w){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fromUmlaut:
    name: fromUmlaut
    code: "function fromUmlaut(w) {\r

      \  if (isList(w)) {\r

      \    let res = [];\r

      \    for (const w1 of w) res.push(fromUmlaut(w1));\r

      \    return res;\r

      \  } else {\r

      \    w = replaceAll(w, 'ü', 'ue');\r

      \    w = replaceAll(w, 'ä', 'ae');\r

      \    w = replaceAll(w, 'ö', 'oe');\r

      \    w = replaceAll(w, 'Ü', 'UE');\r

      \    w = replaceAll(w, 'Ä', 'AE');\r

      \    w = replaceAll(w, 'Ö', 'OE');\r

      \    return w;\r

      \  }\r

      }\r\n"
    sig: function fromUmlaut(w){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getCorrectPrefix:
    name: getCorrectPrefix
    code: "function getCorrectPrefix(label, text) {\r

      \  let req = label.toLowerCase();\r

      \  let answer = text.toLowerCase();\r

      \  let res1 = removeNonAlphanum(req);\r

      \  let res2 = removeNonAlphanum(answer);\r

      \  let req1 = res1.alphas;\r

      \  let answer1 = res2.alphas; \r

      \  let whites = res1.whites;\r

      \  let common = findCommonPrefix(req1, answer1);\r

      \  let nletters = common.length;\r

      \  let ireal = 0;\r

      \  let icompact = 0;\r

      \  let iwhites = 0;\r

      \  let correctPrefix = '';\r

      \  while (icompact < nletters) {\r

      \    if (req[ireal] == common[icompact]) { correctPrefix +=
      label[ireal]; icompact += 1; }\r

      \    else if (whites[iwhites] == req[ireal]) { correctPrefix +=
      label[ireal]; iwhites += 1; }\r

      \    else break;\r

      \    ireal += 1;\r

      \  }\r

      \  return correctPrefix;\r

      }\r\n"
    sig: function getCorrectPrefix(label, text){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  includesAnyOf:
    name: includesAnyOf
    code: "function includesAnyOf(s, slist) { for (const l of slist) { if
      (s.includes(l)) return true; } return false; }\r\n"
    sig: function includesAnyOf(s, slist){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  ordinal_suffix_of:
    name: ordinal_suffix_of
    code: "function ordinal_suffix_of(i) {\r

      \  var j = i % 10,\r

      \    k = i % 100;\r

      \  if (j == 1 && k != 11) {\r

      \    return i + \"st\";\r

      \  }\r

      \  if (j == 2 && k != 12) {\r

      \    return i + \"nd\";\r

      \  }\r

      \  if (j == 3 && k != 13) {\r

      \    return i + \"rd\";\r

      \  }\r

      \  return i + \"th\";\r

      }\r\n"
    sig: function ordinal_suffix_of(i){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  replaceAll:
    name: replaceAll
    code: "function replaceAll(str, sSub, sBy) {\r

      \  let regex = new RegExp(sSub, 'g');\r

      \  return str.replace(regex, sBy);\r

      }\r\n"
    sig: function replaceAll(str, sSub, sBy){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replaceAllX:
    name: replaceAllX
    code: "function replaceAllX(str, sSub, sBy) { return replaceAllSpecialChars(str,
      sSub, sBy); }\r\n"
    sig: function replaceAllX(str, sSub, sBy){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replaceAllSpecialChars:
    name: replaceAllSpecialChars
    code: "function replaceAllSpecialChars(str, sSub, sBy) { return
      str.split(sSub).join(sBy); }\r\n"
    sig: function replaceAllSpecialChars(str, sSub, sBy){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replaceAtString:
    name: replaceAtString
    code: "function replaceAtString(s, i, ssub) { return s.substring(0, i) + ssub +
      s.substring(i + 1); }\r\n"
    sig: function replaceAtString(s, i, ssub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replaceEvery:
    name: replaceEvery
    code: "function replaceEvery(w, letter, nth) {\r

      \  let res = '';\r

      \  for (let i = 1; i < w.length; i += 2) {\r

      \    res += letter;\r

      \    res += w[i];\r

      \  }\r

      \  if (w.length % 2) res += w[0];\r

      \  return res;\r

      }\r\n"
    sig: function replaceEvery(w, letter, nth){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replaceFractionOfWordBy:
    name: replaceFractionOfWordBy
    code: "function replaceFractionOfWordBy(w, letter = 'w', fr = .5) {\r

      \  let len = Math.ceil(w.length * fr);\r

      \  let len1 = Math.floor(w.length * fr);\r

      \  let sub = letter.repeat(len);\r

      \  w = sub + w.substring(0, len1);\r

      \  return w;\r

      }\r\n"
    sig: function replaceFractionOfWordBy(w, letter = 'w', fr = .5){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  removeNonAlphanum:
    name: removeNonAlphanum
    code: "function removeNonAlphanum(s) {\r

      \  let res = '';\r

      \  let nonalphas = '';\r

      \  for (const l of s) {\r

      \    if (isAlphaNumeric(l)) res += l; else nonalphas += l;\r

      \  }\r

      \  return { alphas: res, whites: nonalphas };\r

      }\r\n"
    sig: function removeNonAlphanum(s){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  reverseString:
    name: reverseString
    code: "function reverseString(s) {\r

      \  return toLetterList(s).reverse().join('');\r

      }\r\n"
    sig: function reverseString(s){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  sameCaseInsensitive:
    name: sameCaseInsensitive
    code: "function sameCaseInsensitive(s1, s2) {\r

      \  return s1.toLowerCase() == s2.toLowerCase();\r

      }\r\n"
    sig: function sameCaseInsensitive(s1, s2){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  splitAtAnyOf:
    name: splitAtAnyOf
    code: "function splitAtAnyOf(s, sep) {\r

      \  let arr = [], w = '';\r

      \  for (let i = 0; i < s.length; i++) {\r

      \    let ch = s[i];\r

      \    if (sep.includes(ch)) {\r

      \      if (!isEmpty(w)) arr.push(w);\r

      \      w = '';\r

      \    } else {\r

      \      w += ch;\r

      \    }\r

      \  }\r

      \  if (!isEmpty(w)) arr.push(w);\r

      \  return arr;\r

      }\r\n"
    sig: function splitAtAnyOf(s, sep){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  startsWith:
    name: startsWith
    code: "function startsWith(s, sSub) {\r

      \  return s.substring(0, sSub.length) == sSub;\r

      }\r\n"
    sig: function startsWith(s, sSub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stringAfter:
    name: stringAfter
    code: "function stringAfter(sFull, sSub) {\r

      \  let idx = sFull.indexOf(sSub);\r

      \  if (idx < 0) return '';\r

      \  return sFull.substring(idx + sSub.length);\r

      }\r\n"
    sig: function stringAfter(sFull, sSub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stringAfterLast:
    name: stringAfterLast
    code: "function stringAfterLast(sFull, sSub) {\r

      \  let parts = sFull.split(sSub);\r

      \  return arrLast(parts);\r

      }\r\n"
    sig: function stringAfterLast(sFull, sSub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stringBefore:
    name: stringBefore
    code: "function stringBefore(sFull, sSub) {\r

      \  let idx = sFull.indexOf(sSub);\r

      \  if (idx < 0) return sFull;\r

      \  return sFull.substring(0, idx);\r

      }\r\n"
    sig: function stringBefore(sFull, sSub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stringBeforeLast:
    name: stringBeforeLast
    code: "function stringBeforeLast(sFull, sSub) {\r

      \  let parts = sFull.split(sSub);\r

      \  return sFull.substring(0, sFull.length - arrLast(parts).length -
      1);\r

      }\r\n"
    sig: function stringBeforeLast(sFull, sSub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stringBetween:
    name: stringBetween
    code: "function stringBetween(sFull, sStart, sEnd) {\r

      \  return stringBefore(stringAfter(sFull, sStart), isdef(sEnd) ?
      sEnd : sStart);\r

      }\r\n"
    sig: function stringBetween(sFull, sStart, sEnd){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stringBetweenLast:
    name: stringBetweenLast
    code: "function stringBetweenLast(sFull, sStart, sEnd) {\r

      \  let s1 = stringBeforeLast(sFull, isdef(sEnd) ? sEnd : sStart);\r

      \  return stringAfterLast(s1, sStart);\r

      }\r\n"
    sig: function stringBetweenLast(sFull, sStart, sEnd){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  substringOfMinLength:
    name: substringOfMinLength
    code: "function substringOfMinLength(s, minStartIndex, minLength) {\r

      \  let res = s.substring(minStartIndex).trim();\r

      \  let i = 0;\r

      \  let res1 = '';\r

      \  while (res1.trim().length < minLength && i < res.length) { res1
      += res[i]; i += 1; }\r

      \  return res1.trim();\r

      }\r\n"
    sig: function substringOfMinLength(s, minStartIndex, minLength){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  lettersToArray:
    name: lettersToArray
    code: "function lettersToArray(s) { return toLetterList(s); }\r\n"
    sig: function lettersToArray(s){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  toLetterArray:
    name: toLetterArray
    code: "function toLetterArray(s) { return toLetterList(s); }\r\n"
    sig: function toLetterArray(s){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  toLetterList:
    name: toLetterList
    code: "function toLetterList(s) { return [...s]; }\r\n"
    sig: function toLetterList(s){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  toLetters:
    name: toLetters
    code: "function toLetters(s) { return [...s]; }\r\n"
    sig: function toLetters(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toNoun:
    name: toNoun
    code: "function toNoun(s) { return capitalize(s.toLowerCase()); }\r\n"
    sig: function toNoun(s){}
    region: string (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  formatNow:
    name: formatNow
    code: "function formatNow() { return new Date().toISOString().slice(0,
      19).replace(\"T\", \" \"); }\r\n"
    sig: function formatNow(){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  formatDate3:
    name: formatDate3
    code: "function formatDate3(d) { if (nundef(d)) d = new Date(); return
      d.toISOString().slice(0, 19).replace(/-/g, \"/\").replace(\"T\", \" \");
      }\r\n"
    sig: function formatDate3(d){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  formatDate2:
    name: formatDate2
    code: "function formatDate2(d) { if (nundef(d)) d = new Date(); return
      d.toISOString().slice(0, 19).replace(\"T\", \" \"); }\r\n"
    sig: function formatDate2(d){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  formatDate1:
    name: formatDate1
    code: "function formatDate1(d) {\r

      \  if (nundef(d)) d = Date.now();\r

      \  let ye = new Intl.DateTimeFormat('en', { year: 'numeric'
      }).format(d);\r

      \  let mo = new Intl.DateTimeFormat('en', { month: 'short'
      }).format(d);\r

      \  let da = new Intl.DateTimeFormat('en', { day: '2-digit'
      }).format(d);\r

      \  return `${da}-${mo}-${ye}`;\r

      }\r\n"
    sig: function formatDate1(d){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  formatDate:
    name: formatDate
    code: "function formatDate(d) {\r

      \  const date = isdef(d) ? d : new Date();\r

      \  const month = ('0' + date.getMonth()).slice(0, 2);\r

      \  const day = date.getDate();\r

      \  const year = date.getFullYear();\r

      \  const dateString = `${month}/${day}/${year}`;\r

      \  return dateString;\r

      }\r\n"
    sig: function formatDate(d){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  format2Digits:
    name: format2Digits
    code: "function format2Digits(i) { return (i < 10) ? \"0\" + i : i; }\r\n"
    sig: function format2Digits(i){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  msNow:
    name: msNow
    code: "function msNow() { return Date.now(); }\r\n"
    sig: function msNow(){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  msToTime:
    name: msToTime
    code: "function msToTime(ms) {\r

      \  let secs = Math.floor(ms / 1000);\r

      \  let mins = Math.floor(secs / 60);\r

      \  secs = secs - mins * 60;\r

      \  let hours = Math.floor(mins / 60);\r

      \  mins = mins - hours * 60;\r

      \  return { h: hours, m: mins, s: secs };\r

      }\r\n"
    sig: function msToTime(ms){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  format_datetime:
    name: format_datetime
    code: "function format_datetime(timestamp, str = 'y-m-d_h:i:s.r') {\r

      \  if (isString(timestamp)) timestamp = Number(timestamp);\r

      \  const plus0 = num => `0${num.toString()}`.slice(-2)\r

      \  const d = new Date(timestamp)\r

      \  const year = d.getFullYear()\r

      \  const monthTmp = d.getMonth() + 1\r

      \  const month = plus0(monthTmp)\r

      \  const date = plus0(d.getDate())\r

      \  const hour = plus0(d.getHours())\r

      \  const minute = plus0(d.getMinutes())\r

      \  const second = plus0(d.getSeconds())\r

      \  const rest = timestamp.toString().slice(-5)\r

      \  let res = '';\r

      \  str = str.toLowerCase();\r

      \  for (let i = 0; i < str.length; i++) {\r

      \    let ch = str[i];\r

      \    res += (ch == 'y' ? year : ch == 'm' ? month : ch == 'd' ? date
      : ch == 'h' ? hour : ch == 'i' ? minute : ch == 's' ? second : ch == 'r' ?
      rest : ch);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function format_datetime(timestamp, str = 'y-m-d_h:i:s.r'){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  msElapsedSince:
    name: msElapsedSince
    code: "function msElapsedSince(msStart) { return Date.now() - msStart; }\r\n"
    sig: function msElapsedSince(msStart){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  timeToMs:
    name: timeToMs
    code: "function timeToMs(h, m, s) { return ((((h * 60) + m) * 60) + s) * 1000;
      }\r\n"
    sig: function timeToMs(h, m, s){}
    region: time (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  buildNewSyms:
    name: buildNewSyms
    code: "function buildNewSyms() {\r

      \  let newSyms = {};\r

      \  for (const k of KeySets.all) {\r

      \    let info = Syms[k];\r

      \    console.log(info)\r

      \    delete info.w;\r

      \    delete info.h;\r

      \    let old = symbolDict[k];\r

      \    console.log('old symbol:', old);\r

      \    if (isdef(old)) {\r

      \      addIf(info.cats, old.group);\r

      \      addIf(info.cats, old.subgroups);\r

      \    }\r

      \    newSyms[k] = Syms[k];\r

      \  }\r

      \  downloadAsYaml(newSyms, 'newSyms')\r

      }\r\n"
    sig: function buildNewSyms(){}
    region: asset (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  allElementsFromPoint:
    name: allElementsFromPoint
    code: "function allElementsFromPoint(x, y) {\r

      \  var element, elements = [];\r

      \  var old_visibility = [];\r

      \  while (true) {\r

      \    element = document.elementFromPoint(x, y);\r

      \    if (!element || element === document.documentElement) {\r

      \      break;\r

      \    }\r

      \    elements.push(element);\r

      \    old_visibility.push(element.style.visibility);\r

      \    element.style.visibility = 'hidden'; \r

      \  }\r

      \  for (var k = 0; k < elements.length; k++) {\r

      \    elements[k].style.visibility = old_visibility[k];\r

      \  }\r

      \  elements.reverse();\r

      \  return elements;\r

      }\r\n"
    sig: function allElementsFromPoint(x, y){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  clearElement:
    name: clearElement
    code: "function clearElement(elem) {\r

      \  if (isString(elem)) elem = document.getElementById(elem);\r

      \  if (window.jQuery == undefined) { elem.innerHTML = ''; return
      elem; }\r

      \  while (elem.firstChild) {\r

      \    $(elem.firstChild).remove();\r

      \  }\r

      \  return elem;\r

      }\r\n"
    sig: function clearElement(elem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  convertUmlaute:
    name: convertUmlaute
    code: "function convertUmlaute(w) {\r

      \  w = replaceAll(w, 'ue', 'ü');\r

      \  w = replaceAll(w, 'ae', 'ä');\r

      \  w = replaceAll(w, 'oe', 'ö');\r

      \  w = replaceAll(w, 'UE', 'Ü');\r

      \  w = replaceAll(w, 'AE', 'Ä');\r

      \  w = replaceAll(w, 'OE', 'Ö');\r

      \  w = replaceAll(w, 'ß', 'ss');\r

      \  return w;\r

      }\r\n"
    sig: function convertUmlaute(w){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  createElementFromHtml:
    name: createElementFromHtml
    code: "function createElementFromHtml(s) { return createElementFromHTML(s);
      }\r\n"
    sig: function createElementFromHtml(s){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  createElementFromHTML:
    name: createElementFromHTML
    code: "function createElementFromHTML(htmlString) {\r

      \  var div = document.createElement('div');\r

      \  div.innerHTML = htmlString.trim();\r

      \  return div.firstChild;\r

      }\r\n"
    sig: function createElementFromHTML(htmlString){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  divInt:
    name: divInt
    code: "function divInt(a, b) { return Math.trunc(a / b); }\r\n"
    sig: function divInt(a, b){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  errlog:
    name: errlog
    code: "function errlog() { console.log('ERROR!', ...arguments); }\r\n"
    sig: function errlog(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  evNoBubble:
    name: evNoBubble
    code: "function evNoBubble(ev) { ev.preventDefault(); ev.cancelBubble = true;
      }\r\n"
    sig: function evNoBubble(ev){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  evToClass:
    name: evToClass
    code: "function evToClass(ev, className) {\r

      \  let elem = findParentWithClass(className);\r

      \  return elem;\r

      }\r\n"
    sig: function evToClass(ev, className){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  evToClosestId:
    name: evToClosestId
    code: "function evToClosestId(ev) {\r

      \  let elem = findParentWithId(ev.target);\r

      \  return elem.id;\r

      }\r\n"
    sig: function evToClosestId(ev){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  evToId:
    name: evToId
    code: "function evToId(ev) {\r

      \  let elem = findParentWithId(ev.target);\r

      \  return elem.id;\r

      }\r\n"
    sig: function evToId(ev){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  evToProp:
    name: evToProp
    code: "function evToProp(ev, prop) {\r

      \  let x = ev.target;\r

      \  while (isdef(x) && nundef(x.getAttribute(prop))) x =
      x.parentNode;\r

      \  return isdef(x) ? x.getAttribute(prop) : null;\r

      }\r\n"
    sig: function evToProp(ev, prop){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  evToTargetAttribute:
    name: evToTargetAttribute
    code: "function evToTargetAttribute(ev, attr) {\r

      \  let val = ev.target.getAttribute(attr);\r

      \  if (nundef(val)) { val = ev.target.parentNode.getAttribute(attr);
      }\r

      \  return val;\r

      }\r\n"
    sig: function evToTargetAttribute(ev, attr){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findAttributeInAncestors:
    name: findAttributeInAncestors
    code: "function findAttributeInAncestors(elem, attr) {\r

      \  let val;\r

      \  while (elem && nundef(val = elem.getAttribute(attr))) { elem =
      elem.parentNode; }\r

      \  return val;\r

      }\r\n"
    sig: function findAttributeInAncestors(elem, attr){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findParentWithClass:
    name: findParentWithClass
    code: "function findParentWithClass(elem, className) { while (elem &&
      !mHasClass(elem, className)) { elem = elem.parentNode; } return elem;
      }\r\n"
    sig: function findParentWithClass(elem, className){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findParentWithId:
    name: findParentWithId
    code: "function findParentWithId(elem) { while (elem && !(elem.id)) { elem =
      elem.parentNode; } return elem; }\r\n"
    sig: function findParentWithId(elem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findAncestorElemWithParentOfType:
    name: findAncestorElemWithParentOfType
    code: "function findAncestorElemWithParentOfType(el, type) {\r

      \  while (el && el.parentNode) {\r

      \    let t = getTypeOf(el);\r

      \    let tParent = getTypeOf(el.parentNode);\r

      \    if (tParent == type) break;\r

      \    el = el.parentNode;\r

      \  }\r

      \  return el;\r

      }\r\n"
    sig: function findAncestorElemWithParentOfType(el, type){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findAncestorElemOfType:
    name: findAncestorElemOfType
    code: "function findAncestorElemOfType(el, type) {\r

      \  while (el) {\r

      \    let t = getTypeOf(el);\r

      \    if (t == type) break;\r

      \    el = el.parentNode;\r

      \  }\r

      \  return el;\r

      }\r\n"
    sig: function findAncestorElemOfType(el, type){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findDescendantWithId:
    name: findDescendantWithId
    code: "function findDescendantWithId(id, parent) {\r

      \  if (parent.id == id) return parent;\r

      \  let children = arrChildren(parent);\r

      \  if (isEmpty(children)) return null;\r

      \  for (const ch of children) {\r

      \    let res = findDescendantWithId(id, ch);\r

      \    if (res) return res;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function findDescendantWithId(id, parent){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findChildWithId:
    name: findChildWithId
    code: "function findChildWithId(id, parentElem) {\r

      \  testHelpers(parentElem);\r

      \  let children = arrChildren(parentElem);\r

      \  for (const ch of children) {\r

      \    if (ch.id == id) return ch;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function findChildWithId(id, parentElem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findChildWithClass:
    name: findChildWithClass
    code: "function findChildWithClass(className, parentElem) {\r

      \  testHelpers(parentElem);\r

      \  let children = arrChildren(parentElem);\r

      \  for (const ch of children) {\r

      \    if (ch.classList.includes(className)) return ch;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function findChildWithClass(className, parentElem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findChildOfType:
    name: findChildOfType
    code: "function findChildOfType(type, parentElem) {\r

      \  let children = arrChildren(parentElem);\r

      \  for (const ch of children) {\r

      \    if (getTypeOf(ch) == type) return ch;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function findChildOfType(type, parentElem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findChildrenOfType:
    name: findChildrenOfType
    code: "function findChildrenOfType(type, parentElem) {\r

      \  let children = arrChildren(parentElem);\r

      \  let res = [];\r

      \  for (const ch of children) {\r

      \    if (getTypeOf(ch) == type) res.push(ch);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function findChildrenOfType(type, parentElem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hasWhiteSpace:
    name: hasWhiteSpace
    code: "function hasWhiteSpace(s) { return /\\s/g.test(s); }\r\n"
    sig: function hasWhiteSpace(s){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hide:
    name: hide
    code: "function hide(elem) {\r

      \  if (isString(elem)) elem = document.getElementById(elem);\r

      \  if (nundef(elem)) return;\r

      \  if (isSvg(elem)) {\r

      \    elem.setAttribute('style', 'visibility:hidden;display:none');\r

      \  } else {\r

      \    elem.style.display = 'none';\r

      \  }\r

      }\r\n"
    sig: function hide(elem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getBaseLog:
    name: getBaseLog
    code: "function getBaseLog(x, b) { return Math.log(x) / Math.log(b); }\r\n"
    sig: function getBaseLog(x, b){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getDivisors:
    name: getDivisors
    code: "function getDivisors(n) {\r

      \  let x = Math.floor(Math.sqrt(n));\r

      \  let res = [];\r

      \  for (let i = 2; i <= x; i++) {\r

      \    let q = n / i;\r

      \    if (q == Math.round(q)) res.push(i);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function getDivisors(n){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getTypeOf:
    name: getTypeOf
    code: "function getTypeOf(param) {\r

      \  let type = typeof param;\r

      \  if (type == 'string') {\r

      \    return 'string';\r

      \  }\r

      \  if (type == 'object') {\r

      \    type = param.constructor.name;\r

      \    if (startsWith(type, 'SVG')) type =
      stringBefore(stringAfter(type, 'SVG'), 'Element').toLowerCase();\r

      \    else if (startsWith(type, 'HTML')) type =
      stringBefore(stringAfter(type, 'HTML'), 'Element').toLowerCase();\r

      \  }\r

      \  let lType = type.toLowerCase();\r

      \  if (lType.includes('event')) type = 'event';\r

      \  return type;\r

      }\r\n"
    sig: function getTypeOf(param){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getVerticalOverflow:
    name: getVerticalOverflow
    code: "function getVerticalOverflow(element) { return element.scrollHeight -
      element.clientHeight; }\r\n"
    sig: function getVerticalOverflow(element){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getVisibleChild:
    name: getVisibleChild
    code: "function getVisibleChild(id) { for (const ch of mBy(id).children) if
      (ch.style.display != 'none') return ch.id; }\r\n"
    sig: function getVisibleChild(id){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  isAlphaNum:
    name: isAlphaNum
    code: "function isAlphaNum(s) { query = /^[a-zA-Z0-9]+$/; return query.test(s);
      }\r\n"
    sig: function isAlphaNum(s){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isAlphaNumeric:
    name: isAlphaNumeric
    code: "function isAlphaNumeric(str) {\r

      \  var code, i, len;\r

      \  for (i = 0, len = str.length; i < len; i++) {\r

      \    code = str.charCodeAt(i);\r

      \    if (!(code > 47 && code < 58) && \r

      \      !(code > 64 && code < 91) && \r

      \      !(code > 96 && code < 123) && str[i] != '_') { \r

      \      return false;\r

      \    }\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function isAlphaNumeric(str){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  isCapitalLetter:
    name: isCapitalLetter
    code: "function isCapitalLetter(s) { return /^[A-Z]$/i.test(s); }\r\n"
    sig: function isCapitalLetter(s){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  isCapitalLetterOrDigit:
    name: isCapitalLetterOrDigit
    code: "function isCapitalLetterOrDigit(s) { return /^[A-Z0-9ÖÄÜ]$/i.test(s);
      }\r\n"
    sig: function isCapitalLetterOrDigit(s){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  isGermanColorName:
    name: isGermanColorName
    code: "function isGermanColorName(s) { return isColorName(s) ||
      isdef(GermanToEnglish[s]) && isColorName(GermanToEnglish[s]); }\r\n"
    sig: function isGermanColorName(s){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  isColorName:
    name: isColorName
    code: "function isColorName(s) { ensureColorNames(); return
      (isdef(ColorNames[s.toLowerCase()])); }\r\n"
    sig: function isColorName(s){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  isdef:
    name: isdef
    code: "function isdef(x) { return x !== null && x !== undefined; }\r\n"
    sig: function isdef(x){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isDOM:
    name: isDOM
    code: "function isDOM(x) { let c = lookup(x, ['constructor', 'name']); return c
      ? startsWith(c, 'HTML') || startsWith(c, 'SVG') : false; }\r\n"
    sig: function isDOM(x){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isDict:
    name: isDict
    code: "function isDict(d) { let res = (d !== null) && (typeof (d) == 'object')
      && !isList(d); return res; }\r\n"
    sig: function isDict(d){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isDictOrList:
    name: isDictOrList
    code: "function isDictOrList(d) { return typeof (d) == 'object'; }\r\n"
    sig: function isDictOrList(d){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isDigit:
    name: isDigit
    code: "function isDigit(s) { return /^[0-9]$/i.test(s); }\r\n"
    sig: function isDigit(s){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isEmpty:
    name: isEmpty
    code: "function isEmpty(arr) {\r

      \  return arr === undefined || !arr\r

      \    || (isString(arr) && (arr == 'undefined' || arr == ''))\r

      \    || (Array.isArray(arr) && arr.length == 0)\r

      \    || Object.entries(arr).length === 0;\r

      }\r\n"
    sig: function isEmpty(arr){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isEmptyOrWhiteSpace:
    name: isEmptyOrWhiteSpace
    code: "function isEmptyOrWhiteSpace(s) { return isEmpty(s.trim()); }\r\n"
    sig: function isEmptyOrWhiteSpace(s){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isLetter:
    name: isLetter
    code: "function isLetter(s) { return /^[a-zA-Z]$/i.test(s); }\r\n"
    sig: function isLetter(s){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isList:
    name: isList
    code: "function isList(arr) { return Array.isArray(arr); }\r\n"
    sig: function isList(arr){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isLiteral:
    name: isLiteral
    code: "function isLiteral(x) { return isString(x) || isNumber(x); }\r\n"
    sig: function isLiteral(x){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isNumber:
    name: isNumber
    code: "function isNumber(x) { return x !== ' ' && x !== true && x !== false &&
      isdef(x) && (x == 0 || !isNaN(+x)); }\r\n"
    sig: function isNumber(x){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isSingleDigit:
    name: isSingleDigit
    code: "function isSingleDigit(s) { return /^[0-9]$/i.test(s); }\r\n"
    sig: function isSingleDigit(s){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  isString:
    name: isString
    code: "function isString(param) { return typeof param == 'string'; }\r\n"
    sig: function isString(param){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isSvg:
    name: isSvg
    code: "function isSvg(elem) { return startsWith(elem.constructor.name, 'SVG');
      }\r\n"
    sig: function isSvg(elem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isVisible:
    name: isVisible
    code: "function isVisible(elem) {\r

      \  if (isString(elem)) elem = document.getElementById(elem);\r

      \  let x = elem.style.flex;\r

      \  return (elem.style.display != 'none' || elem.offsetParent !==
      null) && (nundef(elem.style.flex) || !endsWith(elem.style.flex, '0%'));\r

      }\r\n"
    sig: function isVisible(elem){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isWhiteSpace:
    name: isWhiteSpace
    code: "function isWhiteSpace(ch) { return /\\s/.test(ch) }\r\n"
    sig: function isWhiteSpace(ch){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isWhiteSpace2:
    name: isWhiteSpace2
    code: "function isWhiteSpace2(ch) {\r

      \  const alphanum =
      '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\r

      \  return !alphanum.includes(ch);\r

      }\r\n"
    sig: function isWhiteSpace2(ch){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isWhiteSpaceString:
    name: isWhiteSpaceString
    code: "function isWhiteSpaceString(s) { return isEmptyOrWhiteSpace(s); }\r\n"
    sig: function isWhiteSpaceString(s){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isOverflown:
    name: isOverflown
    code: "function isOverflown(element) {\r

      \  return element.scrollHeight > element.clientHeight ||
      element.scrollWidth > element.clientWidth;\r

      }\r\n"
    sig: function isOverflown(element){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  jsCopy:
    name: jsCopy
    code: "function jsCopy(o) { return JSON.parse(JSON.stringify(o)); }\r\n"
    sig: function jsCopy(o){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  jsSafeStringify:
    name: jsSafeStringify
    code: "function jsSafeStringify(obj, indent = 2) {\r

      \  let cache = [];\r

      \  const retVal = JSON.stringify(\r

      \    obj,\r

      \    (key, value) =>\r

      \      typeof value === \"object\" && value !== null\r

      \        ? cache.includes(value)\r

      \          ? undefined \r

      \          : cache.push(value) && value \r

      \        : value,\r

      \    indent\r

      \  );\r

      \  cache = null;\r

      \  return retVal;\r

      };\r\n"
    sig: function jsSafeStringify(obj, indent = 2){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  jsCopySafe:
    name: jsCopySafe
    code: "function jsCopySafe(o) { return JSON.parse(JSON.stringify(jsClean(o)));
      }\r\n"
    sig: function jsCopySafe(o){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  makeUnitString:
    name: makeUnitString
    code: "function makeUnitString(nOrString, unit = 'px', defaultVal = '100%') {\r

      \  if (nundef(nOrString)) return defaultVal;\r

      \  if (isNumber(nOrString)) nOrString = '' + nOrString + unit;\r

      \  return nOrString;\r

      }\r\n"
    sig: function makeUnitString(nOrString, unit = 'px', defaultVal = '100%'){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  normalize:
    name: normalize
    code: "function normalize(text, language) {\r

      \  if (isEmpty(text)) return '';\r

      \  text = text.toLowerCase().trim();\r

      \  if (language == 'D') {\r

      \    text = convertUmlaute(text);\r

      \  }\r

      \  return text;\r

      }\r\n"
    sig: function normalize(text, language){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  nundef:
    name: nundef
    code: "function nundef(x) { return x === null || x === undefined; }\r\n"
    sig: function nundef(x){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  purge:
    name: purge
    code: "function purge(elem) {\r

      \  var a = elem.attributes, i, l, n;\r

      \  if (a) {\r

      \    for (i = a.length - 1; i >= 0; i -= 1) {\r

      \      n = a[i].name;\r

      \      if (typeof elem[n] === 'function') {\r

      \        elem[n] = null;\r

      \      }\r

      \    }\r

      \  }\r

      \  a = elem.childNodes;\r

      \  if (a) {\r

      \    l = a.length;\r

      \    for (i = a.length - 1; i >= 0; i -= 1) {\r

      \      purge(elem.childNodes[i]);\r

      \    }\r

      \  }\r

      \  elem.remove(); \r

      }\r\n"
    sig: function purge(elem){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  setCSSVariable:
    name: setCSSVariable
    code: "function setCSSVariable(varName, val) {\r

      \  let root = document.documentElement;\r

      \  root.style.setProperty(varName, val);\r

      }\r\n"
    sig: function setCSSVariable(varName, val){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  setCssVar:
    name: setCssVar
    code: "function setCssVar(varname, val) {
      document.body.style.setProperty(varname, val); }\r\n"
    sig: function setCssVar(varname, val){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getCssVar:
    name: getCssVar
    code: "function getCssVar(varname) { return
      getComputedStyle(document.body).getPropertyValue(varname); }\r\n"
    sig: function getCssVar(varname){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getCSSVariable:
    name: getCSSVariable
    code: "function getCSSVariable(varname) { return getCssVar(varname); } \r\n"
    sig: function getCSSVariable(varname){}
    region: misc (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  show:
    name: show
    code: "function show(elem, isInline = false) {\r

      \  if (isString(elem)) elem = document.getElementById(elem);\r

      \  if (isSvg(elem)) {\r

      \    elem.setAttribute('style', 'visibility:visible');\r

      \  } else {\r

      \    elem.style.display = isInline ? 'inline-block' : null;\r

      \  }\r

      \  return elem;\r

      }\r\n"
    sig: function show(elem, isInline = false){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  valf:
    name: valf
    code: "function valf() {\r

      \  for (const arg of arguments) if (isdef(arg)) return arg;\r

      \  return null;\r

      }\r\n"
    sig: function valf(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getUID:
    name: getUID
    code: "function getUID(pref = '') {\r

      \  UIDCounter += 1;\r

      \  return pref + '_' + UIDCounter;\r

      }\r\n"
    sig: function getUID(pref = ''){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getFruid:
    name: getFruid
    code: "function getFruid(pref = '') {\r

      \  const alpha =
      'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r

      \  FRUIDCounter += 1;\r

      \  if (FRUIDCounter < alpha.length) return pref +
      alpha[FRUIDCounter];\r

      \  return pref + FRUIDCounter - alpha.length;\r

      }\r\n"
    sig: function getFruid(pref = ''){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  resetUIDs:
    name: resetUIDs
    code: "function resetUIDs() { UIDCounter = 0; FRUIDCounter = -1; }\r\n"
    sig: function resetUIDs(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  collectPropFromCss:
    name: collectPropFromCss
    code: "function collectPropFromCss(prop) {\r

      \  const styles = document.styleSheets;\r

      \  let cssArr = [...styles[0].cssRules].map(x => ({\r

      \    class: x.selectorText,\r

      \    color: rgbToHex(x.style[prop]),\r

      \  }));\r

      \  return cssArr;\r

      }\r\n"
    sig: function collectPropFromCss(prop){}
    region: utilities (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  extractColorsFromCss:
    name: extractColorsFromCss
    code: "function extractColorsFromCss() {\r

      \  let arr = collectPropFromCss('background-color');\r

      \  var di = {};\r

      \  for (const o of arr) {\r

      \    let sarr = splitAtAnyOf(o.class, ' .-:,');\r

      \    let sColor = null;\r

      \    for (const w of sarr) {\r

      \      if (['w3', 'text', 'hover', 'border'].includes(w))
      continue;\r

      \      sColor = w;\r

      \      break;\r

      \    }\r

      \    if (sColor && o.color) {\r

      \      di[sColor] = o.color; //\"'\" + o.color + \"'\"; //'hallo';
      //o.color.toString();\r

      \    }\r

      \  }\r

      \  return di;\r

      }\r\n"
    sig: function extractColorsFromCss(){}
    region: utilities (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  createServerBoard:
    name: createServerBoard
    code: "function createServerBoard(layout, filename, rows, cols) {\r

      \  let sz = 100;\r

      \  return { filename: 'brett10', layout: 'hex', cells: { w: 100, h:
      120, wgap: 10, hgap: 10 } };\r

      }\r\n"
    sig: function createServerBoard(layout, filename, rows, cols){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  createServerPoolKeys:
    name: createServerPoolKeys
    code: "function createServerPoolKeys(perlenDict, settings = {}) { return
      getRandomPerlenKeys(perlenDict, valf(settings.numPool, 20)); }\r\n"
    sig: function createServerPoolKeys(perlenDict, settings = {}){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getRandomPerlenKeys:
    name: getRandomPerlenKeys
    code: "function getRandomPerlenKeys(di, n) { return choose(Object.keys(di), n);
      }\r\n"
    sig: function getRandomPerlenKeys(di, n){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  ensureKeys:
    name: ensureKeys
    code: "function ensureKeys(o, def) {\r

      \  addKeys(def, o);\r

      }\r\n"
    sig: function ensureKeys(o, def){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  initServerPool:
    name: initServerPool
    code: "function initServerPool(settings, state, perlenDict) {\r

      \  let pool = {};\r

      \  let poolArr = [];\r

      \  let maxPoolIndex = 0;\r

      \  addKeys(settings, { poolSelection: 'random', numPool: 20 });\r

      \  let n = settings.poolSelection != 'player' ? settings.numPool :
      0;\r

      \  let keys = getRandomPerlenKeys(perlenDict, n);\r

      \  for (const k of keys) {\r

      \    addToPool(pool, poolArr, perlenDict[k], maxPoolIndex);\r

      \    maxPoolIndex += 1;\r

      \  }\r

      \  state.pool = pool;\r

      \  state.poolArr = poolArr;\r

      \  return maxPoolIndex;\r

      }\r\n"
    sig: function initServerPool(settings, state, perlenDict){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  addToPool:
    name: addToPool
    code: "function addToPool(pool, poolArr, perle, index) {\r

      \  let p = pool[index] = { key: perle.key, index: index };\r

      \  poolArr.push(index);\r

      \  return p;\r

      }\r\n"
    sig: function addToPool(pool, poolArr, perle, index){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getFilename:
    name: getFilename
    code: "function getFilename(path, withExt = true) {\r

      \  let fname = stringAfterLast(path, '/');\r

      \  let name = stringBefore(fname, '.');\r

      \  let ext = stringAfter(fname, '.');\r

      \  if (isEmpty(ext)) ext = 'png';\r

      \  let result = withExt ? (name + '.' + ext) : name;\r

      \  console.log(`filename (ext:${withExt}): ${result}`);\r

      \  return result;\r

      }\r\n"
    sig: function getFilename(path, withExt = true){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  getPublicPath:
    name: getPublicPath
    code: "function getPublicPath(filename) {\r

      \  let result = './public/' + getFilename(filename);\r

      \  console.log('pubPath', result);\r

      \  return result;\r

      }\r\n"
    sig: function getPublicPath(filename){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  uploadImgData:
    name: uploadImgData
    code: "function uploadImgData(imgFile) {\r

      \  let pack = {};\r

      \  let data = imgFile.data;\r

      \  let filename = imgFile.name; console.log('filename', filename);\r

      \  let key = stringBefore(filename, '.');\r

      \  pack[key] = { data: data, name: key, filename: filename, type:
      'imageData' };\r

      \  Socket.emit('generalImages', { pack: pack });\r

      \  console.log('uploading pack', pack);\r

      }\r\n"
    sig: function uploadImgData(imgFile){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  previewBrowsedFile:
    name: previewBrowsedFile
    code: "function previewBrowsedFile(dParent, imgFile) {\r

      \  var imgView = document.createElement(\"div\");\r

      \  imgView.className = \"image-view\";\r

      \  mAppend(dParent, imgView);\r

      \  var img = document.createElement(\"img\");\r

      \  imgView.appendChild(img);\r

      \  var reader = new FileReader();\r

      \  reader.onload = function (e) {\r

      \    img.src = e.target.result;\r

      \    imgFile.data = e.target.result; \r

      \  }\r

      \  reader.readAsDataURL(imgFile);\r

      }\r\n"
    sig: function previewBrowsedFile(dParent, imgFile){}
    region: PerlenGame (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  dictToKeyList:
    name: dictToKeyList
    code: "function dictToKeyList(x) { return Object.keys(lst).join(' '); }\r\n"
    sig: function dictToKeyList(x){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  dictToValueList:
    name: dictToValueList
    code: "function dictToValueList(x) { return Object.values(lst).join(' '); }\r\n"
    sig: function dictToValueList(x){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  dictToKVList:
    name: dictToKVList
    code: "function dictToKVList(x) { return Object.entries(lst).join(' '); }\r\n"
    sig: function dictToKVList(x){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  dictOrListToString:
    name: dictOrListToString
    code: "function dictOrListToString(x, ifDict = 'keys') {\r

      \  let lst = x;\r

      \  if (isList(lst) && !isEmpty(lst)) { return lst.join(' '); }\r

      \  else if (isDict(lst)) {\r

      \    return ifDict == 'keys' ? Object.keys(lst).join(' ')\r

      \      : ifDict == 'values' ? Object.keys(lst).join(' ')\r

      \        : Object.entries(lst).join(' ');\r

      \  }\r

      \  else return null;\r

      }\r\n"
    sig: function dictOrListToString(x, ifDict = 'keys'){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  indexOfFuncMax:
    name: indexOfFuncMax
    code: "function indexOfFuncMax(arr, prop, f) {\r

      \  let max = null;\r

      \  let imax = null;\r

      \  for (const [i, v] of arr.entries()) {\r

      \    let val = isdef(prop) && isdef(v[prop]) ? v[prop] : v;\r

      \    if (isdef(f)) val = f(val);\r

      \    if (max == null || val > max) { max = val; imax = i }\r

      \  }\r

      \  return { i: imax, val: max };\r

      }\r\n"
    sig: function indexOfFuncMax(arr, prop, f){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  indexOfFuncMin:
    name: indexOfFuncMin
    code: "function indexOfFuncMin(arr, prop, f) {\r

      \  let min = null;\r

      \  let imax = null;\r

      \  for (const [i, v] of arr.entries()) {\r

      \    let val = isdef(prop) && isdef(v[prop]) ? v[prop] : v;\r

      \    if (isdef(f)) val = f(val);\r

      \    if (min == null || val < min) { min = val; imax = i }\r

      \  }\r

      \  return { i: imax, val: min };\r

      }\r\n"
    sig: function indexOfFuncMin(arr, prop, f){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  indexOfMax:
    name: indexOfMax
    code: "function indexOfMax(arr, prop) {\r

      \  let max = null;\r

      \  let imax = null;\r

      \  for (const [i, v] of arr.entries()) {\r

      \    if (prop) {\r

      \      if (max == null || v[prop] > max) {\r

      \        max = v[prop];\r

      \        imax = i;\r

      \      }\r

      \    } else {\r

      \      if (max == null || v > max) {\r

      \        max = v;\r

      \        imax = i;\r

      \      }\r

      \    }\r

      \  }\r

      \  return { i: imax, val: max };\r

      }\r\n"
    sig: function indexOfMax(arr, prop){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  indexOfMin:
    name: indexOfMin
    code: "function indexOfMin(arr, prop) {\r

      \  let min = null;\r

      \  let imin = null;\r

      \  for (const [i, v] of arr.entries()) {\r

      \    if (prop) {\r

      \      if (min == null || lookup(v, [prop]) < min) {\r

      \        min = v[prop];\r

      \        imin = i;\r

      \      }\r

      \    } else {\r

      \      if (min == null || v < min) {\r

      \        min = v;\r

      \        imin = i;\r

      \      }\r

      \    }\r

      \  }\r

      \  return { i: imin, val: min };\r

      }\r\n"
    sig: function indexOfMin(arr, prop){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  listToString:
    name: listToString
    code: "function listToString(lst) { return isEmpty(lst) ? lst : lst.join(' ');
      }\r\n"
    sig: function listToString(lst){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mNodeFilter:
    name: mNodeFilter
    code: "function mNodeFilter(o, { sort, dParent, title, lstFlatten, lstOmit,
      lstShow, className = 'node', omitEmpty = false } = {}) {\r

      \  let oCopy = !isEmpty(lstShow) ? filterByKey(o, lstShow) :
      jsCopySafe(o);\r

      \  if (isList(lstFlatten)) recConvertToSimpleList(oCopy,
      lstFlatten);\r

      \  if (nundef(lstOmit)) lstOmit = [];\r

      \  if (omitEmpty || !isEmpty(lstOmit)) oCopy = recDeleteKeys(oCopy,
      omitEmpty, lstOmit);\r

      \  let d = mCreate('div');\r

      \  if (isdef(className)) mClass(d, className);\r

      \  switch (sort) {\r

      \    case 'keys': oCopy = sortKeys(oCopy); break;\r

      \    case 'all': oCopy = JSON.sort(oCopy); break;\r

      \  }\r

      \  mYaml(d, oCopy);\r

      \  let pre = d.getElementsByTagName('pre')[0];\r

      \  pre.style.fontFamily = 'inherit';\r

      \  if (isdef(title)) mInsert(d, mText(title));\r

      \  if (isdef(dParent)) mAppend(dParent, d);\r

      \  return d;\r

      }\r\n"
    sig: function mNodeFilter(o, { sort, dParent, title, lstFlatten, lstOmit,
      lstShow, className = 'node', omitEmpty = false } = {}){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  presentNode:
    name: presentNode
    code: "function presentNode(o, title, area, lstFlatten, lstShow, lstOmit = [],
      lstOmitTopLevel = []) {\r

      \  if (!isEmpty(lstOmitTopLevel)) {\r

      \    let oNew = {};\r

      \    for (const k in o) {\r

      \      if (lstOmitTopLevel.includes(k)) continue;\r

      \      oNew[k] = o[k];\r

      \    }\r

      \    o = oNew;\r

      \  }\r

      \  addIf(lstOmit, 'act');\r

      \  addIf(lstOmit, 'ui');\r

      \  addIf(lstOmit, 'live');\r

      \  let d = isString(area) ? mBy(area) : area;\r

      \  mNodeFilter(o, { dParent: d, title: title, lstFlatten:
      lstFlatten, lstShow: lstShow, lstOmit: lstOmit });\r

      }\r\n"
    sig: function presentNode(o, title, area, lstFlatten, lstShow, lstOmit = [],
      lstOmitTopLevel = []){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  recConvertToList:
    name: recConvertToList
    code: "function recConvertToList(n, listOfProps) {\r

      \  if (isList(n)) { n.map(x => recConvertToList(x, listOfProps));
      }\r

      \  else if (isDict(n) && isList(listOfProps)) {\r

      \    for (const prop of listOfProps) {\r

      \      let lst = n[prop];\r

      \      if (isList(lst) && !isEmpty(lst)) { n[prop] = lst.join(' ');
      }\r

      \    }\r

      \    for (const k in n) { recConvertToList(n[k], listOfProps); }\r

      \  }\r

      }\r\n"
    sig: function recConvertToList(n, listOfProps){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  recConvertToSimpleList:
    name: recConvertToSimpleList
    code: "function recConvertToSimpleList(n, listOfProps) {\r

      \  if (isList(n)) { n.map(x => recConvertToList(x, listOfProps));
      }\r

      \  else if (isDict(n) && isList(listOfProps)) {\r

      \    for (const prop of listOfProps) {\r

      \      let conv = dictOrListToString(n[prop]);\r

      \      if (conv) n[prop] = conv;\r

      \    }\r

      \    for (const k in n) { recConvertToList(n[k], listOfProps); }\r

      \  }\r

      }\r\n"
    sig: function recConvertToSimpleList(n, listOfProps){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  recDeleteKeys:
    name: recDeleteKeys
    code: "function recDeleteKeys(o, deleteEmpty = true, omitProps) {\r

      \  if (isLiteral(o)) return o;\r

      \  else if (isList(o)) return o.map(x => recDeleteKeys(x,
      deleteEmpty, omitProps));\r

      \  let onew = {};\r

      \  for (const k in o) {\r

      \    if (omitProps.includes(k)) continue;\r

      \    if (isLiteral(o[k]) || !isEmpty(o[k])) {\r

      \      onew[k] = recDeleteKeys(jsCopy(o[k]), deleteEmpty,
      omitProps);\r

      \    } else {\r

      \    }\r

      \  }\r

      \  return onew;\r

      }\r\n"
    sig: function recDeleteKeys(o, deleteEmpty = true, omitProps){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  sortKeysNonRecursive:
    name: sortKeysNonRecursive
    code: "function sortKeysNonRecursive(o) {\r

      \  if (Array.isArray(o)) {\r

      \    return o.map(sortKeysNonRecursive); \r

      \  } else if (isObject(o)) {\r

      \    return Object\r

      \      .keys(o)\r

      \      .sort()\r

      \      .reduce(function (a, k) {\r

      \        a[k] = o[k];\r

      \        return a;\r

      \      }, {});\r

      \  }\r

      \  return o;\r

      }\r\n"
    sig: function sortKeysNonRecursive(o){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  sortKeysNonRecursiveDescending:
    name: sortKeysNonRecursiveDescending
    code: "function sortKeysNonRecursiveDescending(o) {\r

      \  if (Array.isArray(o)) {\r

      \    return o.map(sortKeysNonRecursiveDescending); \r

      \  } else if (isObject(o)) {\r

      \    return Object\r

      \      .keys(o)\r

      \      .reverse()\r

      \      .reduce(function (a, k) {\r

      \        a[k] = o[k];\r

      \        return a;\r

      \      }, {});\r

      \  }\r

      \  return o;\r

      }\r\n"
    sig: function sortKeysNonRecursiveDescending(o){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  sortKeys:
    name: sortKeys
    code: "function sortKeys(o) {\r

      \  if (Array.isArray(o)) {\r

      \    return o.map(sortKeys); \r

      \  } else if (isObject(o)) {\r

      \    return Object\r

      \      .keys(o)\r

      \      .sort()\r

      \      .reduce(function (a, k) {\r

      \        a[k] = sortKeys(o[k]);\r

      \        return a;\r

      \      }, {});\r

      \  }\r

      \  return o;\r

      }\r\n"
    sig: function sortKeys(o){}
    region: TO (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  mCircle:
    name: mCircle
    code: "function mCircle(dParent, x, y, rad, color) {\r

      \  let d = mDiv(dParent, { w: 2 * rad, h: 2 * rad, bg: color,
      rounding: '50%' });\r

      \  mCenterAt(d, x, y);\r

      \  return d;\r

      }\r\n"
    sig: function mCircle(dParent, x, y, rad, color){}
    region: m (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  ajaxPostCors:
    name: ajaxPostCors
    code: "async function ajaxPostCors(url, data, type, handle_result) {\r

      \  data.data_type = type;\r

      \  var formData = new FormData();\r

      \  for (const k in data) {\r

      \    formData.append(k, data[k]);\r

      \  }\r

      \  let h = new Headers();\r

      \  h.append('Accept', 'application/text');\r

      \  var resp = await fetch(url, {\r

      \    method: 'POST',\r

      \    mode: 'cors', \r

      \    headers: h,\r

      \    body: formData,\r

      \  });\r

      \  let result = await resp.text();\r

      \  try {\r

      \    let jsonResult = JSON.parse(result);\r

      \    if (isdef(handle_result)) handle_result(jsonResult); \r

      \  } catch {\r

      \    if (isdef(handle_result)) handle_result({ message: result });
      \r

      \  }\r

      }\r\n"
    sig: async function ajaxPostCors(url, data, type, handle_result){}
    region: ajax (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\belinda\js\base.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121046.8196
    size: 188450
  propertyGiverW0:
    name: propertyGiverW0
    code: "function propertyGiverW0(o, prop, setter) {\r

      \  Object.defineProperty(o, prop, {\r

      \    get: function () { return this.val; },\r

      \    set: function (val) { setter(val); }\r

      \  });\r

      }\r\n"
    sig: function propertyGiverW0(o, prop, setter){}
    region: programming (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  propertyGiver:
    name: propertyGiver
    code: "function propertyGiver(o, prop, setter, getter) {\r

      \  Object.defineProperty(o, prop, {\r

      \    get: function () { return getter(); },\r

      \    set: function (val) { setter(val); }\r

      \  });\r

      }\r\n"
    sig: function propertyGiver(o, prop, setter, getter){}
    region: programming (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  visualPropertySetter:
    name: visualPropertySetter
    code: "function visualPropertySetter(c) {\r

      \  let props = 'bg fg h w background color height width rounding
      padding fz font align';\r

      \  for (const k of props.split(' ')) {\r

      \    propertyGiver(c, k,\r

      \      x => { let styles = {}; styles[k] = x; mStyle(c.visual,
      styles); },\r

      \      () => { return mGetStyle(c.visual, k); }\r

      \    );\r

      \  }\r

      }\r\n"
    sig: function visualPropertySetter(c){}
    region: programming (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  visualAttributeSetter:
    name: visualAttributeSetter
    code: "function visualAttributeSetter(c) {\r

      \  let props = 'innerHTML onclick';\r

      \  for (const k of props.split(' ')) {\r

      \    propertyGiver(c, k, x => c.visual[k] = x, () => c.visual[k]);\r

      \  }\r

      }\r\n"
    sig: function visualAttributeSetter(c){}
    region: programming (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  aristoGame1:
    name: aristoGame1
    code: "function aristoGame1(g) {\r

      \  let phase = g.phase = 'king'; \r

      \  let players = g.allPlayers;\r

      \  let i = 0; players.map(x => x.index = i++);\r

      \  let indices = players.map(x => x.index);\r

      \  let me = g.me;\r

      \  let others = g.others;\r

      \  let market = g.market;\r

      \  let buy_cards = g.buy_cards;\r

      \  let draw_pile = g.draw_pile; draw_pile.type = 'deck';\r

      \  let deck = draw_pile.deck = new Deck();\r

      \  deck.init52_double(); \r

      \  let discard_pile = g.discard_pile; discard_pile.type = 'deck';\r

      \  let discard = discard_pile.deck = new Deck();\r

      \  for (const pl of players) { pl.hand = deck.deal(7); pl.coins = 3;
      }\r

      \  market.cards = deck.deal(3); market.type = 'cards';  \r

      \  buy_cards.cards = []; buy_cards.type = 'cards';  \r

      \  let herald = g.herald = players[1];\r

      \  let heraldOrder = g.heraldOrder = arrCycle(indices,
      herald.index);\r

      \  g.stallsHidden = true;\r

      \  for (const plIndex of heraldOrder) {\r

      \    if (plIndex == 0) break;\r

      \    let pl = players[plIndex];\r

      \    aristoAIAction(pl, g, 'stall');\r

      \  }\r

      \  aristoUi(dTable, g);\r

      \  dLineTopMiddle.innerHTML = 'choose your stall!';\r

      \  mButton('submit move', () => aristoUserAction(g, 'stall',
      aristoGame2), mBy('sidebar').firstChild, { w: 80, bg: g.color },
      'mybutton');\r

      \  for (const card of g.me.handItems) {\r

      \    let d = iDiv(card);\r

      \    d.onclick = () => {\r

      \      if (card.isSelected) {\r

      \        card.isSelected = false;\r

      \        iDiv(card).style.transform = 'unset';\r

      \      } else {\r

      \        card.isSelected = true;\r

      \        iDiv(card).style.transform = 'translateY(-25px)';\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function aristoGame1(g){}
    region: aristo (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  aristoAIAction:
    name: aristoAIAction
    code: "function aristoAIAction(pl, g, key) {\r

      \  if (key == 'stall') {\r

      \    let deck1 = new Deck(pl.hand);\r

      \    pl.stall = deck1.deal(randomNumber(Math.min(2, deck1.count()),
      Math.min(5, deck1.count())));\r

      \    pl.hand = deck1.cards();\r

      \  }\r

      }\r\n"
    sig: function aristoAIAction(pl, g, key){}
    region: aristo (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  aristoUserAction:
    name: aristoUserAction
    code: "function aristoUserAction(g, key, followFunc) {\r

      \  if (key == 'stall') {\r

      \    let me = g.me;\r

      \    let indices = arrIndices(me.handItems, x => x.isSelected);\r

      \    [me.stall, me.hand] = arrSplitByIndices(me.hand, indices);\r

      \    followFunc(g);\r

      \  }\r

      }\r\n"
    sig: function aristoUserAction(g, key, followFunc){}
    region: aristo (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  aristoAggregateVisible:
    name: aristoAggregateVisible
    code: "function aristoAggregateVisible(g) {\r

      \  let result = [];\r

      \  let stalls = g.allPlayers.map(x => x.stall);\r

      \  result = arrFlatten(stalls).concat(g.market.cards);\r

      \  return result;\r

      }\r\n"
    sig: function aristoAggregateVisible(g){}
    region: aristo (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  aristoGame2:
    name: aristoGame2
    code: "function aristoGame2(g) {\r

      \  let heraldOrder = g.heraldOrder;\r

      \  let players = g.allPlayers;\r

      \  let me = g.me;\r

      \  let iNext = heraldOrder.indexOf(0) + 1;\r

      \  for (let i = iNext; i < heraldOrder.length; i++) {\r

      \    let plIndex = heraldOrder[i];\r

      \    let pl = players[plIndex];\r

      \    if (plIndex == 0) break;\r

      \    let deck1 = new Deck(pl.hand);\r

      \    pl.stall = deck1.deal(randomNumber(Math.min(2, deck1.count()),
      Math.min(5, deck1.count())));\r

      \    pl.hand = deck1.cards();\r

      \  }\r

      \  g.stallsHidden = false;\r

      \  aristoUi(dTable, g);\r

      \  setTimeout(() => aristoGame3(g), 2000);\r

      }\r\n"
    sig: function aristoGame2(g){}
    region: aristo (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  aristoGame3:
    name: aristoGame3
    code: "function aristoGame3(g) {\r

      \  let heraldOrder = g.heraldOrder;\r

      \  let players = g.allPlayers;\r

      \  let me = g.me;\r

      \  let stallOrder = g.stallOrder = calcStallOrder(players);\r

      \  players.map(x => x.nActions = x.stall.length);\r

      \  for (const plIndex of stallOrder) {\r

      \    let pl = players[1]; \r

      \    console.log('player', pl.name, 'starts with', pl.nActions,
      'actions, stall value is', pl.stallValue);\r

      \    if (plIndex == 0) break;\r

      \    while (pl.nActions > 0) {\r

      \      aristoBuild(pl, g);\r

      \      break;\r

      \    }\r

      \    console.log('player', pl.name, 'still has', pl.nActions,
      'actions');\r

      \  }\r

      \  aristoUi(dTable, g);\r

      \  return;\r

      \  console.log('Game', g);\r

      }\r\n"
    sig: function aristoGame3(g){}
    region: aristo (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  aristoBuild:
    name: aristoBuild
    code: "function aristoBuild(pl, g) {\r

      \  let visToAll = aristoAggregateVisible(g);\r

      \  let visRanks = visToAll.map(x => x % 13);\r

      \  let players = g.allPlayers;\r

      \  let myVis = visToAll.concat(pl.hand);\r

      \  let myRanks = myVis.map(x => x % 13).sort();\r

      \  let rankCount = new Array(13).fill(0);\r

      \  for (let i = 0; i < myRanks.length; i++) {
      rankCount[myRanks[i]]++; }\r

      \  let i = 0;\r

      \  let buckets = rankCount.map(x => ({ rank: i, count:
      rankCount[i++] }));\r

      \  myHandRanks = pl.hand.map(x => x % 13);\r

      \  myStallRanks = pl.stall.map(x => x % 13);\r

      \  nActions = pl.nActions = pl.stall.length; \r

      \  for (const b of buckets) {\r

      \    b.handCount = arrCount(myHandRanks, x => x == b.rank);\r

      \    b.stallCount = arrCount(myStallRanks, x => x == b.rank);\r

      \    b.actionsNeeded = b.count - b.handCount - b.stallCount + 1;\r

      \  }\r

      \  sortByDescending(buckets, 'count');\r

      \  let boundaryToBuild = 3; \r

      \  let bucketsPossible = buckets.filter(x => x.count >=
      boundaryToBuild && x.actionsNeeded <= nActions);\r

      \  let canBuild = !isEmpty(bucketsPossible) && pl.coins > 0;\r

      \  if (!canBuild) return false;\r

      \  let best = bucketsPossible[0];\r

      \  let rank = best.rank;\r

      \  while (best.actionsNeeded - 1 > 0) {\r

      \    let marketRanks = g.market.cards.map(x => x % 13);\r

      \    if (marketRanks.includes(rank)) {\r

      \      let iSource = marketRanks.indexOf(rank);\r

      \      let elSource = g.market[iSource];\r

      \      let itemSource = g.marketItems[iSource];\r

      \      let elTarget = firstCond(pl.stall, x => x % 13 != rank);\r

      \      let iTarget = pl.stall.indexOf(elTarget);\r

      \      g.market.cards[iSource] = pl.stall[iTarget];\r

      \      g.marketItems[iSource] = pl.stallItems[iTarget];\r

      \      pl.stall[iTarget] = elSource;\r

      \      pl.stallItems[iTarget] = itemSource;\r

      \    } else {\r

      \      for (const other of players) {\r

      \        if (other == pl) continue;\r

      \        let stallRanks = other.stall.map(x => x % 13);\r

      \        if (stallRanks.includes(rank)) {\r

      \          let iSource = stallRanks.indexOf(rank);\r

      \          let elSource = other.stall[iSource];\r

      \          let itemSource = other.stallItems[iSource];\r

      \          let elTarget = firstCond(pl.stall, x => (x % 13) !=
      rank);\r

      \          let iTarget = pl.stall.indexOf(elTarget);\r

      \          other.stall[iSource] = pl.stall[iTarget];\r

      \          other.stallItems[iSource] = pl.stallItems[iTarget];\r

      \          pl.stall[iTarget] = elSource;\r

      \          pl.stallItems[iTarget] = itemSource;\r

      \          break;\r

      \        }\r

      \      }\r

      \      best.actionsNeeded--;\r

      \    }\r

      \  }\r

      \  console.log('building a farm of', rank);\r

      \  console.log('bucket', best);\r

      \  let handCards = pl.hand.filter(x => x % 13 == rank);\r

      \  console.log('handCards for this farm:', handCards);\r

      \  pl.hand = arrMinus(pl.hand, handCards);\r

      \  console.log('hand will be:', pl.hand);\r

      \  let stallCards = pl.stall.filter(x => x % 13 == rank);\r

      \  console.log('handCards for this farm:', stallCards);\r

      \  pl.stall = arrMinus(pl.stall, stallCards);\r

      \  console.log('stall will be:', pl.stall);\r

      \  let building = handCards.concat(stallCards);\r

      \  console.log('building:', building);\r

      \  lookupAddToList(pl, ['buildings'], building);\r

      \  pl.nActions -= best.actionsNeeded;\r

      }\r\n"
    sig: function aristoBuild(pl, g){}
    region: actions (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  moveCardsFromTo:
    name: moveCardsFromTo
    code: "function moveCardsFromTo(cards, from, to) {\r

      }\r\n"
    sig: function moveCardsFromTo(cards, from, to){}
    region: actions (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  identifyCardByRank:
    name: identifyCardByRank
    code: "function identifyCardByRank(key, rank) {\r

      \  if (key == 'market') {\r

      \  }\r

      }\r\n"
    sig: function identifyCardByRank(key, rank){}
    region: actions (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  getItemOfSameIndexAsIn:
    name: getItemOfSameIndexAsIn
    code: "function getItemOfSameIndexAsIn(val, arr, items) {\r

      \  let i = arr.indexOf(val);\r

      \  return items[i];\r

      }\r\n"
    sig: function getItemOfSameIndexAsIn(val, arr, items){}
    region: actions (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  aristoExchangeCard:
    name: aristoExchangeCard
    code: "function aristoExchangeCard() { }\r\n"
    sig: function aristoExchangeCard(){}
    region: actions (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  calcAristoHandValue:
    name: calcAristoHandValue
    code: "function calcAristoHandValue(cards) {\r

      \  let ranks = cards.map(x => x % 13);\r

      \  let total = 0;\r

      \  for (const rank of ranks) { total += Math.min(10, rank + 1); }\r

      \  return total;\r

      }\r\n"
    sig: function calcAristoHandValue(cards){}
    region: helpers (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  calcStallOrder:
    name: calcStallOrder
    code: "function calcStallOrder(players) {\r

      \  for (const pl of players) {\r

      \    pl.stallValue = calcAristoHandValue(pl.stall);\r

      \  }\r

      \  let stallOrder = players.map(x => ({ stallValue: x.stallValue,
      index: x.index }));\r

      \  let plSorted = sortBy(stallOrder, 'stallValue').map(x =>
      x.index);\r

      \  return plSorted;\r

      }\r\n"
    sig: function calcStallOrder(players){}
    region: helpers (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  ensure_player_id_name_index_type_color:
    name: ensure_player_id_name_index_type_color
    code: "function ensure_player_id_name_index_type_color(pls) {\r

      \  let i = 0;\r

      \  pls.map(x => {\r

      \    x.id = getUID();\r

      \    x.name = (i == 0 ? Username : randomBotName()).toLowerCase();\r

      \    x.index = i;\r

      \    x.type = (i == 0 ? 'human' : 'ai');\r

      \    x.colorName = (i == 0 ? U.settings.userColor :
      Object.values(PlayerColors)[i]);\r

      \    x.color = (i == 0 ? U.settings.userColor :
      Object.keys(PlayerColors)[i]);\r

      \    i++;\r

      \  });\r

      }\r\n"
    sig: function ensure_player_id_name_index_type_color(pls){}
    region: helpers (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  makeAreasKrieg:
    name: makeAreasKrieg
    code: "function makeAreasKrieg(dParent) {\r

      \  let dGrid = mDiv(dParent, { gap: 10, bg: 'white', w: '90%',
      padding: 10, display: 'inline-grid', rounding: 10 }, 'dGrid');\r

      \  let layout = ['T', 'H A'];\r

      \  let x = createGridLayout(dGrid, layout); \r

      \  let areaStyles = { bg: 'green', hmin: 200, rounding: 6 };\r

      \  let contentStyles = { lowerRounding: 6 };\r

      \  let messageStyles = { fg: 'yellow' };\r

      \  let titleStyles = { bg: 'dimgray', family: 'AlgerianRegular',
      upperRounding: 6 };\r

      \  let areas = {\r

      \    T: { title: 'table', id: 'dTrick', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles, titleOnTop: true
      },\r

      \    H: { title: 'YOU', id: 'dHuman', showTitle: true, messageArea:
      true, areaStyles: areaStyles, contentStyles: contentStyles, messageStyles:
      messageStyles, titleStyles: titleStyles, titleOnTop: false },\r

      \    A: { title: 'opponent', id: 'dAI', showTitle: true,
      messageArea: true, areaStyles: areaStyles, contentStyles: contentStyles,
      messageStyles: messageStyles, titleStyles: titleStyles, titleOnTop: false
      },\r

      \  };\r

      \  let items = [];\r

      \  for (const k in areas) {\r

      \    let item = areas[k];\r

      \    item.areaStyles['grid-area'] = k;\r

      \    let dCell = mTitledMessageDiv(item.title, dGrid, item.id,
      item.areaStyles, item.contentStyles, item.titleStyles, item.messageStyles,
      item.titleOnTop)\r

      \    iRegister(item, item.id);\r

      \    if (item.titleOnTop) iAdd(item, { div: dCell, dTitle:
      dCell.children[0], dMessage: dCell.children[1], dContent:
      dCell.children[2] });\r

      \    else iAdd(item, { div: dCell, dTitle: dCell.children[2],
      dMessage: dCell.children[0], dContent: dCell.children[1] });\r

      \    mCenterCenterFlex(diContent(item));\r

      \    mStyle(diContent(item), { gap: 10 });\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function makeAreasKrieg(dParent){}
    region: gKrieg (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  iToValue:
    name: iToValue
    code: "function iToValue(l) { if (isdef(l)) l = l % 13; return isdef(l) ? l == 0
      ? 13 : l : null; }\r\n"
    sig: function iToValue(l){}
    region: gKrieg (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  makeDraggableInner:
    name: makeDraggableInner
    code: "function makeDraggableInner(elem) {\r

      \  elem.setAttribute('draggable', true);\r

      \  elem.ondragstart = ev => {\r

      \    if (!canAct()) return;\r

      \    let id = evToClosestId(ev);\r

      \    let source = mBy(id);\r

      \    if (isLetterElement(source)) {\r

      \      ev.dataTransfer.setData(\"Text\", source.innerHTML);\r

      \    }\r

      \  }\r

      \  mClass(elem, 'draggable');\r

      }\r\n"
    sig: function makeDraggableInner(elem){}
    region: classes (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  parseHand:
    name: parseHand
    code: "function parseHand(keys, deck) {\r

      \  let h1 = keys.map(x => Card52._fromKey(x));\r

      \  if (isdef(deck)) h1.map(x => deck.remove(x));\r

      \  return h1;\r

      }\r\n"
    sig: function parseHand(keys, deck){}
    region: gKrieg (classes.js)
    filename: classes.js
    type: func
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  mCheckbox_dep:
    name: mCheckbox_dep
    code: "function mCheckbox_dep(label, val, dParent, styles = {}, id) {\r

      \  let d = mDiv(dParent, { display: 'inline-block', align: 'left'
      });\r

      \  let inp = createElementFromHTML(\r

      \    `<input type=\"checkbox\" class=\"checkbox\" ${(val === true ?
      'checked=true' : '')} >`\r

      \  );\r

      \  if (isdef(id)) inp.id = id;\r

      \  let labelui = createElementFromHTML(`<label>${label}</label>`);\r

      \  mAppend(d, labelui);\r

      \  mAppend(labelui, inp);\r

      \  mStyle(inp, styles);\r

      \  mClass(inp, 'input');\r

      \  return inp;\r

      }\r\n"
    sig: function mCheckbox_dep(label, val, dParent, styles = {}, id){}
    region: dep (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\belinda\js\base.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121046.8196
    size: 188450
  mContainer:
    name: mContainer
    code: "function mContainer(d, styles = {}) {\r

      \  let defOuterStyles = {\r

      \    display: 'inline-flex', 'flex-direction': 'column',\r

      \    'justify-content': 'center', 'align-items': 'center',
      'vertical-align': 'top',\r

      \    padding: 0, box: true\r

      \  };\r

      \  addKeys(d, defOuterStyles);\r

      \  mStyle(d, styles);\r

      }\r\n"
    sig: function mContainer(d, styles = {}){}
    region: dep (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\belinda\js\base.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121046.8196
    size: 188450
  mColorPicker0:
    name: mColorPicker0
    code: "function mColorPicker0(dParent, palette, onColor) {\r

      \  let dPalette = mDiv(dParent, { margin: 4 }); mFlex(dPalette);\r

      \  let items = [];\r

      \  for (const c of palette) {\r

      \    dColor = mDiv(dPalette, { display: 'inline-block', w: 50, h:
      50, bg: c, rounding: 4, margin: 4 });\r

      \    let item = { color: c, isSelected: false };\r

      \    iAdd(item, { div: dColor });\r

      \    items.push(item);\r

      \  }\r

      \  let picker = { div: dPalette, selected: null, items: items };\r

      \  for (const item of items) {\r

      \    iDiv(item).onclick = (ev) => {\r

      \      console.log('click!!!', ev.target);\r

      \      picker.selectedItem = iToggleSingleSelection(item, items);\r

      \      onColor(item.color);\r

      \    }\r

      \  }\r

      \  return picker;\r

      }\r\n"
    sig: function mColorPicker0(dParent, palette, onColor){}
    region: dep (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\belinda\js\base.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121046.8196
    size: 188450
  mColorPicker3:
    name: mColorPicker3
    code: "function mColorPicker3(elem, palette, onColor, initialColor) {\r

      \  let picker = new JSColor(elem, {\r

      \    alpha: 'ff',\r

      \    closeButton: true,\r

      \    value: initialColor,\r

      \    palette: palette,\r

      \  });\r

      \  picker.onInput = () => { let c = picker.toHEXAString();
      onColor(c); console.log('picked', c); }\r

      \  return picker;\r

      }\r\n"
    sig: function mColorPicker3(elem, palette, onColor, initialColor){}
    region: dep (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\belinda\js\base.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121046.8196
    size: 188450
  mColorPicker2:
    name: mColorPicker2
    code: "function mColorPicker2(dParent, palette, onColor, initialColor) {\r

      \  let elem = mDiv(dParent, { w: 50, h: 50, display: 'inline-block'
      });\r

      \  let picker = new JSColor(elem, {\r

      \    alpha: 'ff',\r

      \    closeButton: true,\r

      \    value: initialColor,\r

      \    palette: palette,\r

      \  });\r

      \  picker.onInput = () => { let c = picker.toHEXAString();
      onColor(c); console.log('picked', c); }\r

      \  return picker;\r

      }\r\n"
    sig: function mColorPicker2(dParent, palette, onColor, initialColor){}
    region: dep (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\belinda\js\base.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121046.8196
    size: 188450
  mColorPicker1:
    name: mColorPicker1
    code: "function mColorPicker1(dParent, palette, onColor) {\r

      \  let dPalette = mDiv(dParent, { margin: 4 }); mFlex(dPalette);\r

      \  let items = [];\r

      \  for (const c of palette) {\r

      \    dColor = mDiv(dPalette, { display: 'inline-block', w: 50, h:
      50, bg: c, rounding: 4, margin: 4 });\r

      \    let item = { color: c, isSelected: false };\r

      \    iAdd(item, { div: dColor });\r

      \    items.push(item);\r

      \  }\r

      \  let picker = { div: dPalette, selected: null, items: items };\r

      \  for (const item of items) {\r

      \    iDiv(item).onclick = (ev) => {\r

      \      console.log('click!!!', ev.target);\r

      \      picker.selectedItem = iToggleSingleSelection(item, items);\r

      \      onColor(item.color);\r

      \    }\r

      \  }\r

      \  let elem = mCreate('input'); mAppend(dPalette, elem);\r

      \  let alphaPicker = new JSColor(elem, {});\r

      \  let alphaItem = { isSelected: false };\r

      \  alphaPicker.onChange = () => { alphaItem.color = elem.value;
      onColor(elem.value); }\r

      \  alphaItem.picker = alphaPicker;\r

      \  iAdd(alphaItem, { div: elem });\r

      \  items.push(alphaItem);\r

      \  return picker;\r

      }\r\n"
    sig: function mColorPicker1(dParent, palette, onColor){}
    region: dep (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\belinda\js\base.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121046.8196
    size: 188450
  race_present_table:
    name: race_present_table
    code: "function race_present_table(obj) {\r

      \  console.assert(isdef(obj.table), 'present_table_ without
      obj.table!!!!!!!!!!!!!!');\r

      \  if (obj.table.status != 'past') {
      update_table_options_for_user(Session.cur_user, obj.table.pl_options,
      obj.table.game); }\r

      \  update_session(obj); \r

      \  let table_status = Session.cur_table.status;\r

      \  if (is_admin() && table_status == 'past') { in_game_off();
      in_game_open_prompt_off(); status_message_off(); get_games(); return; }\r

      \  if (!in_game()) { open_game_ui(); in_game_on(); }\r

      \  let d = mBy('table'); d.animate([{ opacity: 0, transform:
      'translateY(50px)' }, { opacity: 1, transform: 'translateY(0px)' },], {
      fill: 'both', duration: 1000, easing: 'ease' });\r

      \  let my_status = Session.cur_me.player_status;\r

      \  let have_move = my_status == 'joined';\r

      \  if (!have_move) { if (!in_game_open_prompt())
      race_open_prompt(Session.cur_me.state); }\r

      \  else if (!in_game_open_prompt()) { race_open_prompt();
      in_game_open_prompt_on(); }\r

      \  else { uiActivated = true; }\r

      \  ui_game_stats(Session.cur_players); \r

      \  if (table_status != 'started') {\r

      \    stop_game();\r

      \    let winners = Session.winners = race_check_endcondition();\r

      \    if (!isEmpty(winners)) {\r

      \      stop_game();\r

      \      show_gameover_new(winners);\r

      \    }\r

      \  } else Session.scoring_complete = false;\r

      }\r\n"
    sig: function race_present_table(obj){}
    region: racing (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  race_open_prompt:
    name: race_open_prompt
    code: "function race_open_prompt(fen) {\r

      \  console.assert(!uiActivated, 'open_prompt_ with uiActivated ON
      !!!!!!!!!!!!!!!!!!!!!!!!!!');\r

      \  let g = update_game_values();\r

      \  clearTable(); set_background_color(g.color); \r

      \  QContextCounter += 1;\r

      \  show_game_name(g.friendly);\r

      \  show_title(g.table.friendly);\r

      \  show_level(g.level, g.maxlevel);\r

      \  if (Session.is_badges) g.level = setBadgeLevel(g.level,
      Session.cur_user, Session.cur_game, g.maxlevel);\r

      \  g.startTime = get_timestamp();\r

      \  mLinebreak(dTable, 15);\r

      \  Session.cur_funcs.prompt(g, fen);\r

      \  Selected = null;\r

      \  if (nundef(fen)) uiActivated = true;\r

      }\r\n"
    sig: function race_open_prompt(fen){}
    region: racing (game_race1.js)
    filename: game_race1.js
    type: func
    fname: game_race1.js
    path: C:\xampp\htdocs\aroot\base\js\game_race1.js
    datetime: 2022-02-11-16-56
    timestamp: 1644627384127.3662
    size: 14458
  dachain:
    name: dachain
    code: "function dachain(ms = 0) {\r

      \  console.log('TestInfo', TestInfo)\r

      \  if (!isEmpty(DA.chain) && !(DA.test.running && DA.test.step ==
      true)) {\r

      \    dachainext(ms);\r

      \  } else if (isEmpty(DA.chain)) console.log('DA.chain EMPTY ' +
      DA.test.iter)\r

      }\r\n"
    sig: function dachain(ms = 0){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  dachain_orig:
    name: dachain_orig
    code: "function dachain_orig(ms=0) { \r

      \  if (!isEmpty(DA.chain)) { \r

      \    dachainext(ms);\r

      \  } else console.log('DA.chain EMPTY '+ITER)\r

      } \r\n"
    sig: function dachain_orig(ms=0){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  dachainext:
    name: dachainext
    code: "function dachainext(ms = 0) {\r

      \  let f = DA.chain.shift();\r

      \  if (ms > 0) TOMan.TO[getUID('f')] = setTimeout(f, ms);\r

      \  else f();\r

      }\r\n"
    sig: function dachainext(ms = 0){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  dastaged:
    name: dastaged
    code: "function dastaged(r,uname,ms=0) { \r

      \  if (!isEmpty(DA.staged_moves)) { \r

      \    let action = DA.staged_moves.shift();\r

      \    if (action == 'meld'){\r

      \      let a =
      firstCond(r.actions,x=>startsWith(x,`${uname}.hand.`));\r

      \      if (!a) {console.log('staged action',action,'cannot be
      completed',r.actions);return;} else action = a;\r

      \    }\r

      \    if (action == 'draw'){\r

      \      let a =
      firstCond(r.actions,x=>startsWith(x,`draw.decks.`));\r

      \      if (!a) {console.log('staged action',action,'cannot be
      completed',r.actions);return;} else action = a;\r

      \    }\r

      \    if (ms>0)
      TOMan.TO[getUID('f')]=setTimeout(()=>autoselect_action(r,action,uname),ms\
      ); \r

      \    else autoselect_action(r,action,uname); \r

      \  } \r

      } \r\n"
    sig: function dastaged(r,uname,ms=0){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  endit:
    name: endit
    code: "function endit() { throw new Error(\"*** THE END ***\"); }\r\n"
    sig: function endit(){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  get_first_player:
    name: get_first_player
    code: "function get_first_player(otree){return otree.player_names[0];}\r\n"
    sig: function get_first_player(otree){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  get_index_in_plorder:
    name: get_index_in_plorder
    code: "function get_index_in_plorder(otree,uname){return
      otree.plorder.indexOf(uname);}\r\n"
    sig: function get_index_in_plorder(otree,uname){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  get_num_players:
    name: get_num_players
    code: "function get_num_players(otree) { return otree.player_names.length; }\r\n"
    sig: function get_num_players(otree){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  get_random_player_order:
    name: get_random_player_order
    code: "function get_random_player_order(otree){let
      res=jsCopy(otree.player_names);shuffle(res);return res;}\r\n"
    sig: function get_random_player_order(otree){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  get_selected_ui_item:
    name: get_selected_ui_item
    code: "function get_selected_ui_item(ev) {\r

      \  ev.cancelBubble = true;\r

      \  if (!canAct()) { console.log('no act'); return null; }\r

      \  uiActivated = false;\r

      \  let id = evToId(ev);\r

      \  if (nundef(Items[id])) { return null; console.log('clicked on
      element') }\r

      \  let item = Items[id];\r

      \  return item;\r

      }\r\n"
    sig: function get_selected_ui_item(ev){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  is_game_card:
    name: is_game_card
    code: "function is_game_card(k){return isdef(Session.cards[k]);}\r\n"
    sig: function is_game_card(k){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  is_it_my_turn:
    name: is_it_my_turn
    code: "function is_it_my_turn(r, uname) { return r.uname == uname; }\r\n"
    sig: function is_it_my_turn(r, uname){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  log_objectX:
    name: log_objectX
    code: "function log_objectX(o, props, msg) {
      console.log('___',getFunctionsNameThatCalledThisFunction(), msg); let keys
      = get_keys(o); keys.sort(); for (const k of props.split(' ')) {
      console.log('', k + ':', o[k]); } }\r\n"
    sig: function log_objectX(o, props, msg){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  next_task:
    name: next_task
    code: "function next_task(otree, r) {\r

      \  let i = otree.itask += 1;\r

      \  let n_todo = otree.todo.length;\r

      \  if (i >= n_todo) {\r

      \    move_todo_to_history(otree);\r

      \    start_new_todo_list(otree, r);\r

      \  }\r

      }\r\n"
    sig: function next_task(otree, r){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  start_new_todo_list:
    name: start_new_todo_list
    code: "function start_new_todo_list(otree, r) {\r

      \  let i_last = otree.plorder.indexOf(r.uname);\r

      \  let i_next = (i_last + 1) % otree.plorder.length;\r

      \  otree.todo = inno_todo_regular(otree, otree.plorder[i_next]);\r

      }\r\n"
    sig: function start_new_todo_list(otree, r){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  move_todo_to_history:
    name: move_todo_to_history
    code: "function move_todo_to_history(otree) {\r

      \  otree.history = otree.history.concat(otree.todo);\r

      }\r\n"
    sig: function move_todo_to_history(otree){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  ui_player_info:
    name: ui_player_info
    code: "function ui_player_info(dParent, outerStyles = { dir: 'column' },
      innerStyles = {}) {\r

      \  let fen = Z.fen;\r

      \  if (nundef(outerStyles.display)) outerStyles.display = 'flex';\r

      \  mStyle(dParent, outerStyles);\r

      \  let items = {};\r

      \  let styles = jsCopy(innerStyles); addKeys({ rounding: 10, bg:
      '#00000050', margin: 4, padding: 4, patop: 12, box: true, 'border-style':
      'solid', 'border-width': 6 }, styles);\r

      \  let order = get_present_order();\r

      \  for (const plname of order) {\r

      \    let pl = fen.players[plname];\r

      \    let uname = pl.name;\r

      \    let imgPath = `../base/assets/users/${uname}.jpg`;\r

      \    styles['border-color'] = get_user_color(uname);\r

      \    let item = mDivItem(dParent, styles, name2id(uname));\r

      \    let d = iDiv(item);\r

      \    let picstyle = { w: 50, h: 50, box: true };\r

      \    let ucolor = get_user_color(uname);\r

      \    if (pl.playmode == 'bot') {\r

      \      copyKeys({ rounding: 0, border: `double 6px ${ucolor}` },
      picstyle);\r

      \    } else {\r

      \      copyKeys({ rounding: '50%', border: `solid 2px white` },
      picstyle);\r

      \    }\r

      \    let img = mImage(imgPath, d, picstyle, 'img_person');\r

      \    items[uname] = item;\r

      \  }\r

      \  if (DA.SIMSIM || is_advanced_user())
      activate_playerstats(items)\r

      \  return items;\r

      }\r\n"
    sig: "function ui_player_info(dParent, outerStyles = { dir: 'column' },
      innerStyles = {}){}"
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_present_stats:
    name: ui_present_stats
    code: "function ui_present_stats(otree) {\r

      \  let players = otree.player_names;\r

      \  let items = ui_player_info(players.map(x=>otree[x]));\r

      \  for (const uname of players) {\r

      \    let pl = otree[uname];\r

      \    let totals = inno_calc_visible_syms(pl.board, pl.splays);\r

      \    pl.totals = totals;\r

      \    let item = items[uname];\r

      \    let d = iDiv(item); mCenterFlex(d);mLinebreak(d);\r

      \    for (const r in totals) {\r

      \      inno_stat_sym(r, totals[r], d, 20);\r

      \    }\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_present_stats(otree){}
    region: funcs (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  arrByClassName:
    name: arrByClassName
    code: "function arrByClassName(classname,d){\r

      \  if (nundef(d)) d=document;\r

      \  return Array.from(d.getElementsByClassName(classname));\r

      }\r\n"
    sig: function arrByClassName(classname,d){}
    region: base (gen_helpers.js)
    filename: gen_helpers.js
    type: func
    fname: gen_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\gen_helpers.js
    datetime: 2022-02-24-18-54
    timestamp: 1645757653773.1702
    size: 6000
  gSet:
    name: gSet
    code: "function gSet() {\r

      \  function set_fen() {\r

      \    let items = Session.items;\r

      \    let fen = items.map(x => x.fen).join(',');\r

      \    return fen;\r

      \  }\r

      \  function set_prompt(g, fen) {\r

      \    let [n, rows, cols] = [g.num_attrs, g.rows, g.cols];\r

      \    let all_attrs = gSet_attributes();\r

      \    let attrs_in_play = arrTake(get_keys(all_attrs), n);\r

      \    let deck = g.deck = make_set_deck(n); \r

      \    shuffle(deck);\r

      \    let goal = Goal = { set: make_goal_set(deck, g.prob_different),
      cards:[] };\r

      \    let dCards = stdRowsColsContainer(dTable, cols, styles = { bg:
      'transparent' }); \r

      \    let card_styles = { w: cols > 4 ? 130 : 160 };\r

      \    let items = g.items = [];\r

      \    let deck_rest = arrWithout(deck, goal.set);\r

      \    let fens = choose(deck_rest, rows * cols - 3);\r

      \    let all_fens = goal.set.concat(fens);\r

      \    shuffle(all_fens);\r

      \    if (isdef(fen)){all_fens = fen.split(',');}\r

      \    for (const f of all_fens) {\r

      \      let item = create_set_card(f, dCards, card_styles);\r

      \      let d = iDiv(item);\r

      \      mStyle(d, { cursor: 'pointer' });\r

      \      d.onclick = set_interact;\r

      \      if (Goal.set.includes(item.fen)) Goal.cards.push(item);\r

      \      items.push(item);\r

      \    }\r

      \    g.selected = [];\r

      \    return items;\r

      \  }\r

      \  function set_interact(ev) {\r

      \    ev.cancelBubble = true;\r

      \    if (!canAct()) { console.log('no act'); return; }\r

      \    let id = evToId(ev);\r

      \    if (isdef(Items[id])) {\r

      \      let item = Items[id];\r

      \      toggleSelectionOfPicture(item, Session.selected);\r

      \      if (Session.selected.length == 3) {\r

      \        let correct = check_complete_set(Session.selected.map(x =>
      x.fen));\r

      \        if (correct) {\r

      \          Selected = { isCorrect: true, feedbackUI:
      Session.selected.map(x => iDiv(x)) };\r

      \        } else {\r

      \          Selected = { isCorrect: false, correctUis:
      Goal.cards.map(x => iDiv(x)), feedbackUI: null, animation: 'onPulse1' };\r

      \        }\r

      \        set_eval();\r

      \      }\r

      \    }\r

      \  }\r

      \  function set_eval() {\r

      \    if (!canAct()) return;\r

      \    uiActivated = false; clear_timeouts();\r

      \    IsAnswerCorrect = Selected.isCorrect;\r

      \    race_set_fen();\r

      \    race_update_my_score(IsAnswerCorrect ? 1 : 0);\r

      \    let delay = show_feedback(IsAnswerCorrect);\r

      \    setTimeout(() => {\r

      \      in_game_open_prompt_off();\r

      \      clear_table_events();\r

      \      race_send_move();\r

      \    }, delay);\r

      \  }\r

      \  return {\r

      \    prompt: set_prompt,\r

      \    fen: set_fen,\r

      \  }\r

      }\r\n"
    sig: function gSet(){}
    region: funcs (game_race2.js)
    filename: game_race2.js
    type: func
    fname: game_race2.js
    path: C:\xampp\htdocs\aroot\base\js\game_race2.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142737298.0999
    size: 20629
  test8_mimi_hand_card_0_hover:
    name: test8_mimi_hand_card_0_hover
    code: "function test8_mimi_hand_card_0_hover(){\r

      \  let hand = G.mimi.hand.items;\r

      \  let card = hand[0];\r

      \  mClass(iDiv(card),'hoverScale');\r

      }\r\n"
    sig: function test8_mimi_hand_card_0_hover(){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test7_ari_anim_auto_deal:
    name: test7_ari_anim_auto_deal
    code: "function test7_ari_anim_auto_deal(otree) {\r

      \  let deck = ui_make_random_deck(50);\r

      \  let market = ui_make_random_market(0); \r

      \  mLinebreak(dTable);\r

      \  let hand1 = ui_make_random_hand(7); mStyle(hand1.container, { w:
      '50%' });\r

      \  let hand2 = ui_make_random_hand(7); mStyle(hand2.container, { w:
      '50%' });\r

      \  DA.qanim = [\r

      \    [anim_from_deck_to_marketX,[deck,market]],\r

      \    [anim_from_deck_to_marketX,[deck,market]],\r

      \  ];\r

      \  anim_from_deck_to_marketX(deck, market);\r

      }\r\n"
    sig: function test7_ari_anim_auto_deal(otree){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test6_ari_anim_auto_deal:
    name: test6_ari_anim_auto_deal
    code: "function test6_ari_anim_auto_deal(otree) {\r

      \  let deck = ui_make_random_deck(50);\r

      \  let market = ui_make_random_market(0); \r

      \  mLinebreak(dTable);\r

      \  let hand1 = ui_make_random_hand(7); mStyle(hand1.container, { w:
      '50%' });\r

      \  let hand2 = ui_make_random_hand(7); mStyle(hand2.container, { w:
      '50%' });\r

      \  top_card_to_market(deck, market);\r

      }\r\n"
    sig: function test6_ari_anim_auto_deal(otree){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test5_ari_anim_deal_market:
    name: test5_ari_anim_deal_market
    code: "function test5_ari_anim_deal_market(otree) {\r

      \  let deck = ui_make_random_deck(50);\r

      \  let market = ui_make_random_market(1); \r

      \  mLinebreak(dTable);\r

      \  let hand1 = ui_make_random_hand(7); mStyle(hand1.container, { w:
      '50%' });\r

      \  let hand2 = ui_make_random_hand(7); mStyle(hand2.container, { w:
      '50%' });\r

      \  top_card_to_market(deck, market);\r

      }\r\n"
    sig: function test5_ari_anim_deal_market(otree){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test4_ari_deck_2_fixed_size_hands:
    name: test4_ari_deck_2_fixed_size_hands
    code: "function test4_ari_deck_2_fixed_size_hands(otree) {\r

      \  let deck = ui_make_random_deck(10);\r

      \  mLinebreak(dTable);\r

      \  let hand1 = ui_make_random_hand(1); mStyle(hand1.container, { w:
      '50%' });\r

      \  let hand2 = ui_make_random_hand(1); mStyle(hand2.container, { w:
      '50%' });\r

      \  let d = iDiv(deck.topmost);\r

      \  top_card_to_hands_abwechselnd(deck, hand1, hand2);\r

      }\r\n"
    sig: function test4_ari_deck_2_fixed_size_hands(otree){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test3_ari_deck_2_hands:
    name: test3_ari_deck_2_hands
    code: "function test3_ari_deck_2_hands(otree) {\r

      \  let deck = ui_make_random_deck(10);\r

      \  let hand1 = ui_make_random_hand(1);\r

      \  let hand2 = ui_make_random_hand(1);\r

      \  let d = iDiv(deck.topmost);\r

      \  top_card_to_hands_abwechselnd(deck, hand1, hand2);\r

      }\r\n"
    sig: function test3_ari_deck_2_hands(otree){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  top_card_to_hands_abwechselnd:
    name: top_card_to_hands_abwechselnd
    code: "function top_card_to_hands_abwechselnd(deck, hand1, hand2) {\r

      \  DA.hand = hand1;\r

      \  deck.items.map(x => {\r

      \    mStyle(iDiv(x), { cursor: 'pointer' });\r

      \    iDiv(x).onclick = () => {\r

      \      anim_from_deck_to_handX(x, deck, DA.hand);\r

      \      DA.hand = DA.hand == hand1 ? hand2 : hand1;\r

      \    }\r

      \  });\r

      }\r\n"
    sig: function top_card_to_hands_abwechselnd(deck, hand1, hand2){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  top_card_to_market:
    name: top_card_to_market
    code: "function top_card_to_market(deck, market) {\r

      \  deck.items.map(x => {\r

      \    mStyle(iDiv(x), { cursor: 'pointer' });\r

      \    iDiv(x).onclick = () => {\r

      \      anim_from_deck_to_marketX(x, deck, market);\r

      \    }\r

      \  });\r

      }\r\n"
    sig: function top_card_to_market(deck, market){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test2_ari_deck_and_hand:
    name: test2_ari_deck_and_hand
    code: "function test2_ari_deck_and_hand(otree) {\r

      \  let deck = ui_make_random_deck(10);\r

      \  let hand = ui_make_random_hand(1);\r

      \  let d = iDiv(deck.topmost);\r

      \  deck.items.map(x => { mStyle(iDiv(x), { cursor: 'pointer' });
      iDiv(x).onclick = () => anim_from_deck_to_hand(x, deck, hand); });\r

      }\r\n"
    sig: function test2_ari_deck_and_hand(otree){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test1_ari_10cards:
    name: test1_ari_10cards
    code: "function test1_ari_10cards(otree) {\r

      \  let n = 10;\r

      \  let list = choose(get_keys(Aristocards), n);\r

      \  let items = list.map(x => ari_get_card(x));\r

      \  let cont = ui_make_deck_container(n, dTable, { bg: 'random',
      padding: 4 });\r

      \  let topmost = ui_add_cards_to_deck_container(cont, items,
      list);\r

      \  iDiv(topmost).onclick = () => anim_toggle_face(topmost);\r

      }\r\n"
    sig: function test1_ari_10cards(otree){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  test0_ari_flip_one_card:
    name: test0_ari_flip_one_card
    code: "function test0_ari_flip_one_card() {\r

      \  let c = ari_get_card('QHo');\r

      \  mAppend(dTable, iDiv(c));\r

      \  face_down(c);\r

      \  iDiv(c).onclick = () => anim_toggle_face(c);\r

      }\r\n"
    sig: function test0_ari_flip_one_card(){}
    region: funcs (testing.js)
    filename: testing.js
    type: func
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  set_state_numbers:
    name: set_state_numbers
    code: "function set_state_numbers(otree) {\r

      \  let [step, stage, iturn, round, phase] = [valf(otree.step, 0),
      valf(otree.stage, 0), valf(otree.iturn, 0), valf(otree.round, []),
      valf(otree.phase, 'king')];\r

      \  otree.step = step;\r

      \  otree.stage = stage;\r

      \  otree.iturn = iturn; \r

      \  otree.round = round; \r

      \  otree.phase = phase;\r

      \  let plturn = otree.plturn = otree.plorder[iturn];\r

      \  return [step, stage, iturn, round, phase, plturn];\r

      }\r\n"
    sig: function set_state_numbers(otree){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  remove_hover_ui:
    name: remove_hover_ui
    code: "function remove_hover_ui(b) { b.onmouseenter = null; b.onmouseleave =
      null; }\r\n"
    sig: function remove_hover_ui(b){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  set_hover_ui:
    name: set_hover_ui
    code: "function set_hover_ui(b, item) {\r

      \  let isCard = isdef(item.c52key);\r

      \  let d = iDiv(item);\r

      \  b.onmouseenter = () => {\r

      \    if (isCard) {\r

      \      let rs = Array.from(d.getElementsByTagName('rect'));\r

      \      let r = arrLast(rs);\r

      \      let fill = b.fill = r.getAttribute('fill');\r

      \      r.setAttribute('fill', 'silver');\r

      \    } else {\r

      \      let hallo = mGetStyle(d, 'bg');\r

      \      let bg = isEmpty(hallo) ? 'transparent' : valf(mGetStyle(d,
      'bg'), 'transparent');\r

      \      d.setAttribute('bg', bg);\r

      \      mStyle(d, { bg: 'silver' });\r

      \    }\r

      \  }\r

      \  b.onmouseleave = () => {\r

      \    if (isCard) {\r

      \      let rs = Array.from(d.getElementsByTagName('rect'));\r

      \      let r = arrLast(rs);\r

      \      r.setAttribute('fill', b.fill);\r

      \    } else {\r

      \      let bg = d.getAttribute('bg');\r

      \      mStyle(d, { bg: bg });\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function set_hover_ui(b, item){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  set_hover_div:
    name: set_hover_div
    code: "function set_hover_div(b, d, val, prop) {\r

      \  b.onmouseenter = () => {\r

      \    d[prop] = mGetStyle(d, prop);\r

      \    let style = {}; style[prop] = val; mStyle(d, style);\r

      \  }\r

      \  b.onmouseleave = () => {\r

      \    let style = {}; style[prop] = d.bg; mStyle(d, style);\r

      \  }\r

      }\r\n"
    sig: function set_hover_div(b, d, val, prop){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  set_hover_card:
    name: set_hover_card
    code: "function set_hover_card(b, d, val = 'silver', prop = 'fill') {\r

      \  b.onmouseenter = () => {\r

      \    let rs = Array.from(d.getElementsByTagName('rect'));\r

      \    let r = arrLast(rs);\r

      \    b[prop] = r.getAttribute(prop);\r

      \    r.setAttribute(prop, val);\r

      \  }\r

      \  b.onmouseleave = () => {\r

      \    let rs = Array.from(d.getElementsByTagName('rect'));\r

      \    let r = arrLast(rs);\r

      \    r.setAttribute(prop, b[prop]);\r

      \  }\r

      }\r\n"
    sig: function set_hover_card(b, d, val = 'silver', prop = 'fill'){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ui_type_deck:
    name: ui_type_deck
    code: "function ui_type_deck(list, dParent, styles = {}, path = 'deck', title =
      'deck', get_card_func = ari_get_card, show_if_empty = false) {\r

      \  let cont = ui_make_container(dParent,
      get_container_styles(styles));\r

      \  let cardcont = mDiv(cont);\r

      \  let items = [];\r

      \  ensure_ui(list, cardcont, items, get_card_func);\r

      \  ui_add_container_title(title, cont, items, show_if_empty);\r

      \  function get_topcard() { return isEmpty(list) ? null : items[0];
      }\r

      \  function get_bottomcard() { return isEmpty(list) ? null :
      arrLast(items); }\r

      \  function ensure_ui(list, cardcont, items, get_card_func) {\r

      \    clearElement(cardcont); arrClear(items); if (isEmpty(list))
      return;\r

      \    let n = Math.min(2, list.length); let ct =
      get_card_func(list[0]); items.push(ct); if (n > 1) { let cb =
      get_card_func(arrLast(list)); items.push(cb); }\r

      \    mStyle(cardcont, { position: 'relative', wmin: ct.w + 8, hmin:
      ct.h });\r

      \    for (let i = items.length - 1; i >= 0; i--) { let x = items[i];
      face_down(x); mAppend(cardcont, iDiv(x)); mStyle(iDiv(x), { position:
      'absolute', top: 0, left: 0 }) }\r

      \    mText(list.length, iDiv(ct), { position: 'absolute', left:
      list.length >= 100 ? '10%' : '25%', top: 10, fz: ct.h / 3 });\r

      \  }\r

      \  return {\r

      \    ctype: 'deck',\r

      \    container: cont,\r

      \    cardcontainer: cardcont,\r

      \    items: items,\r

      \    list: list,\r

      \    title: title,\r

      \    path: path,\r

      \    func: get_card_func,\r

      \    get_topcard: get_topcard,\r

      \    get_bottomcard: get_bottomcard,\r

      \    get_card_func: get_card_func,\r

      \    renew: ensure_ui,\r

      \  };\r

      }\r\n"
    sig: function ui_type_deck(list, dParent, styles = {}, path = 'deck', title =
      'deck', get_card_func = ari_get_card, show_if_empty = false){}
    region: ui (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_type_market:
    name: ui_type_market
    code: "function ui_type_market(list, dParent, styles = {}, path = 'market',
      title = 'market', get_card_func = ari_get_card, show_if_empty = false) {\r

      \  let cont = ui_make_container(dParent,
      get_container_styles(styles));\r

      \  let cardcont = mDiv(cont, { display: 'flex', gap: 2 });\r

      \  let items = list.map(x => get_card_func(x));\r

      \  items.map(x => mAppend(cardcont, iDiv(x)));\r

      \  ui_add_container_title(title, cont, items, show_if_empty);\r

      \  return {\r

      \    ctype: 'market',\r

      \    list: list,\r

      \    path: path,\r

      \    container: cont,\r

      \    cardcontainer: cardcont,\r

      \    items: items,\r

      \  };\r

      }\r\n"
    sig: function ui_type_market(list, dParent, styles = {}, path = 'market', title
      = 'market', get_card_func = ari_get_card, show_if_empty = false){}
    region: ui (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_type_hand:
    name: ui_type_hand
    code: "function ui_type_hand(list, dParent, styles = {}, path = 'hand', title =
      'hand', get_card_func = ari_get_card, show_if_empty = false) {\r

      \  let cont = ui_make_container(dParent,
      get_container_styles(styles));\r

      \  let items = list.map(x => get_card_func(x));\r

      \  let cardcont = mDiv(cont);\r

      \  let card = isEmpty(items) ? { w: 1, h: Config.ui.card.h, ov: 0 }
      : items[0];\r

      \  let splay = 2;\r

      \  mContainerSplay(cardcont, splay, card.w, card.h, items.length,
      card.ov * card.w);\r

      \  ui_add_cards_to_hand_container(cardcont, items, list);\r

      \  ui_add_container_title(title, cont, items, show_if_empty);\r

      \  return {\r

      \    ctype: 'hand',\r

      \    list: list,\r

      \    path: path,\r

      \    container: cont,\r

      \    cardcontainer: cardcont,\r

      \    splay: splay,\r

      \    items: items,\r

      \  };\r

      }\r\n"
    sig: function ui_type_hand(list, dParent, styles = {}, path = 'hand', title =
      'hand', get_card_func = ari_get_card, show_if_empty = false){}
    region: ui (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_type_building:
    name: ui_type_building
    code: "function ui_type_building(b, dParent, styles = {}, path = 'farm', title =
      '', get_card_func = ari_get_card, separate_lead = false, ishidden = false)
      {\r

      \  let cont = ui_make_container(dParent,
      get_container_styles(styles));\r

      \  let cardcont = mDiv(cont);\r

      \  let list = b.list;\r

      \  let d = mDiv(dParent);\r

      \  let items = list.map(x => get_card_func(x));\r

      \  reindex_items(items);\r

      \  let d_harvest = null;\r

      \  if (isdef(b.h)) {\r

      \    let keycard = items[0];\r

      \    let d = iDiv(keycard);\r

      \    mStyle(d, { position: 'relative' });\r

      \    d_harvest = mDiv(d, { position: 'absolute', w: 20, h: 20, bg:
      'orange', opacity: .5, fg: 'black', top: '45%', left: -10, rounding:
      '50%', align: 'center' }, null, 'H');\r

      \  }\r

      \  let d_rumors = null, rumorItems = [];\r

      \  if (!isEmpty(b.rumors)) {\r

      \    let d = cont;\r

      \    mStyle(d, { position: 'relative' });\r

      \    d_rumors = mDiv(d, { display: 'flex', gap: 2, position:
      'absolute', h: 30, bottom: 0, right: 0 });\r

      \    for (const rumor of b.rumors) {\r

      \      let dr = mDiv(d_rumors, { h: 24, w: 16, vmargin: 3, align:
      'center', bg: 'dimgray', rounding: 2 }, null, 'R');\r

      \      rumorItems.push({ div: dr, key: rumor });\r

      \    }\r

      \  }\r

      \  let card = isEmpty(items) ? { w: 1, h: 100, ov: 0 } : items[0];\r

      \  let [ov, splay] = separate_lead ? [card.ov * 1.5, 5] : [card.ov,
      2];\r

      \  mContainerSplay(cardcont, 5, card.w, card.h, items.length,
      card.ov * 1.5 * card.w);\r

      \  ui_add_cards_to_hand_container(cardcont, items, list);\r

      \  ui_add_container_title(title, cont, items);\r

      \  let uischweine = [];\r

      \  for (let i = 1; i < items.length; i++) {\r

      \    let item = items[i];\r

      \    if (!b.schweine.includes(i)) face_down(item); else
      add_ui_schwein(item, uischweine);\r

      \  }\r

      \  return {\r

      \    ctype: 'hand',\r

      \    list: list,\r

      \    path: path,\r

      \    container: cont,\r

      \    cardcontainer: cardcont,\r

      \    items: items,\r

      \    schweine: uischweine,\r

      \    harvest: d_harvest,\r

      \    rumors: rumorItems,\r

      \    keycard: items[0],\r

      \  };\r

      }\r\n"
    sig: function ui_type_building(b, dParent, styles = {}, path = 'farm', title =
      '', get_card_func = ari_get_card, separate_lead = false, ishidden =
      false){}
    region: ui (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  qanim:
    name: qanim
    code: "function qanim() {\r

      \  if (!isEmpty(DA.qanim)) {\r

      \    let [f, params] = DA.qanim.shift();\r

      \    f(...params);\r

      \  } \r

      }\r\n"
    sig: function qanim(){}
    region: q (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  mFlexColumnWrap:
    name: mFlexColumnWrap
    code: "function mFlexColumnWrap(d) { mStyle(d, { display: 'flex', 'flex-flow':
      'column wrap' }); }\r\n"
    sig: function mFlexColumnWrap(d){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ui_from_deck_to_hand:
    name: ui_from_deck_to_hand
    code: "function ui_from_deck_to_hand(el, deck, hand) {\r

      \  let topmost = deck.items.shift();\r

      \  console.assert(el == topmost, 'top deck elem is NOT
      correct!!!!')\r

      \  face_up(topmost);\r

      \  let dtop = iDiv(topmost);\r

      \  deck.list = deck.items.map(x => x.key);\r

      \  deck.topmost = deck.items[0];\r

      \  dtop.remove();\r

      \  dtop.style.position = 'static';\r

      \  hand.items.push(topmost);\r

      \  hand.list = hand.items.map(x => x.key);\r

      \  mAppend(hand.container, dtop);\r

      \  mContainerSplay(hand.container, 2, Card.w, Card.h,
      hand.list.length, Card.ovw);\r

      \  mItemSplay(topmost, hand.list, 2, Card.ovw);\r

      }\r\n"
    sig: function ui_from_deck_to_hand(el, deck, hand){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_from_deck_to_hand:
    name: anim_from_deck_to_hand
    code: "function anim_from_deck_to_hand(el, deck, hand) {\r

      \  let topmost = deck.items.shift();\r

      \  console.assert(el == topmost, 'top deck elem is NOT
      correct!!!!')\r

      \  face_up(topmost);\r

      \  let dfrom = iDiv(topmost);\r

      \  deck.list = deck.items.map(x => x.key);\r

      \  deck.topmost = deck.items[0];\r

      \  let dto = iDiv(arrLast(hand.items));\r

      \  let rfrom = getRect(dfrom, mBy('inner_left_panel'));\r

      \  let rto = getRect(dto, mBy('inner_left_panel'));\r

      \  dfrom.style.xIndex = 100;\r

      \  let [offx, offy] = [Card.ovw, 0]\r

      \  let a = aTranslateByEase(dfrom, offx + rto.l - rfrom.l, offy +
      rto.t - rfrom.t, 500, 'ease');\r

      \  a.onfinish = () => {\r

      \    dfrom.remove();\r

      \    dfrom.style.position = 'static';\r

      \    hand.items.push(topmost);\r

      \    hand.list = hand.items.map(x => x.key);\r

      \    mAppend(hand.container, dfrom);\r

      \    mContainerSplay(hand.container, 2, Card.w, Card.h,
      hand.list.length, Card.ovw);\r

      \    mItemSplay(topmost, hand.list, 2, Card.ovw);\r

      \  };\r

      }\r\n"
    sig: function anim_from_deck_to_hand(el, deck, hand){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_from_deck_to_marketX:
    name: anim_from_deck_to_marketX
    code: "function anim_from_deck_to_marketX(deck, market) {\r

      \  anim_turn_top_cardX(deck, () => anim_move_top_card_marketX(deck,
      market));\r

      }\r\n"
    sig: function anim_from_deck_to_marketX(deck, market){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_turn_top_cardX:
    name: anim_turn_top_cardX
    code: "function anim_turn_top_cardX(deck, callback) {
      anim_toggle_face(deck.topmost, callback); }\r\n"
    sig: function anim_turn_top_cardX(deck, callback){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_move_top_card_marketX:
    name: anim_move_top_card_marketX
    code: "function anim_move_top_card_marketX(deck, market) {\r

      \  let topmost = deck.items.shift();\r

      \  let dfrom = iDiv(topmost);\r

      \  deck.list = deck.items.map(x => x.key);\r

      \  deck.topmost = deck.items[0];\r

      \  let dto = isEmpty(market.items) ? market.container :
      iDiv(arrLast(market.items));\r

      \  let rfrom = getRect(dfrom, mBy('inner_left_panel'));\r

      \  let rto = getRect(dto, mBy('inner_left_panel'));\r

      \  dfrom.style.xIndex = 100;\r

      \  let [offx, offy] = isEmpty(market.items) ? [4, 4] : [topmost.w,
      0];\r

      \  let a = aTranslateByEase(dfrom, offx + rto.l - rfrom.l, offy +
      rto.t - rfrom.t, 500, 'ease');\r

      \  a.onfinish = () => {\r

      \    dfrom.remove();\r

      \    dfrom.style.position = 'static';\r

      \    dfrom.style.zIndex = 0;\r

      \    market.items.push(topmost);\r

      \    market.list = market.items.map(x => x.key);\r

      \    mAppend(market.container, dfrom);\r

      \    qanim();\r

      \  };\r

      }\r\n"
    sig: function anim_move_top_card_marketX(deck, market){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_move_top_card_market:
    name: anim_move_top_card_market
    code: "function anim_move_top_card_market(deck, market) {\r

      \  let topmost = deck.items.shift();\r

      \  let dfrom = iDiv(topmost);\r

      \  deck.list = deck.items.map(x => x.key);\r

      \  deck.topmost = deck.items[0];\r

      \  let dto = isEmpty(market.items) ? market.container :
      iDiv(arrLast(market.items));\r

      \  let rfrom = getRect(dfrom, mBy('inner_left_panel'));\r

      \  let rto = getRect(dto, mBy('inner_left_panel'));\r

      \  dfrom.style.xIndex = 100;\r

      \  let [offx, offy] = isEmpty(market.items) ? [4, 4] : [topmost.w,
      0];\r

      \  let a = aTranslateByEase(dfrom, offx + rto.l - rfrom.l, offy +
      rto.t - rfrom.t, 500, 'ease');\r

      \  a.onfinish = () => {\r

      \    dfrom.remove();\r

      \    dfrom.style.position = 'static';\r

      \    dfrom.style.zIndex = 0;\r

      \    market.items.push(topmost);\r

      \    market.list = market.items.map(x => x.key);\r

      \    mAppend(market.container, dfrom);\r

      \    qanim();\r

      \  };\r

      }\r\n"
    sig: function anim_move_top_card_market(deck, market){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_move_top_cardX:
    name: anim_move_top_cardX
    code: "function anim_move_top_cardX(deck, hand) {\r

      \  let topmost = deck.items.shift();\r

      \  let dfrom = iDiv(topmost);\r

      \  deck.list = deck.items.map(x => x.key);\r

      \  deck.topmost = deck.items[0];\r

      \  let dto = iDiv(arrLast(hand.items));\r

      \  let rfrom = getRect(dfrom, mBy('inner_left_panel'));\r

      \  let rto = getRect(dto, mBy('inner_left_panel'));\r

      \  dfrom.style.xIndex = 100;\r

      \  let [offx, offy] = [Card.ovw, 0]\r

      \  let a = aTranslateByEase(dfrom, offx + rto.l - rfrom.l, offy +
      rto.t - rfrom.t, 500, 'ease');\r

      \  a.onfinish = () => {\r

      \    dfrom.remove();\r

      \    dfrom.style.position = 'static';\r

      \    hand.items.push(topmost);\r

      \    hand.list = hand.items.map(x => x.key);\r

      \    mAppend(hand.container, dfrom);\r

      \    mContainerSplay(hand.container, 2, Card.w, Card.h,
      hand.list.length, Card.ovw);\r

      \    mItemSplay(topmost, hand.list, 2, Card.ovw);\r

      \    qanim();\r

      \  };\r

      }\r\n"
    sig: function anim_move_top_cardX(deck, hand){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_from_deck_to_marketX_orig:
    name: anim_from_deck_to_marketX_orig
    code: "function anim_from_deck_to_marketX_orig(el, deck, market) {\r

      \  anim_turn_top_card(el, () => anim_move_top_card_market(el, deck,
      market));\r

      }\r\n"
    sig: function anim_from_deck_to_marketX_orig(el, deck, market){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_from_deck_to_handX:
    name: anim_from_deck_to_handX
    code: "function anim_from_deck_to_handX(el, deck, hand) {\r

      \  anim_turn_top_card(el, () => anim_move_top_card(el, deck,
      hand));\r

      }\r\n"
    sig: function anim_from_deck_to_handX(el, deck, hand){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_turn_top_card:
    name: anim_turn_top_card
    code: "function anim_turn_top_card(el, callback) {\r

      \  anim_toggle_face(el, callback);\r

      }\r\n"
    sig: function anim_turn_top_card(el, callback){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  anim_move_top_card:
    name: anim_move_top_card
    code: "function anim_move_top_card(el, deck, hand) {\r

      \  let topmost = deck.items.shift();\r

      \  console.assert(el == topmost, 'top deck elem is NOT
      correct!!!!')\r

      \  let dfrom = iDiv(topmost);\r

      \  deck.list = deck.items.map(x => x.key);\r

      \  deck.topmost = deck.items[0];\r

      \  let dto = iDiv(arrLast(hand.items));\r

      \  let rfrom = getRect(dfrom, mBy('inner_left_panel'));\r

      \  let rto = getRect(dto, mBy('inner_left_panel'));\r

      \  dfrom.style.xIndex = 100;\r

      \  let [offx, offy] = [Card.ovw, 0]\r

      \  let a = aTranslateByEase(dfrom, offx + rto.l - rfrom.l, offy +
      rto.t - rfrom.t, 500, 'ease');\r

      \  a.onfinish = () => {\r

      \    dfrom.remove();\r

      \    dfrom.style.position = 'static';\r

      \    hand.items.push(topmost);\r

      \    hand.list = hand.items.map(x => x.key);\r

      \    mAppend(hand.container, dfrom);\r

      \    mContainerSplay(hand.container, 2, Card.w, Card.h,
      hand.list.length, Card.ovw);\r

      \    mItemSplay(topmost, hand.list, 2, Card.ovw);\r

      \    qanim();\r

      \  };\r

      }\r\n"
    sig: function anim_move_top_card(el, deck, hand){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ui_make_random_deck:
    name: ui_make_random_deck
    code: "function ui_make_random_deck(n = 10) {\r

      \  let list = choose(get_keys(Aristocards), n);\r

      \  let cont = ui_make_deck_container(n, dTable, { bg: 'random',
      padding: 4 });\r

      \  let items = list.map(x => ari_get_card(x));\r

      \  let topmost = ui_add_cards_to_deck_container(cont, items,
      list);\r

      \  return {\r

      \    list: list,\r

      \    container: cont,\r

      \    items: items,\r

      \    topmost: topmost,\r

      \  };\r

      }\r\n"
    sig: function ui_make_random_deck(n = 10){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ui_make_random_hand:
    name: ui_make_random_hand
    code: "function ui_make_random_hand(n = 1) {\r

      \  let list = choose(get_keys(Aristocards), n);\r

      \  let cont = ui_make_hand_container(n, dTable, { bg: 'random',
      padding: 4 });\r

      \  let items = list.map(x => ari_get_card(x));\r

      \  ui_add_cards_to_hand_container(cont, items, list);\r

      \  return {\r

      \    list: list,\r

      \    container: cont,\r

      \    items: items,\r

      \  };\r

      }\r\n"
    sig: function ui_make_random_hand(n = 1){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ui_make_random_market:
    name: ui_make_random_market
    code: "function ui_make_random_market(n = 1) {\r

      \  let cont = ui_make_card_container(n, dTable, { bg: 'random',
      padding: 4, display: 'flex' });\r

      \  let list = choose(get_keys(Aristocards), n);\r

      \  let items = list.map(x => ari_get_card(x));\r

      \  if (n > 0) ui_add_cards_to_card_container(cont, items, list);\r

      \  return {\r

      \    list: list,\r

      \    container: cont,\r

      \    items: items,\r

      \  };\r

      }\r\n"
    sig: function ui_make_random_market(n = 1){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ui_make_card_container:
    name: ui_make_card_container
    code: "function ui_make_card_container(n, dParent, styles = { bg: 'random',
      padding: 10 }) {\r

      \  let id = getUID('u');\r

      \  let d = mDiv(dParent, styles, id);\r

      \  return d;\r

      }\r\n"
    sig: "function ui_make_card_container(n, dParent, styles = { bg: 'random',
      padding: 10 }){}"
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ui_make_hand_container:
    name: ui_make_hand_container
    code: "function ui_make_hand_container(items, dParent, styles = { bg: 'random',
      padding: 10 }) {\r

      \  let id = getUID('u');\r

      \  let d = mDiv(dParent, styles, id);\r

      \  if (!isEmpty(items)) {\r

      \    let card = items[0];\r

      \    mContainerSplay(d, 2, card.w, card.h, items.length, card.ov *
      card.w);\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: "function ui_make_hand_container(items, dParent, styles = { bg: 'random',
      padding: 10 }){}"
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_make_deck_container:
    name: ui_make_deck_container
    code: "function ui_make_deck_container(list, dParent, styles = { bg: 'random',
      padding: 10 }, get_card_func) {\r

      \  let id = getUID('u');\r

      \  let d = mDiv(dParent, styles, id);\r

      \  if (isEmpty(list)) return d;\r

      \  let c = get_card_func(list[0]);\r

      \  mContainerSplay(d, 4, c.w, c.h, n, 0);\r

      \  return d;\r

      }\r\n"
    sig: "function ui_make_deck_container(list, dParent, styles = { bg: 'random',
      padding: 10 }, get_card_func){}"
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_add_cards_to_deck_container:
    name: ui_add_cards_to_deck_container
    code: "function ui_add_cards_to_deck_container(cont, items, list) {\r

      \  if (nundef(list)) list = items.map(x => x.key);\r

      \  for (const item of items) {\r

      \    mAppend(cont, iDiv(item));\r

      \    mItemSplay(item, list, 4, Card.ovdeck);\r

      \    face_down(item);\r

      \  }\r

      \  return items[0];\r

      }\r\n"
    sig: function ui_add_cards_to_deck_container(cont, items, list){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_add_cards_to_hand_container:
    name: ui_add_cards_to_hand_container
    code: "function ui_add_cards_to_hand_container(cont, items, list) {\r

      \  if (nundef(list)) list = items.map(x => x.key);\r

      \  for (const item of items) {\r

      \    mAppend(cont, iDiv(item));\r

      \    mItemSplay(item, list, 2, Card.ovw);\r

      \  }\r

      }\r\n"
    sig: function ui_add_cards_to_hand_container(cont, items, list){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_add_cards_to_card_container:
    name: ui_add_cards_to_card_container
    code: "function ui_add_cards_to_card_container(cont, items, list) {\r

      \  if (nundef(list)) list = items.map(x => x.key);\r

      \  for (const item of items) {\r

      \    mAppend(cont, iDiv(item));\r

      \  }\r

      }\r\n"
    sig: function ui_add_cards_to_card_container(cont, items, list){}
    region: funcs (cardhelpers.js)
    filename: cardhelpers.js
    type: func
    fname: cardhelpers.js
    path: C:\xampp\htdocs\aroot\simple\cardhelpers.js
    datetime: 2022-04-25-06-45
    timestamp: 1650894323671.2527
    size: 5046
  ui_make_table:
    name: ui_make_table
    code: "function ui_make_table() {\r

      \  let d = mBy('inner_left_panel'); clearElement(d);\r

      \  let dou = mDiv100(d, { display: 'flex' }); \r

      \  dTable = mDiv(dou, { flex: 5, display: 'flex' });\r

      \  return dTable;\r

      }\r\n"
    sig: function ui_make_table(){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ui_make_player:
    name: ui_make_player
    code: "function ui_make_player(otree, uname, dParent) {\r

      \  let id = getUID('u');\r

      \  let bg = otree[uname].color;\r

      \  let styles = { bg: bg, fg: 'contrast', w: '100%' };\r

      \  d = mDiv(dParent, styles, id, uname);\r

      \  return d;\r

      }\r\n"
    sig: function ui_make_player(otree, uname, dParent){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ari_show_deck:
    name: ari_show_deck
    code: "function ari_show_deck(list, dParent) {\r

      \  let id = getUID('u');\r

      \  let d = mDiv(dParent, { bg: 'random', padding: 10 }, id);\r

      \  console.log('list', list);\r

      \  let items = list.map(x => ari_get_card(x));\r

      \  let [w, h] = [items[0].w, items[0].h];\r

      \  console.log('cards', w, h, items);\r

      \  items.map(x => mAppend(d, iDiv(x)));\r

      \  mContainerSplay(d, splay, w, h, items.length, 20);\r

      \  items.map(x => mItemSplay(x, list, splay));\r

      \  return d;\r

      }\r\n"
    sig: function ari_show_deck(list, dParent){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ari_make_cardlist:
    name: ari_make_cardlist
    code: "function ari_make_cardlist(list, splay, dParent) {\r

      \  let id = getUID('u');\r

      \  let d = mDiv(dParent, { bg: 'random', padding: 10 }, id);\r

      \  let items = list.map(x => ari_get_card(x));\r

      \  let [w, h] = [items[0].w, items[0].h];\r

      \  items.map(x => mAppend(d, iDiv(x)));\r

      \  mContainerSplay(d, splay, w, h, items.length, 20);\r

      \  items.map(x => mItemSplay(x, list, splay));\r

      \  return d;\r

      }\r\n"
    sig: function ari_make_cardlist(list, splay, dParent){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ari_ui_player:
    name: ari_ui_player
    code: "function ari_ui_player(otree, uname, dParent) {\r

      \  let dPlayer = ui_make_player(otree, uname, dParent);\r

      \  let dHand = ari_make_cardlist(otree[uname].hand, 2, dPlayer);\r

      }\r\n"
    sig: function ari_ui_player(otree, uname, dParent){}
    region: funcs (ui_helpers.js)
    filename: ui_helpers.js
    type: func
    fname: ui_helpers.js
    path: C:\xampp\htdocs\aroot\base\js\ui_helpers.js
    datetime: 2022-03-01-05-53
    timestamp: 1646142820248.0356
    size: 15429
  ari_ut306_create_staged:
    name: ari_ut306_create_staged
    code: "function ari_ut306_create_staged() { \r

      \  console.log('*** test 306: prep double visit ***');\r

      \  DA.test.number = 306;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo', 'meckele'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_replace_hand_cards_by(fen, 'mimi', ['QSy', 'QSg']);\r

      \  stage_building(fen, fen.iturn, 'estate');\r

      \  fen.players.leo.buildings.farm = [{ list: '4Cy 4Sy 4Hy
      6Dy'.split(' '), h: null }, { list: '5Cy JSy 5Sy 5Dy'.split(' '), h: null
      }];\r

      \  fen.phase = 'queen';\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = [[],\r

      \  [['visit'], ['last'], [0]],\r

      \  [['visit'], ['last'], [1]],\r

      \  [['pass']],\r

      \  ];\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut306_create_staged(){}
    region: funcs (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut206_create_staged:
    name: ari_ut206_create_staged
    code: "function ari_ut206_create_staged() { \r

      \  console.log('*** test 206: prep double visit ***');\r

      \  DA.test.number = 206;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo', 'meckele'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_replace_hand_cards_by(fen, 'mimi', ['QSy', 'QSg']);\r

      \  stage_building(fen, fen.iturn, 'estate');\r

      \  fen.players.leo.buildings.farm = [{ list: '4Cy 4Sy 4Hy
      6Dy'.split(' '), h: null }, { list: '5Cy JSy 5Sy 5Dy'.split(' '), h: null
      }];\r

      \  fen.phase = 'queen';\r

      \  DA.fen0 = fen;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut206_create_staged(){}
    region: funcs (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut113_create_staged:
    name: ari_ut113_create_staged
    code: "function ari_ut113_create_staged() { \r

      \  console.log('*** test 113: buy from open discard w/ jack ***');\r

      \  DA.test.number = 113;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  fen.open_discard = deck_deal(fen.deck, 4);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_replace_hand_cards_by(fen, 'mimi', ['JSy']);\r

      \  stage_correct_buildings(fen, { mimi: { farm: 2, estate: 2,
      chateau: 1 }, leo: { farm: 3 } });\r

      \  fen.phase = 'jack';\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = {\r

      \    mimi_1: [['buy'], [0], [0]],\r

      \  };\r

      \  DA.iter_verify = 2;\r

      \  DA.verify = (ot) => {\r

      \    let res = ot.open_discard.length == 3 && ot.mimi.hand.length ==
      5 && ot.mimi.coins == 2\r

      \      || arrLast(ot.open_discard)[0] == 'J' && ot.mimi.hand.length
      == 4 && ot.mimi.coins == 3;\r

      \    if (!res) console.log('buy form discard does not work!',
      ot.mimi, ot.open_discard);\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut113_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut112_create_staged:
    name: ari_ut112_create_staged
    code: "function ari_ut112_create_staged() { \r

      \  console.log('*** test 112: auction payment test 2 ***');\r

      \  DA.test.number = 112;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo', 'meckele', 'felix',
      'amanda'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  fen.phase = 'queen';\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = {\r

      \    1: [['pass']],\r

      \    2: [['pass']],\r

      \    3: [['pass']],\r

      \    4: [['pass']],\r

      \    5: [['pass']],\r

      \    6: [[1]],\r

      \    7: [[0]],\r

      \    8: [[2]],\r

      \    9: [[2]],\r

      \    10: [[1]],\r

      \    11: [[0]], \r

      \    12: [[1]], \r

      \  };\r

      \  DA.iter_verify = 13;\r

      \  DA.verify = (ot) => {\r

      \    let coins = ot.plorder.map(x => ot[x].coins);\r

      \    let sum = arrSum(coins);\r

      \    let res = sum == 11;\r

      \    if (!res) console.log('payment for auction card wrong', coins,
      sum);\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut112_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut111_create_staged:
    name: ari_ut111_create_staged
    code: "function ari_ut111_create_staged() { \r

      \  console.log('*** test 111: auction payment test ***');\r

      \  DA.test.number = 111;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo', 'meckele'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  fen.open_discard = deck_deal(fen.players.mimi.hand, 2);\r

      \  deck_add(fen.players.leo.hand, 2, fen.open_discard);\r

      \  fen.phase = 'queen';\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = {\r

      \    1: [['pass']],\r

      \    2: [['pass']],\r

      \    3: [['pass']],\r

      \    4: [[0]],\r

      \    5: [[1]],\r

      \    6: [[2]],\r

      \    7: [[0]],\r

      \  };\r

      \  DA.iter_verify = 8;\r

      \  DA.verify = (ot) => {\r

      \    let coins = ot.plorder.map(x => ot[x].coins);\r

      \    let sum = arrSum(coins);\r

      \    let res = sum == 8;\r

      \    if (!res) console.log('payment for auction card wrong', coins,
      sum);\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut111_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut110_create_staged:
    name: ari_ut110_create_staged
    code: "function ari_ut110_create_staged() { \r

      \  console.log('*** test 110: end game 2 ***');\r

      \  DA.test.number = 110;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  fen.open_discard = deck_deal(fen.players.mimi.hand, 2);\r

      \  deck_add(fen.players.leo.hand, 2, fen.open_discard);\r

      \  stage_correct_buildings(fen, { mimi: { farm: 2, estate: 2,
      chateau: 1 }, leo: { farm: 3 } });\r

      \  fen.phase = 'jack';\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = [\r

      \    [[]],\r

      \    [['pass']], [['pass']], \r

      \    [[0]], [[0]], \r

      \    [['pass']], [['pass']], \r

      \    [[1]], \r

      \  ];\r

      \  DA.iter_verify = 8;\r

      \  DA.verify = (ot) => {\r

      \    let res = ot.stage == 3;\r

      \    if (!res) console.log('Not ending game FAIL!', ot.stage);\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut110_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut109_create_staged:
    name: ari_ut109_create_staged
    code: "function ari_ut109_create_staged() { \r

      \  console.log('*** test 109: harvest ***');\r

      \  DA.test.number = 109;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo', 'meckele'];\r

      \  let fen = ari_setup(player_names);\r

      \  fen.open_discard = deck_deal(fen.deck, 4);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_correct_buildings(fen, { mimi: { farm: 2, estate: 2 }, leo:
      { farm: 3 }, meckele: { farm: 2 } });\r

      \  fen.phase = 'jack';\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = [\r

      \    [[]],\r

      \    [['pass']], [['pass']], [['pass']], \r

      \    [[0]], [[0]], [[0]], \r

      \    [[0, 1]], [[0, 1]], [[0, 1]], \r

      \    [['harvest'], [0]],\r

      \  ];\r

      \  DA.iter_verify = 11;\r

      \  DA.verify = (ot) => {\r

      \    let uname = ot.uname;\r

      \    let res = ot[uname].buildings.farm[0].h == null &&
      ot[uname].hand.length == 6;\r

      \    if (!res) console.log('harvest FAIL!', ot[uname]);\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut109_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut108_create_staged:
    name: ari_ut108_create_staged
    code: "function ari_ut108_create_staged() { \r

      \  console.log('*** test 108: buy from open discard ***');\r

      \  DA.test.number = 108;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  fen.open_discard = deck_deal(fen.deck, 4);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_correct_buildings(fen, { mimi: { farm: 2, estate: 2,
      chateau: 1 }, leo: { farm: 3 } });\r

      \  fen.phase = 'jack';\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = {\r

      \    mimi_1: [['buy'], [0], [0]],\r

      \  };\r

      \  DA.iter_verify = 2;\r

      \  DA.verify = (ot) => {\r

      \    let res = ot.open_discard.length == 3 && ot.mimi.hand.length ==
      5 && ot.mimi.coins == 2\r

      \      || arrLast(ot.open_discard)[0] == 'J' && ot.mimi.hand.length
      == 4 && ot.mimi.coins == 3;\r

      \    if (!res) console.log('buy form discard does not work!',
      ot.mimi, ot.open_discard);\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut108_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut107_create_staged:
    name: ari_ut107_create_staged
    code: "function ari_ut107_create_staged() { \r

      \  console.log('*** test 107: end game ***');\r

      \  DA.test.number = 107;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_correct_buildings(fen, { mimi: { farm: 2, estate: 2,
      chateau: 1 }, leo: { farm: 3 } });\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = {\r

      \    mimi_1: [['pass']],\r

      \    leo_2: [['pass']],\r

      \    3: [[0]], \r

      \  };\r

      \  DA.iter_verify = 4;\r

      \  DA.verify = (ot) => {\r

      \    let res = ot.winners = 'mimi';\r

      \    if (!res) console.log('end game mimi should win didnt work!',
      ot);\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut107_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut106_create_staged:
    name: ari_ut106_create_staged
    code: "function ari_ut106_create_staged() { \r

      \  console.log('*** test 106: double visit ***');\r

      \  DA.test.number = 106;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo', 'meckele'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_replace_hand_cards_by(fen, 'mimi', ['QSy', 'QSg']);\r

      \  stage_building(fen, fen.iturn, 'estate');\r

      \  stage_building(fen, 1, 'chateau');\r

      \  stage_building(fen, 2, 'chateau');\r

      \  fen.phase = 'queen';\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = {\r

      \    mimi_1: [['visit'], [0], [0]],\r

      \    mimi_2: [['visit'], [0], [0]],\r

      \  };\r

      \  DA.iter_verify = 3;\r

      \  DA.verify = (ot) => {\r

      \    let uname_visited = ot.plorder[1];\r

      \    let chateau = ot[uname_visited].buildings.chateau;\r

      \    console.log('chateau:', uname_visited, chateau);\r

      \    let res = ot.mimi.coins == 5 ||
      ot[uname_visited].buildings.chateau.length == 0;\r

      \    if (!res) console.log('double visit failed or building is
      correct!!!');\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut106_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut105_create_staged:
    name: ari_ut105_create_staged
    code: "function ari_ut105_create_staged() { \r

      \  console.log('*** test 105: visit ***');\r

      \  DA.test.number = 105;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo', 'meckele'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_replace_hand_cards_by(fen, 'mimi', ['QSy']);\r

      \  stage_building(fen, fen.iturn, 'estate');\r

      \  stage_building(fen, 1, 'estate');\r

      \  stage_building(fen, 2, 'estate');\r

      \  fen.phase = 'queen';\r

      \  DA.fen0 = fen;\r

      \  DA.iter_verify = 2;\r

      \  DA.verify = (ot) => {\r

      \    let uname_visited = ot.uname;\r

      \    let building = ot[uname_visited].buildings.estate[0];\r

      \    let res = ot.mimi.coins == 2 || ot.mimi.coins == 4 ||
      ot.mimi.hand.length + ot.mimi.stall.length == 6;\r

      \    if (!res) console.log('mimi visit payment did not work!',
      building.list);\r

      \    return res;\r

      \  };\r

      \  DA.auto_moves = {\r

      \    mimi_1: [['visit'], [0], [0], ['pass']],\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut105_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut104_create_staged:
    name: ari_ut104_create_staged
    code: "function ari_ut104_create_staged() { \r

      \  console.log('*** test 104: downgrade from estate to farm ***');\r

      \  DA.test.number = 104;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen);\r

      \  stage_building(fen, fen.iturn, 'estate');\r

      \  DA.fen0 = fen;\r

      \  DA.iter_verify = 2;\r

      \  DA.verify = (ot) => {\r

      \    let stall_sz = { mimi: 0, leo: 3 };\r

      \    let res = ot.mimi.buildings.farm.length == 1 &&
      ot.mimi.buildings.estate.length == 0;\r

      \    if (!res) console.log('mimi buildings', ot.mimi.buildings);\r

      \    return res;\r

      \  };\r

      \  DA.auto_moves = {\r

      \    mimi_1: [['downgrade'], [0]],\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut104_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut103_create_staged:
    name: ari_ut103_create_staged
    code: "function ari_ut103_create_staged() { \r

      \  console.log('*** test 103: trade ***');\r

      \  DA.test.number = 103;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all_mimi_starts(fen, 2);\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = {\r

      \    mimi_1: [['trade'], [1, 3]],\r

      \    mimi_2: [['pass']],\r

      \    leo_3: [['trade'], [1, 3]],\r

      \    leo_4: [['pass']],\r

      \  };\r

      \  DA.iter_verify = 5;\r

      \  DA.verify = (ot) => {\r

      \    let res = firstCond(ot.mimi.hand, x => x ==
      DA.fen0.market[1]);\r

      \    if (!res) console.log('mimi stall does not contain market card
      from start!!!');\r

      \    return res;\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut103_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut102_create_staged:
    name: ari_ut102_create_staged
    code: "function ari_ut102_create_staged() { \r

      \  console.log('*** test 102: stall selection mimi-leo ***');\r

      \  DA.test.number = 102;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  ari_test_hand_to_discard(fen, 'mimi'); \r

      \  fen.stage = 3;\r

      \  DA.fen0 = fen;\r

      \  DA.iter_verify = 3;\r

      \  DA.verify = (ot) => {\r

      \    let stall_sz = { mimi: 0, leo: 3 };\r

      \    let res = forAll(ot.plorder, x => ot[x].stall.length ==
      stall_sz[x]);\r

      \    if (!res) for (const uname of ot.plorder) console.log('pl',
      uname, 'stall', ot[uname].stall.length, 'should be', stall_sz[uname]);\r

      \    return res;\r

      \  };\r

      \  DA.auto_moves = {\r

      \    leo_2: [[0, 1, 2]],\r

      \  };\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut102_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut101_create_staged:
    name: ari_ut101_create_staged
    code: "function ari_ut101_create_staged() { \r

      \  console.log('*** test 101: stall selection 5 players ***');\r

      \  DA.test.number = 101;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'amanda', 'felix', 'lauren',
      'blade'];\r

      \  let fen = ari_setup(player_names);\r

      \  ari_test_hand_to_discard(fen, 'mimi'); \r

      \  ari_test_hand_to_discard(fen, 'felix'); \r

      \  fen.stage = 3;\r

      \  DA.fen0 = fen;\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  DA.iter_verify = 6;\r

      \  DA.verify = (ot) => {\r

      \    let stall_sz = { mimi: 0, amanda: 3, felix: 0, lauren: 1,
      blade: 2 };\r

      \    let res = forAll(ot.plorder, x => ot[x].stall.length ==
      stall_sz[x]);\r

      \    if (!res) for (const uname of ot.plorder) console.log('pl',
      uname, 'stall', ot[uname].stall.length, 'should be', stall_sz[uname]);\r

      \    return res;\r

      \  };\r

      \  DA.auto_moves = {\r

      \    amanda_2: [[0, 1, 2]],\r

      \    lauren_4: [[0]],\r

      \    blade_5: [[0, 1]],\r

      \  }\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut101_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut100_create_staged:
    name: ari_ut100_create_staged
    code: "function ari_ut100_create_staged() { \r

      \  console.log('*** test 100: tax ***');\r

      \  DA.test.number = 100;\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'amanda', 'felix', 'lauren',
      'blade'];\r

      \  let fen = ari_setup(player_names);\r

      \  ari_test_hand_to_discard(fen, 'mimi'); \r

      \  deck_add(fen.deck, 3, fen.players.amanda.hand); \r

      \  ari_test_hand_to_discard(fen, 'felix', 3); \r

      \  deck_add(fen.deck, 1, fen.players.blade.hand); \r

      \  let sz = ARI.sz_hand;\r

      \  fen.pl_tax = { mimi: -sz, amanda: 3, felix: -sz + 3, lauren: 0,
      blade: 1 };\r

      \  [fen.iturn, fen.turn] = [1, ['amanda']];\r

      \  fen.stage = 2;\r

      \  DA.fen0 = fen;\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  DA.iter_verify = 3;\r

      \  DA.verify = (ot) => {\r

      \    let res = forAll(ot.plorder, x => ot[x].hand.length <= sz);\r

      \    if (!res) for (const uname of ot.plorder) console.log('pl',
      uname, 'hand', ot[uname].hand.length, 'should be', Math.min(sz,
      DA.fen0.players[uname].hand.length));\r

      \    return res;\r

      \  };\r

      \  DA.auto_moves = {\r

      \    amanda_1: [[0, 1, 2]],\r

      \    blade_2: [[0]],\r

      \  }\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut100_create_staged(){}
    region: echte (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut10_create_staged:
    name: ari_ut10_create_staged
    code: "function ari_ut10_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut10_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut11_create_staged:
    name: ari_ut11_create_staged
    code: "function ari_ut11_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  let [mimi, leo] = [fen.players.mimi, fen.players.leo];\r

      \  mimi.buildings.farm = [{ list: deck_deal(fen.deck, 4), h: null
      }];\r

      \  leo.buildings.farm = [{ list: deck_deal(fen.deck, 4), h: null
      }];\r

      \  fen.open_discard = deck_deal(fen.deck, 4);\r

      \  fen.market = deck_deal(fen.deck, 2);\r

      \  fen.phase = 'king';\r

      \  arisim_stage_4(fen, 3, 3);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut11_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut12_create_staged:
    name: ari_ut12_create_staged
    code: "function ari_ut12_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'amanda', 'felix', 'lauren',
      'blade'];\r

      \  let fen = ari_setup(player_names);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut12_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut13_create_staged:
    name: ari_ut13_create_staged
    code: "function ari_ut13_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'amanda', 'felix', 'lauren',
      'blade'];\r

      \  let fen = ari_setup(player_names);\r

      \  ari_test_hand_to_discard(fen, 'mimi');\r

      \  ari_test_hand_to_discard(fen, 'lauren');\r

      \  console.log('mimi', fen.players.mimi)\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut13_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut14_create_staged:
    name: ari_ut14_create_staged
    code: "function ari_ut14_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'amanda', 'felix', 'lauren',
      'blade'];\r

      \  let fen = ari_setup(player_names);\r

      \  DA.fen0 = jsCopy(fen);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all(fen, 1);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  DA.iter_verify = 2;\r

      \  DA.verify = (ot) => {\r

      \    let plast = arrLast(ot.round);\r

      \    let ok = sameList(ot[plast].hand,
      DA.fen0.players[plast].hand);\r

      \    console.log('pl', plast, 'hand', ot[plast].hand, 'should be',
      DA.fen0.players[plast].hand);\r

      \    return ok;\r

      \  }\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut14_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut15_create_staged:
    name: ari_ut15_create_staged
    code: "function ari_ut15_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'amanda', 'felix', 'lauren',
      'blade'];\r

      \  let fen = DA.fen0 = ari_setup(player_names);\r

      \  ari_test_hand_to_discard(fen, 'mimi');\r

      \  ari_test_hand_to_discard(fen, 'amanda');\r

      \  ari_test_hand_to_discard(fen, 'lauren');\r

      \  ari_test_hand_to_discard(fen, 'blade');\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  DA.iter_verify = 3;\r

      \  DA.verify = (ot) => ot.uname == 'felix';\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut15_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut16_create_staged:
    name: ari_ut16_create_staged
    code: "function ari_ut16_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut16_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut0_create_staged:
    name: ari_ut0_create_staged
    code: "function ari_ut0_create_staged() {\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    while (!isEmpty(pl.hand)) last_elem_from_to(pl.hand,
      fen.deck);\r

      \  }\r

      \  fen.players.mimi.hand = 'AHb ADb 2Cb 4Cb 6Cb KCb QDb'.split('
      ');\r

      \  fen.players.leo.hand = 'ACb ASb 2Db 4Db 6Db KDb QSb'.split('
      ');\r

      \  fen.players.mimi.buildings.farm = [{ list: '4Cr 4Sr 4Sb
      4Dr'.split(' '), h: null }, { list: '5Cr 5Sr 5Sb 5Dr'.split(' '), h: null
      }];\r

      \  fen.players.mimi.buildings.estate = [{ list: 'TCr TSr TSb TDr
      TDb'.split(' '), h: null }];\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut0_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut1_create_staged:
    name: ari_ut1_create_staged
    code: "function ari_ut1_create_staged() {\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  top_elem_from_to(fen.deck, fen.market);\r

      \  top_elem_from_to(fen.deck, fen.market);\r

      \  fen.stage = 4;\r

      \  top_elem_from_to(fen.players.mimi.hand,
      fen.players.mimi.stall);\r

      \  top_elem_from_to(fen.players.mimi.hand,
      fen.players.mimi.stall);\r

      \  fen.iturn = 1;\r

      \  fen.turn = ['leo'];\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut1_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut2_create_staged:
    name: ari_ut2_create_staged
    code: "function ari_ut2_create_staged() {\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4(fen);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut2_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut3_create_staged:
    name: ari_ut3_create_staged
    code: "function ari_ut3_create_staged() {\r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    while (!isEmpty(pl.hand)) last_elem_from_to(pl.hand,
      fen.deck);\r

      \  }\r

      \  fen.players.mimi.hand = 'AHb ADb 2Cb 4Cb 6Cb KCb QDb'.split('
      ');\r

      \  fen.players.leo.hand = 'ACb KDb QSb ASb 2Db 4Db 6Db'.split('
      ');\r

      \  fen.players.mimi.buildings.farm = [{ list: '4Cr 7Sr 4Sb
      4Dr'.split(' '), h: null }];\r

      \  fen.players.leo.buildings.estate = [{ list: 'TCr 7Sr TSb TDr
      TDb'.split(' '), h: null }];\r

      \  fen.market = 'KSb 3Sb'.split(' ');\r

      \  arisim_stage_4(fen, 3, 2);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut3_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut4_create_staged:
    name: ari_ut4_create_staged
    code: "function ari_ut4_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    while (!isEmpty(pl.hand)) last_elem_from_to(pl.hand,
      fen.deck);\r

      \  }\r

      \  fen.players.mimi.hand = 'AHb ADb 2Cb 4Cb 6Cb KCb QDb'.split('
      ');\r

      \  fen.players.leo.hand = 'ACb KDb QSb ASb 2Db 4Db 6Db'.split('
      ');\r

      \  fen.players.mimi.buildings.farm = [{ list: '4Cr 7Sr 4Sb
      4Dr'.split(' '), h: null }];\r

      \  fen.players.leo.buildings.estate = [{ list: 'TCr 7Sr TSb TDr
      TDb'.split(' '), h: null }];\r

      \  fen.market = 'KSb 3Sb'.split(' ');\r

      \  fen.phase = 'queen';\r

      \  fen.stage = 11;\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut4_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut5_create_staged:
    name: ari_ut5_create_staged
    code: "function ari_ut5_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    while (!isEmpty(pl.hand)) last_elem_from_to(pl.hand,
      fen.deck);\r

      \  }\r

      \  fen.players.mimi.hand = 'AHb ADb 2Cb 4Cb 6Cb KCb QDb'.split('
      ');\r

      \  fen.players.leo.hand = 'ACb KDb QSb ASb 2Db 4Db 6Db'.split('
      ');\r

      \  fen.players.mimi.buildings.farm = [{ list: '4Cr 7Sr 4Sb
      4Dr'.split(' '), h: null }];\r

      \  fen.players.leo.buildings.estate = [{ list: 'TCr 7Sr TSb TDr
      TDb'.split(' '), h: null }];\r

      \  fen.phase = 'jack';\r

      \  fen.stage = 3;\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut5_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut6_create_staged:
    name: ari_ut6_create_staged
    code: "function ari_ut6_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    while (!isEmpty(pl.hand)) last_elem_from_to(pl.hand,
      fen.deck);\r

      \  }\r

      \  fen.players.mimi.hand = 'AHb ADb 2Cb 4Cb 6Cb KCb QDb'.split('
      ');\r

      \  fen.players.leo.hand = 'ACb KDb QSb ASb 2Db 4Db 6Db'.split('
      ');\r

      \  fen.players.mimi.buildings.farm = [{ list: '4Cr 7Sr 4Sb
      4Dr'.split(' '), h: null }];\r

      \  fen.players.leo.buildings.estate = [{ list: 'TCr 7Sr TSb TDr
      TDb'.split(' '), h: null }];\r

      \  for (let i = 0; i < 3; i++) {\r

      \    top_elem_from_to(fen.deck, fen.market);\r

      \  }\r

      \  fen.phase = 'jack';\r

      \  arisim_stage_4(fen);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut6_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut7_create_staged:
    name: ari_ut7_create_staged
    code: "function ari_ut7_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    while (!isEmpty(pl.hand)) last_elem_from_to(pl.hand,
      fen.deck);\r

      \  }\r

      \  fen.players.mimi.hand = 'AHb ADb 2Cb 4Cb 6Cb QCb QDb'.split('
      ');\r

      \  fen.players.leo.hand = 'ACb KDb QSb ASb 2Db 4Db 6Db'.split('
      ');\r

      \  fen.players.mimi.buildings.farm = [{ list: '4Cr 7Sr 4Sb
      4Dr'.split(' '), h: null }];\r

      \  fen.players.leo.buildings.estate = [{ list: 'TCr 7Sr TSb TDr
      TDb'.split(' '), h: null }];\r

      \  for (let i = 0; i < 3; i++) {\r

      \    top_elem_from_to(fen.deck, fen.market);\r

      \  }\r

      \  fen.phase = 'jack';\r

      \  arisim_stage_4(fen);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut7_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut8_create_staged:
    name: ari_ut8_create_staged
    code: "function ari_ut8_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  deck_add(fen.deck, 1, fen.players.mimi.hand); //'AHb ADb 2Cb 4Cb
      6Cb QCb QDb'.split(' ');\r

      \  //deck_add(fen.deck, 2, fen.players.leo.hand); //'ACb KDb QSb ASb
      2Db 4Db 6Db'.split(' ');\r

      \  fen.players.mimi.buildings.farm = [{ list: deck_deal(fen.deck,
      4), h: '3Hb' }];\r

      \  fen.players.leo.buildings.farm = [{ list: deck_deal(fen.deck, 4),
      h: null }];\r

      \  fen.players.leo.buildings.estate = [{ list: deck_deal(fen.deck,
      5), h: null }];\r

      \  fen.market = deck_deal(fen.deck, 3);\r

      \  fen.phase = 'jack';\r

      \  arisim_stage_4(fen);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut8_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_ut9_create_staged:
    name: ari_ut9_create_staged
    code: "function ari_ut9_create_staged() { \r

      \  Session.cur_game = 'gAristo';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = ari_setup(player_names);\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    while (!isEmpty(pl.hand)) last_elem_from_to(pl.hand,
      fen.deck);\r

      \  }\r

      \  fen.players.mimi.hand = 'AHb ADb 2Cb 4Cb 6Cb QCb QDb'.split('
      ');\r

      \  fen.players.leo.hand = 'ACb KDb QSb ASb 2Db 4Db 6Db'.split('
      ');\r

      \  fen.players.mimi.buildings.farm = [{ list: '4Cr 7Sr 4Sb
      4Dr'.split(' '), h: '3Hb' }];\r

      \  fen.players.leo.buildings.farm = [{ list: 'JCr JSr JSb
      JDr'.split(' '), h: '3Sr' }];\r

      \  fen.players.leo.buildings.estate = [{ list: 'TCr 7Sr TSb TDr
      TDb'.split(' '), h: null }];\r

      \  for (let i = 0; i < 3; i++) {\r

      \    top_elem_from_to(fen.deck, fen.market);\r

      \  }\r

      \  fen.phase = 'king';\r

      \  arisim_stage_4(fen);\r

      \  DA.staged_moves = [];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ari_ut9_create_staged(){}
    region: aristo (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_undo_random_deal:
    name: inno_undo_random_deal
    code: "function inno_undo_random_deal(fen) {\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    last_elem_from_to(pl.hand, fen.decks.E[1]);\r

      \    last_elem_from_to(pl.hand, fen.decks.B[1]);\r

      \  }\r

      }\r\n"
    sig: function inno_undo_random_deal(fen){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut0_create_staged:
    name: inno_ut0_create_staged
    code: "function inno_ut0_create_staged() {\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  console.log('fen', fen)\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('agriculture', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  DA.staged_moves = ['mimi.hand.agriculture',
      'leo.hand.metalworking', 'mimi.board.yellow.agriculture',
      'mimi.hand.comb',\r

      \    'leo.board.red.metalworking', 'leo.board.red.metalworking',
      'mimi.board.yellow.agriculture', 'pass', 'mimi.board.yellow.agriculture',
      'pass'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut0_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut1_create_staged:
    name: inno_ut1_create_staged
    code: "function inno_ut1_create_staged() {\r

      \  console.log('*** TEST: activate agriculture ***');\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('agriculture', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  DA.staged_moves = ['mimi.hand.agriculture',
      'leo.hand.metalworking', 'mimi.board.yellow.agriculture',
      'mimi.hand.comb'];\r

      \  DA.iter = 13;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut1_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut2_create_staged:
    name: inno_ut2_create_staged
    code: "function inno_ut2_create_staged() {\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('agriculture', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  DA.staged_moves = ['mimi.hand.agriculture',
      'leo.hand.metalworking'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut2_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut3_create_staged:
    name: inno_ut3_create_staged
    code: "function inno_ut3_create_staged() {\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo', 'felix', 'amanda'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo, felix, amanda] = [fen.decks,
      fen.players.mimi, fen.players.leo, fen.players.felix,
      fen.players.amanda];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('wheel', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  elem_from_to('agriculture', deck1, felix.hand);\r

      \  elem_from_to('chopsticks', deck2, felix.hand);\r

      \  elem_from_to('pottery', deck1, amanda.hand);\r

      \  elem_from_to('dice', deck2, amanda.hand);\r

      \  DA.staged_moves = ['mimi.hand.wheel', 'leo.hand.metalworking',
      'felix.hand.agriculture', 'amanda.hand.dice'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut3_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut4_create_staged:
    name: inno_ut4_create_staged
    code: "function inno_ut4_create_staged() {\r

      \  console.log('*** TEST: sharing agriculture ***');\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo', 'felix'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo, felix] = [fen.decks, fen.players.mimi,
      fen.players.leo, fen.players.felix];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('pottery', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  elem_from_to('agriculture', deck1, felix.hand);\r

      \  elem_from_to('chopsticks', deck2, felix.hand);\r

      \  DA.staged_moves = ['mimi.hand.pottery', 'leo.hand.soap',
      'felix.hand.agriculture'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut4_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut5_create_staged:
    name: inno_ut5_create_staged
    code: "function inno_ut5_create_staged() {\r

      \  console.log('*** TEST: sharing metalworking ***');\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo', 'felix'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo, felix] = [fen.decks, fen.players.mimi,
      fen.players.leo, fen.players.felix];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('wheel', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  elem_from_to('agriculture', deck1, felix.hand);\r

      \  elem_from_to('chopsticks', deck2, felix.hand);\r

      \  DA.staged_moves = ['mimi.hand.wheel', 'leo.hand.metalworking',
      'felix.hand.agriculture', 'draw.decks.B.1'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut5_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut6_create_staged:
    name: inno_ut6_create_staged
    code: "function inno_ut6_create_staged() {\r

      \  console.log('*** TEST: draw ***');\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('wheel', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  DA.staged_moves = ['mimi.hand.wheel', 'leo.hand.soap'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut6_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut7_create_staged:
    name: inno_ut7_create_staged
    code: "function inno_ut7_create_staged() {\r

      \  console.log('*** TEST: draw 2 ***');\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('wheel', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  DA.staged_moves = ['mimi.hand.wheel', 'leo.hand.soap',
      'decks.E.1', 'decks.B.1', 'decks.B.1'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut7_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut8_create_staged:
    name: inno_ut8_create_staged
    code: "function inno_ut8_create_staged() {\r

      \  console.log('*** TEST: splay up ***');\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('agriculture', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('puppet', deck2, leo.hand);\r

      \  elem_from_to('chopsticks', deck2, mimi.board.yellow);\r

      \  elem_from_to('soap', deck2, mimi.board.yellow);\r

      \  elem_from_to('fermenting', decks.B[2], mimi.board.yellow);\r

      \  fen.players.mimi.splays.yellow = 3;\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut8_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut9_create_staged:
    name: inno_ut9_create_staged
    code: "function inno_ut9_create_staged() {\r

      \  console.log('*** TEST: splay complex ***');\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('agriculture', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('puppet', deck2, leo.hand);\r

      \  let mydeck1 = decks.B[1].map(x => ({ key: x, deck: decks.B[1]
      }));\r

      \  let mydeck2 = decks.B[2].map(x => ({ key: x, deck: decks.B[2]
      }));\r

      \  let mydeck3 = decks.B[3].map(x => ({ key: x, deck: decks.B[3]
      }));\r

      \  let mydecks = mydeck1.concat(mydeck2).concat(mydeck3);\r

      \  for (const x of mydecks) { elem_from_to(x.key, x.deck,
      mimi.board[inno_get_cardinfo(x.key).color]); }\r

      \  fen.players.mimi.splays.blue = 3;\r

      \  fen.players.mimi.splays.red = 0;\r

      \  fen.players.mimi.splays.green = 1;\r

      \  fen.players.mimi.splays.yellow = 2;\r

      \  fen.players.mimi.splays.purple = 2;\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut9_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut10_create_staged:
    name: inno_ut10_create_staged
    code: "function inno_ut10_create_staged() {\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('agriculture', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  DA.staged_moves = ['mimi.hand.agriculture',
      'leo.hand.metalworking', 'draw', 'draw', 'draw', 'draw'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut10_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut11_create_staged:
    name: inno_ut11_create_staged
    code: "function inno_ut11_create_staged() {\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('agriculture', deck1, mimi.hand);\r

      \  elem_from_to('comb', deck2, mimi.hand);\r

      \  elem_from_to('metalworking', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  DA.staged_moves = ['mimi.hand.agriculture',
      'leo.hand.metalworking', 'draw', 'draw', 'draw', 'draw', 'meld', 'meld',
      'draw', 'draw', 'meld', 'meld'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut11_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  inno_ut12_create_staged:
    name: inno_ut12_create_staged
    code: "function inno_ut12_create_staged() {\r

      \  console.log('*** TEST: activate code_of_laws ***');\r

      \  Session.cur_game = 'gPreinno';\r

      \  let player_names = ['mimi', 'leo'];\r

      \  let fen = inno_setup(player_names);\r

      \  let [decks, mimi, leo] = [fen.decks, fen.players.mimi,
      fen.players.leo];\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  inno_undo_random_deal(fen);\r

      \  elem_from_to('code_of_laws', deck1, mimi.hand);\r

      \  elem_from_to('puppet', deck2, mimi.hand);\r

      \  elem_from_to('sailing', deck1, leo.hand);\r

      \  elem_from_to('soap', deck2, leo.hand);\r

      \  DA.staged_moves = ['mimi.hand.code_of_laws', 'leo.hand.sailing',
      'mimi.board.purple.code_of_laws', 'leo.hand.soap', 'mimi.hand.puppet'];\r

      \  DA.iter = 100;\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function inno_ut12_create_staged(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  test_engine_run_next:
    name: test_engine_run_next
    code: "function test_engine_run_next(list) {\r

      \  if (nundef(list)) {\r

      \    list = DA.test.list = arrRange(100, DA.test.number - 1); \r

      \  }\r

      \  if (isEmpty(list)) {\r

      \    console.log('*** all tests finished ***');\r

      \    DA.test.suiteRunning = DA.test.running = false;\r

      \    shield_off();\r

      \    return;\r

      \  }\r

      \  let n = list.shift();\r

      \  DA.test.iter = 0;\r

      \  onclick_ut_n('ari', n);\r

      }\r\n"
    sig: function test_engine_run_next(list){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  verify_unit_test:
    name: verify_unit_test
    code: "function verify_unit_test(otree) {\r

      \  if (isdef(DA.verify) && DA.test.iter == DA.iter_verify) {\r

      \    DA.test.running = false;\r

      \    let res = DA.verify(otree);\r

      \    console.log('***UNIT TEST ' + DA.test.number, res ? 'passed...'
      : 'FAILED!!!!!!!!!!!!!!!!');\r

      \    console.assert(res, '*** _ TEST FAIL ***')\r

      \    if (DA.test.suiteRunning) test_engine_run_next(DA.test.list);\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function verify_unit_test(otree){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  add_to_chain:
    name: add_to_chain
    code: "function add_to_chain(list) { DA.chain = DA.chain.concat(list); }\r\n"
    sig: function add_to_chain(list){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  old_stage_moves:
    name: old_stage_moves
    code: "function old_stage_moves() {\r

      \  for (const a of arguments) {\r

      \    let [uname, x, cardname] = a.split('.');\r

      \    DA.chain.push(() => {\r

      \      let g = Session;\r

      \      let state = { selected: {} }; \r

      \      state.selected[uname] = [a];\r

      \      let o = { uname: uname, tid: g.table.id, state: state,
      player_status: 'joined' };\r

      \      to_server(o, 'turn_send_move');\r

      \    })\r

      \  }\r

      }\r\n"
    sig: function old_stage_moves(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  stage_moves:
    name: stage_moves
    code: "function stage_moves() {\r

      \  for (const a of arguments) {\r

      \    let [uname, x, cardname] = a.split('.');\r

      \    DA.chain.push(() => {\r

      \      let g = Session;\r

      \      let state = { selected: {} }; \r

      \      state.selected[uname] = [a];\r

      \      let o = { uname: uname, tid: g.table.id, state: state,
      player_status: 'joined' };\r

      \      to_server(o, 'turn_update');\r

      \    })\r

      \  }\r

      }\r\n"
    sig: function stage_moves(){}
    region: NEW (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  arisim_stage_3:
    name: arisim_stage_3
    code: "function arisim_stage_3(fen) {\r

      \  top_elem_from_to(fen.deck, fen.market);\r

      \  top_elem_from_to(fen.deck, fen.market);\r

      \  if (fen.phase == 'jack') top_elem_from_to(fen.deck,
      fen.market);\r

      \  fen.stage = 4;\r

      }\r\n"
    sig: function arisim_stage_3(fen){}
    region: ARI (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  arisim_stage_4:
    name: arisim_stage_4
    code: "function arisim_stage_4(fen, n_mimi = 2, n_leo = 3) {\r

      \  for (let i = 0; i < n_mimi; i++)
      top_elem_from_to(fen.players.mimi.hand, fen.players.mimi.stall);\r

      \  for (let i = 0; i < n_leo;
      i++)  top_elem_from_to(fen.players.leo.hand, fen.players.leo.stall);\r

      \  fen.stage = 5;\r

      \  let valmimi = fen.players.mimi.stall_value =
      arrSum(fen.players.mimi.stall.map(x => ari_get_card(x).val));\r

      \  let valleo = fen.players.leo.stall_value =
      arrSum(fen.players.leo.stall.map(x => ari_get_card(x).val));\r

      \  let minplayer = valmimi <= valleo ? 'mimi' : 'leo';\r

      \  fen.iturn = fen.plorder.indexOf(minplayer); fen.turn =
      [minplayer];\r

      \  fen.num_actions = fen.total_pl_actions =
      fen.players[minplayer].stall.length;\r

      \  fen.action_number = 1;\r

      }\r\n"
    sig: function arisim_stage_4(fen, n_mimi = 2, n_leo = 3){}
    region: ARI (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  arisim_stage_4_all_mimi_starts:
    name: arisim_stage_4_all_mimi_starts
    code: "function arisim_stage_4_all_mimi_starts(fen, n = 3) {\r

      \  for (let i = 0; i < n; i++)
      top_elem_from_to(fen.players.mimi.hand, fen.players.mimi.stall);\r

      \  let others = get_keys(fen.players).filter(x => x != 'mimi');\r

      \  for (const uname of others) {\r

      \    for (let i = 0; i < n;
      i++)  top_elem_from_to(fen.players[uname].hand,
      fen.players[uname].stall);\r

      \  }\r

      \  let list = [];\r

      \  for (const uname of get_keys(fen.players)) {\r

      \    fen.players[uname].stall_value =
      arrSum(fen.players[uname].stall.map(x => ari_get_card(x).val));\r

      \    list.push({ uname: uname, val: fen.players[uname].stall_value
      });\r

      \  }\r

      \  fen.stage = 5;\r

      \  list = sortBy(list, 'val');\r

      \  let minplayer = list[0].uname;\r

      \  if (minplayer != 'mimi') {\r

      \    console.log('NOT mimi!!! minplayer', minplayer)\r

      \    let best_stall = fen.players[minplayer].stall;\r

      \    let best_stall_value = fen.players[minplayer].stall_value;\r

      \    fen.players[minplayer].stall = fen.players.mimi.stall;\r

      \    fen.players[minplayer].stall_value =
      fen.players.mimi.stall_value;\r

      \    fen.players.mimi.stall = best_stall;\r

      \    fen.players.mimi.stall_value = best_stall_value;\r

      \    minplayer = 'mimi';\r

      \  }\r

      \  fen.iturn = fen.plorder.indexOf(minplayer);\r

      \  fen.turn = [minplayer];\r

      \  console.assert(fen.turn == ['mimi'], 'WTF?????????????????');\r

      \  fen.num_actions = fen.total_pl_actions =
      fen.players[minplayer].stall.length;\r

      \  fen.action_number = 1;\r

      }\r\n"
    sig: function arisim_stage_4_all_mimi_starts(fen, n = 3){}
    region: ARI (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  arisim_stage_4_all:
    name: arisim_stage_4_all
    code: "function arisim_stage_4_all(fen, n = 3, changeturn = true) {\r

      \  for (let i = 0; i < n; i++)
      top_elem_from_to(fen.players.mimi.hand, fen.players.mimi.stall);\r

      \  let others = get_keys(fen.players).filter(x => x != 'mimi');\r

      \  for (const plname of others) {\r

      \    for (let i = 0; i < n;
      i++)  top_elem_from_to(fen.players[plname].hand,
      fen.players[plname].stall);\r

      \  }\r

      \  let list = [];\r

      \  for (const plname of get_keys(fen.players)) {\r

      \    fen.players[plname].stall_value =
      arrSum(fen.players[plname].stall.map(x => ari_get_card(x).val));\r

      \    list.push({ uname: plname, val: fen.players[plname].stall_value
      });\r

      \  }\r

      \  fen.stage = 5;\r

      \  list = sortBy(list, 'val');\r

      \  let minplayer = list[0].uname;\r

      \  fen.iturn = fen.plorder.indexOf(minplayer);\r

      \  if (changeturn) fen.turn = [minplayer];\r

      \  fen.num_actions = fen.total_pl_actions =
      fen.players[fen.turn[0]].stall.length;\r

      \  fen.action_number = 1;\r

      }\r\n"
    sig: function arisim_stage_4_all(fen, n = 3, changeturn = true){}
    region: ARI (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  ari_test_hand_to_discard:
    name: ari_test_hand_to_discard
    code: "function ari_test_hand_to_discard(fen, uname, keep = 0) {\r

      \  let list = fen.players[uname].hand;\r

      \  while (fen.open_discard.length < 4 && list.length > keep)
      top_elem_from_to(list, fen.open_discard);\r

      \  while (list.length > keep) top_elem_from_to(list,
      fen.deck_discard);\r

      }\r\n"
    sig: function ari_test_hand_to_discard(fen, uname, keep = 0){}
    region: ARI (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  stage_building:
    name: stage_building
    code: "function stage_building(fen, i_pl, type) {\r

      \  let n = type == 'chateau' ? 6 : type == 'estate' ? 5 : 4;\r

      \  let plname = fen.plorder[i_pl];\r

      \  lookupSet(fen.players[plname], ['buildings', type], []);\r

      \  let building = { list: deck_deal(fen.deck, n), h: null, type:
      type, schweine: [] };\r

      \  building.lead = building.list[0];\r

      \  fen.players[plname].buildings[type].push(building);\r

      \  return building;\r

      }\r\n"
    sig: function stage_building(fen, i_pl, type){}
    region: ARI (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  stage_correct_buildings:
    name: stage_correct_buildings
    code: "function stage_correct_buildings(fen, o) { \r

      \  let ranks = toLetters('A23456789TJQK');\r

      \  let irank = 0;\r

      \  for (const uname in o) {\r

      \    let pl = fen.players[uname];\r

      \    let bo = pl.buildings;\r

      \    let dinums = o[uname];\r

      \    for (const type in dinums) {\r

      \      let n = dinums[type];\r

      \      for (let i = 0; i < n; i++) {\r

      \        let r = ranks[irank]; irank++;\r

      \        let s = type == 'farm' ? `${r}Cn ${r}Sn ${r}Sn ${r}Dn` :\r

      \          type == 'estate' ? `${r}Cn ${r}Sn ${r}Sn ${r}Dn ${r}Cn` :
      `${r}Cn ${r}Sn ${r}Sn ${r}Dn ${r}Cn ${r}Hn`;\r

      \        bo[type].push({ list: s.split(' '), h: null });\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function stage_correct_buildings(fen, o){}
    region: ARI (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  clear_previous_level:
    name: clear_previous_level
    code: "function clear_previous_level() {\r

      \  if (!isEmpty(A.items)) {\r

      \    console.assert(A.level >= 1, 'have items but level is ' +
      A.level);\r

      \    A.ll.push({ items: A.items, selected: A.selected });\r

      \    for (const item of A.items) {\r

      \      let bui = mBy(item.idButton);\r

      \      remove_hover_ui(bui);\r

      \      item.idButton = bui.id = getUID();\r

      \      let uid = item.idCard;\r

      \      let cui = isdef(uid) ? mBy(uid) : null;\r

      \      if (A.selected.includes(item.index)) {\r

      \        bui.onclick = null;\r

      \        if (cui) { mRemoveClass(cui, 'hoverScale'); cui.onclick =
      null; }\r

      \      } else {\r

      \        bui.style.opacity = 0;\r

      \        if (cui) { mRemoveClass(cui, 'hoverScale'); cui.onclick =
      null; }\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function clear_previous_level(){}
    region: select (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_add_selection:
    name: a2_add_selection
    code: "function a2_add_selection(items, label, min = 0, max = 100, goto_post =
      true) {\r

      \  clear_previous_level();\r

      \  A.level++;\r

      \  A.items = items;\r

      \  A.goto_post = goto_post;\r

      \  A.selected = [];\r

      \  let show_submit_button = min > 1 || min != max;\r

      \  let dParent = window[`dActions${A.level}`];\r

      \  for (const item of items) {\r

      \    let a = item.a;\r

      \    let idButton = getUID('b'); item.idButton = idButton;
      A.di[idButton] = item; item.uids = [idButton];\r

      \    let b = mButton(a, show_submit_button ? a2_toggle_selection :
      a2_select, dParent, { fz: 13 }, ['donebutton', 'enabled'], idButton);\r

      \    if (isdef(item.o)) {\r

      \      let go = item.o;\r

      \      let d = iDiv(go);\r

      \      go.id = d.id = getUID();\r

      \      mClass(d, 'hoverScale');\r

      \      d.onclick = show_submit_button ? a2_toggle_selection :
      a2_select;\r

      \      let idCard = d.id; item.idCard = idCard; A.di[idCard] = item;
      item.uids.push(idCard);\r

      \      set_hover_ui(b, go);\r

      \    }\r

      \  }\r

      \  if (show_submit_button) {\r

      \    if (isdef(mBy('b_submit'))) { let b = mBy('b_submit');
      mAppend(dParent, b); }\r

      \    else mButton('submit', goto_post ? a2_post_if_uiActivated :
      a2_pre_if_uiActivated, dParent, { fz: 13, bg: 'red', fg: 'silver' },
      ['donebutton', 'enabled'], 'b_submit');\r

      \  }\r

      \  if (isdef(mBy('b_restart_action'))) { let b =
      mBy('b_restart_action'); mAppend(dParent, b); }\r

      \  else mButton('restart action', () =>
      turn_send_reload(G.otree.plturn), dParent, { fz: 13, bg: 'red', fg:
      'silver' }, ['donebutton', 'enabled'], 'b_restart_action');\r

      \  if (items.length <= min) {\r

      \    uiActivated = false;\r

      \    for (let i = 0; i < items.length; i++) {\r

      \      A.selected.push(i);\r

      \      let a = items[i];\r

      \      mStyle(mBy(a.idButton), { bg: 'yellow' });\r

      \      if (isdef(a.idCard)) mClass(mBy(a.idCard),
      'card_selected');\r

      \    }\r

      \    setTimeout(() => { if (goto_post) { ari_post_action(); } else {
      ari_pre_action(); } }, 500);\r

      \  } else if (is_admin()) {\r

      \    let movekey = G.otree.plturn + '_' + ITER;\r

      \    let selection_list = DA.auto_moves[movekey];\r

      \    if (nundef(selection_list)) selection_list =
      DA.auto_moves[ITER];\r

      \    if (isEmpty(selection_list)) return;\r

      \    uiActivated = false;\r

      \    let selection = selection_list.shift();\r

      \    let numbers = [];\r

      \    for (const el of selection) {\r

      \      if (el == 'last') {\r

      \        numbers.push(A.items.length-1);\r

      \      } else if (isString(el)) {\r

      \        let commands = A.items.map(x => x.key);\r

      \        let idx = commands.indexOf(el);\r

      \        numbers.push(idx);\r

      \      } else numbers.push(el);\r

      \    }\r

      \    selection = numbers;\r

      \    setTimeout(() => {\r

      \      A.selected = selection;\r

      \      if (selection.length == 1) A.selected_key =
      A.items[A.selected[0]].key;\r

      \      a2_highlight_selected_items();\r

      \      if (A.goto_post) { ari_post_action(); } else {
      ari_pre_action(); }\r

      \    }, 1000);\r

      \  }\r

      }\r\n"
    sig: function a2_add_selection(items, label, min = 0, max = 100, goto_post =
      true){}
    region: select (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_post_if_uiActivated:
    name: a2_post_if_uiActivated
    code: "function a2_post_if_uiActivated() {\r

      \  if (!uiActivated) { console.log('ui is deactivated!!!'); return;
      }\r

      \  ari_post_action();\r

      }\r\n"
    sig: function a2_post_if_uiActivated(){}
    region: select (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_pre_if_uiActivated:
    name: a2_pre_if_uiActivated
    code: "function a2_pre_if_uiActivated() {\r

      \  if (!uiActivated) { console.log('ui is deactivated!!!'); return;
      }\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function a2_pre_if_uiActivated(){}
    region: select (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_highlight_selected_items:
    name: a2_highlight_selected_items
    code: "function a2_highlight_selected_items() {\r

      \  for (const i of A.selected) {\r

      \    let a = A.items[i];\r

      \    mStyle(mBy(a.idButton), { bg: 'yellow' });\r

      \    if (isdef(a.idCard)) mClass(mBy(a.idCard), 'card_selected');\r

      \  }\r

      }\r\n"
    sig: function a2_highlight_selected_items(){}
    region: select (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_select:
    name: a2_select
    code: "function a2_select(ev) {\r

      \  if (!uiActivated) { console.log('ui is deactivated!!!'); return;
      }\r

      \  let id = evToId(ev);\r

      \  let a = A.di[id];\r

      \  A.selected = [a.index];\r

      \  A.selected_key = A.items[a.index].key;\r

      \  mStyle(mBy(a.idButton), { bg: 'yellow' });\r

      \  if (isdef(a.idCard)) mClass(mBy(a.idCard), 'card_selected');\r

      \  if (A.goto_post) ari_post_action(); else ari_pre_action();\r

      }\r\n"
    sig: function a2_select(ev){}
    region: select (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_toggle_selection:
    name: a2_toggle_selection
    code: "function a2_toggle_selection(ev) {\r

      \  if (!uiActivated) { console.log('ui is deactivated!!!'); return;
      }\r

      \  let id = evToId(ev);\r

      \  let a = A.di[id];\r

      \  if (A.selected.includes(a.index)) {\r

      \    removeInPlace(A.selected, a.index);\r

      \    mStyle(mBy(a.idButton), { bg: 'grey' });\r

      \    if (isdef(a.idCard)) mClassRemove(mBy(a.idCard),
      'card_selected');\r

      \  } else {\r

      \    A.selected.push(a.index);\r

      \    mStyle(mBy(a.idButton), { bg: 'yellow' });\r

      \    if (isdef(a.idCard)) mClass(mBy(a.idCard), 'card_selected');\r

      \  }\r

      }\r\n"
    sig: function a2_toggle_selection(ev){}
    region: select (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_hand_items:
    name: a2_get_hand_items
    code: "function a2_get_hand_items(uname) {\r

      \  let items = [], i = 0;\r

      \  for (const o of G[uname].hand.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: `${uname}.hand`, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_hand_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_open_discard_items:
    name: a2_get_open_discard_items
    code: "function a2_get_open_discard_items() {\r

      \  let items = [], i = 0;\r

      \  for (const o of G.open_discard.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: `open_discard`, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_open_discard_items(){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_harvest_items:
    name: a2_get_harvest_items
    code: "function a2_get_harvest_items(uname) {\r

      \  let items = []; let i = 0;\r

      \  for (const gb of G[uname].buildings) {\r

      \    if (isdef(gb.harvest)) {\r

      \      let d = gb.harvest;\r

      \      mStyle(d, { cursor: 'pointer', opacity: 1 });\r

      \      gb.div = d;\r

      \      let name = 'H' + i + ':' + (gb.list[0][0] == 'T' ? '10' :
      gb.list[0][0]);\r

      \      let item = { o: gb, a: name, key: name, friendly: name, path:
      gb.path, index: i };\r

      \      i++;\r

      \      items.push(item);\r

      \    }\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_harvest_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_building_items:
    name: a2_get_building_items
    code: "function a2_get_building_items(uname) {\r

      \  let gblist = G[uname].buildings;\r

      \  let items = [], i = 0;\r

      \  for (const o of gblist) {\r

      \    let name = o.type + ' ' + (o.list[0][0] == 'T' ? '10' :
      o.list[0][0]);\r

      \    o.div = o.container;\r

      \    let item = { o: o, a: name, key: o.list[0], friendly: name,
      path: o.path, index: i, ui: o.container };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_building_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_farms_estates_items:
    name: a2_get_farms_estates_items
    code: "function a2_get_farms_estates_items(uname) { return
      a2_get_building_items_of_type(uname, ['farms', 'estates']); }\r\n"
    sig: function a2_get_farms_estates_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_estates_chateaus_items:
    name: a2_get_estates_chateaus_items
    code: "function a2_get_estates_chateaus_items(uname) { return
      a2_get_building_items_of_type(uname, ['estates', 'chateaus']); }\r\n"
    sig: function a2_get_estates_chateaus_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_building_items_of_type:
    name: a2_get_building_items_of_type
    code: "function a2_get_building_items_of_type(uname, types = ['farms',
      'estates', 'chateaus']) {\r

      \  let gblist = G[uname].buildings.filter(x =>
      types.includes(x.type));\r

      \  let items = [], i = 0;\r

      \  for (const o of gblist) {\r

      \    let name = o.type + ' ' + (o.list[0][0] == 'T' ? '10' :
      o.list[0][0]);\r

      \    o.div = o.container;\r

      \    let item = { o: o, a: name, key: o.list[0], friendly: name,
      path: o.path, index: i, ui: o.container };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_building_items_of_type(uname, types = ['farms', 'estates',
      'chateaus']){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_buildings:
    name: a2_get_buildings
    code: "function a2_get_buildings(gblist) {\r

      \  let items = [], i = 0;\r

      \  for (const o of gblist) {\r

      \    let name = o.type + ' ' + (o.list[0][0] == 'T' ? '10' :
      o.list[0][0]);\r

      \    o.div = o.container;\r

      \    let item = { o: o, a: name, key: o.list[0], friendly: name,
      path: o.path, index: i, ui: o.container };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_buildings(gblist){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_other_buildings:
    name: a2_get_other_buildings
    code: "function a2_get_other_buildings(plturn) {\r

      \  let items = [], i = 0;\r

      \  for (const uname of G.otree.plorder) {\r

      \    if (uname == plturn) continue;\r

      \    items = items.concat(a2_get_buildings(G[uname].buildings));\r

      \  }\r

      \  a2_reindex(items);\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_other_buildings(plturn){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_stall_items:
    name: a2_get_stall_items
    code: "function a2_get_stall_items(uname) {\r

      \  let items = [], i = 0;\r

      \  for (const o of G[uname].stall.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: `${uname}.stall`, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_stall_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_hidden_building_items:
    name: a2_get_hidden_building_items
    code: "function a2_get_hidden_building_items(b) {\r

      \  let items = [];\r

      \  for (let i = 1; i < b.items.length; i++) {\r

      \    let o = b.items[i];\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: b.path + '.list', index: i - 1 };\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_hidden_building_items(b){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_all_hidden_building_items:
    name: a2_get_all_hidden_building_items
    code: "function a2_get_all_hidden_building_items(uname) {\r

      \  let items = [];\r

      \  for (const gb of G[uname].buildings) {\r

      \    items = items.concat(a2_get_hidden_building_items(gb));\r

      \  }\r

      \  a2_reindex(items);\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_all_hidden_building_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_market_items:
    name: a2_get_market_items
    code: "function a2_get_market_items() {\r

      \  let items = [], i = 0;\r

      \  for (const o of G.market.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: `market`, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_market_items(){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_commands:
    name: a2_get_commands
    code: "function a2_get_commands(plturn) {\r

      \  let avail = ari_get_actions(G.otree, plturn);\r

      \  let items = [], i = 0;\r

      \  for (const cmd of avail) { \r

      \    let item = { o: null, a: cmd, key: cmd, friendly: cmd, path:
      null, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_commands(plturn){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_endgame:
    name: a2_get_endgame
    code: "function a2_get_endgame(plturn) {\r

      \  let items = [], i = 0;\r

      \  for (const cmd of ['end game', 'go on']) { \r

      \    let item = { o: null, a: cmd, key: cmd, friendly: cmd, path:
      null, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_endgame(plturn){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_coin_amounts:
    name: a2_get_coin_amounts
    code: "function a2_get_coin_amounts(plturn) {\r

      \  let items = [];\r

      \  for (let i = 0; i <= G.otree[plturn].coins; i++) {\r

      \    let cmd = '' + i;\r

      \    let item = { o: null, a: cmd, key: cmd, friendly: cmd, path:
      null, index: i };\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_coin_amounts(plturn){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_trade_items:
    name: a2_get_trade_items
    code: "function a2_get_trade_items(uname) {\r

      \  let items = a2_get_market_items(uname);\r

      \  items = items.concat(a2_get_stall_items(uname));\r

      \  for (const plname of G.otree.plorder) {\r

      \    if (plname != uname) items =
      items.concat(a2_get_stall_items(plname));\r

      \  }\r

      \  a2_reindex(items);\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_trade_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_hand_and_stall_items:
    name: a2_get_hand_and_stall_items
    code: "function a2_get_hand_and_stall_items(uname) {\r

      \  let items = a2_get_hand_items(uname);\r

      \  items = items.concat(a2_get_stall_items(uname));\r

      \  a2_reindex(items);\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_hand_and_stall_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_build_items:
    name: a2_get_build_items
    code: "function a2_get_build_items(uname) { return
      a2_get_hand_and_stall_items(uname); }\r\n"
    sig: function a2_get_build_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_get_repair_items:
    name: a2_get_repair_items
    code: "function a2_get_repair_items(uname) {\r

      \  let ihand = a2_get_hand_items(uname);\r

      \  let istall = a2_get_stall_items(uname);\r

      \  let irepair = a2_get_all_hidden_building_items(uname);\r

      \  irepair.map(x => face_up(x.o));\r

      \  let items = ihand.concat(istall).concat(irepair);\r

      \  a2_reindex(items);\r

      \  return items;\r

      }\r\n"
    sig: function a2_get_repair_items(uname){}
    region: get (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_get_actions:
    name: ari_get_actions
    code: "function ari_get_actions(uplayer) {\r

      \  let fen = Z.fen;\r

      \  let actions = exp_rumors(Z.options) ? ['trade', 'exchange',
      'build', 'upgrade', 'downgrade', 'buy', 'buy rumor', 'rumor', 'inspect',
      'blackmail', 'harvest', 'pickup', 'sell', 'tithe', 'commission']\r

      \    : ['trade', 'exchange', 'build', 'upgrade', 'downgrade', 'buy',
      'visit', 'harvest', 'pickup', 'sell', 'tithe', 'commission'];\r

      \  if (Config.autosubmit) actions.push('pass'); \r

      \  let avail_actions = [];\r

      \  for (const a of actions) {\r

      \    let avail = ari_check_action_available(a, fen, uplayer);\r

      \    if (avail) avail_actions.push(a);\r

      \  }\r

      \  return avail_actions;\r

      }\r\n"
    sig: function ari_get_actions(uplayer){}
    region: actions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_check_action_available:
    name: ari_check_action_available
    code: "function ari_check_action_available(a, fen, uplayer) {\r

      \  let cards;\r

      \  let pl = fen.players[uplayer];\r

      \  if (a == 'trade') {\r

      \    cards = ari_get_all_trading_cards(fen);\r

      \    let not_pl_stall = cards.filter(x =>
      !pl.stall.includes(x.key));\r

      \    return cards.length >= 2 && pl.stall.length > 0 &&
      not_pl_stall.length > 0;\r

      \  } else if (a == 'exchange') {\r

      \    cards = ari_get_all_wrong_building_cards(fen, uplayer);\r

      \    return cards.length > 0 && (pl.hand.length + pl.stall.length >
      0);\r

      \  } else if (a == 'build') {\r

      \    let res = ari_get_player_hand_and_stall(fen, uplayer);\r

      \    if (res.length < 4) return false;\r

      \    let has_a_king = firstCond(res, x => x[0] == 'K');\r

      \    if (pl.coins < 1 && !has_a_king) return false;\r

      \    if (fen.phase != 'king' && (!has_a_king || res.length < 5))
      return false;\r

      \    if (pl.coin == 0 && res.length < 5) return false;\r

      \    return true;\r

      \  } else if (a == 'upgrade') {\r

      \    if (isEmpty(pl.buildings.farm) && isEmpty(pl.buildings.estate))
      return false;\r

      \    let res = ari_get_player_hand_and_stall(fen, uplayer);\r

      \    if (isEmpty(res)) return false;\r

      \    let has_a_king = firstCond(res, x => x[0] == 'K');\r

      \    if (pl.coins < 1 && !has_a_king) return false;\r

      \    if (fen.phase != 'king' && !has_a_king) return false;\r

      \    if (pl.coin == 0 && res.length < 2) return false;\r

      \    return true;\r

      \  } else if (a == 'downgrade') {\r

      \    if (isEmpty(pl.buildings.chateau) &&
      isEmpty(pl.buildings.estate)) return false;\r

      \    return true;\r

      \  } else if (a == 'buy') {\r

      \    if (fen.open_discard.length == 0) return false;\r

      \    let res = ari_get_player_hand_and_stall(fen, uplayer);\r

      \    let has_a_jack = firstCond(res, x => x[0] == 'J');\r

      \    if (pl.coins < 1 && !has_a_jack) return false;\r

      \    if (fen.phase != 'jack' && !has_a_jack) return false;\r

      \    return true;\r

      \  } else if (a == 'visit') {\r

      \    let others = fen.plorder.filter(x => x != uplayer);\r

      \    let n = 0;\r

      \    for (const plname of others) {\r

      \      for (const k in fen.players[plname].buildings) {\r

      \        n += fen.players[plname].buildings[k].length;\r

      \      }\r

      \    }\r

      \    if (n == 0) return false;\r

      \    let res = ari_get_player_hand_and_stall(fen, uplayer);\r

      \    let has_a_queen = firstCond(res, x => x[0] == 'Q');\r

      \    if (pl.coins < 1 && !has_a_queen) return false;\r

      \    if (fen.phase != 'queen' && !has_a_queen) return false;\r

      \    return true;\r

      \  } else if (a == 'harvest') {\r

      \    let harvests = ari_get_all_building_harvest_cards(fen,
      uplayer);\r

      \    return !isEmpty(harvests);\r

      \  } else if (a == 'pickup') {\r

      \    return !isEmpty(pl.stall);\r

      \  } else if (a == 'sell') {\r

      \    return pl.stall.length >= 2;\r

      \  } else if (a == 'pass') {\r

      \    return true;\r

      \  } else if (a == 'commission') {\r

      \    for (const c of pl.commissions) {\r

      \      let rank = c[0];\r

      \      if (firstCond(pl.stall, x => x[0] == rank)) return true; \r

      \    }\r

      \    return false;\r

      \  } else if (a == 'rumor') {\r

      \    if (isEmpty(pl.rumors)) return false;\r

      \    let others = fen.plorder.filter(x => x != uplayer);\r

      \    let n = 0;\r

      \    for (const plname of others) {\r

      \      for (const k in fen.players[plname].buildings) {\r

      \        n += fen.players[plname].buildings[k].length;\r

      \      }\r

      \    }\r

      \    if (n == 0) return false;\r

      \    return true;\r

      \  } else if (a == 'inspect') {\r

      \    if (isEmpty(pl.rumors)) return false;\r

      \    let others = fen.plorder.filter(x => x != uplayer);\r

      \    let n = 0;\r

      \    for (const plname of others) {\r

      \      for (const k in fen.players[plname].buildings) {\r

      \        n += fen.players[plname].buildings[k].length;\r

      \      }\r

      \    }\r

      \    return n > 0;\r

      \  } else if (a == 'blackmail') {\r

      \    let others = fen.plorder.filter(x => x != uplayer);\r

      \    let n = 0;\r

      \    for (const plname of others) {\r

      \      for (const k in fen.players[plname].buildings) {\r

      \        let list = fen.players[plname].buildings[k];\r

      \        let building_with_rumor = firstCond(list, x =>
      !isEmpty(x.rumors));\r

      \        if (building_with_rumor) n++;\r

      \      }\r

      \    }\r

      \    if (n == 0) return false;\r

      \    let res = ari_get_player_hand_and_stall(fen, uplayer);\r

      \    let has_a_queen = firstCond(res, x => x[0] == 'Q');\r

      \    if (pl.coins < 1 && !has_a_queen) return false;\r

      \    if (fen.phase != 'queen' && !has_a_queen) return false;\r

      \    return true;\r

      \  } else if (a == 'buy rumor') {\r

      \    if (fen.deck_rumors.length == 0) return false;\r

      \    if (pl.coins < 1) return false;\r

      \    return true;\r

      \  }\r

      }\r\n"
    sig: function ari_check_action_available(a, fen, uplayer){}
    region: actions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_all_building_harvest_cards:
    name: ari_get_all_building_harvest_cards
    code: "function ari_get_all_building_harvest_cards(fen, uplayer) {\r

      \  let res = [];\r

      \  let pl = fen.players[uplayer];\r

      \  for (const b of pl.buildings.farm) {\r

      \    if (b.h) res.push({ b: b, h: b.h });\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function ari_get_all_building_harvest_cards(fen, uplayer){}
    region: actions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_all_wrong_building_cards:
    name: ari_get_all_wrong_building_cards
    code: "function ari_get_all_wrong_building_cards(fen, uplayer) {\r

      \  let res = [];\r

      \  let pl = fen.players[uplayer];\r

      \  for (const k in pl.buildings) {\r

      \    for (const b of pl.buildings[k]) {\r

      \      let bcards = b.list;\r

      \      let lead = bcards[0];\r

      \      let [rank, suit] = [lead[0], lead[1]];\r

      \      for (let i = 1; i < bcards.length; i++) {\r

      \        if (bcards[i][0] != rank) res.push({ c: bcards[i],
      building: b });\r

      \      }\r

      \    }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function ari_get_all_wrong_building_cards(fen, uplayer){}
    region: actions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_all_trading_cards:
    name: ari_get_all_trading_cards
    code: "function ari_get_all_trading_cards(fen) {\r

      \  let res = [];\r

      \  fen.market.map(c => res.push({ key: c, path: 'market' }));\r

      \  for (const uplayer of fen.plorder) {\r

      \    let pl = fen.players[uplayer];\r

      \    let stall = pl.stall;\r

      \    stall.map(x => res.push({ key: x, path:
      `players.${uplayer}.stall` }));\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function ari_get_all_trading_cards(fen){}
    region: actions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_all_trading_cards_orig:
    name: ari_get_all_trading_cards_orig
    code: "function ari_get_all_trading_cards_orig(otree) {\r

      \  let res = [];\r

      \  let plcardlists = otree.plorder.map(x => otree[x].stall);\r

      \  plcardlists.map(x => x.map(c => res.push[{ c: c, owner: x }]));\r

      \  otree.market.map(c => res.push({ c: c, owner: 'market' }));\r

      \  return res;\r

      }\r\n"
    sig: function ari_get_all_trading_cards_orig(otree){}
    region: check (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_get_player_hand_and_stall:
    name: ari_get_player_hand_and_stall
    code: "function ari_get_player_hand_and_stall(fen, uplayer) {\r

      \  let res = [];\r

      \  res = res.concat(fen.players[uplayer].hand);\r

      \  res = res.concat(fen.players[uplayer].stall);\r

      \  return res;\r

      }\r\n"
    sig: function ari_get_player_hand_and_stall(fen, uplayer){}
    region: actions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_action_round_over:
    name: ari_action_round_over
    code: "function ari_action_round_over(otree, plturn) {\r

      \  ari_move_market_to_discard(otree);\r

      \  ari_move_stalls_to_hands(otree);\r

      \  ari_add_hand_card(otree);\r

      \  otree.round = [];\r

      \  otree.iturn = 0;\r

      \  if (otree.stage == 10) {\r

      \    otree.phase = 'queen';\r

      \    otree.stage = 3;\r

      \  } else if (otree.phase == 'king') {\r

      \    otree.pl_gameover = [];\r

      \    for (const uname of otree.plorder) {\r

      \      let [bcorrect, realvps] =
      ari_get_correct_buildings(otree[uname].buildings);\r

      \      let can_end = ari_check_end_condition(bcorrect);\r

      \      if (can_end) otree.pl_gameover.push(uname);\r

      \    }\r

      \    if (!isEmpty(otree.pl_gameover)) {\r

      \      otree.stage = 10;\r

      \      otree.iturn = otree.plorder.indexOf(otree.pl_gameover[0]);\r

      \    } else {\r

      \      otree.phase = 'queen';\r

      \      otree.stage = 3;\r

      \    }\r

      \  } else if (otree.phase == 'queen') {\r

      \    for (const uname of otree.plorder) {\r

      \      for (const k in otree[uname].buildings) {\r

      \        if (k == 'farms') continue;\r

      \        let n = otree[uname].buildings[k].length;\r

      \        otree[uname].coins += n;\r

      \      }\r

      \    }\r

      \    otree.phase = 'jack';\r

      \    otree.stage = 3;\r

      \  } else {\r

      \    ari_move_herald(otree, plturn);\r

      \    ari_add_harvest_cards(otree);\r

      \    otree.phase = 'king';\r

      \    ari_tax_phase_needed(otree, plturn);\r

      \  }\r

      }\r\n"
    sig: function ari_action_round_over(otree, plturn){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_add_hand_card:
    name: ari_add_hand_card
    code: "function ari_add_hand_card() {\r

      \  let fen = Z.fen;\r

      \  for (const uplayer of fen.plorder) {\r

      \    ari_ensure_deck(fen, 1);\r

      \    top_elem_from_to(fen.deck, fen.players[uplayer].hand);\r

      \  }\r

      }\r\n"
    sig: function ari_add_hand_card(){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_add_harvest_cards:
    name: ari_add_harvest_cards
    code: "function ari_add_harvest_cards(fen) {\r

      \  for (const plname of fen.plorder) {\r

      \    for (const f of fen.players[plname].buildings.farm) {\r

      \      if (nundef(f.h)) {\r

      \        let list = [];\r

      \        ari_ensure_deck(fen, 1);\r

      \        top_elem_from_to(fen.deck, list);\r

      \        f.h = list[0];\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function ari_add_harvest_cards(fen){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_check_end_condition:
    name: ari_check_end_condition
    code: "function ari_check_end_condition(blist) {\r

      \  let nchateau = blist.chateau.length;\r

      \  let nfarm = blist.farm.length;\r

      \  let nestate = blist.estate.length;\r

      \  if (nchateau >= 2 || nchateau >= 1 && nfarm >= 3 || nchateau >= 1
      && nestate >= 2) {\r

      \    return true;\r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function ari_check_end_condition(blist){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_complete_building:
    name: ari_complete_building
    code: "function ari_complete_building() {\r

      \  let [otree, plturn] = [G.otree, G.otree.plturn];\r

      \  let building_items = A.selected.map(x => A.items[x]); \r

      \  let building_type = building_items.length == 4 ? 'farms' :
      building_items.length == '5' ? 'estates' : 'chateaus';\r

      \  console.log('...building a', building_type);\r

      \  otree[plturn].buildings[building_type].push({ list:
      building_items.map(x => x.key), h: null });\r

      \  for (const item of building_items) {\r

      \    let source = lookup(otree, item.path.split('.'));\r

      \    removeInPlace(source, item.key);\r

      \  }\r

      \  ari_redo_player_ui(otree, plturn);\r

      \  ari_next_action(otree, plturn);\r

      }\r\n"
    sig: function ari_complete_building(){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_complete_upgrade:
    name: ari_complete_upgrade
    code: "function ari_complete_upgrade() {\r

      \  let [otree, plturn] = [G.otree, G.otree.plturn];\r

      \  let gb = A.building;\r

      \  let b = lookup(otree, gb.path.split('.'));\r

      \  let n = A.upgrade_cards.length;\r

      \  let type0 = gb.o.type;\r

      \  let len = gb.o.list.length + n;\r

      \  let type1 = len == 5 ? 'estates' : 'chateaus';\r

      \  let target = lookup(otree, gb.path.split('.'));\r

      \  for (const o of A.upgrade_cards) {\r

      \    let source = lookup(otree, o.path.split('.'));\r

      \    elem_from_to(o.key, source, target.list);\r

      \  }\r

      \  let bres = target; \r

      \  bres.harvest = null;\r

      \  removeInPlace(otree[plturn].buildings[type0], bres);\r

      \  otree[plturn].buildings[type1].push(bres);\r

      \  ari_redo_player_ui(otree, plturn);\r

      \  ari_next_action(otree, plturn);\r

      }\r\n"
    sig: function ari_complete_upgrade(){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_deck_add_safe:
    name: ari_deck_add_safe
    code: "function ari_deck_add_safe(otree, n, arr) {\r

      \  ari_ensure_deck(otree, n);\r

      \  deck_add(otree.deck, n, arr);\r

      }\r\n"
    sig: function ari_deck_add_safe(otree, n, arr){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  ari_deck_deal_safe:
    name: ari_deck_deal_safe
    code: "function ari_deck_deal_safe(fen, n) { ari_ensure_deck(fen, n); return
      deck_deal(fen.deck, n); }\r\n"
    sig: function ari_deck_deal_safe(fen, n){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  a2_exchange_items:
    name: a2_exchange_items
    code: "function a2_exchange_items(otree, o0, o1) {\r

      \  elem_from_to(o0.key, lookup(otree, o0.path.split('.')),
      lookup(otree, o1.path.split('.')));\r

      \  elem_from_to(o1.key, lookup(otree, o1.path.split('.')),
      lookup(otree, o0.path.split('.')));\r

      }\r\n"
    sig: function a2_exchange_items(otree, o0, o1){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_ensure_deck:
    name: ari_ensure_deck
    code: "function ari_ensure_deck(fen, n) {\r

      \  if (fen.deck.length < n) { ari_refill_deck(fen); }\r

      }\r\n"
    sig: function ari_ensure_deck(fen, n){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_correct_buildings:
    name: ari_get_correct_buildings
    code: "function ari_get_correct_buildings(buildings) {\r

      \  let bcorrect = { farm: [], estate: [], chateau: [] };\r

      \  for (const type in buildings) {\r

      \    for (const b of buildings[type]) {\r

      \      let list = b.list;\r

      \      let lead = list[0];\r

      \      let iscorrect = true;\r

      \      for (const key of arrFromIndex(list, 1)) {\r

      \        if (key[0] != lead[0]) { iscorrect = false; continue; }\r

      \      }\r

      \      if (iscorrect) {\r

      \        lookupAddIfToList(bcorrect, [type], b);\r

      \      }\r

      \    }\r

      \  }\r

      \  return bcorrect; \r

      }\r\n"
    sig: function ari_get_correct_buildings(buildings){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_first_tax_payer:
    name: ari_get_first_tax_payer
    code: "function ari_get_first_tax_payer(fen, pl_tax) { return
      ari_get_tax_payer(fen, pl_tax, 0); }\r\n"
    sig: function ari_get_first_tax_payer(fen, pl_tax){}
    region: tax (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_tax_payer:
    name: ari_get_tax_payer
    code: "function ari_get_tax_payer(fen, pl_tax, ifrom = 0) {\r

      \  let iturn = ifrom;\r

      \  let uplayer = fen.plorder[iturn];\r

      \  if (nundef(uplayer)) return null;\r

      \  while (pl_tax[uplayer] <= 0) {\r

      \    iturn++;\r

      \    if (iturn >= fen.plorder.length) return null;\r

      \    uplayer = fen.plorder[iturn];\r

      \  }\r

      \  return uplayer;\r

      }\r\n"
    sig: function ari_get_tax_payer(fen, pl_tax, ifrom = 0){}
    region: tax (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_vps:
    name: ari_get_vps
    code: "function ari_get_vps(otree, uname) {\r

      \  if (uname == otree.plturn) {\r

      \    return calc_building_vps(otree, uname);\r

      \  } else {\r

      \    return calc_building_vps(otree, uname);\r

      \  }\r

      }\r\n"
    sig: function ari_get_vps(otree, uname){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_move_herald:
    name: ari_move_herald
    code: "function ari_move_herald(fen) {\r

      \  fen.heraldorder = arrCycle(fen.heraldorder, 1);\r

      \  ari_history_list([`*** new herald: ${fen.heraldorder[0]} ***`],
      'herald');\r

      \  return fen.heraldorder[0];\r

      }\r\n"
    sig: function ari_move_herald(fen){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_move_market_to_discard:
    name: ari_move_market_to_discard
    code: "function ari_move_market_to_discard() {\r

      \  let fen = Z.fen;\r

      \  while (fen.market.length > 0) {\r

      \    elem_from_to_top(fen.market[0], fen.market,
      fen.deck_discard);\r

      \  }\r

      \  ari_reorg_discard();\r

      }\r\n"
    sig: function ari_move_market_to_discard(){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_move_stalls_to_hands:
    name: ari_move_stalls_to_hands
    code: "function ari_move_stalls_to_hands() {\r

      \  let fen = Z.fen;\r

      \  for (const uplayer of fen.plorder) {\r

      \    fen.players[uplayer].hand =
      fen.players[uplayer].hand.concat(fen.players[uplayer].stall);\r

      \    fen.players[uplayer].stall = [];\r

      \  }\r

      }\r\n"
    sig: function ari_move_stalls_to_hands(){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_next_action:
    name: ari_next_action
    code: "function ari_next_action() {\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  deactivate_ui();\r

      \  console.assert(isdef(Z.num_actions));\r

      \  fen.num_actions -= 1;\r

      \  fen.action_number += 1;\r

      \  if (fen.num_actions <= 0) {\r

      \    fen.total_pl_actions = 0;\r

      \    lookupAddIfToList(fen, ['actionsCompleted'], uplayer);\r

      \    let next =
      ari_select_next_player_according_to_stall_value(fen);\r

      \    if (!next) {\r

      \      ari_next_phase();\r

      \    } else {\r

      \      Z.turn = [next];\r

      \    }\r

      \  } else {\r

      \    Z.stage = 5;\r

      \  }\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function ari_next_action(){}
    region: actions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_payment:
    name: ari_payment
    code: "function ari_payment(rank = 'king') {\r

      \  if (A.payment_complete == true) return true;\r

      \  let [otree, plturn] = [G.otree, G.otree.plturn];\r

      \  let items = a2_get_build_items(plturn); \r

      \  let pay_letter = rank.toUpperCase()[0];\r

      \  let pay_cards = items.filter(x => x.key[0] == pay_letter);\r

      \  let has_pay_card = !isEmpty(pay_cards);\r

      \  if (has_pay_card && otree[plturn].coins > 0 && otree.phase ==
      rank) {\r

      \    otree.stage = 20;\r

      \    let items = pay_cards;\r

      \    items.push({ o: null, a: 'coin', key: 'coin', friendly: 'coin',
      path: null });\r

      \    let i = 0; items.map(x => { x.index = i; i++; }); \r

      \    a2_add_selection(items, 'payment', 1, 1, false);\r

      \    return false;\r

      \  } else if (has_pay_card && pay_cards.length > 1) {\r

      \    otree.stage = 20;\r

      \    let items = pay_cards;\r

      \    let i = 0; items.map(x => { x.index = i; i++; }); \r

      \    a2_add_selection(items, 'payment', 1, 1, false);\r

      \    return false;\r

      \  } else if (has_pay_card) {\r

      \    console.assert(otree[plturn].coins == 0 || otree.phase != rank,
      'HAS A COIN in matching phase!!!!');\r

      \    let k = pay_cards[0];\r

      \    a2_pay_with_card(k);\r

      \    return true;\r

      \  } else {\r

      \    a2_pay_with_coin(plturn);\r

      \    return true;\r

      \  }\r

      }\r\n"
    sig: function ari_payment(rank = 'king'){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_pay_with_card:
    name: a2_pay_with_card
    code: "function a2_pay_with_card(item) {\r

      \  let fen = Z.fen;\r

      \  let source = lookup(fen, item.path.split('.'));\r

      \  elem_from_to_top(item.key, source, fen.deck_discard);\r

      \  ari_reorg_discard(fen);\r

      }\r\n"
    sig: function a2_pay_with_card(item){}
    region: payment (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  a2_pay_with_coin:
    name: a2_pay_with_coin
    code: "function a2_pay_with_coin(uplayer) {\r

      \  let fen = Z.fen;\r

      \  fen.players[uplayer].coins -= 1;\r

      }\r\n"
    sig: function a2_pay_with_coin(uplayer){}
    region: payment (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_redo_player_stats:
    name: ari_redo_player_stats
    code: "function ari_redo_player_stats(otree, uname) {\r

      \  let item = G.player_stat_items[uname];\r

      \  let d = iDiv(item);\r

      \  let stall_value = otree[uname].stall_value;\r

      \  mRemoveChildrenFromIndex(d, otree.herald == uname?3:2);\r

      \  let pl = otree[uname];\r

      \  player_stat_count('coin', pl.coins, d);\r

      \  if (isdef(stall_value)) { player_stat_count('shinto shrine',
      stall_value, d); }\r

      \  player_stat_count('star', ari_get_vps(otree, uname), d);\r

      }\r\n"
    sig: function ari_redo_player_stats(otree, uname){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_player_stats:
    name: ari_player_stats
    code: "function ari_player_stats(otree) {\r

      \  let player_stat_items = G.player_stat_items =
      ui_player_info(otree.plorder.map(x => otree[x]));\r

      \  let herald = otree.plorder[0];\r

      \  for (const uname of otree.plorder) {\r

      \    let pl = otree[uname];\r

      \    let item = player_stat_items[uname];\r

      \    let d = iDiv(item); mCenterFlex(d); mLinebreak(d);\r

      \    if (uname == herald) {\r

      \      mSym('tied-scroll', d, { fg: 'gold', fz: 24 }, 'TL');\r

      \    }\r

      \    player_stat_count('coin', pl.coins, d);\r

      \    if (!isEmpty(otree[uname].stall) && otree.stage >= 5 &&
      otree.stage <= 6) {\r

      \      player_stat_count('shinto shrine',
      !otree.round.includes(uname) || otree.stage < 6 ? calc_stall_value(otree,
      uname) : '_', d);\r

      \    }\r

      \    player_stat_count('star', ari_get_vps(otree, uname), d);\r

      \  }\r

      }\r\n"
    sig: function ari_player_stats(otree){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  a2_reindex:
    name: a2_reindex
    code: "function a2_reindex(items) { let i = 0; items.map(x => { x.index = i;
      i++; }); }\r\n"
    sig: function a2_reindex(items){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  ari_reorg_discard:
    name: ari_reorg_discard
    code: "function ari_reorg_discard() {\r

      \  let fen = Z.fen;\r

      \  while (fen.deck_discard.length > 0 && fen.open_discard.length <
      4) {\r

      \    bottom_elem_from_to(fen.deck_discard, fen.open_discard);\r

      \  }\r

      }\r\n"
    sig: function ari_reorg_discard(){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_refill_deck:
    name: ari_refill_deck
    code: "function ari_refill_deck(fen) {\r

      \  fen.deck =
      fen.deck.concat(fen.open_discard).concat(fen.deck_discard);\r

      \  shuffle(fen.deck);\r

      \  fen.open_discard = [];\r

      \  fen.deck_discard = [];\r

      \  console.log('deck refilled: contains', fen.deck.length,
      'cards');\r

      }\r\n"
    sig: function ari_refill_deck(fen){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_reveal_all_buildings:
    name: ari_reveal_all_buildings
    code: "function ari_reveal_all_buildings(fen) {\r

      \  for (const plname of fen.plorder) {\r

      \    let gbs = UI.players[plname].buildinglist;\r

      \    for (const gb of gbs) {\r

      \      gb.items.map(x => face_up(x));\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function ari_reveal_all_buildings(fen){}
    region: endgame (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_tax_phase_needed:
    name: ari_tax_phase_needed
    code: "function ari_tax_phase_needed(fen) {\r

      \  let pl_tax = {};\r

      \  let need_tax_phase = false;\r

      \  for (const uplayer of fen.plorder) {\r

      \    let hsz = fen.players[uplayer].hand.length;\r

      \    let nchateaus =
      fen.players[uplayer].buildings.chateau.length;\r

      \    let allowed = ARI.sz_hand + nchateaus;\r

      \    let diff = hsz - allowed;\r

      \    if (diff > 0) need_tax_phase = true;\r

      \    pl_tax[uplayer] = diff;\r

      \  }\r

      \  if (need_tax_phase) {\r

      \    fen.turn = [ari_get_first_tax_payer(fen, pl_tax)];\r

      \    fen.pl_tax = pl_tax;\r

      \    fen.stage = 2;\r

      \    return true;\r

      \  } else {\r

      \    fen.stage = 3;\r

      \    return false;\r

      \  }\r

      }\r\n"
    sig: function ari_tax_phase_needed(fen){}
    region: tax (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_select_next_player_according_to_stall_value:
    name: ari_select_next_player_according_to_stall_value
    code: "function ari_select_next_player_according_to_stall_value() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  Z.stage = 5;\r

      \  let minval = 100000;\r

      \  let minplayer = null;\r

      \  for (const uname of fen.plorder) {\r

      \    if (fen.actionsCompleted.includes(uname)) continue;\r

      \    let stall = fen.players[uname].stall;\r

      \    if (isEmpty(stall)) { fen.actionsCompleted.push(uname);
      continue; }\r

      \    let val = fen.players[uname].stall_value = arrSum(stall.map(x
      => ari_get_card(x).val));\r

      \    if (val < minval) { minval = val; minplayer = uname; }\r

      \  }\r

      \  if (!minplayer) {\r

      \    return null;\r

      \  } else {\r

      \    Z.turn = fen.turn = [minplayer];\r

      \    fen.num_actions = fen.total_pl_actions =
      fen.players[minplayer].stall.length;\r

      \    fen.action_number = 1;\r

      \    return minplayer;\r

      \  }\r

      }\r\n"
    sig: function ari_select_next_player_according_to_stall_value(){}
    region: market (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  calc_stall_value:
    name: calc_stall_value
    code: "function calc_stall_value(fen, plname) { let st =
      fen.players[plname].stall; if (isEmpty(st)) return 0; else return
      arrSum(st.map(x => ari_get_card(x).val)); }\r\n"
    sig: function calc_stall_value(fen, plname){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  calc_building_vps:
    name: calc_building_vps
    code: "function calc_building_vps(bs) {\r

      \  let res = 0;\r

      \  res += bs.farm.length;\r

      \  res += bs.estate.length * 2;\r

      \  res += bs.chateau.length * 3;\r

      \  return res;\r

      }\r\n"
    sig: function calc_building_vps(bs){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  has_farm:
    name: has_farm
    code: "function has_farm(uname) { return
      firstCond(UI.players[uname].buildinglist, x => x.type == 'farm'); }\r\n"
    sig: function has_farm(uname){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  is_round_over:
    name: is_round_over
    code: "function is_round_over(otree) { return otree.round.length >=
      otree.plorder.length; }\r\n"
    sig: function is_round_over(otree){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  output_error:
    name: output_error
    code: "function output_error(msg) { dError.innerHTML = msg; }\r\n"
    sig: function output_error(msg){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\cosensus\legacy.js
    datetime: 2022-05-11-09-32
    timestamp: 1652286764367.569
    size: 196867
  player_stat_count:
    name: player_stat_count
    code: "function player_stat_count(key, n, dParent, styles = {}) {\r

      \  let sz = valf(styles.sz, 16);\r

      \  addKeys({ display: 'flex', margin: 4, dir: 'column', hmax: 2 *
      sz, 'align-content': 'start', fz: sz, align: 'center' }, styles);\r

      \  let d = mDiv(dParent, styles);\r

      \  if (isdef(Syms[key])) mSym(key, d, { h: sz, 'line-height': sz, w:
      '100%' });\r

      \  else mText(key, d, { h: sz, fz: sz, w: '100%' });\r

      \  d.innerHTML += `<span style=\"font-weight:bold\">${n}</span>`;\r

      \  return d;\r

      }\r\n"
    sig: function player_stat_count(key, n, dParent, styles = {}){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  update_otree_from_ui:
    name: update_otree_from_ui
    code: "function update_otree_from_ui(otree, objects) {\r

      \  for (const k in objects) {\r

      \    otree[k] = objects[k].list;\r

      \  }\r

      \  qanim();\r

      }\r\n"
    sig: function update_otree_from_ui(otree, objects){}
    region: helpers (action2.js)
    filename: action2.js
    type: func
    fname: action2.js
    path: C:\xampp\htdocs\aroot\base\js\action2.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 33234
  bluff_present:
    name: bluff_present
    code: "function bluff_present(dParent) {\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent, 1, 0); \r

      \  let [fen, uplayer, ui, stage, dt] = [Z.fen, Z.uplayer, UI,
      Z.stage, dOpenTable];\r

      \  clearElement(dt); mCenterFlex(dt);\r

      \  if (stage == 1) { DA.no_shield = true; } else { DA.ack = {};
      DA.no_shield = false; }\r

      \  bluff_stats(dt);\r

      \  mLinebreak(dt, 10);\r

      \  bluff_show_cards(dt);\r

      \  mLinebreak(dt, 4);\r

      \  let item = ui.currentBidItem = bluff_show_current_bid(dt);\r

      \  hide(item.button);\r

      \  mLinebreak(dt, 10);\r

      \  if (stage == 1) {\r

      \    show_waiting_for_ack_message();\r

      \    let loser = fen.loser;\r

      \    let msg1 = fen.war_drin ? 'war drin!' : 'war NICHT drin!!!';\r

      \    let msg2 = isdef(fen.players[loser]) ? `${capitalize(loser)}
      will get ${fen.players[loser].handsize} cards!` : `${capitalize(loser)} is
      out!`;\r

      \    mText(`<span style=\"color:red\">${msg1} ${msg2}</span>`, dt, {
      fz: 22 });\r

      \    mLinebreak(dt, 4);\r

      \  }\r

      }\r\n"
    sig: function bluff_present(dParent){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_setup:
    name: bluff_setup
    code: "function bluff_setup(player_names) {\r

      \  let pre_fen = {};\r

      \  let deck = pre_fen.deck = get_keys(Aristocards).filter(x =>
      'br'.includes(x[2])); \r

      \  shuffle(deck);\r

      \  let pls = pre_fen.players = {};\r

      \  for (const plname of player_names) {\r

      \    let pl = pls[plname] = {\r

      \      hand: deck_deal(deck, 2),\r

      \    };\r

      \  }\r

      \  pre_fen.plorder = jsCopy(player_names);\r

      \  pre_fen.phase = 'bid';\r

      \  pre_fen.iturn = 0; \r

      \  pre_fen.plturn = pre_fen.plorder[pre_fen.iturn];\r

      \  pre_fen.round = []; \r

      \  pre_fen.step = 0;\r

      \  let fen = pre_fen;\r

      \  return fen;\r

      }\r\n"
    sig: function bluff_setup(player_names){}
    region: funcs (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\base\js\bluff.js
    datetime: 2022-03-02-06-54
    timestamp: 1646232841027.5398
    size: 798
  modify_table:
    name: modify_table
    code: "function modify_table() {\r

      \  let uname = Session.cur_user;\r

      \  let table = Session.cur_table;\r

      \  if (nundef(table)) { alert('no table available!'); return; }\r

      \  let game = Session.cur_game = table.game;\r

      \  let tid = Session.cur_tid = table.id;\r

      \  let t = {};\r

      \  t.id = Session.cur_tid;\r

      \  t.players = valf(lookup(Session, ['game_options', 'players']),
      table.players);\r

      \  t.options = valf(lookup(Session, ['game_options', 'game']),
      table.options);\r

      \  t.pl_options = get_player_options(t.players, game); \r

      \  console.log('settings to table:\\nnew players', t.players,
      '\\nnew options', t.options);\r

      \  t.player_init = {};\r

      \  return t;\r

      }\r\n"
    sig: function modify_table(){}
    region: create (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  make_csv_for_rankings:
    name: make_csv_for_rankings
    code: "function make_csv_for_rankings() {\r

      \  let csv = 'players,';\r

      \  let games = get_values(DB.games);\r

      \  let gamenames = games.map(x => x.friendly).join(',');\r

      \  csv += gamenames;\r

      \  for (const name in DB.users) {\r

      \    let [dbuser, values, usergames] = [DB.users[name], [], []];\r

      \    for (const gname in dbuser.games) {\r

      \      let rec = dbuser.games[gname];\r

      \      if (isdef(rec.total) && rec.total > 0)
      usergames.push(gname);\r

      \    }\r

      \    if (isEmpty(usergames)) continue;\r

      \    for (const gname in DB.games) {\r

      \      let info = lookupSet(DB.users, [name, 'games', gname], {});\r

      \      if (nundef(info.total)) values.push('0/0'); else
      values.push(`${info.wins}/${info.total}`);\r

      \    }\r

      \    if (!isEmpty(values)) csv += `\\n${name},` +
      values.join(',');\r

      \  }\r

      \  return csv;\r

      }\r\n"
    sig: function make_csv_for_rankings(){}
    region: ranking (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_csv_example:
    name: get_csv_example
    code: "function get_csv_example() {\r

      \  let csv =
      `\"Model\",\"mpg\",\"cyl\",\"disp\",\"hp\",\"drat\",\"wt\",\"qsec\",\"vs\
      \",\"am\",\"gear\",\"carb\"\r

      \  \"Mazda RX4\",21,6,160,110,3.9,2.62,16.46,0,1,4,4\r

      \  \"Mazda RX4 Wag\",21,6,160,110,3.9,2.875,17.02,0,1,4,4\r

      \  \"Datsun 710\",22.8,4,108,93,3.85,2.32,18.61,1,1,4,1\r

      \  \"Hornet 4 Drive\",21.4,6,258,110,3.08,3.215,19.44,1,0,3,1\r

      \  \"Hornet Sportabout\",18.7,8,360,175,3.15,3.44,17.02,0,0,3,2\r

      \  \"Valiant\",18.1,6,225,105,2.76,3.46,20.22,1,0,3,1\r

      \  \"Duster 360\",14.3,8,360,245,3.21,3.57,15.84,0,0,3,4\r

      \  \"Merc 240D\",24.4,4,146.7,62,3.69,3.19,20,1,0,4,2\r

      \  \"Merc 230\",22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2\r

      \  \"Merc 280\",19.2,6,167.6,123,3.92,3.44,18.3,1,0,4,4\r

      \  \"Merc 280C\",17.8,6,167.6,123,3.92,3.44,18.9,1,0,4,4\r

      \  \"Merc 450SE\",16.4,8,275.8,180,3.07,4.07,17.4,0,0,3,3\r

      \  \"Merc 450SL\",17.3,8,275.8,180,3.07,3.73,17.6,0,0,3,3\r

      \  \"Merc 450SLC\",15.2,8,275.8,180,3.07,3.78,18,0,0,3,3\r

      \  \"Cadillac Fleetwood\",10.4,8,472,205,2.93,5.25,17.98,0,0,3,4\r

      \  \"Lincoln Continental\",10.4,8,460,215,3,5.424,17.82,0,0,3,4\r

      \  \"Chrysler Imperial\",14.7,8,440,230,3.23,5.345,17.42,0,0,3,4\r

      \  \"Fiat 128\",32.4,4,78.7,66,4.08,2.2,19.47,1,1,4,1  `;\r

      \  return csv;\r

      }\r\n"
    sig: function get_csv_example(){}
    region: ranking (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  csv_table_example:
    name: csv_table_example
    code: "function csv_table_example(dParent) {\r

      \  mystring = get_csv_example();\r

      \  present_table_from_csv(mystring, dParent);\r

      }\r\n"
    sig: function csv_table_example(dParent){}
    region: ranking (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  present_table_from_csv:
    name: present_table_from_csv
    code: "function present_table_from_csv(csv_text, dParent) {\r

      \  prepare_table();\r

      \  dParent.innerHTML = get_table_html();\r

      \  import_the_text(csv_text);\r

      }\r\n"
    sig: function present_table_from_csv(csv_text, dParent){}
    region: ranking (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  scoring_update:
    name: scoring_update
    code: "function scoring_update(players, winners, game) {\r

      \  for (const p of players) {\r

      \    let info = lookupSet(DB.users, [p, 'games', game], {});\r

      \    let total = lookupSet(info, ['total'], 0);\r

      \    let wins = lookupSet(info, ['wins'], 0); \r

      \    lookupSetOverride(info, ['total'], total + 1);\r

      \  }\r

      \  for (const p of winners) {\r

      \    let info = lookup(DB.users, [p, 'games', game]);\r

      \    let wins = lookup(info, ['wins']);\r

      \    console.assert(isdef(info) && isdef(wins), 'SCORING DB INFO
      MISSING FOR ' + p);\r

      \    lookupSetOverride(info, ['wins'], wins + 1);\r

      \  }\r

      }\r\n"
    sig: function scoring_update(players, winners, game){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  inc_level_on_winstreak:
    name: inc_level_on_winstreak
    code: "function inc_level_on_winstreak(winners, game) {\r

      \  for (const w of winners) {\r

      \    let o = lookup(DB.users, [w, 'games', game]);\r

      \    console.assert(isdef(o), 'no DB.users record for game',
      game);\r

      \    o.winstreak = DB.users[w].games[game].winstreak =
      isdef(o.winstreak) ? o.winstreak + 1 : 1;\r

      \    if (o.winstreak >= 1) {\r

      \      let currentlevel = get_startlevel(w, game);\r

      \      lookupSetOverride(DB.users, [w, 'games', game, 'startlevel'],
      Math.min(currentlevel + 1, Session.maxlevel));\r

      \      delete o.winstreak;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function inc_level_on_winstreak(winners, game){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  dec_level_on_losestreak:
    name: dec_level_on_losestreak
    code: "function dec_level_on_losestreak() {\r

      \  let players = get_values(Session.cur_players);\r

      \  let scores = players.map(x => x.score);\r

      \  let min = arrMin(scores);\r

      \  let losers = players.filter(x => x.score == min).map(x =>
      x.name);\r

      \  let game = Session.cur_game;\r

      \  for (const w of losers) {\r

      \    let o = lookup(DB.users, [w, 'games', game]);\r

      \    o.losestreak = DB.users[w].games[game].losestreak =
      isdef(o.losestreak) ? o.losestreak + 1 : 1;\r

      \    if (o.losestreak >= 1) {\r

      \      let currentlevel = get_startlevel(w, game);\r

      \      lookupSetOverride(DB.users, [w, 'games', game, 'startlevel'],
      Math.max(currentlevel - 1, 0));\r

      \      delete o.losestreak;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function dec_level_on_losestreak(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_scores_from_cur_players:
    name: get_scores_from_cur_players
    code: "function get_scores_from_cur_players() {\r

      \  let players = get_values(Session.cur_players);\r

      \  let sorted = sortByDescending(players, 'score');\r

      \  let list = sorted.map(x => `${x.name}:${x.score}`);\r

      \  let fen = list.join(',');\r

      \  return fen;\r

      }\r\n"
    sig: function get_scores_from_cur_players(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  get_player_options:
    name: get_player_options
    code: "function get_player_options(players, game) { return players.map(x =>
      `${x}:${get_startlevel(x, game)}:${get_preferred_lang(x)}`).join(',');
      }\r\n"
    sig: function get_player_options(players, game){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  is_race_game:
    name: is_race_game
    code: "function is_race_game(gname) { return DB.games[gname].game_type ==
      'race'; }\r\n"
    sig: function is_race_game(gname){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_user_image:
    name: show_user_image
    code: "function show_user_image(uname, dParent, sz = 300) {\r

      \  let d = mDiv(dParent, { margin: 'auto', w: sz });\r

      \  let html = `\r

      \  <div style='text-align:center;margin-top:50px'>\r

      \    <img src='../base/assets/images/${uname}.jpg'
      class=\"img_person\" height=150 />\r

      \  </div>\r

      \  `;\r

      \  d.innerHTML = html;\r

      \  return d;\r

      }\r\n"
    sig: function show_user_image(uname, dParent, sz = 300){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_score_table:
    name: show_score_table
    code: "function show_score_table(fen, game_title, dParent) {\r

      \  let d = mDiv(dParent, { margin: 'auto', wmin: 300, wmax: 500 });
      \r

      \  html = `<div style='text-align:center;margin-top:100px'>\r

      \  <h1>${game_title}</h1>\r

      \  <table id='customers'><tr><th>player</th><th>score</th></tr>\r

      \  `;\r

      \  let plparts = fen.split(',');\r

      \  for (const pl of plparts) {\r

      \    html += `<tr><td>${stringBefore(pl,
      ':')}</td><td>${stringAfter(pl, ':')}</td></tr>`\r

      \  }\r

      \  html += '</table></div>';\r

      \  d.innerHTML = html;\r

      }\r\n"
    sig: function show_score_table(fen, game_title, dParent){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_gameover_new:
    name: show_gameover_new
    code: "function show_gameover_new(winners) {\r

      \  let game = Session.cur_game;\r

      \  let table = Session.cur_table;\r

      \  if (!Session.scoring_complete) {\r

      \    console.log('======>scoring!!!!!', table.friendly);\r

      \    scoring_update(get_keys(Session.cur_players), winners, game);\r

      \    if (Session.level_setting == 'player') {\r

      \      inc_level_on_winstreak(winners, game);\r

      \      dec_level_on_losestreak();\r

      \    }\r

      \    out1();\r

      \    Session.scoring_complete = true;\r

      \  }\r

      \  let pl = Session.cur_players[winners[0]];\r

      \  let styles = { bg: pl.color, alpha: .75, fg: 'contrast', top:
      220, };\r

      \  let msg = 'GAME OVER - The ' + (winners.length > 1 ? `winners are
      ${winners.join(', ')}!!!` : `winner is ${winners[0]}!!!`);\r

      \  let d = status_message(msg, styles);\r

      \  let end_scores = table.status == 'past' ? table.end_scoring :
      get_scores_from_cur_players();\r

      \  show_score_table(end_scores, table.friendly, d);\r

      \  mLinebreak(d);\r

      \  mButton('click to close', onclick_gameover_new, d, { fz: 20 },
      ['buttonClass', 'donebutton']);\r

      }\r\n"
    sig: function show_gameover_new(winners){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  show_rankings:
    name: show_rankings
    code: "function show_rankings(dParent) {\r

      \  csv = make_csv_for_rankings();\r

      \  let ch = csv[csv.length - 1];\r

      \  if (ch == '%' || isNumber(ch)) {\r

      \    let d = mDiv(dParent, { align: 'center' }, null, `<h1>All Time
      Ranking</h1>`);\r

      \    let d1 = mDiv(d, { align: 'center', display: 'flex' });\r

      \    mCenterCenterFlex(d1);\r

      \    present_table_from_csv(csv, d1);\r

      \    mLinebreak(dParent);\r

      \  }\r

      }\r\n"
    sig: function show_rankings(dParent){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  status_message_new:
    name: status_message_new
    code: "function status_message_new(msg, dParent, styles = {}) {\r

      }\r\n"
    sig: function status_message_new(msg, dParent, styles = {}){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  update_db_user_from_pl_options:
    name: update_db_user_from_pl_options
    code: "function update_db_user_from_pl_options(fen, game) {\r

      \  let parts = fen.split(',');\r

      \  for (const p of parts) {\r

      \    let [name, startlevel, lang] = p.split(':');\r

      \    startlevel = Number(startlevel);\r

      \    set_startlevel(name, game, startlevel);\r

      \    set_preferred_lang(name, lang);\r

      \  }\r

      }\r\n"
    sig: function update_db_user_from_pl_options(fen, game){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  update_game_values:
    name: update_game_values
    code: "function update_game_values() {\r

      \  let game = Session.cur_game;\r

      \  let uname = Session.cur_user;\r

      \  let g = Session;\r

      \  let basevals = lookup(DB.games, [game]); if (basevals)
      copyKeys(basevals, g); \r

      \  for (const k in g.options) { g[k] = get_game_or_user_option(g,
      k); } \r

      \  let uservals = lookup(DB.users, [uname, 'games', game]); if
      (uservals) copyKeys(uservals, g);\r

      \  let levels = lookup(DB.games, [game, 'levels']);\r

      \  g.maxlevel = valf(get_keys(levels).length, 0) - 1;\r

      \  g.color = getColorDictColor(g.color);\r

      \  let level = g.level = nundef(g.level_setting) || g.level_setting
      == 'player' ? valf(g.startlevel, g.def_startlevel)\r

      \    : g.level_setting == 'min' ? 0 : g.level_setting == 'max' ?
      g.maxlevel : g.def_startlevel;\r

      \  if (levels) copyKeys(levels[level], g);\r

      \  delete g.levels;\r

      \  return g;\r

      }\r\n"
    sig: function update_game_values(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  update_table_options_for_user:
    name: update_table_options_for_user
    code: "function update_table_options_for_user(uname, table_options, game) {\r

      \  let lang = get_preferred_lang(uname);\r

      \  update_db_user_from_pl_options(table_options, game);\r

      \  let lang2 = get_preferred_lang(uname);\r

      \  if (lang != lang2) get_dictionary();\r

      }\r\n"
    sig: function update_table_options_for_user(uname, table_options, game){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  ui_game_stats:
    name: ui_game_stats
    code: "function ui_game_stats(players) {\r

      \  let d = dTitle;\r

      \  clearElement(d);\r

      \  let d1 = mDiv(d, { display: 'flex', 'justify-content': 'center',
      'align-items': 'space-evenly' });\r

      \  for (const plname in players) {\r

      \    let pl = players[plname];\r

      \    let d2 = mDiv(d1, { margin: 4, align: 'center' }, null, `<img
      src='${pl.imgPath}' style=\"display:block\" class='img_person' width=50
      height=50>${pl.score}`);\r

      \  }\r

      }\r\n"
    sig: function ui_game_stats(players){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  out1:
    name: out1
    code: "function out1() {\r

      \  let game = Session.cur_game;\r

      \  let msg = 'stats:score wins total\\n';\r

      \  for (const x in Session.cur_players) {\r

      \    let pl = Session.cur_players[x];\r

      \    let info = DB.users[x].games[game];\r

      \    msg += `${x}: ${pl.score} ${info.wins} ${info.total}\\n`;\r

      \  }\r

      \  console.log(msg);\r

      }\r\n"
    sig: function out1(){}
    region: scoring (game_race3.js)
    filename: game_race3.js
    type: func
    fname: game_race3.js
    path: C:\xampp\htdocs\aroot\base\js\game_race3.js
    datetime: 2022-03-17-07-08
    timestamp: 1647526132146.752
    size: 34649
  ari_pre_action:
    name: ari_pre_action
    code: "function ari_pre_action() {\r

      \  let [stage, A, fen, phase, uplayer, deck, market] = [Z.stage,
      Z.A, Z.fen, Z.phase, Z.uplayer, Z.deck, Z.market];\r

      \  if (Z.num_actions > 0) fen.progress = `(action ${Z.action_number}
      of ${Z.total_pl_actions})`; else delete fen.progress;\r

      \  show_stage();\r

      \  switch (ARI.stage[stage]) {\r

      \    case 'action: command': Z.stage = 6;
      select_add_items(ui_get_commands(uplayer), process_command, 'must select
      an action', 1, 1); break; \r

      \    case 'action step 2':\r

      \      switch (A.command) {\r

      \        case 'trade': select_add_items(ui_get_trade_items(uplayer),
      post_trade, 'must select 2 cards to trade', 2, 2); break;\r

      \        case 'build': select_add_items(ui_get_payment_items('K'),
      payment_complete, 'must select payment for building', 1, 1); break;\r

      \        case 'upgrade': select_add_items(ui_get_payment_items('K'),
      payment_complete, 'must select payment for upgrade', 1, 1); break;\r

      \        case 'downgrade':
      select_add_items(ui_get_building_items(uplayer, A.payment),
      process_downgrade, 'must select a building to downgrade', 1, 1); break;\r

      \        case 'pickup':
      select_add_items(ui_get_stall_items(uplayer), post_pickup, 'must select a
      stall card to take into your hand', 1, 1); break;\r

      \        case 'harvest':
      select_add_items(ui_get_harvest_items(uplayer), post_harvest, 'must select
      a farm to harvest from', 1, 1); break;\r

      \        case 'sell': select_add_items(ui_get_stall_items(uplayer),
      post_sell, 'must select 2 stall cards to sell', 2, 2); break;\r

      \        case 'buy': select_add_items(ui_get_payment_items('J'),
      payment_complete, 'must select payment option', 1, 1); break;\r

      \        case 'buy rumor': ari_open_rumors(); break;\r

      \        case 'exchange':
      select_add_items(ui_get_exchange_items(uplayer), post_exchange, 'must
      select cards to exchange', 2, 2); break;\r

      \        case 'visit': select_add_items(ui_get_payment_items('Q'),
      payment_complete, 'must select payment for visiting', 1, 1); break;\r

      \        case 'rumor':
      select_add_items(ui_get_other_buildings_and_rumors(uplayer),
      process_rumor, 'must select a building and a rumor card to place', 2, 2);
      break;\r

      \        case 'inspect':
      select_add_items(ui_get_other_buildings(uplayer), process_inspect, 'must
      select building to visit', 1, 1); break;\r

      \        case 'blackmail':
      select_add_items(ui_get_payment_items('Q'), payment_complete, 'must select
      payment for blackmailing', 1, 1); break;\r

      \        case 'commission':
      select_add_items(ui_get_commission_items(uplayer), process_commission,
      'must select a card to commission', 1, 1); break;\r

      \        case 'pass': post_pass(); break;\r

      \      }\r

      \      break;\r

      \    case 'pick_schwein':
      select_add_items(ui_get_schweine_candidates(A.uibuilding), post_inspect,
      'must select the new schwein', 1, 1); break;\r

      \    case 'comm_weitergeben': if (!is_playerdata_set(uplayer))
      select_add_items(ui_get_all_commission_items(uplayer), process_comm_setup,
      `must select ${fen.comm_setup_num} card${fen.comm_setup_num > 1 ? 's' :
      ''} to discard`, fen.comm_setup_num, fen.comm_setup_num); break;\r

      \    case 'rumors_weitergeben':\r

      \      let rumitems = ui_get_rumors_and_players_items(uplayer);\r

      \      if (isEmpty(rumitems)) {\r

      \        show_waiting_message('waiting for other players...');\r

      \        Z.state = null;\r

      \        let done = rumor_playerdata_complete();\r

      \        if (done){\r

      \          Z.turn = [Z.host];\r

      \          Z.stage = 105; //'next_rumors_setup_stage';\r

      \          clear_transaction();\r

      \          take_turn_fen();\r

      \        }else autopoll();\r

      \      } else select_add_items(rumitems, process_rumors_setup, `must
      select a player and a rumor to pass on`, 2, 2);\r

      \      break;\r

      \    case 'next_rumor_setup_stage': post_rumor_setup(); break;\r

      \    case 'buy rumor': select_add_items(ui_get_top_rumors(),
      post_buy_rumor, 'must select one of the new rumor cards', 1, 1); break;\r

      \    case 'rumor discard':
      select_add_items(ui_get_rumors_items(uplayer), process_rumor_discard,
      'must select a rumor card to discard', 1, 1); break;\r

      \    case 'rumor_both': select_add_items(ui_get_top_rumors(),
      post_rumor_both, 'must select one of the new rumor cards', 1, 1); break;\r

      \    case 'blackmail':
      select_add_items(ui_get_other_buildings_with_rumors(uplayer),
      process_blackmail, 'must select a building to blackmail', 1, 1); break;\r

      \    case 'blackmail_owner':
      select_add_items(ui_get_blackmailed_items(), being_blackmailed, 'must
      react to BLACKMAIL!!!', 1, 1); break; \r

      \    case 'accept_blackmail':
      select_add_items(ui_get_stall_items(uplayer), post_accept_blackmail, 'must
      select a card to pay off blackmailer', 1, 1); break;\r

      \    case 'blackmail_complete': post_blackmail(); break;\r

      \    case 'journey':
      select_add_items(ui_get_hand_and_journey_items(uplayer), process_journey,
      'may form new journey or add cards to existing one'); break;\r

      \    case 'add new journey': post_new_journey(); break;\r

      \    case 'auto market': ari_open_market(fen, phase, deck, market);
      break;\r

      \    case 'TEST_starts_in_stall_selection_complete':\r

      \      if (is_stall_selection_complete()) {\r

      \        delete fen.stallSelected;\r

      \        fen.actionsCompleted = [];\r

      \        if (check_if_church()) ari_start_church_stage(); else
      ari_start_action_stage();\r

      \      } else select_add_items(ui_get_hand_items(uplayer),
      post_stall_selected, 'must select your stall'); break;\r

      \    case 'stall selection':
      select_add_items(ui_get_hand_items(uplayer), post_stall_selected, 'must
      select cards for stall'); break;\r

      \    case 'church':
      select_add_items(ui_get_hand_and_stall_items(uplayer), post_tithe, `must
      select cards to tithe ${isdef(fen.tithemin) ? `(current minimum is
      ${fen.tithemin})` : ''}`, 1, 100); break;\r

      \    case 'church_minplayer_tithe_add':
      select_add_items(ui_get_hand_and_stall_items(uplayer), post_tithe_minimum,
      `must select cards to reach at least ${fen.tithe_minimum}`, 1, 100);
      break;\r

      \    case 'church_minplayer_tithe_downgrade':
      select_add_items(ui_get_building_items(uplayer, A.payment),
      process_downgrade, 'must select a building to downgrade', 1, 1); break;\r

      \    case 'church_minplayer_tithe':
      console.log('NOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\
      OO');\r

      \      let pl = fen.players[uplayer];\r

      \      let hst = pl.hand.concat(pl.stall);\r

      \      let vals = hst.map(x => ari_get_card(x).val);\r

      \      let sum = arrSum(vals);\r

      \      let min = fen.tithe_minimum;\r

      \      if (sum < min) {\r

      \        ari_history_list([`${uplayer} must downgrade a building to
      tithe ${min}!`], 'downgrade');\r

      \        select_add_items(ui_get_building_items(uplayer, A.payment),
      process_downgrade, 'must select a building to downgrade', 1, 1);\r

      \      } else {\r

      \        ari_history_list([`${uplayer} must tithe more cards to
      reach ${min}!`], 'tithe');\r

      \        select_add_items(ui_get_hand_and_stall_items(uplayer),
      post_tithe_minimum, `must select cards to reach at least
      ${fen.tithe_minimum}`, 1, 100);\r

      \      }\r

      \      break;\r

      \    case 'church_newcards':\r

      \      reveal_church_cards();\r

      \      let items = ui_get_church_items(uplayer);\r

      \      let num_select = items.length == fen.church.length ? 1 : 2;\r

      \      let instr = num_select == 1 ? `must select a card for
      ${fen.candidates[0]}` : 'must select card and player';\r

      \      select_add_items(items, post_church, instr, num_select,
      num_select);\r

      \      break;\r

      \    case 'complementing_market_after_church':\r

      \      select_add_items(ui_get_hand_items(uplayer),
      post_complementing_market_after_church, 'may complement stall'); break;\r

      \    case 'tax': let n = fen.pl_tax[uplayer];
      select_add_items(ui_get_hand_items(uplayer), post_tax, `must pay ${n}
      card${if_plural(n)} tax`, n, n); break;\r

      \    case 'build': select_add_items(ui_get_build_items(uplayer,
      A.payment), post_build, 'must select cards to build (first card determines
      rank)', 4, 6, true); break;\r

      \    case 'commission_stall':
      select_add_items(ui_get_commission_stall_items(),
      process_commission_stall, 'must select matching stall card to discard', 1,
      1); break;\r

      \    case 'commission new':
      select_add_items(ui_get_commission_new_items(uplayer), post_commission,
      'must select a new commission', 1, 1); break;\r

      \    case 'upgrade': select_add_items(ui_get_build_items(uplayer,
      A.payment), process_upgrade, 'must select card(s) to upgrade a building',
      1); break;\r

      \    case 'select building to upgrade':
      select_add_items(ui_get_farms_estates_items(uplayer), post_upgrade, 'must
      select a building', 1, 1); break;\r

      \    case 'select downgrade cards':
      select_add_items(A.possible_downgrade_cards, post_downgrade, 'must select
      card(s) to downgrade a building', 1, is_in_middle_of_church() ? 1 : 100);
      break;\r

      \    case 'buy': select_add_items(ui_get_open_discard_items(uplayer,
      A.payment), post_buy, 'must select a card to buy', 1, 1); break;\r

      \    case 'visit': select_add_items(ui_get_other_buildings(uplayer,
      A.payment), process_visit, 'must select a building to visit', 1, 1);
      break;\r

      \    case 'visit destroy':
      select_add_items(ui_get_string_items(['destroy', 'get cash']), post_visit,
      'must destroy the building or select the cash', 1, 1); break;\r

      \    case 'ball': select_add_items(ui_get_hand_items(uplayer),
      post_ball, 'may add cards to the ball'); break;\r

      \    case 'auction: bid':
      select_add_items(ui_get_coin_amounts(uplayer), process_auction, 'must bid
      for the auction', 1, 1); break;\r

      \    case 'auction: buy': select_add_items(ui_get_market_items(),
      post_auction, 'must buy a card', 1, 1); break;\r

      \    case 'end game?': select_add_items(ui_get_endgame(uplayer),
      post_endgame, 'may end the game here and now or go on!', 1, 1); break;\r

      \    case 'pick luxury or journey cards':
      select_add_items(ui_get_string_items(['luxury cards', 'journey cards']),
      post_luxury_or_journey_cards, 'must select luxury cards or getting cards
      from the other end of the journey', 1, 1); break;\r

      \    case 'next_comm_setup_stage':
      select_confirm_weiter(post_comm_setup_stage); break;\r

      \    default: console.log('stage is', stage); break;\r

      \  }\r

      }\r\n"
    sig: function ari_pre_action(){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_open_market:
    name: ari_open_market
    code: "function ari_open_market(fen, phase, deck, market) {\r

      \  DA.qanim = [];\r

      \  let n_market = phase == 'jack' ? 3 : 2;\r

      \  fen.stage = Z.stage = phase == 'jack' ? 12 : phase == 'queen' ?
      11 : 4;\r

      \  fen.stallSelected = [];\r

      \  delete fen.passed;\r

      \  for (let i = 0; i < n_market; i++) {\r

      \    DA.qanim.push([qanim_flip_topmost, [deck]]);\r

      \    DA.qanim.push([qanim_move_topmost, [deck, market]]);\r

      \    DA.qanim.push([q_move_topmost, [deck, market]]);\r

      \  }\r

      \  DA.qanim.push([q_mirror_fen, ['deck', 'market']]);\r

      \  DA.qanim.push([ari_pre_action, []]);\r

      \  qanim();\r

      }\r\n"
    sig: function ari_open_market(fen, phase, deck, market){}
    region: market (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_show_building:
    name: ari_show_building
    code: "function ari_show_building(otree, uname, building_cards) {\r

      \  DA.qanim = [\r

      \    [anim_from_deck_to_marketX, [deck, market]],\r

      \    [anim_from_deck_to_marketX, [deck, market]],\r

      \    [update_otree_from_ui, [otree, { deck: deck, market: market
      }]],\r

      \    [ari_pre_action, []],\r

      \  ];\r

      \  qanim();\r

      }\r\n"
    sig: function ari_show_building(otree, uname, building_cards){}
    region: funcs (apre.js)
    filename: apre.js
    type: func
    fname: apre.js
    path: C:\xampp\htdocs\aroot\base\js\apre.js
    datetime: 2022-04-06-12-24
    timestamp: 1649273070947.4172
    size: 6026
  ari_branch:
    name: ari_branch
    code: "function ari_branch(obj, otree, rtree) {\r

      \  verify_unit_test(otree);\r

      \  ari_player_stats(otree);\r

      \  G.plprev = G.plturn;\r

      \  let plturn = G.plturn = otree.plturn; \r

      \  let turn_changed = G.plprev != G.plturn;\r

      \  let my_turn = G.plturn == G.cur_user;\r

      \  console.assert(otree.plturn == otree.plorder[otree.iturn], 'TURN
      MIXUP!');\r

      \  if (TESTING) console.log('___ ITER:' + ITER, plturn, turn_changed
      ? '(changed)' : '', my_turn ? 'ME!' : '', isdef(otree.num_actions) ?
      'actions:' + otree.num_actions : '');\r

      \  ari_present(otree,plturn);\r

      \  A = { level: 0, di: {}, ll: [], items: [], selected: [], tree:
      null, breadcrumbs: [], sib: [], command: null };\r

      \  console.assert(G.otree == otree, 'OTREE FAIL!!!!!!!!!!!');\r

      \  table_shield_off();\r

      \  if (isdef(otree.winner)) {\r

      \    stop_game();\r

      \    ari_reveal_all_buildings(otree);\r

      \    if (!TestInfo.running) turn_show_gameover(otree);\r

      \  } else if (G.cur_user == plturn || is_admin(G.cur_user)) {\r

      \    ari_pre_action(otree, plturn);\r

      \  } else {\r

      \    let txt = otree.num_actions > 0 ? ('(' + otree.action_number +
      '/' + otree.total_pl_actions + ')') : '';\r

      \    dTop.innerHTML =\r

      \      `<div style='padding:4px
      10px;font-size:20px;display:flex;justify-content:space-between'>\r

      \      <div>${G.table.friendly.toLowerCase()}</div>\r

      \      <div>${plturn} ${txt} ${ARI.stage[otree.stage]}</div>\r

      \      <div>phase: ${otree.phase.toUpperCase()}</div>\r

      \    </div>`;\r

      \    table_shield_on();\r

      \  }\r

      }\r\n"
    sig: function ari_branch(obj, otree, rtree){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_present:
    name: turn_present
    code: "function turn_present(obj) {\r

      \  if (ITER >= Math.min(DA.iter, MAXITER)) { console.log('iter',
      ITER == MAXITER ? 'MAX' : 'DA.iter'); TOMan.clear(); return; } ITER++;\r

      \  let otree = turn_unpackage_fen(obj);  \r

      \  let rtree = turn_create_R(otree);\r

      \  ui_table_actions_stats();\r

      \  if (G.cur_game == 'gAristo') { ari_branch(obj, otree, rtree); }\r

      \  else if (G.cur_game == 'gPreinno') { inno_branch(obj, otree,
      rtree); }\r

      }\r\n"
    sig: function turn_present(obj){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  inno_branch:
    name: inno_branch
    code: "function inno_branch(obj, otree, rtree) {\r

      \  ui_present_stats(otree);\r

      \  let uitree = ui_present_table(rtree, dTable);\r

      \  if (nundef(otree.todo)) { otree.todo = inno_todo_init(otree); }\r

      \  let req = otree.todo[otree.itask];\r

      \  console.log('____________', ITER); \r

      \  let my_turn = true; \r

      \  window[req.key + '_pre'](otree, req, req.uname);\r

      }\r\n"
    sig: function inno_branch(obj, otree, rtree){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_set_game_assets:
    name: turn_set_game_assets
    code: "function turn_set_game_assets(g) {\r

      \  if (g.cur_game == 'gPreinno') g.cards = InnoById;\r

      \  else if (g.cur_game == 'gAristo') g.cards = Aristocards;\r

      }\r\n"
    sig: function turn_set_game_assets(g){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_set_keys:
    name: turn_set_keys
    code: "function turn_set_keys(g, obj) {\r

      \  let fen = obj.table.fen;\r

      \  let di = {\r

      \    table: get_keys(fen),\r

      \    players: get_keys(fen.players[fen.plorder[0]]),\r

      \    r_nodes: [],\r

      \    ui_nodes: []\r

      \  };\r

      \  let rks = arrMinus(di.table.concat(di.players), ['splays',
      'herald', 'plorder', 'coins']);\r

      \  rks = arrPlus(rks, ['green', 'purple', 'blue', 'red',
      'yellow']);\r

      \  rks = rks.concat(fen.plorder);\r

      \  di.r_nodes = rks;\r

      \  di.ui_nodes = arrMinus(di.r_nodes, []);\r

      \  g.game_keys = {};\r

      \  for (const k in di) {\r

      \    let di1 = g.game_keys[k] = {};\r

      \    for (const k1 of di[k]) di1[k1] = true;\r

      \  }\r

      }\r\n"
    sig: function turn_set_keys(g, obj){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  test0_show_all_inno_cards:
    name: test0_show_all_inno_cards
    code: "function test0_show_all_inno_cards() {\r

      \  clearElement(dTable);\r

      \  for (const k in InnoById) {\r

      \    let ci = InnoById[k];\r

      \    console.log('ci', ci);\r

      \    if (ci.exp[0] == 'F') inno_present_card(dTable, k);\r

      \  }\r

      }\r\n"
    sig: function test0_show_all_inno_cards(){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  mHigh:
    name: mHigh
    code: "function mHigh(d) { d = isString(d) ? mBy(d) : d; mStyle(d, { border:
      'yellow' }); }\r\n"
    sig: function mHigh(d){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  munhigh:
    name: munhigh
    code: "function munhigh(d) { d = isString(d) ? mBy(d) : d; mStyle(d, { border:
      'none' }); }\r\n"
    sig: function munhigh(d){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  highlight_player:
    name: highlight_player
    code: "function highlight_player(uname) { mHigh(`d_${uname}`);
      mHigh(iDiv(Items[uname])); }\r\n"
    sig: function highlight_player(uname){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  activate_actions:
    name: activate_actions
    code: "function activate_actions(r, uname) {\r

      \  console.log('actions', r.actions);\r

      \  if (!isEmpty(DA.staged_moves)) {\r

      \    dastaged(r, uname, 500);\r

      \  } else if (r.actions.length == 1) {\r

      \    autoselect_action(r, r.actions[0], uname);\r

      \  } else {\r

      \    for (const a of r.actions) {\r

      \      if (isdef(Items[a])) {\r

      \        let item = R.get_item(a);\r

      \        let d = iDiv(item);\r

      \        mStyle(d, { cursor: 'pointer' });\r

      \        d.onclick = ev => onselect_action(ev, r, a, uname);\r

      \      } else if (a == 'pass') {\r

      \        activate_pass_button(a, uname);\r

      \      } else if (startsWith(a, 'draw')) {\r

      \        let path = stringAfter(a, '.');\r

      \        let item = R.get_item(path);\r

      \        let d = iDiv(item);\r

      \        mStyle(d, { cursor: 'pointer' });\r

      \        d.onclick = ev => onselect_action(ev, r, a, uname);\r

      \        activate_draw_button(r, a, uname);\r

      \      }\r

      \    }\r

      \    highlight_player(uname);\r

      \    uiActivated = true;\r

      \  }\r

      }\r\n"
    sig: function activate_actions(r, uname){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  activate_draw_button:
    name: activate_draw_button
    code: "function activate_draw_button(r, action, uname) {\r

      \  mButton('draw', ev => select_action(r, action, uname), dActions,
      { fz: 13 }, ['donebutton', 'enabled'], 'd_draw');\r

      }\r\n"
    sig: function activate_draw_button(r, action, uname){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  activate_pass_button:
    name: activate_pass_button
    code: "function activate_pass_button(r, action, uname) {\r

      \  mButton('pass', ev => select_action(r, action, uname), dActions,
      { fz: 13 }, ['donebutton', 'enabled'], 'd_pass');\r

      }\r\n"
    sig: function activate_pass_button(r, action, uname){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  select_action:
    name: select_action
    code: "function select_action(r, action, uname, item) {\r

      \  uiActivated = false;\r

      \  r.selected = action;\r

      \  console.log('action selected:', r.key, uname, action, item);\r

      \  window[r.key + '_post'](Session.otree, r, uname, action, item);\r

      }\r\n"
    sig: function select_action(r, action, uname, item){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  autoselect_action:
    name: autoselect_action
    code: "function autoselect_action(r, action, uname, item) {\t/*item is added to
      simulated ui clicks only!*/\tselect_action(r, action, uname, item); }\r\n"
    sig: function autoselect_action(r, action, uname, item){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  onselect_action:
    name: onselect_action
    code: "function onselect_action(ev, r, action, uname) { let item =
      get_selected_ui_item(ev); select_action(r, action, uname, item); }\r\n"
    sig: function onselect_action(ev, r, action, uname){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_send_move_update:
    name: turn_send_move_update
    code: "function turn_send_move_update(action_star = false) {\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];  \r

      \  [fen.stage, fen.phase, fen.turn] = [Z.stage, Z.phase, Z.turn];\r

      \  assertion(!isEmpty(fen.turn), 'ACHTUNG!!!!!!!!!!! TURN IST EMPTY
      in turn_send_move_update!!!!!!!!!!!!!', Z.turn);\r

      \  let action = action_star ? { stage: '*', step: '*' } :
      Z.expected[uplayer];\r

      \  let expected = {}; fen.turn.map(x => expected[x] = { stage:
      fen.stage, step: Z.step });\r

      \  sendmove(Z.uplayer, Z.friendly, Z.fen, action, expected, Z.phase,
      Z.round, Z.step, Z.stage, Z.notes, Z.scoring);\r

      }\r\n"
    sig: function turn_send_move_update(action_star = false){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\easy\start.js
    datetime: 2022-07-19-14-04
    timestamp: 1658264674358.299
    size: 12459
  turn_send_gameover:
    name: turn_send_gameover
    code: "function turn_send_gameover(otree, uname) {\r

      \  let fen = turn_package_otree(otree);\r

      \  let g = Session;\r

      \  let o = { uname: uname, tid: g.table.id, fen: fen, table_status:
      'over' };\r

      \  to_server(o, 'turn_update');\r

      } \r\n"
    sig: function turn_send_gameover(otree, uname){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_send_reload:
    name: turn_send_reload
    code: "function turn_send_reload(uname) {\r

      \  let g = Session;\r

      \  let o = { uname: uname, tid: g.table.id, table_status:
      g.table.status };\r

      \  to_server(o, 'turn_update');\r

      }\r\n"
    sig: function turn_send_reload(uname){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_package_otree:
    name: turn_package_otree
    code: "function turn_package_otree(otree) {\r

      \  let keys = Session.game_keys.players; \r

      \  let fen = otree;\r

      \  fen.players = {};\r

      \  for (const plname of otree.plorder) fen.players[plname] =
      stripToKeys(otree[plname], keys);\r

      \  otree.plorder.map(x => delete fen[x]);\r

      \  return fen;\r

      }\r\n"
    sig: function turn_package_otree(otree){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_unpackage_fen:
    name: turn_unpackage_fen
    code: "function turn_unpackage_fen(obj) {\r

      \  let g = Session;\r

      \  turn_set_game_assets(g);\r

      \  turn_set_keys(g, obj);\r

      \  g.obj = ServerData = obj;\r

      \  let otree = Fen = g.otree = turn_create_otree(obj);  \r

      \  return otree;\r

      }\r\n"
    sig: function turn_unpackage_fen(obj){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  otree2cur_players:
    name: otree2cur_players
    code: "function otree2cur_players(otree){\r

      \  Session.cur_players = {};\r

      \  for(const uname of otree.plorder){\r

      \    Session.cur_players[uname] = otree[uname];\r

      \  }\r

      \  return Session.cur_players;\r

      }\r\n"
    sig: function otree2cur_players(otree){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_create_otree:
    name: turn_create_otree
    code: "function turn_create_otree(obj) {\r

      \  console.assert(isdef(obj.table), 'turn_create_otree without
      obj.table!!!!!!!!!!!!!!');\r

      \  let g = Session;\r

      \  let [menu, table, fen, plist, players] = [g.cur_menu, g.table,
      g.fen, g.plist, g.players] = ['play', obj.table, obj.table.fen,
      obj.playerdata, obj.table.fen.players];\r

      \  let otree = jsCopy(fen); \r

      \  let order = isdef(fen.plorder) ? fen.plorder : plist.map(x =>
      x.name);\r

      \  otree.player_names = order; \r

      \  for (const uname of order) {\r

      \    let pl = firstCond(plist, x => x.name == uname);\r

      \    copyKeys(DB.users[uname], pl);\r

      \    copyKeys(fen.players[uname], pl);\r

      \    otree[uname] = pl;\r

      \  }\r

      \  addKeys(fen, otree);\r

      \  delete otree.players;\r

      \  return otree;\r

      }\r\n"
    sig: function turn_create_otree(obj){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_create_R:
    name: turn_create_R
    code: "function turn_create_R(otree) {\r

      \  Items = {};\r

      \  let g = Session;\r

      \  R = g.R = new RSG(); R.otree = otree;\r

      \  let r_keys = R.keys = Session.game_keys.r_nodes; \r

      \  let akku = G.akku = [];\r

      \  let root = R.root = rec_create_nodes_tree_akku(R, otree, '',
      r_keys, akku);\r

      \  return R;\r

      }\r\n"
    sig: function turn_create_R(otree){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  ui_table_actions_stats:
    name: ui_table_actions_stats
    code: "function ui_table_actions_stats() {\r

      \  let d = mBy('inner_left_panel'); clearElement(d);\r

      \  let dou = mDiv100(d, { display: 'flex' }); \r

      \  dTable = mDiv(dou, { flex: 5, display: 'flex', overflow: 'auto',
      position: 'relative' }); \r

      \  mCenterFlex(dTable, false); \r

      \  dTable.animate([{ opacity: 0, transform: 'translateY(50px)' }, {
      opacity: 1, transform: 'translateY(0px)' },], { fill: 'both', duration:
      1000, easing: 'ease' });\r

      \  dTop = mDiv(dTable, { bg: '#00000040', fg: 'white', w: '100%' },
      'dTop', 'hallo');\r

      \  dTop.innerHTML = ''; \r

      \  dOben = mDiv(dTable, { bg: '#ffffff40', w: '100%' }, 'dOben',
      'hallo');\r

      \  dOben.innerHTML = ''; \r

      \  dActions = mDiv(dOben, { w: '100%' });\r

      \  for (let i = 0; i <= 5; i++) {\r

      \    window[`dActions${i}`] = mDiv(dActions, { w: '100%' });\r

      \  }\r

      \  dError = mDiv(dOben, { w: '100%', bg: 'red', fg: 'yellow' });\r

      \  dPlayerStats = dRechts = mDiv(dou, { flex: 1 }, 'dRechts',
      'hallo');\r

      }\r\n"
    sig: function ui_table_actions_stats(){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  ui_present_table:
    name: ui_present_table
    code: "function ui_present_table(r, dParent) {\r

      \  let g = Session;\r

      \  let uitree = r.uiNodes = {};\r

      \  if (g.cur_game == 'gPreinno') inno_create_ui_tree(R.root,
      dParent, r);\r

      \  else if (g.cur_game == 'gAristo') ari_create_ui_tree(R.root,
      dParent, r);\r

      \  return uitree;\r

      }\r\n"
    sig: function ui_present_table(r, dParent){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  turn_show_gameover:
    name: turn_show_gameover
    code: "function turn_show_gameover(otree) {\r

      \  let game = Session.cur_game;\r

      \  let table = Session.cur_table;\r

      \  let players = otree2cur_players(otree);\r

      \  let winner = otree.winner;\r

      \  if (!Session.scoring_complete) {\r

      \    console.log('======>scoring!!!!!', table.friendly);\r

      \    scoring_update(otree.plorder, [otree.winner], game);\r

      \    out1();\r

      \    Session.scoring_complete = true;\r

      \  }\r

      \  let pl = otree[winner];\r

      \  let styles = { bg: pl.color, alpha: .75, fg: 'contrast', top:
      220, };\r

      \  let msg = 'GAME OVER - The ' + `winner is ${otree.winner}!!!`;\r

      \  let d = status_message(msg, styles);\r

      \  let end_scores = table.status == 'past' ? table.end_scoring :
      get_scores_from_cur_players();\r

      \  show_score_table(end_scores, table.friendly, d);\r

      \  mLinebreak(d);\r

      \  mButton('click to close', onclick_gameover_new, d, { fz: 20 },
      ['buttonClass', 'donebutton']);\r

      }\r\n"
    sig: function turn_show_gameover(otree){}
    region: var (game_turn1.js)
    filename: game_turn1.js
    type: func
    fname: game_turn1.js
    path: C:\xampp\htdocs\aroot\base\js\game_turn1.js
    datetime: 2022-04-06-12-58
    timestamp: 1649275097238.3486
    size: 13487
  qanim_flip_topmost:
    name: qanim_flip_topmost
    code: "function qanim_flip_topmost(deck, ms = 400) {\r

      \  qanim_flip(deck.get_topcard(), ms);\r

      }\r\n"
    sig: function qanim_flip_topmost(deck, ms = 400){}
    region: q (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  qanim_flip:
    name: qanim_flip
    code: "function qanim_flip(card, ms = 400) {\r

      \  mAnimate(iDiv(card), 'transform', [`scale(1,1)`, `scale(0,1)`],\r

      \    () => {\r

      \      if (card.faceUp) face_down(card); else face_up(card);\r

      \      mAnimate(iDiv(card), 'transform', [`scale(0,1)`,
      `scale(1,1)`], qanim, ms / 2, 'ease-in', 0, 'both');\r

      \    },\r

      \    ms / 2, 'ease-out', 0, 'both');\r

      }\r\n"
    sig: function qanim_flip(card, ms = 400){}
    region: q (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  qanim_move_topmost:
    name: qanim_move_topmost
    code: "function qanim_move_topmost(uideck, uito, ms = 400) {\r

      \  let card = uideck.get_topcard();\r

      \  qanim_move(card, uideck, uito, ms);\r

      }\r\n"
    sig: function qanim_move_topmost(uideck, uito, ms = 400){}
    region: q (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  qanim_move:
    name: qanim_move
    code: "function qanim_move(card, uifrom, uito, ms = 400) {\r

      \  let dfrom = iDiv(card);\r

      \  let dto = isEmpty(uito.items) ? uito.cardcontainer :
      iDiv(arrLast(uito.items));\r

      \  let dParent = find_common_ancestor(dfrom, dto);\r

      \  let rfrom = getRect(dfrom, dParent);\r

      \  let rto = getRect(dto, dParent);\r

      \  dfrom.style.zIndex = 100;\r

      \  let [offx, offy] = isEmpty(uito.items) ? [4, 4] : [card.w, 0];\r

      \  let a = mAnimate(dfrom, 'transform',\r

      \    [`translate(${offx + rto.l - rfrom.l}px, ${offy + rto.t -
      rfrom.t}px)`], qanim,\r

      \    ms, 'ease');\r

      }\r\n"
    sig: function qanim_move(card, uifrom, uito, ms = 400){}
    region: q (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  q_move_topmost:
    name: q_move_topmost
    code: "function q_move_topmost(uideck, uito) {\r

      \  let topmost = pop_top(uideck); \r

      \  let dfrom = iDiv(topmost);\r

      \  dfrom.remove();\r

      \  dfrom.style.position = 'static';\r

      \  dfrom.style.zIndex = 0;\r

      \  uito.items.push(topmost);\r

      \  uito.list = uito.items.map(x => x.key);\r

      \  mAppend(uito.cardcontainer, dfrom);\r

      \  qanim();\r

      }\r\n"
    sig: function q_move_topmost(uideck, uito){}
    region: q (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  q_mirror_fen:
    name: q_mirror_fen
    code: "function q_mirror_fen() {\r

      \  let fen = Z.fen;\r

      \  for (const prop of arguments) {\r

      \    let ui = UI[prop];\r

      \    fen[prop] = ui.list;\r

      \  }\r

      \  qanim();\r

      }\r\n"
    sig: function q_mirror_fen(){}
    region: q (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  set_card_style:
    name: set_card_style
    code: "function set_card_style(item, styles = {}, className) {\r

      \  console.log('set_card_style', item, styles);\r

      \  let d = iDiv(item);\r

      \  let svg = findDescendantOfType('svg', d);\r

      \  let rect = findDescendantOfType('rect', svg);\r

      \  if (isdef(styles.shadow)) {\r

      \    let shadow = styles.shadow;\r

      \    delete styles.shadow;\r

      \    let hexcolor = colorFrom(styles.shadow);\r

      \    svg.style.filter = `drop-shadow(4px 5px 2px ${hexcolor})`;\r

      \  }\r

      \  if (isdef(styles.bg)) {\r

      \    let hexcolor = colorFrom(styles.bg);\r

      \    rect.setAttribute('stroke-width', 14);
      rect.setAttribute('stroke', hexcolor);\r

      \  }\r

      \  assertion(rect, 'NO RECT FOUND IN ELEM', d);\r

      \  mStyle(d, styles);\r

      \  if (isdef(className)) mClass(svg, className);\r

      }\r\n"
    sig: function set_card_style(item, styles = {}, className){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_type_rank_count:
    name: ui_type_rank_count
    code: "function ui_type_rank_count(list, dParent, styles, path, title,
      get_card_func, show_if_empty = false) {\r

      \  let cont = ui_make_container(dParent,
      get_container_styles(styles));\r

      \  let cardcont = mDiv(cont, { display: 'flex' });\r

      \  let items = [];\r

      \  for (const o of list) {\r

      \    let d = mDiv(cardcont, { display: 'flex', dir: 'c', padding: 1,
      fz: 12, align: 'center', position: 'relative' });\r

      \    let c = get_card_func(o.key);\r

      \    mAppend(d, iDiv(c));\r

      \    remove_card_shadow(c);\r

      \    d.innerHTML += `<span
      style=\"font-weight:bold\">${o.count}</span>`;\r

      \    let item = { card: c, count: o.count, div: d };\r

      \    items.push(item);\r

      \  }\r

      \  ui_add_container_title(title, cont, items, show_if_empty);\r

      \  return {\r

      \    list: list,\r

      \    path: path,\r

      \    container: cont,\r

      \    cardcontainer: cardcont,\r

      \    items: items,\r

      \  }\r

      }\r\n"
    sig: function ui_type_rank_count(list, dParent, styles, path, title,
      get_card_func, show_if_empty = false){}
    region: ui (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_make_container:
    name: ui_make_container
    code: "function ui_make_container(dParent, styles = { bg: 'random', padding: 10
      }) {\r

      \  let id = getUID('u');\r

      \  let d = mDiv(dParent, styles, id);\r

      \  return d;\r

      }\r\n"
    sig: "function ui_make_container(dParent, styles = { bg: 'random', padding: 10
      }){}"
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  autopoll:
    name: autopoll
    code: "function autopoll(ms) { TO.poll = setTimeout(_poll, valf(ms,
      valf(Z.options.poll, 2000))); }\r\n"
    sig: function autopoll(ms){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  ensure_polling:
    name: ensure_polling
    code: "function ensure_polling() { }\r\n"
    sig: function ensure_polling(){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  onclick_startpolling:
    name: onclick_startpolling
    code: "function onclick_startpolling() {\r

      \  if (Pollmode == 'auto') return;\r

      \  pollStop();\r

      \  Pollmode = 'auto';\r

      \  DA.noshow = 0;\r

      \  console.log('..........poll=>auto',`(noshow:${DA.noshow})`);\r

      \  _poll();\r

      }\r\n"
    sig: function onclick_startpolling(){}
    region: polling (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\easy\polling.js
    datetime: 2022-07-29-20-53
    timestamp: 1659153226707.773
    size: 1470
  onclick_stoppolling:
    name: onclick_stoppolling
    code: "function onclick_stoppolling() {\r

      \  if (Pollmode == 'manual') return;\r

      \  pollStop();\r

      \  Pollmode = 'manual';\r

      \  console.log('..........poll=>manual',`(noshow:${DA.noshow})`);\r

      }\r\n"
    sig: function onclick_stoppolling(){}
    region: polling (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\easy\polling.js
    datetime: 2022-07-29-20-53
    timestamp: 1659153226707.773
    size: 1470
  onclick_poll:
    name: onclick_poll
    code: "async function onclick_poll() {\r

      \  if (Pollmode == 'manual') _poll(true);\r

      \  else {\r

      \    console.log('stop _autopoll first!!!')\r

      \  }\r

      }\r\n"
    sig: async function onclick_poll(){}
    region: polling (polling.js)
    filename: polling.js
    type: func
    fname: polling.js
    path: C:\xampp\htdocs\aroot\easy\polling.js
    datetime: 2022-07-29-20-53
    timestamp: 1659153226707.773
    size: 1470
  pollStop:
    name: pollStop
    code: "function pollStop() { clearTimeout(TO.poll); Clientdata.AUTORESET = true;
      }\r\n"
    sig: function pollStop(){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  show_table_if_winner:
    name: show_table_if_winner
    code: "function show_table_if_winner(otree) {\r

      \  table_shield_off();\r

      \  if (isdef(otree.winner)) {\r

      \    stop_game();\r

      \    ari_reveal_all_buildings(otree);\r

      \    if (!DA.test.running) turn_show_gameover(otree);\r

      \  }\r

      }\r\n"
    sig: function show_table_if_winner(otree){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\xampp\htdocs\aroot\simple\baustelle.js
    datetime: 2022-04-26-07-18
    timestamp: 1650982707869.5945
    size: 5079
  onclick_step:
    name: onclick_step
    code: "function onclick_step() {\r

      \  DA.test.step = true;\r

      \  DA.test.running = true;\r

      \  if (!isEmpty(DA.chain)) { dachainext(1000); return; }\r

      \  let testnumber = valf(mBy('intestnumber').value, 110);\r

      \  if (!isNumber(testnumber)) testnumber = 110;\r

      \  console.log('test for step is', testnumber);\r

      \  DA.test.number = testnumber;\r

      \  onclick_last_test();\r

      }\r\n"
    sig: function onclick_step(){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  onclick_ut_n:
    name: onclick_ut_n
    code: "function onclick_ut_n(g, n) {\r

      \  DA.test.running = true;\r

      \  let [fen, player_names] =
      window[`${g}_ut${n}_create_staged`]();\r

      \  get_create_staged(fen, { level_setting: 'min' }, player_names);\r

      }\r\n"
    sig: function onclick_ut_n(g, n){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  get_create_staged:
    name: get_create_staged
    code: "function get_create_staged(fen, options, player_names) {\r

      \  let t = create_table(options, player_names);\r

      \  t.fen = fen;\r

      \  to_server({ table: t }, 'delete_and_create_staged');\r

      }\r\n"
    sig: function get_create_staged(fen, options, player_names){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  onclick_run_tests:
    name: onclick_run_tests
    code: "function onclick_run_tests() {\r

      \  stop_game();\r

      \  stop_polling();\r

      \  shield_on();\r

      \  DA.test.iter = 0;\r

      \  DA.test.suiteRunning = true;\r

      \  if (nundef(DA.test.list)) {\r

      \    console.log('taking default DA.test.list');\r

      \    DA.test.list = [100, 101];\r

      \  }\r

      \  test_engine_run_next(DA.test.list);\r

      }\r\n"
    sig: function onclick_run_tests(){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  onclick_last_test:
    name: onclick_last_test
    code: "function onclick_last_test() {\r

      \  stop_game();\r

      \  stop_polling();\r

      \  DA.test.iter = 0;\r

      \  DA.test.suiteRunning = false;\r

      \  onclick_ut_n('ari', DA.test.number);\r

      }\r\n"
    sig: function onclick_last_test(){}
    region: bauhelpers (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  aTranslateByEase:
    name: aTranslateByEase
    code: "function aTranslateByEase(d, x, y, ms, easing =
      'cubic-bezier(1,-0.03,.27,1)') {\r

      \  return d.animate({ transform: `translate(${x}px,${y}px)` }, {
      easing: easing, duration: ms });\r

      }\r\n"
    sig: function aTranslateByEase(d, x, y, ms, easing =
      'cubic-bezier(1,-0.03,.27,1)'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aFlip:
    name: aFlip
    code: "function aFlip(d, ms = 300) {\r

      \  return anime({ targets: d, scaleX: -1, duration: ms, easing:
      'easeInOutSine' });\r

      }\r\n"
    sig: function aFlip(d, ms = 300){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ari_globalize:
    name: ari_globalize
    code: "function ari_globalize(g, uname) {\r

      \  DA.uname = uname; DA.g = g;\r

      \  z = {};\r

      \  z.A = { level: 0, di: {}, ll: [], items: [], selected: [], tree:
      null, breadcrumbs: [], sib: [], command: null };\r

      \  copyKeys(DA.g, z);\r

      \  copyKeys(jsCopy(DA.g.fen), z);\r

      \  copyKeys(UI, z);\r

      \  z.uname = uname;\r

      }\r\n"
    sig: function ari_globalize(g, uname){}
    region: funcs (aripre.js)
    filename: aripre.js
    type: func
    fname: aripre.js
    path: C:\xampp\htdocs\aroot\simple\aripre.js
    datetime: 2022-04-26-09-13
    timestamp: 1650989615633.7039
    size: 9166
  test_endgame:
    name: test_endgame
    code: "function test_endgame() {\r

      \  let [A, fen, uname] = [Z.A, Z.fen, Z.uname];\r

      \  fen.actionsCompleted = [];\r

      \  for (const plname of fen.plorder) {\r

      \    add_a_correct_building_to(fen, plname, 'chateau');\r

      \    add_a_correct_building_to(fen, plname, rChoose(['farm',
      'estate', 'chateau']));\r

      \    if (coin()) add_a_correct_building_to(fen, plname,
      rChoose(['farm', 'estate', 'chateau']));\r

      \    fen.actionsCompleted.push(plname);\r

      \  }\r

      \  Z.stage = 5;\r

      \  Z.phase = 'king';\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function test_endgame(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  test_add_schwein:
    name: test_add_schwein
    code: "function test_add_schwein() {\r

      \  let [A, fen, uname] = [Z.A, Z.fen, Z.uname];\r

      \  let type = rChoose(['farm', 'estate', 'chateau']);\r

      \  let keys = deck_deal(fen.deck, type[0] == 'f' ? 4 : type[0] ==
      'e' ? 5 : 6);\r

      \  fen.players[uname].buildings[type].push({ list: keys, h: null
      });\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function test_add_schwein(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  add_a_correct_building_to:
    name: add_a_correct_building_to
    code: "function add_a_correct_building_to(fen, uname, type) {\r

      \  let ranks = lookupSet(DA, ['test', 'extra', 'ranks'],
      'A23456789TJQK');\r

      \  if (ranks.length <= 0) {\r

      \    console.log('===>ranks empty!', ranks)\r

      \    ranks = lookupSetOverride(DA, ['test', 'extra', 'ranks'],
      'A23456789TJQK');\r

      \  }\r

      \  let r = ranks[0]; lookupSetOverride(DA, ['test', 'extra',
      'ranks'], ranks.substring(1));\r

      \  let keys = [`${r}Sn`, `${r}Hn`, `${r}Cn`, `${r}Dn`];\r

      \  if (type != 'farm') keys.push(`${r}Cn`); if (type == 'chateau')
      keys.push(`${r}Hn`);\r

      \  fen.players[uname].buildings[type].push({ list: keys, h: null
      });\r

      }\r\n"
    sig: function add_a_correct_building_to(fen, uname, type){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test_add_building:
    name: test_add_building
    code: "function test_add_building() {\r

      \  let [A, fen, uname] = [Z.A, Z.fen, Z.uname];\r

      \  let type = rChoose(['farm', 'estate', 'chateau']);\r

      \  add_a_correct_building_to(fen, uname, type);\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function test_add_building(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  testSplitIntoNumbersAndWords:
    name: testSplitIntoNumbersAndWords
    code: "function testSplitIntoNumbersAndWords() {\r

      \  let ss = ['1k 2queen', '1 k 12 q', '12king2queen', '31 ace
      2queen', '1 3 3 4', '1 10 3 8', '1J3As', '12 koenig 2 Ass'];\r

      \  for (const s of ss) {\r

      \    let x = splitIntoNumbersAndWords(s);\r

      \  }\r

      }\r\n"
    sig: function testSplitIntoNumbersAndWords(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  test_skip_to_tax:
    name: test_skip_to_tax
    code: "function test_skip_to_tax() {\r

      \  let [A, fen, uname] = [Z.A, Z.fen, Z.uname];\r

      \  Z.phase = 'jack';\r

      \  Z.stage = 5;\r

      \  let iturn = fen.plorder.length - 1;\r

      \  Z.turn = [fen.plorder[iturn]];\r

      \  fen.actionsCompleted = fen.plorder.slice(0, iturn);\r

      \  console.log('fen.actionsCompleted', fen.actionsCompleted);\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    pl.hand = pl.hand.concat(deck_deal(fen.deck, rNumber(0, 5)));\r

      \  }\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function test_skip_to_tax(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  test_skip_to_actions:
    name: test_skip_to_actions
    code: "function test_skip_to_actions() {\r

      \  let [A, fen, uname] = [Z.A, Z.fen, Z.uname];\r

      \  Z.phase = 'king';\r

      \  Z.stage = 5;\r

      \  fen.actionsCompleted = [];\r

      \  let i = arrMinMax(fen.plorder, x =>
      fen.players[x].hand.length).imin;\r

      \  let pl_min_hand = fen.plorder[i];\r

      \  console.log('pl w/ min hand is', pl_min_hand);\r

      \  let pl = fen.players[pl_min_hand];\r

      \  pl.hand = pl.hand.concat(fen.market);\r

      \  fen.market = deck_deal(fen.deck, 2);\r

      \  for (const plname of fen.plorder) {\r

      \    pl = fen.players[plname];\r

      \    let n = rNumber(1, pl.hand.length);\r

      \    pl.stall = pl.hand.splice(0, n);\r

      \  }\r

      \  Z.turn = [fen.plorder[rNumber(0, fen.plorder.length - 1)]];\r

      \  fen.total_pl_actions = fen.num_actions =
      fen.players[Z.turn[0]].stall.length;\r

      \  fen.action_number = 1;\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function test_skip_to_actions(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  testjourney0:
    name: testjourney0
    code: "function testjourney0() {\r

      \  let [fen, uname] = [Z.fen, Z.uname];\r

      \  let plist = find_players_with_potential_journey(fen);\r

      \  console.log('journey players', plist);\r

      \  if (!plist.includes(uname)) {\r

      \    set_nextplayer_after_journey(); \r

      \    console.log('Z.turn', Z.turn)\r

      \    take_turn_fen();\r

      \  }\r

      }\r\n"
    sig: function testjourney0(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  testanim1:
    name: testanim1
    code: "function testanim1() {\r

      \  let [fen, phase, deck, market] = [Z.fen, Z.phase, Z.deck,
      Z.market];\r

      \  DA.qanim = [];\r

      \  let n_market = phase == 'jack' ? 3 : 2;\r

      \  fen.stage = Z.stage = phase == 'jack' ? 12 : phase == 'queen' ?
      11 : 4;\r

      \  for (let i = 0; i < n_market; i++) {\r

      \    DA.qanim = DA.qanim.concat([\r

      \      [qanim_flip_topmost, [deck]],\r

      \      [qanim_move_topmost, [deck, market]],\r

      \      [q_move_topmost, [deck, market]],\r

      \    ]);\r

      \  }\r

      \  DA.qanim.push([q_mirror_fen, ['deck', 'market']]);\r

      \  DA.qanim.push([ari_pre_action, []]);\r

      \  qanim();\r

      }\r\n"
    sig: function testanim1(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  testanim0:
    name: testanim0
    code: "function testanim0() {\r

      \  let [fen, phase, stage, deck, market] = [Z.fen, Z.phase, Z.stage,
      Z.deck, Z.market];\r

      \  let ms = 400;\r

      \  let item = deck.topmost;\r

      \  mAnimate(iDiv(item), 'transform', [`scale(1,1)`, `scale(0,1)`],\r

      \    () => {\r

      \      if (item.faceUp) face_down(item); else face_up(item);\r

      \      mAnimate(iDiv(item), 'transform', [`scale(0,1)`,
      `scale(1,1)`], null,\r

      \        ms / 2, 'ease-in', 0, 'both');\r

      \    }, ms / 2, 'ease-out', 100, 'both');\r

      }\r\n"
    sig: function testanim0(){}
    region: testing (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  exp_commissions:
    name: exp_commissions
    code: "function exp_commissions(options) { return options.commission == 'yes';
      }\r\n"
    sig: function exp_commissions(options){}
    region: expansions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  exp_journeys:
    name: exp_journeys
    code: "function exp_journeys(options) { return options.journey == 'yes'; }\r\n"
    sig: function exp_journeys(options){}
    region: expansions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_command:
    name: process_command
    code: "function process_command() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  let item = A.last_selected;\r

      \  if (nundef(item)) { post_pass(); return; }\r

      \  A.selected = [item.index];\r

      \  let a = A.items[A.selected[0]];\r

      \  A.command = a.key;\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function process_command(){}
    region: actions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_auction:
    name: process_auction
    code: "function process_auction() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  if (isEmpty(A.selected)) A.selected = [0];\r

      \  let playerbid = Number(valf(A.items[A.selected[0]].a, '0')); \r

      \  lookupSet(fen, ['auction', uplayer], playerbid);\r

      \  let iturn = fen.plorder.indexOf(uplayer) + 1;\r

      \  if (iturn >= fen.plorder.length) { \r

      \    let list = dict2list(fen.auction, 'uplayer');\r

      \    list = sortByDescending(list, 'value');\r

      \    let max = list[0].value;\r

      \    if (max == 0) {\r

      \      Z.stage = 4;\r

      \      Z.turn = [fen.plorder[0]];\r

      \      take_turn_fen();\r

      \      return;\r

      \    }\r

      \    let second = fen.second_most = list.length == 1 ?
      randomNumber(0, max) : list[1].value;\r

      \    Z.stage = 13;\r

      \    let maxplayers = fen.maxplayers = list.filter(x => x.value ==
      max).map(x => x.uplayer);\r

      \    Z.turn = [maxplayers[0]];\r

      \    for (const plname of plorder) {\r

      \      ari_history_list([`${plname} bids ${fen.auction[plname]}`],
      'auction');\r

      \    }\r

      \    ari_history_list([`auction
      winner${if_plural(fen.maxplayers.length)}: ${fen.maxplayers.join(', ')}
      (price: ${fen.second_most} coin)`], 'auction');\r

      \  } else {\r

      \    Z.turn = [fen.plorder[iturn]];\r

      \  }\r

      \  take_turn_fen(); \r

      }\r\n"
    sig: function process_auction(){}
    region: auction (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_auction:
    name: post_auction
    code: "function post_auction() {\r

      \  console.assert(Z.stage == 13, 'WRONG STAGE IN POST AUCTION ' +
      Z.stage);\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let item = A.selected.map(x => A.items[x])[0]; \r

      \  lookupSet(fen, ['buy', uplayer], { key: item.key, index:
      A.selected[0] });\r

      \  ari_history_list([`${uplayer} selects ${item.key}`],
      'auction');\r

      \  for (const plname of fen.maxplayers) {\r

      \    if (!lookup(fen, ['buy', plname])) {\r

      \      Z.turn = [plname]; \r

      \      take_turn_fen(); \r

      \      return;\r

      \    }\r

      \  }\r

      \  let buylist = dict2list(fen.buy, 'playername');\r

      \  let discardlist = [];\r

      \  for (const plname of fen.maxplayers) {\r

      \    let choice = fen.buy[plname]; \r

      \    let n = arrCount(buylist, x => x.index == choice.index);\r

      \    let is_unique = n == 1; \r

      \    if (is_unique) {\r

      \      fen.players[plname].coins -= fen.second_most;\r

      \      let x = UI.player_stat_items[plname].dCoin; mPulse1(x); \r

      \      elem_from_to(choice.key, fen.market,
      fen.players[plname].hand);\r

      \      ari_history_list([`${plname} buys ${choice.key} for
      ${fen.second_most}`], 'auction');\r

      \      let card = find_card(choice.index, UI.market);\r

      \      animate_card_transfer(card,
      arrLast(UI.players[plname].hand.items)); \r

      \    } else {\r

      \      addIf(discardlist, choice.key);\r

      \      delete fen.buy[plname];\r

      \    }\r

      \  }\r

      \  for (const key of discardlist) {\r

      \    elem_from_to(key, fen.market, fen.deck_discard);\r

      \    ari_reorg_discard(fen);\r

      \    ari_history_list([`${key} is discarded`], 'auction');\r

      \  }\r

      \  delete fen.second_most;\r

      \  delete fen.maxplayers;\r

      \  delete fen.buy;\r

      \  delete fen.auction;\r

      \  Z.stage = 4;\r

      \  Z.turn = [fen.plorder[0]];\r

      \  setTimeout(take_turn_fen, 1000); \r

      }\r\n"
    sig: function post_auction(){}
    region: auction (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  get_auction_history:
    name: get_auction_history
    code: "function get_auction_history(fen) {\r

      \  let lines = [];\r

      \  let revorder = jsCopy(fen.plorder).reverse();\r

      \  for (const uplayer of revorder) {\r

      \    if (nundef(fen.buy[uplayer])) continue;\r

      \    lines.push(`${uplayer} buys ${fen.buy[uplayer].a} for
      ${fen.second_most}`);\r

      \  }\r

      \  lines.push(`auction winner(s)${fen.maxplayers.length > 1 ? 's' :
      ''}: ${fen.maxplayers.join(', ')}`);\r

      \  for (const uplayer of revorder) {\r

      \    lines.push(`${uplayer} bids ${fen.auction[uplayer]}`);\r

      \  }\r

      \  return lines;\r

      }\r\n"
    sig: function get_auction_history(fen){}
    region: auction (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_buy:
    name: post_buy
    code: "function post_buy() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  elem_from_to(item.key, fen.open_discard,
      fen.players[uplayer].hand);\r

      \  ari_history_list([`${uplayer} buys ${item.key}`], 'buy')\r

      \  ari_reorg_discard();\r

      \  console.log('hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh')\r

      \  process_payment();\r

      \  setTimeout(ari_next_action, 1000); \r

      }\r\n"
    sig: function post_buy(){}
    region: auction (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_ball:
    name: post_ball
    code: "function post_ball() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let keys = A.selected.map(x => A.items[x]).map(x => x.key);\r

      \  keys.map(x => lookupAddIfToList(fen, ['ball', uplayer], x));\r

      \  keys.map(x => removeInPlace(fen.players[uplayer].hand, x));\r

      \  let iturn = fen.plorder.indexOf(uplayer) + 1;\r

      \  if (iturn >= fen.plorder.length) { \r

      \    if (isdef(fen.ball)) {\r

      \      let all = [];\r

      \      for (const c of fen.market) all.push(c);\r

      \      for (const uplayer in fen.ball) for (const c of
      fen.ball[uplayer]) all.push(c);\r

      \      shuffle(all);\r

      \      fen.market = [];\r

      \      for (let i = 0; i < 2; i++) top_elem_from_to(all,
      fen.market);\r

      \      for (const uplayer in fen.ball) for (let i = 0; i <
      fen.ball[uplayer].length; i++) top_elem_from_to(all,
      fen.players[uplayer].hand);\r

      \      delete fen.ball;\r

      \    } \r

      \    iturn = 0;\r

      \    Z.stage = 4;\r

      \    console.assert(fen.phase == 'queen', 'wie bitte noch nicht in
      queen phase?!!!!!!!!!!!');\r

      \  }\r

      \  Z.turn = [fen.plorder[iturn]];\r

      \  ari_history_list([`${uplayer} added ${keys.length}
      card${plural(keys.length)} to ball!`], 'ball');\r

      \  take_turn_fen(); \r

      }\r\n"
    sig: function post_ball(){}
    region: ball (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_build:
    name: post_build
    code: "function post_build() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  if (A.selected.length < 4 || A.selected.length > 6) {\r

      \    select_error('select 4, 5, or 6 cards to build!');\r

      \    return;\r

      \  }\r

      \  let building_items = A.selected.map(x => A.items[x]);\r

      \  let building_type = building_items.length == 4 ? 'farm' :
      building_items.length == '5' ? 'estate' : 'chateau';\r

      \  fen.players[uplayer].buildings[building_type].push({ list:
      building_items.map(x => x.key), h: null, schweine: [], lead:
      building_items[0].key });\r

      \  for (const item of building_items) {\r

      \    let source = lookup(fen, item.path.split('.'));\r

      \    removeInPlace(source, item.key);\r

      \  }\r

      \  ari_history_list([`${uplayer} builds a ${building_type}`],
      'build');\r

      \  let is_coin_pay = process_payment();\r

      \  let ms = 1800;\r

      \  if (is_coin_pay) animcoin(Z.uplayer, 1000);\r

      \  remove_ui_items(building_items);\r

      \  let pl = fen.players[uplayer];\r

      \  let nfarms = pl.buildings.farm.length;\r

      \  let nestates = pl.buildings.estate.length;\r

      \  let nchateaus = pl.buildings.chateau.length;\r

      \  let index = building_type == 'farm' ? nfarms - 1 : building_type
      == 'estate' ? nfarms + nestates - 1 : nfarms + nestates + nchateaus - 1;\r

      \  console.log('index of new building is', index);\r

      \  let ifinal = UI.players[uplayer].indexOfFirstBuilding + index;\r

      \  console.log('ifinal', ifinal);\r

      \  let dpl = iDiv(UI.players[uplayer]);\r

      \  let akku = [];\r

      \  while (dpl.children.length > ifinal) { akku.push(dpl.lastChild);
      dpl.removeChild(dpl.lastChild); }\r

      \  let fenbuilding =
      arrLast(fen.players[uplayer].buildings[building_type]);\r

      \  let newbuilding = ui_type_building(fenbuilding, dpl, { maleft: 8
      }, `players.${uplayer}.buildings.${building_type}.${index}`,
      building_type, ari_get_card, true, false);\r

      \  animbuilding(newbuilding, ms, ari_next_action);\r

      \  akku.map(x => mAppend(dpl, x));\r

      }\r\n"
    sig: function post_build(){}
    region: build (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_commission:
    name: process_commission
    code: "function process_commission() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  A.commission = A.items[A.selected[0]];\r

      \  if (A.commission.similar.length > 1) {\r

      \    Z.stage = 37;\r

      \  } else {\r

      \    A.commission_stall_item = A.commission.similar[0];\r

      \    Z.stage = 16;\r

      \  }\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function process_commission(){}
    region: commission (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_commission:
    name: post_commission
    code: "function post_commission() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let comm_selected = A.items[A.selected[0]];\r

      \  let stall_item = A.commission_stall_item;\r

      \  console.log('stall_item:', stall_item);\r

      \  let rank = A.commission.key[0];\r

      \  if (nundef(fen.commissioned)) fen.commissioned = [];\r

      \  let x = firstCond(fen.commissioned, x => x.rank == rank);\r

      \  if (x) { removeInPlace(fen.commissioned, x); }\r

      \  else { x = { key: A.commission.key, rank: rank, count: 0 }; }\r

      \  x.count += 1;\r

      \  let pl = fen.players[uplayer];\r

      \  let top = isEmpty(fen.commissioned) ? null :
      arrLast(fen.commissioned);\r

      \  let rankstr = 'A23456789TJQK';\r

      \  let points = !top || get_rank_index(rank, rankstr) >=
      get_rank_index(top.rank, rankstr) ? 1 : 0;\r

      \  points += Number(x.count);\r

      \  pl.coins += points;\r

      \  fen.commissioned.push(x);\r

      \  let key = stall_item.key;\r

      \  removeInPlace(pl.stall, key); \r

      \  if (comm_selected.path == 'open_commissions') {\r

      \    removeInPlace(fen.open_commissions, comm_selected.key);\r

      \    top_elem_from_to(fen.deck_commission, fen.open_commissions);\r

      \  } else {\r

      \    removeInPlace(fen.deck_commission, comm_selected.key);\r

      \  }\r

      \  arrReplace(pl.commissions, [A.commission.key],
      [comm_selected.key]);\r

      \  ari_history_list([`${uplayer} commissions card
      ${A.commission.key}`, `${uplayer} gets ${points} coin${if_plural(points)}
      for commissioning ${A.commission.key}`], 'commission');\r

      \  ari_next_action();\r

      }\r\n"
    sig: function post_commission(){}
    region: commission (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_downgrade:
    name: process_downgrade
    code: "function process_downgrade() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  A.building = A.items[A.selected[0]];\r

      \  fen.stage = Z.stage = 103;\r

      \  let items = ui_get_hidden_building_items(A.building.o);\r

      \  items.map(x => face_up(x.o));\r

      \  A.possible_downgrade_cards = items;\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function process_downgrade(){}
    region: downgrade (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_downgrade:
    name: post_downgrade
    code: "function post_downgrade() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let pl = fen.players[uplayer];\r

      \  A.downgrade_cards = A.selected.map(x => A.items[x]); \r

      \  let obuilding = lookup(fen, A.building.path.split('.'));\r

      \  let n = obuilding.list.length;\r

      \  let nremove = A.downgrade_cards.length;\r

      \  let nfinal = n - nremove;\r

      \  let type = A.building.o.type;\r

      \  let list = pl.buildings[type];\r

      \  removeInPlace(list, obuilding);\r

      \  let cards = A.downgrade_cards.map(x => x.key);\r

      \  if (nfinal < 4) {\r

      \    pl.hand = pl.hand.concat(obuilding.list);\r

      \  } else if (nfinal == 4) {\r

      \    pl.buildings.farm.push(obuilding);\r

      \    pl.hand = pl.hand.concat(cards);\r

      \  } else if (nfinal == 5) {\r

      \    pl.buildings.estate.push(obuilding);\r

      \    pl.hand = pl.hand.concat(cards);\r

      \  } else if (nfinal == 6) {\r

      \    pl.buildings.chateau.push(obuilding);\r

      \    pl.hand = pl.hand.concat(cards);\r

      \  }\r

      \  A.downgrade_cards.map(x => removeInPlace(obuilding.list,
      x.key));\r

      \  if (isdef(pl.tithes)) {\r

      \    for (const c of cards) removeInPlace(pl.hand, c);\r

      \  }\r

      \  ari_history_list([`${uplayer} downgrades to
      ${ari_get_building_type(obuilding)}`], 'downgrade');\r

      \  if (isdef(pl.tithes)) { proceed_to_newcards_selection(); } else
      ari_next_action(fen, uplayer);\r

      }\r\n"
    sig: function post_downgrade(){}
    region: downgrade (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_endgame:
    name: post_endgame
    code: "function post_endgame() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  if (A.selected[0] == 0) {\r

      \    console.log('GAMEOVER!!!!!!!!!!!!!!!!!!!');\r

      \    for (const plname of fen.plorder) {\r

      \      let pl = fen.players[plname];\r

      \      pl.vps = ari_calc_real_vps(fen, plname);\r

      \      pl.max_journey_length = ari_get_max_journey_length(fen,
      plname);\r

      \      pl.score = pl.vps * 10000 + pl.max_journey_length * 100 +
      pl.coins;\r

      \      console.log('score', plname, pl.score);\r

      \    }\r

      \    let playerlist = dict2list(fen.players, 'name');\r

      \    let sorted = sortByDescending(playerlist, 'score');\r

      \    console.log('scores', sorted.map(x =>
      `${x.name}:${x.score}`));\r

      \    let max_score = sorted[0].score;\r

      \    let all_winners = sorted.filter(x => x.score == max_score);\r

      \    fen.winners = all_winners.map(x => x.name);\r

      \    console.log('winners:', fen.winners)\r

      \    take_turn_fen();\r

      \  } else {\r

      \    let iturn = fen.pl_gameover.indexOf(uplayer) + 1;\r

      \    if (iturn >= fen.pl_gameover.length) { \r

      \      delete fen.pl_gameover;\r

      \      Z.turn = [fen.plorder[0]];\r

      \      Z.phase = 'queen';\r

      \      [Z.stage, Z.turn] = set_journey_or_stall_stage(fen,
      Z.options, Z.phase);\r

      \      take_turn_fen();\r

      \    } else {\r

      \      Z.turn = [fen.pl_gameover[iturn]];\r

      \      take_turn_fen();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function post_endgame(){}
    region: endgame (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ai_pick_legal_exchange:
    name: ai_pick_legal_exchange
    code: "function ai_pick_legal_exchange() {\r

      \  let [A, fen, uplayer, items] = [Z.A, Z.fen, Z.uplayer,
      Z.A.items];\r

      \  let firstPick = rChoose(items, 1, x =>
      x.path.includes('building'));\r

      \  let secondPick = rChoose(items, 1, x =>
      !x.path.includes('building'));\r

      \  return [firstPick, secondPick];\r

      }\r\n"
    sig: function ai_pick_legal_exchange(){}
    region: exchange (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_exchange:
    name: post_exchange
    code: "function post_exchange() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  if (A.selected.length != 2) {\r

      \    select_error('please, select exactly 2 cards!');\r

      \    return;\r

      \  }\r

      \  let i0 = A.items[A.selected[0]];\r

      \  let i1 = A.items[A.selected[1]];\r

      \  let [p0, p1] = [i0.path, i1.path];\r

      \  if (p0.includes('build') == p1.includes('build')) {\r

      \    select_error('select exactly one building card and one of your
      hand or stall cards!');\r

      \    return;\r

      \  }\r

      \  let ibuilding = p0.includes('build') ? i0 : i1;\r

      \  let ihandstall = ibuilding == i0 ? i1 : i0;\r

      \  let fenbuilding = lookup(fen, ibuilding.path.split('.')); \r

      \  let ib_index = ibuilding.o.index; \r

      \  if (fenbuilding.schweine.includes(ib_index)) {\r

      \    fenbuilding.schweine.splice(fenbuilding.schweine.indexOf(ib_in\
      dex), 1);\r

      \  }\r

      \  let pl = fen.players[uplayer];\r

      \  let list2 = ihandstall.path.includes('hand') ? pl.hand :
      pl.stall;\r

      \  let i2 = list2.indexOf(ihandstall.o.key)\r

      \  exchange_by_index(fenbuilding.list, ib_index, list2, i2);\r

      \  ari_history_list([`${uplayer} exchanges card in
      ${ari_get_building_type(fenbuilding)}`], 'exchange');\r

      \  animate_card_exchange(ibuilding, ihandstall, ari_next_action);\r

      }\r\n"
    sig: function post_exchange(){}
    region: exchange (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  aggregate_player:
    name: aggregate_player
    code: "function aggregate_player(fen, prop) {\r

      \  let res = [];\r

      \  for (const uplayer in fen.players) {\r

      \    let list = fen.players[uplayer][prop];\r

      \    res = res.concat(list);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function aggregate_player(fen, prop){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_real_vps:
    name: ari_get_real_vps
    code: "function ari_get_real_vps(fen, uname) {\r

      \  let pl = fen.players[uname];\r

      \  let bs = ari_get_correct_buildings(pl.buildings);\r

      \  let vps = calc_building_vps(bs);\r

      \  for (const btype in bs) {\r

      \    let blist = bs[btype];\r

      \    for (const b of blist) {\r

      \      let lead = b.list[0];\r

      \      if (firstCond(pl.commissions, x => x[0] == lead[0])) vps +=
      1;\r

      \    }\r

      \  }\r

      \  return vps;\r

      }\r\n"
    sig: function ari_get_real_vps(fen, uname){}
    region: general (arihelpers.js)
    filename: arihelpers.js
    type: func
    fname: arihelpers.js
    path: C:\xampp\htdocs\aroot\simple\arihelpers.js
    datetime: 2022-04-26-09-27
    timestamp: 1650990473939.2678
    size: 70438
  ari_get_fictive_vps:
    name: ari_get_fictive_vps
    code: "function ari_get_fictive_vps(fen, uname) {\r

      \  let pl = fen.players[uname];\r

      \  let bs = pl.buildings;\r

      \  let vps = calc_building_vps(bs);\r

      \  return vps;\r

      }\r\n"
    sig: function ari_get_fictive_vps(fen, uname){}
    region: general (arihelpers.js)
    filename: arihelpers.js
    type: func
    fname: arihelpers.js
    path: C:\xampp\htdocs\aroot\simple\arihelpers.js
    datetime: 2022-04-26-09-27
    timestamp: 1650990473939.2678
    size: 70438
  ari_get_building_type:
    name: ari_get_building_type
    code: "function ari_get_building_type(obuilding) { let n =
      obuilding.list.length; return n == 4 ? 'farm' : n == 5 ? 'estate' :
      'chateau'; }\r\n"
    sig: function ari_get_building_type(obuilding){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_history_list:
    name: ari_history_list
    code: "function ari_history_list(lines, title = '', fen) {\r

      \  if (nundef(fen)) fen = Z.fen;\r

      \  if (nundef(fen.history)) fen.history = [];\r

      \  fen.history.push({ title: title, lines: lines });\r

      }\r\n"
    sig: function ari_history_list(lines, title = '', fen){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_next_phase:
    name: ari_next_phase
    code: "function ari_next_phase() {\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  ari_move_market_to_discard();\r

      \  ari_move_stalls_to_hands();\r

      \  ari_add_hand_card();\r

      \  delete fen.actionsCompleted;\r

      \  delete fen.stallSelected;\r

      \  Z.turn = [fen.plorder[0]];\r

      \  if (Z.stage == 10) {\r

      \    Z.phase = 'queen';\r

      \    [Z.stage, Z.turn] = set_journey_or_stall_stage(fen, Z.options,
      Z.phase);\r

      \  } else if (fen.phase == 'king') {\r

      \    fen.pl_gameover = [];\r

      \    for (const plname of fen.plorder) {\r

      \      let bcorrect =
      ari_get_correct_buildings(fen.players[plname].buildings);\r

      \      let can_end = ari_check_end_condition(bcorrect);\r

      \      if (can_end) fen.pl_gameover.push(plname);\r

      \    }\r

      \    if (!isEmpty(fen.pl_gameover)) {\r

      \      Z.stage = 10;\r

      \      Z.turn = [fen.pl_gameover[0]];\r

      \    } else {\r

      \      Z.phase = 'queen';\r

      \      [Z.stage, Z.turn] = set_journey_or_stall_stage(fen,
      Z.options, Z.phase);\r

      \    }\r

      \  } else if (fen.phase == 'queen') {\r

      \    for (const uplayer of fen.plorder) {\r

      \      for (const k in fen.players[uplayer].buildings) {\r

      \        if (k == 'farm') continue;\r

      \        let n = fen.players[uplayer].buildings[k].length;\r

      \        fen.players[uplayer].coins += n;\r

      \        if (n > 0) ari_history_list([`${uplayer} gets ${n} coins
      for ${k} buildings`], 'payout');\r

      \      }\r

      \    }\r

      \    Z.phase = 'jack';\r

      \    [Z.stage, Z.turn] = set_journey_or_stall_stage(fen, Z.options,
      Z.phase);\r

      \  } else {\r

      \    fen.herald = ari_move_herald(fen, uplayer);\r

      \    fen.plorder = jsCopy(fen.heraldorder);\r

      \    ari_add_harvest_cards(fen);\r

      \    Z.phase = 'king';\r

      \    let taxneeded = ari_tax_phase_needed(fen);\r

      \    Z.turn = taxneeded ? fen.turn : [fen.herald];\r

      \    if (taxneeded) Z.stage = 2; else[Z.stage, Z.turn] =
      set_journey_or_stall_stage(fen, Z.options, Z.phase);\r

      \  }\r

      \  return Z.stage;\r

      }\r\n"
    sig: function ari_next_phase(){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  exchange_items_in_fen:
    name: exchange_items_in_fen
    code: "function exchange_items_in_fen(fen, o0, o1) {\r

      \  let p0 = o0.path.split('.'); if (isdef(fen.players[p0[0]]))
      p0.unshift('players');\r

      \  let p1 = o1.path.split('.'); if (isdef(fen.players[p1[0]]))
      p1.unshift('players');\r

      \  let list0 = lookup(fen, p0);\r

      \  let list1 = lookup(fen, p1); \r

      \  if (isDict(list0) && isdef(list0.list)) list0 = list0.list;\r

      \  if (isDict(list1) && isdef(list1.list)) list1 = list1.list;\r

      \  elem_from_to(o0.key, list0, list1);\r

      \  elem_from_to(o1.key, list1, list0);\r

      }\r\n"
    sig: function exchange_items_in_fen(fen, o0, o1){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  find_sequences:
    name: find_sequences
    code: "function find_sequences(blatt, n = 2, rankstr = '23456789TJQKA',
      allow_cycle = false) {\r

      \  let suitlists = get_suitlists_sorted_by_rank(blatt, rankstr,
      true); \r

      \  let seqs = [];\r

      \  for (const lst of get_values(suitlists)) {\r

      \    let len = lst.length;\r

      \    if (len < n) continue;\r

      \    let l = allow_cycle ? lst.concat(lst) : lst;\r

      \    for (let istart = 0; istart < len; istart++) {\r

      \      let seq = [l[istart]];\r

      \      let i = istart;\r

      \      while (i + 1 < l.length && follows_in_rank(l[i], l[i + 1],
      rankstr)) {\r

      \        seq.push(l[i + 1]);\r

      \        i++;\r

      \      }\r

      \      if (seq.length >= n) seqs.push(seq);\r

      \    }\r

      \  }\r

      \  return seqs;\r

      }\r\n"
    sig: function find_sequences(blatt, n = 2, rankstr = '23456789TJQKA',
      allow_cycle = false){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  follows_in_rank:
    name: follows_in_rank
    code: "function follows_in_rank(c1, c2, rankstr) {\r

      \  return get_rank_index(c2, rankstr) - get_rank_index(c1, rankstr)
      == 1;\r

      \  let i1 = rankstr.indexOf(c1[0]);\r

      \  let i2 = rankstr.indexOf(c2[0]);\r

      \  console.log('follows?', c1, i1, c2, i2, i2 - i1)\r

      \  return rankstr.indexOf(c2[0]) - rankstr.indexOf(c1[0]) == 1;\r

      }\r\n"
    sig: function follows_in_rank(c1, c2, rankstr){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  get_rank_index:
    name: get_rank_index
    code: "function get_rank_index(ckey, rankstr = '23456789TJQKA') { return
      rankstr.indexOf(ckey[0]); }\r\n"
    sig: function get_rank_index(ckey, rankstr = '23456789TJQKA'){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  get_suitlists_sorted_by_rank:
    name: get_suitlists_sorted_by_rank
    code: "function get_suitlists_sorted_by_rank(blatt, rankstr = '23456789TJQKA',
      remove_duplicates = false) {\r

      \  let di = {};\r

      \  for (const k of blatt) {\r

      \    let suit = k[1];\r

      \    if (nundef(di[suit])) di[suit] = [];\r

      \    if (remove_duplicates) addIf(di[suit], k); else
      di[suit].push(k);\r

      \  }\r

      \  for (const s in di) {\r

      \    sortByRank(di[s], rankstr);\r

      \  }\r

      \  return di;\r

      }\r\n"
    sig: function get_suitlists_sorted_by_rank(blatt, rankstr = '23456789TJQKA',
      remove_duplicates = false){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  reindex_items:
    name: reindex_items
    code: "function reindex_items(items) { let i = 0; items.map(x => { x.index = i;
      i++; }); }\r\n"
    sig: function reindex_items(items){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  sortByRank:
    name: sortByRank
    code: "function sortByRank(ckeys, rankstr = '23456789TJQKA') {\r

      \  let ranks = toLetters(rankstr);\r

      \  ckeys.sort((a, b) => ranks.indexOf(a[0]) -
      ranks.indexOf(b[0]));\r

      \  return ckeys;\r

      }\r\n"
    sig: function sortByRank(ckeys, rankstr = '23456789TJQKA'){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_get_commission_items:
    name: ui_get_commission_items
    code: "function ui_get_commission_items(uplayer) {\r

      \  let items = [], i = 0;\r

      \  let comm = UI.players[uplayer].commissions;\r

      \  let stall = ui_get_stall_items(uplayer);\r

      \  for (const o of comm.items) {\r

      \    let rank = o.key[0];\r

      \    let similar = firstCond(stall, x => x.key[0] == rank);\r

      \    if (!similar) continue;\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: comm.path, index: i, similar: stall.filter(x => x.key[0] == rank) };
      \r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_commission_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_commission_new_items:
    name: ui_get_commission_new_items
    code: "function ui_get_commission_new_items(uplayer) {\r

      \  let items = [], i = 0;\r

      \  let comm = UI.open_commissions;\r

      \  for (const o of comm.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: comm.path, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  let topdeck = UI.deck_commission.get_topcard();\r

      \  items.push({ o: topdeck, a: topdeck.key, key: topdeck.key,
      friendly: topdeck.short, path: 'deck_commission', index: i });\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_commission_new_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_building_items:
    name: ui_get_building_items
    code: "function ui_get_building_items(uplayer) {\r

      \  let gblist = UI.players[uplayer].buildinglist;\r

      \  let items = [], i = 0;\r

      \  for (const o of gblist) {\r

      \    let name = o.type + ' ' + (o.list[0][0] == 'T' ? '10' :
      o.list[0][0]);\r

      \    o.div = o.container;\r

      \    let item = { o: o, a: name, key: o.list[0], friendly: name,
      path: o.path, index: i, ui: o.container };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_building_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_farms_estates_items:
    name: ui_get_farms_estates_items
    code: "function ui_get_farms_estates_items(uplayer) { return
      ui_get_building_items_of_type(uplayer, ['farm', 'estate']); }\r\n"
    sig: function ui_get_farms_estates_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_estates_chateaus_items:
    name: ui_get_estates_chateaus_items
    code: "function ui_get_estates_chateaus_items(uplayer) { return
      ui_get_building_items_of_type(uplayer, ['estate', 'chateau']); }\r\n"
    sig: function ui_get_estates_chateaus_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_building_items_of_type:
    name: ui_get_building_items_of_type
    code: "function ui_get_building_items_of_type(uplayer, types = ['farm',
      'estate', 'chateau']) {\r

      \  let gblist = UI.players[uplayer].buildinglist.filter(x =>
      types.includes(x.type));\r

      \  let items = [], i = 0;\r

      \  for (const o of gblist) {\r

      \    let name = o.type + ' ' + (o.list[0][0] == 'T' ? '10' :
      o.list[0][0]);\r

      \    o.div = o.container;\r

      \    let item = { o: o, a: name, key: o.list[0], friendly: name,
      path: o.path, index: i, ui: o.container };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_building_items_of_type(uplayer, types = ['farm', 'estate',
      'chateau']){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_buildings:
    name: ui_get_buildings
    code: "function ui_get_buildings(gblist) {\r

      \  let items = [], i = 0;\r

      \  for (const o of gblist) {\r

      \    let name = o.type + ' ' + (o.list[0][0] == 'T' ? '10' :
      o.list[0][0]);\r

      \    o.div = o.container;\r

      \    let item = { o: o, a: name, key: o.list[0], friendly: name,
      path: o.path, index: i, ui: o.container };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_buildings(gblist){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_other_buildings:
    name: ui_get_other_buildings
    code: "function ui_get_other_buildings(uplayer) {\r

      \  let items = [];\r

      \  for (const plname of Z.plorder) {\r

      \    if (plname == uplayer) continue;\r

      \    items =
      items.concat(ui_get_buildings(UI.players[plname].buildinglist));\r

      \  }\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_other_buildings(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_hidden_building_items:
    name: ui_get_hidden_building_items
    code: "function ui_get_hidden_building_items(uibuilding) {\r

      \  let items = [];\r

      \  for (let i = 1; i < uibuilding.items.length; i++) {\r

      \    let o = uibuilding.items[i];\r

      \    o.index = i;\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: uibuilding.path, index: i - 1 };\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_hidden_building_items(uibuilding){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_all_hidden_building_items:
    name: ui_get_all_hidden_building_items
    code: "function ui_get_all_hidden_building_items(uplayer) {\r

      \  let items = [];\r

      \  for (const gb of UI.players[uplayer].buildinglist) {\r

      \    items = items.concat(ui_get_hidden_building_items(gb));\r

      \  }\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_all_hidden_building_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_hand_items:
    name: ui_get_hand_items
    code: "function ui_get_hand_items(uplayer) {\r

      \  let items = [], i = 0;\r

      \  let hand = UI.players[uplayer].hand;\r

      \  for (const o of hand.items) {\r

      \    o.index = i;\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: hand.path, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_hand_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_stall_items:
    name: ui_get_stall_items
    code: "function ui_get_stall_items(uplayer) {\r

      \  let items = [], i = 0;\r

      \  let stall = UI.players[uplayer].stall;\r

      \  for (const o of stall.items) {\r

      \    o.index = i;\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: stall.path, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_stall_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_harvest_items:
    name: ui_get_harvest_items
    code: "function ui_get_harvest_items(uplayer) {\r

      \  let items = []; let i = 0;\r

      \  for (const gb of UI.players[uplayer].buildinglist) {\r

      \    if (isdef(gb.harvest)) {\r

      \      let d = gb.harvest;\r

      \      mStyle(d, { cursor: 'pointer', opacity: 1 });\r

      \      gb.div = d;\r

      \      let name = 'H' + i + ':' + (gb.list[0][0] == 'T' ? '10' :
      gb.list[0][0]);\r

      \      let item = { o: gb, a: name, key: name, friendly: name, path:
      gb.path, index: i };\r

      \      i++;\r

      \      items.push(item);\r

      \    }\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_harvest_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_journey_items:
    name: ui_get_journey_items
    code: "function ui_get_journey_items(plname) {\r

      \  let gblist = UI.players[plname].journeys;\r

      \  let items = [], i = 0;\r

      \  for (const o of gblist) {\r

      \    let name = `${plname}_j${i}`;\r

      \    o.div = o.container;\r

      \    let item = { o: o, a: name, key: o.list[0], friendly: name,
      path: o.path, index: i, ui: o.container };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_journey_items(plname){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_payment_items:
    name: ui_get_payment_items
    code: "function ui_get_payment_items(pay_letter) {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let items = ui_get_hand_and_stall_items(uplayer); \r

      \  let n = items.length;\r

      \  items = items.filter(x => x.key[0] == pay_letter);\r

      \  if (n == 4 && A.command == 'build') items = []; \r

      \  if (n == 1 && A.command == 'upgrade') items = []; \r

      \  if (fen.players[uplayer].coins > 0 && fen.phase[0].toUpperCase()
      == pay_letter) {\r

      \    items.push({ o: null, a: 'coin', key: 'coin', friendly: 'coin',
      path: null });\r

      \  }\r

      \  let i = 0; items.map(x => { x.index = i; i++; }); \r

      \  return items;\r

      }\r\n"
    sig: function ui_get_payment_items(pay_letter){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_open_discard_items:
    name: ui_get_open_discard_items
    code: "function ui_get_open_discard_items() {\r

      \  let items = [], i = 0;\r

      \  for (const o of UI.open_discard.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: `open_discard`, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_open_discard_items(){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_market_items:
    name: ui_get_market_items
    code: "function ui_get_market_items() {\r

      \  let items = [], i = 0;\r

      \  for (const o of UI.market.items) {\r

      \    o.index = i;\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: `market`, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_market_items(){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_commands:
    name: ui_get_commands
    code: "function ui_get_commands(uplayer) {\r

      \  let avail = ari_get_actions(uplayer);\r

      \  let items = [], i = 0;\r

      \  for (const cmd of avail) { \r

      \    let item = { o: null, a: cmd, key: cmd, friendly: cmd, path:
      null, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_commands(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_string_items:
    name: ui_get_string_items
    code: "function ui_get_string_items(commands) {\r

      \  let items = [], i = 0;\r

      \  for (const cmd of commands) { \r

      \    let item = { o: null, a: cmd, key: cmd, friendly: cmd, path:
      null, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_string_items(commands){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_endgame:
    name: ui_get_endgame
    code: "function ui_get_endgame(uplayer) { return ui_get_string_items(['end
      game', 'go on']); }\r\n"
    sig: function ui_get_endgame(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_coin_amounts:
    name: ui_get_coin_amounts
    code: "function ui_get_coin_amounts(uplayer) {\r

      \  let items = [];\r

      \  for (let i = 0; i <= Z.fen.players[uplayer].coins; i++) {\r

      \    let cmd = '' + i;\r

      \    let item = { o: null, a: cmd, key: cmd, friendly: cmd, path:
      null, index: i };\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_coin_amounts(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_trade_items:
    name: ui_get_trade_items
    code: "function ui_get_trade_items(uplayer) {\r

      \  let items = ui_get_market_items(uplayer);\r

      \  items = items.concat(ui_get_stall_items(uplayer));\r

      \  for (const plname of Z.fen.plorder) {\r

      \    if (plname != uplayer) items =
      items.concat(ui_get_stall_items(plname));\r

      \  }\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_trade_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_hand_and_stall_items:
    name: ui_get_hand_and_stall_items
    code: "function ui_get_hand_and_stall_items(uplayer) {\r

      \  let items = ui_get_hand_items(uplayer);\r

      \  items = items.concat(ui_get_stall_items(uplayer));\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_hand_and_stall_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_hand_and_journey_items:
    name: ui_get_hand_and_journey_items
    code: "function ui_get_hand_and_journey_items(uplayer) {\r

      \  let items = ui_get_hand_items(uplayer);\r

      \  let matching = [];\r

      \  for (const plname of Z.plorder) {\r

      \    let jitems = ui_get_journey_items(plname);\r

      \    for (const j of jitems) {\r

      \      for (const card of items) {\r

      \        if (matches_on_either_end(card, j)) { matching.push(j);
      break; }\r

      \      }\r

      \    }\r

      \  }\r

      \  items = items.concat(matching);\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_hand_and_journey_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_build_items:
    name: ui_get_build_items
    code: "function ui_get_build_items(uplayer, except) {\r

      \  let items = ui_get_hand_and_stall_items(uplayer);\r

      \  if (is_card(except)) items = items.filter(x => x.key !=
      except.key);\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_build_items(uplayer, except){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_exchange_items:
    name: ui_get_exchange_items
    code: "function ui_get_exchange_items(uplayer) {\r

      \  let ihand = ui_get_hand_items(uplayer);\r

      \  let istall = ui_get_stall_items(uplayer);\r

      \  let irepair = ui_get_all_hidden_building_items(uplayer);\r

      \  irepair.map(x => face_up(x.o));\r

      \  let items = ihand.concat(istall).concat(irepair);\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_exchange_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_harvest:
    name: post_harvest
    code: "function post_harvest() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let obuilding = lookup(fen, item.path.split('.'));\r

      \  fen.players[uplayer].hand.push(obuilding.h);\r

      \  obuilding.h = null;\r

      \  ari_history_list([`${uplayer} harvests`], 'harvest');\r

      \  ari_next_action();\r

      }\r\n"
    sig: function post_harvest(){}
    region: harvest (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  find_common_ancestor:
    name: find_common_ancestor
    code: "function find_common_ancestor(d1, d2) { return dTable; }\r\n"
    sig: function find_common_ancestor(d1, d2){}
    region: hack (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  is_stall_selection_complete:
    name: is_stall_selection_complete
    code: "function is_stall_selection_complete() { return
      Z.fen.stallSelected.length == Z.fen.plorder.length; }\r\n"
    sig: function is_stall_selection_complete(){}
    region: market (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_stall_selected:
    name: post_stall_selected
    code: "function post_stall_selected() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let selectedKeys = A.selected.map(i => A.items[i].key);\r

      \  for (const ckey of selectedKeys) {\r

      \    elem_from_to(ckey, fen.players[uplayer].hand,
      fen.players[uplayer].stall);\r

      \  }\r

      \  ensure_stallSelected(fen);\r

      \  fen.stallSelected.push(uplayer);\r

      \  ari_history_list([`${uplayer} puts up a stall for
      ${selectedKeys.length} action${plural(selectedKeys.length)}`],
      'market');\r

      \  if (is_stall_selection_complete()) {\r

      \    delete fen.stallSelected;\r

      \    fen.actionsCompleted = [];\r

      \    if (check_if_church()) ari_start_church_stage(); else
      ari_start_action_stage();\r

      \  } else {\r

      \    Z.turn = [get_next_player(Z, uplayer)];\r

      \    take_turn_fen();\r

      \  }\r

      }\r\n"
    sig: function post_stall_selected(){}
    region: market (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  check_correct_journey:
    name: check_correct_journey
    code: "function check_correct_journey(A, fen, uplayer) {\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  if (items.length < 2) {\r

      \    select_error('please select at least 2 items!'); return [null,
      null, null];\r

      \  }\r

      \  let carditems = items.filter(x => is_card(x));\r

      \  if (isEmpty(carditems)) {\r

      \    select_error('please select at least 1 card!'); return [null,
      null, null];\r

      \  } else if (items.length - carditems.length > 1) {\r

      \    select_error('please select no more than 1 journey!'); return
      [null, null, null];\r

      \  }\r

      \  let journeyitem = firstCond(items, x => !is_card(x));\r

      \  let cards = journeyitem ? jsCopy(journeyitem.o.list) : [];\r

      \  cards = cards.concat(carditems.map(x => x.o.key));\r

      \  let jlegal = is_journey(cards);\r

      \  if (!jlegal || jlegal.length != cards.length) {\r

      \    select_error('this is not a legal journey!!'); return [null,
      null, null];\r

      \  }\r

      \  return [carditems, journeyitem, jlegal];\r

      }\r\n"
    sig: function check_correct_journey(A, fen, uplayer){}
    region: journey (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  find_players_with_potential_journey:
    name: find_players_with_potential_journey
    code: "function find_players_with_potential_journey(fen) {\r

      \  let res = [];\r

      \  for (const uplayer of fen.plorder) {\r

      \    if (isdef(fen.passed) && fen.passed.includes(uplayer))
      continue;\r

      \    let j = find_journeys(fen, uplayer);\r

      \    if (!isEmpty(j)) res.push(uplayer);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function find_players_with_potential_journey(fen){}
    region: journey (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  find_journeys:
    name: find_journeys
    code: "function find_journeys(fen, uplayer) {\r

      \  let h = fen.players[uplayer].hand;\r

      \  let seqs = find_sequences(h, 2, 'A23456789TJQK');\r

      \  if (!isEmpty(seqs)) return seqs;\r

      \  let existing_journeys = aggregate_player(fen, 'journeys');\r

      \  for (const j of existing_journeys) {\r

      \    let h1 = j.concat(h);\r

      \    let seqs1 = find_sequences(h1, j.length + 1,
      'A23456789TJQK');\r

      \    if (!isEmpty(seqs1)) return seqs1;\r

      \  }\r

      \  return seqs;\r

      }\r\n"
    sig: function find_journeys(fen, uplayer){}
    region: journey (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  is_journey:
    name: is_journey
    code: "function is_journey(cards) {\r

      \  let jlist = find_sequences(cards, cards.length,
      'A23456789TJQK');\r

      \  let j = firstCond(jlist, x => x.length == cards.length);\r

      \  return j;\r

      }\r\n"
    sig: function is_journey(cards){}
    region: journey (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  matches_on_either_end:
    name: matches_on_either_end
    code: "function matches_on_either_end(card, j) {\r

      \  let key = card.key;\r

      \  let jfirst = arrFirst(j.o.list);\r

      \  let jlast = arrLast(j.o.list);\r

      \  rankstr = 'A23456789TJQK';\r

      \  let [s, s1, s2] = [key[1], jfirst[1], jlast[1]];\r

      \  let anfang = s == s1 && follows_in_rank(key, jfirst, rankstr);\r

      \  let ende = s == s2 && follows_in_rank(jlast, key, rankstr);\r

      \  return anfang || ende; \r

      }\r\n"
    sig: function matches_on_either_end(card, j){}
    region: journey (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_luxury_or_journey_cards:
    name: post_luxury_or_journey_cards
    code: "function post_luxury_or_journey_cards() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  let luxury_selected = A.selected[0] == 0;\r

      \  console.log('carditems', A.carditems);\r

      \  let n = A.carditems.length;\r

      \  if (luxury_selected) {\r

      \    let cardstoreplace = A.carditems.map(x => x.key); \r

      \    arrReplace(fen.players[uplayer].hand, cardstoreplace,
      deck_deal(fen.deck_luxury, n));\r

      \  } else {\r

      \    let len = A.jlegal.length;\r

      \    let handcards = firstCond(A.carditems, x => A.jlegal[0] ==
      x.key) ? arrFromIndex(A.jlegal, len - n) : A.jlegal.slice(0, n);\r

      \    console.log('handcards', handcards);\r

      \    arrExtend(fen.players[uplayer].hand, handcards);\r

      \    A.jlegal = arrMinus(A.jlegal, handcards);\r

      \    let cardstoremove = A.carditems.map(x => x.key);\r

      \    arrRemove(fen.players[uplayer].hand, cardstoremove);\r

      \  }\r

      \  let path = A.journeyitem.path;\r

      \  let parts = path.split('.');\r

      \  let owner = parts[1];\r

      \  console.log('path', path, 'parts', parts, 'owner', owner)\r

      \  fen.players[owner].journeys.splice(Number(parts[3]), 1,
      A.jlegal);\r

      \  [Z.stage, Z.turn] = set_journey_or_stall_stage(fen, Z.options,
      Z.phase); \r

      \  ari_history_list([`${uplayer} added to existing journey and takes
      ${luxury_selected ? 'luxury cards' : 'journey cards'}`], 'journey');\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function post_luxury_or_journey_cards(){}
    region: journey (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_new_journey:
    name: post_new_journey
    code: "function post_new_journey() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  fen.players[uplayer].journeys.push(A.jlegal);\r

      \  arrReplace(fen.players[uplayer].hand, A.jlegal,
      deck_deal(fen.deck_luxury, A.jlegal.length));\r

      \  ari_history_list([`${uplayer} added journey`], 'journey');\r

      \  [Z.stage, Z.turn] = set_journey_or_stall_stage(fen, Z.options,
      Z.phase);\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function post_new_journey(){}
    region: journey (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_journey:
    name: process_journey
    code: "function process_journey() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  if (isEmpty(A.selected)) {\r

      \    if (nundef(fen.passed)) fen.passed = [];
      fen.passed.push(uplayer);\r

      \    [Z.stage, Z.turn] = set_journey_or_stall_stage(fen, Z.options,
      Z.phase); \r

      \    take_turn_fen();\r

      \    return;\r

      \  }\r

      \  let sel = A.selected.map(x => A.items[x].key);\r

      \  let [carditems, journeyitem, jlegal] = check_correct_journey(A,
      fen, uplayer);\r

      \  if (!carditems) return;\r

      \  delete fen.passed; \r

      \  [A.carditems, A.journeyitem, A.jlegal] = [carditems, journeyitem,
      jlegal];\r

      \  Z.stage = A.journeyitem ? 30 : 31;\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function process_journey(){}
    region: journey (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  payment_complete:
    name: payment_complete
    code: "function payment_complete() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  A.payment = A.items[A.selected[0]];\r

      \  let nextstage = Z.stage = ARI.stage[A.command];\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function payment_complete(){}
    region: payment (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_payment:
    name: process_payment
    code: "function process_payment() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let item = A.payment;\r

      \  is_coin_pay = nundef(item.o);\r

      \  if (is_coin_pay) a2_pay_with_coin(uplayer); else
      a2_pay_with_card(item);\r

      \  ari_history_list(get_pay_history(is_coin_pay ? 'coin' :
      item.o.key, uplayer), 'payment');\r

      \  A.payment_complete = true;\r

      \  return is_coin_pay;\r

      }\r\n"
    sig: function process_payment(){}
    region: payment (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  get_pay_history:
    name: get_pay_history
    code: "function get_pay_history(payment, uplayer) { return [`${uplayer} pays
      with ${payment}`]; }\r\n"
    sig: function get_pay_history(payment, uplayer){}
    region: payment (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_pass:
    name: post_pass
    code: "function post_pass() {\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  let n = fen.total_pl_actions - fen.num_actions;\r

      \  ari_history_list([`${uplayer} passes after ${n}
      action${plural(n)}`], 'pass');\r

      \  fen.num_actions = 0;\r

      \  ari_next_action();\r

      }\r\n"
    sig: function post_pass(){}
    region: pass (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_pickup:
    name: post_pickup
    code: "function post_pickup() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  elem_from_to(item.key, fen.players[uplayer].stall,
      fen.players[uplayer].hand);\r

      \  ari_history_list([`${uplayer} picks up ${item.key}`],
      'pickup');\r

      \  ari_next_action();\r

      }\r\n"
    sig: function post_pickup(){}
    region: pickup (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  select_add_items:
    name: select_add_items
    code: "function select_add_items(items, callback = null, instruction = null, min
      = 0, max = 100, prevent_autoselect = false) {\r

      \  let A = Z.A;\r

      \  select_clear_previous_level();\r

      \  A.level++; A.items = items; A.callback = callback; A.selected =
      []; A.minselected = min; A.maxselected = max;\r

      \  console.log('A.level', A.level)\r

      \  show_stage();\r

      \  let dInstruction = mBy('dSelections0');\r

      \  mClass(dInstruction, 'instruction');\r

      \  mCenterCenterFlex(dInstruction);\r

      \  dInstruction.innerHTML = (Z.role == 'active' ?
      `${get_waiting_html()}<span
      style=\"color:red;font-weight:bold;max-height:25px\">You</span>` :
      `${Z.uplayer}`) + \"&nbsp;\" + instruction;\r

      \  if (too_many_string_items(A)) { mLinebreak(dInstruction, 4); }\r

      \  let has_submit_items = false;\r

      \  let buttonstyle = { maleft: 10, vmargin: 2, rounding: 6, padding:
      '4px 12px 5px 12px', border: '0px solid transparent', outline: 'none' }\r

      \  for (const item of A.items) {\r

      \    let type = item.itemtype = is_card(item) ? 'card' :
      isdef(item.o) ? 'container' : 'string';\r

      \    if (isdef(item.submit_on_click)) { has_submit_items = true; }\r

      \    let id = item.id = lookup(item, ['o', 'id']) ? item.o.id :
      getUID(); A.di[id] = item;\r

      \    if (type == 'string') {\r

      \      let handler = ev => select_last(item,
      isdef(item.submit_on_click) ? callback : select_toggle, ev);\r

      \      item.div = mButton(item.a, handler, dInstruction,
      buttonstyle, null, id);\r

      \    } else {\r

      \      let ui = item.div = iDiv(item.o);\r

      \      ui.onclick = ev => select_last(item, select_toggle, ev);\r

      \      ui.id = id;\r

      \    }\r

      \  }\r

      \  let show_submit_button = !has_submit_items && (A.minselected !=
      A.maxselected || !A.autosubmit);\r

      \  if (show_submit_button) { mButton('submit', callback,
      dInstruction, buttonstyle, 'selectable_button', 'bSubmit'); }\r

      \  let show_restart_button = A.level > 1;\r

      \  if (show_restart_button) { mButton('restart', onclick_reload,
      dInstruction, buttonstyle, 'selectable_button', 'bReload'); }\r

      \  let dParent = window[`dActions${A.level}`];\r

      \  for (const item of A.items) { ari_make_selectable(item, dParent,
      dInstruction); }\r

      \  assertion(A.items.length >= min, 'less options than min
      selection!!!!', A.items.length, 'min is', min);\r

      \  if (A.items.length == min && !is_ai_player() &&
      !prevent_autoselect) {\r

      \    for (const item of A.items) { A.selected.push(item.index);
      ari_make_selected(item); }\r

      \    if (A.autosubmit) {\r

      \      loader_on();\r

      \      setTimeout(() => { if (callback) callback(); loader_off(); },
      800);\r

      \    }\r

      \  } else if (is_ai_player()) {\r

      \    ai_move();\r

      \  } else if (TESTING && isdef(DA.test)) {\r

      \    if (DA.test.iter >= DA.auto_moves.length) {\r

      \      if (isdef(DA.test.end)) DA.test.end();\r

      \      activate_ui();\r

      \      return;\r

      \    }\r

      \    let selection = DA.auto_moves[DA.test.iter++];\r

      \    if (selection) {\r

      \      deactivate_ui();\r

      \      let numbers = [];\r

      \      for (const el of selection) {\r

      \        if (el == 'last') {\r

      \          numbers.push(A.items.length - 1);\r

      \        } else if (el == 'random') {\r

      \          numbers.push(rNumber(0, A.items.length - 1));\r

      \        } else if (isString(el)) {\r

      \          let commands = A.items.map(x => x.key);\r

      \          let idx = commands.indexOf(el);\r

      \          numbers.push(idx);\r

      \        } else numbers.push(el);\r

      \      }\r

      \      selection = numbers;\r

      \      A.selected = selection;\r

      \      if (selection.length == 1) A.command =
      A.items[A.selected[0]].key;\r

      \      A.last_selected = A.items[A.selected[0]];\r

      \      select_highlight();\r

      \      setTimeout(() => {\r

      \        if (A.callback) A.callback();\r

      \      }, 1000);\r

      \    } else { activate_ui(); }\r

      \  } else { activate_ui(); }\r

      }\r\n"
    sig: function select_add_items(items, callback = null, instruction = null, min =
      0, max = 100, prevent_autoselect = false){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  select_finalize:
    name: select_finalize
    code: "function select_finalize(ev) {\r

      \  if (!uiActivated) { console.log('ui is deactivated!!!'); return;
      }\r

      \  let A = z.A;\r

      \  let id = evToId(ev);\r

      \  let a = A.di[id];\r

      \  A.selected = [a.index];\r

      \  A.selected_key = A.items[a.index].key;\r

      \  mStyle(mBy(a.idButton), { bg: 'yellow' });\r

      \  if (isdef(a.idCard)) mClass(mBy(a.idCard), 'card_selected');\r

      \  if (A.callback) A.callback();\r

      }\r\n"
    sig: function select_finalize(ev){}
    region: select (arihelpers.js)
    filename: arihelpers.js
    type: func
    fname: arihelpers.js
    path: C:\xampp\htdocs\aroot\simple\arihelpers.js
    datetime: 2022-04-26-09-27
    timestamp: 1650990473939.2678
    size: 70438
  select_clear_previous_level:
    name: select_clear_previous_level
    code: "function select_clear_previous_level() {\r

      \  let A = Z.A;\r

      \  if (!isEmpty(A.items)) {\r

      \    console.assert(A.level >= 1, 'have items but level is ' +
      A.level);\r

      \    A.ll.push({ items: A.items, selected: A.selected });\r

      \    let dsel = mBy(`dSelections1`);\r

      \    mStyle(dsel, { display: 'flex', 'align-items': 'center',
      padding: 10, box: true, gap: 10 });\r

      \    for (const item of A.items) {\r

      \      ari_make_unselectable(item);\r

      \      if (A.keep_selection) continue;\r

      \      ari_make_unselected(item);\r

      \      if (!A.selected.includes(item.index)) continue;\r

      \      if (item.itemtype == 'card') {\r

      \        let d = iDiv(item);\r

      \        let card = item.o;\r

      \        let mini = mDiv(dsel, { bg: 'yellow', fg: 'black',
      hpadding: 2, border: '1px solid black' }, null, card.friendly);\r

      \      } else if (item.itemtype == 'container') {\r

      \        let list = item.o.list;\r

      \        let cards = list.map(x => ari_get_card(x, 30, 30 * .7));\r

      \        let cont2 = ui_make_hand_container(cards, dsel, { bg:
      'transparent' });\r

      \        ui_add_cards_to_hand_container(cont2, cards, list);\r

      \      } else if (item.itemtype == 'string') {\r

      \        let db = mDiv(dsel, { bg: 'yellow', fg: 'black', border:
      'black', hpadding: 4 }, item.id, item.a);\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function select_clear_previous_level(){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  select_highlight:
    name: select_highlight
    code: "function select_highlight() { let A = Z.A; for (const i of A.selected) {
      let a = A.items[i]; ari_make_selected(a, true); } }\r\n"
    sig: function select_highlight(){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  select_toggle:
    name: select_toggle
    code: "function select_toggle() {\r

      \  if (!uiActivated) { console.log('ui is deactivated!!!'); return;
      }\r

      \  let A = Z.A;\r

      \  let item = A.last_selected;\r

      \  if (A.selected.includes(item.index)) {\r

      \    removeInPlace(A.selected, item.index);\r

      \    ari_make_unselected(item);\r

      \  } else {\r

      \    if (A.maxselected == 1 && !isEmpty(A.selected)) {
      ari_make_unselected(A.items[A.selected[0]]); A.selected = []; }\r

      \    A.selected.push(item.index);\r

      \    ari_make_selected(item);\r

      \    if (!DA.ai_is_moving && A.selected.length >= A.maxselected &&
      A.autosubmit) {\r

      \      setTimeout(() => A.callback(), 100);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function select_toggle(){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  select_goto_post:
    name: select_goto_post
    code: "function select_goto_post() {\r

      \  if (!uiActivated) { console.log('ui is deactivated!!!'); return;
      }\r

      \  ari_post_action();\r

      }\r\n"
    sig: function select_goto_post(){}
    region: select (arihelpers.js)
    filename: arihelpers.js
    type: func
    fname: arihelpers.js
    path: C:\xampp\htdocs\aroot\simple\arihelpers.js
    datetime: 2022-04-26-09-27
    timestamp: 1650990473939.2678
    size: 70438
  select_goto_pre:
    name: select_goto_pre
    code: "function select_goto_pre() {\r

      \  if (!uiActivated) { console.log('ui is deactivated!!!'); return;
      }\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function select_goto_pre(){}
    region: select (arihelpers.js)
    filename: arihelpers.js
    type: func
    fname: arihelpers.js
    path: C:\xampp\htdocs\aroot\simple\arihelpers.js
    datetime: 2022-04-26-09-27
    timestamp: 1650990473939.2678
    size: 70438
  post_sell:
    name: post_sell
    code: "function post_sell() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  if (A.selected.length != 2) {\r

      \    select_error('select exactly 2 cards to sell!');\r

      \    return;\r

      \  }\r

      \  for (const i of A.selected) {\r

      \    let c = A.items[i].key;\r

      \    elem_from_to(c, fen.players[uplayer].stall,
      fen.deck_discard);\r

      \  }\r

      \  ari_reorg_discard();\r

      \  fen.players[uplayer].coins += 1;\r

      \  let [i1, i2] = A.selected.map(x => A.items[x].key)\r

      \  ari_history_list([`${uplayer} sells ${i1} and ${i2}`], 'sell');\r

      \  ari_next_action(fen, uplayer);\r

      }\r\n"
    sig: function post_sell(){}
    region: sell (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  show_stage:
    name: show_stage
    code: "function show_stage() {\r

      \  if (isdef(Z.fen.progress)) {\r

      \    let d = mBy('dTitleLeft');\r

      \    let former = mBy('dProgress');\r

      \    if (isdef(former)) former.remove();\r

      \    let dprogress = mDiv(d, {}, 'dProgress',
      `<div>${Z.fen.progress}</div>`);\r

      \  }\r

      }\r\n"
    sig: function show_stage(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  post_tax:
    name: post_tax
    code: "function post_tax() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  let n = fen.pl_tax[uplayer];\r

      \  if (items.length != n) {\r

      \    select_error(`please select exactly ${n} cards`);\r

      \    return;\r

      \  }\r

      \  for (const item of items) {\r

      \    elem_from_to_top(item.key, fen.players[uplayer].hand,
      fen.deck_discard);\r

      \  }\r

      \  ari_reorg_discard();\r

      \  ari_history_list([`${uplayer} pays tax: ${fen.pl_tax[uplayer]}`],
      'tax');\r

      \  fen.pl_tax[uplayer] = 0;\r

      \  let iturn = fen.plorder.indexOf(uplayer);\r

      \  let plnext = ari_get_tax_payer(fen, fen.pl_tax, iturn + 1);\r

      \  if (plnext == null) {\r

      \    [Z.stage, Z.turn] = set_journey_or_stall_stage(fen, Z.options,
      'king');\r

      \    delete fen.pl_tax;\r

      \  } else {\r

      \    Z.turn = [plnext];\r

      \  }\r

      \  take_turn_fen(fen, uplayer);\r

      }\r\n"
    sig: function post_tax(){}
    region: tax (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  get_tax_history:
    name: get_tax_history
    code: "function get_tax_history(tax) {\r

      \  let hlines = [];\r

      \  console.log('tax', tax);\r

      \  for (const uplayer in tax) {\r

      \    hlines.push(`player ${uplayer} paid ${tax[uplayer]} in tax`);\r

      \  }\r

      \  return hlines;\r

      }\r\n"
    sig: function get_tax_history(tax){}
    region: tax (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ai_pick_legal_trade:
    name: ai_pick_legal_trade
    code: "function ai_pick_legal_trade() {\r

      \  let [A, fen, uplayer, items] = [Z.A, Z.fen, Z.uplayer,
      Z.A.items];\r

      \  let stall = fen.players[uplayer].stall;\r

      \  let firstPick = rChoose(items, 1, x => x.path.includes(uplayer));
      \r

      \  let secondPick = rChoose(items, 1, x =>
      !x.path.includes(uplayer));\r

      \  return [firstPick, secondPick];\r

      }\r\n"
    sig: function ai_pick_legal_trade(){}
    region: trade (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_trade:
    name: post_trade
    code: "function post_trade() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  if (A.selected.length != 2) {\r

      \    select_error('please, select exactly 2 cards!');\r

      \    return;\r

      \  }\r

      \  let i0 = A.items[A.selected[0]];\r

      \  let i1 = A.items[A.selected[1]];\r

      \  let num_own_stall = [i0, i1].filter(x =>
      x.path.includes(uplayer)).length;\r

      \  if (i0.path == i1.path) {\r

      \    select_error('you cannot trade cards from the same group');\r

      \    return;\r

      \  } else if (num_own_stall != 1) {\r

      \    select_error('you have to pick one card of your stall and one
      other card');\r

      \    return;\r

      \  } else {\r

      \    let list0 = lookup(fen, i0.path.split('.'));\r

      \    let list1 = lookup(fen, i1.path.split('.'));\r

      \    exchange_by_index(list0, i0.o.index, list1, i1.o.index);\r

      \    ari_history_list(get_trade_history(uplayer, i0, i1),
      'trade');\r

      \    animate_card_exchange(i0, i1, ari_next_action);\r

      \  }\r

      }\r\n"
    sig: function post_trade(){}
    region: trade (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  get_trade_history:
    name: get_trade_history
    code: "function get_trade_history(uplayer, i0, i1) {\r

      \  if (i1.path.includes(uplayer)) { let h = i0; i0 = i1; i1 = h; }\r

      \  return [`${uplayer} trades ${i0.key} (from own stall) for
      ${i1.key} (from ${i1.path == 'market' ? 'market' : stringBetween(i1.path,
      '.', '.')})`];\r

      }\r\n"
    sig: function get_trade_history(uplayer, i0, i1){}
    region: trade (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_visit:
    name: process_visit
    code: "function process_visit() {\r

      \  alert('NOT IMPLEMENTED!');\r

      \  process_payment();\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let obuilding = lookup(fen, item.path.split('.'));\r

      \  let parts = item.path.split('.');\r

      \  let owner = parts[1];\r

      \  if (isdef(obuilding.schweine)) {\r

      \    Z.stage = 46;\r

      \    A.building = item;\r

      \    A.obuilding = obuilding;\r

      \    A.buildingowner = owner;\r

      \    ari_pre_action();\r

      \    return;\r

      \  } else {\r

      \    let cards = item.o.items;\r

      \    let key = cards[0].rank;\r

      \    for (const c of cards) {\r

      \      if (c.rank != key) { schweine = true; schweine = c.key;
      face_up(c); break; }\r

      \    }\r

      \    if (schweine) {\r

      \      if (fen.players[owner].coins > 0) {\r

      \        fen.players[owner].coins--;\r

      \        fen.players[uplayer].coins++;\r

      \      }\r

      \      let b = lookup(fen, item.path.split('.'));\r

      \      b.schweine = schweine;\r

      \    }\r

      \    ari_history_list([\r

      \      `${uplayer} visited ${ari_get_building_type(obuilding)} of
      ${owner} resulting in ${schweine ? 'schweine' : 'ok'}
      ${ari_get_building_type(obuilding)}`,\r

      \    ], 'visit');\r

      \  }\r

      }\r\n"
    sig: function process_visit(){}
    region: visit (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_visit:
    name: post_visit
    code: "function post_visit() {\r

      \  let [fen, A, uplayer, building, obuilding, owner] = [Z.fen, Z.A,
      Z.uplayer, Z.A.building, Z.A.obuilding, Z.A.buildingowner];\r

      \  let buildingtype = Z.A.building.o.type;\r

      \  let res = A.selected[0] == 0; \r

      \  if (!res) {\r

      \    if (fen.players[owner].coins > 0) {\r

      \      fen.players[owner].coins -= 1;\r

      \      fen.players[uplayer].coins += 1;\r

      \    }\r

      \  } else {\r

      \    let list = obuilding.list;\r

      \    let correct_key = list[0];\r

      \    let rank = correct_key[0];\r

      \    while (list.length > 0) {\r

      \      let ckey = list[0];\r

      \      if (ckey[0] != rank) {\r

      \        elem_from_to_top(ckey, list, fen.deck_discard);\r

      \      } else {\r

      \        elem_from_to(ckey, list, fen.players[owner].hand);\r

      \      }\r

      \    }\r

      \    if (isdef(obuilding.h)) {\r

      \      fen.deck_discard.unshift(obuilding.h);\r

      \    }\r

      \    ari_reorg_discard(fen);\r

      \    let blist = lookup(fen, stringBeforeLast(building.path,
      '.').split('.')); \r

      \    removeInPlace(blist, obuilding);\r

      \  }\r

      \  ari_history_list([`${uplayer} visited ${buildingtype} of ${owner}
      resulting in ${res ? 'destruction' : 'payoff'}`,], 'visit');\r

      \  ari_next_action(fen, uplayer);\r

      }\r\n"
    sig: function post_visit(){}
    region: visit (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_upgrade:
    name: process_upgrade
    code: "function process_upgrade() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let n = A.selected.length;\r

      \  if (n > 2 || n == 2 && !has_farm(uplayer)) {\r

      \    select_error('too many cards selected!');\r

      \    return;\r

      \  } else if (n == 0) {\r

      \    select_error('please select hand or stall card(s) to
      upgrade!');\r

      \    return;\r

      \  }\r

      \  A.upgrade_cards = A.selected.map(x => A.items[x]);\r

      \  Z.stage = fen.stage = 102;\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function process_upgrade(){}
    region: upgrade (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_upgrade:
    name: post_upgrade
    code: "function post_upgrade() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  A.building = A.items[A.selected[0]];\r

      \  let gb = A.building;\r

      \  let b = lookup(fen, gb.path.split('.'));\r

      \  let n = A.upgrade_cards.length;\r

      \  let type0 = gb.o.type;\r

      \  let len = gb.o.list.length + n;\r

      \  let type1 = len == 5 ? 'estate' : 'chateau';\r

      \  let target = lookup(fen, gb.path.split('.'));\r

      \  for (const o of A.upgrade_cards) {\r

      \    let source = lookup(fen, o.path.split('.'));\r

      \    elem_from_to(o.key, source, target.list);\r

      \  }\r

      \  let bres = target; \r

      \  bres.h = null;\r

      \  removeInPlace(fen.players[uplayer].buildings[type0], bres);\r

      \  fen.players[uplayer].buildings[type1].push(bres);\r

      \  ari_history_list([`${uplayer} upgrades a ${type0}`],
      'upgrade');\r

      \  console.log('hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh')\r

      \  process_payment();\r

      \  setTimeout(ari_next_action, 1000); \r

      }\r\n"
    sig: function post_upgrade(){}
    region: upgrade (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  set_journey_or_stall_stage:
    name: set_journey_or_stall_stage
    code: "function set_journey_or_stall_stage(fen, options, phase) {\r

      \  let pljourney = exp_journeys(options) ?
      find_players_with_potential_journey(fen) : [];\r

      \  let stage, turn;\r

      \  if (isEmpty(pljourney)) { delete fen.passed; turn =
      [fen.plorder[0]]; ari_ensure_deck(fen, phase == 'jack' ? 3 : 2); stage =
      3; }\r

      \  else { turn = [pljourney[0]]; stage = 1; }\r

      \  return [stage, turn];\r

      }\r\n"
    sig: function set_journey_or_stall_stage(fen, options, phase){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  aristo:
    name: aristo
    code: "function aristo() {\r

      \  const rankstr = 'A23456789TJQK*';\r

      \  function setup(players, options) {\r

      \    let fen = { players: {}, plorder: jsCopy(players), history: []
      };\r

      \    let n = players.length;\r

      \    let num_decks = fen.num_decks = 2 + (n >= 8 ? 2 : n >= 6 ? 1 :
      0); \r

      \    let deck = fen.deck = create_fen_deck('n', num_decks);\r

      \    shuffle(deck);\r

      \    let deck_commission = fen.deck_commission =
      create_fen_deck('c'); shuffle(deck_commission);\r

      \    let deck_luxury = fen.deck_luxury = create_fen_deck('l');
      shuffle(deck_luxury);\r

      \    let deck_rumors = fen.deck_rumors = exp_rumors(options) ?
      create_fen_deck('r') : []; shuffle(deck_rumors);\r

      \    shuffle(fen.plorder);\r

      \    fen.market = [];\r

      \    fen.deck_discard = [];\r

      \    fen.open_discard = [];\r

      \    fen.commissioned = []; \r

      \    fen.open_commissions = exp_commissions(options) ?
      deck_deal(deck_commission, 3) : [];\r

      \    fen.church = exp_church(options) ? deck_deal(deck,
      players.length) : [];\r

      \    for (const plname of players) {\r

      \      let pl = fen.players[plname] = {\r

      \        hand: deck_deal(deck, 7),\r

      \        commissions: exp_commissions(options) ?
      deck_deal(deck_commission, 4) : [],\r

      \        rumors: exp_rumors(options) ? deck_deal(deck_rumors,
      players.length - 1) : [],\r

      \        journeys: [], \r

      \        buildings: { farm: [], estate: [], chateau: [] },\r

      \        stall: [],\r

      \        stall_value: 0,\r

      \        coins: 3,\r

      \        vps: 0,\r

      \        score: 0,\r

      \        name: plname,\r

      \        color: get_user_color(plname),\r

      \      };\r

      \    }\r

      \    fen.phase = 'king'; \r

      \    fen.num_actions = 0;\r

      \    fen.herald = fen.plorder[0];\r

      \    fen.heraldorder = jsCopy(fen.plorder);\r

      \    if (exp_commissions(options)) {\r

      \      ari_history_list([`commission trading starts`],
      'commissions', fen);\r

      \      [fen.stage, fen.turn] = [23, options.mode == 'hotseat' ?
      [fen.plorder[0]] : fen.plorder]; fen.comm_setup_num = 3; fen.keeppolling =
      true;\r

      \    } else if (exp_rumors(options) && fen.plorder.length > 2) {\r

      \      ari_history_list([`gossiping starts`], 'rumors', fen);\r

      \      [fen.stage, fen.turn] = [24, options.mode == 'hotseat' ?
      [fen.plorder[0]] : fen.plorder]; \r

      \    } else[fen.stage, fen.turn] = set_journey_or_stall_stage(fen,
      options, fen.phase);\r

      \    return fen;\r

      \  }\r

      \  function activate_ui() { ari_activate_ui(); }\r

      \  function check_gameover(z) { return isdef(z.fen.winners) ?
      z.fen.winners : false; }\r

      \  function present(dParent) { ari_present(dParent); }\r

      \  function stats(dParent) { ari_stats(dParent); }\r

      \  function state_info(dParent) { ari_state(dParent); }\r

      \  function get_selection_color(item) {\r

      \    if (Z.stage == 41 && Z.A.selected.length == 1) return 'blue';
      return 'red';\r

      \  }\r

      \  return { get_selection_color, rankstr, setup, activate_ui,
      check_gameover, present, state_info, stats };\r

      }\r\n"
    sig: function aristo(){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  bluff:
    name: bluff
    code: "function bluff() {\r

      \  const rankstr = '3456789TJQKA2';  \r

      \  function setup(players, options) {\r

      \    let fen = { players: {}, plorder: jsCopy(players), history: {},
      stage: 'move', phase: '' };\r

      \    let num_cards_needed = players.length * options.max_handsize;\r

      \    let num_decks_needed = fen.num_decks =
      Math.ceil(num_cards_needed / 52);\r

      \    let deck = fen.deck = create_fen_deck('n', num_decks_needed);\r

      \    shuffle(deck);\r

      \    shuffle(fen.plorder);\r

      \    fen.turn = [fen.plorder[0]];\r

      \    for (const plname of fen.plorder) {\r

      \      let handsize = options.min_handsize;\r

      \      fen.players[plname] = {\r

      \        hand: deck_deal(deck, handsize),\r

      \        handsize: handsize,\r

      \        name: plname,\r

      \        color: get_user_color(plname),\r

      \      };\r

      \    }\r

      \    fen.stage = 0;\r

      \    return fen;\r

      \  }\r

      \  function clear_ack() { if (Z.stage == 1) {
      bluff_change_to_turn_round(); take_turn_fen(); } }\r

      \  function check_gameover(Z) { let pls = get_keys(Z.fen.players);
      if (pls.length < 2) Z.fen.winners = pls; return valf(Z.fen.winners,
      false); }\r

      \  function activate_ui() { bluff_activate_new(); }\r

      \  function present(dParent) { bluff_present(dParent); }\r

      \  function stats(dParent) { bluff_stats(dParent); }\r

      \  function state_info(dParent) { bluff_state(dParent); }\r

      \  return { rankstr, setup, activate_ui, check_gameover, clear_ack,
      present, state_info, stats };\r

      }\r\n"
    sig: function bluff(){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  spotit:
    name: spotit
    code: "function spotit() {\r

      \  function setup(players, options) {\r

      \    let fen = { players: {}, plorder: jsCopy(players), turn:
      [players[0]], stage: 'init', phase: '' };\r

      \    for (const plname of players) {\r

      \      fen.players[plname] = {\r

      \        score: 0, name: plname, color: get_user_color(plname),\r

      \      };\r

      \    }\r

      \    fen.items = spotit_item_fen(options);\r

      \    if (nundef(options.mode)) options.mode = 'multi';\r

      \    return fen;\r

      \  }\r

      \  function check_gameover() {\r

      \    for (const uname of Z.plorder) {\r

      \      let cond = get_player_score(uname) >=
      Z.options.winning_score;\r

      \      if (cond) { Z.fen.winners = [uname]; return Z.fen.winners;
      }\r

      \    }\r

      \    return false;\r

      \  }\r

      \  function state_info(dParent) { spotit_state(dParent); }\r

      \  function present(dParent) { spotit_present(dParent); }\r

      \  function stats(dParent) { spotit_stats(dParent); }\r

      \  function activate_ui() { spotit_activate(); }\r

      \  return { setup, activate_ui, check_gameover, present, state_info,
      stats };\r

      }\r\n"
    sig: function spotit(){}
    region: funcs (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  onclick_cancelmenu:
    name: onclick_cancelmenu
    code: "function onclick_cancelmenu() { hide('dMenu'); }\r\n"
    sig: function onclick_cancelmenu(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_game_in_gametable:
    name: onclick_game_in_gametable
    code: "function onclick_game_in_gametable(tablename) {\r

      \  if (DA.simple){show_table_simple(tablename); return; }\r

      \  stopgame();\r

      \  let table = firstCond(Serverdata.tables, x => x.friendly ==
      tablename);\r

      \  ensure_polling();\r

      \  phpPost({ friendly: tablename }, 'table');\r

      }\r\n"
    sig: function onclick_game_in_gametable(tablename){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\simple\onclick.js
    datetime: 2022-04-26-16-24
    timestamp: 1651015466934.9006
    size: 3655
  onclick_home:
    name: onclick_home
    code: "function onclick_home() { stop_game(); start_with_assets(); }\r\n"
    sig: function onclick_home(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_lamp:
    name: onclick_lamp
    code: "function onclick_lamp() {\r

      \  DA.simple = !DA.simple;\r

      \  if (DA.simple) show_simple_ui(); else show_advanced_ui();\r

      \  if (isVisible('dTables')) onclick_tables();\r

      }\r\n"
    sig: function onclick_lamp(){}
    region: onclick (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  onclick_player_in_gametable:
    name: onclick_player_in_gametable
    code: "function onclick_player_in_gametable(uname, tablename, rid) {\r

      \  stopgame();\r

      \  U = firstCond(Serverdata.users, x => x.name == uname);\r

      \  send_or_sim({ friendly: tablename, uname: U.name,  }, 'table');\r

      }\r\n"
    sig: function onclick_player_in_gametable(uname, tablename, rid){}
    region: onclick (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  onclick_pause_continue:
    name: onclick_pause_continue
    code: "function onclick_pause_continue() {\r

      \  let b = mBy('bPauseContinue');\r

      \  clearTimeout(TO.ai);\r

      \  onclick_stoppolling();\r

      \  show_status('game is paused', true);\r

      \  mStyle(b, { fg: 'grey' });\r

      }\r\n"
    sig: function onclick_pause_continue(){}
    region: onclick (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  onclick_reload:
    name: onclick_reload
    code: "function onclick_reload() {\r

      \  if (isdef(Z)) {\r

      \    if (Z.game == 'fritz' && nundef(Z.fen.winners)) {\r

      \      console.log(Z);\r

      \      Z.fen.players[Z.uplayer].time_left = stop_timer();\r

      \      take_turn_fen();\r

      \    } else {\r

      \      FORCE_REDRAW = true; send_or_sim({ friendly: Z.friendly,
      uname: Z.uplayer, auto: false }, 'table');\r

      \    }\r

      \  } else if (U) { onclick_tables(); }\r

      \  else { show_users(); }\r

      }\r\n"
    sig: function onclick_reload(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_reset_all:
    name: onclick_reset_all
    code: "function onclick_reset_all() { stop_game(); phpPost({ app: 'simple' },
      'delete_tables'); }\r\n"
    sig: function onclick_reset_all(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_reset_past:
    name: onclick_reset_past
    code: "function onclick_reset_past() { stopgame(); phpPost({ app: 'simple' },
      'delete_past'); }\r\n"
    sig: function onclick_reset_past(){}
    region: onclick (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  onclick_tables:
    name: onclick_tables
    code: "function onclick_tables() { phpPost({ app: 'simple' }, 'tables'); }\r\n"
    sig: function onclick_tables(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_toggle_games:
    name: onclick_toggle_games
    code: "function onclick_toggle_games() {\r

      \  if (isVisible('dGames')) { toggle_games_off(); }\r

      \  else { show_games(); toggle_games_on(); }\r

      }\r\n"
    sig: function onclick_toggle_games(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\simple\onclick.js
    datetime: 2022-04-26-16-24
    timestamp: 1651015466934.9006
    size: 3655
  onclick_toggle_tables:
    name: onclick_toggle_tables
    code: "function onclick_toggle_tables() {\r

      \  if (isVisible('dTables')) { toggle_tables_off(); }\r

      \  else { phpPost({ app: 'simple' }, 'tables'); toggle_tables_on();
      }\r

      }\r\n"
    sig: function onclick_toggle_tables(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\simple\onclick.js
    datetime: 2022-04-26-16-24
    timestamp: 1651015466934.9006
    size: 3655
  onclick_toggle_users:
    name: onclick_toggle_users
    code: "function onclick_toggle_users() {\r

      \  if (isVisible('dUsers')) { toggle_users_off(); }\r

      \  else { phpPost({ app: 'simple' }, 'users'); toggle_users_on();
      }\r

      }\r\n"
    sig: function onclick_toggle_users(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\simple\onclick.js
    datetime: 2022-04-26-16-24
    timestamp: 1651015466934.9006
    size: 3655
  start_simple:
    name: start_simple
    code: "function start_simple(){\r

      \  let uname = localStorage.getItem('uname');\r

      \  if (isdef(uname)) onclick_user(uname); else show_users(); \r

      }\r\n"
    sig: function start_simple(){}
    region: funcs (startsimple.js)
    filename: startsimple.js
    type: func
    fname: startsimple.js
    path: C:\xampp\htdocs\aroot\simple\startsimple.js
    datetime: 2022-04-26-21-47
    timestamp: 1651034848642.3696
    size: 2346
  onclick_logout:
    name: onclick_logout
    code: "function onclick_logout() {\r

      \  mFadeClearShow('dAdminRight', 300);\r

      \  mClear('dAdminMiddle');\r

      \  stop_game();\r

      \  clear_screen();\r

      \  U = null;\r

      \  show_users();\r

      }\r\n"
    sig: function onclick_logout(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  show_simple_ui:
    name: show_simple_ui
    code: "function show_simple_ui(name) { \r

      \  U = firstCond(Serverdata.users, x => x.name == name);\r

      \  localStorage.setItem('uname', U.name);\r

      \  dTitle = mBy('dTitle');\r

      \  show_title();\r

      \  show_logged_in_user_simple();\r

      \  dTitle.animate([{ opacity: 0 }, { opacity: 1 },], { fill: 'both',
      duration: 1000, easing: 'ease-in' });\r

      \  dTable = mBy('dTable'); \r

      \  hide('dUsers'); show('aLogout');\r

      \  hide('dTopMenu')\r

      \  let dStatus = mBy('dStatus');
      mStyle(dStatus,{left:10,width:'50%',right:null});\r

      \  onclick_tables();\r

      \  DA.testing = false;  return;\r

      \  hide('dButtons'); \r

      \  hide('dTest0'); \r

      \  hide('dTopAdvanced'); \r

      \  toggle_games_off(); \r

      \  toggle_tables_off();  \r

      \  toggle_users_on();\r

      } \r\n"
    sig: function show_simple_ui(name){}
    region: funcs (startsimple.js)
    filename: startsimple.js
    type: func
    fname: startsimple.js
    path: C:\xampp\htdocs\aroot\simple\startsimple.js
    datetime: 2022-04-26-21-47
    timestamp: 1651034848642.3696
    size: 2346
  show_table_simple:
    name: show_table_simple
    code: "function show_table_simple(tablename){\r

      \  hide('dTables');\r

      \  show('dTable');\r

      \  stopgame();\r

      \  let table = firstCond(Serverdata.tables, x => x.friendly ==
      tablename);\r

      \  ensure_polling();\r

      \  phpPost({ friendly: tablename }, 'table');\r

      }\r\n"
    sig: function show_table_simple(tablename){}
    region: funcs (startsimple.js)
    filename: startsimple.js
    type: func
    fname: startsimple.js
    path: C:\xampp\htdocs\aroot\simple\startsimple.js
    datetime: 2022-04-26-21-47
    timestamp: 1651034848642.3696
    size: 2346
  show_tables_simple:
    name: show_tables_simple
    code: "function show_tables_simple() {\r

      \  let dParent = mBy('dTables');\r

      \  show(dParent); hide('dTable');\r

      \  clearElement(dParent);\r

      \  let tables = Serverdata.tables;\r

      \  if (isEmpty(tables)) { mText('no active game tables', dParent);
      return []; }\r

      \  mText(`<h1>game tables</h1>`, dParent, { maleft: 12 })\r

      \  let t = mDataTable(tables, dParent, null, ['game', 'friendly',
      'players'], 'tables');\r

      \  mTableCommandify(t.rowitems, {\r

      \    1: (item, val) => hFunc(val, 'onclick_game_in_gametable', val,
      item.id),\r

      \  });\r

      }\r\n"
    sig: function show_tables_simple(){}
    region: funcs (startsimple.js)
    filename: startsimple.js
    type: func
    fname: startsimple.js
    path: C:\xampp\htdocs\aroot\simple\startsimple.js
    datetime: 2022-04-26-21-47
    timestamp: 1651034848642.3696
    size: 2346
  show_logged_in_user_simple:
    name: show_logged_in_user_simple
    code: "function show_logged_in_user_simple(){\r

      \  let uname = U.name;\r

      \  let sz = 36;\r

      \  let html = `\r

      \  <div username='${uname}'
      style='display:flex;align-items:center;gap:6px;height:100%'>\r

      \    <img src='../base/assets/images/${uname}.jpg' width='${sz}'
      height='${sz}' class='img_person' style='border:3px solid
      ${U.color};margin:0'>\r

      \    <span>${uname}</span>\r

      \  </div>`;\r

      \  show_title_right(html, { fg: U.color });\r

      }\r\n"
    sig: function show_logged_in_user_simple(){}
    region: funcs (startsimple.js)
    filename: startsimple.js
    type: func
    fname: startsimple.js
    path: C:\xampp\htdocs\aroot\simple\startsimple.js
    datetime: 2022-04-26-21-47
    timestamp: 1651034848642.3696
    size: 2346
  show_status_simple:
    name: show_status_simple
    code: "function show_status_simple(){\r

      }\r\n"
    sig: function show_status_simple(){}
    region: funcs (startsimple.js)
    filename: startsimple.js
    type: func
    fname: startsimple.js
    path: C:\xampp\htdocs\aroot\simple\startsimple.js
    datetime: 2022-04-26-21-47
    timestamp: 1651034848642.3696
    size: 2346
  is_card:
    name: is_card
    code: "function is_card(o) { return isdef(o.rank) || isdef(o.o) &&
      isdef(o.o.rank); }\r\n"
    sig: function is_card(o){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_card:
    name: show_card
    code: "function show_card(dParent, key, type = 'aristo') {\r

      \  if (type == 'spotit') {\r

      \    Card.sz = 200;\r

      \    let [rows, cols, numCards, setName] = [3, 2, 2, valf(key,
      'animals')];\r

      \    let infos = spotitDeal(rows, cols, numCards, setName); \r

      \    let items = [];\r

      \    for (const info of infos) {\r

      \      let item = spotitCard(info, dParent, { margin: 10 },
      spotitOnClickSymbol);\r

      \      mStyle(iDiv(item), { padding: 12 });\r

      \      items.push(item);\r

      \    }\r

      \  } else if (type == 'aristo') {\r

      \    let card = ari_get_card(valf(key, 'ASr'));\r

      \    mAppend(dParent, iDiv(card))\r

      \  }\r

      }\r\n"
    sig: function show_card(dParent, key, type = 'aristo'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  sort_cards:
    name: sort_cards
    code: "function sort_cards(hand, bySuit = true, suits = 'CDHS', byRank = true,
      rankstr = '23456789TJQKA') {\r

      \  if (bySuit && byRank) {\r

      \    let buckets = arrBuckets(hand, x => x[1], suits);\r

      \    for (const b of buckets) { sort_cards(b.list, false, null,
      true, rankstr); }\r

      \    hand.length = 0; buckets.map(x => x.list.map(y =>
      hand.push(y)));\r

      \  } else if (bySuit) hand.sort((a, b) => suits.indexOf(a[1]) -
      suits.indexOf(b[1]));\r

      \  else if (byRank) hand.sort((a, b) => rankstr.indexOf(a[0]) -
      rankstr.indexOf(b[0]));\r

      \  return hand;\r

      }\r\n"
    sig: function sort_cards(hand, bySuit = true, suits = 'CDHS', byRank = true,
      rankstr = '23456789TJQKA'){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_card_constants:
    name: set_card_constants
    code: "function set_card_constants(w, h, ranks, suits, deckletters, numjokers =
      0, ovdeck = .25, ovw = '20%', ovh = '20%') {\r

      \  Card = {};\r

      \  Card.sz = valf(h, 300);\r

      \  Card.h = h;\r

      \  Card.w = isdef(w) ? w : Card.sz * .7;\r

      \  Card.gap = Card.sz * .05;\r

      \  Card.ovdeck = ovdeck;\r

      \  Card.ovw = isString(ovw) ? Card.w * firstNumber(ovw) / 100 :
      ovw;\r

      \  Card.ovh = isString(ovh) ? Card.h * firstNumber(ovh) / 100 :
      ovh;\r

      \  Card.ranks = valf(ranks, '23456789TJQKA');\r

      \  Card.suits = valf(suits, 'SHDC');\r

      \  Card.decks = valf(deckletters, 'rb'); \r

      \  Card.numdecks = deckletters.length;\r

      \  Card.numjokers = numjokers;\r

      }\r\n"
    sig: function set_card_constants(w, h, ranks, suits, deckletters, numjokers = 0,
      ovdeck = .25, ovw = '20%', ovh = '20%'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  ari_create_card_assets:
    name: ari_create_card_assets
    code: "function ari_create_card_assets(scolors) {\r

      \  let sz = 100;\r

      \  set_card_constants(sz * .7, sz, 'A23456789TJQK', 'SHDC',
      scolors);\r

      \  let colors = { r: RED, b: BLUE, g: GREEN, p: PURPLE, y: YELLOW,
      o: ORANGE };\r

      \  let ranknames = { A: 'Ace', K: 'King', T: '10', J: 'Jack', Q:
      'Queen' };\r

      \  let suitnames = { S: 'Spades', H: 'Hearts', C: 'Clubs', D:
      'Diamonds' };\r

      \  let di = {};\r

      \  for (const r of Card.ranks) {\r

      \    for (const s of Card.suits) {\r

      \      for (const c of Card.decks) {\r

      \        let k = r + s + c;\r

      \        di[k] = { key: k, val: r == 'A' ? 1 : 'TJQK'.includes(r) ?
      10 : Number(r), rank: r, suit: s, color: colors[c], c52key: 'card_' + r +
      s, w: sz * .7, h: sz, sz: sz, ov: Card.ovw, friendly: `${isNumber(r) ? r :
      ranknames[r]} of ${suitnames[s]}`, short: `${r}${s}` };\r

      \      }\r

      \    }\r

      \  }\r

      \  Aristocards = di;\r

      \  return di;\r

      }\r\n"
    sig: function ari_create_card_assets(scolors){}
    region: aristo (cards.js)
    filename: cards.js
    type: func
    fname: cards.js
    path: C:\xampp\htdocs\aroot\base\js\cards.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634809.379
    size: 95823
  ari_get_cardinfo:
    name: ari_get_cardinfo
    code: "function ari_get_cardinfo(ckey) { return Aristocards[ckey]; }\r\n"
    sig: function ari_get_cardinfo(ckey){}
    region: aristo (cards.js)
    filename: cards.js
    type: func
    fname: cards.js
    path: C:\xampp\htdocs\aroot\base\js\cards.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634809.379
    size: 95823
  ari_get_card:
    name: ari_get_card
    code: "function ari_get_card(ckey, h, w, ov = .3) {\r

      \  let type = ckey[2];\r

      \  let sz = { largecard: 100, smallcard: 50 };\r

      \  let info = type == 'n' ? to_aristocard(ckey, sz.largecard) : type
      == 'l' ? to_luxurycard(ckey, sz.largecard) : type == 'r' ?
      to_rumorcard(ckey, sz.smallcard) : to_commissioncard(ckey,
      sz.smallcard);\r

      \  let card = cardFromInfo(info, h, w, ov);\r

      \  if (type == 'l') luxury_card_deco(card);\r

      \  return card;\r

      }\r\n"
    sig: function ari_get_card(ckey, h, w, ov = .3){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  deck_deal:
    name: deck_deal
    code: "function deck_deal(deck, n) { return deck.splice(0, n); }\r\n"
    sig: function deck_deal(deck, n){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  deck_add:
    name: deck_add
    code: "function deck_add(deck, n, arr) { let els = deck_deal(deck, n); els.map(x
      => arr.push(x)); return arr; }\r\n"
    sig: function deck_add(deck, n, arr){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  get_card_key52:
    name: get_card_key52
    code: "function get_card_key52(R1 = '1', SB = 'B') {\r

      \  return `card_${Rank1}${SuitB}`;\r

      }\r\n"
    sig: function get_card_key52(R1 = '1', SB = 'B'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  get_card_div:
    name: get_card_div
    code: "function get_card_div(R1 = '1', SB = 'B') {\r

      \  let key52 = get_card_key52(R1, SB);\r

      \  let svgCode = C52['card_1B']; \r

      \  svgCode = '<div>' + svgCode + '</div>';\r

      \  let el = mCreateFrom(svgCode);\r

      \  [w, h] = [isdef(w) ? w : Card.w, isdef(h) ? h : Card.sz];\r

      \  mSize(el, w, h);\r

      \  return el;\r

      }\r\n"
    sig: function get_card_div(R1 = '1', SB = 'B'){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  face_down:
    name: face_down
    code: "function face_down(item, color, texture) {\r

      \  if (!item.faceUp) return;\r

      \  if (isdef(texture) || lookup(item, ['live', 'dCover'])) {\r

      \    face_down_alt(item, color, texture);\r

      \  } else {\r

      \    let svgCode = C52.card_2B;\r

      \    item.div.innerHTML = svgCode;\r

      \    if (nundef(color)) color = item.color;\r

      \    if (isdef(item.color))
      item.div.children[0].children[1].setAttribute('fill', item.color);\r

      \  }\r

      \  item.faceUp = false;\r

      }\r\n"
    sig: function face_down(item, color, texture){}
    region: card (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  face_up:
    name: face_up
    code: "function face_up(item) {\r

      \  if (item.faceUp) return;\r

      \  if (lookup(item, ['live', 'dCover'])) mStyle(item.live.dCover, {
      display: 'none' });\r

      \  else item.div.innerHTML = isdef(item.c52key) ? C52[item.c52key] :
      item.html;\r

      \  item.faceUp = true;\r

      }\r\n"
    sig: function face_up(item){}
    region: card (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toggle_face:
    name: toggle_face
    code: "function toggle_face(item) { if (item.faceUp) face_down(item); else
      face_up(item); }\r\n"
    sig: function toggle_face(item){}
    region: card (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  anim_toggle_face_orig:
    name: anim_toggle_face_orig
    code: "function anim_toggle_face_orig(item, callback) {\r

      \  let d = iDiv(item);\r

      \  mClass(d, 'aniflip');\r

      \  TO.anim = setTimeout(() => {\r

      \    if (item.faceUp) face_down(item); else face_up(item);
      mClassRemove(d, 'aniflip');\r

      \    if (isdef(callback)) callback();\r

      \  }, 300);\r

      }\r\n"
    sig: function anim_toggle_face_orig(item, callback){}
    region: card (cards.js)
    filename: cards.js
    type: func
    fname: cards.js
    path: C:\xampp\htdocs\aroot\easy\cards.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634800.3794
    size: 27445
  inno_card:
    name: inno_card
    code: "function inno_card(dParent, keyOrName) {\r

      \  if (nundef(keyOrName)) keyOrName =
      chooseRandom(get_keys(InnoById));\r

      \  let cardInfo, name, key, id;\r

      \  if (isdef(InnoById[keyOrName])) { id = key = keyOrName; cardInfo
      = InnoById[id]; name = cardInfo.name; }\r

      \  else if (isdef(InnoByName[keyOrName])) { name = keyOrName;
      cardInfo = InnoByName[name]; id = key = cardInfo.id; };\r

      \  let sym = INNO.sym[cardInfo.type];\r

      \  let info = Syms[sym.key];\r

      \  let card = cBlank(dParent, { fg: 'black', bg:
      INNO.color[cardInfo.color], w: Card.sz, h: Card.sz * .65, margin: 10 });\r

      \  let [dCard, sz, szTitle, margin] = [iDiv(card), Card.sz / 5,
      cardInfo.exp[0] == 'A' ? Card.sz / 12 : Card.sz / 8, 4];\r

      \  let [dTitle, dMain] = cTitleArea(card, szTitle);\r

      \  let d = mAddContent(dTitle, name, {\r

      \    patop: 4, bg: sym.bg, fg: 'white', h: szTitle, fz: szTitle *
      .7, align: 'center',\r

      \    position: 'relative'\r

      \  });\r

      \  mAddContent(d, cardInfo.age, { hpadding: szTitle / 4, float:
      'right' });\r

      \  let s = mSym(sym.key, d, { hpadding: szTitle / 4, h: szTitle *
      .7, fg: sym.fg, float: 'left' });\r

      \  let positions = ['tl', 'bl', 'bc', 'br'];\r

      \  for (let i = 0; i < 4; i++) {\r

      \    let r = cardInfo.resources[i];\r

      \    let pos = positions[i];\r

      \    if (r in INNO.sym) { innoSym(r, dMain, sz, pos, margin); }\r

      \    else if (r == 'None') { innoAgeNumber(cardInfo.age, dMain, sz,
      pos, margin); }\r

      \    else if (isNumber(r)) { innoBonusNumber(r, dMain, sz, pos,
      margin); }\r

      \    else if (r == 'echo') { innoEcho(cardInfo.echo, dMain, sz, pos,
      margin); }\r

      \    else if (r == 'inspire') { innoInspire(cardInfo.inspire, dMain,
      sz, pos, margin); }\r

      \  }\r

      \  if (isdef(cardInfo.dogmas)) {\r

      \    let box = mBoxFromMargins(dMain, 10, margin, sz + margin, sz +
      2 * margin); \r

      \    mStyle(box, { align: 'left' });\r

      \    let text = '';\r

      \    for (const dog of cardInfo.dogmas) {\r

      \      let t = startsWith(dog, 'I demand') ? ('I <b>demand</b>' +
      dog.substring(8)) : startsWith(dog, 'I compell') ? ('I <b>compell</b>' +
      dog.substring(8)) : dog;\r

      \      text += `<span
      style=\"color:${sym.bg};font-family:${info.family}\">${info.text}</span>`
      + '&nbsp;' + t + '<br>';\r

      \    }\r

      \    let t2 = innoText(text);\r

      \    mFillText(t2, box);\r

      \  } else if (isdef(cardInfo.res_city)) {\r

      \    let positions = ['tc', 'tr'];\r

      \    for (let i = 0; i < 2; i++) {\r

      \      let r = cardInfo.res_city[i];\r

      \      let pos = positions[i];\r

      \      if (r == 'flag') { innoFlag(cardInfo.type, dMain, sz, pos,
      margin); }\r

      \      else if (r in INNO.sym) { innoSym(r, dMain, sz, pos, margin);
      }\r

      \      else if (r == 'None') { innoAgeNumber(cardInfo.age, dMain,
      sz, pos, margin); }\r

      \      else if (isNumber(r)) { innoBonusNumber(r, dMain, sz, pos,
      margin); }\r

      \      else if (r == 'echo') { innoEcho(cardInfo.echo, dMain, sz,
      pos, margin); }\r

      \      else if (r == 'inspire') { innoInspire(cardInfo.inspire,
      dMain, sz, pos, margin); }\r

      \    }\r

      \  }\r

      \  card.info = cardInfo;\r

      \  return card;\r

      }\r\n"
    sig: function inno_card(dParent, keyOrName){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_card_fixed_font:
    name: inno_card_fixed_font
    code: "function inno_card_fixed_font(dParent, keyOrName) {\r

      \  if (nundef(keyOrName)) keyOrName =
      chooseRandom(get_keys(InnoById));\r

      \  let cardInfo, name, key, id;\r

      \  if (isdef(InnoById[keyOrName])) { id = key = keyOrName; cardInfo
      = InnoById[id]; name = cardInfo.name; }\r

      \  else if (isdef(InnoByName[keyOrName])) { name = keyOrName;
      cardInfo = InnoByName[name]; id = key = cardInfo.id; };\r

      \  let sym = INNO.sym[cardInfo.type];\r

      \  let info = Syms[sym.key];\r

      \  let card = cBlank(dParent, { fg: 'black', bg:
      INNO.color[cardInfo.color], w: Card.sz, h: Card.sz * .65, margin: 10 });\r

      \  let [dCard, sz, szTitle, margin] = [iDiv(card), Card.sz / 5,
      cardInfo.exp[0] == 'A' ? Card.sz / 12 : Card.sz / 8, 4];\r

      \  let [dTitle, dMain] = cTitleArea(card, szTitle);\r

      \  let d = mAddContent(dTitle, name, {\r

      \    patop: 4, bg: sym.bg, fg: 'white', h: szTitle, fz: szTitle *
      .7, align: 'center',\r

      \    position: 'relative'\r

      \  });\r

      \  mAddContent(d, cardInfo.age, { hpadding: szTitle / 4, float:
      'right' });\r

      \  let s = mSym(sym.key, d, { hpadding: szTitle / 4, h: szTitle *
      .7, fg: sym.fg, float: 'left' });\r

      \  let positions = ['tl', 'bl', 'bc', 'br'];\r

      \  for (let i = 0; i < 4; i++) {\r

      \    let r = cardInfo.resources[i];\r

      \    let pos = positions[i];\r

      \    if (r in INNO.sym) { innoSym(r, dMain, sz, pos, margin); }\r

      \    else if (r == 'None') { innoAgeNumber(cardInfo.age, dMain, sz,
      pos, margin); }\r

      \    else if (isNumber(r)) { innoBonusNumber(r, dMain, sz, pos,
      margin); }\r

      \    else if (r == 'echo') { innoEcho(cardInfo.echo, dMain, sz, pos,
      margin); }\r

      \  }\r

      \  let box = mBoxFromMargins(dMain, 10, margin, sz + margin, sz + 2
      * margin); \r

      \  console.log('box', box);\r

      \  mStyle(box, { align: 'left', padding: 4 });\r

      \  let text = '';\r

      \  for (const dog of cardInfo.dogmas) {\r

      \    let t = startsWith(dog, 'I demand') ? ('I <b>demand</b>' +
      dog.substring(8)) : startsWith(dog, 'I compell') ? ('I <b>compell</b>' +
      dog.substring(8)) : dog;\r

      \    text += `<span
      style=\"color:${sym.bg};font-family:${info.family}\">${info.text}</span>`
      + '&nbsp;' + t + '<br>';\r

      \  }\r

      \  let t2 = innoText(text);\r

      \  mText(t2, box, { fz: 10 });\r

      \  card.info = cardInfo;\r

      \  return card;\r

      }\r\n"
    sig: function inno_card_fixed_font(dParent, keyOrName){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  innoInspire:
    name: innoInspire
    code: "function innoInspire(text, dParent, sz, pos, margin = 10) {\r

      \  if (isList(text)) text = text.join('<br>');\r

      \  margin /= 2;\r

      \  sz += margin / 4;\r

      \  let box = mDiv(dParent, { w: sz, h: sz, bg: '#ffffff80', fg:
      'black', rounding: 10 });\r

      \  mPlace(box, pos, margin);\r

      \  box.onclick = (ev) => makeInfobox(ev, box, 3);\r

      \  let t2 = innoText(text);\r

      \  mFillText(t2, box);\r

      \  return box;\r

      }\r\n"
    sig: function innoInspire(text, dParent, sz, pos, margin = 10){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  innoFlag:
    name: innoFlag
    code: "function innoFlag(cardType, dParent, sz, pos, margin = 10) {\r

      \  let box = mDiv(dParent, { w: sz, h: sz, bg: INNO.sym.flag.bg,
      rounding: 10 }); if (isdef(pos)) mPlace(box, pos, margin);\r

      \  s = mSym(INNO.sym.flag.key, box, { sz: sz * .75, fg:
      INNO.sym[cardType].bg }, 'cc');\r

      \  return box;\r

      }\r\n"
    sig: function innoFlag(cardType, dParent, sz, pos, margin = 10){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_calc_visible_syms:
    name: inno_calc_visible_syms
    code: "function inno_calc_visible_syms(board, splays = {}) {\r

      \  let res = {};\r

      \  INNO.symNames.map(x => res[x] = 0);\r

      \  for (const color in board) {\r

      \    let res_color = inno_calc_visible_syms_pile(board[color],
      splays[color]);\r

      \    for (const k in res) { res[k] += res_color[k]; }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function inno_calc_visible_syms(board, splays = {}){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_calc_visible_syms_pile:
    name: inno_calc_visible_syms_pile
    code: "function inno_calc_visible_syms_pile(keys, dir) {\r

      \  let [cards, totals] = [keys.map(x => InnoById[x]), {}];\r

      \  INNO.symNames.map(x => totals[x] = 0);\r

      \  if (isEmpty(keys)) return totals;\r

      \  let top = cards.shift();\r

      \  for (const k of top.resources) {\r

      \    if (isdef(totals[k])) totals[k] += 1;\r

      \  }\r

      \  if (nundef(dir) || dir == 0) return totals;\r

      \  if (dir == 1) {\r

      \  } else if (dir == 2) {\r

      \    for (const c of cards) {\r

      \      for (const k in totals) {\r

      \        if (c.resources[0] == k) totals[k]++;\r

      \        if (c.resources[1] == k) totals[k]++;\r

      \      }\r

      \    }\r

      \  }\r

      \  return totals;\r

      }\r\n"
    sig: function inno_calc_visible_syms_pile(keys, dir){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_object_keys:
    name: inno_get_object_keys
    code: "function inno_get_object_keys(otree) {\r

      \  let keys = {}; for (const k in InnoById) keys[k] = true;\r

      \  for (const k of otree.plorder) keys[k] = true;\r

      \  for (const k of ['decks', 'board', 'splays', 'hand', 'green',
      'purple', 'blue', 'red', 'yellow', 'forecast', 'scored', 'artifact',
      'special_achievements', 'achievements']) keys[k] = true;\r

      \  let decknames = 'ABCEF';\r

      \  for (let i = 0; i < decknames.length; i++) { keys[decknames[i]] =
      true; }\r

      \  for (let age = 1; age <= 10; age++) { keys['' + age] = true; }\r

      \  return keys;\r

      }\r\n"
    sig: function inno_get_object_keys(otree){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_hand_actions:
    name: inno_get_hand_actions
    code: "function inno_get_hand_actions(otree, uname) {\r

      \  let actions = [];\r

      \  otree[uname].hand.map(x => actions.push(`${uname}.hand.${x}`));\r

      \  return actions;\r

      }\r\n"
    sig: function inno_get_hand_actions(otree, uname){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_basic_deck_age:
    name: inno_get_basic_deck_age
    code: "function inno_get_basic_deck_age(otree, min_age) {\r

      \  for (let i = min_age; i <= 10; i++) {\r

      \    let deck = otree.decks.B[i];\r

      \    let len = deck.length;\r

      \    if (len > 0) return i;\r

      \  }\r

      \  return 11;\r

      }\r\n"
    sig: function inno_get_basic_deck_age(otree, min_age){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_deck_age:
    name: inno_get_deck_age
    code: "function inno_get_deck_age(otree, deck_letter, min_age = 1) {\r

      \  let deck_age = inno_get_basic_deck_age(otree, min_age);\r

      \  if (deck_letter == 'B') return deck_age;\r

      \  let deck = otree.decks[deck_letter][deck_age];\r

      \  while (deck_age <= 10 && isEmpty(deck)) { deck_age += 1; deck =
      otree.decks[deck_letter][deck_age]; }\r

      \  return deck_age;\r

      }\r\n"
    sig: function inno_get_deck_age(otree, deck_letter, min_age = 1){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_player_age:
    name: inno_get_player_age
    code: "function inno_get_player_age(otree, uname) {\r

      \  let top = inno_get_top_card_info(otree, uname);\r

      \  let maxage = arrMinMax(top, x => x.age).max;\r

      \  return maxage;\r

      }\r\n"
    sig: function inno_get_player_age(otree, uname){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_splay:
    name: inno_get_splay
    code: "function inno_get_splay(otree, path) {\r

      \  let [uname, x, color, y] = path.split('.');\r

      \  let splay = otree[uname].splays[color];\r

      \  return splay;\r

      }\r\n"
    sig: function inno_get_splay(otree, path){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_top_card_actions:
    name: inno_get_top_card_actions
    code: "function inno_get_top_card_actions(otree, uname) {\r

      \  let keys = inno_get_top_card_keys(otree, uname);\r

      \  let res = keys.map(x =>
      `${uname}.board.${inno_get_cardinfo(x).color}.${x}`);\r

      \  return res;\r

      }\r\n"
    sig: function inno_get_top_card_actions(otree, uname){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_top_card_info:
    name: inno_get_top_card_info
    code: "function inno_get_top_card_info(otree, uname) { return
      inno_get_top_card_keys(otree, uname).map(x => inno_get_cardinfo(x));
      }\r\n"
    sig: function inno_get_top_card_info(otree, uname){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_top_card_keys:
    name: inno_get_top_card_keys
    code: "function inno_get_top_card_keys(otree, uname) {\r

      \  let pl = otree[uname];\r

      \  let board = pl.board;\r

      \  let top = [];\r

      \  for (const k in board) { if (!isEmpty(board[k]))
      top.push(arrFirst(board[k])); }\r

      \  return top;\r

      }\r\n"
    sig: function inno_get_top_card_keys(otree, uname){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_cardinfo:
    name: inno_get_cardinfo
    code: "function inno_get_cardinfo(key) { return InnoById[key]; }\r\n"
    sig: function inno_get_cardinfo(key){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_phase:
    name: inno_get_phase
    code: "function inno_get_phase(iphase) { return INNO.phases[iphase].key; }\r\n"
    sig: function inno_get_phase(iphase){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_get_id:
    name: inno_get_id
    code: "function inno_get_id(c) { return normalize_string(c.name); }\r\n"
    sig: function inno_get_id(c){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_create_card_assets:
    name: inno_create_card_assets
    code: "function inno_create_card_assets() {\r

      \  Dinno = { A: {}, B: {}, C: {}, E: {}, F: {} };\r

      \  InnoById = {}; \r

      \  InnoByName = {};\r

      \  for (const exp in Cinno) {\r

      \    for (const name in Cinno[exp]) {\r

      \      let c = Cinno[exp][name];\r

      \      c.name = name;\r

      \      c.exp = exp;\r

      \      let id = inno_get_id(c); \r

      \      c.id = c.key = id;\r

      \      if (isdef(InnoById[id])) { console.log('duplicate id', id,
      InnoById[id].name, c.name); }\r

      \      InnoById[id] = c;\r

      \      let key_name = name.toLowerCase().trim();\r

      \      if (isdef(InnoByName[key_name])) console.log('duplicate
      name', name);\r

      \      InnoByName[key_name] = c;\r

      \      lookupAddToList(Dinno, [exp[0], c.age], c.id);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function inno_create_card_assets(){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_stat_sym:
    name: inno_stat_sym
    code: "function inno_stat_sym(key, n, dParent, sz) {\r

      \  let d = mDiv(dParent, { display: 'flex', dir: 'c', fz: sz });\r

      \  let s = mSym(INNO.sym[key].key, d, { h: sz, fz: sz, fg:
      INNO.sym[key].fg });\r

      \  d.innerHTML += `<span>${n}</span>`;\r

      \  return d;\r

      }\r\n"
    sig: function inno_stat_sym(key, n, dParent, sz){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_show_other_player_info:
    name: inno_show_other_player_info
    code: "function inno_show_other_player_info(ev) {\r

      \  console.log('enter', ev.target);\r

      \  let id = evToId(ev);\r

      \  let g = Session;\r

      \  let plname = stringAfter(id, '_');\r

      \  let pl = firstCond(g.players, x => x.name == plname);\r

      \  console.log('player info for', pl);\r

      }\r\n"
    sig: function inno_show_other_player_info(ev){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_present_board:
    name: inno_present_board
    code: "function inno_present_board(dParent, board) {\r

      \  let dBoard = mDiv(dParent, {}, null, 'board');\r

      \  mFlex(dBoard);\r

      \  let boardItemLists = [];\r

      \  for (const color in board) {\r

      \    let cardlist = board[color];\r

      \    let d = mDiv(dBoard);\r

      \    let items = inno_present_cards(d, cardlist);\r

      \    boardItemLists.push(items);\r

      \  }\r

      \  return boardItemLists;\r

      }\r\n"
    sig: function inno_present_board(dParent, board){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_present_hand:
    name: inno_present_hand
    code: "function inno_present_hand(dParent, hand) {\r

      \  let dHand = mDiv(dParent, {}, null, 'hand');\r

      \  mFlexWrap(dHand); mLinebreak(dHand);\r

      \  let handItems = inno_present_cards(dHand, hand);\r

      \  return handItems;\r

      }\r\n"
    sig: function inno_present_hand(dParent, hand){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_present_card:
    name: inno_present_card
    code: "function inno_present_card(dParent, k) { let card = inno_card(dParent,
      k); card.key = card.info.key; return card; }\r\n"
    sig: function inno_present_card(dParent, k){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_present_cards:
    name: inno_present_cards
    code: "function inno_present_cards(dParent, keys) {\r

      \  let items = [];\r

      \  for (const k of keys) {\r

      \    let card = inno_present_card(dParent, k);\r

      \    items.push(card);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function inno_present_cards(dParent, keys){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_shuffle_decks:
    name: inno_shuffle_decks
    code: "function inno_shuffle_decks() {\r

      \  for (const exp in Dinno) {\r

      \    for (const age in Dinno[exp]) {\r

      \      shuffle(Dinno[exp][age]);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function inno_shuffle_decks(){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  inno_setup:
    name: inno_setup
    code: "function inno_setup(player_names) {\r

      \  inno_shuffle_decks();\r

      \  let pre_fen = {};\r

      \  let decks = pre_fen.decks = jsCopy(Dinno);\r

      \  pre_fen.achievements = [];\r

      \  for (const age in decks.B) { last_elem_from_to(decks.B[age],
      pre_fen.achievements); }\r

      \  pre_fen.special_achievements = ['monument', 'empire', 'world',
      'wonder', 'universe', 'legend', 'repute', 'fame', 'glory', 'victory',
      'supremacy', 'destiny', 'wealth', 'heritage', 'history'];\r

      \  let pls = pre_fen.players = {};\r

      \  let deck1 = decks.B[1]; let deck2 = decks.E[1];\r

      \  for (const plname of player_names) {\r

      \    let pl = pls[plname] = {\r

      \      hand: [],\r

      \      board: { blue: [], red: [], green: [], yellow: [], purple: []
      },\r

      \      splays: { blue: 0, red: 0, green: 0, yellow: 0, purple: 0
      },\r

      \      achievements: [],\r

      \      scored: [],\r

      \      forecast: [],\r

      \      artifact: null\r

      \    };\r

      \    last_elem_from_to(deck1, pl.hand); last_elem_from_to(deck2,
      pl.hand);\r

      \  }\r

      \  pre_fen.plorder = jsCopy(player_names); \r

      \  let fen = {\r

      \    players: pre_fen.players,\r

      \    decks: pre_fen.decks,\r

      \  };\r

      \  addKeys(pre_fen, fen);\r

      \  return fen; \r

      }\r\n"
    sig: function inno_setup(player_names){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  gSet_attributes:
    name: gSet_attributes
    code: "function gSet_attributes() {\r

      \  const all_attrs = {\r

      \    shape: ['circle', 'triangle', 'square'],\r

      \    color: [RED, BLUE, GREEN],\r

      \    num: [1, 2, 3],\r

      \    shading: ['solid', 'empty', 'gradient'],\r

      \    background: ['white', 'grey', 'black'],\r

      \    text: ['none', 'letter', 'number'],\r

      \  };\r

      \  return all_attrs;\r

      }\r\n"
    sig: function gSet_attributes(){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  get_random_attr_val:
    name: get_random_attr_val
    code: "function get_random_attr_val(attr_list) {\r

      \  let all_attrs = gSet_attributes();\r

      \  return attr_list.map(x => chooseRandom(all_attrs[x]));\r

      }\r\n"
    sig: function get_random_attr_val(attr_list){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  draw_set_card:
    name: draw_set_card
    code: "function draw_set_card(dParent, info, card_styles) {\r

      \  let card = cLandscape(dParent, card_styles);\r

      \  card.info = info;\r

      \  let d = iDiv(card);\r

      \  mCenterCenterFlex(d);\r

      \  let sz = card.sz / 2.8;\r

      \  let bg, shape = info.shape, text;\r

      \  switch (info.shading) {\r

      \    case 'solid': bg = info.color; break;\r

      \    case 'gradient': bg = `linear-gradient(${info.color}, silver)`;
      break;\r

      \    case 'empty': bg = `repeating-linear-gradient(\r

      \      45deg,\r

      \      ${info.color},\r

      \      ${info.color} 10px,\r

      \      silver 10px,\r

      \      silver 20px\r

      \    )`; break;\r

      \  }\r

      \  mStyle(d, { bg: info.background });\r

      \  switch (info.text) {\r

      \    case 'none': text = null; break;\r

      \    case 'letter': text = randomLetter(); break;\r

      \    case 'number': text = '' + randomDigit(); break;\r

      \  }\r

      \  let styles = { w: sz, h: sz, margin: sz / 10 };\r

      \  for (let i = 0; i < info.num; i++) {\r

      \    let d1 = drawShape(shape, d, styles);\r

      \    if (info.shading == 'gradient') { d1.style.backgroundColor =
      info.color; mClass(d1, 'polka-dot'); } else mStyle(d1, { bg: bg });\r

      \    if (shape == 'circle') console.log('circle', d1);\r

      \    if (isdef(text)) { mCenterCenterFlex(d1); mText(text, d1, { fz:
      sz / 1.75, fg: 'black', family: 'impact' }); }\r

      \  }\r

      \  return card;\r

      }\r\n"
    sig: function draw_set_card(dParent, info, card_styles){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  check_complete_set:
    name: check_complete_set
    code: "function check_complete_set(fenlist) {\r

      \  if (fenlist.length != 3) return false;\r

      \  let [f1, f2, f3] = fenlist;\r

      \  console.log('set clicked', f1, f2, f3)\r

      \  for (let i = 0; i < f1.length; i++) {\r

      \    let [a, b, c] = [f1[i], f2[i], f3[i]];\r

      \    console.log('...set clicked', a, b, c)\r

      \    let correct = (a == b && b == c) || (a != b && b != c && a !=
      c);\r

      \    if (!correct) return false;\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function check_complete_set(fenlist){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  create_set_card:
    name: create_set_card
    code: "function create_set_card(fen, dParent, card_styles) {\r

      \  let myinfo = info_from_fen(fen);\r

      \  let info = { shape: 'circle', color: BLUE, num: 1, shading:
      'solid', background: 'white', text: 'none' };\r

      \  copyKeys(myinfo, info);\r

      \  let card = draw_set_card(dParent, info, card_styles);\r

      \  card.fen = fen; \r

      \  return card;\r

      }\r\n"
    sig: function create_set_card(fen, dParent, card_styles){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  draw_set_card_test:
    name: draw_set_card_test
    code: "function draw_set_card_test(dParent) {\r

      \  let card = cLandscape(dParent, { w: 120 });\r

      \  let d = iDiv(card, { h: '100%' });\r

      \  mCenterCenterFlex(d);\r

      \  let sz = card.sz / 4;\r

      \  let styles = { w: sz, h: sz, bg: `linear-gradient(${RED},black`,
      margin: sz / 10, border: `solid 3px ${GREEN}` };\r

      \  let d1 = drawShape('circle', d, styles); mCenterCenterFlex(d1);
      mText('A', d1, { fz: sz / 4, fg: 'white' });\r

      \  drawShape('circle', d, styles);\r

      \  drawShape('circle', d, styles);\r

      }\r\n"
    sig: function draw_set_card_test(dParent){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  fen_from_info:
    name: fen_from_info
    code: "function fen_from_info(info) {\r

      \  let all_attrs = gSet_attributes();\r

      \  let keys = get_keys(all_attrs);\r

      \  let fen = '';\r

      \  for (const prop of keys) {\r

      \    let val = info[prop];\r

      \    let i = all_attrs[prop].indexOf(val);\r

      \    fen += '' + i;\r

      \  }\r

      \  return fen;\r

      }\r\n"
    sig: function fen_from_info(info){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  info_from_fen:
    name: info_from_fen
    code: "function info_from_fen(fen) {\r

      \  let all_attrs = gSet_attributes();\r

      \  let keys = get_keys(all_attrs);\r

      \  let info = {};\r

      \  for (let i = 0; i < fen.length; i++) {\r

      \    let prop = keys[i];\r

      \    let val = all_attrs[prop][Number(fen[i])];\r

      \    info[prop] = val;\r

      \  }\r

      \  return info;\r

      }\r\n"
    sig: function info_from_fen(fen){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  make_set_deck:
    name: make_set_deck
    code: "function make_set_deck(n_or_attr_list) {\r

      \  let all_attrs = gSet_attributes();\r

      \  let keys = get_keys(all_attrs);\r

      \  let n = isNumber(n_or_attr_list) ? n_or_attr_list :
      n_or_attr_list.length;\r

      \  let attrs = isNumber(n_or_attr_list) ? arrTake(keys, n) :
      n_or_attr_list;\r

      \  let list = ['0', '1', '2']; \r

      \  let i = 1;\r

      \  while (i < n) {\r

      \    let [l1, l2, l3] = [jsCopy(list), jsCopy(list),
      jsCopy(list)];\r

      \    l1 = l1.map(x => '0' + x); l2 = l2.map(x => '1' + x); l3 =
      l3.map(x => '2' + x);\r

      \    list = l1.concat(l2).concat(l3);\r

      \    i++;\r

      \  }\r

      \  return list;\r

      }\r\n"
    sig: function make_set_deck(n_or_attr_list){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  make_goal_set:
    name: make_goal_set
    code: "function make_goal_set(deck, prob_different) {\r

      \  let [fen1, fen2, fen3] = [deck[0], '', ''];  \r

      \  let n = fen1.length;\r

      \  let different = randomNumber(0, n - 1);\r

      \  for (let i = 0; i < n; i++) {\r

      \    let l1 = fen1[i];\r

      \    let same = i == different ? false : coin(prob_different);\r

      \    let inc = coin() ? 1 : -1;\r

      \    let [l2, l3] = same ? [l1, l1] : ['' + (3 + Number(l1) + inc *
      1) % 3, '' + (3 + Number(l1) + inc * 2) % 3];\r

      \    fen2 += l2; fen3 += l3;\r

      \  }\r

      \  return [fen1, fen2, fen3];\r

      }\r\n"
    sig: function make_goal_set(deck, prob_different){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  get_splay_word:
    name: get_splay_word
    code: "function get_splay_word(nsplay) { return nsplay == 0 ? 'none' : nsplay ==
      1 ? 'left' : nsplay == 2 ? 'right' : dsplay == 3 ? 'up' : 'deck'; }\r\n"
    sig: function get_splay_word(nsplay){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  get_splay_number:
    name: get_splay_number
    code: "function get_splay_number(wsplay) { return wsplay == 'none' ? 0 : wsplay
      == 'left' ? 1 : wsplay == 'right' ? 2 : wsplay == 'up' ? 3 : 4; }\r\n"
    sig: function get_splay_number(wsplay){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mContainerSplay_WORKS:
    name: mContainerSplay_WORKS
    code: "function mContainerSplay_WORKS(d, splay, w, h, num, ov) {\r

      \  if (!isNumber(splay)) splay = get_splay_number(splay);\r

      \  if (isString(ov) && ov[ov.length - 1] == '%') ov = splay == 0 ? 1
      : splay == 3 ? Number(ov) * h / 100 : Number(ov) * w / 100;\r

      \  if (splay == 3) {\r

      \    d.style.display = 'grid';\r

      \    d.style.gridTemplateRows = `repeat(${num},${ov}px)`;\r

      \    d.style.height = `${h + (num - 1) * (ov * 1.1)}px`;\r

      \  } else if (splay == 2 || splay == 1) {\r

      \    d.style.display = 'grid';\r

      \    d.style.gridTemplateColumns = `repeat(${num},${ov}px)`;\r

      \    d.style.width = `${w + (num - 1) * (ov * 1.1)}px`;\r

      \  } else if (splay == 0) {\r

      \    d.style.display = 'grid'; ov = .5\r

      \    d.style.gridTemplateColumns = `repeat(${num},${ov}px)`;\r

      \    d.style.width = `${w + (num - 1) * (ov * 1.1)}px`;\r

      \  } else if (splay == 4) {\r

      \    d.style.position = 'relative';\r

      \    if (nundef(ov)) ov = .5;\r

      \    d.style.width = `${w + (num - 1) * (ov * 1.1)}px`;\r

      \    d.style.height = `${h + (num - 1) * (ov * 1.1)}px`;\r

      \  }\r

      }\r\n"
    sig: function mContainerSplay_WORKS(d, splay, w, h, num, ov){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mContainerSplay:
    name: mContainerSplay
    code: "function mContainerSplay(d, splay, w, h, num, ov) {\r

      \  if (nundef(splay)) splay = 2;\r

      \  if (!isNumber(splay)) splay = get_splay_number(splay);\r

      \  if (isString(ov) && ov[ov.length - 1] == '%') ov = splay == 0 ? 1
      : splay == 3 ? Number(ov) * h / 100 : Number(ov) * w / 100;\r

      \  if (splay == 3) {\r

      \    d.style.display = 'grid';\r

      \    d.style.gridTemplateRows = `repeat(${num},${ov}px)`;\r

      \    console.log('HAAAAAAAAAAAALLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOO\
      OOOOOOOOOOOOOOO')\r

      \    d.style.minHeight = `${h + (num - 1) * (ov * 1.1)}px`;\r

      \  } else if (splay == 2 || splay == 1) {\r

      \    d.style.display = 'grid';\r

      \    d.style.gridTemplateColumns = `repeat(${num},${ov}px)`;\r

      \    let wnew = w + (num - 1) * (ov * 1.1);\r

      \    d.style.minWidth = `${w + (num - 1) * (ov * 1.1)}px`;\r

      \  } else if (splay == 0) {\r

      \    d.style.display = 'grid'; ov = .5\r

      \    d.style.gridTemplateColumns = `repeat(${num},${ov}px)`;\r

      \    d.style.minWidth = `${w + (num - 1) * (ov * 1.1)}px`;\r

      \  } else if (splay == 5) {\r

      \    d.style.display = 'grid';\r

      \    d.style.gridTemplateColumns = `${ov}px repeat(${num - 1},${ov /
      2}px)`;\r

      \    d.style.minWidth = `${w + (num) * (ov / 2 * 1.1)}px`;\r

      \  } else if (splay == 4) {\r

      \    d.style.position = 'relative';\r

      \    if (nundef(ov)) ov = .5;\r

      \    d.style.minWidth = `${w + (num - 1) * (ov * 1.1)}px`;\r

      \    d.style.minHeight = `${h + (num - 1) * (ov * 1.1)}px`;\r

      \  }\r

      }\r\n"
    sig: function mContainerSplay(d, splay, w, h, num, ov){}
    region: cards (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mItemSplay:
    name: mItemSplay
    code: "function mItemSplay(item, list, splay, ov = .5) {\r

      \  if (!isNumber(splay)) splay = get_splay_number(splay);\r

      \  let d = iDiv(item);\r

      \  let idx = list.indexOf(item.key);\r

      \  if (splay == 4) {\r

      \    let offset = (list.length - idx) * ov;\r

      \    mStyle(d, { position: 'absolute', left: offset, top: offset
      });\r

      \    d.style.zIndex = list.length - idx;\r

      \  } else {\r

      \    d.style.zIndex = splay != 2 ? list.length - idx : 0;\r

      \  }\r

      }\r\n"
    sig: function mItemSplay(item, list, splay, ov = .5){}
    region: cards (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  giRep:
    name: giRep
    code: "function giRep(gi, dParent, styles, shape, prefix, content) {\r

      \  gi = isString(gi) ? gi[1] == '_' ? Items[gi] : Items[name2id(gi)]
      : gi;\r

      \  let id = gi.id;\r

      \  let name = gi.name;\r

      \  let d = mShape(shape, dParent, styles);\r

      \  d.id = (isdef(prefix) ? prefix : '') + id;\r

      \  let key = isdef(prefix) ? prefix : 'div';\r

      \  d.innerHTML = content;\r

      \  let di = {}; di[key] = d; iAdd(gi, di);\r

      \  return d;\r

      }\r\n"
    sig: function giRep(gi, dParent, styles, shape, prefix, content){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  stdColOverlapContainer:
    name: stdColOverlapContainer
    code: "function stdColOverlapContainer(dParent, n, wGrid, wCell, styles) {\r

      \  addKeys({\r

      \    h: wGrid,\r

      \    gap: 0,\r

      \    display: 'inline-grid',\r

      \    'grid-template-rows': `repeat(${n}, ${wCell}px)`\r

      \  }, styles);\r

      \  return mDiv(dParent, styles);\r

      }\r\n"
    sig: function stdColOverlapContainer(dParent, n, wGrid, wCell, styles){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  stdRowsColsContainer:
    name: stdRowsColsContainer
    code: "function stdRowsColsContainer(dParent, cols, styles = {}) {\r

      \  addKeys({\r

      \    margin: 'auto',\r

      \    padding: 10,\r

      \    gap: 10,\r

      \    display: 'grid',\r

      \    bg: 'green',\r

      \    'grid-template-columns': `repeat(${cols}, 1fr)`\r

      \  }, styles);\r

      \  return mDiv(dParent, styles);\r

      }\r\n"
    sig: function stdRowsColsContainer(dParent, cols, styles = {}){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  mAnimate:
    name: mAnimate
    code: "function mAnimate(elem, prop, valist, callback, msDuration = 1000, easing
      = 'cubic-bezier(1,-0.03,.86,.68)', delay = 0, forwards = 'none') {\r

      \  let kflist = [];\r

      \  for (const perc in valist) {\r

      \    let o = {};\r

      \    let val = valist[perc];\r

      \    o[prop] = isString(val) || prop == 'opacity' ? val : '' + val +
      'px';\r

      \    kflist.push(o);\r

      \  }\r

      \  let opts = { duration: msDuration, fill: forwards, easing:
      easing, delay: delay };\r

      \  let a = toElem(elem).animate(kflist, opts);\r

      \  if (isdef(callback)) { a.onfinish = callback; }\r

      \  return a;\r

      }\r\n"
    sig: function mAnimate(elem, prop, valist, callback, msDuration = 1000, easing =
      'cubic-bezier(1,-0.03,.86,.68)', delay = 0, forwards = 'none'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mAnimateTo:
    name: mAnimateTo
    code: "function mAnimateTo(elem, prop, val, callback, msDuration = 1000, easing
      = 'cubic-bezier(1,-0.03,.86,.68)', delay = 0) {\r

      \  let o = {};\r

      \  o[prop] = isString(val) || prop == 'opacity' ? val : '' + val +
      'px';\r

      \  let kflist = [o];\r

      \  let opts = { duration: msDuration, fill: 'forwards', easing:
      easing, delay: delay };\r

      \  let a = toElem(elem).animate(kflist, opts);\r

      \  if (isdef(callback)) { a.onfinish = callback; }\r

      \  return a;\r

      }\r\n"
    sig: function mAnimateTo(elem, prop, val, callback, msDuration = 1000, easing =
      'cubic-bezier(1,-0.03,.86,.68)', delay = 0){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mColFlex:
    name: mColFlex
    code: "function mColFlex(dParent, chflex = [1, 5, 1], bgs) {\r

      \  let styles = { opacity: 1, display: 'flex', aitems: 'stretch',
      'flex-flow': 'nowrap' };\r

      \  mStyle(dParent, styles);\r

      \  let res = [];\r

      \  for (let i = 0; i < chflex.length; i++) {\r

      \    let bg = isdef(bgs) ? bgs[i] : null;\r

      \    let d1 = mDiv(dParent, { flex: chflex[i], bg: bg });\r

      \    res.push(d1);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function mColFlex(dParent, chflex = [1, 5, 1], bgs){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mColorLetters:
    name: mColorLetters
    code: "function mColorLetters(s, brightness) {\r

      \  return toLetters(s).map(x => `<div
      style='display:inline-block;transform:rotate(${rChoose([10, 5, -10,
      -5])}deg);color:${rColor(brightness)}'>${x == ' ' ? '&nbsp;' :
      x}</div>`).join('');\r

      }\r\n"
    sig: function mColorLetters(s, brightness){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCreateFrom:
    name: mCreateFrom
    code: "function mCreateFrom(htmlString) {\r

      \  var div = document.createElement('div');\r

      \  div.innerHTML = htmlString.trim();\r

      \  return div.firstChild;\r

      }\r\n"
    sig: function mCreateFrom(htmlString){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDataTable:
    name: mDataTable
    code: "function mDataTable(reclist, dParent, rowstylefunc, headers, id,
      showheaders = true) {\r

      \  if (nundef(headers)) headers = get_keys(reclist[0]);\r

      \  let t = mTable(dParent, headers, showheaders);\r

      \  if (isdef(id)) t.id = `t${id}`;\r

      \  let rowitems = [];\r

      \  let i = 0;\r

      \  for (const u of reclist) {\r

      \    let rid = isdef(id) ? `r${id}_${i}` : null;\r

      \    r = mTableRow(t, u, headers, rid);\r

      \    if (isdef(rowstylefunc)) mStyle(r.div, rowstylefunc(u));\r

      \    rowitems.push({ div: r.div, colitems: r.colitems, o: u, id:
      rid, index: i });\r

      \    i++;\r

      \  }\r

      \  return { div: t, rowitems: rowitems };\r

      }\r\n"
    sig: function mDataTable(reclist, dParent, rowstylefunc, headers, id,
      showheaders = true){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDivItem:
    name: mDivItem
    code: "function mDivItem(dParent, styles, id, content) {\r

      \  if (nundef(id)) id = getUID();\r

      \  let d = mDiv(dParent, styles, id, content);\r

      \  return mItem(id, { div: d });\r

      }\r\n"
    sig: function mDivItem(dParent, styles, id, content){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFlexColumn:
    name: mFlexColumn
    code: "function mFlexColumn(d, or = 'h') {\r

      \  d = toElem(d);\r

      \  d.style.display = 'flex';\r

      \  d.style.flexFlow = (or == 'v' ? 'column' : 'row') + ' ' + (or ==
      'w' ? 'wrap' : 'nowrap');\r

      \  d.style.alignItems = 'stretch';\r

      \  d.style.alignContent = 'stretch';\r

      \  d.style.justiifyItems = 'stretch';\r

      \  d.style.justifyContent = 'stretch';\r

      }\r\n"
    sig: function mFlexColumn(d, or = 'h'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mForm:
    name: mForm
    code: "function mForm(dParent) {\r

      \  return mAppend(dParent, mCreate('form'));\r

      }\r\n"
    sig: function mForm(dParent){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mMagnifyOnHoverControl:
    name: mMagnifyOnHoverControl
    code: "function mMagnifyOnHoverControl(elem) {\r

      \  elem.onmouseenter = ev => { if (ev.ctrlKey) mClass(elem,
      'magnify_on_hover'); }\r

      \  elem.onmouseleave = ev => mClassRemove(elem,
      'magnify_on_hover');\r

      }\r\n"
    sig: function mMagnifyOnHoverControl(elem){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mMagnifyOnHoverControlRemove:
    name: mMagnifyOnHoverControlRemove
    code: "function mMagnifyOnHoverControlRemove(elem) {\r

      \  elem.onmouseenter = elem.onmouseleave = null;\r

      \  mClassRemove(elem, 'magnify_on_hover');\r

      }\r\n"
    sig: function mMagnifyOnHoverControlRemove(elem){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  recConvertLists:
    name: recConvertLists
    code: "function recConvertLists(o, maxlen = 25) {\r

      \  for (const k in o) {\r

      \    let val = o[k];\r

      \    if (isList(val)) {\r

      \      if (val.length > maxlen) val = val.slice(0,
      maxlen).toString() + '...';\r

      \      else val = val.toString();\r

      \      o[k] = val;\r

      \    } else if (isDict(val)) recConvertLists(val);\r

      \  }\r

      }\r\n"
    sig: function recConvertLists(o, maxlen = 25){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPopup:
    name: mPopup
    code: "function mPopup(content, dParent, styles, id) {\r

      \  if (isdef(mBy(id))) mRemove(id);\r

      \  mIfNotRelative(dParent);\r

      \  if (nundef(styles)) styles = { top: 0, left: 0 };\r

      \  styles.position = 'absolute';\r

      \  let d1 = mDiv(dParent, styles, valf(id, getUID()), content);\r

      \  return d1;\r

      }\r\n"
    sig: function mPopup(content, dParent, styles, id){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mRadioToggle:
    name: mRadioToggle
    code: "function mRadioToggle(label, val, dParent, styles = {}, is_on = true) {\r

      \  let cursor = styles.cursor; delete styles.cursor;\r

      \  let d = mDiv(dParent, styles);\r

      \  let id = getUID();\r

      \  let inp = mCreateFrom(`<input class='radio' id='${id}'
      type=\"checkbox\" checked=\"${is_on}\" value=\"${val}\" >`);\r

      \  let text = mCreateFrom(`<label for='${id}'>${label}</label>`);\r

      \  if (isdef(cursor)) { inp.style.cursor = text.style.cursor =
      cursor; }\r

      \  mAppend(d, inp);\r

      \  mAppend(d, text);\r

      \  return d;\r

      }\r\n"
    sig: function mRadioToggle(label, val, dParent, styles = {}, is_on = true){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mRadio1:
    name: mRadio1
    code: "function mRadio1(label, val, dParent, styles = {}, handler, group_id) {\r

      \  let cursor = styles.cursor; delete styles.cursor;\r

      \  let d = mDiv(dParent, styles, group_id + '_' + val);\r

      \  let inp = mCreateFrom(`<input class='radio'
      id='i_${group_id}_${val}' type=\"radio\" name=\"${group_id}\"
      value=\"${val}\" >`);\r

      \  let text = mCreateFrom(`<label
      for='${inp.id}'>${label}</label>`);\r

      \  if (isdef(cursor)) { inp.style.cursor = text.style.cursor =
      cursor; }\r

      \  mAppend(d, inp);\r

      \  mAppend(d, text);\r

      \  if (isdef(handler)) d.onclick = () => handler(val);\r

      \  return d;\r

      }\r\n"
    sig: function mRadio1(label, val, dParent, styles = {}, handler, group_id){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mShield:
    name: mShield
    code: "function mShield(dParent, styles = { bg: '#00000020' }, id = null,
      classnames = null, hideonclick = false) {\r

      \  dParent = toElem(dParent);\r

      \  let d = mDiv(dParent, styles, id, classnames);\r

      \  lookupAddIfToList(DA, ['shields'], d);\r

      \  mIfNotRelative(dParent);\r

      \  mStyle(d, { position: 'absolute', left: 0, top: 0, w: '100%', h:
      '100%' });\r

      \  if (hideonclick) d.onclick = ev => { evNoBubble(ev); d.remove();
      };\r

      \  else d.onclick = ev => { evNoBubble(ev); };\r

      \  mClass(d, 'topmost');\r

      \  return d;\r

      }\r\n"
    sig: "function mShield(dParent, styles = { bg: '#00000020' }, id = null,
      classnames = null, hideonclick = false){}"
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTable:
    name: mTable
    code: "function mTable(dParent, headers, showheaders, styles = { mabottom: 0 },
      className = 'table') {\r

      \  let d = mDiv(dParent);\r

      \  let t = mCreate('table');\r

      \  mAppend(d, t);\r

      \  if (isdef(className)) mClass(t, className);\r

      \  if (isdef(styles)) mStyle(t, styles);\r

      \  if (showheaders) {\r

      \    let code = `<tr>`;\r

      \    for (const h of headers) {\r

      \      code += `<th>${h}</th>`\r

      \    }\r

      \    code += `</tr>`;\r

      \    t.innerHTML = code;\r

      \  }\r

      \  return t;\r

      }\r\n"
    sig: "function mTable(dParent, headers, showheaders, styles = { mabottom: 0 },
      className = 'table'){}"
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSelectTableRow:
    name: mSelectTableRow
    code: "function mSelectTableRow(r, color = 'pink') {\r

      \  let t = r.parentNode;\r

      \  for (const ch of t.children) mStyle(ch, { background:
      'transparent' });\r

      \  mStyle(r, { background: color });\r

      }\r\n"
    sig: function mSelectTableRow(r, color = 'pink'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTableCol:
    name: mTableCol
    code: "function mTableCol(r, val) {\r

      \  let col = mCreate('td');\r

      \  mAppend(r, col);\r

      \  if (isdef(val)) col.innerHTML = val;\r

      \  return col;\r

      }\r\n"
    sig: function mTableCol(r, val){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTableHeader:
    name: mTableHeader
    code: "function mTableHeader(t, val) {\r

      \  let col = mCreate('th');\r

      \  mAppend(t.firstChild, col);\r

      \  col.innerHTML = val;\r

      \  return col;\r

      }\r\n"
    sig: function mTableHeader(t, val){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTableRow:
    name: mTableRow
    code: "function mTableRow(t, o, headers, id) {\r

      \  let elem = mCreate('tr');\r

      \  if (isdef(id)) elem.id = id;\r

      \  mAppend(t, elem);\r

      \  let colitems = [];\r

      \  for (const k of headers) {\r

      \    let val = isdef(o[k]) ? isDict(o[k]) ? JSON.stringify(o[k]) :
      isList(o[k]) ? o[k].join(', ') : o[k] : '';\r

      \    let col = mTableCol(elem, val);\r

      \    colitems.push({ div: col, key: k, val: val });\r

      \  }\r

      \  return { div: elem, colitems: colitems };\r

      }\r\n"
    sig: function mTableRow(t, o, headers, id){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTableCommandify:
    name: mTableCommandify
    code: "function mTableCommandify(rowitems, di) {\r

      \  for (const item of rowitems) {\r

      \    for (const index in di) {\r

      \      let colitem = item.colitems[index];\r

      \      colitem.div.innerHTML = di[index](item, colitem.val);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function mTableCommandify(rowitems, di){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTableCommandifyList:
    name: mTableCommandifyList
    code: "function mTableCommandifyList(rowitem, val, func) {\r

      \  let names = isString(val) ? val.replaceAll(' ', ',').split(',') :
      val;\r

      \  let html = '';\r

      \  for (const name of names) {\r

      \    html += func(rowitem, name);\r

      \  }\r

      \  return html;\r

      }\r\n"
    sig: function mTableCommandifyList(rowitem, val, func){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrExtend:
    name: arrExtend
    code: "function arrExtend(arr, list) { list.map(x => arr.push(x)); return arr;
      }\r\n"
    sig: function arrExtend(arr, list){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  draw_from_deck_to:
    name: draw_from_deck_to
    code: "function draw_from_deck_to(deck, arr) { top_elem_from_to(deck, arr);
      }\r\n"
    sig: function draw_from_deck_to(deck, arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  draw_from_deck_to_board:
    name: draw_from_deck_to_board
    code: "function draw_from_deck_to_board(deck, arr) { top_elem_from_to_top(deck,
      arr); }\r\n"
    sig: function draw_from_deck_to_board(deck, arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  return_elem_to_deck_from:
    name: return_elem_to_deck_from
    code: "function return_elem_to_deck_from(el, arr, deck) { elem_from_to(el, arr,
      deck); }\r\n"
    sig: function return_elem_to_deck_from(el, arr, deck){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  top_elem_from_to:
    name: top_elem_from_to
    code: "function top_elem_from_to(arr1, arr2) { arr2.push(arr1.shift()); }\r\n"
    sig: function top_elem_from_to(arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  top_elem_from_to_top:
    name: top_elem_from_to_top
    code: "function top_elem_from_to_top(arr1, arr2) { arr2.unshift(arr1.shift());
      }\r\n"
    sig: function top_elem_from_to_top(arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  last_elem_from_to:
    name: last_elem_from_to
    code: "function last_elem_from_to(arr1, arr2) { arr2.push(arr1.pop()); }\r\n"
    sig: function last_elem_from_to(arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bottom_elem_from_to:
    name: bottom_elem_from_to
    code: "function bottom_elem_from_to(arr1, arr2) { last_elem_from_to(arr1, arr2);
      }\r\n"
    sig: function bottom_elem_from_to(arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  bottom_elem_from_to_top:
    name: bottom_elem_from_to_top
    code: "function bottom_elem_from_to_top(arr1, arr2) { arr2.unshift(arr1.pop());
      }\r\n"
    sig: function bottom_elem_from_to_top(arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  elem_from_to:
    name: elem_from_to
    code: "function elem_from_to(el, arr1, arr2) { removeInPlace(arr1, el);
      arr2.push(el); }\r\n"
    sig: function elem_from_to(el, arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  elem_from_to_top:
    name: elem_from_to_top
    code: "function elem_from_to_top(el, arr1, arr2) { removeInPlace(arr1, el);
      arr2.unshift(el); }\r\n"
    sig: function elem_from_to_top(el, arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrRemove:
    name: arrRemove
    code: "function arrRemove(arr, listweg) {\r

      \  arrReplace(arr, listweg, []);\r

      }\r\n"
    sig: function arrRemove(arr, listweg){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrReplace:
    name: arrReplace
    code: "function arrReplace(arr, listweg, listdazu) {\r

      \  arrExtend(arr, listdazu);\r

      \  listweg.map(x => arrRemovip(arr, x));\r

      \  return arr;\r

      }\r\n"
    sig: function arrReplace(arr, listweg, listdazu){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrRemovip:
    name: arrRemovip
    code: "function arrRemovip(arr, el) {\r

      \  let i = arr.indexOf(el);\r

      \  if (i > -1) arr.splice(i, 1);\r

      \  return i;\r

      }\r\n"
    sig: function arrRemovip(arr, el){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrShufflip:
    name: arrShufflip
    code: "function arrShufflip(arr) { if (isEmpty(arr)) return []; else return
      fisherYates(arr); }\r\n"
    sig: function arrShufflip(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrZip:
    name: arrZip
    code: "function arrZip(arr1, arr2) {\r

      \  let res = [];\r

      \  for (let i = 0; i < Math.min(arr1, arr2); i++) {\r

      \    let o = {};\r

      \    addKeys(arr1[i], o);\r

      \    addKeys(arr2[i], o);\r

      \    res.push(o);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function arrZip(arr1, arr2){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  list2dict:
    name: list2dict
    code: "function list2dict(arr, keyprop = 'id', uniqueKeys = true) {\r

      \  let di = {};\r

      \  for (const a of arr) {\r

      \    if (uniqueKeys) lookupSet(di, [a[keyprop]], a);\r

      \    else lookupAddToList(di, [a[keyprop]], a);\r

      \  }\r

      \  return di;\r

      }\r\n"
    sig: function list2dict(arr, keyprop = 'id', uniqueKeys = true){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stripToKeys:
    name: stripToKeys
    code: "function stripToKeys(o, di) {\r

      \  let res = {};\r

      \  for (const k in o) {\r

      \    if (isdef(di[k])) res[k] = o[k];\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function stripToKeys(o, di){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorDark:
    name: colorDark
    code: "function colorDark(c, percent = 50, log = true) {\r

      \  if (nundef(c)) c = rColor(); else c = colorFrom(c);\r

      \  let zero1 = -percent / 100;\r

      \  return pSBC(zero1, c, undefined, !log);\r

      }\r\n"
    sig: function colorDark(c, percent = 50, log = true){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorFrom:
    name: colorFrom
    code: "function colorFrom(cAny, a, allowHsl = false) {\r

      \  if (isString(cAny)) {\r

      \    if (cAny[0] == '#') {\r

      \      if (a == undefined) return cAny;\r

      \      cAny = cAny.substring(0, 7);\r

      \      return cAny + (a == 1 ? '' : alphaToHex(a));\r

      \    } else if (isdef(ColorDi) && lookup(ColorDi, [cAny])) {\r

      \      let c = ColorDi[cAny].c;\r

      \      if (a == undefined) return c;\r

      \      c = c.substring(0, 7);\r

      \      return c + (a == 1 ? '' : alphaToHex(a));\r

      \    } else if (startsWith(cAny, 'rand')) {\r

      \      let spec = capitalize(cAny.substring(4));\r

      \      if (isdef(window['color' + spec])) {\r

      \        c = window['color' + spec]();\r

      \      } else c = rColor();\r

      \      if (a == undefined) return c;\r

      \      return c + (a == 1 ? '' : alphaToHex(a));\r

      \    } else if (startsWith(cAny, 'linear')) {\r

      \      return cAny;\r

      \    } else if (cAny[0] == 'r' && cAny[1] == 'g') {\r

      \      if (a == undefined) return cAny;\r

      \      if (cAny[3] == 'a') {\r

      \        if (a < 1) {\r

      \          return stringBeforeLast(cAny, ',') + ',' + a + ')';\r

      \        } else {\r

      \          let parts = cAny.split(',');\r

      \          let r = firstNumber(parts[0]);\r

      \          return 'rgb(' + r + ',' + parts[1] + ',' + parts[2] +
      ')';\r

      \        }\r

      \      } else {\r

      \        if (a < 1) {\r

      \          return 'rgba' + cAny.substring(3, cAny.length - 1) + ','
      + a + ')';\r

      \        } else {\r

      \          return cAny;\r

      \        }\r

      \      }\r

      \    } else if (cAny[0] == 'h' && cAny[1] == 's') {\r

      \      if (allowHsl) {\r

      \        if (a == undefined) return cAny;\r

      \        if (cAny[3] == 'a') {\r

      \          if (a < 1) {\r

      \            return stringBeforeLast(cAny, ',') + ',' + a + ')';\r

      \          } else {\r

      \            let parts = cAny.split(',');\r

      \            let r = firstNumber(parts[0]);\r

      \            return 'hsl(' + r + ',' + parts[1] + ',' + parts[2] +
      ')';\r

      \          }\r

      \        } else {\r

      \          return a == 1 ? cAny : 'hsla' + cAny.substring(3,
      cAny.length - 1) + ',' + a + ')';\r

      \        }\r

      \      } else {\r

      \        if (cAny[3] == 'a') {\r

      \          cAny = HSLAToRGBA(cAny);\r

      \        } else {\r

      \          cAny = HSLToRGB(cAny);\r

      \        }\r

      \        return colorFrom(cAny, a, false);\r

      \      }\r

      \    } else {\r

      \      ensureColorDict();\r

      \      let c = ColorDi[cAny];\r

      \      if (nundef(c)) {\r

      \        if (startsWith(cAny, 'rand')) {\r

      \          let spec = cAny.substring(4);\r

      \          if (isdef(window['color' + spec])) {\r

      \            c = window['color' + spec](res);\r

      \          } else c = rColor();\r

      \        } else {\r

      \          console.log('color not available:', cAny);\r

      \          throw new Error('color not found: ' + cAny)\r

      \          return '#00000000';\r

      \        }\r

      \      } else c = c.c;\r

      \      if (a == undefined) return c;\r

      \      c = c.substring(0, 7);\r

      \      return c + (a == 1 ? '' : alphaToHex(a));\r

      \    }\r

      \  } else if (Array.isArray(cAny)) {\r

      \    if (cAny.length == 3 && isNumber(cAny[0])) {\r

      \      let r = cAny[0];\r

      \      let g = cAny[1];\r

      \      let b = cAny[2];\r

      \      return a == undefined || a == 1 ? `rgb(${r},${g},${b})` :
      `rgba(${r},${g},${b},${a})`;\r

      \    } else {\r

      \      return rChoose(cAny);\r

      \    }\r

      \  } else if (typeof cAny == 'object') {\r

      \    if ('h' in cAny) {\r

      \      let hslString = '';\r

      \      if (a == undefined || a == 1) {\r

      \        hslString = `hsl(${cAny.h},${Math.round(cAny.s <= 1.0 ?
      cAny.s * 100 : cAny.s)}%,${Math.round(cAny.l <= 1.0 ? cAny.l * 100 :
      cAny.l)}%)`;\r

      \      } else {\r

      \        hslString = `hsla(${cAny.h},${Math.round(cAny.s <= 1.0 ?
      cAny.s * 100 : cAny.s)}%,${Math.round(cAny.l <= 1.0 ? cAny.l * 100 :
      cAny.l)}%,${a})`;\r

      \      }\r

      \      if (allowHsl) {\r

      \        return hslString;\r

      \      } else {\r

      \        return colorFrom(hslString, a, allowHsl);\r

      \      }\r

      \    } else if ('r' in cAny) {\r

      \      if (a !== undefined && a < 1) {\r

      \        return `rgba(${cAny.r},${cAny.g},${cAny.b},${a})`;\r

      \      } else {\r

      \        return `rgb(${cAny.r},${cAny.g},${cAny.b})`;\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function colorFrom(cAny, a, allowHsl = false){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorsFromBFA:
    name: colorsFromBFA
    code: "function colorsFromBFA(bg, fg, alpha) {\r

      \  if (fg == 'contrast') {\r

      \    if (bg != 'inherit') bg = colorFrom(bg, alpha);\r

      \    fg = colorIdealText(bg);\r

      \  } else if (bg == 'contrast') {\r

      \    fg = colorFrom(fg);\r

      \    bg = colorIdealText(fg);\r

      \  } else {\r

      \    if (isdef(bg) && bg != 'inherit') bg = colorFrom(bg, alpha);\r

      \    if (isdef(fg) && fg != 'inherit') fg = colorFrom(fg);\r

      \  }\r

      \  return [bg, fg];\r

      }\r\n"
    sig: function colorsFromBFA(bg, fg, alpha){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorFromHSL:
    name: colorFromHSL
    code: "function colorFromHSL(hue, sat = 100, lum = 50) {\r

      \  return hslToHex(valf(hue, rHue()), sat, lum);\r

      }\r\n"
    sig: function colorFromHSL(hue, sat = 100, lum = 50){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorLight:
    name: colorLight
    code: "function colorLight(c, percent = 20, log = true) {\r

      \  if (nundef(c)) {\r

      \    return colorFromHSL(rHue(), 100, 85);\r

      \  } else c = colorFrom(c);\r

      \  let zero1 = percent / 100;\r

      \  return pSBC(zero1, c, undefined, !log);\r

      }\r\n"
    sig: function colorLight(c, percent = 20, log = true){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ensureColorDict:
    name: ensureColorDict
    code: "function ensureColorDict() {\r

      \  if (isdef(ColorDi)) return;\r

      \  ColorDi = {};\r

      \  let names = getColorNames();\r

      \  let hexes = getColorHexes();\r

      \  for (let i = 0; i < names.length; i++) {\r

      \    ColorDi[names[i].toLowerCase()] = { c: '#' + hexes[i] };\r

      \  }\r

      \  const newcolors = {\r

      \    black: { c: '#000000', D: 'schwarz' },\r

      \    blue: { c: '#0000ff', D: 'blau' },\r

      \    BLUE: { c: '#4363d8', E: 'blue', D: 'blau' },\r

      \    BLUEGREEN: { c: '#004054', E: 'bluegreen', D: 'blaugrün' },\r

      \    BROWN: { c: '#96613d', E: 'brown', D: 'braun' },\r

      \    deepyellow: { c: '#ffed01', E: 'yellow', D: 'gelb' },\r

      \    FIREBRICK: { c: '#800000', E: 'darkred', D: 'rotbraun' },\r

      \    gold: { c: 'gold', D: 'golden' },\r

      \    green: { c: 'green', D: 'grün' },\r

      \    GREEN: { c: '#3cb44b', E: 'green', D: 'grün' },\r

      \    grey: { c: 'grey', D: 'grau' },\r

      \    lightblue: { c: 'lightblue', D: 'hellblau' },\r

      \    LIGHTBLUE: { c: '#42d4f4', E: 'lightblue', D: 'hellblau' },\r

      \    lightgreen: { c: 'lightgreen', D: 'hellgrün' },\r

      \    LIGHTGREEN: { c: '#afff45', E: 'lightgreen', D: 'hellgrün' },\r

      \    lightyellow: { c: '#fff620', E: 'lightyellow', D: 'gelb' },\r

      \    NEONORANGE: { c: '#ff6700', E: 'neonorange', D: 'neonorange'
      },\r

      \    NEONYELLOW: { c: '#efff04', E: 'neonyellow', D: 'neongelb' },\r

      \    olive: { c: 'olive', D: 'oliv' },\r

      \    OLIVE: { c: '#808000', E: 'olive', D: 'oliv' },\r

      \    orange: { c: 'orange', D: 'orange' },\r

      \    ORANGE: { c: '#f58231', E: 'orange', D: 'orange' },\r

      \    PINK: { c: 'deeppink', D: 'rosa' },\r

      \    pink: { c: 'pink', D: 'rosa' },\r

      \    purple: { c: 'purple', D: 'lila' },\r

      \    PURPLE: { c: '#911eb4', E: 'purple', D: 'lila' },\r

      \    red: { c: 'red', D: 'rot' },\r

      \    RED: { c: '#e6194B', E: 'red', D: 'rot' },\r

      \    skyblue: { c: 'skyblue', D: 'himmelblau' },\r

      \    SKYBLUE: { c: 'deepskyblue', D: 'himmelblau' },\r

      \    teal: { c: '#469990', D: 'blaugrün' },\r

      \    TEAL: { c: '#469990', E: 'teal', D: 'blaugrün' },\r

      \    transparent: { c: '#00000000', E: 'transparent', D:
      'transparent' },\r

      \    violet: { c: 'violet', E: 'violet', D: 'violett' },\r

      \    VIOLET: { c: 'indigo', E: 'violet', D: 'violett' },\r

      \    white: { c: 'white', D: 'weiss' },\r

      \    yellow: { c: 'yellow', D: 'gelb' },\r

      \    yelloworange: { c: '#ffc300', E: 'yellow', D: 'gelb' },\r

      \    YELLOW: { c: '#ffe119', E: 'yellow', D: 'gelb' },\r

      \  };\r

      \  for (const k in newcolors) {\r

      \    let cnew = newcolors[k];\r

      \    if (cnew.c[0] != '#' && isdef(ColorDi[cnew.c])) cnew.c =
      ColorDi[cnew.c].c;\r

      \    ColorDi[k] = cnew;\r

      \  }\r

      }\r\n"
    sig: function ensureColorDict(){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hslToHex:
    name: hslToHex
    code: "function hslToHex(h, s, l) {\r

      \  l /= 100;\r

      \  const a = s * Math.min(l, 1 - l) / 100;\r

      \  const f = n => {\r

      \    const k = (n + h / 30) % 12;\r

      \    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1),
      -1);\r

      \    return Math.round(255 * color).toString(16).padStart(2, '0');\r

      \  };\r

      \  return `#${f(0)}${f(8)}${f(4)}`;\r

      }\r\n"
    sig: function hslToHex(h, s, l){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rAlphanums:
    name: rAlphanums
    code: "function rAlphanums(n) { return
      rChoose(toLetters('0123456789abcdefghijklmnopq'), n); }\r\n"
    sig: function rAlphanums(n){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rCoin:
    name: rCoin
    code: "function rCoin(percent = 50) {\r

      \  let r = Math.random();\r

      \  r *= 100;\r

      \  return r < percent;\r

      }\r\n"
    sig: function rCoin(percent = 50){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rChoose:
    name: rChoose
    code: "function rChoose(arr, n = 1, func = null, exceptIndices = null) {\r

      \  let indices = arrRange(0, arr.length - 1);\r

      \  if (isdef(exceptIndices)) {\r

      \    for (const i of exceptIndices) removeInPlace(indices, i);\r

      \  }\r

      \  if (isdef(func)) indices = indices.filter(x => func(arr[x]));\r

      \  if (n == 1) {\r

      \    let idx = Math.floor(Math.random() * indices.length);\r

      \    return arr[indices[idx]];\r

      \  }\r

      \  arrShufflip(indices);\r

      \  return indices.slice(0, n).map(x => arr[x]);\r

      }\r\n"
    sig: function rChoose(arr, n = 1, func = null, exceptIndices = null){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rColor:
    name: rColor
    code: "function rColor(cbrightness, c2, alpha = null) {\r

      \  if (isdef(c2)) {\r

      \    let c = colorMix(cbrightness, c2, rNumber(0, 100));\r

      \    return colorTrans(c, alpha ?? Math.random());\r

      \  }\r

      \  if (isdef(cbrightness)) {\r

      \    let hue = rHue();\r

      \    let sat = 100;\r

      \    let b = isNumber(cbrightness) ? cbrightness : cbrightness ==
      'dark' ? 25 : cbrightness == 'light' ? 75 : 50;\r

      \    return colorFromHSL(hue, sat, b);\r

      \  }\r

      \  let s = '#';\r

      \  for (let i = 0; i < 6; i++) {\r

      \    s += rChoose(['f', 'c', '9', '6', '3', '0']);\r

      \  }\r

      \  return s;\r

      }\r\n"
    sig: function rColor(cbrightness, c2, alpha = null){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rHue:
    name: rHue
    code: "function rHue() { return (rNumber(0, 36) * 10) % 360; }\r\n"
    sig: function rHue(){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rLetter:
    name: rLetter
    code: "function rLetter(except) { return rLetters(1, except)[0]; }\r\n"
    sig: function rLetter(except){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rLetters:
    name: rLetters
    code: "function rLetters(n, except = []) {\r

      \  let all = 'abcdefghijklmnopqrstuvwxyz';\r

      \  for (const l of except) all = all.replace(l, '');\r

      \  console.log('all', all, except)\r

      \  return rChoose(toLetters(all), n);\r

      }\r\n"
    sig: function rLetters(n, except = []){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rNumber:
    name: rNumber
    code: "function rNumber(min = 0, max = 100) {\r

      \  return Math.floor(Math.random() * (max - min + 1)) + min;\r

      }\r\n"
    sig: function rNumber(min = 0, max = 100){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rPrimaryColor:
    name: rPrimaryColor
    code: "function rPrimaryColor() { let c = '#' + rChoose(['ff', '00']) +
      rChoose(['ff', '00']); c += c == '#0000' ? 'ff' : c == '#ffff' ? '00' :
      rChoose(['ff', '00']); return c; }\r\n"
    sig: function rPrimaryColor(){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  normalize_string:
    name: normalize_string
    code: "function normalize_string(s, sep = '_') {\r

      \  s = s.toLowerCase().trim();\r

      \  let res = '';\r

      \  for (let i = 0; i < s.length; i++) { if (isAlphaNum(s[i])) res +=
      s[i]; else if (s[i] == ' ') res += sep; }\r

      \  return res;\r

      }\r\n"
    sig: function normalize_string(s, sep = '_'){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  plural:
    name: plural
    code: "function plural(n) { return n == 0 || n > 1 ? 's' : ''; }\r\n"
    sig: function plural(n){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  splitIntoNumbersAndWords:
    name: splitIntoNumbersAndWords
    code: "function splitIntoNumbersAndWords(s) {\r

      \  let arr = [], i = 0;\r

      \  while (i < s.length) {\r

      \    let ch = s[i];\r

      \    let w = '';\r

      \    if (isDigit(ch)) while (i < s.length && isDigit(ch)) { w += ch;
      i++; ch = s[i]; }\r

      \    else if (isLetter(ch)) while (i < s.length && isLetter(ch)) { w
      += ch; i++; ch = s[i]; }\r

      \    else { i++; continue; }\r

      \    arr.push(w);\r

      \  }\r

      \  return arr;\r

      }\r\n"
    sig: function splitIntoNumbersAndWords(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  jsClean:
    name: jsClean
    code: "function jsClean(o) {\r

      \  if (nundef(o)) return o;\r

      \  else if (isDOM(o)) return null;\r

      \  else if (isLiteral(o)) return o;\r

      \  else if (isList(o)) {\r

      \    let onew = o.map(x => jsClean(x));\r

      \    return onew.filter(x => x !== null);\r

      \  } else if (isDict(o)) {\r

      \    for (const k in o) o[k] = jsClean(o[k]);\r

      \    let onew = {};\r

      \    for (const k in o) if (o[k] !== null) onew[k] = o[k];\r

      \    return onew;\r

      \  }\r

      }\r\n"
    sig: function jsClean(o){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_user_spectating:
    name: is_user_spectating
    code: "function is_user_spectating(g) { return isdef(U) &&
      !g.plorder.includes(U.name); }\r\n"
    sig: function is_user_spectating(g){}
    region: var (showtable.js)
    filename: showtable.js
    type: func
    fname: showtable.js
    path: C:\xampp\htdocs\aroot\simple\showtable.js
    datetime: 2022-04-29-06-56
    timestamp: 1651240582187.3123
    size: 5155
  gamestep:
    name: gamestep
    code: "function gamestep() {\r

      \  show_admin_ui();\r

      \  DA.running = true; clear_screen(); dTable = mBy('dTable');
      mClass('dTexture', 'wood');\r

      \  if (Z.game == 'aristo') { if (Z.role != Clientdata.role || Z.mode
      == 'multi' && Z.role != 'active') mFall(dTable); Clientdata.role = Z.role;
      }\r

      \  else mFall(dTable);\r

      \  shield_off();\r

      \  show_title();\r

      \  show_role();\r

      \  Z.func.present(dTable);  \r

      \  if (isdef(Z.scoring.winners)) { show_winners();
      animatedTitle('GAMEOVER!'); }\r

      \  else if (Z.func.check_gameover(Z)) {\r

      \    let winners = show_winners();\r

      \    Z.scoring = { winners: winners }\r

      \    sendgameover(winners[0], Z.friendly, Z.fen, Z.scoring);\r

      \  } else if (is_shield_mode()) {\r

      \    staticTitle();\r

      \    if (!DA.no_shield == true) { hide('bRestartMove'); shield_on();
      } \r

      \    autopoll();\r

      \  } else {\r

      \    Z.A = { level: 0, di: {}, ll: [], items: [], selected: [],
      tree: null, breadcrumbs: [], sib: [], command: null, autosubmit:
      Config.autosubmit };\r

      \    copyKeys(jsCopy(Z.fen), Z);\r

      \    copyKeys(UI, Z);\r

      \    activate_ui(Z);\r

      \    Z.func.activate_ui();\r

      \    if (Z.isWaiting == true || Z.mode != 'multi') staticTitle();
      else animatedTitle();\r

      \    if (Z.options.zen_mode != 'yes' && Z.mode != 'hotseat' &&
      Z.fen.keeppolling && Z.uplayer_data.player_status != 'stop') {\r

      \      autopoll();\r

      \      console.log('gamestep autopoll'); \r

      \    }\r

      \  }\r

      \  if (TESTING == true) landing();  \r

      }\r\n"
    sig: function gamestep(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  is_ai_player:
    name: is_ai_player
    code: "function is_ai_player(plname) {\r

      \  let [fen, name] = [Z.fen, valf(plname, Z.uplayer)];\r

      \  return lookup(fen, ['players', name, 'playmode']) == 'bot';\r

      }\r\n"
    sig: function is_ai_player(plname){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  ai_schummler:
    name: ai_schummler
    code: "function ai_schummler() { }\r\n"
    sig: function ai_schummler(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  ai_move:
    name: ai_move
    code: "function ai_move(ms = 100) {\r

      \  DA.ai_is_moving = true;\r

      \  let [A, fen] = [valf(Z.A, {}), Z.fen];\r

      \  let selitems;\r

      \  if (Z.game == 'ferro') {\r

      \    if (Z.stage == 'card_selection') {\r

      \      let uplayer = Z.uplayer;\r

      \      let i1 = firstCond(A.items, x =>
      x.path.includes(`${uplayer}.hand`));\r

      \      let i2 = firstCond(A.items, x => x.key == 'discard');\r

      \      selitems = [i1, i2];\r

      \    } else if (Z.stage == 'buy_or_pass') {\r

      \      selitems = [A.items[1]]; \r

      \    } else selitems = [A.items[0]];\r

      \  } else if (Z.game == 'bluff') {\r

      \    let [newbid, handler] = bluff_ai();\r

      \    if (newbid) { fen.newbid = newbid; UI.dAnzeige.innerHTML =
      bid_to_string(newbid); }\r

      \    else if (handler != handle_gehtHoch) {
      bluff_generate_random_bid(); }\r

      \    A.callback = handler;\r

      \    selitems = [];\r

      \  } else if (A.command == 'trade') {\r

      \    selitems = ai_pick_legal_trade();\r

      \  } else if (A.command == 'exchange') {\r

      \    selitems = ai_pick_legal_exchange();\r

      \  } else if (A.command == 'upgrade') {\r

      \    selitems = [rChoose(A.items)];\r

      \  } else if (A.command == 'rumor') {\r

      \    selitems = [];\r

      \    let buildings = A.items.filter(x =>
      x.path.includes('building'));\r

      \    let rumors = A.items.filter(x =>
      !x.path.includes('building'));\r

      \    selitems = [rChoose(buildings), rChoose(rumors)];\r

      \  } else if (ARI.stage[Z.stage] == 'rumors_weitergeben') {\r

      \    let players = A.items.filter(x => Z.plorder.includes(x.key))\r

      \    let rumors = A.items.filter(x => !Z.plorder.includes(x.key))\r

      \    selitems = [rChoose(players), rChoose(rumors)];\r

      \  } else if (ARI.stage[Z.stage] == 'journey') {\r

      \    selitems = []; \r

      \  } else {\r

      \    let items = A.items;\r

      \    let nmin = A.minselected;\r

      \    let nmax = Math.min(A.maxselected, items.length);\r

      \    let nselect = rNumber(nmin, nmax);\r

      \    selitems = rChoose(items, nselect); if (!isList(selitems))
      selitems = [selitems];\r

      \  }\r

      \  for (const item of selitems) {\r

      \    select_last(item, select_toggle);\r

      \    if (isdef(item.submit_on_click)) A.selected.pop();\r

      \  }\r

      \  clearTimeout(TO.ai);\r

      \  loader_on();\r

      \  TO.ai = setTimeout(() => { if (isdef(A.callback)) A.callback();
      loader_off(); }, ms);\r

      }\r\n"
    sig: function ai_move(ms = 100){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  show_table_for:
    name: show_table_for
    code: "function show_table_for(g, dParent, uname) {\r

      \  show_title(g.friendly);\r

      \  let spectating = !g.fen.plorder.includes(uname);\r

      \  let playername = spectating ? g.turn[0] : uname;\r

      \  show_settings(g, playername);\r

      \  show_user();\r

      \  show_message(g.fen.message);\r

      \  show_instruction(isdef(g.expected[uname]) ? g.fen.instruction :
      g.fen.plorder.includes(uname) ? 'NOT YOUR TURN' : 'Spectating');\r

      \  g.func.present(g, dParent, playername);\r

      }\r\n"
    sig: function show_table_for(g, dParent, uname){}
    region: var (showtable.js)
    filename: showtable.js
    type: func
    fname: showtable.js
    path: C:\xampp\htdocs\aroot\simple\showtable.js
    datetime: 2022-04-29-06-56
    timestamp: 1651240582187.3123
    size: 5155
  sendgameover:
    name: sendgameover
    code: "function sendgameover(plname, friendly, fen, scoring) {\r

      \  let o = { winners: plname, friendly: friendly, fen: fen, scoring:
      scoring };\r

      \  phpPost(o, 'gameover');\r

      }\r\n"
    sig: function sendgameover(plname, friendly, fen, scoring){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  sendmove:
    name: sendmove
    code: "function sendmove(plname, friendly, fen, action, expected, phase, round,
      step, stage, notes, scoring = {}) {\r

      \  deactivate_ui();\r

      \  clear_timeouts();\r

      \  let o = { uname: plname, friendly: friendly, fen: fen, action:
      action, expected: expected, phase: phase, round: round, step: step, stage:
      stage, notes: notes, scoring: scoring };\r

      \  if (DA.simulate) phpPostSimulate(o, 'move'); else phpPost(o,
      'move');\r

      }\r\n"
    sig: function sendmove(plname, friendly, fen, action, expected, phase, round,
      step, stage, notes, scoring = {}){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\easy\start.js
    datetime: 2022-07-19-14-04
    timestamp: 1658264674358.299
    size: 12459
  create_card_assets_c52:
    name: create_card_assets_c52
    code: "function create_card_assets_c52() {\r

      \  let ranknames = { A: 'Ace', K: 'King', T: '10', J: 'Jack', Q:
      'Queen' };\r

      \  let suitnames = { S: 'Spades', H: 'Hearts', C: 'Clubs', D:
      'Diamonds' };\r

      \  let rankstr = '23456789TJQKA';\r

      \  let suitstr = 'SHDC';\r

      \  sz = 100;\r

      \  let di = {};\r

      \  for (const r of toLetters(rankstr)) {\r

      \    for (const s of toLetters(suitstr)) {\r

      \      let k = r + s;\r

      \      let info = di[k] = { key: k, val: 1, irank:
      rankstr.indexOf(r), isuit: suitstr.indexOf(s), rank: r, suit: s, color:
      RED, c52key: 'card_' + r + s, w: sz * .7, h: sz, sz: sz, ov: .25,
      friendly: `${isNumber(r) ? r : ranknames[r]} of ${suitnames[s]}`, short:
      `${r}${s}` };\r

      \      info.isort = info.isuit * 13 + info.irank;\r

      \    }\r

      \  }\r

      \  C52Cards = di;\r

      \  return di;\r

      }\r\n"
    sig: function create_card_assets_c52(){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  add_a_schwein:
    name: add_a_schwein
    code: "function add_a_schwein(fen, uname) {\r

      \  let type = rChoose(['farm', 'estate', 'chateau']);\r

      \  let keys = deck_deal(fen.deck, type[0] == 'f' ? 4 : type[0] ==
      'e' ? 5 : 6);\r

      \  fen.players[uname].buildings[type].push({ list: keys, h: null
      });\r

      }\r\n"
    sig: function add_a_schwein(fen, uname){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  get_container_styles:
    name: get_container_styles
    code: "function get_container_styles(styles = {}) { let defaults =
      valf(Config.ui.container, {}); defaults.position = 'relative';
      addKeys(defaults, styles); return styles; }\r\n"
    sig: function get_container_styles(styles = {}){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_containertitle_styles:
    name: get_containertitle_styles
    code: "function get_containertitle_styles(styles = {}) { let defaults =
      valf(Config.ui.containertitle, {}); defaults.position = 'absolute';
      addKeys(defaults, styles); return styles; }\r\n"
    sig: function get_containertitle_styles(styles = {}){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  pop_top:
    name: pop_top
    code: "function pop_top(o) {\r

      \  if (isEmpty(o.list)) return null;\r

      \  let t = o.get_topcard();\r

      \  o.list.shift();\r

      \  o.renew(o.list, o.cardcontainer, o.items, o.get_card_func);\r

      \  return t;\r

      }\r\n"
    sig: function pop_top(o){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  remove_card_shadow:
    name: remove_card_shadow
    code: "function remove_card_shadow(c) { iDiv(c).firstChild.setAttribute('class',
      null); }\r\n"
    sig: function remove_card_shadow(c){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_card_border:
    name: set_card_border
    code: "function set_card_border(item, thickness = 1, color = 'black', dasharray)
      {\r

      \  let d = iDiv(item);\r

      \  let rect = lastDescendantOfType('rect', d);\r

      \  assertion(rect, 'NO RECT FOUND IN ELEM', d);\r

      \  if (rect) {\r

      \    rect.setAttribute('stroke-width', thickness);\r

      \    rect.setAttribute('stroke', color);\r

      \    if (isdef(dasharray)) rect.setAttribute('stroke-dasharray',
      dasharray);\r

      \  }\r

      }\r\n"
    sig: function set_card_border(item, thickness = 1, color = 'black', dasharray){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_card_style_works:
    name: set_card_style_works
    code: "function set_card_style_works(c, styles, className) {\r

      \  let d = iDiv(c);\r

      \  mStyle(d, styles);\r

      \  d.firstChild.setAttribute('class', className);\r

      }\r\n"
    sig: function set_card_style_works(c, styles, className){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  spread_hand:
    name: spread_hand
    code: "function spread_hand(path, ov) {\r

      \  let hand = lookup(UI, path.split('.'));\r

      \  assertion(hand, 'hand does NOT exist', path);\r

      \  if (hand.ctype != 'hand') return;\r

      \  if (isEmpty(hand.items)) return;\r

      \  let card = hand.items[0];\r

      \  if (nundef(ov)) ov = card.ov;\r

      \  if (hand.ov == ov) return;\r

      \  hand.ov = ov;\r

      \  let cont = hand.cardcontainer;\r

      \  let items = hand.items;\r

      \  mContainerSplay(cont, hand.splay, card.w, card.h, items.length,
      ov * card.w);\r

      }\r\n"
    sig: function spread_hand(path, ov){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  to_aristocard:
    name: to_aristocard
    code: "function to_aristocard(ckey, sz = 100, color = RED, w) {\r

      \  let info = jsCopy(C52Cards[ckey.substring(0, 2)]);\r

      \  info.key = ckey;\r

      \  info.cardtype = ckey[2];\r

      \  let [r, s] = [info.rank, info.suit];\r

      \  info.val = r == 'A' ? 1 : 'TJQK'.includes(r) ? 10 : Number(r);\r

      \  info.color = color;\r

      \  info.sz = info.h = sz;\r

      \  info.w = valf(w, sz * .7);\r

      \  info.irank = 'A23456789TJQK'.indexOf(r);\r

      \  info.isuit = 'SHCD'.indexOf(s);\r

      \  info.isort = info.isuit * 13 + info.irank;\r

      \  return info;\r

      }\r\n"
    sig: function to_aristocard(ckey, sz = 100, color = RED, w){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  to_luxurycard:
    name: to_luxurycard
    code: "function to_luxurycard(ckey, sz = 100, color = 'gold', w) { return
      to_aristocard(ckey, sz, color); }\r\n"
    sig: function to_luxurycard(ckey, sz = 100, color = 'gold', w){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  to_commissioncard:
    name: to_commissioncard
    code: "function to_commissioncard(ckey, sz = 40, color = GREEN, w) { return
      to_aristocard(ckey, sz, color); }\r\n"
    sig: function to_commissioncard(ckey, sz = 40, color = GREEN, w){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_add_container_title:
    name: ui_add_container_title
    code: "function ui_add_container_title(title, cont, items, show_if_empty) {\r

      \  if (isdef(title) && (!isEmpty(items) || show_if_empty)) {\r

      \    let st = get_containertitle_styles();\r

      \    let stmeasure = jsCopy(st); delete stmeasure.position;\r

      \    let elem = mText(title, cont, stmeasure);\r

      \    let sz = getSizeNeeded(elem);\r

      \    let offsetx = valf(st.left, 0);\r

      \    let cont_wmin = mGetStyle(cont, 'wmin');\r

      \    let my_min = sz.w + offsetx * 1.5;\r

      \    let wmin = !isNumber(cont_wmin) ? my_min :
      Math.max(valf(cont_wmin, 0), my_min);\r

      \    mStyle(cont, { wmin: wmin });\r

      \    mStyle(elem, st);\r

      \  }\r

      }\r\n"
    sig: function ui_add_container_title(title, cont, items, show_if_empty){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mAppear:
    name: mAppear
    code: "function mAppear(d, ms = 800, callback = null) { return mAnimateTo(d,
      'opacity', 1, callback, ms); }\r\n"
    sig: function mAppear(d, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFade:
    name: mFade
    code: "function mFade(d, ms = 800, callback = null) { return mAnimateTo(d,
      'opacity', 0, callback, ms); }\r\n"
    sig: function mFade(d, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFadeRemove:
    name: mFadeRemove
    code: "function mFadeRemove(d, ms = 800, callback = null) { return mAnimateTo(d,
      'opacity', 0, () => { mRemove(d); if (callback) callback(); }, ms); }\r\n"
    sig: function mFadeRemove(d, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFadeClear:
    name: mFadeClear
    code: "function mFadeClear(d, ms = 800, callback = null) { return mAnimateTo(d,
      'opacity', 0, () => { mClear(d); if (callback) callback(); }, ms); }\r\n"
    sig: function mFadeClear(d, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFadeClearShow:
    name: mFadeClearShow
    code: "function mFadeClearShow(d, ms = 800, callback = null) { return
      mAnimate(d, 'opacity', [1, 0], () => { mClear(d); if (callback)
      callback(); }, ms); }\r\n"
    sig: function mFadeClearShow(d, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFall:
    name: mFall
    code: "function mFall(d, ms = 800, dist = 50) { toElem(d).animate([{ opacity: 0,
      transform: `translateY(-${dist}px)` }, { opacity: 1, transform:
      'translateY(0px)' },], { fill: 'both', duration: ms, easing: 'ease' });
      }\r\n"
    sig: function mFall(d, ms = 800, dist = 50){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPulse:
    name: mPulse
    code: "function mPulse(d, ms, callback = null) { mClass(d, 'onPulse');
      TO[getUID()] = setTimeout(() => { mClassRemove(d, 'onPulse'); if
      (callback) callback(); }, ms); }\r\n"
    sig: function mPulse(d, ms, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mHide:
    name: mHide
    code: "function mHide(d, ms = 0) { if (ms > 0) mFade(d, ms); else mStyle(d, {
      opacity: 0 }); }\r\n"
    sig: function mHide(d, ms = 0){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mShow:
    name: mShow
    code: "function mShow(d, ms = 0) { if (ms > 0) mAppear(d, ms); else mStyle(d, {
      opacity: 1 }); }\r\n"
    sig: function mShow(d, ms = 0){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mRise:
    name: mRise
    code: "function mRise(d, ms = 800) {\r

      \  toElem(d).animate([{ opacity: 0, transform: 'translateY(50px)' },
      { opacity: 1, transform: 'translateY(0px)' },], { fill: 'both', duration:
      ms, easing: 'ease' });\r

      }\r\n"
    sig: function mRise(d, ms = 800){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mShrink:
    name: mShrink
    code: "function mShrink(d, x = .75, y = .75, ms = 800, callback = null) {\r

      \  let anim = toElem(d).animate([{ transform: `scale(${1},${1})` },
      { transform: `scale(${x},${y})` },], { fill: 'both', duration: ms, easing:
      'ease' });\r

      \  anim.onfinish = callback;\r

      }\r\n"
    sig: function mShrink(d, x = .75, y = .75, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mShrinkUp:
    name: mShrinkUp
    code: "function mShrinkUp(d, x = .75, y = 0, ms = 800, callback = null) {\r

      \  let anim = toElem(d).animate([{ transform: `scale(${1},${1})`,
      opacity: 1 }, { transform: `scale(${x},${y})`, opacity: 0 },], { fill:
      'none', duration: ms, easing: 'ease' });\r

      \  anim.onfinish = mClear(d);\r

      }\r\n"
    sig: function mShrinkUp(d, x = .75, y = 0, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTranslate:
    name: mTranslate
    code: "function mTranslate(child, newParent, ms = 800, callback = null) {\r

      \  let [dx, dy] = get_screen_distance(child, newParent);\r

      \  onend = () => { mAppend(newParent, child); if (callback)
      callback(); };\r

      \  mAnimate(child, 'transform', [`translateX(${dx}px)
      translateY(${dy}px)`], onend, ms, 'ease');\r

      }\r\n"
    sig: function mTranslate(child, newParent, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mScale:
    name: mScale
    code: "function mScale(d, scale) { mStyle(d, { 'transform-origin': 'top',
      transform: `scale(${scale})` }); }\r\n"
    sig: function mScale(d, scale){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mShrinkTranslate:
    name: mShrinkTranslate
    code: "function mShrinkTranslate(child, scale, newParent, ms = 800, callback)
      {\r

      \  let [dx, dy] = get_screen_distance(child, newParent);\r

      \  mAnimate(child, 'transform', [`translateX(${dx}px)
      translateY(${dy}px) scale(${scale})`], callback, ms, 'ease');\r

      }\r\n"
    sig: function mShrinkTranslate(child, scale, newParent, ms = 800, callback){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  indexDiff:
    name: indexDiff
    code: "function indexDiff(a, b, s) {\r

      \  let ia = s.indexOf(a);\r

      \  let ib = s.indexOf(b);\r

      \  console.log('index of', a, 'is', ia)\r

      \  console.log('index of', b, 'is', ib)\r

      \  return ia - ib;\r

      }\r\n"
    sig: function indexDiff(a, b, s){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  sort_cards_orig:
    name: sort_cards_orig
    code: "function sort_cards_orig(hand, bysuit = true, byrank = true) {\r

      \  let ranked = hand.map(x => ({ x: x, r: x[0], s: x[1] }));\r

      \  let rankstr = 'A23456789TJQK';\r

      \  if (bysuit && byrank) {\r

      \    sortByFunc(ranked, x => 3 * x.s.charCodeAt(0) + 2 *
      rankstr.indexOf(x.r));\r

      \  } else if (bysuit) {\r

      \    sortByFunc(ranked, x => x.s.charCodeAt(0));\r

      \  } else if (byrank) {\r

      \    sortByFunc(ranked, x => rankstr.indexOf(x.r));\r

      \  }\r

      \  return ranked.map(x => x.x);\r

      }\r\n"
    sig: function sort_cards_orig(hand, bysuit = true, byrank = true){}
    region: cards (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  clearStatus:
    name: clearStatus
    code: "function clearStatus() { clearFleetingMessage(); }\r\n"
    sig: function clearStatus(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  generate_table_name:
    name: generate_table_name
    code: "function generate_table_name(n) {\r

      \  let existing = Serverdata.tables.map(x => x.friendly);\r

      \  while (true) {\r

      \    let cap = rChoose(Info.capital);\r

      \    let parts = cap.split(' ');\r

      \    if (parts.length == 2) cap = stringBefore(cap, ' '); else cap =
      stringBefore(cap, '-');\r

      \    cap = cap.trim();\r

      \    let s = (n == 2 ? 'duel of ' : rChoose(['battle of ', 'war of
      '])) + cap;\r

      \    if (!existing.includes(s)) return s;\r

      \  }\r

      }\r\n"
    sig: function generate_table_name(n){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_checked_radios:
    name: get_checked_radios
    code: "function get_checked_radios(rg) {\r

      \  let inputs = rg.getElementsByTagName('INPUT');\r

      \  let list = [];\r

      \  for (const ch of inputs) {\r

      \    let checked = ch.getAttribute('checked');\r

      \    if (ch.checked) list.push(ch.value);\r

      \  }\r

      \  return list;\r

      }\r\n"
    sig: function get_checked_radios(rg){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_next_player:
    name: get_next_player
    code: "function get_next_player(g, uname) {\r

      \  let plorder = g.fen.plorder;\r

      \  let iturn = plorder.indexOf(uname);\r

      \  let nextplayer = plorder[(iturn + 1) % plorder.length];\r

      \  return nextplayer;\r

      }\r\n"
    sig: function get_next_player(g, uname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hFunc:
    name: hFunc
    code: "function hFunc(content, funcname, arg1, arg2, arg3) {\r

      \  let html = `<a style='color:blue'
      href=\"javascript:${funcname}('${arg1}','${arg2}','${arg3}');\">${content\
      }</a>`;\r

      \  return html;\r

      }\r\n"
    sig: function hFunc(content, funcname, arg1, arg2, arg3){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hide_options_popup:
    name: hide_options_popup
    code: "function hide_options_popup() {\tlet d = mBy('dOptions');\tif (isdef(d))
      mRemove(d);}\r\n"
    sig: function hide_options_popup(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  rPlayerOrder:
    name: rPlayerOrder
    code: "function rPlayerOrder(players) { return shuffle(jsCopy(players)); }\r\n"
    sig: function rPlayerOrder(players){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_settings_orig:
    name: show_settings_orig
    code: "function show_settings_orig(options) {\r

      \  clearElement('dTitleRight');\r

      \  let dParent = mDiv(mBy('dTitleRight'), { display: 'flex', fg:
      'red' }, null, options.mode == 'hotseat' ? 'h' : '');\r

      \  let d = miPic('gear', dParent, { fz: 20, padding: 6, h: 40, box:
      true, matop: 2, rounding: '50%', cursor: 'pointer' });\r

      \  d.onmouseenter = () => show_options_popup(options);\r

      \  d.onmouseleave = hide_options_popup;\r

      }\r\n"
    sig: function show_settings_orig(options){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_medium_ui:
    name: show_medium_ui
    code: "function show_medium_ui() { DA.testing = false; hide('dButtons');
      hide('dTest0'); hide('dTopAdvanced'); toggle_games_off(); } \r\n"
    sig: function show_medium_ui(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_simple_ui_orig:
    name: show_simple_ui_orig
    code: "function show_simple_ui_orig() {\r

      \  DA.testing = false;\r

      \  hide('dButtons');\r

      \  hide('dTest0');\r

      \  hide('dTopAdvanced');\r

      \  toggle_games_off();\r

      \  toggle_tables_off();\r

      \  toggle_users_on();\r

      }\r\n"
    sig: function show_simple_ui_orig(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_advanced_ui:
    name: show_advanced_ui
    code: "function show_advanced_ui() {\r

      \  show('dButtons');\r

      \  show('dTest0');\r

      \  show('dTopAdvanced');\r

      \  DA.testing = true;\r

      \  DA.test = { iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [100, 101] };\r

      \  DA.test.list = arrRange(100, 101); \r

      \  DA.test.number = 306; \r

      \  DA.staged_moves = []; DA.iter = 100; DA.auto_moves = {};\r

      }\r\n"
    sig: function show_advanced_ui(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_status:
    name: show_status
    code: "function show_status(s) {\r

      \  if (is_advanced_user()) {\r

      \    clear_status();\r

      \    if (!TESTING && !s.includes('reload')) show_fleeting_message(s,
      'dTest', { fz: 14, position: 'absolute', top: 5, right: 10 },
      'dStatus');\r

      \  }\r

      }\r\n"
    sig: function show_status(s){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTableCommands:
    name: mTableCommands
    code: "function mTableCommands(rowitems, di) {\r

      \  let t = rowitems[0].div.parentNode;\r

      \  mTableHeader(t, 'commands');\r

      \  for (const item of rowitems) {\r

      \    let drow = item.div;\r

      \    let dcol = mTableCol(drow);\r

      \    let colitem = { div: dcol, key: 'commands', val: null };\r

      \    item.colitems.push(colitem);\r

      \    let html = '';\r

      \    for (const k in di) {\r

      \      html += di[k](item); \r

      \    }\r

      \    dcol.innerHTML = html;\r

      \  }\r

      }\r\n"
    sig: function mTableCommands(rowitems, di){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  delete_table:
    name: delete_table
    code: "function delete_table(friendly) { stop_game(); phpPost({ friendly:
      friendly }, 'delete_table'); }\r\n"
    sig: function delete_table(friendly){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_title_left:
    name: show_title_left
    code: "function show_title_left(s, styles, funnyLetters = false) {\r

      \  let d = mBy('dTitleLeft');\r

      \  d.innerHTML = `${funnyLetters ? mColorLetters(s) : s}`;\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      }\r\n"
    sig: function show_title_left(s, styles, funnyLetters = false){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_title_right:
    name: show_title_right
    code: "function show_title_right(s, styles, funnyLetters = false) {\r

      \  let d = mBy('dTitleRight');\r

      \  d.innerHTML = `${funnyLetters ? mColorLetters(s) : s}`;\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      }\r\n"
    sig: function show_title_right(s, styles, funnyLetters = false){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_x_button:
    name: show_x_button
    code: "function show_x_button(dParent) {\r

      \  let b = mButton('close', () => hide(dParent), dParent, { maleft:
      '95%' });\r

      }\r\n"
    sig: function show_x_button(dParent){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  toggle_games_on:
    name: toggle_games_on
    code: "function toggle_games_on() { let a = mBy('aGames'); mStyle(a, { bg:
      'skyblue' }); }\r\n"
    sig: function toggle_games_on(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  toggle_games_off:
    name: toggle_games_off
    code: "function toggle_games_off() { let a = mBy('aGames'); hide('dGames');
      mStyle(a, { bg: 'silver' }); }\r\n"
    sig: function toggle_games_off(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  toggle_tables_on:
    name: toggle_tables_on
    code: "function toggle_tables_on() { let a = mBy('aTables'); mStyle(a, { bg:
      '#afe78f' }); } //'lightgreen' }); }\r\n"
    sig: function toggle_tables_on(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  toggle_tables_off:
    name: toggle_tables_off
    code: "function toggle_tables_off() { let a = mBy('aTables'); hide('dTables');
      mStyle(a, { bg: 'silver' }); }\r\n"
    sig: function toggle_tables_off(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  toggle_users_on:
    name: toggle_users_on
    code: "function toggle_users_on() { let a = mBy('aUsers'); mStyle(a, { bg:
      'coral' }); }\r\n"
    sig: function toggle_users_on(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  toggle_users_off:
    name: toggle_users_off
    code: "function toggle_users_off() { let a = mBy('aUsers'); hide('dUsers');
      mStyle(a, { bg: 'silver' }); }\r\n"
    sig: function toggle_users_off(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  ui_get_bluff_inputs:
    name: ui_get_bluff_inputs
    code: "function ui_get_bluff_inputs(strings){\r

      \  let uplayer = Z.uplayer;\r

      \  let items = ui_get_string_items(uplayer,strings);\r

      \  console.log('items',items)\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_bluff_inputs(strings){}
    region: funcs (select.js)
    filename: select.js
    type: func
    fname: select.js
    path: C:\xampp\htdocs\aroot\cosensus\select.js
    datetime: 2022-05-12-04-53
    timestamp: 1652356409966.5872
    size: 10184
  select_last:
    name: select_last
    code: "function select_last(item, callback, ev) {\r

      \  if (isdef(ev)) evNoBubble(ev);\r

      \  Z.A.last_selected = item; callback(item, ev);\r

      }\r\n"
    sig: function select_last(item, callback, ev){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ari_make_selectable:
    name: ari_make_selectable
    code: "function ari_make_selectable(item, dParent, dInstruction) {\r

      \  let A = Z.A;\r

      \  switch (item.itemtype) {\r

      \    case 'card': make_card_selectable(item); break;\r

      \    case 'container': make_container_selectable(item); break;\r

      \    case 'string': make_string_selectable(item); break;\r

      \  }\r

      }\r\n"
    sig: function ari_make_selectable(item, dParent, dInstruction){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ari_make_unselectable:
    name: ari_make_unselectable
    code: "function ari_make_unselectable(item) {\r

      \  let A = Z.A;\r

      \  switch (item.itemtype) {\r

      \    case 'card': make_card_unselectable(item); break;\r

      \    case 'container': make_container_unselectable(item); break;\r

      \    case 'string': make_string_unselectable(item); break;\r

      \  }\r

      }\r\n"
    sig: function ari_make_unselectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ari_make_selected:
    name: ari_make_selected
    code: "function ari_make_selected(item) {\r

      \  let A = Z.A;\r

      \  switch (item.itemtype) {\r

      \    case 'card': make_card_selected(item); break;\r

      \    case 'container': make_container_selected(item); break;\r

      \    case 'string': make_string_selected(item); break;\r

      \  }\r

      }\r\n"
    sig: function ari_make_selected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ari_make_unselected:
    name: ari_make_unselected
    code: "function ari_make_unselected(item) {\r

      \  let A = Z.A;\r

      \  switch (item.itemtype) {\r

      \    case 'card': make_card_unselected(item); break;\r

      \    case 'container': make_container_unselected(item); break;\r

      \    case 'string': make_string_unselected(item); break;\r

      \  }\r

      }\r\n"
    sig: function ari_make_unselected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_card_selectable:
    name: make_card_selectable
    code: "function make_card_selectable(item) { let d = iDiv(item.o); mClass(d,
      'selectable'); if (Z.game != 'aristo') { spread_hand(item.path, .3); }
      mClass(d.parentNode, 'selectable_parent'); }\r\n"
    sig: function make_card_selectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_card_unselectable:
    name: make_card_unselectable
    code: "function make_card_unselectable(item) { let d = iDiv(item.o); d.onclick =
      null; mClassRemove(d, 'selectable'); mClassRemove(d.parentNode,
      'selectable_parent'); spread_hand(item.path); }\r\n"
    sig: function make_card_unselectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_card_selected:
    name: make_card_selected
    code: "function make_card_selected(item) {\r

      \  let color = isdef(Z.func.get_selection_color) ?
      Z.func.get_selection_color(item) : 'red';\r

      \  set_card_border(item, 13, color);\r

      \  if (DA.magnify_on_select) mClass(iDiv(item.o), 'mag');\r

      }\r\n"
    sig: function make_card_selected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_card_unselected:
    name: make_card_unselected
    code: "function make_card_unselected(item) { set_card_border(item); if
      (DA.magnify_on_select) mClassRemove(iDiv(item.o), 'mag'); }\r\n"
    sig: function make_card_unselected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_container_selectable:
    name: make_container_selectable
    code: "function make_container_selectable(item) { let d = iDiv(item); mClass(d,
      'selectable'); mClass(d, 'selectable_parent'); }\r\n"
    sig: function make_container_selectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_container_unselectable:
    name: make_container_unselectable
    code: "function make_container_unselectable(item) { let d = iDiv(item);
      d.onclick = null; mClassRemove(d, 'selectable'); mClassRemove(d,
      'selectable_parent'); }\r\n"
    sig: function make_container_unselectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_container_selected:
    name: make_container_selected
    code: "function make_container_selected(item) { let d = iDiv(item); mClass(d,
      'selected_parent'); }\r\n"
    sig: function make_container_selected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_container_unselected:
    name: make_container_unselected
    code: "function make_container_unselected(item) { let d = iDiv(item);
      mClassRemove(d, 'selected_parent'); }\r\n"
    sig: function make_container_unselected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_string_selectable:
    name: make_string_selectable
    code: "function make_string_selectable(item) { let d = mBy(item.id); mClass(d,
      'selectable_button'); }\r\n"
    sig: function make_string_selectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_string_unselectable:
    name: make_string_unselectable
    code: "function make_string_unselectable(item) { let d = mBy(item.id); d.onclick
      = null; mClassRemove(d, 'selectable_button'); }\r\n"
    sig: function make_string_unselectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_string_selected:
    name: make_string_selected
    code: "function make_string_selected(item) { let d = mBy(item.id); item.bg =
      mGetStyle(d, 'bg'); item.fg = mGetStyle(d, 'fg'); mStyle(d, { bg:
      'yellow', fg: 'black' }); }\r\n"
    sig: function make_string_selected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_string_unselected:
    name: make_string_unselected
    code: "function make_string_unselected(item) { let d = mBy(item.id); mStyle(d, {
      bg: item.bg, fg: item.fg }); }\r\n"
    sig: function make_string_unselected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_hand_selectable:
    name: make_hand_selectable
    code: "function make_hand_selectable(item) { }\r\n"
    sig: function make_hand_selectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_hand_unselectable:
    name: make_hand_unselectable
    code: "function make_hand_unselectable(item) { }\r\n"
    sig: function make_hand_unselectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_hand_selected:
    name: make_hand_selected
    code: "function make_hand_selected(item) { }\r\n"
    sig: function make_hand_selected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_hand_unselected:
    name: make_hand_unselected
    code: "function make_hand_unselected(item) { }\r\n"
    sig: function make_hand_unselected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_market_selectable:
    name: make_market_selectable
    code: "function make_market_selectable(item) { }\r\n"
    sig: function make_market_selectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_market_unselectable:
    name: make_market_unselectable
    code: "function make_market_unselectable(item) { }\r\n"
    sig: function make_market_unselectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_market_selected:
    name: make_market_selected
    code: "function make_market_selected(item) { }\r\n"
    sig: function make_market_selected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_market_unselected:
    name: make_market_unselected
    code: "function make_market_unselected(item) { }\r\n"
    sig: function make_market_unselected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_deck_selectable:
    name: make_deck_selectable
    code: "function make_deck_selectable(item) { }\r\n"
    sig: function make_deck_selectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_deck_unselectable:
    name: make_deck_unselectable
    code: "function make_deck_unselectable(item) { }\r\n"
    sig: function make_deck_unselectable(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_deck_selected:
    name: make_deck_selected
    code: "function make_deck_selected(item) { }\r\n"
    sig: function make_deck_selected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  make_deck_unselected:
    name: make_deck_unselected
    code: "function make_deck_unselected(item) { }\r\n"
    sig: function make_deck_unselected(item){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ensure_actions:
    name: ensure_actions
    code: "function ensure_actions(fen) { fen.actionsCompleted = []; }\r\n"
    sig: function ensure_actions(fen){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ensure_market:
    name: ensure_market
    code: "function ensure_market(fen, n) { fen.stallSelected = [];
      deck_add(fen.deck, n - fen.market.length, fen.market); }\r\n"
    sig: function ensure_market(fen, n){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ensure_stall:
    name: ensure_stall
    code: "function ensure_stall(fen, uplayer, n) { let pl = fen.players[uplayer];
      deck_add(fen.deck, n - pl.stall.length, pl.stall); }\r\n"
    sig: function ensure_stall(fen, uplayer, n){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ensure_stallSelected:
    name: ensure_stallSelected
    code: "function ensure_stallSelected(fen) { if (nundef(fen.stallSelected))
      fen.stallSelected = []; }\r\n"
    sig: function ensure_stallSelected(fen){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest6_endgame:
    name: fentest6_endgame
    code: "function fentest6_endgame() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  fen.actionsCompleted = [];\r

      \  for (const plname of fen.plorder) {\r

      \    add_a_correct_building_to(fen, plname, 'chateau');\r

      \    add_a_correct_building_to(fen, plname, rChoose(['farm',
      'estate', 'chateau']));\r

      \    if (coin()) add_a_correct_building_to(fen, plname,
      rChoose(['farm', 'estate', 'chateau']));\r

      \    fen.actionsCompleted.push(plname);\r

      \  }\r

      \  fen.pl_gameover = [];\r

      \  for (const plname of fen.plorder) {\r

      \    let bcorrect =
      ari_get_correct_buildings(fen.players[plname].buildings);\r

      \    let can_end = ari_check_end_condition(bcorrect);\r

      \    if (can_end) fen.pl_gameover.push(plname);\r

      \  }\r

      \  if (isEmpty(fen.pl_gameover)) { console.log('try
      again!!!!!!!!!!!'); return; }\r

      \  Z.stage = 10;\r

      \  Z.phase = 'king';\r

      \  take_turn_fen(true);\r

      }\r\n"
    sig: function fentest6_endgame(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest5_market_opens:
    name: fentest5_market_opens
    code: "function fentest5_market_opens() {\r

      \  Z.stage = 3;\r

      \  Z.phase = 'king';\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function fentest5_market_opens(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest4_visit:
    name: fentest4_visit
    code: "function fentest4_visit() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  fen.actionsCompleted = [];\r

      \  for (const plname of fen.plorder) {\r

      \    add_a_schwein(fen, plname);\r

      \  }\r

      \  Z.stage = 5;\r

      \  Z.phase = 'queen';\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function fentest4_visit(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest2_build:
    name: fentest2_build
    code: "function fentest2_build() {\r

      \  Z.stage = 5;\r

      \  Z.phase = 'king';\r

      \  ensure_stall(Z.fen, Z.uplayer, 4);\r

      \  ensure_actions(Z.fen);\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function fentest2_build(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest1_auction:
    name: fentest1_auction
    code: "function fentest1_auction() {\r

      \  Z.stage = 12;\r

      \  Z.phase = 'jack';\r

      \  ensure_market(Z.fen, 3);\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function fentest1_auction(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest0_min_items:
    name: fentest0_min_items
    code: "function fentest0_min_items() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  let pl = fen.players[uplayer];\r

      \  [pl.hand, pl.stall, Z.stage, Z.phase] = [['JSn', '2Hn', '3Hn',
      '3Dn', '3Cn', '4Hn'], ['QSn', 'KHn'], 5, 'king'];\r

      \  ensure_actions(fen);\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function fentest0_min_items(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test12_try_svg:
    name: test12_try_svg
    code: "function test12_try_svg() {\r\n}\r\n"
    sig: function test12_try_svg(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test11_cardcoloring:
    name: test11_cardcoloring
    code: "function test11_cardcoloring() {\r

      \  let dTable = mBy('dTable'); clearElement(dTable);\r

      \  let card = ari_get_card('KHn');\r

      \  mAppend(dTable, iDiv(card));\r

      \  let d = mDiv(dTable, {}, null, queen_html());\r

      }\r\n"
    sig: function test11_cardcoloring(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test10_0:
    name: test10_0
    code: "function test10_0() {\r

      \  lookupSet(DA, ['svgsym', suit, color], html);\r

      \  let color = 'orange';\r

      \  let treff = `\r

      \  <path  d=\"M30 150C35 385 85 400 130 500L-130 500C-85 400 -35 385
      -30 150A10 10 0 0 0 -50 150A210 210 0 1 1 -124 -51A10 10 0 0 0 -110
      -65A230 230 0 1 1 110 -65A10 10 0 0 0 124 -51A210 210 0 1 1 50 150A10 10 0
      0 0 30 150Z\"  fill=\"${color}\"></path>\r

      \  `;\r

      \  let idsym = getUID('x');\r

      \  let sym = `\r

      \  <symbol id=\"Treff\" viewBox=\"-600 -600 1200 1200\"
      preserveAspectRatio=\"xMinYMid\">\r

      \  `\r

      }\r\n"
    sig: function test10_0(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test10_verrueckt:
    name: test10_verrueckt
    code: "function test10_verrueckt() {\r

      \  let styles = { bg: 'yellow', fg: 'red', border: 'random',
      thickness: 20, shadow: 'green', rotate: 45, scale: 2 };\r

      \  let html = `\r

      \      <svg\r

      \      xmlns=\"http://www.w3.org/2000/svg\"\r

      \      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r

      \      class=\"card\"\r

      \      face=\"QS\"\r

      \      height=\"100%\"\r

      \      preserveAspectRatio=\"none\"\r

      \      viewBox=\"-120 -168 240 336\"\r

      \      width=\"100%\"\r

      \      fill=\"#ffff00\"\r

      \      stroke=\"#ff0000\"\r

      \      >\r

      \      <defs><rect id=\"XSQ\" width=\"164.8\" height=\"260.8\"
      x=\"-82.4\" y=\"-130.4\"></rect></defs>\r

      \      <symbol id=\"VSQ\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \        <path\r

      \          d=\"M-260 100C40 100 -40 460 260 460M-175 0L-175 -285A175
      175 0 0 1 175 -285L175 285A175 175 0 0 1 -175 285Z\"\r

      \          stroke=\"black\"\r

      \          stroke-width=\"80\"\r

      \          stroke-linecap=\"square\"\r

      \          stroke-miterlimit=\"1.5\"\r

      \          fill=\"none\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SSQ\" viewBox=\"-600 -600 1200 1200\"
      preserveAspectRatio=\"xMinYMid\">\r

      \        <path\r

      \          d=\"M0 -500C100 -250 355 -100 355 185A150 150 0 0 1 55
      185A10 10 0 0 0 35 185C35 385 85 400 130 500L-130 500C-85 400 -35 385 -35
      185A10 10 0 0 0 -55 185A150 150 0 0 1 -355 185C-355 -100 -100 -250 0
      -500Z\"\r

      \          fill=\"black\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ1\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          fill=\"#FC4\"\r

      \          d=\"M635.39648,0 851.86719,312.33789C895.10685,299.11869
      938.83136,290.34833 975,285 924.90197,188.22401 899.89439,94.153799
      874.11133,0ZM295.52539,27.285156C246.27551,180.9799 142.75435,335.54042
      209.25195,483.08398l-17.43359,13.44922c1.76531,151.10099
      30.08527,286.57163 74.54102,398.60938 18.12594,21.287 38.56227,42.11564
      61.47851,64.11523 3.61128,3.46683 7.28461,6.96262
      11.33789,10.61914L901.47852,970l-0.41407,-0.51953c-0.12219,-0.138
      -0.23745,-0.27418 -0.35937,-0.41211 15.27725,17.28278 32.6506,35.12574
      52.3164,53.54294C1030.1434,1094.8366 1080,1150 1130,1250c52.9819,-70.6425
      98.186,-110.0972 170,-152.7871v-37.6016c-68.6196,39.3343 -116.9422,76.6549
      -164.5547,131.9668 -44.9491,-77.8482 -93.9175,-130.6069
      -160.20897,-192.68943 -76.05982,-71.23062 -114.27421,-131.59148
      -129.3711,-180.42578 -15.09688,-48.8343 -8.90849,-86.60287
      7.94922,-120.96875 28.31708,-57.72677 91.51367,-102.35489
      139.07032,-133.86328l-26.7793,-21.49024C896.53697,588.11019
      793.22595,665.67487 806.10938,786.48828L699.86133,787.5 568.0625,939.89258
      429.48438,939.86328C578.06034,763.29892 745.82856,594.02803
      899.1875,455.09961l-9.56836,-10.99023c-28.86687,-3.02061
      -55.64392,-10.37642 -80.51758,-21.42774 -1.77605,4.17261 -4.43372,8.02096
      -7.94336,11.23438C665.11643,558.39566 525.46983,665.166
      419.78906,829.43164L392.45703,811.84766C501.69344,642.05529
      644.58723,533.12674 779.21875,409.9375l17.51367,6.86328c-17.74437,-8.98707
      -34.48695,-19.8921 -50.29101,-32.48437 -124.71285,29.03155
      -208.27492,36.48099 -267.26758,31.98242 0,0 -19.31641,14.60547
      -29.31641,14.60547 -15,0 -25.58008,-5.64453 -30.58008,-5.64453 -5,0 -10,5
      -25,5 -15,0 -30,-25 -40,-50 -1.51422,-2.01895 -3.01443,-4.07919
      -4.23242,-5.79297l-39.21875,30.25586 10.50977,-0.54493c7.17244,138.45299
      -1.25836,281.23598 43.02929,408.13477l-27.41796,17.66602c-1.32891,-2.13106
      -2.43311,-4.45616 -3.26758,-6.95704C288.22851,692.7888 295.29422,552.70428
      289.59766,421.09961l-69.70313,53.77344
      20.20508,-16.59375C187.08454,297.85994 265.54029,182.85491
      300.0957,58.960938ZM85,80c-55.000004,50 -100.000004,145 -35,145 9.343263,0
      15.215964,-5.70961
      19.599609,-15.58984l-0.05469,54.80664C63.116922,255.80043 55.218717,250
      45,250c-34.999996,0 -39.999996,70 -5,70 24.46345,0 22.957588,-43.08208
      10.8125,-44.93164 53.48157,5.0855 -15.809214,250.16385 -15.302734,296.2207
      0.268193,24.38822 6.628431,48.73678 31.46289,56.20899C48.176742,632.49354
      35,645.1697 35,660 35,674.30844 47.265656,686.61054 65.384766,692.25586
      41.674751,699.57565 35,720.74035 35,740 35,776.24391 48.1356,836.13212
      55.517578,866.33008 82.604368,846.54619 106.08392,825.42866
      128.83984,800.21875 132.14826,778.91478 135,756.88968 135,740
      135,720.60063 128.2285,699.26867 104.15234,691.95898 118.02756,686.75065
      129.28173,676.58841 135,660c0,-14.83344 -13.18185,-27.51102
      -30.78711,-32.89844 24.05654,-8.65812 30.01787,-32.21714
      30.27734,-55.8125C134.99671,525.23221 65.705931,280.15386
      119.1875,275.06836 107.04241,276.91792 105.53655,320 130,320c35,0 30,-70
      -5,-70 -10.83425,0 -19.06007,6.52154
      -25.074219,15.02148L100.25195,209.2793C104.49041,218.99863 110.42097,225
      120,225 185,225 140,130 85,80Zm641.48047,287.83789c-86.62544,19.83455
      -151.78802,28.17022 -200.80469,29.24219 -14.2248,6.27415
      -30.07191,11.92239 -45.7793,18.95898 58.99266,4.49857 142.55438,-2.95118
      267.19727,-32.03711 -7.7527,-5.20716 -14.38853,-10.76914
      -20.61328,-16.16406zm-370.49024,88.29102c29.62693,11.74538
      64.9141,21.55877 110.0293,25.15039 51.3028,4.08421 115.55629,0.48608
      200.56445,-14.4043C568.01187,553.99998 468.15967,644.25595
      384.25,765.71289 359.23837,670.90747 359.53927,564.67648
      355.99023,456.12891ZM1182.5,473.75c-24.0403,0 -48.0562,17.34722
      -29.8594,52.02344A45,42.5 0 0 1 1182.5,515a45,42.5 0 0 1
      29.8652,10.76367C1230.552,491.09427 1206.538,473.75
      1182.5,473.75Zm-54.6914,47.48047c-45.2477,0.77462 -37.6424,97.7377
      22.793,66.2168A45,42.5 0 0 1 1137.5,557.5a45,42.5 0 0 1
      13.1113,-29.94336c-8.6891,-4.53343 -16.2978,-6.43753
      -22.8027,-6.32617zm109.3828,0c-6.5027,-0.11132 -14.1076,1.79222
      -22.793,6.32226A45,42.5 0 0 1 1227.5,557.5a45,42.5 0 0 1
      -13.1094,29.94336c60.4429,31.53409 68.0505,-65.43824
      22.8008,-66.21289zm-24.8301,67.99414A45,42.5 0 0 1 1182.5,600 45,42.5 0 0
      1 1152.6348,589.23633c-11.9875,22.85174 -5.6311,38.16959 6.9726,45.95898
      -23.6821,34.46419 -48.941,66.02584 -74.9492,96.20703C1079.1653,675.69528
      1058.4509,645.45798 1005,670c37.225,16.12754 38.5709,70.31699
      75.9492,65.69727 -5.8664,6.76063 -11.768,13.45662
      -17.6972,20.10156l15.207,1.88672c7.2551,-8.19076 14.4623,-16.46748
      21.6113,-24.85352 5.1929,39.08146 35.0698,-7.57452 67.2129,-5.5
      -16.4802,-41.743 -32.0495,-10.50502 -66.4785,4.63672 24.5708,-28.86629
      48.4073,-59.08334 70.8027,-91.95508 26.5679,6.12811 61.7407,-10.79807
      40.7539,-50.78906zM1255,655c-32.9633,38.74398 -63.8666,77.97963 -125,110
      16.8191,30.21345 26.6544,60.2083 30,90 47.2312,18.32372 82.8871,51.83723
      115,90 2.3419,-37.0436 -4.2974,-71.38724 -30,-100 23.3498,-4.99857
      40.0029,-20.01884 50,-45 -14.5281,-24.40208 -35.9759,-32.69918 -60,-35
      44.8752,-32.16719 30.2665,-71.33926
      20,-110zM811.88477,817.78516c10.86486,41.66548 35.34229,88.00659
      78.58593,139.42382 -4.92291,-5.82285 -9.66276,-11.58316
      -14.2207,-17.2539l-286.46289,-0.0586 64.60547,-0.45703 75.1914,-86.93945
      93.88282,-0.33984c-4.9028,-11.9067 -8.74345,-23.39087
      -11.58203,-34.375zM377.5,842.5c4.42321,0 9.31831,2.00257
      14.86719,9.24023C397.91606,858.97789 402.5,871.0223 402.5,885c0,13.9777
      -4.58394,26.0221 -10.13281,33.25977C386.81831,925.49743 381.92321,927.5
      377.5,927.5c-4.42321,0 -9.31831,-2.00257
      -14.86719,-9.24023C357.08394,911.0221 352.5,898.9777 352.5,885c0,-13.9777
      4.58394,-26.02211 10.13281,-33.25977C368.18169,844.50257 373.07679,842.5
      377.5,842.5Z\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ2\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          fill=\"red\"\r

      \          d=\"M557.51758,0 805.9668,330.45703 851.01367,311.99805
      635.36719,0Zm78.02148,0 63.76563,90.75C709.99966,65.000167 725,65 725,65
      716.50651,26.779299 728.31462,17.104416 733.20117,0ZM820,265
      851.86719,312.33789C877.5079,304.49903 903.31958,298.22492
      927.6543,293.26562 907.75762,290.72138 885.5191,284.6565 865,270c-10,5
      -30,10 -45,-5zm99.12695,216.28711C764.14521,621.01648 595.55342,787.07572
      470.35547,940.01172L525,940
      685,755h120.41797l-0.0547,-0.41211c6.37431,-102.76161 97.50088,-170.65811
      160.41211,-212.22851zm-727.41992,15.5625 -59.86133,46.34766
      -0.39648,0.30468c1.93099,12.0459 3.10803,21.69313 3.04101,27.78711
      -0.25947,23.59536 -6.2208,47.15438 -30.27734,55.8125C121.81815,632.48898
      135,645.16656 135,660 129.28173,676.58841 118.02756,686.75065
      104.15234,691.95898 128.2285,699.26867 135,720.60063 135,740c0,16.88968
      -2.85174,38.91478 -6.16016,60.21875 -1.95154,2.162 -3.90854,4.29257
      -5.87304,6.39453C138.56664,789.96704 153.92711,771.43051 170,750
      200.25102,810.50205 230.44886,854.59181 266.85742,895.71484
      221.90196,783.10482 193.58426,647.63449
      191.70703,496.84961ZM44.53125,610.36133
      0,644.61523V902.7832C30.797744,884.46615 56.707359,866.73637
      80.427734,846.89844 72.427991,853.57027 64.158102,860.01913
      55.517578,866.33008 48.1356,836.13212 35,776.24391 35,740 35,720.74035
      41.674751,699.57565 65.384766,692.25586 47.265656,686.61054 35,674.30844
      35,660 35,645.1697 48.176742,632.49354 66.972656,627.49805
      56.528563,624.35562 49.361734,618.22105
      44.53125,610.36133Zm1190.09765,68.79687 -1.1211,1.04688c-20.0542,23.0427
      -41.8711,45.665 -71.7441,65.72265 27.117,39.37142 36.6532,80.37363
      27.7441,123.12891 25.4392,14.76465 47.2329,33.87001 67.875,55.8418
      -10.0896,-28.95393 -26.9566,-68.05217
      -64.6191,-89.36328C1229.865,829.72137 1245.3631,819.51581
      1260,800c-28.5778,-21.24841 -50.4759,-15.94491 -77.3027,-15.66992
      39.149,-21.89578 49.9371,-64.78262
      51.9316,-105.17188zM110.74609,819.23828c-0.7889,0.78628 -1.58065,1.56702
      -2.37304,2.3457 0.792,-0.77791 1.58362,-1.55961
      2.37304,-2.3457zm-5.15234,5.05078c-0.76819,0.74251 -1.53476,1.48679
      -2.30664,2.22266 0.77112,-0.73534 1.53841,-1.48017
      2.30664,-2.22266zm-5.26172,5.00586c-2.077449,1.94603 -4.165139,3.87648
      -6.273436,5.7793 2.104356,-1.90192 4.194747,-3.83083
      6.273436,-5.7793zm-6.539061,6.02149c-1.467973,1.32281 -2.945132,2.63598
      -4.429688,3.93945 1.482456,-1.30407 2.961518,-2.61456
      4.429688,-3.93945zM377.5,862.5a11,22.5 0 0 0 -11,22.5 11,22.5 0 0 0
      11,22.5 11,22.5 0 0 0 11,-22.5 11,22.5 0 0 0
      -11,-22.5zm225.17578,127.46484a10,10 0 0 0 -10,10 10,10 0 0 0 10,9.99996
      10,10 0 0 0 10,-9.99996 10,10 0 0 0 -10,-10zM420,990a10,10 0 0 0 -10,10
      10,10 0 0 0 10,10 10,10 0 0 0 10,-10 10,10 0 0 0
      -10,-10zm91.13281,0.41016a10,10 0 0 0 -10,10.00004 10,10 0 0 0 10,10 10,10
      0 0 0 10,-10 10,10 0 0 0 -10,-10.00004z\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ3\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          fill=\"#44F\"\r

      \          d=\"M472.5,150a12.5,20 0 0 0 -12.5,20 12.5,20 0 0 0
      12.5,20 12.5,20 0 0 0 12.5,-20 12.5,20 0 0 0 -12.5,-20zm-140,5a12.5,20 0 0
      0 -12.5,20 12.5,20 0 0 0 12.5,20 12.5,20 0 0 0 12.5,-20 12.5,20 0 0 0
      -12.5,-20zm23.49023,301.12891c3.54904,108.54757 3.24814,214.77856
      28.25977,309.58398 83.90967,-121.45694 183.76187,-211.71291
      282.33398,-298.83789 -85.00816,14.89038 -149.26165,18.48851
      -200.56445,14.4043 -45.1152,-3.59162 -80.40237,-13.40501
      -110.0293,-25.15039zm42.92579,22.92187c22.57573,0.10326 52.52779,2.34383
      83.49804,6.2461 65.74558,8.28415 118.15335,21.65893 117.05469,29.87304
      -1.09829,8.2139 -56.30922,5.07893 -122.05273,-3.20508 -65.73948,-8.28354
      -117.1185,-18.57868 -116.02735,-26.79296 0.53448,-4.02047
      14.07178,-6.22853 37.52735,-6.1211zM1117.5,492.5c2.4011,8.40385
      4.2266,18.24941 5.4746,28.84375v0.36133c7.3876,-1.36391 16.4655,0.0837
      27.2324,5.62304l-21.2675,-21.26757a1.50015,1.50015 0 0 1 1.0449,-2.57617
      1.50015,1.50015 0 0 1 1.0761,0.45507l21.2676,21.26758c-5.5291,-10.74776
      -6.9807,-19.81297 -5.6289,-27.19336 -10.7286,-1.24895 -20.7021,-3.08593
      -29.1992,-5.51367zm130,0c-8.4251,2.40718 -18.2988,4.23414
      -28.9238,5.48242h-0.2793c1.3613,7.38557 -0.087,16.46062
      -5.6231,27.22266l21.2657,-21.26563a1.50015,1.50015 0 0 1 1.0312,-0.45312
      1.50015,1.50015 0 0 1 1.0898,2.57422l-21.2675,21.26757c10.7565,-5.53399
      19.8272,-6.98416 27.2109,-5.62695v-0.17187c1.2486,-10.6649 3.081,-20.57644
      5.4961,-29.0293zm-853.59961,15.25781c20.38428,0.10329 47.42876,2.34386
      75.39258,6.2461 59.36368,8.28422 106.68388,21.65899 105.69141,29.87304
      -0.99271,8.21355 -49.91699,8.15671 -109.27735,-0.12695 -59.36371,-8.28422
      -106.68391,-21.659 -105.69141,-29.87305 0.48636,-4.01928 12.70935,-6.22659
      33.88477,-6.11914zm7.69531,34.67969c15.09367,-0.0753 32.61454,0.81411
      50.47852,2.5625 51.50146,5.04084 94.00823,14.75226 93.67578,23.00391
      -0.32891,8.2521 -42.34749,10.85536 -93.84961,5.81445C400.39893,568.77752
      358.91755,558.00165 359.25,549.75c0.20345,-5.08688 15.52034,-7.17888
      42.3457,-7.3125zm590.81446,21.09375c-26.28817,17.83124 -58.00395,39.71623
      -85.84375,65.82227L1063.252,755.79883c5.9292,-6.64494 11.8308,-13.34093
      17.6972,-20.10156C1043.5709,740.31699 1042.225,686.12754
      1005,670c53.4509,-24.54202 74.1653,5.69528 79.6582,61.40234
      18.288,-21.22222 36.2025,-43.13214 53.4609,-66.25 -50.4965,-31.89003
      -99.3677,-65.63189
      -145.70894,-101.62109zm92.24804,167.87109c-1.2353,1.43353 -2.4703,2.86748
      -3.709,4.29493 1.3064,-0.16146 2.6533,-0.388 4.0508,-0.69727
      -0.1038,-1.21628 -0.2241,-2.40447 -0.3418,-3.59766zm-21.4062,24.39649
      1.3242,1.02344C1092.8236,758.22045 1130,765 1130,765c33.2353,-17.40792
      57.5278,-36.95014 78.082,-57.38477 -19.9562,-11.65548 -39.7017,-23.55345
      -59.2109,-35.71875 -15.5528,20.88792 -31.6462,40.7815 -48.0664,60.07227
      34.429,-15.14174 49.9983,-46.37972 66.4785,-4.63672 -32.1431,-2.07452
      -62.02,44.58146 -67.2129,5.5 -7.149,8.38604 -14.3562,16.66276
      -21.6113,24.85352zM399.88477,574.98828c12.13924,-0.0753 26.23048,0.81416
      40.59765,2.5625 41.42116,5.04089 74.78321,15.81675 74.51563,24.06836
      -0.26463,8.25206 -34.05885,10.85531 -75.48047,5.81445 -41.42116,-5.04089
      -74.78321,-15.81675 -74.51563,-24.06836 0.16364,-5.08693 13.30756,-8.24338
      34.88282,-8.37695zm814.90823,12.6836 21.2675,21.26757a1.50015,1.50015 0 1
      1 -2.121,2.1211l-21.2657,-21.26563c5.5369,10.76367 6.9837,19.84044
      5.6211,27.22656h0.3223c10.6094,1.24816 20.4685,3.07443 28.8828,5.47852
      -2.4278,-8.49731 -4.2627,-18.47029 -5.5117,-29.19922 -7.3807,1.35234
      -16.4468,-0.0994 -27.1953,-5.6289zm-64.5879,0.002c-10.7501,5.53028
      -19.8161,6.98044 -27.1973,5.62695v0.0723c-1.2488,10.70195 -3.0853,20.64836
      -5.5078,29.12695 8.4975,-2.42785 18.4701,-4.26471 29.1992,-5.51367
      -1.3518,-7.38039 0.1,-16.44561
      5.6289,-27.19336l-21.2676,21.26758a1.50015,1.50015 0 1 1
      -2.121,-2.1211zM399.95117,608.2207c7.75591,-0.014 16.33902,0.59569
      25.04883,1.7793 30.51033,4.14665 55.19775,16.74619 55.24414,25
      0.0491,8.25469 -24.64792,11.5847 -55.16016,7.4375 -30.51033,-4.14665
      -55.28173,-14.19933 -55.32812,-22.45312 -0.0324,-5.62262
      11.68692,-11.73096 30.19531,-11.76368zm2.94141,36.28321c3.92832,-0.0157
      8.00124,0.15115 12.10742,0.49609 25.08573,2.10744 44.77796,7.02839
      45.42188,14.97852 0.64298,7.94981 -19.17087,12.68576 -44.25586,10.57812
      -25.08573,-2.10744 -45.94398,-10.26081 -46.5879,-18.21094 -0.52278,-6.4668
      13.79255,-7.76393 33.31446,-7.84179zm-6.3711,30.78125c1.53788,10e-4
      3.10151,0.0612 4.67383,0.17968 15.24356,1.1523 28.12847,7.43255
      28.7793,14.02735 0.6519,6.59512 -11.17778,11.00764 -26.42188,9.85547
      -15.24356,-1.1523 -28.12847,-7.43255 -28.77929,-14.02735 -0.57317,-5.81151
      8.60794,-10.04793 21.74804,-10.03515zm-2.7207,30.4707c0.97501,0.002
      1.96625,0.0499 2.96289,0.14453 9.66123,0.91446 17.82809,5.89851
      18.24219,11.13281 0.4126,5.23472 -7.08576,8.73687 -16.74805,7.82227
      -9.66123,-0.91446 -17.82809,-5.89851 -18.24219,-11.13281 -0.3645,-4.61356
      5.45528,-7.97697 13.78516,-7.9668zm906.19922,0.0781
      -34.2773,2.85547c0.2249,20.00253 -6.7832,39.15319 -30.7188,56.31055
      24.0241,2.30082 45.4719,10.59792 60,35 -9.9971,24.98116 -26.6502,40.00143
      -50,45 19.6816,21.91005 28.1768,47.18324 30.0293,74.45312l0.01,0.008
      24.957,11.09375zm-167.2656,64.20508c0.2372,0.44647 0.4708,0.89347
      0.7051,1.33985 -0.2343,-0.44637 -0.4679,-0.89339
      -0.7051,-1.33985zm3.041,5.88282c0.083,0.16606 0.171,0.33199 0.2539,0.49804
      -0.083,-0.16604 -0.1705,-0.33202
      -0.2539,-0.49804zm2.6758,5.48437c0.2147,0.45253 0.425,0.90499
      0.6367,1.35742 -0.2117,-0.45239 -0.4219,-0.90493
      -0.6367,-1.35742zm2.455,5.32422c0.1795,0.40036 0.3641,0.80089
      0.5411,1.20117 -0.177,-0.40029 -0.3615,-0.80081
      -0.5411,-1.20117zm2.5958,5.98437c0.2099,0.50184 0.413,1.00415
      0.6191,1.50586 -0.2062,-0.5018 -0.4092,-1.00393
      -0.6191,-1.50586zm2.0703,5.11719c0.1975,0.50277 0.4,1.00516 0.5937,1.50781
      -0.1937,-0.50252 -0.3962,-1.00516
      -0.5937,-1.50781zm2.3418,6.1875c0.1922,0.53072 0.3764,1.06121
      0.5644,1.5918 -0.188,-0.53055 -0.3722,-1.06112
      -0.5644,-1.5918zm1.7324,4.96485c0.2042,0.60477 0.4106,1.20984
      0.6094,1.81445 -0.1988,-0.60461 -0.4051,-1.20971
      -0.6094,-1.81445zm2.0273,6.26562c0.1846,0.60177 0.3579,1.20308
      0.5371,1.80469 -0.1792,-0.60139 -0.3525,-1.20313
      -0.5371,-1.80469zm1.4688,5.00977c0.1799,0.63781 0.3593,1.27644
      0.5332,1.91406 -0.174,-0.63786 -0.3532,-1.27602
      -0.5332,-1.91406zM377.5,842.5c-4.42321,0 -9.31831,2.00257
      -14.86719,9.24023C357.08394,858.97789 352.5,871.0223 352.5,885c0,13.9777
      4.58394,26.0221 10.13281,33.25977 5.54888,7.23766 10.44398,9.24023
      14.86719,9.24023 4.42321,0 9.31831,-2.00257
      14.86719,-9.24023C397.91606,911.0221 402.5,898.9777 402.5,885c0,-13.9777
      -4.58394,-26.02211 -10.13281,-33.25977C386.81831,844.50257 381.92321,842.5
      377.5,842.5Zm-0.27344,4.79492c2.95574,0.0879 5.94922,5.08008
      5.94922,10.70508 10.93128,-0.11104 14.67749,3.31056 5.67578,13
      13.69744,3.7436 10.6454,8.69968 2.83789,14 7.80751,5.30032
      10.85955,10.2564 -2.83789,14 9.00171,9.68944 5.2555,13.11104 -5.67578,13
      0,10 -9.4596,18 -11.35156,0 -10.93128,0.11104 -14.67748,-3.31056
      -5.67578,-13 -13.69744,-3.7436 -10.6454,-8.69968 -2.83789,-14
      -7.80751,-5.30032 -10.85955,-10.2564 2.83789,-14 -9.0017,-9.68944
      -5.2555,-13.11104 5.67578,-13 0.82773,-7.875 3.10344,-10.77344
      5.40234,-10.70508zm352.35742,5.20508 -75.1914,86.93945
      43.0039,-0.041L744.44531,885H840l-15,-32.5zm29.72266,65
      -19.23047,22.23633L876.25,939.95508 860,917.5Zm-104.13476,52.41992
      -315.75977,0.17969c2.43984,2.47881 4.98787,4.87423 7.56641,7.28906
      15.37025,14.39437 29.32058,28.43253 41.91015,42.12693 1.06974,-4.4442
      6.04965,-11.1309 16.11133,-19.5156 -30,-25 -15,-34.99999 15,-15
      30,-19.99999 45,-10 15,15 30,25 15,35 -15,15 -11.06914,7.3794
      -20.08451,10.6644 -25.5625,10.6289 1.31057,1.4627 2.62767,2.9262
      3.90625,4.3809l256.41797,-0.1328zm-170.01172,4.44531C490.60938,974.21875
      499.75,977.5 511,985c30,-19.99999 45,-10 15,15 30,25 15,35 -15,15 -30,20
      -45,10 -15,-15 -18.75,-15.625 -19.92188,-25.39063
      -10.83984,-25.63477zm91,0C581.60938,974.21875 590.75,977.5
      602,985c30,-19.99999 45,-10 15,15 30,25 15,35 -15,15 -30,20 -45,10 -15,-15
      -18.75,-15.625 -19.92188,-25.39063 -10.83984,-25.63477z\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ4\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          fill=\"black\"\r

      \          d=\"M499.67383,0C598.83088,212.42554 698.5156,423.78371
      891.07812,444.24805L557.50781,0ZM299.89844,59.855469C265.54099,182.85387
      187.08454,297.85994
      240.09961,458.2793L349.875,372.94531C322.20549,333.64118 300,282.28964
      300,255c0,-20 5.00324,-149.9992 5,-155 -10e-4,-2.004308 -2.41143,-19.27436
      -5.10156,-40.144531zM899.91016,454.8418C746.55122,593.77022
      578.78424,763.04072
      429.50781,939.46875l40.84766,0.54297C595.55342,787.07576
      764.14431,621.01748
      918.95508,481.37891Zm65.79101,87.45703c-28.87179,19.18723
      -64.12524,44.12835 -93.97851,75.52344l25.55078,20.04296c30.22964,-29.84438
      65.96002,-54.59002 95.59961,-73.97851 -9.28135,-6.87909
      -18.47109,-14.10656 -27.17188,-21.58789zM685,755 525.10156,939.88281
      570,940 699.86133,787.5H806.65039L805,755Z\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ5\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          stroke=\"#44F\"\r

      \          stroke-linecap=\"round\"\r

      \          stroke-linejoin=\"round\"\r

      \          stroke-width=\"6\"\r

      \          fill=\"none\"\r

      \          d=\"M435,885A57.5,75.000002 0 0 1 377.5,960.00001
      57.5,75.000002 0 0 1 320,885 57.5,75.000002 0 0 1 377.5,810 57.5,75.000002
      0 0 1
      435,885v0M417.07718,940H876.02627M308.27069,940h28.75722M339.49097,970H90\
      1.47783M131.84482,543.19629 351.03451,374.58883M6.9310566e-5,644.61533
      44.832165,610.1291M1138.1663,665.18229C1077.9926,627.18313
      1020.1253,586.55302
      965.29601,542.45758M1208.5796,707.90733c-20.1878,-11.78458
      -40.1599,-23.81534 -59.8906,-36.12132M557.51806,-3.5577172e-4
      965.44559,542.57786M1299.7291,1059.765c-68.4773,39.2778 -116.7334,76.5733
      -164.2838,131.8131 -44.9491,-77.8482 -93.9175,-130.6069
      -160.20897,-192.68943 -76.05982,-71.23062 -114.27421,-131.59148
      -129.3711,-180.42578 -15.09688,-48.8343 -8.90849,-86.60287
      7.94922,-120.96875 28.31708,-57.72677 91.51285,-102.35515
      139.0695,-133.86354M499.68528,0.03748108C598.83742,212.45251
      698.51437,423.77834
      890.34164,443.851M364.36489,812.31243C320.07724,685.41364
      328.50886,542.63024 321.33642,404.17725c76.71711,39.85219
      163.35704,77.44074 457.8821,5.76082C644.587,533.12731 501.69292,642.05444
      392.45651,811.84681M355.97656,456.125c29.62956,11.74764 64.92126,21.56216
      110.04297,25.1543 51.30556,4.08443 115.56309,0.48617 200.57813,-14.40625
      -98.57798,87.12824 -198.39177,177.48156 -282.2461,298.86133
      -24.96545,-94.92731 -24.7974,-201.06283
      -28.375,-309.60938v0M867.34252,440.4065C719.62961,574.07588
      560.4386,730.57461
      436.09373,879.43791M223.89186,472.86906c-0.82324,183.16931
      37.98603,343.48203
      98.11552,466.27071M191.49798,496.71315c2.08648,150.92196
      30.40471,286.39171
      75.55251,398.73891M429.507,939.46794C578.78343,763.03991
      746.55158,593.76963
      899.91052,454.84121M470.35494,940.01166C595.55289,787.0757
      764.14488,621.01728 918.95565,481.37871M525,940
      685,755h120.41872M567.92551,940.0502
      699.86133,787.5h106.78892M611.46541,939.39021
      714.72266,820h97.2642M654.39213,939.43943
      729.58398,852.5h93.89714M697.39662,939.39902
      744.44531,885h95.04566M740.07521,939.73575
      759.30664,917.5H860M906.39152,629.42293
      1063.7852,756.67736M871.92369,617.813
      1043.2441,757.01082M459.61865,481.34795C414.86903,573.51288
      406.45192,669.62669 385,765M303.65592,-0.00221915C259.09343,162.78907
      138.61386,327.07777
      209.42337,483.4732M240.09997,458.27954C187.0849,297.86018
      265.54056,182.85405
      300.09597,58.960082M805.81085,330.134c14.88787,-6.44544 30.42237,-12.16006
      46.14865,-17.2138M0.09725143,902.73906C71.866196,860.06685
      117.03718,820.61709 170,750c50,100 99.8567,155.1639 176.97865,227.3892
      281.56105,263.6842 94.15072,409.6105
      -13.08443,480.4695M377.5,842.5c4.42321,0 9.31831,2.00257
      14.86719,9.24023C397.91606,858.97789 402.5,871.0223 402.5,885c0,13.9777
      -4.58394,26.0221 -10.13281,33.25977C386.81831,925.49743 381.92321,927.5
      377.5,927.5c-4.42321,0 -9.31831,-2.00257
      -14.86719,-9.24023C357.08394,911.0221 352.5,898.9777 352.5,885c0,-13.9777
      4.58394,-26.02211 10.13281,-33.25977C368.18169,844.50257 373.07679,842.5
      377.5,842.5v0M1130,765c16.8191,30.21345 26.6544,60.2083 30,90
      47.2312,18.32372 82.8871,51.83723 115,90 2.3419,-37.0436 -4.2974,-71.38724
      -30,-100 23.3498,-4.99857 40.0029,-20.01884 50,-45 -14.5281,-24.40208
      -35.9759,-32.69918 -60,-35 44.8752,-32.16719 30.2665,-71.33926 20,-110
      -32.9633,38.74398 -63.8666,77.97963
      -125,110v0M1300,705.83334l-34.3239,2.86032M1299.9997,930.55544l-26.1711,-\
      11.63161M1192.7269,836.42558c37.6985,20.41997 54.5672,59.51932
      65.2796,89.01033M1182.9686,784.9233c26.555,-0.86899 48.4536,-6.17171
      77.0314,15.0767 -14.6369,19.51581 -30.1358,29.72065
      -67.2011,34.6433M1234.6287,679.15791c-1.9945,40.38926 -12.7829,83.27561
      -52.2037,104.5774M1162.3431,745.42454c26.5383,39.87481 36.0743,80.87688
      26.979,123.43436M1130,765c0,0 -82.1675,-15 -95,-5 -12.8325,10
      -32.9691,31.30714 -40,40 -31.97044,39.52731 3.64509,49.72935
      20,30M1050,800c-59.31161,25.45028 -64.22618,120.61499
      20,25M1041.1933,853.52948c-14.9444,32.29436 0.7581,60.30105
      58.5,-5.24847M1062.1853,882.59071C1040.9944,921.29246 1103.755,918.14402
      1160,855M1063.2524,755.79961c33.572,-37.62441 66.2866,-76.82735
      96.4461,-120.73492M1078.4582,757.6865c32.4929,-36.68328 64.0954,-75.00591
      93.2554,-117.82589M1085,735c-4.9523,-58.0017 -25.4042,-90.06768 -80,-65
      38.526,16.69119 38.6175,74.15849 80,65v0M1005,670c37.8073,-6.25375
      56.1399,40.79694 80,65M1100,732.33169c35,-15 50.6726,-47.07119 67.2824,-5
      -32.2824,-2.08351 -62.2824,45
      -67.2824,5v0M1100.0662,732.84533c26.3257,8.26747 52.4616,-23.9051
      67.2162,-5.51364M1155.0001,585.00001C1080.0001,630 1080,484.99999
      1155,530c-45,-75 100,-75 55,0 75,-45 75,100 10e-5,55 45,75.00001
      -100.0001,74.99999 -55,10e-6v0M1242.5,557.5c-60,0 -60,0 -60,-60 0,60 0,60
      -60,60 60,0 60,0 60,60 0,-60 0,-60
      60,-60v0M1122.9743,521.34338c-1.248,-10.59434 -3.0726,-20.43952
      -5.4737,-28.84337 8.5766,2.45046 18.6544,4.30045
      29.4977,5.54996M1146.7554,616.97813c-10.7509,1.24908 -20.7424,3.08971
      -29.255,5.52188 2.4225,-8.47859 4.2581,-18.42426
      5.5069,-29.12621M1241.9485,592.9857c1.2496,10.84959 3.1002,20.93331
      5.5519,29.5143 -8.4143,-2.40409 -18.2735,-4.23021
      -28.8829,-5.47837M1218.5761,497.98319c10.625,-1.24828 20.4988,-3.07601
      28.9239,-5.48319 -2.4151,8.45286 -4.2469,18.3639
      -5.4955,29.0288M357.95908,386.26136c-4.7848,-2.30618 -9.52375,-4.6875
      -14.28345,-7.12611M748.06895,383.93902C622.45119,413.08814
      538.88863,420.5377
      479.79194,417.07826M355.99023,456.12891c29.62693,11.74538 64.9141,21.55877
      110.0293,25.15039 51.3028,4.08421 115.55629,0.48608
      200.56445,-14.4043C568.01187,553.99998 468.15967,644.25595
      384.25,765.71289 359.23837,670.90747 359.53927,564.67648
      355.99023,456.12891v0M85,135c10.787262,31.12992 5,90 35,90 65,0 20,-95
      -35,-145 -55.000004,50 -100.000004,145 -35,145 30,0 24.21273,-58.87008
      35,-90v0M40,285c0,0 0,-10 10,-10 12.88094,0 15,45 -10,45 -34.999996,0
      -29.999996,-70 5,-70 30,0 40,50 40,50 0,0 10,-50 40,-50 35,0 40,70 5,70
      -25,0 -22.88094,-45 -10,-45 10,0 10,10 10,10M120,275c-55,2.66831 15,250
      14.49097,296.289C134.16784,600.67311 125,630 85,630 45,630
      35.832163,600.67311 35.509031,571.289 35,525 105,277.66831
      50,275M70,264.98358V208.33333M100,265.18883V208.74384M103.20611,627.39263\
      C121.81764,632.48836 135,645.16656 135,660c0,19.32997 -22.38576,35 -50,35
      -27.614237,0 -50,-15.67003 -50,-35 0,-14.8303 13.176786,-27.50627
      31.782083,-32.60414M65.931232,692.4756C41.674852,699.57662 35,720.74035
      35,740c0,36.24391 13.136211,96.133
      20.364326,126.34321M128.36935,800.67704C132.14739,778.91407 135,756.88968
      135,740c0,-19.39937 -6.77205,-40.73054
      -31.46191,-47.67672M256.89224,885h6.38602M1.1417102e-4,884.99999
      28.737098,885M245.57157,870h11.90122M2.5229169e-5,870.00002
      51.088175,870M233.67034,855h18.57752M4.1609595e-5,854.99999
      52.539543,855M222.93022,840h24.09272M7.6084636e-5,840.00001
      49.346532,840M212.77064,825h29.89819M4.2336546e-5,825.00002
      46.443795,825M203.1916,810h34.54258M4.0905762e-6,810.00002
      43.541058,810M194.48339,795h38.89668M129.46208,795h5.22493M-3.8457096e-5,\
      795.00001
      40.638321,795M186.06545,780h42.96051M131.78427,780h14.51368M-3.1733115e-5\
      ,780.00001
      38.316131,780M178.22806,765h46.73407M133.81618,765h24.67327M10,765H36.284\
      215M134.68701,750h86.50156M10,750H34.542573M134.97728,735h83.01828M15,735\
      H35.12312M132.65509,720H205M15,720H37.844594M155,705h45M325,510c-11.82334\
      ,-17.57111 -24.45521,-31.94743 -45.42097,-47.16261 -21.67788,-15.73198
      -32.01525,9.6364 -23.86278,22.70472M325,540c-13.68399,-15.7169
      -40.72661,-39.31758 -62.25684,-51.80699 -20.39713,-11.83211
      -26.52283,15.09906
      -9.53546,27.99468M326.64903,572.53873c-13.68399,-15.7169
      -40.42328,-39.85576 -62.25684,-51.80699 -33.04187,-18.08643
      -43.83934,14.15892
      -2.74316,31.80699M329.68204,632.14459c-13.68399,-15.7169
      -40.42328,-39.85576 -62.25684,-51.80699 -30.81157,-16.86561
      -37.65608,16.8659
      -5.11631,35.80661M328.06764,597.68777c-13.86078,-13.59047
      -33.31597,-27.70524 -50.77313,-39.51278 -22.07438,-14.9305
      -34.10496,4.47364
      -22.83565,17.22609M332.19576,659.38835c-13.77031,-13.23256
      -32.62008,-26.88451 -49.58329,-38.35795 -24.04479,-16.26322
      -36.17268,12.27173
      -19.25152,25.31598M335.48063,686.60634C319.24375,673.64242
      295.51352,659.7442 277.4252,650.3376c-31.2697,-16.26141 -36.88691,20.47944
      -3.29829,37.12122M339.44241,709.94356C293.812,671.34406
      241.20364,684.64228 285,715M345.57813,743.85785c-49.78299,-42.23381
      -140.14002,-42.27022
      -51.45386,5.50004M359.15379,797.42734C296.30783,757.35598
      217.41506,767.9862
      315.25691,808.08817M356.15219,815.71589c-43.41581,-18.1629
      -92.79129,0.20988
      -43.97099,13.65755M335.79649,833.55074c-36.46249,-11.38361
      -55.92576,9.42664 -11.42381,20.21059M323.63736,467.38673c-7.1925,-7.58612
      -15.51039,-14.89158 -25.85855,-22.4014 -17.52111,-12.71535
      -26.71907,0.32727 -25.12324,12.4885M322.15877,428.22708c-1.31784,-1.00168
      -2.67007,-2.00587 -4.05887,-3.01374 -19.41173,-14.0874 -28.60717,3.4419
      -24.22651,16.36102M351.5017,769.34668c-41.8286,-32.62324
      -87.13007,-22.98664 -57.82646,2.59886M396.50984,805.03398c97.55186,1.04019
      65.93584,25.61549 21.19412,25.63392M410.20409,785.71584c31.87867,-11.92022
      60.58013,-9.17207 74.95842,-1.62887 16.81695,8.82258 14.04006,24.2047
      -26.16419,30.34906M430.54986,757.7319c58.57662,-11.0001 103.69453,13.94896
      55.48459,26.1888M451.62343,729.60393c67.42086,-18.09697 125.45489,10.74224
      49.42624,33.66324M469.15226,707.61747c69.25339,-23.47062 135.42699,4.47512
      67.15155,28.14525M497.03474,675.73394c50.50234,-8.00778 88.6752,9.66559
      55.551,28.0217M514.06286,656.56715c77.25396,-19.94453 157.95502,17.262
      48.7626,27.75334M550.91529,618.31036c57.1762,-5.00205 100.00874,18.02731
      40.2256,35.03407M568.89077,600.93936c75.24789,-19.79781 151.84194,14.60918
      51.22446,34.33609M596.84001,574.15634c55.64482,-7.64299 102.46778,11.7471
      64.24628,28.76475M620.73761,552.10789c71.56974,-16.51587
      140.66537,14.62009 53.45997,34.06378M660.73433,515.56983c57.1151,-4.52529
      99.00079,18.87447 36.45506,35.78648M684.38719,494.58861c73.88041,-16.89549
      144.8643,16.89901 43.68109,36.08147M722.79564,460.82624c57.76542,-5.50387
      101.75016,17.65976 42.02455,34.7974M748.43052,437.7647c68.01755,-11.92015
      127.59071,17.4385 43.80212,36.02686M645.55164,273.86211C640.4516,285.47932
      635.59316,297.26013 610,295c-14.37233,81.30224 -73.77303,98.38804 -130,120
      0,0 -19.41945,15.64589 -29.41945,15.64589C435.58055,430.64589 425,425
      420,425c-5,0 -10,5 -25,5 -15,0 -30,-25 -40,-50 -30,-40 -55,-96.04455
      -55,-125 0,-20 5.003,-149.9992 5,-155 -0.002,-3.089335 -5.72781,-42.445846
      -10.1037,-72.07356M622.93321,240.32144C616.61632,250.552
      609.19352,264.74236 615,265c2.73428,0.12132 6.96971,-10.37759
      10.24354,-19.90618M904.16018,494.81448l50.56379,54.17549M889.99031,508.20\
      39l48.73454,52.21558M875.34795,521.08709l48.01937,51.44933M861.63691,534.\
      96812l46.15447,49.45122M847.01655,547.87487l45.96336,49.24646M832.83302,5\
      61.24966l35.28817,37.80876M818.66315,574.63908l24.02599,25.74214M803.8653\
      2,587.3557l17.84203,19.11646M790.06402,601.14003l8.92784,9.56554M482.7586\
      2,925h55.41872M495.89491,910h55.00821M508.21018,895h55.82923M521.34647,88\
      0h55.41872M534.48276,865h55.41872M552.95566,845H585M790,820v32.5M765,820v\
      32.5M740,820v32.5M703.26765,833.26765l22.578,22.578M684.08867,854.08867l2\
      3.39901,23.39901M665.93596,875.93596l22.78325,22.78325M648.19376,898.1937\
      6l22.578,22.578M629.22003,919.22003l20.73071,20.73071M791.29599,310.75526\
      c15.62961,-6.29692 31.83381,-11.83473
      48.11454,-16.69002M776.15664,290.35133c15.84539,-6.35519 32.2728,-11.93292
      48.76488,-16.81275M760.82223,270.4856c16.18061,-6.50419 32.97255,-12.19625
      49.8241,-17.16102M746.54814,252.22866c16.42632,-6.7965 33.54246,-12.73644
      50.75899,-17.91046M739.12096,229.17409c11.71799,-4.608 23.73402,-8.79725
      35.84163,-12.5995M726.54679,208.22774c8.46394,-3.2756 17.07495,-6.33535
      25.75602,-9.1911M711.68624,188.33917c5.39484,-2.00758 10.85695,-3.94932
      16.37032,-5.82515M900.40882,94.431781C848.5463,114.25376
      796.72828,69.769511 761.4322,93.621964 715,125.00001 755,185
      789.33498,165.18883 821.13528,146.84017 790,105 775,115c-9.30261,6.20174
      -14.88842,18.30946 -10,25 6.18042,8.45885 10.48873,9.62814
      20,5M901.46652,97.13303C861.76115,135.4564 879.34663,201.01228
      842.74068,222.52055 794.42332,250.91 757.5027,188.96753
      790.17065,166.51363c30.25635,-20.79631 54.6061,25.32412 39.1205,34.55428
      -9.60379,5.72429 -22.93675,5.55043 -26.86936,-1.74304 -4.972,-9.22111
      -4.17161,-13.61293 4.10189,-20.20332M765,180l90,-60M845,160c-10,-10
      -45.467,-11.35662 -55,5 22.00764,-11.03808 34.76336,-24.75676
      25,-45M795,230c25,30 50,20 75,10 24.05541,32.7653 64.66095,38.66637
      105,45M725,130C715,110 740,85 755,75 749.14905,51.948962
      757.70702,26.00987 766.59362,0.00490542M700,90c10,-25 25,-25 25,-25
      -8.48271,-38.172217 3.28893,-47.867055
      8.18679,-64.93099617M427.96416,0.01822477C445.06535,51.748024
      483.31343,78.400493
      539.31946,83.994433M446.67053,0.04362022C462.63103,38.843647
      492.03631,61.699978
      533.14043,70.683071M461.24526,0.01603427C475.22521,27.447203
      496.92922,45.718691
      525.58366,55.74792M476.99588,0.10806452C487.38028,16.453559
      500.99836,28.964352
      517.63646,37.893813M371.26432,0.04443925C356.34418,40.196712
      340.91798,80.075485
      304.69652,100.28589M355.60874,0.04353776C343.34293,31.804187
      329.13875,61.845937
      302.67098,80.298673M339.57059,0.02060224C329.73362,23.196287
      317.89132,44.53011
      299.71459,59.883794M325.15652,0.08430598C317.46458,14.722402
      308.27692,27.964826 296.26758,38.544057M305,120c41.1016,-25.066138
      61.56092,-14.28714 80,0 20,55 -15,110 -14.41945,151.6763 0.21559,15.47674
      11.72696,13.44856 19.41945,13.3237 4.99934,-0.0811 15,10
      15,10M305,125c29.58587,-20.97635 55.47603,-17.50669 80,-5M430,245c20,0
      20,30 5,30 -40,5 -40,-10 -5,0M365,315v10l5,-5
      -5,-5v0M455,320l5,-5v10l-5,-5v0M370,320c0,0 5,5 10,5 5,0 5.24415,-4.00984
      12.32219,-4.4848C400,320 400,325 405,325c5,0 15,-10 20,-10 5,0 15,5
      20,5h10M390,340c3.06957,28.45212 45.6136,8.68856 45,5 -5,5
      -44.77199,31.85105 -45,-5v0M430,135c51.53607,-36.718861 85.86501,-16.18211
      120,5 -35.40475,-25.98218 -85,-45 -120,-5v0M540,160C525,160
      503.52953,134.61544 483.61398,136.45137 453.79885,139.1999 445,175 430,180
      447.93464,158.59181 463.7944,151.78059 478.07024,151.93493
      507.27438,152.25068 515,185 550,175M430,180c15,-10 32.80939,10.04302
      45.17423,9.94542C504.08195,189.71723 519.49385,175 530,175M380,175c-20,0
      -30.87367,-19.1648 -47.03192,-20.29027 -12.3413,-0.85961
      -29.19452,12.61246 -29.19452,17.61246 0,7.07107 11.23734,20.70784
      22.74316,23.25836C342.90794,199.21402 362.81244,175.3491
      380,175v0M305,165c22.64276,-42.75014 64.95345,-9.49214 65,-5M820,265c15,15
      35,10 45,5 20.5191,14.6565 42.75671,20.72048 62.68286,23.22939M851.86653
      312.33707C895.10619 299.11787 938.83136 290.34833 975 285C924.90149
      188.22308 899.90057 94.152754 874.11725 -0.0019513659
      M851.86653,312.33707C895.10619,299.11787 938.83136,290.34833 975,285
      924.90149,188.22308 899.90057,94.152754
      874.11725,-0.00195137M851.01315,311.99775
      635.36748,-2.4089679e-4M927.65339,293.26472C907.75671,290.72048
      885.5191,284.6565 865,270c-10,5 -30,10 -45,-5\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ6\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          stroke=\"#44F\"\r

      \          stroke-linecap=\"round\"\r

      \          stroke-linejoin=\"round\"\r

      \          stroke-width=\"3\"\r

      \          fill=\"none\"\r

      \          d=\"M986.60333,811.20184l17.52527,26.83701m3.5763,5.47663
      14.2883,21.88014M993.49031,800.86775c12.59499,20.81314 26.36539,39.79428
      40.67199,57.93996m3.6811,4.63683c6.0574,7.57938 12.2001,15.02588
      18.3803,22.41378m3.5795,4.26824c4.9357,5.87225 9.8895,11.71638
      14.8372,17.56998M1002.2895,791.27746c25.6547,42.89167 56.3312,77.95704
      86.5273,113.77117M1011.3206,782.24417c26.5981,44.89853 58.7236,81.18275
      90.1523,118.55299M1018.2105,775.40469C1045.4382,820.51985
      1078.1971,857.01507 1110,895M91.990234,409.08984c5.346491,34.39969
      12.364566,69.89746 17.978516,99.54297 5.61395,29.64551 9.60751,54.84672
      9.52344,62.49219 -0.14502,13.18721 -2.60383,25.09508
      -7.35157,32.2207C107.39289,610.47133 101.33414,615 85,615 68.665861,615
      62.607113,610.47133
      57.859375,603.3457M95.230469,511.42383c2.783382,14.69817 5.162021,28.28252
      6.812501,38.99023 1.65048,10.70771 2.46055,19.51658 2.44922,20.54688
      -0.12561,11.42229 -3.03694,21.37127 -4.833987,24.06836 -1.554361,2.33286
      -1.96098,2.67133 -3.316406,3.33203C94.986371,599.02203 91.780811,600
      85,600M99.244141,641.85938C113.48363,645.75807 120,654.05348
      120,660c0,3.87456 -2.13436,8.18273 -8.24609,12.46094C105.64218,676.73915
      95.96981,680 85,680 74.030191,680 64.357824,676.73915
      58.246094,672.46094M99.476562,706.76367c8.835718,2.48582 12.847888,6.43575
      15.929688,11.99805C118.48805,724.32402 120,732.04575 120,740c0,15.20071
      -2.70618,36.77501 -6.41016,58.11133M102.94922,660.2832C99.903483,662.33803
      92.860098,665 85,665c-7.997241,0 -15.198086,-2.76015
      -18.152344,-4.82812M102.28516,726.03125C103.52282,728.2651 105,733.94656
      105,740c0,13.42041 -2.56634,34.6744
      -6.189453,55.54492M726.75998,368.27894C639.85431,387.67178
      574.6926,396.00751
      524.83867,397.57475M715.61309,356.58894C649.94086,370.7787
      597.12268,378.4618
      554.16847,381.63062M703.03893,344.25945c-49.76763,10.38288
      -91.8849,16.91189 -127.75629,20.52287M690.7875,331.76901c-38.30305,7.6982
      -71.90839,13.04175
      -101.50758,16.49148M680.13806,318.87243c-30.03631,5.82677
      -57.08899,10.16495 -81.51547,13.25269M670.20516,305.76564c-23.347,4.36958
      -44.8345,7.81564 -64.64196,10.45774M659.57286,292.71511c-18.04772,3.23925
      -34.94556,5.91034 -50.78275,8.07274M390,380c11.94547,-13.95601
      27.22073,-12.69836 45,0M440,195c10,15 30,15 45,15M310,205c50,25 60,-30
      70,-30M350.01995,162.05531c1.14299,3.17833 1.7863,6.76631 1.7863,10.56373
      0,13.03628 -7.58139,23.60427 -16.9335,23.60427 -9.35211,0
      -16.93349,-10.568 -16.93349,-23.60427 0,-5.79795 1.49965,-11.10766
      3.98776,-15.21654M488.55832,153.60687c1.90775,3.81995 3.02626,8.46304
      3.02626,13.4703 0,13.03628 -7.58139,23.60427 -16.9335,23.60427 -9.35211,0
      -16.93349,-10.568 -16.93349,-23.60427 0,-4.03258 0.72545,-7.82898
      2.00436,-11.14943\"\r

      \        ></path>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(1188,935)scale(1,0.972)rotate(-40)translate(-45,-45)\
      \"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(1194,1043)scale(1,0.972)rotate(-40)translate(-45,-4\
      5)\"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(1096,1033)scale(1,0.972)rotate(-40)translate(-45,-4\
      5)\"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(1022,947)scale(1,0.972)rotate(-40)translate(-45,-45)\
      \"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(918,851)scale(1,0.972)rotate(-40)translate(-45,-45)\
      \"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(897,726)scale(1,0.972)rotate(-40)translate(-45,-45)\
      \"></use>\r

      \      </symbol>\r

      \      <rect width=\"239\" height=\"335\" x=\"-119.5\" y=\"-167.5\"
      rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ1\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ1\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ2\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ2\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ3\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ3\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ4\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ4\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ5\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ5\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ6\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ6\"></use>\r

      \      <use xlink:href=\"#VSQ\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \      <use xlink:href=\"#SSQ\" height=\"26.769\" x=\"-111.784\"
      y=\"-119\"></use>\r

      \      <use xlink:href=\"#SSQ\" height=\"55.68\" x=\"36.088\"
      y=\"-132.16\"></use>\r

      \      <g transform=\"rotate(180)\">\r

      \        <use xlink:href=\"#VSQ\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"26.769\" x=\"-111.784\"
      y=\"-119\"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"55.68\" x=\"36.088\"
      y=\"-132.16\"></use>\r

      \      </g>\r

      \      <use xlink:href=\"#XSQ\" stroke=\"#44F\"
      fill=\"none\"></use>\r

      \    </svg>\r

      \  `;\r

      \  html = replaceAllFast(html, 'black', 'green');\r

      \  mDiv(dTable, {}, null, html);\r

      \  return;\r

      }\r\n"
    sig: function test10_verrueckt(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test10_queen_html:
    name: test10_queen_html
    code: "function test10_queen_html() {\r

      \  let htmlWORKS = `\r

      \    <svg\r

      \      xmlns=\"http://www.w3.org/2000/svg\"\r

      \      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r

      \      face=\"QS\"\r

      \      height=\"100%\"\r

      \      preserveAspectRatio=\"none\"\r

      \      viewBox=\"-120 -168 240 336\"\r

      \      width=\"100%\"\r

      \      fill=\"#ffff00\"\r

      \      stroke=\"green\"\r

      \      >\r

      \      <defs><rect id=\"XSQ\" width=\"164.8\" height=\"260.8\"
      x=\"-82.4\" y=\"-130.4\"></rect></defs>\r

      \      <symbol id=\"VSQ\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \        <path\r

      \          d=\"M-260 100C40 100 -40 460 260 460M-175 0L-175 -285A175
      175 0 0 1 175 -285L175 285A175 175 0 0 1 -175 285Z\"\r

      \          stroke=\"green\"\r

      \          stroke-width=\"80\"\r

      \          stroke-linecap=\"square\"\r

      \          stroke-miterlimit=\"1.5\"\r

      \          fill=\"none\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SSQ\" viewBox=\"-600 -600 1200 1200\"
      preserveAspectRatio=\"xMinYMid\">\r

      \        <path\r

      \          d=\"M0 -500C100 -250 355 -100 355 185A150 150 0 0 1 55
      185A10 10 0 0 0 35 185C35 385 85 400 130 500L-130 500C-85 400 -35 385 -35
      185A10 10 0 0 0 -55 185A150 150 0 0 1 -355 185C-355 -100 -100 -250 0
      -500Z\"\r

      \          fill=\"green\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ1\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          fill=\"green\"\r

      \          d=\"M635.39648,0 851.86719,312.33789C895.10685,299.11869
      938.83136,290.34833 975,285 924.90197,188.22401 899.89439,94.153799
      874.11133,0ZM295.52539,27.285156C246.27551,180.9799 142.75435,335.54042
      209.25195,483.08398l-17.43359,13.44922c1.76531,151.10099
      30.08527,286.57163 74.54102,398.60938 18.12594,21.287 38.56227,42.11564
      61.47851,64.11523 3.61128,3.46683 7.28461,6.96262
      11.33789,10.61914L901.47852,970l-0.41407,-0.51953c-0.12219,-0.138
      -0.23745,-0.27418 -0.35937,-0.41211 15.27725,17.28278 32.6506,35.12574
      52.3164,53.54294C1030.1434,1094.8366 1080,1150 1130,1250c52.9819,-70.6425
      98.186,-110.0972 170,-152.7871v-37.6016c-68.6196,39.3343 -116.9422,76.6549
      -164.5547,131.9668 -44.9491,-77.8482 -93.9175,-130.6069
      -160.20897,-192.68943 -76.05982,-71.23062 -114.27421,-131.59148
      -129.3711,-180.42578 -15.09688,-48.8343 -8.90849,-86.60287
      7.94922,-120.96875 28.31708,-57.72677 91.51367,-102.35489
      139.07032,-133.86328l-26.7793,-21.49024C896.53697,588.11019
      793.22595,665.67487 806.10938,786.48828L699.86133,787.5 568.0625,939.89258
      429.48438,939.86328C578.06034,763.29892 745.82856,594.02803
      899.1875,455.09961l-9.56836,-10.99023c-28.86687,-3.02061
      -55.64392,-10.37642 -80.51758,-21.42774 -1.77605,4.17261 -4.43372,8.02096
      -7.94336,11.23438C665.11643,558.39566 525.46983,665.166
      419.78906,829.43164L392.45703,811.84766C501.69344,642.05529
      644.58723,533.12674 779.21875,409.9375l17.51367,6.86328c-17.74437,-8.98707
      -34.48695,-19.8921 -50.29101,-32.48437 -124.71285,29.03155
      -208.27492,36.48099 -267.26758,31.98242 0,0 -19.31641,14.60547
      -29.31641,14.60547 -15,0 -25.58008,-5.64453 -30.58008,-5.64453 -5,0 -10,5
      -25,5 -15,0 -30,-25 -40,-50 -1.51422,-2.01895 -3.01443,-4.07919
      -4.23242,-5.79297l-39.21875,30.25586 10.50977,-0.54493c7.17244,138.45299
      -1.25836,281.23598 43.02929,408.13477l-27.41796,17.66602c-1.32891,-2.13106
      -2.43311,-4.45616 -3.26758,-6.95704C288.22851,692.7888 295.29422,552.70428
      289.59766,421.09961l-69.70313,53.77344
      20.20508,-16.59375C187.08454,297.85994 265.54029,182.85491
      300.0957,58.960938ZM85,80c-55.000004,50 -100.000004,145 -35,145 9.343263,0
      15.215964,-5.70961
      19.599609,-15.58984l-0.05469,54.80664C63.116922,255.80043 55.218717,250
      45,250c-34.999996,0 -39.999996,70 -5,70 24.46345,0 22.957588,-43.08208
      10.8125,-44.93164 53.48157,5.0855 -15.809214,250.16385 -15.302734,296.2207
      0.268193,24.38822 6.628431,48.73678 31.46289,56.20899C48.176742,632.49354
      35,645.1697 35,660 35,674.30844 47.265656,686.61054 65.384766,692.25586
      41.674751,699.57565 35,720.74035 35,740 35,776.24391 48.1356,836.13212
      55.517578,866.33008 82.604368,846.54619 106.08392,825.42866
      128.83984,800.21875 132.14826,778.91478 135,756.88968 135,740
      135,720.60063 128.2285,699.26867 104.15234,691.95898 118.02756,686.75065
      129.28173,676.58841 135,660c0,-14.83344 -13.18185,-27.51102
      -30.78711,-32.89844 24.05654,-8.65812 30.01787,-32.21714
      30.27734,-55.8125C134.99671,525.23221 65.705931,280.15386
      119.1875,275.06836 107.04241,276.91792 105.53655,320 130,320c35,0 30,-70
      -5,-70 -10.83425,0 -19.06007,6.52154
      -25.074219,15.02148L100.25195,209.2793C104.49041,218.99863 110.42097,225
      120,225 185,225 140,130 85,80Zm641.48047,287.83789c-86.62544,19.83455
      -151.78802,28.17022 -200.80469,29.24219 -14.2248,6.27415
      -30.07191,11.92239 -45.7793,18.95898 58.99266,4.49857 142.55438,-2.95118
      267.19727,-32.03711 -7.7527,-5.20716 -14.38853,-10.76914
      -20.61328,-16.16406zm-370.49024,88.29102c29.62693,11.74538
      64.9141,21.55877 110.0293,25.15039 51.3028,4.08421 115.55629,0.48608
      200.56445,-14.4043C568.01187,553.99998 468.15967,644.25595
      384.25,765.71289 359.23837,670.90747 359.53927,564.67648
      355.99023,456.12891ZM1182.5,473.75c-24.0403,0 -48.0562,17.34722
      -29.8594,52.02344A45,42.5 0 0 1 1182.5,515a45,42.5 0 0 1
      29.8652,10.76367C1230.552,491.09427 1206.538,473.75
      1182.5,473.75Zm-54.6914,47.48047c-45.2477,0.77462 -37.6424,97.7377
      22.793,66.2168A45,42.5 0 0 1 1137.5,557.5a45,42.5 0 0 1
      13.1113,-29.94336c-8.6891,-4.53343 -16.2978,-6.43753
      -22.8027,-6.32617zm109.3828,0c-6.5027,-0.11132 -14.1076,1.79222
      -22.793,6.32226A45,42.5 0 0 1 1227.5,557.5a45,42.5 0 0 1
      -13.1094,29.94336c60.4429,31.53409 68.0505,-65.43824
      22.8008,-66.21289zm-24.8301,67.99414A45,42.5 0 0 1 1182.5,600 45,42.5 0 0
      1 1152.6348,589.23633c-11.9875,22.85174 -5.6311,38.16959 6.9726,45.95898
      -23.6821,34.46419 -48.941,66.02584 -74.9492,96.20703C1079.1653,675.69528
      1058.4509,645.45798 1005,670c37.225,16.12754 38.5709,70.31699
      75.9492,65.69727 -5.8664,6.76063 -11.768,13.45662
      -17.6972,20.10156l15.207,1.88672c7.2551,-8.19076 14.4623,-16.46748
      21.6113,-24.85352 5.1929,39.08146 35.0698,-7.57452 67.2129,-5.5
      -16.4802,-41.743 -32.0495,-10.50502 -66.4785,4.63672 24.5708,-28.86629
      48.4073,-59.08334 70.8027,-91.95508 26.5679,6.12811 61.7407,-10.79807
      40.7539,-50.78906zM1255,655c-32.9633,38.74398 -63.8666,77.97963 -125,110
      16.8191,30.21345 26.6544,60.2083 30,90 47.2312,18.32372 82.8871,51.83723
      115,90 2.3419,-37.0436 -4.2974,-71.38724 -30,-100 23.3498,-4.99857
      40.0029,-20.01884 50,-45 -14.5281,-24.40208 -35.9759,-32.69918 -60,-35
      44.8752,-32.16719 30.2665,-71.33926
      20,-110zM811.88477,817.78516c10.86486,41.66548 35.34229,88.00659
      78.58593,139.42382 -4.92291,-5.82285 -9.66276,-11.58316
      -14.2207,-17.2539l-286.46289,-0.0586 64.60547,-0.45703 75.1914,-86.93945
      93.88282,-0.33984c-4.9028,-11.9067 -8.74345,-23.39087
      -11.58203,-34.375zM377.5,842.5c4.42321,0 9.31831,2.00257
      14.86719,9.24023C397.91606,858.97789 402.5,871.0223 402.5,885c0,13.9777
      -4.58394,26.0221 -10.13281,33.25977C386.81831,925.49743 381.92321,927.5
      377.5,927.5c-4.42321,0 -9.31831,-2.00257
      -14.86719,-9.24023C357.08394,911.0221 352.5,898.9777 352.5,885c0,-13.9777
      4.58394,-26.02211 10.13281,-33.25977C368.18169,844.50257 373.07679,842.5
      377.5,842.5Z\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ2\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          fill=\"red\"\r

      \          d=\"M557.51758,0 805.9668,330.45703 851.01367,311.99805
      635.36719,0Zm78.02148,0 63.76563,90.75C709.99966,65.000167 725,65 725,65
      716.50651,26.779299 728.31462,17.104416 733.20117,0ZM820,265
      851.86719,312.33789C877.5079,304.49903 903.31958,298.22492
      927.6543,293.26562 907.75762,290.72138 885.5191,284.6565 865,270c-10,5
      -30,10 -45,-5zm99.12695,216.28711C764.14521,621.01648 595.55342,787.07572
      470.35547,940.01172L525,940
      685,755h120.41797l-0.0547,-0.41211c6.37431,-102.76161 97.50088,-170.65811
      160.41211,-212.22851zm-727.41992,15.5625 -59.86133,46.34766
      -0.39648,0.30468c1.93099,12.0459 3.10803,21.69313 3.04101,27.78711
      -0.25947,23.59536 -6.2208,47.15438 -30.27734,55.8125C121.81815,632.48898
      135,645.16656 135,660 129.28173,676.58841 118.02756,686.75065
      104.15234,691.95898 128.2285,699.26867 135,720.60063 135,740c0,16.88968
      -2.85174,38.91478 -6.16016,60.21875 -1.95154,2.162 -3.90854,4.29257
      -5.87304,6.39453C138.56664,789.96704 153.92711,771.43051 170,750
      200.25102,810.50205 230.44886,854.59181 266.85742,895.71484
      221.90196,783.10482 193.58426,647.63449
      191.70703,496.84961ZM44.53125,610.36133
      0,644.61523V902.7832C30.797744,884.46615 56.707359,866.73637
      80.427734,846.89844 72.427991,853.57027 64.158102,860.01913
      55.517578,866.33008 48.1356,836.13212 35,776.24391 35,740 35,720.74035
      41.674751,699.57565 65.384766,692.25586 47.265656,686.61054 35,674.30844
      35,660 35,645.1697 48.176742,632.49354 66.972656,627.49805
      56.528563,624.35562 49.361734,618.22105
      44.53125,610.36133Zm1190.09765,68.79687 -1.1211,1.04688c-20.0542,23.0427
      -41.8711,45.665 -71.7441,65.72265 27.117,39.37142 36.6532,80.37363
      27.7441,123.12891 25.4392,14.76465 47.2329,33.87001 67.875,55.8418
      -10.0896,-28.95393 -26.9566,-68.05217
      -64.6191,-89.36328C1229.865,829.72137 1245.3631,819.51581
      1260,800c-28.5778,-21.24841 -50.4759,-15.94491 -77.3027,-15.66992
      39.149,-21.89578 49.9371,-64.78262
      51.9316,-105.17188zM110.74609,819.23828c-0.7889,0.78628 -1.58065,1.56702
      -2.37304,2.3457 0.792,-0.77791 1.58362,-1.55961
      2.37304,-2.3457zm-5.15234,5.05078c-0.76819,0.74251 -1.53476,1.48679
      -2.30664,2.22266 0.77112,-0.73534 1.53841,-1.48017
      2.30664,-2.22266zm-5.26172,5.00586c-2.077449,1.94603 -4.165139,3.87648
      -6.273436,5.7793 2.104356,-1.90192 4.194747,-3.83083
      6.273436,-5.7793zm-6.539061,6.02149c-1.467973,1.32281 -2.945132,2.63598
      -4.429688,3.93945 1.482456,-1.30407 2.961518,-2.61456
      4.429688,-3.93945zM377.5,862.5a11,22.5 0 0 0 -11,22.5 11,22.5 0 0 0
      11,22.5 11,22.5 0 0 0 11,-22.5 11,22.5 0 0 0
      -11,-22.5zm225.17578,127.46484a10,10 0 0 0 -10,10 10,10 0 0 0 10,9.99996
      10,10 0 0 0 10,-9.99996 10,10 0 0 0 -10,-10zM420,990a10,10 0 0 0 -10,10
      10,10 0 0 0 10,10 10,10 0 0 0 10,-10 10,10 0 0 0
      -10,-10zm91.13281,0.41016a10,10 0 0 0 -10,10.00004 10,10 0 0 0 10,10 10,10
      0 0 0 10,-10 10,10 0 0 0 -10,-10.00004z\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ3\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          fill=\"#44F\"\r

      \          d=\"M472.5,150a12.5,20 0 0 0 -12.5,20 12.5,20 0 0 0
      12.5,20 12.5,20 0 0 0 12.5,-20 12.5,20 0 0 0 -12.5,-20zm-140,5a12.5,20 0 0
      0 -12.5,20 12.5,20 0 0 0 12.5,20 12.5,20 0 0 0 12.5,-20 12.5,20 0 0 0
      -12.5,-20zm23.49023,301.12891c3.54904,108.54757 3.24814,214.77856
      28.25977,309.58398 83.90967,-121.45694 183.76187,-211.71291
      282.33398,-298.83789 -85.00816,14.89038 -149.26165,18.48851
      -200.56445,14.4043 -45.1152,-3.59162 -80.40237,-13.40501
      -110.0293,-25.15039zm42.92579,22.92187c22.57573,0.10326 52.52779,2.34383
      83.49804,6.2461 65.74558,8.28415 118.15335,21.65893 117.05469,29.87304
      -1.09829,8.2139 -56.30922,5.07893 -122.05273,-3.20508 -65.73948,-8.28354
      -117.1185,-18.57868 -116.02735,-26.79296 0.53448,-4.02047
      14.07178,-6.22853 37.52735,-6.1211zM1117.5,492.5c2.4011,8.40385
      4.2266,18.24941 5.4746,28.84375v0.36133c7.3876,-1.36391 16.4655,0.0837
      27.2324,5.62304l-21.2675,-21.26757a1.50015,1.50015 0 0 1 1.0449,-2.57617
      1.50015,1.50015 0 0 1 1.0761,0.45507l21.2676,21.26758c-5.5291,-10.74776
      -6.9807,-19.81297 -5.6289,-27.19336 -10.7286,-1.24895 -20.7021,-3.08593
      -29.1992,-5.51367zm130,0c-8.4251,2.40718 -18.2988,4.23414
      -28.9238,5.48242h-0.2793c1.3613,7.38557 -0.087,16.46062
      -5.6231,27.22266l21.2657,-21.26563a1.50015,1.50015 0 0 1 1.0312,-0.45312
      1.50015,1.50015 0 0 1 1.0898,2.57422l-21.2675,21.26757c10.7565,-5.53399
      19.8272,-6.98416 27.2109,-5.62695v-0.17187c1.2486,-10.6649 3.081,-20.57644
      5.4961,-29.0293zm-853.59961,15.25781c20.38428,0.10329 47.42876,2.34386
      75.39258,6.2461 59.36368,8.28422 106.68388,21.65899 105.69141,29.87304
      -0.99271,8.21355 -49.91699,8.15671 -109.27735,-0.12695 -59.36371,-8.28422
      -106.68391,-21.659 -105.69141,-29.87305 0.48636,-4.01928 12.70935,-6.22659
      33.88477,-6.11914zm7.69531,34.67969c15.09367,-0.0753 32.61454,0.81411
      50.47852,2.5625 51.50146,5.04084 94.00823,14.75226 93.67578,23.00391
      -0.32891,8.2521 -42.34749,10.85536 -93.84961,5.81445C400.39893,568.77752
      358.91755,558.00165 359.25,549.75c0.20345,-5.08688 15.52034,-7.17888
      42.3457,-7.3125zm590.81446,21.09375c-26.28817,17.83124 -58.00395,39.71623
      -85.84375,65.82227L1063.252,755.79883c5.9292,-6.64494 11.8308,-13.34093
      17.6972,-20.10156C1043.5709,740.31699 1042.225,686.12754
      1005,670c53.4509,-24.54202 74.1653,5.69528 79.6582,61.40234
      18.288,-21.22222 36.2025,-43.13214 53.4609,-66.25 -50.4965,-31.89003
      -99.3677,-65.63189
      -145.70894,-101.62109zm92.24804,167.87109c-1.2353,1.43353 -2.4703,2.86748
      -3.709,4.29493 1.3064,-0.16146 2.6533,-0.388 4.0508,-0.69727
      -0.1038,-1.21628 -0.2241,-2.40447 -0.3418,-3.59766zm-21.4062,24.39649
      1.3242,1.02344C1092.8236,758.22045 1130,765 1130,765c33.2353,-17.40792
      57.5278,-36.95014 78.082,-57.38477 -19.9562,-11.65548 -39.7017,-23.55345
      -59.2109,-35.71875 -15.5528,20.88792 -31.6462,40.7815 -48.0664,60.07227
      34.429,-15.14174 49.9983,-46.37972 66.4785,-4.63672 -32.1431,-2.07452
      -62.02,44.58146 -67.2129,5.5 -7.149,8.38604 -14.3562,16.66276
      -21.6113,24.85352zM399.88477,574.98828c12.13924,-0.0753 26.23048,0.81416
      40.59765,2.5625 41.42116,5.04089 74.78321,15.81675 74.51563,24.06836
      -0.26463,8.25206 -34.05885,10.85531 -75.48047,5.81445 -41.42116,-5.04089
      -74.78321,-15.81675 -74.51563,-24.06836 0.16364,-5.08693 13.30756,-8.24338
      34.88282,-8.37695zm814.90823,12.6836 21.2675,21.26757a1.50015,1.50015 0 1
      1 -2.121,2.1211l-21.2657,-21.26563c5.5369,10.76367 6.9837,19.84044
      5.6211,27.22656h0.3223c10.6094,1.24816 20.4685,3.07443 28.8828,5.47852
      -2.4278,-8.49731 -4.2627,-18.47029 -5.5117,-29.19922 -7.3807,1.35234
      -16.4468,-0.0994 -27.1953,-5.6289zm-64.5879,0.002c-10.7501,5.53028
      -19.8161,6.98044 -27.1973,5.62695v0.0723c-1.2488,10.70195 -3.0853,20.64836
      -5.5078,29.12695 8.4975,-2.42785 18.4701,-4.26471 29.1992,-5.51367
      -1.3518,-7.38039 0.1,-16.44561
      5.6289,-27.19336l-21.2676,21.26758a1.50015,1.50015 0 1 1
      -2.121,-2.1211zM399.95117,608.2207c7.75591,-0.014 16.33902,0.59569
      25.04883,1.7793 30.51033,4.14665 55.19775,16.74619 55.24414,25
      0.0491,8.25469 -24.64792,11.5847 -55.16016,7.4375 -30.51033,-4.14665
      -55.28173,-14.19933 -55.32812,-22.45312 -0.0324,-5.62262
      11.68692,-11.73096 30.19531,-11.76368zm2.94141,36.28321c3.92832,-0.0157
      8.00124,0.15115 12.10742,0.49609 25.08573,2.10744 44.77796,7.02839
      45.42188,14.97852 0.64298,7.94981 -19.17087,12.68576 -44.25586,10.57812
      -25.08573,-2.10744 -45.94398,-10.26081 -46.5879,-18.21094 -0.52278,-6.4668
      13.79255,-7.76393 33.31446,-7.84179zm-6.3711,30.78125c1.53788,10e-4
      3.10151,0.0612 4.67383,0.17968 15.24356,1.1523 28.12847,7.43255
      28.7793,14.02735 0.6519,6.59512 -11.17778,11.00764 -26.42188,9.85547
      -15.24356,-1.1523 -28.12847,-7.43255 -28.77929,-14.02735 -0.57317,-5.81151
      8.60794,-10.04793 21.74804,-10.03515zm-2.7207,30.4707c0.97501,0.002
      1.96625,0.0499 2.96289,0.14453 9.66123,0.91446 17.82809,5.89851
      18.24219,11.13281 0.4126,5.23472 -7.08576,8.73687 -16.74805,7.82227
      -9.66123,-0.91446 -17.82809,-5.89851 -18.24219,-11.13281 -0.3645,-4.61356
      5.45528,-7.97697 13.78516,-7.9668zm906.19922,0.0781
      -34.2773,2.85547c0.2249,20.00253 -6.7832,39.15319 -30.7188,56.31055
      24.0241,2.30082 45.4719,10.59792 60,35 -9.9971,24.98116 -26.6502,40.00143
      -50,45 19.6816,21.91005 28.1768,47.18324 30.0293,74.45312l0.01,0.008
      24.957,11.09375zm-167.2656,64.20508c0.2372,0.44647 0.4708,0.89347
      0.7051,1.33985 -0.2343,-0.44637 -0.4679,-0.89339
      -0.7051,-1.33985zm3.041,5.88282c0.083,0.16606 0.171,0.33199 0.2539,0.49804
      -0.083,-0.16604 -0.1705,-0.33202
      -0.2539,-0.49804zm2.6758,5.48437c0.2147,0.45253 0.425,0.90499
      0.6367,1.35742 -0.2117,-0.45239 -0.4219,-0.90493
      -0.6367,-1.35742zm2.455,5.32422c0.1795,0.40036 0.3641,0.80089
      0.5411,1.20117 -0.177,-0.40029 -0.3615,-0.80081
      -0.5411,-1.20117zm2.5958,5.98437c0.2099,0.50184 0.413,1.00415
      0.6191,1.50586 -0.2062,-0.5018 -0.4092,-1.00393
      -0.6191,-1.50586zm2.0703,5.11719c0.1975,0.50277 0.4,1.00516 0.5937,1.50781
      -0.1937,-0.50252 -0.3962,-1.00516
      -0.5937,-1.50781zm2.3418,6.1875c0.1922,0.53072 0.3764,1.06121
      0.5644,1.5918 -0.188,-0.53055 -0.3722,-1.06112
      -0.5644,-1.5918zm1.7324,4.96485c0.2042,0.60477 0.4106,1.20984
      0.6094,1.81445 -0.1988,-0.60461 -0.4051,-1.20971
      -0.6094,-1.81445zm2.0273,6.26562c0.1846,0.60177 0.3579,1.20308
      0.5371,1.80469 -0.1792,-0.60139 -0.3525,-1.20313
      -0.5371,-1.80469zm1.4688,5.00977c0.1799,0.63781 0.3593,1.27644
      0.5332,1.91406 -0.174,-0.63786 -0.3532,-1.27602
      -0.5332,-1.91406zM377.5,842.5c-4.42321,0 -9.31831,2.00257
      -14.86719,9.24023C357.08394,858.97789 352.5,871.0223 352.5,885c0,13.9777
      4.58394,26.0221 10.13281,33.25977 5.54888,7.23766 10.44398,9.24023
      14.86719,9.24023 4.42321,0 9.31831,-2.00257
      14.86719,-9.24023C397.91606,911.0221 402.5,898.9777 402.5,885c0,-13.9777
      -4.58394,-26.02211 -10.13281,-33.25977C386.81831,844.50257 381.92321,842.5
      377.5,842.5Zm-0.27344,4.79492c2.95574,0.0879 5.94922,5.08008
      5.94922,10.70508 10.93128,-0.11104 14.67749,3.31056 5.67578,13
      13.69744,3.7436 10.6454,8.69968 2.83789,14 7.80751,5.30032
      10.85955,10.2564 -2.83789,14 9.00171,9.68944 5.2555,13.11104 -5.67578,13
      0,10 -9.4596,18 -11.35156,0 -10.93128,0.11104 -14.67748,-3.31056
      -5.67578,-13 -13.69744,-3.7436 -10.6454,-8.69968 -2.83789,-14
      -7.80751,-5.30032 -10.85955,-10.2564 2.83789,-14 -9.0017,-9.68944
      -5.2555,-13.11104 5.67578,-13 0.82773,-7.875 3.10344,-10.77344
      5.40234,-10.70508zm352.35742,5.20508 -75.1914,86.93945
      43.0039,-0.041L744.44531,885H840l-15,-32.5zm29.72266,65
      -19.23047,22.23633L876.25,939.95508 860,917.5Zm-104.13476,52.41992
      -315.75977,0.17969c2.43984,2.47881 4.98787,4.87423 7.56641,7.28906
      15.37025,14.39437 29.32058,28.43253 41.91015,42.12693 1.06974,-4.4442
      6.04965,-11.1309 16.11133,-19.5156 -30,-25 -15,-34.99999 15,-15
      30,-19.99999 45,-10 15,15 30,25 15,35 -15,15 -11.06914,7.3794
      -20.08451,10.6644 -25.5625,10.6289 1.31057,1.4627 2.62767,2.9262
      3.90625,4.3809l256.41797,-0.1328zm-170.01172,4.44531C490.60938,974.21875
      499.75,977.5 511,985c30,-19.99999 45,-10 15,15 30,25 15,35 -15,15 -30,20
      -45,10 -15,-15 -18.75,-15.625 -19.92188,-25.39063
      -10.83984,-25.63477zm91,0C581.60938,974.21875 590.75,977.5
      602,985c30,-19.99999 45,-10 15,15 30,25 15,35 -15,15 -30,20 -45,10 -15,-15
      -18.75,-15.625 -19.92188,-25.39063 -10.83984,-25.63477z\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ4\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          fill=\"green\"\r

      \          d=\"M499.67383,0C598.83088,212.42554 698.5156,423.78371
      891.07812,444.24805L557.50781,0ZM299.89844,59.855469C265.54099,182.85387
      187.08454,297.85994
      240.09961,458.2793L349.875,372.94531C322.20549,333.64118 300,282.28964
      300,255c0,-20 5.00324,-149.9992 5,-155 -10e-4,-2.004308 -2.41143,-19.27436
      -5.10156,-40.144531zM899.91016,454.8418C746.55122,593.77022
      578.78424,763.04072
      429.50781,939.46875l40.84766,0.54297C595.55342,787.07576
      764.14431,621.01748
      918.95508,481.37891Zm65.79101,87.45703c-28.87179,19.18723
      -64.12524,44.12835 -93.97851,75.52344l25.55078,20.04296c30.22964,-29.84438
      65.96002,-54.59002 95.59961,-73.97851 -9.28135,-6.87909
      -18.47109,-14.10656 -27.17188,-21.58789zM685,755 525.10156,939.88281
      570,940 699.86133,787.5H806.65039L805,755Z\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ5\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          stroke=\"#44F\"\r

      \          stroke-linecap=\"round\"\r

      \          stroke-linejoin=\"round\"\r

      \          stroke-width=\"6\"\r

      \          fill=\"none\"\r

      \          d=\"M435,885A57.5,75.000002 0 0 1 377.5,960.00001
      57.5,75.000002 0 0 1 320,885 57.5,75.000002 0 0 1 377.5,810 57.5,75.000002
      0 0 1
      435,885v0M417.07718,940H876.02627M308.27069,940h28.75722M339.49097,970H90\
      1.47783M131.84482,543.19629 351.03451,374.58883M6.9310566e-5,644.61533
      44.832165,610.1291M1138.1663,665.18229C1077.9926,627.18313
      1020.1253,586.55302
      965.29601,542.45758M1208.5796,707.90733c-20.1878,-11.78458
      -40.1599,-23.81534 -59.8906,-36.12132M557.51806,-3.5577172e-4
      965.44559,542.57786M1299.7291,1059.765c-68.4773,39.2778 -116.7334,76.5733
      -164.2838,131.8131 -44.9491,-77.8482 -93.9175,-130.6069
      -160.20897,-192.68943 -76.05982,-71.23062 -114.27421,-131.59148
      -129.3711,-180.42578 -15.09688,-48.8343 -8.90849,-86.60287
      7.94922,-120.96875 28.31708,-57.72677 91.51285,-102.35515
      139.0695,-133.86354M499.68528,0.03748108C598.83742,212.45251
      698.51437,423.77834
      890.34164,443.851M364.36489,812.31243C320.07724,685.41364
      328.50886,542.63024 321.33642,404.17725c76.71711,39.85219
      163.35704,77.44074 457.8821,5.76082C644.587,533.12731 501.69292,642.05444
      392.45651,811.84681M355.97656,456.125c29.62956,11.74764 64.92126,21.56216
      110.04297,25.1543 51.30556,4.08443 115.56309,0.48617 200.57813,-14.40625
      -98.57798,87.12824 -198.39177,177.48156 -282.2461,298.86133
      -24.96545,-94.92731 -24.7974,-201.06283
      -28.375,-309.60938v0M867.34252,440.4065C719.62961,574.07588
      560.4386,730.57461
      436.09373,879.43791M223.89186,472.86906c-0.82324,183.16931
      37.98603,343.48203
      98.11552,466.27071M191.49798,496.71315c2.08648,150.92196
      30.40471,286.39171
      75.55251,398.73891M429.507,939.46794C578.78343,763.03991
      746.55158,593.76963
      899.91052,454.84121M470.35494,940.01166C595.55289,787.0757
      764.14488,621.01728 918.95565,481.37871M525,940
      685,755h120.41872M567.92551,940.0502
      699.86133,787.5h106.78892M611.46541,939.39021
      714.72266,820h97.2642M654.39213,939.43943
      729.58398,852.5h93.89714M697.39662,939.39902
      744.44531,885h95.04566M740.07521,939.73575
      759.30664,917.5H860M906.39152,629.42293
      1063.7852,756.67736M871.92369,617.813
      1043.2441,757.01082M459.61865,481.34795C414.86903,573.51288
      406.45192,669.62669 385,765M303.65592,-0.00221915C259.09343,162.78907
      138.61386,327.07777
      209.42337,483.4732M240.09997,458.27954C187.0849,297.86018
      265.54056,182.85405
      300.09597,58.960082M805.81085,330.134c14.88787,-6.44544 30.42237,-12.16006
      46.14865,-17.2138M0.09725143,902.73906C71.866196,860.06685
      117.03718,820.61709 170,750c50,100 99.8567,155.1639 176.97865,227.3892
      281.56105,263.6842 94.15072,409.6105
      -13.08443,480.4695M377.5,842.5c4.42321,0 9.31831,2.00257
      14.86719,9.24023C397.91606,858.97789 402.5,871.0223 402.5,885c0,13.9777
      -4.58394,26.0221 -10.13281,33.25977C386.81831,925.49743 381.92321,927.5
      377.5,927.5c-4.42321,0 -9.31831,-2.00257
      -14.86719,-9.24023C357.08394,911.0221 352.5,898.9777 352.5,885c0,-13.9777
      4.58394,-26.02211 10.13281,-33.25977C368.18169,844.50257 373.07679,842.5
      377.5,842.5v0M1130,765c16.8191,30.21345 26.6544,60.2083 30,90
      47.2312,18.32372 82.8871,51.83723 115,90 2.3419,-37.0436 -4.2974,-71.38724
      -30,-100 23.3498,-4.99857 40.0029,-20.01884 50,-45 -14.5281,-24.40208
      -35.9759,-32.69918 -60,-35 44.8752,-32.16719 30.2665,-71.33926 20,-110
      -32.9633,38.74398 -63.8666,77.97963
      -125,110v0M1300,705.83334l-34.3239,2.86032M1299.9997,930.55544l-26.1711,-\
      11.63161M1192.7269,836.42558c37.6985,20.41997 54.5672,59.51932
      65.2796,89.01033M1182.9686,784.9233c26.555,-0.86899 48.4536,-6.17171
      77.0314,15.0767 -14.6369,19.51581 -30.1358,29.72065
      -67.2011,34.6433M1234.6287,679.15791c-1.9945,40.38926 -12.7829,83.27561
      -52.2037,104.5774M1162.3431,745.42454c26.5383,39.87481 36.0743,80.87688
      26.979,123.43436M1130,765c0,0 -82.1675,-15 -95,-5 -12.8325,10
      -32.9691,31.30714 -40,40 -31.97044,39.52731 3.64509,49.72935
      20,30M1050,800c-59.31161,25.45028 -64.22618,120.61499
      20,25M1041.1933,853.52948c-14.9444,32.29436 0.7581,60.30105
      58.5,-5.24847M1062.1853,882.59071C1040.9944,921.29246 1103.755,918.14402
      1160,855M1063.2524,755.79961c33.572,-37.62441 66.2866,-76.82735
      96.4461,-120.73492M1078.4582,757.6865c32.4929,-36.68328 64.0954,-75.00591
      93.2554,-117.82589M1085,735c-4.9523,-58.0017 -25.4042,-90.06768 -80,-65
      38.526,16.69119 38.6175,74.15849 80,65v0M1005,670c37.8073,-6.25375
      56.1399,40.79694 80,65M1100,732.33169c35,-15 50.6726,-47.07119 67.2824,-5
      -32.2824,-2.08351 -62.2824,45
      -67.2824,5v0M1100.0662,732.84533c26.3257,8.26747 52.4616,-23.9051
      67.2162,-5.51364M1155.0001,585.00001C1080.0001,630 1080,484.99999
      1155,530c-45,-75 100,-75 55,0 75,-45 75,100 10e-5,55 45,75.00001
      -100.0001,74.99999 -55,10e-6v0M1242.5,557.5c-60,0 -60,0 -60,-60 0,60 0,60
      -60,60 60,0 60,0 60,60 0,-60 0,-60
      60,-60v0M1122.9743,521.34338c-1.248,-10.59434 -3.0726,-20.43952
      -5.4737,-28.84337 8.5766,2.45046 18.6544,4.30045
      29.4977,5.54996M1146.7554,616.97813c-10.7509,1.24908 -20.7424,3.08971
      -29.255,5.52188 2.4225,-8.47859 4.2581,-18.42426
      5.5069,-29.12621M1241.9485,592.9857c1.2496,10.84959 3.1002,20.93331
      5.5519,29.5143 -8.4143,-2.40409 -18.2735,-4.23021
      -28.8829,-5.47837M1218.5761,497.98319c10.625,-1.24828 20.4988,-3.07601
      28.9239,-5.48319 -2.4151,8.45286 -4.2469,18.3639
      -5.4955,29.0288M357.95908,386.26136c-4.7848,-2.30618 -9.52375,-4.6875
      -14.28345,-7.12611M748.06895,383.93902C622.45119,413.08814
      538.88863,420.5377
      479.79194,417.07826M355.99023,456.12891c29.62693,11.74538 64.9141,21.55877
      110.0293,25.15039 51.3028,4.08421 115.55629,0.48608
      200.56445,-14.4043C568.01187,553.99998 468.15967,644.25595
      384.25,765.71289 359.23837,670.90747 359.53927,564.67648
      355.99023,456.12891v0M85,135c10.787262,31.12992 5,90 35,90 65,0 20,-95
      -35,-145 -55.000004,50 -100.000004,145 -35,145 30,0 24.21273,-58.87008
      35,-90v0M40,285c0,0 0,-10 10,-10 12.88094,0 15,45 -10,45 -34.999996,0
      -29.999996,-70 5,-70 30,0 40,50 40,50 0,0 10,-50 40,-50 35,0 40,70 5,70
      -25,0 -22.88094,-45 -10,-45 10,0 10,10 10,10M120,275c-55,2.66831 15,250
      14.49097,296.289C134.16784,600.67311 125,630 85,630 45,630
      35.832163,600.67311 35.509031,571.289 35,525 105,277.66831
      50,275M70,264.98358V208.33333M100,265.18883V208.74384M103.20611,627.39263\
      C121.81764,632.48836 135,645.16656 135,660c0,19.32997 -22.38576,35 -50,35
      -27.614237,0 -50,-15.67003 -50,-35 0,-14.8303 13.176786,-27.50627
      31.782083,-32.60414M65.931232,692.4756C41.674852,699.57662 35,720.74035
      35,740c0,36.24391 13.136211,96.133
      20.364326,126.34321M128.36935,800.67704C132.14739,778.91407 135,756.88968
      135,740c0,-19.39937 -6.77205,-40.73054
      -31.46191,-47.67672M256.89224,885h6.38602M1.1417102e-4,884.99999
      28.737098,885M245.57157,870h11.90122M2.5229169e-5,870.00002
      51.088175,870M233.67034,855h18.57752M4.1609595e-5,854.99999
      52.539543,855M222.93022,840h24.09272M7.6084636e-5,840.00001
      49.346532,840M212.77064,825h29.89819M4.2336546e-5,825.00002
      46.443795,825M203.1916,810h34.54258M4.0905762e-6,810.00002
      43.541058,810M194.48339,795h38.89668M129.46208,795h5.22493M-3.8457096e-5,\
      795.00001
      40.638321,795M186.06545,780h42.96051M131.78427,780h14.51368M-3.1733115e-5\
      ,780.00001
      38.316131,780M178.22806,765h46.73407M133.81618,765h24.67327M10,765H36.284\
      215M134.68701,750h86.50156M10,750H34.542573M134.97728,735h83.01828M15,735\
      H35.12312M132.65509,720H205M15,720H37.844594M155,705h45M325,510c-11.82334\
      ,-17.57111 -24.45521,-31.94743 -45.42097,-47.16261 -21.67788,-15.73198
      -32.01525,9.6364 -23.86278,22.70472M325,540c-13.68399,-15.7169
      -40.72661,-39.31758 -62.25684,-51.80699 -20.39713,-11.83211
      -26.52283,15.09906
      -9.53546,27.99468M326.64903,572.53873c-13.68399,-15.7169
      -40.42328,-39.85576 -62.25684,-51.80699 -33.04187,-18.08643
      -43.83934,14.15892
      -2.74316,31.80699M329.68204,632.14459c-13.68399,-15.7169
      -40.42328,-39.85576 -62.25684,-51.80699 -30.81157,-16.86561
      -37.65608,16.8659
      -5.11631,35.80661M328.06764,597.68777c-13.86078,-13.59047
      -33.31597,-27.70524 -50.77313,-39.51278 -22.07438,-14.9305
      -34.10496,4.47364
      -22.83565,17.22609M332.19576,659.38835c-13.77031,-13.23256
      -32.62008,-26.88451 -49.58329,-38.35795 -24.04479,-16.26322
      -36.17268,12.27173
      -19.25152,25.31598M335.48063,686.60634C319.24375,673.64242
      295.51352,659.7442 277.4252,650.3376c-31.2697,-16.26141 -36.88691,20.47944
      -3.29829,37.12122M339.44241,709.94356C293.812,671.34406
      241.20364,684.64228 285,715M345.57813,743.85785c-49.78299,-42.23381
      -140.14002,-42.27022
      -51.45386,5.50004M359.15379,797.42734C296.30783,757.35598
      217.41506,767.9862
      315.25691,808.08817M356.15219,815.71589c-43.41581,-18.1629
      -92.79129,0.20988
      -43.97099,13.65755M335.79649,833.55074c-36.46249,-11.38361
      -55.92576,9.42664 -11.42381,20.21059M323.63736,467.38673c-7.1925,-7.58612
      -15.51039,-14.89158 -25.85855,-22.4014 -17.52111,-12.71535
      -26.71907,0.32727 -25.12324,12.4885M322.15877,428.22708c-1.31784,-1.00168
      -2.67007,-2.00587 -4.05887,-3.01374 -19.41173,-14.0874 -28.60717,3.4419
      -24.22651,16.36102M351.5017,769.34668c-41.8286,-32.62324
      -87.13007,-22.98664 -57.82646,2.59886M396.50984,805.03398c97.55186,1.04019
      65.93584,25.61549 21.19412,25.63392M410.20409,785.71584c31.87867,-11.92022
      60.58013,-9.17207 74.95842,-1.62887 16.81695,8.82258 14.04006,24.2047
      -26.16419,30.34906M430.54986,757.7319c58.57662,-11.0001 103.69453,13.94896
      55.48459,26.1888M451.62343,729.60393c67.42086,-18.09697 125.45489,10.74224
      49.42624,33.66324M469.15226,707.61747c69.25339,-23.47062 135.42699,4.47512
      67.15155,28.14525M497.03474,675.73394c50.50234,-8.00778 88.6752,9.66559
      55.551,28.0217M514.06286,656.56715c77.25396,-19.94453 157.95502,17.262
      48.7626,27.75334M550.91529,618.31036c57.1762,-5.00205 100.00874,18.02731
      40.2256,35.03407M568.89077,600.93936c75.24789,-19.79781 151.84194,14.60918
      51.22446,34.33609M596.84001,574.15634c55.64482,-7.64299 102.46778,11.7471
      64.24628,28.76475M620.73761,552.10789c71.56974,-16.51587
      140.66537,14.62009 53.45997,34.06378M660.73433,515.56983c57.1151,-4.52529
      99.00079,18.87447 36.45506,35.78648M684.38719,494.58861c73.88041,-16.89549
      144.8643,16.89901 43.68109,36.08147M722.79564,460.82624c57.76542,-5.50387
      101.75016,17.65976 42.02455,34.7974M748.43052,437.7647c68.01755,-11.92015
      127.59071,17.4385 43.80212,36.02686M645.55164,273.86211C640.4516,285.47932
      635.59316,297.26013 610,295c-14.37233,81.30224 -73.77303,98.38804 -130,120
      0,0 -19.41945,15.64589 -29.41945,15.64589C435.58055,430.64589 425,425
      420,425c-5,0 -10,5 -25,5 -15,0 -30,-25 -40,-50 -30,-40 -55,-96.04455
      -55,-125 0,-20 5.003,-149.9992 5,-155 -0.002,-3.089335 -5.72781,-42.445846
      -10.1037,-72.07356M622.93321,240.32144C616.61632,250.552
      609.19352,264.74236 615,265c2.73428,0.12132 6.96971,-10.37759
      10.24354,-19.90618M904.16018,494.81448l50.56379,54.17549M889.99031,508.20\
      39l48.73454,52.21558M875.34795,521.08709l48.01937,51.44933M861.63691,534.\
      96812l46.15447,49.45122M847.01655,547.87487l45.96336,49.24646M832.83302,5\
      61.24966l35.28817,37.80876M818.66315,574.63908l24.02599,25.74214M803.8653\
      2,587.3557l17.84203,19.11646M790.06402,601.14003l8.92784,9.56554M482.7586\
      2,925h55.41872M495.89491,910h55.00821M508.21018,895h55.82923M521.34647,88\
      0h55.41872M534.48276,865h55.41872M552.95566,845H585M790,820v32.5M765,820v\
      32.5M740,820v32.5M703.26765,833.26765l22.578,22.578M684.08867,854.08867l2\
      3.39901,23.39901M665.93596,875.93596l22.78325,22.78325M648.19376,898.1937\
      6l22.578,22.578M629.22003,919.22003l20.73071,20.73071M791.29599,310.75526\
      c15.62961,-6.29692 31.83381,-11.83473
      48.11454,-16.69002M776.15664,290.35133c15.84539,-6.35519 32.2728,-11.93292
      48.76488,-16.81275M760.82223,270.4856c16.18061,-6.50419 32.97255,-12.19625
      49.8241,-17.16102M746.54814,252.22866c16.42632,-6.7965 33.54246,-12.73644
      50.75899,-17.91046M739.12096,229.17409c11.71799,-4.608 23.73402,-8.79725
      35.84163,-12.5995M726.54679,208.22774c8.46394,-3.2756 17.07495,-6.33535
      25.75602,-9.1911M711.68624,188.33917c5.39484,-2.00758 10.85695,-3.94932
      16.37032,-5.82515M900.40882,94.431781C848.5463,114.25376
      796.72828,69.769511 761.4322,93.621964 715,125.00001 755,185
      789.33498,165.18883 821.13528,146.84017 790,105 775,115c-9.30261,6.20174
      -14.88842,18.30946 -10,25 6.18042,8.45885 10.48873,9.62814
      20,5M901.46652,97.13303C861.76115,135.4564 879.34663,201.01228
      842.74068,222.52055 794.42332,250.91 757.5027,188.96753
      790.17065,166.51363c30.25635,-20.79631 54.6061,25.32412 39.1205,34.55428
      -9.60379,5.72429 -22.93675,5.55043 -26.86936,-1.74304 -4.972,-9.22111
      -4.17161,-13.61293 4.10189,-20.20332M765,180l90,-60M845,160c-10,-10
      -45.467,-11.35662 -55,5 22.00764,-11.03808 34.76336,-24.75676
      25,-45M795,230c25,30 50,20 75,10 24.05541,32.7653 64.66095,38.66637
      105,45M725,130C715,110 740,85 755,75 749.14905,51.948962
      757.70702,26.00987 766.59362,0.00490542M700,90c10,-25 25,-25 25,-25
      -8.48271,-38.172217 3.28893,-47.867055
      8.18679,-64.93099617M427.96416,0.01822477C445.06535,51.748024
      483.31343,78.400493
      539.31946,83.994433M446.67053,0.04362022C462.63103,38.843647
      492.03631,61.699978
      533.14043,70.683071M461.24526,0.01603427C475.22521,27.447203
      496.92922,45.718691
      525.58366,55.74792M476.99588,0.10806452C487.38028,16.453559
      500.99836,28.964352
      517.63646,37.893813M371.26432,0.04443925C356.34418,40.196712
      340.91798,80.075485
      304.69652,100.28589M355.60874,0.04353776C343.34293,31.804187
      329.13875,61.845937
      302.67098,80.298673M339.57059,0.02060224C329.73362,23.196287
      317.89132,44.53011
      299.71459,59.883794M325.15652,0.08430598C317.46458,14.722402
      308.27692,27.964826 296.26758,38.544057M305,120c41.1016,-25.066138
      61.56092,-14.28714 80,0 20,55 -15,110 -14.41945,151.6763 0.21559,15.47674
      11.72696,13.44856 19.41945,13.3237 4.99934,-0.0811 15,10
      15,10M305,125c29.58587,-20.97635 55.47603,-17.50669 80,-5M430,245c20,0
      20,30 5,30 -40,5 -40,-10 -5,0M365,315v10l5,-5
      -5,-5v0M455,320l5,-5v10l-5,-5v0M370,320c0,0 5,5 10,5 5,0 5.24415,-4.00984
      12.32219,-4.4848C400,320 400,325 405,325c5,0 15,-10 20,-10 5,0 15,5
      20,5h10M390,340c3.06957,28.45212 45.6136,8.68856 45,5 -5,5
      -44.77199,31.85105 -45,-5v0M430,135c51.53607,-36.718861 85.86501,-16.18211
      120,5 -35.40475,-25.98218 -85,-45 -120,-5v0M540,160C525,160
      503.52953,134.61544 483.61398,136.45137 453.79885,139.1999 445,175 430,180
      447.93464,158.59181 463.7944,151.78059 478.07024,151.93493
      507.27438,152.25068 515,185 550,175M430,180c15,-10 32.80939,10.04302
      45.17423,9.94542C504.08195,189.71723 519.49385,175 530,175M380,175c-20,0
      -30.87367,-19.1648 -47.03192,-20.29027 -12.3413,-0.85961
      -29.19452,12.61246 -29.19452,17.61246 0,7.07107 11.23734,20.70784
      22.74316,23.25836C342.90794,199.21402 362.81244,175.3491
      380,175v0M305,165c22.64276,-42.75014 64.95345,-9.49214 65,-5M820,265c15,15
      35,10 45,5 20.5191,14.6565 42.75671,20.72048 62.68286,23.22939M851.86653
      312.33707C895.10619 299.11787 938.83136 290.34833 975 285C924.90149
      188.22308 899.90057 94.152754 874.11725 -0.0019513659
      M851.86653,312.33707C895.10619,299.11787 938.83136,290.34833 975,285
      924.90149,188.22308 899.90057,94.152754
      874.11725,-0.00195137M851.01315,311.99775
      635.36748,-2.4089679e-4M927.65339,293.26472C907.75671,290.72048
      885.5191,284.6565 865,270c-10,5 -30,10 -45,-5\"\r

      \        ></path>\r

      \      </symbol>\r

      \      <symbol id=\"SQ6\" preserveAspectRatio=\"none\" viewBox=\"0 0
      1300 2000\">\r

      \        <path\r

      \          stroke=\"#44F\"\r

      \          stroke-linecap=\"round\"\r

      \          stroke-linejoin=\"round\"\r

      \          stroke-width=\"3\"\r

      \          fill=\"none\"\r

      \          d=\"M986.60333,811.20184l17.52527,26.83701m3.5763,5.47663
      14.2883,21.88014M993.49031,800.86775c12.59499,20.81314 26.36539,39.79428
      40.67199,57.93996m3.6811,4.63683c6.0574,7.57938 12.2001,15.02588
      18.3803,22.41378m3.5795,4.26824c4.9357,5.87225 9.8895,11.71638
      14.8372,17.56998M1002.2895,791.27746c25.6547,42.89167 56.3312,77.95704
      86.5273,113.77117M1011.3206,782.24417c26.5981,44.89853 58.7236,81.18275
      90.1523,118.55299M1018.2105,775.40469C1045.4382,820.51985
      1078.1971,857.01507 1110,895M91.990234,409.08984c5.346491,34.39969
      12.364566,69.89746 17.978516,99.54297 5.61395,29.64551 9.60751,54.84672
      9.52344,62.49219 -0.14502,13.18721 -2.60383,25.09508
      -7.35157,32.2207C107.39289,610.47133 101.33414,615 85,615 68.665861,615
      62.607113,610.47133
      57.859375,603.3457M95.230469,511.42383c2.783382,14.69817 5.162021,28.28252
      6.812501,38.99023 1.65048,10.70771 2.46055,19.51658 2.44922,20.54688
      -0.12561,11.42229 -3.03694,21.37127 -4.833987,24.06836 -1.554361,2.33286
      -1.96098,2.67133 -3.316406,3.33203C94.986371,599.02203 91.780811,600
      85,600M99.244141,641.85938C113.48363,645.75807 120,654.05348
      120,660c0,3.87456 -2.13436,8.18273 -8.24609,12.46094C105.64218,676.73915
      95.96981,680 85,680 74.030191,680 64.357824,676.73915
      58.246094,672.46094M99.476562,706.76367c8.835718,2.48582 12.847888,6.43575
      15.929688,11.99805C118.48805,724.32402 120,732.04575 120,740c0,15.20071
      -2.70618,36.77501 -6.41016,58.11133M102.94922,660.2832C99.903483,662.33803
      92.860098,665 85,665c-7.997241,0 -15.198086,-2.76015
      -18.152344,-4.82812M102.28516,726.03125C103.52282,728.2651 105,733.94656
      105,740c0,13.42041 -2.56634,34.6744
      -6.189453,55.54492M726.75998,368.27894C639.85431,387.67178
      574.6926,396.00751
      524.83867,397.57475M715.61309,356.58894C649.94086,370.7787
      597.12268,378.4618
      554.16847,381.63062M703.03893,344.25945c-49.76763,10.38288
      -91.8849,16.91189 -127.75629,20.52287M690.7875,331.76901c-38.30305,7.6982
      -71.90839,13.04175
      -101.50758,16.49148M680.13806,318.87243c-30.03631,5.82677
      -57.08899,10.16495 -81.51547,13.25269M670.20516,305.76564c-23.347,4.36958
      -44.8345,7.81564 -64.64196,10.45774M659.57286,292.71511c-18.04772,3.23925
      -34.94556,5.91034 -50.78275,8.07274M390,380c11.94547,-13.95601
      27.22073,-12.69836 45,0M440,195c10,15 30,15 45,15M310,205c50,25 60,-30
      70,-30M350.01995,162.05531c1.14299,3.17833 1.7863,6.76631 1.7863,10.56373
      0,13.03628 -7.58139,23.60427 -16.9335,23.60427 -9.35211,0
      -16.93349,-10.568 -16.93349,-23.60427 0,-5.79795 1.49965,-11.10766
      3.98776,-15.21654M488.55832,153.60687c1.90775,3.81995 3.02626,8.46304
      3.02626,13.4703 0,13.03628 -7.58139,23.60427 -16.9335,23.60427 -9.35211,0
      -16.93349,-10.568 -16.93349,-23.60427 0,-4.03258 0.72545,-7.82898
      2.00436,-11.14943\"\r

      \        ></path>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(1188,935)scale(1,0.972)rotate(-40)translate(-45,-45)\
      \"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(1194,1043)scale(1,0.972)rotate(-40)translate(-45,-4\
      5)\"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(1096,1033)scale(1,0.972)rotate(-40)translate(-45,-4\
      5)\"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(1022,947)scale(1,0.972)rotate(-40)translate(-45,-45)\
      \"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(918,851)scale(1,0.972)rotate(-40)translate(-45,-45)\
      \"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"90\"
      transform=\"translate(897,726)scale(1,0.972)rotate(-40)translate(-45,-45)\
      \"></use>\r

      \      </symbol>\r

      \      <rect width=\"239\" height=\"335\" x=\"-119.5\" y=\"-167.5\"
      rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"green\"></rect>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ1\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ1\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ2\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ2\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ3\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ3\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ4\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ4\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ5\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ5\"></use>\r

      \      <use width=\"164.8\" height=\"260.8\" x=\"-82.4\"
      y=\"-130.4\" xlink:href=\"#SQ6\"></use>\r

      \      <use transform=\"rotate(180)\" width=\"164.8\"
      height=\"260.8\" x=\"-82.4\" y=\"-130.4\" xlink:href=\"#SQ6\"></use>\r

      \      <use xlink:href=\"#VSQ\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \      <use xlink:href=\"#SSQ\" height=\"26.769\" x=\"-111.784\"
      y=\"-119\"></use>\r

      \      <use xlink:href=\"#SSQ\" height=\"55.68\" x=\"36.088\"
      y=\"-132.16\"></use>\r

      \      <g transform=\"rotate(180)\">\r

      \        <use xlink:href=\"#VSQ\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"26.769\" x=\"-111.784\"
      y=\"-119\"></use>\r

      \        <use xlink:href=\"#SSQ\" height=\"55.68\" x=\"36.088\"
      y=\"-132.16\"></use>\r

      \      </g>\r

      \      <use xlink:href=\"#XSQ\" stroke=\"#44F\"
      fill=\"none\"></use>\r

      \    </svg>\r

      \    `;\r

      \  let d1 = mDiv();\r

      \  d1.innerHTML = html;\r

      \  mAppend(dTable, d1);\r

      }\r\n"
    sig: function test10_queen_html(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test9_just_1_card:
    name: test9_just_1_card
    code: "function test9_just_1_card() {\r

      \  let dTable = mBy('dTable')\r

      \  clearElement(dTable);\r

      \  let card = ari_get_card('QSn', 200);\r

      \  mAppend(dTable, iDiv(card));\r

      \  return card;\r

      }\r\n"
    sig: function test9_just_1_card(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test7_add_hand_card:
    name: test7_add_hand_card
    code: "function test7_add_hand_card() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  let card = prompt('enter card (eg. 8H');\r

      \  fen.players[uplayer].hand.push(card + 'n');\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function test7_add_hand_card(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test4_direct_login_onclick_user:
    name: test4_direct_login_onclick_user
    code: "function test4_direct_login_onclick_user() {\r

      \  show_users();\r

      \  let uplayer = localStorage.getItem('uname');\r

      \  if (isdef(uplayer)) onclick_user(uplayer);\r

      }\r\n"
    sig: function test4_direct_login_onclick_user(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test3_show_tables:
    name: test3_show_tables
    code: "function test3_show_tables() {\r

      \  phpPost({ app: 'easy' }, 'tables');\r

      }\r\n"
    sig: function test3_show_tables(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test2_onclick_user:
    name: test2_onclick_user
    code: "function test2_onclick_user() {\r

      \  let ms = 300;\r

      \  show_users(300);\r

      \  setTimeout(() => onclick_user('felix'), 400);\r

      }\r\n"
    sig: function test2_onclick_user(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test1_show_users:
    name: test1_show_users
    code: "function test1_show_users() {\r

      \  show_users();\r

      }\r\n"
    sig: function test1_show_users(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test0_aristo_setup:
    name: test0_aristo_setup
    code: "function test0_aristo_setup() {\r

      \  let g = { func: aristo(), options: get_default_options('aristo')
      };\r

      \  g.fen = g.func.setup(['felix', 'mimi'], {});\r

      \  console.log('fen', g.fen);\r

      }\r\n"
    sig: function test0_aristo_setup(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  _poll:
    name: _poll
    code: "function _poll() {\r

      \  if (nundef(U) || nundef(Z) || nundef(Z.friendly)) {
      console.log('poll without U or Z!!!', U, Z); return; }\r

      \  show_polling_signal();\r

      \  if (nundef(DA.pollCounter)) DA.pollCounter = 0; DA.pollCounter++;
      console.log('polling'); \r

      \  if (Z.game == 'feedback' && i_am_host()) {\r

      \    send_or_sim({ friendly: Z.friendly, uname: Z.uplayer, fen:
      Z.fen, write_fen: true, auto: true }, 'table');\r

      \  } else send_or_sim({ friendly: Z.friendly, uname: Z.uplayer,
      auto: true }, 'table');\r

      }\r\n"
    sig: function _poll(){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  assertion:
    name: assertion
    code: "function assertion(cond) {\r

      \  if (!cond) {\r

      \    let args = [...arguments];\r

      \    for (const a of args) {\r

      \      console.log('\\n', a);\r

      \    }\r

      \    throw new Error('TERMINATING!!!')\r

      \  }\r

      }\r\n"
    sig: function assertion(cond){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  activate_ui:
    name: activate_ui
    code: "function activate_ui() {\r

      \  if (uiActivated) { DA.ai_is_moving = false; return; }\r

      \  uiActivated = true; DA.ai_is_moving = false;\r

      }\r\n"
    sig: function activate_ui(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  deactivate_ui:
    name: deactivate_ui
    code: "function deactivate_ui() { uiActivated = false; DA.ai_is_moving = true;
      }\r\n"
    sig: function deactivate_ui(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  clear_status:
    name: clear_status
    code: "function clear_status() { if (nundef(mBy('dStatus'))) return;
      clearTimeout(TO.fleeting); mRemove(\"dStatus\"); }\r\n"
    sig: function clear_status(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  clear_title:
    name: clear_title
    code: "function clear_title() { mClear('dTitleMiddle'); mClear('dTitleLeft');
      mClear('dTitleRight'); }\r\n"
    sig: function clear_title(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_waiting_html:
    name: get_waiting_html
    code: "function get_waiting_html(sz = 30) { return `<img
      src=\"../base/assets/icons/active_player.gif\" height=\"${sz}\"
      style=\"margin:0px ${sz / 3}px\" />`; }\r\n"
    sig: function get_waiting_html(sz = 30){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_default_options:
    name: get_default_options
    code: "function get_default_options(gamename) {\r

      \  let options = {};\r

      \  for (const k in Config.games[gamename].options) options[k] =
      arrLast(Config.games[gamename].options[k]);\r

      \  return options;\r

      }\r\n"
    sig: function get_default_options(gamename){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_logout_button:
    name: get_logout_button
    code: "function get_logout_button() {\r

      \  let html = `<a id=\"aLogout\"
      href=\"javascript:onclick_logout()\">logout</a>`;\r

      \  return mCreateFrom(html);\r

      }\r\n"
    sig: function get_logout_button(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_screen_distance:
    name: get_screen_distance
    code: "function get_screen_distance(child, newParent) {\r

      \  child = toElem(child);\r

      \  newParent = toElem(newParent);\r

      \  const parentOriginal = child.parentNode;\r

      \  let children = arrChildren(parentOriginal);\r

      \  let iChild = children.indexOf(child);\r

      \  let sibling = iChild == children.length - 1 ? null :
      children[iChild + 1];\r

      \  const x0 = child.getBoundingClientRect().left;\r

      \  const y0 = child.getBoundingClientRect().top;\r

      \  newParent.appendChild(child);\r

      \  const x1 = child.getBoundingClientRect().left;\r

      \  const y1 = child.getBoundingClientRect().top;\r

      \  if (sibling) parentOriginal.insertBefore(child, sibling); else
      parentOriginal.appendChild(child);\r

      \  return [x1 - x0, y1 - y0];\r

      }\r\n"
    sig: function get_screen_distance(child, newParent){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_game_color:
    name: get_game_color
    code: "function get_game_color(game) { return
      colorFrom(Config.games[game].color); }\r\n"
    sig: function get_game_color(game){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_playmode:
    name: get_playmode
    code: "function get_playmode(uname) { return Z.fen.players[uname].playmode;
      }\r\n"
    sig: function get_playmode(uname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_user_pic:
    name: get_user_pic
    code: "function get_user_pic(uname, sz = 50, border = 'solid medium white') {\r

      \  let html = get_user_pic_html(uname, sz, border);\r

      \  return mCreateFrom(html);\r

      }\r\n"
    sig: function get_user_pic(uname, sz = 50, border = 'solid medium white'){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_user_pic_html:
    name: get_user_pic_html
    code: "function get_user_pic_html(uname, sz = 50, border = 'solid medium white')
      {\r

      \  return `<img src='../base/assets/users/${uname}.jpg'
      width='${sz}' height='${sz}' class='img_person' style='margin:0px
      4px;border:${border}'>`\r

      }\r\n"
    sig: function get_user_pic_html(uname, sz = 50, border = 'solid medium white'){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_user_pic_and_name:
    name: get_user_pic_and_name
    code: "function get_user_pic_and_name(uname, dParent, sz = 50, border = 'solid
      medium white') {\r

      \  let html = `\r

      \      <div username='${uname}'
      style='text-align:center;font-size:${sz / 2.8}px'>\r

      \        <img src='../base/assets/users/${uname}.jpg' width='${sz}'
      height='${sz}' class='img_person' style='margin:0;border:${border}'>\r

      \        <div style='margin-top:${-sz / 6}px'>${uname}</div>\r

      \      </div>`;\r

      \  let elem = mCreateFrom(html);\r

      \  mAppend(dParent, elem);\r

      \  return elem;\r

      }\r\n"
    sig: function get_user_pic_and_name(uname, dParent, sz = 50, border = 'solid
      medium white'){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_just_my_turn:
    name: is_just_my_turn
    code: "function is_just_my_turn() {\r

      \  return isEmpty(Z.turn.filter(x => x != Z.uplayer));\r

      }\r\n"
    sig: function is_just_my_turn(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_user:
    name: set_user
    code: "function set_user(name) {\r

      \  if (isdef(Z) && isdef(U) && U.name != name) {\r

      \    Z.prev.u = U;\r

      \    Z.prev.uname = U.name;\r

      \  }\r

      \  U = firstCond(Serverdata.users, x => x.name == name);\r

      \  if (isdef(Z)) {\r

      \    Z.u = U;\r

      \    Z.uname = Z.uplayer = name;\r

      \  }\r

      }\r\n"
    sig: function set_user(name){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_player:
    name: set_player
    code: "function set_player(name, fen) {\r

      \  if (isdef(PL) && PL.name != name) { Z.prev.pl = PL;
      Z.prev.uplayer = PL.name; }\r

      \  PL = Z.pl = firstCond(Serverdata.users, x => x.name == name);\r

      \  copyKeys(fen.players[name], PL);\r

      \  Z.uplayer = name;\r

      }\r\n"
    sig: function set_player(name, fen){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_fleeting_message:
    name: show_fleeting_message
    code: "function show_fleeting_message(s, dParent, styles, id, ms = 2000) {\r

      \  let d = mDiv(dParent, styles, id, s);\r

      \  mFadeRemove(d, ms);\r

      }\r\n"
    sig: function show_fleeting_message(s, dParent, styles, id, ms = 2000){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_game_options:
    name: show_game_options
    code: "function show_game_options(dParent, game) {\r

      \  mRemoveChildrenFromIndex(dParent, 2);\r

      \  let poss = Config.games[game].options;\r

      \  if (nundef(poss)) return;\r

      \  for (const p in poss) {\r

      \    let key = p;\r

      \    let val = poss[p];\r

      \    if (isString(val)) {\r

      \      let list = val.split(',');\r

      \      let fs = mRadioGroup(dParent, {}, `d_${key}`, key);\r

      \      for (const v of list) { mRadio(v, isNumber(v) ? Number(v) :
      v, key, fs, { cursor: 'pointer' }, null, key, true); }\r

      \      measure_fieldset(fs);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function show_game_options(dParent, game){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_message:
    name: show_message
    code: "function show_message(msg = '', stay = false) {\r

      \  mStyle(dTable, { transition: 'all 1s ease' });\r

      \  let d = mBy('dMessage'); d.innerHTML = msg;\r

      \  if (stay) return;\r

      \  let ms = 1000, delay = 3000;\r

      \  let anim = d.animate([{ transform: `scale(1,1)`, opacity: 1 }, {
      transform: `scale(1,0)`, opacity: 0 },], { duration: 1000, easing: 'ease',
      delay: delay });\r

      \  dTable.animate([{ transform: 'translateY(0px)' }, { transform:
      'translateY(-56px)' },], { fill: 'none', duration: ms, easing: 'ease',
      delay: delay });\r

      \  anim.onfinish = () => {\r

      \    mClear(d);\r

      \  }\r

      }\r\n"
    sig: function show_message(msg = '', stay = false){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_role:
    name: show_role
    code: "function show_role() {\r

      \  let d = mBy('dAdminMiddle');\r

      \  clearElement(d);\r

      \  let hotseatplayer = Z.uname != Z.uplayer && Z.mode == 'hotseat'
      && Z.host == Z.uname;\r

      \  let styles, text;\r

      \  let boldstyle = { fg: 'red', weight: 'bold', fz: 20 };\r

      \  let normalstyle = { fg: 'black', weight: null, fz: null };\r

      \  let location = '';\r

      \  if (hotseatplayer) {\r

      \    styles = boldstyle;\r

      \    text = `your turn for ${Z.uplayer}`;\r

      \  } else if (Z.role == 'spectator') {\r

      \    styles = normalstyle;\r

      \    text = `(spectating)`;\r

      \  } else if (Z.role == 'active') {\r

      \    styles = boldstyle;\r

      \    text = `It's your turn!!!`;\r

      \  } else if (Z.role == 'waiting') {\r

      \    text = `waiting for players to complete their moves...`;\r

      \  } else {\r

      \    assertion(Z.role == 'inactive', 'role is not active or inactive
      or spectating ' + Z.role);\r

      \    styles = normalstyle;\r

      \    text = `(${Z.turn[0]}'s turn)`;\r

      \  }\r

      \  d.innerHTML = location + text;\r

      \  mStyle(d, styles);\r

      }\r\n"
    sig: function show_role(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_tables:
    name: show_tables
    code: "function show_tables(ms = 500) {\r

      \  clear_screen();\r

      \  let dParent = mBy('dTables');\r

      \  mClear(dParent);\r

      \  show_games();\r

      \  let tables = Serverdata.tables;\r

      \  if (isEmpty(tables)) { mText('no active game tables', dParent);
      return []; }\r

      \  tables.map(x => x.game_friendly =
      Config.games[x.game].friendly);\r

      \  mText(`<h2>game tables</h2>`, dParent, { maleft: 12 })\r

      \  let t = mDataTable(tables, dParent, null, ['friendly',
      'game_friendly', 'players'], 'tables', false);\r

      \  mTableCommandify(t.rowitems, {\r

      \    0: (item, val) => hFunc(val, 'onclick_table', val, item.id),\r

      \  });\r

      \  let d = iDiv(t);\r

      \  for (const ri of t.rowitems) {\r

      \    let r = iDiv(ri);\r

      \    let h = hFunc('delete', 'delete_table', ri.o.friendly);\r

      \    c = mAppend(r, mCreate('td'));\r

      \    c.innerHTML = h;\r

      \  }\r

      }\r\n"
    sig: function show_tables(ms = 500){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_winners:
    name: show_winners
    code: "function show_winners() {\r

      \  let winners = Z.fen.winners;\r

      \  let multiple_winners = winners.length > 1;\r

      \  let winners_html = winners.map(x => get_user_pic_html(x,
      35)).join(' ');\r

      \  let msg = `\r

      \    <div style=\"display:flex;gap:10px;align-items:center\">\r

      \      <div
      style=\"color:red;font-size:22px;font-weight:bold;\">GAME OVER! the
      winner${multiple_winners ? 's are: ' : ' is '}</div>\r

      \      <div style=\"padding-top:5px;\">${winners_html}</div>\r

      \    </div>\r

      \  `;\r

      \  show_message(msg, true);\r

      \  mShield(dTable);\r

      \  hide('bRestartMove');\r

      \  return Z.fen.winners;\r

      }\r\n"
    sig: function show_winners(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_history:
    name: show_history
    code: "function show_history(fen, dParent) {\r

      \  if (!isEmpty(fen.history)) {\r

      \    let html = '';\r

      \    for (const o of jsCopy(fen.history).reverse()) {\r

      \      html += beautify_history(o.lines, o.title, fen);\r

      \    }\r

      \    let dHistory = mDiv(dParent, { paleft: 12, bg:
      colorLight('#EDC690', .5), box: true, matop: 4, rounding: 10, patop: 10,
      pabottom: 10, w: '100%', hmax: `calc( 100vh - 250px )`, 'overflow-y':
      'auto', w: 260 }, null, html);\r

      \    UI.dHistoryParent = dParent;\r

      \    UI.dHistory = dHistory;\r

      \    if (isdef(Clientdata.historyLayout)) {\r

      \      show_history_layout(Clientdata.historyLayout);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function show_history(fen, dParent){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_hourglass:
    name: show_hourglass
    code: "function show_hourglass(uname, d, sz, stylesPos = {}) {\r

      \  let html = get_waiting_html(sz);\r

      \  mStyle(d, { position: 'relative' });\r

      \  addKeys({ position: 'absolute' }, stylesPos);\r

      \  let dw = mDiv(d, stylesPos, `dh_${uname}`, html);\r

      }\r\n"
    sig: function show_hourglass(uname, d, sz, stylesPos = {}){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  remove_hourglass:
    name: remove_hourglass
    code: "function remove_hourglass(uname) { let d = mBy(`dh_${uname}`); if
      (isdef(d)) mRemove(d); }\r\n"
    sig: function remove_hourglass(uname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_home_logo:
    name: show_home_logo
    code: "function show_home_logo() {\r

      \  let bg = colorLight();\r

      \  let dParent = mBy('dAdminLeft');\r

      \  clearElement(dParent);\r

      \  let d = miPic('castle', dParent, { cursor: 'pointer', fz: 24,
      padding: 6, h: 36, box: true, margin: 2 });\r

      \  d.onclick = db_load;\r

      \  let version = 'v0.0.1';\r

      \  let html = `version ${version}`\r

      \  mText(html, dParent, { fz: 12 });\r

      }\r\n"
    sig: function show_home_logo(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_options_popup:
    name: show_options_popup
    code: "function show_options_popup(options) {\r

      \  let opresent = {};\r

      \  let di = { mode: 'gamemode', yes: true, no: false };\r

      \  let keys = get_keys(options);\r

      \  keys.sort();\r

      \  for (const k of get_keys(options).sort()) {\r

      \    let key = valf(di[k], k);\r

      \    let val = valf(di[options[k]], options[k]);\r

      \    opresent[key] = val;\r

      \  }\r

      \  let x = mYaml(mCreate('div'), opresent);\r

      \  let dpop = mPopup(x.innerHTML, dTable, { fz: 16, fg: 'white',
      top: 0, right: 0, border: 'white', padding: 10, bg: 'dimgray' },
      'dOptions');\r

      \  mInsert(dpop, mCreateFrom(`<div
      style=\"text-align:center;width:100%;font-family:Algerian;font-size:22px;\
      \">${Z.game}</div>`));\r

      }\r\n"
    sig: function show_options_popup(options){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_username:
    name: show_username
    code: "function show_username() {\r

      \  let uname = U.name;\r

      \  let dpic = get_user_pic(uname, 30);\r

      \  let d = mBy('dAdminRight');\r

      \  mClear(d);\r

      \  mAppend(d, get_logout_button());\r

      \  mAppend(d, dpic);\r

      \  if (is_advanced_user()) { show('dAdvanced1'); } else {
      hide('dAdvanced'); hide('dAdvanced1'); }\r

      \  //console.log('DA.running',DA.running);
      //'Z',Z,'dTable',dTable,mBy('dTable'),isVisible('dTable'));\r

      \  if (!TESTING && !DA.running) phpPost({ app: 'easy' },
      'tables');\r

      }\r\n"
    sig: function show_username(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_users:
    name: show_users
    code: "function show_users(ms = 300) {\r

      \  let dParent = mBy('dUsers');\r

      \  mClear(dParent);\r

      \  for (const u of Serverdata.users) {\r

      \    if (['ally', 'bob', 'leo'].includes(u.name)) continue;\r

      \    let d = get_user_pic_and_name(u.name, dParent);\r

      \    d.onclick = () => onclick_user(u.name);\r

      \    mStyle(d, { cursor: 'pointer' });\r

      \  }\r

      \  mFall(dParent, ms);\r

      }\r\n"
    sig: function show_users(ms = 300){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  tableLayoutMR:
    name: tableLayoutMR
    code: "function tableLayoutMR(dParent, m = 7, r = 1) {\r

      \  let ui = UI; ui.players = {};\r

      \  clearElement(dParent);\r

      \  let bg = 'transparent';\r

      \  let [dMiddle, dRechts] = [ui.dMiddle, ui.dRechts] =
      mColFlex(dParent, [m, r], [bg, bg]);\r

      \  mCenterFlex(dMiddle, false);\r

      \  let dOben = ui.dOben = mDiv(dMiddle, { w: '100%', display:
      'block' }, 'dOben');\r

      \  let dSelections = ui.dSelections = mDiv(dOben, {},
      'dSelections');\r

      \  for (let i = 0; i <= 5; i++) { ui[`dSelections${i}`] =
      mDiv(dSelections, {}, `dSelections${i}`); }\r

      \  let dActions = ui.dActions = mDiv(dOben, { w: '100%' });\r

      \  for (let i = 0; i <= 5; i++) { ui[`dActions${i}`] =
      mDiv(dActions, { w: '100%' }, `dActions${i}`); }\r

      \  ui.dError = mDiv(dOben, { w: '100%', bg: 'red', fg: 'yellow',
      hpadding: 12, box: true }, 'dError');\r

      \  let dSubmitOrRestart = ui.dSubmitOrRestart = mDiv(dOben, { w:
      '100%' });\r

      \  let dOpenTable = ui.dOpenTable = mDiv(dMiddle, { w: '100%',
      padding: 10 }); mFlexWrap(dOpenTable);\r

      \  return [dOben, dOpenTable, dMiddle, dRechts];\r

      }\r\n"
    sig: function tableLayoutMR(dParent, m = 7, r = 1){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  load_coassets:
    name: load_coassets
    code: "function load_coassets(obj) {\r

      \  Config = jsyaml.load(obj.config);\r

      \  Syms = jsyaml.load(obj.syms);\r

      \  SymKeys = Object.keys(Syms);\r

      \  ByGroupSubgroup = jsyaml.load(obj.symGSG);\r

      \  Info = jsyaml.load(obj.info);\r

      \  KeySets = getKeySets();\r

      \  console.assert(isdef(Config), 'NO
      Config!!!!!!!!!!!!!!!!!!!!!!!!');\r

      }\r\n"
    sig: function load_coassets(obj){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\cosensus\apiserver.js
    datetime: 2022-05-13-07-01
    timestamp: 1652450460108.0767
    size: 1381
  phpPost:
    name: phpPost
    code: "function phpPost(data, cmd) {\r

      \  if (DA.TEST1 === true && cmd == 'table') { cmd = 'table1'; }\r

      \  pollStop();\r

      \  var o = {};\r

      \  o.data = valf(data, {});\r

      \  o.cmd = cmd;\r

      \  o = JSON.stringify(o);\r

      \  if (DA.SIMSIM && (DA.exclusive || ['table', 'startgame',
      'gameover', 'tables'].includes(cmd))) {\r

      \    sendSIMSIM(o, DA.exclusive);\r

      \    FORCE_REDRAW = true;\r

      \    if (DA.exclusive) return;\r

      \  } else if (DA.simulate) {\r

      \    sendSIMSIM(o, true, true);\r

      \    FORCE_REDRAW = true;\r

      \    return;\r

      \  }\r

      \  clear_transaction();\r

      \  var xml = new XMLHttpRequest();\r

      \  loader_on();\r

      \  xml.onload = function () {\r

      \    if (xml.readyState == 4 || xml.status == 200) {\r

      \      loader_off();\r

      \      handle_result(xml.responseText, cmd);\r

      \    } else { console.log('WTF?????') }\r

      \  }\r

      \  xml.open(\"POST\", \"api.php\", true);\r

      \  xml.send(o);\r

      }\r\n"
    sig: function phpPost(data, cmd){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  processServerdata:
    name: processServerdata
    code: "function processServerdata(obj, cmd) {\r

      \  if (isdef(Serverdata.table)) Serverdata.prevtable =
      jsCopy(Serverdata.table);\r

      \  if (isdef(obj.playerdata)) {\r

      \    let old_playerdata = valf(Serverdata.playerdata, []);\r

      \    let di = list2dict(old_playerdata, 'name');\r

      \    Serverdata.playerdata = if_stringified(obj.playerdata);\r

      \    Serverdata.playerdata_changed_for = [];\r

      \    for (const o of Serverdata.playerdata) {\r

      \      let old = di[o.name];\r

      \      o.state = isEmpty(o.state) ? '' : if_stringified(o.state);\r

      \      let changed = nundef(old) ? true : !simpleCompare(old, o);\r

      \      if (changed) {\r

      \        Serverdata.playerdata_changed_for.push(o.name);\r

      \      }\r

      \    }\r

      \  } else if (isdef(Serverdata.playerdata)) {\r

      \    Serverdata.playerdata_changed_for = Serverdata.playerdata.map(x
      => x.name);\r

      \    Serverdata.playerdata = [];\r

      \  } else Serverdata.playerdata_changed_for = [];\r

      \  for (const k in obj) {\r

      \    if (k == 'tables') Serverdata.tables = obj.tables.map(x =>
      unpack_table(x));\r

      \    else if (k == 'table') { Serverdata.table =
      unpack_table(obj.table); }\r

      \    else if (k == 'users') Serverdata[k] = obj[k];\r

      \    else if (k == 'playerdata') continue;\r

      \    else if (cmd != 'assets') Serverdata[k] = obj[k];\r

      \  }\r

      \  if (isdef(obj.table)) {\r

      \    assertion(isdef(Serverdata.table) && obj.table.id ==
      Serverdata.table.id, 'table NOT in Serverdata or table id mismatch');\r

      \    let i = Serverdata.tables.findIndex(x => x.id ==
      obj.table.id);\r

      \    if (i != -1) { Serverdata.tables[i] = Serverdata.table; } else
      Serverdata.tables.push(Serverdata.table);\r

      \  }\r

      \  else if (isdef(Serverdata.table)) {\r

      \    let t = Serverdata.tables.find(x => x.id ==
      Serverdata.table.id);\r

      \    if (nundef(t)) delete Serverdata.table;\r

      \  }\r

      }\r\n"
    sig: function processServerdata(obj, cmd){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  mClassOnly:
    name: mClassOnly
    code: "function mClassOnly(d,s) { d.className = s;}\r\n"
    sig: function mClassOnly(d,s){}
    region: m (basemin.js)
    filename: basemin.js
    type: func
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\base\code\basemin.js
    datetime: 2022-05-13-09-19
    timestamp: 1652458788107.2324
    size: 51197
  mClear:
    name: mClear
    code: "function mClear(d) { clearElement(toElem(d)); }\r\n"
    sig: function mClear(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mMagnifyOnHoverControlPopup:
    name: mMagnifyOnHoverControlPopup
    code: "function mMagnifyOnHoverControlPopup(elem) {\r

      \  elem.onmouseenter = ev => {\r

      \    if (ev.ctrlKey) {\r

      \      let r = getRect(elem, document.body);\r

      \      let popup = mDiv(document.body, { rounding: 4, position:
      'absolute', top: r.y, left: r.x }, 'popup');\r

      \      let clone = elem.cloneNode(true);\r

      \      popup.appendChild(clone);\r

      \      mClass(popup, 'doublesize')\r

      \      popup.onmouseleave = () => popup.remove();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function mMagnifyOnHoverControlPopup(elem){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mShieldsOff:
    name: mShieldsOff
    code: "function mShieldsOff() { if (nundef(DA.shields)) return; for (const d of
      DA.shields) d.remove(); }\r\n"
    sig: function mShieldsOff(){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getStyleProp:
    name: getStyleProp
    code: "function getStyleProp(elem, prop) { return
      getComputedStyle(elem).getPropertyValue(prop); }\r\n"
    sig: function getStyleProp(elem, prop){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mStyleRemove:
    name: mStyleRemove
    code: "function mStyleRemove(elem, prop) {\r

      \  if (isdef(STYLE_PARAMS[prop])) prop = STYLE_PARAMS[prop];\r

      \  elem.style.removeProperty(prop);\r

      }\r\n"
    sig: function mStyleRemove(elem, prop){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrBuckets:
    name: arrBuckets
    code: "function arrBuckets(arr, func, sortbystr) {\r

      \  let di = {};\r

      \  for (const a of arr) {\r

      \    let val = func(a);\r

      \    if (nundef(di[val])) di[val] = { val: val, list: [] };\r

      \    di[val].list.push(a);\r

      \  }\r

      \  let res = []\r

      \  let keys = get_keys(di);\r

      \  if (isdef(sortbystr)) {\r

      \    keys.sort((a, b) => sortbystr.indexOf(a) -
      sortbystr.indexOf(b));\r

      \  }\r

      \  return keys.map(x => di[x]);\r

      }\r\n"
    sig: function arrBuckets(arr, func, sortbystr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrClear:
    name: arrClear
    code: "function arrClear(arr) { arr.length = 0; }\r\n"
    sig: function arrClear(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrRemoveLast:
    name: arrRemoveLast
    code: "function arrRemoveLast(arr) { arr.length -= 1; }\r\n"
    sig: function arrRemoveLast(arr){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replaceAllFast:
    name: replaceAllFast
    code: "function replaceAllFast(str, sSub, sBy) { return replaceAll(str, sSub,
      sBy); }\r\n"
    sig: function replaceAllFast(str, sSub, sBy){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replaceAllSafe:
    name: replaceAllSafe
    code: "function replaceAllSafe(str, sSub, sBy) { return
      replaceAllSpecialChars(str, sSub, sBy); }\r\n"
    sig: function replaceAllSafe(str, sSub, sBy){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  findDescendantOfType:
    name: findDescendantOfType
    code: "function findDescendantOfType(type, parent) {\r

      \  if (getTypeOf(parent) == type) return parent;\r

      \  let children = arrChildren(parent);\r

      \  if (isEmpty(children)) return null;\r

      \  for (const ch of children) {\r

      \    let res = findDescendantOfType(type, ch);\r

      \    if (res) return res;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function findDescendantOfType(type, parent){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lastDescendantOfType:
    name: lastDescendantOfType
    code: "function lastDescendantOfType(type, parent) {\r

      \  if (getTypeOf(parent) == type) return parent;\r

      \  let children = arrChildren(parent);\r

      \  if (isEmpty(children)) return null;\r

      \  for (const ch of children.reverse()) {\r

      \    let res = lastDescendantOfType(type, ch);\r

      \    if (res) return res;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function lastDescendantOfType(type, parent){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toElem:
    name: toElem
    code: "function toElem(d) { return isString(d) ? mBy(d) : d; }\r\n"
    sig: function toElem(d){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  start_with_assets:
    name: start_with_assets
    code: "function start_with_assets() {\r

      \  DA.isFirefox =
      navigator.userAgent.toLowerCase().indexOf('firefox') > -1; if
      (DA.isFirefox) console.log('using Firefox!')\r

      \  show_home_logo();\r

      \  if (nundef(U)) { show_users(); return; } \r

      \  show_username();\r

      \  if (DA.TEST0) show('dTestButtons');\r

      \  //#region TESTING\r

      \  //#endregion\r

      }\r\n"
    sig: function start_with_assets(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  show_home:
    name: show_home
    code: "function show_home() {\r

      \  console.log('hallo! should clear table!!!')\r

      \  mClear(dTable);\r

      \  show_motto();\r

      \  mLinebreak(dTable, 40);\r

      \  show_compose();\r

      \  mLinebreak(dTable, 4);\r

      \  show_recent_contributions();\r

      }\r\n"
    sig: function show_home(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\happy\start.js
    datetime: 2022-05-17-04-49
    timestamp: 1652788191047.287
    size: 3061
  mCardButton:
    name: mCardButton
    code: "function mCardButton(caption, handler, dParent, styles, classtr = '', id
      = null) {\r

      \  let classes = toWords(\"card300 wb fett no_outline btn\" +
      classtr);\r

      \  return mButton(caption, handler, dParent, styles, classes, id);\r

      }\r\n"
    sig: function mCardButton(caption, handler, dParent, styles, classtr = '', id =
      null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCard:
    name: mCard
    code: "function mCard(dParent, styles, classtr = '', id = null) {\r

      \  let classes = toWords(\"card300 wb \" + classtr);\r

      \  return mDiv(dParent, styles, id, null, classes);\r

      }\r\n"
    sig: function mCard(dParent, styles, classtr = '', id = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mButtonX:
    name: mButtonX
    code: "function mButtonX(dParent, handler, pos = 'tr', sz = 25, color = 'white')
      {\r

      \  let d2 = mDiv(dParent, { fg: color, w: sz, h: sz, cursor:
      'pointer' }, null, `<i class=\"fa fa-times\"
      style=\"font-size:${sz}px;\"></i>`, 'btnX');\r

      \  mPlace(d2, pos, 2);\r

      \  d2.onclick = handler;\r

      \  return d2;\r

      }\r\n"
    sig: function mButtonX(dParent, handler, pos = 'tr', sz = 25, color = 'white'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_motto:
    name: show_motto
    code: "function show_motto() {\r

      \  let d = mBy('dMotto');\r

      \  mLinebreak(d,6);\r

      \  mDiv(d, {}, null, `Chillax. Dream. Let Go.`);\r

      \  mLinebreak(d);\r

      \  mDiv(d, {}, null, `Life made simple and light.`);\r

      }\r\n"
    sig: function show_motto(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\happy\start.js
    datetime: 2022-05-17-04-49
    timestamp: 1652788191047.287
    size: 3061
  show_compose:
    name: show_compose
    code: "function show_compose() { mCardButton('compose', onclick_compose,
      dTable); }\r\n"
    sig: function show_compose(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\happy\start.js
    datetime: 2022-05-17-04-49
    timestamp: 1652788191047.287
    size: 3061
  show_recent_contributions:
    name: show_recent_contributions
    code: "function show_recent_contributions() {\r

      \  let d = mCard(dTable);\r

      \  let contrib = Serverdata.contrib;\r

      \  if (isEmpty(contrib)) { d.innerHTML = 'no projects yet...';
      return; }\r

      }\r\n"
    sig: function show_recent_contributions(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\happy\start.js
    datetime: 2022-05-17-04-49
    timestamp: 1652788191047.287
    size: 3061
  show_project_editor:
    name: show_project_editor
    code: "function show_project_editor() {\r

      \  console.log('display the project editor!');\r

      \  mClear(dTable);\r

      \  let d = mCard(dTable, {}, 'coform'); mCenterFlex(d);\r

      \  mLinebreak(d, 40);\r

      \  let d1 = mText('New Composition', d, {}, 'fett');\r

      \  mPlace(d1, 'tl', 10);\r

      \  let d2 = mButtonX(d, onclick_close_project_editor);\r

      \  mPlace(d2, 'tr', 10);\r

      \  let i = 0;\r

      \  let d3 = mInput(d, {}, 'inTitle', 'Title', 'coinput', i++); \r

      \  let d4 = mInput(d, {}, 'inCreator', 'Creator', 'coinput', i++,
      isdef(U) ? U.name : ''); \r

      \  let d5 = mInput(d, {}, 'inDescription', 'Short Description',
      'coinput', i++); \r

      \  let b = mButton('next', onclick_add_question, d, {}, ['fett',
      'no_outline', 'btn']);\r

      }\r\n"
    sig: function show_project_editor(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\happy\start.js
    datetime: 2022-05-17-04-49
    timestamp: 1652788191047.287
    size: 3061
  show_question_editor:
    name: show_question_editor
    code: "function show_question_editor() {\r

      \  mLinebreak(dTable, 4)\r

      \  let d = mCard(dTable, {}, 'coform'); mCenterFlex(d);\r

      \  let iform = arrChildren(dTable).length;\r

      \  console.log('this is question number', iform);\r

      \  let d1 = mText('New Composition', d, {}, 'fett'); mPlace(d1,
      'tl', 10);\r

      \  let d2 = mButtonX(d, onclick_close_question_editor);\r

      \  mPlace(d2, 'tr', 10);\r

      \  mLinebreak(d, 40);\r

      \  let i = 0;\r

      \  let d3 = mInput(d, {}, 'inTitle' + iform, 'Title', 'coinput',
      i++); \r

      \  let d4 = mInput(d, {}, 'inCreator' + iform, 'Creator', 'coinput',
      i++, isdef(U) ? U.name : ''); \r

      \  let d5 = mInput(d, {}, 'inDescription' + iform, 'Short
      Description', 'coinput', i++); \r

      \  let b = mButton('next', onclick_add_question, d, {}, ['fett',
      'no_outline', 'btn']);\r

      }\r\n"
    sig: function show_question_editor(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\happy\start.js
    datetime: 2022-05-17-04-49
    timestamp: 1652788191047.287
    size: 3061
  test20_imagePalette:
    name: test20_imagePalette
    code: "function test20_imagePalette(dTable) {\r

      \  let pal =
      colorPaletteFromUrl('../base/assets/images/happy/ocean1.jpg');\r

      \  let hslist = pal.map(x => colorHSL(x, true)); \r

      \  let i = 0; hslist = hslist.map(x => ({ h: x.h, s: x.s, l: x.l,
      color: pal[i], ipal: i++ }))\r

      \  i = 0; let byhue = sortBy(hslist, 'h').map(x => ({ color:
      x.color, ipal: x.ipal, ihue: i++, h: x.h, s: x.s, l: x.l }));\r

      \  i = 0; let bylum = sortBy(byhue, 'l').map(x => ({ color: x.color,
      ilum: i++, ihue: x.ihue, h: x.h, s: x.s, l: x.l }));\r

      \  let dmax = 0, c1max, c2max;\r

      \  let dlist = [];\r

      \  for (let i = 0; i < bylum.length - 1; i++) {\r

      \    for (let j = i + 1; j < bylum.length; j++) {\r

      \      let [c1, c2] = [bylum[i], bylum[j]];\r

      \      let d = colorDistance1(c1, c2);\r

      \      dlist.push({ c1: c1, c2: c2, d: d });\r

      \      if (d > dmax) { dmax = d; c1max = c1; c2max = c2; }\r

      \    }\r

      \  }\r

      \  sortByDescending(dlist, 'd');\r

      \  let lums = [2, 9];\r

      \  let hues = [6, 7];\r

      \  dlist = dlist.filter(x => x.d >= 30 && (lums.includes(x.c1.ilum)
      || hues.includes(x.c2.ihue)));\r

      \  console.log('===>result', dlist)\r

      \  let bestof = arrTake(dlist, 5);\r

      \  let crand = rChoose(bestof);\r

      \  mStyle(mBy('dAdmin'), { bg: crand.c2.color, fg: crand.c1.color
      });\r

      \  console.log('chosen:', crand.c1.color, crand.c2.color,
      crand.d);\r

      }\r\n"
    sig: function test20_imagePalette(dTable){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\_other\happy\test.js
    datetime: 2022-05-15-19-51
    timestamp: 1652669508141.074
    size: 86654
  onclick_add_question:
    name: onclick_add_question
    code: "function onclick_add_question(){\tshow_question_editor();}\r\n"
    sig: function onclick_add_question(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\cosensus\onclick.js
    datetime: 2022-06-09-11-39
    timestamp: 1654799965655.313
    size: 406
  onclick_close_project_editor:
    name: onclick_close_project_editor
    code: "function onclick_close_project_editor(ev){\t\r

      \  console.log('click!!!')\r

      \  show_home();\r

      }\r\n"
    sig: function onclick_close_project_editor(ev){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\cosensus\onclick.js
    datetime: 2022-06-09-11-39
    timestamp: 1654799965655.313
    size: 406
  onclick_color:
    name: onclick_color
    code: "function onclick_color(prop) {\r

      \  return color => { let styles = {}; styles[prop] = color;
      mStyle(mBy('dAdmin'), styles); };\r

      }\r\n"
    sig: function onclick_color(prop){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\_other\happy\onclick.js
    datetime: 2022-05-16-07-00
    timestamp: 1652709646803.8638
    size: 443
  onclick_compose:
    name: onclick_compose
    code: "function onclick_compose() { \tshow_project_editor();}\r\n"
    sig: function onclick_compose(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\cosensus\onclick.js
    datetime: 2022-06-09-11-39
    timestamp: 1654799965655.313
    size: 406
  mFromPoint:
    name: mFromPoint
    code: "function mFromPoint(x, y) {\r

      \  var element, elements = [];\r

      \  var old_visibility = [];\r

      \  while (true) {\r

      \    element = document.elementFromPoint(x, y);\r

      \    if (!element || element === document.documentElement) {\r

      \      break;\r

      \    }\r

      \    elements.push(element);\r

      \    old_visibility.push(element.style.visibility);\r

      \    element.style.visibility = 'hidden';\r

      \  }\r

      \  for (var k = 0; k < elements.length; k++) {\r

      \    elements[k].style.visibility = old_visibility[k];\r

      \  }\r

      \  elements.reverse();\r

      \  return elements;\r

      }\r\n"
    sig: function mFromPoint(x, y){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mLinebreakFlex:
    name: mLinebreakFlex
    code: "function mLinebreakFlex(dParent, gap) {\r

      \  dParent = toElem(dParent);\r

      \  let d = mDiv(dParent, { fz: 2, 'flex-basis': '100%', h: 0, w:
      '100%' }, null, ' &nbsp; ');\r

      \  if (isdef(gap)) { d.style.minHeight = gap + 'px'; d.innerHTML = '
      &nbsp; '; d.style.opacity = .2; }\r

      \  return d;\r

      }\r\n"
    sig: function mLinebreakFlex(dParent, gap){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrTakeWhile:
    name: arrTakeWhile
    code: "function arrTakeWhile(arr, func) {\r

      \  let res = [];\r

      \  for (const a of arr) {\r

      \    if (func(a)) res.push(a); else break;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function arrTakeWhile(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arr_get_max:
    name: arr_get_max
    code: "function arr_get_max(arr, func) {\r

      \  if (isEmpty(arr)) return null;\r

      \  if (nundef(func)) func = x => x;\r

      \  let i = 0; let aug = arr.map(x => ({ el: jsCopy(x), val: func(x),
      i: i++ }));\r

      \  sortByDescending(aug, 'val');\r

      \  let max = aug[0].val;\r

      \  let res = arrTakeWhile(aug, x => x.val == max); return res.map(x
      => arr[x.i]);\r

      }\r\n"
    sig: function arr_get_max(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arr_get_min:
    name: arr_get_min
    code: "function arr_get_min(arr, func) {\r

      \  if (isEmpty(arr)) return null;\r

      \  if (nundef(func)) func = x => x;\r

      \  let i = 0; let aug = arr.map(x => ({ el: jsCopy(x), val: func(x),
      i: i++ }));\r

      \  sortBy(aug, 'val');\r

      \  let min = aug[0].val;\r

      \  let res = arrTakeWhile(aug, x => x.val == min); return res.map(x
      => arr[x.i]);\r

      }\r\n"
    sig: function arr_get_min(arr, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorPalette:
    name: colorPalette
    code: "function colorPalette(color, type = 'shade') {\r

      \  color = colorFrom(color);\r

      \  return colorShades(color);\r

      }\r\n"
    sig: function colorPalette(color, type = 'shade'){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorPaletteFromImage:
    name: colorPaletteFromImage
    code: "function colorPaletteFromImage(img) {\r

      \  if (nundef(ColorThiefObject)) ColorThiefObject = new
      ColorThief();\r

      \  let palette0 = ColorThiefObject.getPalette(img);\r

      \  let palette = [];\r

      \  for (const pal of palette0) {\r

      \    let color = colorFrom(pal);\r

      \    palette.push(color);\r

      \  }\r

      \  return palette;\r

      }\r\n"
    sig: function colorPaletteFromImage(img){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorPaletteFromUrl:
    name: colorPaletteFromUrl
    code: "function colorPaletteFromUrl(path) {\r

      \  let img = mCreateFrom(`<img src='${path}' />`);\r

      \  let pal = colorPaletteFromImage(img);\r

      \  return pal;\r

      }\r\n"
    sig: function colorPaletteFromUrl(path){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorShades:
    name: colorShades
    code: "function colorShades(color) {\r

      \  let res = [];\r

      \  for (let frac = -0.8; frac <= 0.8; frac += 0.2) {\r

      \    let c = pSBC(frac, color, undefined, true);\r

      \    res.push(c);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function colorShades(color){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorTransPalette:
    name: colorTransPalette
    code: "function colorTransPalette(color = '#000000') {\r

      \  let res = [];\r

      \  for (const alpha of [.0, .1, .2, .3, .4, .5, .6, .7, .8, .9, 1])
      res.push(colorTrans(color, alpha));\r

      \  return res;\r

      }\r\n"
    sig: function colorTransPalette(color = '#000000'){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorWheel:
    name: colorWheel
    code: "function colorWheel(contrastTo, n) {\r

      \  let hc = colorHue(contrastTo);\r

      \  let wheel = [];\r

      \  let start = hc;\r

      \  let inc = Math.round(360 / (n + 1));\r

      \  start += inc;\r

      \  for (let i = 0; i < n; i++) {\r

      \    wheel.push(start % 360);\r

      \    start += inc;\r

      \  }\r

      \  return wheel.map(x => colorHSLBuild(x));\r

      }\r\n"
    sig: function colorWheel(contrastTo, n){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorHueWheel:
    name: colorHueWheel
    code: "function colorHueWheel(contrastTo, minDiff = 25, mod = 30, start = 0) {\r

      \  let hc = colorHue(contrastTo);\r

      \  let wheel = [];\r

      \  while (start < 360) {\r

      \    let d1 = Math.abs((start + 360) - hc);\r

      \    let d2 = Math.abs((start) - hc);\r

      \    let d3 = Math.abs((start - 360) - hc);\r

      \    let min = Math.min(d1, d2, d3);\r

      \    if (min > minDiff) wheel.push(start);\r

      \    start += mod;\r

      \  }\r

      \  return wheel;\r

      }\r\n"
    sig: function colorHueWheel(contrastTo, minDiff = 25, mod = 30, start = 0){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  start_sound:
    name: start_sound
    code: "function start_sound(){\r\n}\r\n"
    sig: function start_sound(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\happy\start.js
    datetime: 2022-05-17-04-49
    timestamp: 1652788191047.287
    size: 3061
  hide_motto:
    name: hide_motto
    code: "function hide_motto(){mClear('dMotto')}\r\n"
    sig: function hide_motto(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\_other\happy\start.js
    datetime: 2022-05-17-04-49
    timestamp: 1652788191047.287
    size: 3061
  start_advanced:
    name: start_advanced
    code: "function start_advanced() {\r

      \  dTable = mBy('dTable');dTitle = mBy('dTitle');\r

      \  show('dTopAdvanced');\r

      \  show_tables();\r

      \  show_games();\r

      \  show_title();\r

      \  show_home_logo();\r

      \  dTitle.animate([{ opacity: 0 }, { opacity: 1 },], { fill: 'both',
      duration: 1000, easing: 'ease-in' });\r

      \  dTable = mBy('dTable'); \r

      \  show_users();\r

      \  if (!isEmpty(Serverdata.tables))
      onclick_game_in_gametable(Serverdata.tables[0].friendly);\r

      }\r\n"
    sig: function start_advanced(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\simple\start.js
    datetime: 2022-05-20-07-03
    timestamp: 1653055391083.5986
    size: 16399
  show_player_mode:
    name: show_player_mode
    code: "function show_player_mode(dParent, g, uname) {\r

      \  let dplmode = valf(mBy('dPlayerMode'), mDiv(dParent, { fg:
      'blue', fz: 12, padding: 4 }, 'dPlayerMode'));\r

      \  mCenterCenterFlex(dplmode);\r

      \  let plmode = lookupSet(g.fen, ['players', uname, 'playmode'],
      'human'); \r

      \  dplmode.innerHTML = plmode;\r

      \  if (g.fen.turn.includes(uname)) {\r

      \    dplmode.onclick = () => {\r

      \      let playermode = lookup(g.fen, ['players', uname,
      'playmode']);\r

      \      playermode = lookupSetOverride(g.fen, ['players', uname,
      'playmode'], playermode == 'human' ? 'bot' : 'human');\r

      \      dplmode.innerHTML = playermode;\r

      \      if (playermode == 'bot') ai_move();\r

      \    }\r

      \    mStyle(dplmode, { cursor: 'pointer' });\r

      \  }\r

      }\r\n"
    sig: function show_player_mode(dParent, g, uname){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\simple\start.js
    datetime: 2022-05-20-07-03
    timestamp: 1653055391083.5986
    size: 16399
  startgame:
    name: startgame
    code: "function startgame(game, players, options = {}) {\r

      \  if (nundef(game)) game = 'a_game';\r

      \  let default_options = {}; for (const k in
      Config.games[game].options) default_options[k] =
      arrLast(Config.games[game].options[k].split(','));\r

      \  addKeys(default_options, options); \r

      \  if (nundef(players)) players = rChoose(Serverdata.users, 2).map(x
      => ({ name: x.name })); \r

      \  let playernames = players.map(x => x.name);\r

      \  let fen = window[game]().setup(playernames, options);\r

      \  if (nundef(fen.round)) fen.round = 1;\r

      \  if (nundef(fen.phase)) fen.phase = '';\r

      \  if (nundef(fen.stage)) fen.stage = 0;\r

      \  if (nundef(fen.step)) fen.step = 0;\r

      \  if (nundef(fen.turn)) fen.turn = [fen.plorder[0]]; else if
      (DA.TESTSTART1 && fen.turn.length == 1) fen.turn = [playernames[0]];\r

      \  players.map(x => { let pl = fen.players[x.name]; pl.playmode =
      valf(x.playmode, 'human'); pl.strategy = valf(x.strategy,
      valf(options.strategy, 'random')); });\r

      \  if (options.mode == 'solo') {\r

      \    let me = isdef(U) && isdef(fen.players[U.name]) ? U.name :
      rChoose(playernames);\r

      \    for (const plname of playernames) {\r

      \      if (plname == me) continue;\r

      \      fen.players[plname].playmode = 'bot';\r

      \    }\r

      \    options.mode = 'hotseat';\r

      \  }\r

      \  for (const k in options) { if (isNumber(options[k])) options[k] =
      parseInt(options[k]); }\r

      \  let o = {\r

      \    friendly: generate_table_name(players.length), game: game,
      host: playernames[0], players: playernames,\r

      \    fen: fen, options: options\r

      \  };\r

      \  ensure_polling(); \r

      \  phpPost(o, 'startgame');\r

      }\r\n"
    sig: function startgame(game, players, options = {}){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  stopgame:
    name: stopgame
    code: "function stopgame() {\r

      \  if (!DA.running) return;\r

      \  DA.running = false;\r

      \  DA.noshow = 0;\r

      \  clear_timeouts();\r

      \  hide('bRestartMove');\r

      \  hide('dHostButtons');\r

      \  mStyle('dAdmin', { bg: 'white' });\r

      \  mClear('dAdminMiddle')\r

      \  for (const id of ['bSpotitStart', 'bClearAck', 'bRandomMove',
      'bSkipPlayer']) hide(id);\r

      \  pollStop();\r

      \  Z = null; delete Serverdata.table; delete Serverdata.playerdata;
      Clientdata = {};\r

      \  staticTitle();\r

      }\r\n"
    sig: function stopgame(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  show_user_version_0:
    name: show_user_version_0
    code: "function show_user_version_0() {\r

      \  if (isdef(U) && U.name != 'anonymous') show_title_left(U.name, {
      fg: U.color });\r

      \  else show_home_logo();\r

      }\r\n"
    sig: function show_user_version_0(){}
    region: version (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\simple\start.js
    datetime: 2022-05-20-07-03
    timestamp: 1653055391083.5986
    size: 16399
  show_users_version_0:
    name: show_users_version_0
    code: "function show_users_version_0() {\r

      \  let dParent = mBy('dAllTables');\r

      \  show(dParent);\r

      \  clearElement(dParent);\r

      \  let headers = ['id', 'name', 'motto', 'commands'];\r

      \  let t = mDataTable(Serverdata.users, dParent, rec => ({ fg:
      'contrast', bg: rec.color }), headers, 'users');\r

      \  mTableCommandify(t.rowitems, {\r

      \    1: (item, val) => hFunc(val, 'onclick_user', val),\r

      \  });\r

      \  return t;\r

      }\r\n"
    sig: function show_users_version_0(){}
    region: version (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\simple\start.js
    datetime: 2022-05-20-07-03
    timestamp: 1653055391083.5986
    size: 16399
  mTranslate1:
    name: mTranslate1
    code: "function mTranslate1(child, newParent, ms = 800, callback = null) {\r

      \  child = toElem(child);\r

      \  newParent = toElem(newParent);\r

      \  const parentOriginal = child.parentNode;\r

      \  let children = arrChildren(parentOriginal);\r

      \  let iChild = children.indexOf(child);\r

      \  let sibling = iChild == children.length - 1 ? null :
      children[iChild + 1];\r

      \  const x0 = child.getBoundingClientRect().left;\r

      \  const y0 = child.getBoundingClientRect().top;\r

      \  newParent.appendChild(child);\r

      \  const x1 = child.getBoundingClientRect().left;\r

      \  const y1 = child.getBoundingClientRect().top;\r

      \  if (sibling) parentOriginal.insertBefore(child, sibling); else
      parentOriginal.appendChild(child);\r

      \  child.style.setProperty('--dx', (x1 - x0) + 'px');\r

      \  child.style.setProperty('--dy', (y1 - y0) + 'px');\r

      \  child.style.setProperty('--ms', `${ms}ms`);\r

      \  child.addEventListener('animationend', function () {\r

      \    newParent.appendChild(child);\r

      \    child.classList.remove('move');\r

      \    if (callback) callback();\r

      \  });\r

      \  child.classList.add('move');\r

      }\r\n"
    sig: function mTranslate1(child, newParent, ms = 800, callback = null){}
    region: funcs (ui.js)
    filename: ui.js
    type: func
    fname: ui.js
    path: C:\xampp\htdocs\aroot\easy\ui.js
    datetime: 2022-06-06-09-52
    timestamp: 1654534352493.187
    size: 4345
  onclick_close_question_editor:
    name: onclick_close_question_editor
    code: "function onclick_close_question_editor(){\r

      \  console.log('click!!!')\r

      \  show_home();\r

      }\r\n"
    sig: function onclick_close_question_editor(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\cosensus\onclick.js
    datetime: 2022-06-09-11-39
    timestamp: 1654799965655.313
    size: 406
  ferro_ut0_create_staged:
    name: ferro_ut0_create_staged
    code: "function ferro_ut0_create_staged() { \r

      \  console.log('*** test ferro 0: buy_or_pass with no coins ***');\r

      \  DA.test.number = 0;\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let otherplayer = firstCond(fen.plorder, (p) => p != uplayer);\r

      \  let pl = fen.players[otherplayer];\r

      \  pl.coins = 0;\r

      \  DA.fen0 = fen;\r

      \  DA.auto_moves = [[],\r

      \  [['visit'], ['last'], [0]],\r

      \  [['visit'], ['last'], [1]],\r

      \  [['pass']],\r

      \  ];\r

      \  return [fen, player_names];\r

      }\r\n"
    sig: function ferro_ut0_create_staged(){}
    region: funcs (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  testbuttons_on:
    name: testbuttons_on
    code: "function testbuttons_on() {\r

      \  let buttons = arrChildren(mBy('dTestButtons'));\r

      \  for (const b of arrFromIndex(buttons, 1)) {\r

      \    mClassRemove(b, 'disabled');\r

      \    mClass(b, 'enabled');\r

      \  }\r

      \  mBy('b_delete_table').innerHTML = 'delete current table';\r

      }\r\n"
    sig: function testbuttons_on(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  testbuttons_off:
    name: testbuttons_off
    code: "function testbuttons_off() {\r

      \  let buttons = arrChildren(mBy('dTestButtons'));\r

      \  for (const b of arrFromIndex(buttons, 1)) {\r

      \    mClass(b, 'disabled');\r

      \    mClassRemove(b, 'enabled');\r

      \  }\r

      \  mBy('b_delete_table').innerHTML = 'delete most recent table';\r

      }\r\n"
    sig: function testbuttons_off(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  table_shield_on:
    name: table_shield_on
    code: "function table_shield_on() {\r

      \  if (nundef(dTableShield)) {\r

      \    dTableShield = mDiv(dTable, { position: 'absolute', bg:
      '#0000ff80', w: '100%', h: '100%' }); \r

      \    dTableShield.style.zIndex = 1000;\r

      \  }\r

      }\r\n"
    sig: function table_shield_on(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  table_shield_off:
    name: table_shield_off
    code: "function table_shield_off() { \r

      \  if (isdef(dTableShield)) { dTableShield.remove(); dTableShield =
      null; } \r

      }\r\n"
    sig: function table_shield_off(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  shield_on:
    name: shield_on
    code: "function shield_on() {\r

      \  mShield(dTable.firstChild.childNodes[1]);\r

      \  mStyle('dAdmin', { bg: 'silver' });\r

      }\r\n"
    sig: function shield_on(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  shield_off:
    name: shield_off
    code: "function shield_off() {\r

      \  mStyle('dAdmin', { bg: 'white' });\r

      }\r\n"
    sig: function shield_off(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  modal_on:
    name: modal_on
    code: "function modal_on() { let d = mBy('dModal'); return d; }\r\n"
    sig: function modal_on(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  modal_off:
    name: modal_off
    code: "function modal_off() { let d = mBy('dModal'); d.innerHTML = '';
      d.style.display = 'none'; }\r\n"
    sig: function modal_off(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  actions_on:
    name: actions_on
    code: "function actions_on() {\r

      \  if (!isdef(mBy('dLeiste'))) initActionPanel();\r

      \  Session.is_actions = true;\r

      \  Actions = [];\r

      }\r\n"
    sig: function actions_on(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  actions_off:
    name: actions_off
    code: "function actions_off() {\r

      \  hide('dLeftSide');\r

      \  delete Session.is_actions;\r

      \  Actions = [];\r

      }\r\n"
    sig: function actions_off(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  main_menu_off:
    name: main_menu_off
    code: "function main_menu_off() { close_sidebar(); open_mini_user_info(); }\r\n"
    sig: function main_menu_off(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  main_menu_on:
    name: main_menu_on
    code: "function main_menu_on() { open_sidebar(); close_mini_user_info(); }\r\n"
    sig: function main_menu_on(){}
    region: loader (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  initActionPanel:
    name: initActionPanel
    code: "function initActionPanel() {\r

      \  show('dLeftSide');\r

      \  let dParent = mBy('dLeftSide');\r

      \  clearElement(dParent);\r

      \  dLeiste = mDiv(dParent);\r

      \  mStyle(dLeiste, { wmin: 70, hmin: '100%', display: 'flex',
      'flex-flow': 'column wrap' });\r

      }\r\n"
    sig: function initActionPanel(){}
    region: initTable (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  sidebar_transition_on:
    name: sidebar_transition_on
    code: "function sidebar_transition_on() {\r

      \  let d = mBy('left_panel');\r

      \  mClass(d, 'alltransition');\r

      }\r\n"
    sig: function sidebar_transition_on(){}
    region: sidebar (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  sidebar_transition_off:
    name: sidebar_transition_off
    code: "function sidebar_transition_off() {\r

      \  let d = mBy('left_panel');\r

      \  mClass(d, 'notransition');\r

      }\r\n"
    sig: function sidebar_transition_off(){}
    region: sidebar (features.js)
    filename: features.js
    type: func
    fname: features.js
    path: C:\xampp\htdocs\aroot\base\js\features.js
    datetime: 2022-07-12-06-11
    timestamp: 1657631487042.3916
    size: 24689
  onclick_preinno_create:
    name: onclick_preinno_create
    code: "function onclick_preinno_create() { Session.cur_game = 'gPreinno';
      get_create_table({ level_setting: 'min' }, ['mimi', 'leo']); }\r\n"
    sig: function onclick_preinno_create(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_ut:
    name: onclick_ut
    code: "function onclick_ut(func) {\r

      \  let [fen, player_names] = func(); \r

      \  get_create_staged(fen, { level_setting: 'min' }, player_names);\r

      }\r\n"
    sig: function onclick_ut(func){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_inno_ut0:
    name: onclick_inno_ut0
    code: "function onclick_inno_ut0() { onclick_ut(inno_ut0_create_staged); }\r\n"
    sig: function onclick_inno_ut0(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_inno_ut1:
    name: onclick_inno_ut1
    code: "function onclick_inno_ut1() { onclick_ut(inno_ut1_create_staged); }\r\n"
    sig: function onclick_inno_ut1(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_inno_ut2:
    name: onclick_inno_ut2
    code: "function onclick_inno_ut2() { onclick_ut(inno_ut2_create_staged); }\r\n"
    sig: function onclick_inno_ut2(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_sim_inno_init_complete:
    name: onclick_sim_inno_init_complete
    code: "function onclick_sim_inno_init_complete() {\r

      \  delete_current_table();\r

      \  Session.cur_game = 'gPreinno';\r

      \  test_sim_inno_init_complete(); \r

      \  get_create_table({ level_setting: 'min' }, ['mimi', 'leo']);\r

      }\r\n"
    sig: function onclick_sim_inno_init_complete(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_sim_inno_after_init_mimi_turn:
    name: onclick_sim_inno_after_init_mimi_turn
    code: "function onclick_sim_inno_after_init_mimi_turn() {\r

      \  delete_current_table();\r

      \  Session.cur_game = 'gPreinno';\r

      \  test_sim_inno_after_init_mimi_turn(); \r

      \  get_create_table({ level_setting: 'min' }, ['mimi', 'leo']);\r

      }\r\n"
    sig: function onclick_sim_inno_after_init_mimi_turn(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_set_test:
    name: onclick_set_test
    code: "function onclick_set_test() { Session.cur_game = 'gSet';
      get_create_table({ level_setting: 'min', winning_score: 1 }, ['mimi',
      'leo']); }\r\n"
    sig: function onclick_set_test(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_spotit1:
    name: onclick_spotit1
    code: "function onclick_spotit1() { Session.cur_game = 'gSpotit';
      get_create_table({ level_setting: 'min', winning_score: 1 }, ['mimi',
      'leo']); }\r\n"
    sig: function onclick_spotit1(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_test_create2_maze:
    name: onclick_test_create2_maze
    code: "function onclick_test_create2_maze() { Session.cur_game = 'gMaze';
      get_create_table({ level_setting: 'min', winning_score: 1 }); }\r\n"
    sig: function onclick_test_create2_maze(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_test_create2_anagram:
    name: onclick_test_create2_anagram
    code: "function onclick_test_create2_anagram() { Session.cur_game = 'gAnagram';
      get_create_table({ level_setting: 'min', winning_score: 1 }); }\r\n"
    sig: function onclick_test_create2_anagram(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_test_create_spotit_AI:
    name: onclick_test_create_spotit_AI
    code: "function onclick_test_create_spotit_AI() { Session.cur_game = 'gSpotit';
      get_create_table({ winning_score: 2 }, ['mimi', 'bob']); }\r\n"
    sig: function onclick_test_create_spotit_AI(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_test_create_maze_AI:
    name: onclick_test_create_maze_AI
    code: "function onclick_test_create_maze_AI() { Session.cur_game = 'gMaze';
      get_create_table({ winning_score: 2 }, ['mimi', 'bob', 'guest']); }\r\n"
    sig: function onclick_test_create_maze_AI(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_test_create_anagram_AI:
    name: onclick_test_create_anagram_AI
    code: "function onclick_test_create_anagram_AI() { Session.cur_game =
      'gAnagram'; get_create_table({ winning_score: 2 }, ['mimi', 'bob',
      'guest', 'leo']); }\r\n"
    sig: function onclick_test_create_anagram_AI(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_log_otree:
    name: onclick_log_otree
    code: "function onclick_log_otree() { log_object(Session.otree, 'otree'); }\r\n"
    sig: function onclick_log_otree(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_log_R:
    name: onclick_log_R
    code: "function onclick_log_R() { log_object(Session.R, 'R'); }\r\n"
    sig: function onclick_log_R(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_log_R_nodes:
    name: onclick_log_R_nodes
    code: "function onclick_log_R_nodes() { if (isdef(Session.R))
      log_object(Session.R.nodes, 'R.nodes'); }\r\n"
    sig: function onclick_log_R_nodes(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_log_R_uiNodes:
    name: onclick_log_R_uiNodes
    code: "function onclick_log_R_uiNodes() { if (isdef(Session.R))
      log_object(Session.R.uiNodes, 'R.uiNodes'); }\r\n"
    sig: function onclick_log_R_uiNodes(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_log_R_path2oid:
    name: onclick_log_R_path2oid
    code: "function onclick_log_R_path2oid() { if (isdef(Session.R))
      log_object(Session.R.path2oid, 'R.path2oid'); }\r\n"
    sig: function onclick_log_R_path2oid(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_log_R_oid2uids:
    name: onclick_log_R_oid2uids
    code: "function onclick_log_R_oid2uids() { if (isdef(Session.R))
      log_object(Session.R.oid2uids, 'R.oid2uids'); }\r\n"
    sig: function onclick_log_R_oid2uids(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_log_R_uid2oids:
    name: onclick_log_R_uid2oids
    code: "function onclick_log_R_uid2oids() { if (isdef(Session.R))
      log_object(Session.R.uid2oids, 'R.uid2oids'); }\r\n"
    sig: function onclick_log_R_uid2oids(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_view_ranking:
    name: onclick_view_ranking
    code: "function onclick_view_ranking() { if (nundef(Session.cur_table)) {
      console.log('need table!'); return; } out1(); csv =
      make_csv_for_rankings(); }\r\n"
    sig: function onclick_view_ranking(){}
    region: test (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  onclick_gameover_new:
    name: onclick_gameover_new
    code: "function onclick_gameover_new() {\r

      \  if (is_admin()) {\r

      \    let txt = jsyaml.dump(DB);\r

      \    DA.chain = [get_games];\r

      \    let end_scoring = get_scores_from_cur_players();\r

      \    to_server({ tid: Session.cur_tid, end_scoring: end_scoring,
      uname: Session.cur_user, db: txt }, 'save_and_delete');\r

      \  } else {\r

      \    present_non_admin_user(Session.cur_user);\r

      \  }\r

      }\r\n"
    sig: function onclick_gameover_new(){}
    region: in (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\base\js\onclick.js
    datetime: 2022-07-12-06-16
    timestamp: 1657631765436.3381
    size: 11280
  sheriff:
    name: sheriff
    code: "function sheriff() {\r

      \  function sheriff_activate() {\r

      \    sheriff_pre_action();\r

      \  }\r

      \  function sheriff_check_gameover(z) {\r

      \    let [fen,round] = [z.fen,z.round];\r

      \    if (round <= z.rounds) return false;\r

      \    return arr_get_max(fen.plorder,x=>fen.players[x].score);\r

      \  }\r

      \  function sheriff_setup(players, options) {\r

      \    let fen = { players: {}, plorder: jsCopy(players), history: []
      };\r

      \    let di = SHERIFF.cards;\r

      \    let deck = fen.deck = [];\r

      \    deck.push(...Array(48).fill('apples'));\r

      \    deck.push(...Array(36).fill('cheese'));\r

      \    deck.push(...Array(24).fill('pineapple'));\r

      \    deck.push(...Array(36).fill('bread'));\r

      \    deck.push(...Array(22).fill('pepper'));\r

      \    deck.push(...Array(21).fill('mead'));\r

      \    deck.push(...Array(12).fill('silk'));\r

      \    deck.push(...Array(5).fill('crossbow'));\r

      \    for(const name of
      ['chestnut','pear','pie','baguette','cherries'])  deck.push(...Array(2).f\
      ill(name));\r

      \    for(const name of ['pretzel','grapes'])  deck.push(name);\r

      \    shuffle(deck);\r

      \    console.log('deck',deck);\r

      \    for (const plname of players) {\r

      \      let pl = fen.players[plname] = {\r

      \        hand: deck_deal(deck, 6),\r

      \        coins: 50,\r

      \        vps: 0,\r

      \        score: 0,\r

      \        color: get_user_color(plname),\r

      \      };\r

      \    }\r

      \    console.log('fen',fen)\r

      \    fen.phase = 'market';\r

      \    fen.stage = 1;\r

      \    fen.turn = [fen.plorder[0]];\r

      \    return fen;\r

      \  }\r

      \  function sheriff_present(z, dParent, uplayer) {\r

      \    let [fen, ui] = [z.fen, UI];\r

      \    let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent);\r

      \    ari_player_stats(z, dRechts);\r

      \    show_history(fen, dRechts);\r

      \    let deck = ui.deck = ui_type_deck(fen.deck, dOpenTable, {
      maleft: 12 }, 'deck', 'deck', ari_get_card);\r

      \    let market = ui.market = ui_type_market(fen.market, dOpenTable,
      { maleft: 12 }, 'market', 'market', ari_get_card, true);\r

      \    let open_discard = ui.open_discard =
      ui_type_market(fen.open_discard, dOpenTable, { maleft: 12 },
      'open_discard', 'discard', ari_get_card);\r

      \    let deck_discard = ui.deck_discard =
      ui_type_deck(fen.deck_discard, dOpenTable, { maleft: 12 }, 'deck_discard',
      '', ari_get_card);\r

      \    if (exp_commissions(z.options)) {\r

      \      let open_commissions = ui.open_commissions =
      ui_type_market(fen.open_commissions, dOpenTable, { maleft: 12 },
      'open_commissions', 'bank', ari_get_card);\r

      \      mMagnifyOnHoverControlPopup(ui.open_commissions.cardcontaine\
      r);\r

      \      let deck_commission = ui.deck_commission =
      ui_type_deck(fen.deck_commission, dOpenTable, { maleft: 4 },
      'deck_commission', '', ari_get_card);\r

      \      let comm = ui.commissioned =
      ui_type_rank_count(fen.commissioned, dOpenTable, {}, 'commissioned',
      'sentiment', ari_get_card);\r

      \      if (comm.items.length > 0) { let isent = arrLast(comm.items);
      let dsent = iDiv(isent); set_card_border(dsent, 15, 'green'); }\r

      \    }\r

      \    let order = [uplayer].concat(fen.plorder.filter(x => x !=
      uplayer));\r

      \    for (const plname of order) {\r

      \      let pl = fen.players[plname];\r

      \      let playerstyles = { w: '100%', bg: '#ffffff80', fg: 'black',
      padding: 4, margin: 4, rounding: 10, border: `2px
      ${get_user_color(plname)} solid` };\r

      \      let d = mDiv(dMiddle, playerstyles, null,
      get_user_pic_html(plname, 25));\r

      \      mFlexWrap(d);\r

      \      mLinebreak(d, 10);\r

      \      ari_present_player(z, plname, d, plname != uplayer);\r

      \    }\r

      \    if (isdef(fen.winners)) ari_reveal_all_buildings(fen);\r

      \  }\r

      \  function ari_present_player(g, plname, d, ishidden = false) {\r

      \    let fen = g.fen;\r

      \    let pl = fen.players[plname];\r

      \    let ui = UI.players[plname] = {};\r

      \    pl.hand = fen.stage == '1' ? sort_cards(pl.hand, true, 'CDSH',
      true, 'A23456789TJQK') : sort_cards(pl.hand, false, null, true,
      'A23456789TJQK'); \r

      \    let hand = ui.hand = ui_type_hand(pl.hand, d, {},
      `players.${plname}.hand`, 'hand', ari_get_card);\r

      \    if (ishidden) { hand.items.map(x => face_down(x)); }\r

      \    let stall = ui.stall = ui_type_market(pl.stall, d, { maleft: 12
      }, `players.${plname}.stall`, 'stall', ari_get_card);\r

      \    if (fen.stage < 5 && ishidden) { stall.items.map(x =>
      face_down(x)); }\r

      \    ui.buildinglist = [];\r

      \    for (const k in pl.buildings) {\r

      \      let i = 0;\r

      \      for (const b of pl.buildings[k]) {\r

      \        let type = k;\r

      \        let b_ui = ui_type_building(b, d, { maleft: 8 },
      `players.${plname}.buildings.${k}.${i}`, type, ari_get_card);\r

      \        b_ui.type = k;\r

      \        ui.buildinglist.push(b_ui);\r

      \        lookupAddToList(ui, ['buildings', k], b_ui); \r

      \        i += 1;\r

      \      }\r

      \    }\r

      \    if (exp_commissions(g.options) && (!ishidden ||
      isdef(fen.winners))) {\r

      \      pl.commissions.sort();\r

      \      ui.commissions = ui_type_market(pl.commissions, d, { maleft:
      12 }, `players.${plname}.commissions`, 'commissions', ari_get_card);\r

      \      mMagnifyOnHoverControlPopup(ui.commissions.cardcontainer);\r

      \    }\r

      \    ui.journeys = [];\r

      \    let i = 0;\r

      \    for (const j of pl.journeys) {\r

      \      let jui = ui_type_hand(j, d, { maleft: 12 },
      `players.${plname}.journeys.${i}`, '', ari_get_card);\r

      \      i += 1;\r

      \      ui.journeys.push(jui);\r

      \    }\r

      \  }\r

      \  function ari_player_stats(z, dParent) {\r

      \    let player_stat_items = UI.player_stat_items =
      ui_player_info(z, dParent); \r

      \    let fen = z.fen;\r

      \    let herald = fen.heraldorder[0];\r

      \    for (const uname of fen.plorder) {\r

      \      let pl = fen.players[uname];\r

      \      let item = player_stat_items[uname];\r

      \      let d = iDiv(item); mCenterFlex(d); mLinebreak(d);\r

      \      if (uname == herald) {\r

      \        mSym('tied-scroll', d, { fg: 'gold', fz: 24, padding: 4 },
      'TR');\r

      \      }\r

      \      player_stat_count('coin', pl.coins, d);\r

      \      if (!isEmpty(fen.players[uname].stall) && fen.stage >= 5 &&
      fen.stage <= 6) {\r

      \        player_stat_count('shinto shrine',
      !fen.actionsCompleted.includes(uname) || fen.stage < 6 ?
      calc_stall_value(fen, uname) : '_', d);\r

      \      }\r

      \      player_stat_count('star', uname == U.name ||
      isdef(fen.winners) ? ari_calc_real_vps(fen, uname) :
      ari_calc_fictive_vps(fen, uname), d);\r

      \      if (fen.turn.includes(uname)) {\r

      \        show_hourglass(uname, d, 30, { left: 10, top: 'calc( 50% -
      36px )' });\r

      \      }\r

      \    }\r

      \  }\r

      \  function sheriff_state(dParent) {\r

      \    function get_phase_html() {\r

      \      if (isEmpty(Z.phase) || Z.phase == 'over') return null; \r

      \      let rank = Z.phase[0].toUpperCase();\r

      \      let card = ari_get_card(rank + 'Hn', 40);\r

      \      let d = iDiv(card);\r

      \      mClassRemove(d.firstChild, 'card');\r

      \      return iDiv(card).outerHTML;\r

      \    }\r

      \    let user_html = get_user_pic_html(Z.uplayer, 30);\r

      \    let phase_html = get_phase_html();\r

      \    if (phase_html) dParent.innerHTML =
      `${Z.phase}:&nbsp;${phase_html}&nbsp;player: ${user_html} `;\r

      \  }\r

      \  return { state_info: sheriff_state, setup: sheriff_setup,
      present: sheriff_present, present_player: ari_present_player,
      check_gameover: sheriff_check_gameover, stats: ari_player_stats,
      activate_ui: sheriff_activate };\r

      }\r\n"
    sig: function sheriff(){}
    region: funcs (sheriff.js)
    filename: sheriff.js
    type: func
    fname: sheriff.js
    path: C:\xampp\htdocs\aroot\easy\sheriff.js
    datetime: 2022-07-14-07-18
    timestamp: 1657808303290.1172
    size: 12987
  sheriff_pre_action:
    name: sheriff_pre_action
    code: "function sheriff_pre_action() {\r

      \  let [stage, A, fen, phase, uplayer, deck, market] = [Z.stage,
      Z.A, Z.fen, Z.phase, Z.uplayer, Z.deck, Z.market];\r

      \  if (Z.num_actions > 0) fen.progress = `(action ${Z.action_number}
      of ${Z.total_pl_actions})`; else delete fen.progress;\r

      \  switch (ARI.stage[stage]) {\r

      \    case 'journey':
      select_add_items(ui_get_hand_and_journey_items(uplayer), process_journey,
      'may form new journey or add cards to existing one'); break;\r

      \    case 'add new journey': post_new_journey(); break;\r

      \    case 'auto market': ari_open_market(fen, phase, deck, market);
      break;\r

      \    case 'stall selection':
      select_add_items(ui_get_hand_items(uplayer), post_stall_selected, 'must
      select your stall'); break;\r

      \    case 'action: command': Z.stage = 6;
      select_add_items(ui_get_commands(uplayer), process_command, 'must select
      an action', 1, 1); break;\r

      \    case 'tax': let n = fen.pl_tax[uplayer];
      select_add_items(ui_get_hand_items(uplayer), post_tax, 'must pay tax', n,
      n); break;\r

      \    case 'action step 2':\r

      \      switch (A.command) {\r

      \        case 'trade': select_add_items(ui_get_trade_items(uplayer),
      post_trade, 'must select 2 cards to trade',2,2); break;\r

      \        case 'build': select_add_items(ui_get_payment_items('K'),
      payment_complete, 'must select payment for building', 1, 1); break;\r

      \        case 'upgrade': select_add_items(ui_get_payment_items('K'),
      payment_complete, 'must select payment for upgrade', 1, 1); break;\r

      \        case 'downgrade':
      select_add_items(ui_get_building_items(uplayer, A.payment),
      process_downgrade, 'must select a building to downgrade', 1, 1); break;\r

      \        case 'pickup':
      select_add_items(ui_get_stall_items(uplayer), post_pickup, 'must select a
      stall card to take into your hand', 1, 1); break;\r

      \        case 'harvest':
      select_add_items(ui_get_harvest_items(uplayer), post_harvest, 'must select
      a farm to harvest from', 1, 1); break;\r

      \        case 'sell': select_add_items(ui_get_stall_items(uplayer),
      post_sell, 'must select 2 stall cards to sell', 2, 2); break;\r

      \        case 'buy': select_add_items(ui_get_payment_items('J'),
      payment_complete, 'must select payment option', 1, 1); break;\r

      \        case 'exchange':
      select_add_items(ui_get_exchange_items(uplayer), post_exchange, 'must
      select cards to exchange',2,2); break;\r

      \        case 'visit': select_add_items(ui_get_payment_items('Q'),
      payment_complete, 'must select payment for visiting', 1, 1); break;\r

      \        case 'commission':
      select_add_items(ui_get_commission_items(uplayer), process_commission,
      'must select a card to commission', 1, 1); break;\r

      \        case 'pass': post_pass();break;\r

      \      }\r

      \      break;\r

      \    case 'build': select_add_items(ui_get_build_items(uplayer,
      A.payment), post_build, 'must select cards to build (first card determines
      rank)', 4, 6); break;\r

      \    case 'commission new':
      select_add_items(ui_get_commission_new_items(uplayer), post_commission,
      'must select a new commission', 1, 1); break;\r

      \    case 'upgrade': select_add_items(ui_get_build_items(uplayer,
      A.payment), process_upgrade, 'must select card(s) to upgrade a building',
      1); break;\r

      \    case 'select building to upgrade':
      select_add_items(ui_get_farms_estates_items(uplayer), post_upgrade, 'must
      select a building', 1, 1); break;\r

      \    case 'select downgrade cards':
      select_add_items(A.possible_downgrade_cards, post_downgrade, 'must select
      card(s) to downgrade a building', 1); break;\r

      \    case 'buy': select_add_items(ui_get_open_discard_items(uplayer,
      A.payment), post_buy, 'must select a card to buy', 1, 1); break;\r

      \    case 'visit': select_add_items(ui_get_other_buildings(uplayer,
      A.payment), process_visit, 'must select a farm to visit', 1, 1); break;\r

      \    case 'visit destroy': select_add_items(ui_get_string_items(
      ['destroy', 'get cash']), post_visit, 'must destroy the building or select
      the cash', 1, 1); break;\r

      \    case 'ball': select_add_items(ui_get_hand_items(uplayer),
      post_ball, 'may add cards to the ball'); break;\r

      \    case 'auction: bid':
      select_add_items(ui_get_coin_amounts(uplayer), process_auction, 'must bid
      for the auction', 1, 1); break;\r

      \    case 'auction: buy': select_add_items(ui_get_market_items(),
      post_auction, 'must buy a card', 1, 1); break;\r

      \    case 'end game?': select_add_items(ui_get_endgame(uplayer),
      post_endgame, 'may end the game here and now or go on!', 1, 1); break;\r

      \    case 'pick luxury or journey cards':
      select_add_items(ui_get_string_items( ['luxury cards', 'journey cards']),
      post_luxury_or_journey_cards, 'must select luxury cards or getting cards
      from the other end of the journey', 1, 1); break;\r

      \    default: console.log('stage is', stage); break;\r

      \  }\r

      }\r\n"
    sig: function sheriff_pre_action(){}
    region: funcs (sheriff.js)
    filename: sheriff.js
    type: func
    fname: sheriff.js
    path: C:\xampp\htdocs\aroot\easy\sheriff.js
    datetime: 2022-07-14-07-18
    timestamp: 1657808303290.1172
    size: 12987
  spotit_activate:
    name: spotit_activate
    code: "function spotit_activate() {\r

      \  let [stage, uplayer, host, plorder, fen] = [Z.stage, Z.uplayer,
      Z.host, Z.plorder, Z.fen];\r

      \  if (stage == 'move' && uplayer == host && get_player_score(host)
      >= 1) {\r

      \    let bots = plorder.filter(x => fen.players[x].playmode ==
      'bot');\r

      \    if (isEmpty(bots)) return;\r

      \    let bot = rChoose(bots);\r

      \    TO.main = setTimeout(() => spotit_move(bot, true),
      rNumber(2000, 9000));\r

      \  }\r

      }\r\n"
    sig: function spotit_activate(){}
    region: funcs (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_check_gameover:
    name: spotit_check_gameover
    code: "function spotit_check_gameover(z) {\r

      \  for (const uname of z.plorder) {\r

      \    let cond = get_player_score(uname) >=
      z.options.winning_score;\r

      \    if (cond) { z.fen.winners = [uname]; return z.fen.winners; }\r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function spotit_check_gameover(z){}
    region: funcs (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\easy\spotit.js
    datetime: 2022-07-14-08-02
    timestamp: 1657810939279.169
    size: 15706
  spotit_present:
    name: spotit_present
    code: "function spotit_present(dParent) {\r

      \  let [fen, ui, stage, uplayer] = [Z.fen, UI, Z.stage,
      Z.uplayer];\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent, 1, 0); \r

      \  spotit_read_all_scores();\r

      \  let dt = dOpenTable; clearElement(dt); mCenterFlex(dt);\r

      \  spotit_stats(dt);\r

      \  mLinebreak(dt, 10);\r

      \  let ks_for_cards = fen.items.split(',');\r

      \  let numCards = ks_for_cards.length;\r

      \  let items = Z.items = [];\r

      \  Items = [];\r

      \  let i = 0;\r

      \  for (const s of ks_for_cards) {\r

      \    let ks_list = s.split(' ');\r

      \    let item = {};\r

      \    item.keys = ks_list.map(x => stringBefore(x, ':'));\r

      \    item.scales = ks_list.map(x => stringAfter(x, ':')).map(x =>
      Number(x));\r

      \    item.index = i; i++;\r

      \    let n = item.numSyms = item.keys.length;\r

      \    let [rows, cols, colarr] = calc_syms(item.numSyms);\r

      \    item.colarr = colarr;\r

      \    item.rows = rows;\r

      \    items.push(item);\r

      \  }\r

      \  Z.cards = [];\r

      \  let is_adaptive = Z.options.adaptive == 'yes';\r

      \  let nsyms = is_adaptive ? cal_num_syms_adaptive() :
      Z.options.num_symbols;\r

      \  for (const item of items) {\r

      \    if (is_adaptive) { modify_item_for_adaptive(item, items,
      nsyms); }\r

      \    let card = spotit_card(item, dt, { margin: 20, padding: 10 },
      spotit_interact);\r

      \    Z.cards.push(card);\r

      \    if (Z.stage == 'init') {\r

      \      face_down(card, GREEN, 'food');\r

      \    }\r

      \  }\r

      \  mLinebreak(dt, 10);\r

      }\r\n"
    sig: function spotit_present(dParent){}
    region: funcs (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_stats:
    name: spotit_stats
    code: "function spotit_stats(d) {\r

      \  let players = Z.fen.players;\r

      \  let d1 = mDiv(d, { display: 'flex', 'justify-content': 'center',
      'align-items': 'space-evenly' });\r

      \  for (const plname of get_present_order()) {\r

      \    let pl = players[plname];\r

      \    let onturn = Z.turn.includes(plname);\r

      \    let sz = 50; \r

      \    let bcolor = plname == Z.uplayer ? 'lime' : 'silver';\r

      \    let border = pl.playmode == 'bot' ? `double 5px ${bcolor}` :
      `solid 5px ${bcolor}`;\r

      \    let rounding = pl.playmode == 'bot' ? '0px' : '50%';\r

      \    let d2 = mDiv(d1, { margin: 4, align: 'center' }, null, `<img
      src='../base/assets/images/${plname}.jpg'
      style=\"border-radius:${rounding};display:block;border:${border};box-sizi\
      ng:border-box\" class='img_person' width=${sz}
      height=${sz}>${get_player_score(plname)}`);\r

      \  }\r

      }\r\n"
    sig: function spotit_stats(d){}
    region: funcs (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_state:
    name: spotit_state
    code: "function spotit_state(dParent) {\r

      \  let user_html = get_user_pic_html(Z.uplayer, 30);\r

      \  let msg = Z.stage == 'init' ? `getting ready...` : `player:
      ${user_html}`;\r

      \  dParent.innerHTML = `Round ${Z.round}:&nbsp;${msg} `;\r

      }\r\n"
    sig: function spotit_state(dParent){}
    region: funcs (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  calc_syms:
    name: calc_syms
    code: "function calc_syms(numSyms) {\r

      \  let n = numSyms, rows, realrows, colarr;\r

      \  if (n == 3) { rows = 2; realrows = 1; colarr = [1, 2]; }\r

      \  else if (n == 4) { rows = 2; realrows = 2; colarr = [2, 2]; }\r

      \  else if (n == 5) { rows = 3; realrows = 3; colarr = [1, 3, 1];
      }\r

      \  else if (n == 6) { rows = 3.3; realrows = 3; colarr = [2, 3, 1];
      }\r

      \  else if (n == 7) { rows = 3; realrows = 3; colarr = [2, 3, 2]; }
      \r

      \  else if (n == 8) { rows = 3.8; realrows = 4; colarr = [1, 3, 3,
      1]; }\r

      \  else if (n == 9) { rows = 4; realrows = 4; colarr = [2, 3, 3, 1];
      }\r

      \  else if (n == 10) { rows = 4; realrows = 4; colarr = [2, 3, 3,
      2]; }\r

      \  else if (n == 11) { rows = 4.5; realrows = 4; colarr = [2, 3, 4,
      2]; }\r

      \  else if (n == 12) { rows = 5; realrows = 5; colarr = [1, 3, 4, 3,
      1]; }\r

      \  else if (n == 13) { rows = 5; realrows = 5; colarr = [2, 3, 4, 3,
      1]; }\r

      \  else if (n == 14) { rows = 5; realrows = 5; colarr = [2, 3, 4, 3,
      2]; }\r

      \  else if (n == 15) { rows = 5.5; realrows = 5; colarr = [2, 3, 5,
      3, 2]; }\r

      \  else if (n == 16) { rows = 5.5; realrows = 5; colarr = [2, 3, 5,
      4, 2]; }\r

      \  else if (n == 17) { rows = 5.5; realrows = 5; colarr = [2, 4, 5,
      4, 2]; } \r

      \  else if (n == 18) { rows = 5.8; realrows = 5; colarr = [2, 4, 5,
      4, 3]; } \r

      \  return [rows, realrows, colarr];\r

      }\r\n"
    sig: function calc_syms(numSyms){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  cal_num_syms_adaptive:
    name: cal_num_syms_adaptive
    code: "function cal_num_syms_adaptive() {\r

      \  let [uplayer, fen] = [Z.uplayer, Z.fen];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.score = get_player_score(pl.name);\r

      \  let by_score = dict2list(fen.players);\r

      \  for (const pl of by_score) { pl.score =
      get_player_score(pl.name); }\r

      \  let avg_score = 0;\r

      \  for (const pl of by_score) { avg_score += pl.score; }\r

      \  avg_score /= by_score.length;\r

      \  let di = { nasi: -3, gul: -3, sheeba: -2, mimi: -1, annabel: 1
      };\r

      \  let baseline = valf(di[uplayer], 0);\r

      \  let dn = baseline + Math.floor(pl.score - avg_score);\r

      \  let n = Z.options.num_symbols;\r

      \  let nfinal = Math.max(4, Math.min(14, dn + n));\r

      \  return nfinal;\r

      }\r\n"
    sig: function cal_num_syms_adaptive(){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  ensure_score:
    name: ensure_score
    code: "function ensure_score(plname) {\r

      \  let sc = 0;\r

      \  if (isdef(Z.playerdata)) {\r

      \    let pldata = valf(firstCond(Z.playerdata, x => x.name ==
      plname), { name: plname, state: { score: 0 } });\r

      \    sc = isdef(pldata.state)?pldata.state.score:0;\r

      \  } else Z.playerdata =
      Z.plorder.map(x=>[{name:x,state:{score:0}}]);\r

      \  lookupSet(Z.fen, ['players', plname, 'score'], sc);\r

      }\r\n"
    sig: function ensure_score(plname){}
    region: score (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  find_shared_keys:
    name: find_shared_keys
    code: "function find_shared_keys(keylist, keylists) {\r

      \  let shared = [];\r

      \  for (const keylist2 of keylists) {\r

      \    for (const key of keylist) {\r

      \      if (keylist2.includes(key)) {\r

      \        shared.push(key);\r

      \      }\r

      \    }\r

      \  }\r

      \  return shared;\r

      }\r\n"
    sig: function find_shared_keys(keylist, keylists){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  get_player_score:
    name: get_player_score
    code: "function get_player_score(plname) { ensure_score(plname); return
      Z.fen.players[plname].score; }\r\n"
    sig: function get_player_score(plname){}
    region: score (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  inc_player_score:
    name: inc_player_score
    code: "function inc_player_score(plname) { ensure_score(plname); return
      Z.fen.players[plname].score += 1; }\r\n"
    sig: function inc_player_score(plname){}
    region: score (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  modify_item_for_adaptive:
    name: modify_item_for_adaptive
    code: "function modify_item_for_adaptive(item, items, n) {\r

      \  item.numSyms = n;\r

      \  [item.rows, item.cols, item.colarr] = calc_syms(item.numSyms);\r

      \  let other_items = items.filter(x => x != item);\r

      \  let shared_syms = find_shared_keys(item.keys, other_items.map(x
      => x.keys));\r

      \  let other_symbols = item.keys.filter(x =>
      !shared_syms.includes(x));\r

      \  item.keys = shared_syms;\r

      \  let num_missing = item.numSyms - item.keys.length;\r

      \  item.keys = item.keys.concat(rChoose(other_symbols,
      num_missing));\r

      \  shuffle(item.keys);\r

      \  item.scales = item.keys.map(x => rChoose([1, .75, 1.2, .9,
      .8]));\r

      }\r\n"
    sig: function modify_item_for_adaptive(item, items, n){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_clear_score:
    name: spotit_clear_score
    code: "function spotit_clear_score() {\r

      \  assertion(isdef(Z.notes), 'Z.notes not defined');\r

      \  Z.notes = {};\r

      }\r\n"
    sig: function spotit_clear_score(){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\easy\spotit.js
    datetime: 2022-07-14-08-02
    timestamp: 1657810939279.169
    size: 15706
  spotit_create_sample:
    name: spotit_create_sample
    code: "function spotit_create_sample(numCards, numSyms, vocab, lang, min_scale,
      max_scale) {\r

      \  lang = valf(lang, 'E');\r

      \  let [rows, cols, colarr] = calc_syms(numSyms);\r

      \  let perCard = arrSum(colarr);\r

      \  let nShared = (numCards * (numCards - 1)) / 2;\r

      \  let nUnique = perCard - numCards + 1;\r

      \  let numKeysNeeded = nShared + numCards * nUnique;\r

      \  let nMin = numKeysNeeded + 3;\r

      \  let keypool = setKeys({ nMin: nMin, lang: valf(lang, 'E'), key:
      valf(vocab, 'animals'), keySets: KeySets, filterFunc: (_, x) =>
      !x.includes(' ') });\r

      \  let keys = choose(keypool, numKeysNeeded);\r

      \  let dupls = keys.slice(0, nShared); \r

      \  let uniqs = keys.slice(nShared);\r

      \  let infos = [];\r

      \  for (let i = 0; i < numCards; i++) {\r

      \    let keylist = uniqs.slice(i * nUnique, (i + 1) * nUnique);\r

      \    let info = { id: getUID(), shares: {}, keys: keylist, rows:
      rows, cols: cols, colarr: colarr, num_syms: perCard };\r

      \    infos.push(info);\r

      \  }\r

      \  let iShared = 0;\r

      \  for (let i = 0; i < numCards; i++) {\r

      \    for (let j = i + 1; j < numCards; j++) {\r

      \      let c1 = infos[i];\r

      \      let c2 = infos[j];\r

      \      let dupl = dupls[iShared++];\r

      \      c1.keys.push(dupl);\r

      \      c1.shares[c2.id] = dupl;\r

      \      c2.shares[c1.id] = dupl;\r

      \      c2.keys.push(dupl);\r

      \    }\r

      \  }\r

      \  for (const info of infos) { shuffle(info.keys); }\r

      \  for (const info of infos) {\r

      \    info.scales = info.keys.map(x => chooseRandom([.5, .75, 1,
      1.2]));\r

      \  }\r

      \  for (const info of infos) {\r

      \    let zipped = [];\r

      \    for (let i = 0; i < info.keys.length; i++) {\r

      \      zipped.push({ key: info.keys[i], scale: info.scales[i] });\r

      \    }\r

      \    info.pattern = fillColarr(info.colarr, zipped);\r

      \  }\r

      \  return infos;\r

      }\r\n"
    sig: function spotit_create_sample(numCards, numSyms, vocab, lang, min_scale,
      max_scale){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_find_shared:
    name: spotit_find_shared
    code: "function spotit_find_shared(card, keyClicked) {\r

      \  let success = false, othercard = null;\r

      \  for (const c of Z.cards) {\r

      \    if (c == card) continue;\r

      \    if (c.keys.includes(keyClicked)) { success = true; othercard =
      c; }\r

      \  }\r

      \  return [success, othercard];\r

      }\r\n"
    sig: function spotit_find_shared(card, keyClicked){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_item_fen:
    name: spotit_item_fen
    code: "function spotit_item_fen(options) {\r

      \  let o = {\r

      \    num_cards: valf(options.num_cards, 2),\r

      \    num_symbols: options.adaptive == 'yes' ? 14 :
      valf(options.num_symbols, 7),\r

      \    vocab: valf(options.vocab, 'lifePlus'),\r

      \    lang: 'E',\r

      \    min_scale: valf(options.min_scale, 0.75),\r

      \    max_scale: valf(options.max_scale, 1.25),\r

      \  };\r

      \  let items = spotit_create_sample(o.num_cards, o.num_symbols,
      o.vocab, o.lang, o.min_scale, o.max_scale);\r

      \  let item_fens = [];\r

      \  for (const item of items) {\r

      \    let arr = arrFlatten(item.pattern);\r

      \    let ifen = arr.map(x => `${x.key}:${x.scale}`).join(' ');\r

      \    item_fens.push(ifen);\r

      \  }\r

      \  let res = item_fens.join(',');\r

      \  return res;\r

      }\r\n"
    sig: function spotit_item_fen(options){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  spotit_move:
    name: spotit_move
    code: "function spotit_move(uplayer, success) {\r

      \  if (success) {\r

      \    inc_player_score(uplayer);\r

      \    assertion(get_player_score(uplayer) >= 1, 'player score should
      be >= 1');\r

      \    Z.fen.items = spotit_item_fen(Z.options);\r

      \    Z.state = { score: get_player_score(uplayer) };\r

      \    take_turn_spotit();\r

      \  } else {\r

      \    let d = mShield(dTable, { bg: '#000000aa', fg: 'red', fz: 60,
      align: 'center' });\r

      \    d.innerHTML = 'NOPE!!! try again!';\r

      \    TO.spotit_penalty = setTimeout(() => d.remove(), 2000);\r

      \  }\r

      }\r\n"
    sig: function spotit_move(uplayer, success){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  old_show_settings:
    name: old_show_settings
    code: "function old_show_settings(dParent) {\r

      \  let [options, fen, uplayer] = [Z.options, Z.fen, Z.uplayer];\r

      \  clearElement(dParent);\r

      \  mFlex(dParent);\r

      \  let playermode = get_playmode(uplayer); \r

      \  let game_mode = Z.mode;\r

      \  let dplaymode = mDiv(dParent, { fg: 'blue' }, null, playermode);
      \r

      \  let dgamemode = mDiv(dParent, { fg: 'red' }, null, Z.mode); \r

      \  let d = miPic('gear', dParent, { fz: 20, padding: 6, h: 40, box:
      true, matop: 2, rounding: '50%', cursor: 'pointer' });\r

      \  options.playermode = playermode;\r

      \  d.onmouseenter = () => show_options_popup(options);\r

      \  d.onmouseleave = hide_options_popup;\r

      }\r\n"
    sig: function old_show_settings(dParent){}
    region: funcs (weg.js)
    filename: weg.js
    type: func
    fname: weg.js
    path: C:\xampp\htdocs\aroot\easy\weg.js
    datetime: 2022-07-14-08-02
    timestamp: 1657810939279.6008
    size: 8456
  show_history_popup:
    name: show_history_popup
    code: "function show_history_popup() {\r

      \  if (isEmpty(Z.fen.history)) return;\r

      \  assertion(isdef(UI.dHistoryParent) && isdef(UI.dHistory),
      'UI.dHistoryParent && UI.dHistory do NOT exist!!!');\r

      \  let l = valf(Clientdata.historyLayout, 'ph');\r

      \  let cycle = ['ph', 'hp', 'prh', 'hrp'];\r

      \  let i = (cycle.indexOf(l) + 1) % cycle.length;\r

      \  show_history_layout(cycle[i]);\r

      }\r\n"
    sig: function show_history_popup(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _show_history_popup:
    name: _show_history_popup
    code: "function _show_history_popup() {\r

      \  if (isdef(mBy('dHistoryPopup')) || isEmpty(Z.fen.history))
      return;\r

      \  let dpop = mPopup('', dTable, { fz: 16, bg: colorLight('#EDC690',
      .5), rounding: 8, fg: 'dimgray', top: 0, right: 0, border: 'white' },
      'dHistoryPopup');\r

      \  mAppend(dpop, UI.dHistory);\r

      \  mInsert(dpop, mCreateFrom(`<div
      style=\"margin-left:10px;text-align:left;width:100%;font-family:Algerian;\
      font-size:22px;\">${Config.games[Z.game].friendly}</div>`));\r

      \  let bclose = mButtonX(dpop, hide_history_popup, 'tr', 25,
      'dimgray');\r

      }\r\n"
    sig: function _show_history_popup(){}
    region: funcs (weg.js)
    filename: weg.js
    type: func
    fname: weg.js
    path: C:\xampp\htdocs\aroot\easy\weg.js
    datetime: 2022-07-14-08-02
    timestamp: 1657810939279.6008
    size: 8456
  fritz:
    name: fritz
    code: "function fritz() {\r

      \  const rankstr = 'A23456789TJQK*';\r

      \  function setup(players, options) {\r

      \    let fen = { players: {}, plorder: jsCopy(players), history: [],
      maxrounds: options.cycles * players.length };\r

      \    let n = players.length;\r

      \    fen.num_decks = 2 + (n >= 9 ? 2 : n >= 7 ? 1 : 0); \r

      \    fritz_new_table(fen, options);\r

      \    let deck = fen.deck;\r

      \    shuffle(fen.plorder);\r

      \    let starter = fen.starter = fen.plorder[0];\r

      \    fen.roundorder = jsCopy(fen.plorder);\r

      \    let handsize = valf(Number(options.handsize), 11);\r

      \    for (const plname of players) {\r

      \      let pl = fen.players[plname] = {\r

      \        hand: deck_deal(deck, plname == starter ? handsize + 1 :
      handsize),\r

      \        loosecards: [],\r

      \        time_left: options.seconds_per_game * 1000, \r

      \        score: 0,\r

      \        name: plname,\r

      \        color: get_user_color(plname),\r

      \      };\r

      \    }\r

      \    [fen.phase, fen.stage, fen.turn] = ['', 'card_selection',
      [starter]];\r

      \    return fen;\r

      \  }\r

      \  function activate_ui() { fritz_activate_ui(); }\r

      \  function check_gameover() { return isdef(Z.fen.winners) ?
      Z.fen.winners : false; }\r

      \  function present(dParent) { fritz_present(dParent); }\r

      \  function stats(dParent) { fritz_stats(dParent); }\r

      \  function state_info(dParent) { fritz_state_info(dParent); }\r

      \  return { rankstr, setup, activate_ui, check_gameover, present,
      state_info, stats };\r

      }\r\n"
    sig: function fritz(){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_present_new:
    name: fritz_present_new
    code: "function fritz_present_new(z, dParent, uplayer) {\r

      \  DA.hovergroup = null;\r

      \  let [fen, ui, stage] = [z.fen, UI, z.stage];\r

      \  console.log('role',Z.role)\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent); mFlexWrap(dOpenTable)\r

      \  Config.ui.card.h = 130;\r

      \  Config.ui.container.h = Config.ui.card.h + 30;\r

      \  if (isEmpty(fen.deck_discard)) {\r

      \    mText('discard empty', dOpenTable);\r

      \    ui.deck_discard = { items: [] }\r

      \  } else {\r

      \    let deck_discard = ui.deck_discard =
      ui_type_hand(fen.deck_discard, dOpenTable, { maright: 25 },
      'deck_discard', 'discard', fritz_get_card, true);\r

      \    let i = 0; deck_discard.items.map(x => { x.source = 'discard';
      x.index = i++ });\r

      \  }\r

      \  mLinebreak(dOpenTable);\r

      \  let ddarea = UI.ddarea = mDiv(dOpenTable, { border: 'dashed 1px
      black', bg: '#eeeeee80', box: true, hmin: 162, wmin: 245, padding: '5px
      50px 5px 5px', margin: 5 });\r

      \  mDroppable(ddarea, drop_card_fritz); ddarea.id = 'dOpenTable';
      Items[ddarea.id] = ddarea;\r

      \  mFlexWrap(ddarea)\r

      \  fritz_stats_new(z, dRechts);\r

      \  show_history(fen, dRechts);\r

      \  DA.TJ = [];\r

      \  for (const j of fen.journeys) {\r

      \    let cards = j.map(x => fritz_get_card(x));\r

      \    frnew(cards[0], { target: 'hallo' });\r

      \    for (let i = 1; i < cards.length; i++) { fradd(cards[i],
      Items[cards[0].groupid]); }\r

      \  }\r

      \  let loosecards = ui.loosecards = jsCopy(fen.loosecards).map(c =>
      fritz_get_card(c));\r

      \  for (const plname of fen.plorder) {\r

      \    let cards = fen.players[plname].loosecards.map(c =>
      fritz_get_card(c));\r

      \    cards.map(x => x.owner = plname);\r

      \    loosecards = loosecards.concat(cards);\r

      \  }\r

      \  for (const looseui of loosecards) {\r

      \    let card = looseui;\r

      \    frnew(card, { target: 'hallo' });\r

      \  }\r

      \  for (const group of DA.TJ) {\r

      \    assertion(isdef(group.id), 'no group id', group);\r

      \    let d = iDiv(group);\r

      \    let ch = arrChildren(iDiv(group));\r

      \    let cards = ch.map(x => Items[x.id]);\r

      \    cards.map(x => mDroppable(x, drop_card_fritz));\r

      \  }\r

      \  if (arrChildren(ddarea).length == 0) {\r

      \    let d = mDiv(ddarea, { 'pointer-events': 'none', maleft: 45,
      align: 'center', hmin: 40, w: '100%', fz: 12, fg: 'dimgray' }, 'ddhint',
      'drag and drop cards here');\r

      \  }\r

      \  ui.players = {};\r

      \  let uname_plays = fen.plorder.includes(Z.uname);\r

      \  let plmain = uname_plays && Z.mode == 'multi' ? Z.uname :
      uplayer;\r

      \  fritz_present_player(plmain, dMiddle);\r

      \  if (TESTING) {\r

      \    for (const plname of arrMinus(fen.plorder, plmain)) {\r

      \      fritz_present_player(plname, dMiddle);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function fritz_present_new(z, dParent, uplayer){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\easy\fritz.js
    datetime: 2022-07-14-08-32
    timestamp: 1657812746972.8694
    size: 21150
  fritz_present_player:
    name: fritz_present_player
    code: "function fritz_present_player(playername, dMiddle) {\r

      \  let [fen, ui, stage] = [Z.fen, UI, Z.stage];\r

      \  let pl = fen.players[playername];\r

      \  let playerstyles = { w: '100%', bg: '#ffffff80', fg: 'black',
      padding: 4, margin: 4, rounding: 10, border: `2px
      ${get_user_color(playername)} solid` };\r

      \  let d = mDiv(dMiddle, playerstyles, null,
      get_user_pic_html(playername, 25)); mFlexWrap(d); mLinebreak(d, 10);\r

      \  //#region old handsorting code\r

      \  //#endregion\r

      \  pl.hand = correct_handsorting(pl.hand,playername);\r

      \  let upl = ui.players[playername] = { div: d };\r

      \  upl.hand = ui_type_hand(pl.hand, d, {},
      `players.${playername}.hand`, 'hand', fritz_get_card);\r

      \  upl.hand.items.map(x => x.source = 'hand');\r

      \  let ploose = pl.loosecards;\r

      \  if (!isEmpty(ploose)) {\r

      \    upl.loose = ui_type_market(ploose, d, {},
      `players.${playername}.loose`, 'untouchables', fritz_get_hint_card);\r

      \    upl.loose.items.map(x => x.source = 'loose');\r

      \  } else {\r

      \  }\r

      }\r\n"
    sig: function fritz_present_player(playername, dMiddle){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_stats_new:
    name: fritz_stats_new
    code: "function fritz_stats_new(z, dParent) {\r

      \  let player_stat_items = UI.player_stat_items = ui_player_info(z,
      dParent);\r

      \  let fen = z.fen;\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    let item = player_stat_items[uname];\r

      \    let d = iDiv(item); mCenterFlex(d); mLinebreak(d);\r

      \    player_stat_count('hand with fingers splayed',
      calc_hand_value(pl.hand.concat(pl.loosecards), fritz_get_card), d);\r

      \    player_stat_count('star', pl.score, d);\r

      \    if (fen.turn.includes(uname)) { show_hourglass(uname, d, 30, {
      left: -3, top: 0 }); }\r

      \    else if (!fen.plorder.includes(uname)) mStyle(d, { opacity: 0.5
      });\r

      \  }\r

      }\r\n"
    sig: function fritz_stats_new(z, dParent){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\easy\fritz.js
    datetime: 2022-07-14-08-32
    timestamp: 1657812746972.8694
    size: 21150
  fritz_state_info:
    name: fritz_state_info
    code: "function fritz_state_info(dParent) {\r

      \  let user_html = get_user_pic_html(Z.uplayer, 30);\r

      \  dParent.innerHTML = `Round ${Z.round}:&nbsp;player: ${user_html}
      `;\r

      }\r\n"
    sig: function fritz_state_info(dParent){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_activate_ui:
    name: fritz_activate_ui
    code: "function fritz_activate_ui() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  A.autosubmit = false;\r

      \  new_cards_animation(1);\r

      \  round_change_animation(1);\r

      \  select_add_items(ui_get_hand_items(uplayer), end_of_turn_fritz,
      'must drag drop cards to assemble groups, then discard 1 hand card', 0,
      1);\r

      \  A.items.map(x => iDiv(x).onclick = ev => {\r

      \    let card = Items[x.id];\r

      \    let item = x;\r

      \    clear_quick_buttons();\r

      \    select_last(item, select_toggle, ev);\r

      \    if (item.index == A.selected[0]) {\r

      \      let pos = get_mouse_pos(ev);\r

      \      let b = DA.bQuick = mButton('discard', ev => {\r

      \        b.remove();\r

      \        end_of_turn_fritz();\r

      \      }, document.body, { position: 'absolute', left: pos.x - 40,
      top: pos.y - 10 }, 'selectbutton');\r

      \    }\r

      \  });\r

      \  UI.timer = select_timer(fen.players[uplayer].time_left +
      Z.options.seconds_per_move * 1000, end_of_turn_fritz);\r

      }\r\n"
    sig: function fritz_activate_ui(){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  add_card_to_group:
    name: add_card_to_group
    code: "function add_card_to_group(card, oldgroup, oldindex, targetcard,
      targetgroup) {\r

      \  card.groupid = targetgroup.id;\r

      \  if (card.source == 'hand') {\r

      \    let hand = UI.players[Z.uplayer].hand;\r

      \    removeInPlace(hand.items, card);\r

      \  }\r

      \  card.source = 'group';\r

      \  mDroppable(iDiv(card), drop_card_fritz, dragover_fritz);\r

      \  if (nundef(targetcard)) { \r

      \    targetgroup.ids.push(card.id);\r

      \    mAppend(iDiv(targetgroup), iDiv(card));\r

      \  } else {\r

      \    let index = targetgroup.ids.indexOf(targetcard.id) + 1;\r

      \    targetgroup.ids.splice(index, 0, card.id);\r

      \    mClear(iDiv(targetgroup));\r

      \    for (let i = 0; i < targetgroup.ids.length; i++) {\r

      \      let c = Items[targetgroup.ids[i]];\r

      \      mAppend(iDiv(targetgroup), iDiv(c));\r

      \    }\r

      \  }\r

      \  resplay_container(targetgroup);\r

      }\r\n"
    sig: function add_card_to_group(card, oldgroup, oldindex, targetcard,
      targetgroup){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  allowDrop:
    name: allowDrop
    code: "function allowDrop(ev) { ev.preventDefault(); }\r\n"
    sig: function allowDrop(ev){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\easy\fritz.js
    datetime: 2022-07-14-08-32
    timestamp: 1657812746972.8694
    size: 21150
  calc_fritz_score:
    name: calc_fritz_score
    code: "function calc_fritz_score() {\r

      \  let [round, plorder, stage, A, fen, uplayer] = [Z.round,
      Z.plorder, Z.stage, Z.A, Z.fen, Z.uplayer];\r

      \  for (const plname of fen.roundorder) {\r

      \    let pl = fen.players[plname];\r

      \    if (nundef(pl.score)) pl.score = 0;\r

      \    else pl.score += calc_hand_value(pl.hand.concat(pl.loosecards),
      fritz_get_card);\r

      \  }\r

      }\r\n"
    sig: function calc_fritz_score(){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  clear_quick_buttons:
    name: clear_quick_buttons
    code: "function clear_quick_buttons() {\r

      \  if (isdef(DA.bQuick)) { DA.bQuick.remove(); delete DA.bQuick; }\r

      }\r\n"
    sig: function clear_quick_buttons(){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  cleanup_or_resplay:
    name: cleanup_or_resplay
    code: "function cleanup_or_resplay(oldgroup) {\r

      \  if (isdef(oldgroup) && isEmpty(oldgroup.ids)) {\r

      \    let oldgroupid = oldgroup.id;\r

      \    mRemove(iDiv(oldgroup));\r

      \    removeInPlace(DA.TJ, oldgroup);\r

      \    delete Items[oldgroupid];\r

      \  } else if (isdef(oldgroup)) { oldgroup.ov = .3222;
      resplay_container(oldgroup, .3222) }\r

      }\r\n"
    sig: function cleanup_or_resplay(oldgroup){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  deck_deal_safe_fritz:
    name: deck_deal_safe_fritz
    code: "function deck_deal_safe_fritz(fen, plname, n = 1) {\r

      \  if (fen.deck.length < n) {\r

      \    fen.deck = create_fen_deck('n', fen.num_decks, 0); \r

      \    fen.loosecards.push('*Hn'); \r

      \  }\r

      \  let new_cards = deck_deal(fen.deck, n);\r

      \  fen.players[plname].hand.push(...new_cards);\r

      \  new_cards.map(x => lookupAddToList(fen.players[plname],
      ['newcards'], x));\r

      \  return new_cards;\r

      }\r\n"
    sig: function deck_deal_safe_fritz(fen, plname, n = 1){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  drop_card_fritz:
    name: drop_card_fritz
    code: "function drop_card_fritz(ev) {\r

      \  ev.preventDefault();\r

      \  evNoBubble(ev);\r

      \  if (isdef(mBy('ddhint'))) mRemove(mBy('ddhint')); \r

      \  var data = ev.dataTransfer.getData(\"text\");\r

      \  let card = Items[data];\r

      \  let target_id = evToClosestId(ev);\r

      \  if (card.source == 'discard') {\r

      \    let [discard, loose] = arrSplitAtIndex(UI.deck_discard.items,
      card.index);\r

      \    c = loose[0];\r

      \    loose = loose.slice(1);\r

      \    assertion(c == card, 'NEEEEEEEE');\r

      \    for (const c of loose) {\r

      \      console.log('card', c.key, 'source', c.source)\r

      \      if (c.source == 'discard') frnew(c, { target: 'dummy' });\r

      \    }\r

      \  }\r

      \  if (target_id == 'dOpenTable') {\r

      \    frnew(card, ev);\r

      \  } else if (isdef(Items[target_id])) {\r

      \    let targetcard = Items[target_id];\r

      \    let targetgroup = Items[targetcard.groupid];\r

      \    fradd(card, targetgroup, targetcard);\r

      \  } else {\r

      \  }\r

      }\r\n"
    sig: function drop_card_fritz(ev){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  end_of_round_fritz:
    name: end_of_round_fritz
    code: "function end_of_round_fritz(plname) {\r

      \  let [A, fen, uplayer, plorder] = [Z.A, Z.fen, Z.uplayer,
      Z.plorder];\r

      \  let pl = fen.players[uplayer];\r

      \  calc_fritz_score();\r

      \  ari_history_list([`${plname} wins the round`], 'round over');\r

      \  fen.round_winner = plname;\r

      \  plorder = fen.plorder = jsCopy(fen.roundorder); \r

      \  if (Z.round >= fen.maxrounds) {\r

      \    fen.winners = find_players_with_min_score();\r

      \    ari_history_list([`game over: ${fen.winners.join(', ')}
      win${fen.winners.length == 1 ? 's' : ''}`], 'game over');\r

      \    Z.stage = 'game_over';\r

      \    console.log('end of game: stage', Z.stage, '\\nplorder',
      fen.plorder, '\\nturn', Z.turn);\r

      \  } else {\r

      \    let starter = fen.starter = get_next_in_list(fen.starter,
      plorder);\r

      \    console.log('starter', starter);\r

      \    Z.turn = [starter];\r

      \    Z.round += 1;\r

      \    fritz_new_table(fen, Z.options);\r

      \    fritz_new_player_hands(fen, Z.turn[0], Z.options);\r

      \  }\r

      }\r\n"
    sig: function end_of_round_fritz(plname){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  end_of_turn_fritz:
    name: end_of_turn_fritz
    code: "function end_of_turn_fritz() {\r

      \  //#region prelim\r

      \  let [A, fen, uplayer, plorder] = [Z.A, Z.fen, Z.uplayer,
      Z.plorder];\r

      \  let pl = fen.players[uplayer];\r

      \  clear_quick_buttons();\r

      \  let ms = fen.players[uplayer].time_left = stop_timer();\r

      \  //#endregion\r

      \  //#region TJ group processing\r

      \  let ploose = {};\r

      \  fen.journeys = [];\r

      \  fen.loosecards = [];\r

      \  for (const plname in fen.players) {
      fen.players[plname].loosecards = []; }\r

      \  for (const group of DA.TJ) {\r

      \    let ch = arrChildren(iDiv(group));\r

      \    let cards = ch.map(x => Items[x.id]);\r

      \    let set = Z.options.overlapping == 'yes' ?
      is_overlapping_set(cards, Z.options.jokers_per_group, 3, false)\r

      \      : ferro_is_set(cards, Z.options.jokers_per_group, 3,
      false);\r

      \    if (!set) {\r

      \      for (const card of cards) {\r

      \        if (is_joker(card)) {\r

      \          fen.loosecards.push(card.key);\r

      \          continue;\r

      \        }\r

      \        let owner = valf(card.owner, uplayer);\r

      \        lookupAddToList(ploose, [owner], card.key);\r

      \      }\r

      \    } else {\r

      \      let j = set; \r

      \      fen.journeys.push(j);\r

      \    }\r

      \  }\r

      \  for (const plname in ploose) {\r

      \    fen.players[plname].loosecards = ploose[plname];\r

      \  }\r

      \  let discard = UI.deck_discard.items.filter(x => x.source ==
      'discard');\r

      \  fen.deck_discard = discard.map(x => x.key);\r

      \  if (!isEmpty(A.selected)) {\r

      \    let ui_discarded_card = A.selected.map(x => A.items[x].o)[0];\r

      \    removeInPlace(UI.players[uplayer].hand.items,
      ui_discarded_card);\r

      \    ckey = ui_discarded_card.key;\r

      \    elem_from_to(ckey, fen.players[uplayer].hand,
      fen.deck_discard);\r

      \    ari_history_list([`${uplayer} discards ${ckey}`], 'discard');\r

      \  }\r

      \  let uihand = UI.players[uplayer].hand.items; \r

      \  let fenhand_vorher = fen.players[uplayer].hand;\r

      \  let fenhand = fen.players[uplayer].hand = uihand.filter(x =>
      x.source == 'hand').map(x => x.key);\r

      \  //#endregion\r

      \  if (isEmpty(fenhand) && isEmpty(fen.players[uplayer].loosecards))
      {\r

      \    end_of_round_fritz(uplayer);\r

      \  } else if (ms <= 100) {\r

      \    console.log(`time is up for ${uplayer}!!!`);\r

      \    ari_history_list([`${uplayer} runs out of time`], 'timeout');\r

      \    if (fen.plorder.length <= 1) { end_of_round_fritz(uplayer); }\r

      \    else { Z.turn = [get_next_player(Z, uplayer)];
      deck_deal_safe_fritz(fen, Z.turn[0]); removeInPlace(fen.plorder, uplayer);
      }\r

      \  } else { Z.turn = [get_next_player(Z, uplayer)];
      deck_deal_safe_fritz(fen, Z.turn[0]); }\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function end_of_turn_fritz(){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  frnew:
    name: frnew
    code: "function frnew(card, ev) {\r

      \  let [oldgroup, oldindex] = untie_card(card);\r

      \  let id = getUID('g');\r

      \  let d = mDiv(Items.dOpenTable, { display: 'grid', margin: 10 },
      id); \r

      \  let targetgroup = { div: d, id: id, ids: [], ov: .5222 };\r

      \  assertion(isdef(DA.TJ), 'DA.TJ undefined in frnew!!!');\r

      \  DA.TJ.push(targetgroup);\r

      \  Items[id] = targetgroup;\r

      \  assertion(isdef(targetgroup.id), 'NO ID IN frnew!!!!!!!',
      targetgroup);\r

      \  add_card_to_group(card, oldgroup, oldindex, null, targetgroup);\r

      \  if (targetgroup != oldgroup) cleanup_or_resplay(oldgroup);\r

      }\r\n"
    sig: function frnew(card, ev){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fradd:
    name: fradd
    code: "function fradd(card, targetgroup, targetcard) {\r

      \  let [oldgroup, oldindex] = untie_card(card);\r

      \  assertion(isdef(targetgroup.id), 'NO ID IN fradd!!!!!!!',
      targetgroup);\r

      \  add_card_to_group(card, oldgroup, oldindex, targetcard,
      targetgroup);\r

      \  if (targetgroup != oldgroup) cleanup_or_resplay(oldgroup);\r

      }\r\n"
    sig: function fradd(card, targetgroup, targetcard){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_card:
    name: fritz_card
    code: "function fritz_card(ckey, h, w, ov, draggable) {\r

      \  let type = ckey[2];\r

      \  let info = ckey[0] == '*' ? get_joker_info() :
      jsCopy(C52Cards[ckey.substring(0, 2)]);\r

      \  info.key = ckey;\r

      \  info.cardtype = ckey[2]; \r

      \  let [r, s] = [info.rank, info.suit];\r

      \  info.val = r == '*' ? 25 : r == 'A' ? 1 : 'TJQK'.includes(r) ? 10
      : Number(r);\r

      \  info.color = RED;\r

      \  info.sz = info.h = valf(h, Config.ui.card.h);\r

      \  info.w = valf(w, info.sz * .7);\r

      \  info.irank = '23456789TJQKA*'.indexOf(r);\r

      \  info.isuit = 'SHCDJ'.indexOf(s);\r

      \  info.isort = info.isuit * 14 + info.irank;\r

      \  let card = cardFromInfo(info, h, w, ov);\r

      \  card.id = iDiv(card).id = getUID('c');\r

      \  Items[card.id] = card;\r

      \  if (draggable && Z.role == 'active') mDraggable(card);\r

      \  return card;\r

      }\r\n"
    sig: function fritz_card(ckey, h, w, ov, draggable){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_get_card:
    name: fritz_get_card
    code: "function fritz_get_card(ckey, h, w, ov = .25) { return fritz_card(ckey,
      h, w, ov, true); }\r\n"
    sig: function fritz_get_card(ckey, h, w, ov = .25){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_get_hint_card:
    name: fritz_get_hint_card
    code: "function fritz_get_hint_card(ckey) { return fritz_card(ckey, 50, 30, .25,
      false); }\r\n"
    sig: function fritz_get_hint_card(ckey){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_new_table:
    name: fritz_new_table
    code: "function fritz_new_table(fen, options) {\r

      \  fen.deck = create_fen_deck('n', fen.num_decks, 0);\r

      \  fen.deck_discard = [];\r

      \  fen.journeys = [];\r

      \  fen.loosecards = arrRepeat(options.jokers, '*Hn'); \r

      \  shuffle(fen.deck);\r

      }\r\n"
    sig: function fritz_new_table(fen, options){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_new_player_hands:
    name: fritz_new_player_hands
    code: "function fritz_new_player_hands(fen, starter, options) {\r

      \  let handsize = options.handsize;\r

      \  let deck = fen.deck;\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.hand = deck_deal(deck, plname == starter ? handsize + 1 :
      handsize);\r

      \    pl.loosecards = [];\r

      \    pl.time_left = options.seconds_per_game * 1000; \r

      \    pl.roundchange = true;\r

      \    delete pl.handsorting;\r

      \    delete pl.newcards;\r

      \  }\r

      }\r\n"
    sig: function fritz_new_player_hands(fen, starter, options){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  output_loose_and_journeys:
    name: output_loose_and_journeys
    code: "function output_loose_and_journeys(fen) {\r

      \  for (const j of fen.journeys) { console.log('journey', j.join(',
      ')); }\r

      \  for (const plname in fen.players) { console.log('loosecards',
      plname, fen.players[plname].loosecards.join(', ')); }\r

      }\r\n"
    sig: function output_loose_and_journeys(fen){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  output_scores:
    name: output_scores
    code: "function output_scores() {\r

      \  let fen = Z.fen;\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \  }\r

      }\r\n"
    sig: function output_scores(){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  resplay_container:
    name: resplay_container
    code: "function resplay_container(targetgroup, ovpercent) {\r

      \  let d = iDiv(targetgroup);\r

      \  let card = Items[targetgroup.ids[0]];\r

      \  let ov = valf(targetgroup.ov, .1222)\r

      \  mContainerSplay(d, 2, card.w, card.h, arrChildren(d).length, ov *
      card.w);\r

      \  let items = arrChildren(d).map(x => Items[x.id]);\r

      \  ui_add_cards_to_hand_container(d, items);\r

      }\r\n"
    sig: function resplay_container(targetgroup, ovpercent){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  untie_card:
    name: untie_card
    code: "function untie_card(card) {\r

      \  remove_from_selection(card);\r

      \  clear_selection();\r

      \  let oldgroupid = card.groupid;\r

      \  if (isdef(oldgroupid)) delete card.owner;\r

      \  let oldgroup = Items[oldgroupid];\r

      \  let oldindex = isdef(oldgroup) ? oldgroup.ids.indexOf(card.id) :
      null;\r

      \  if (isdef(oldgroup)) removeInPlace(oldgroup.ids, card.id);\r

      \  return [oldgroup, oldindex]; \r

      }\r\n"
    sig: function untie_card(card){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  ari_clear_church:
    name: ari_clear_church
    code: "function ari_clear_church() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  for (const prop of ['church', 'church_order', 'selorder',
      'tithemin', 'tithe_minimum', 'toBeSelected', 'candidates']) delete
      fen[prop];\r

      \  for (const plname in fen.players) {\r

      \    delete fen.players[plname].tithes;\r

      \  }\r

      \  fen.church = ari_deck_deal_safe(fen, Z.plorder.length);\r

      }\r\n"
    sig: function ari_clear_church(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  check_if_church:
    name: check_if_church
    code: "function check_if_church() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let jacks = fen.market.filter(x => x[0] == 'J');\r

      \  let queens = fen.market.filter(x => x[0] == 'Q');\r

      \  for (const plname of plorder) {\r

      \    let pl = fen.players[plname];\r

      \    let pl_jacks = pl.stall.filter(x => x[0] == 'J');\r

      \    let pl_queens = pl.stall.filter(x => x[0] == 'Q');\r

      \    jacks = jacks.concat(pl_jacks);\r

      \    queens = queens.concat(pl_queens);\r

      \  }\r

      \  let ischurch = false;\r

      \  for (const j of jacks) {\r

      \    if (firstCond(queens, x => x[1] != j[1])) ischurch = true;\r

      \  }\r

      \  return ischurch;\r

      }\r\n"
    sig: function check_if_church(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  determine_church_turn_order:
    name: determine_church_turn_order
    code: "function determine_church_turn_order() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let initial = [];\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.vps = ari_calc_fictive_vps(fen, plname);\r

      \    pl.max_journey_length = ari_get_max_journey_length(fen,
      plname);\r

      \    pl.score = pl.vps * 10000 + pl.max_journey_length * 100 +
      pl.coins;\r

      \    initial.push(pl);\r

      \  }\r

      \  let sorted = sortByDescending(initial, 'score');\r

      \  return sorted.map(x => x.name);\r

      }\r\n"
    sig: function determine_church_turn_order(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  is_in_middle_of_church:
    name: is_in_middle_of_church
    code: "function is_in_middle_of_church() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  return isdef(fen.players[uplayer].tithes);\r

      }\r\n"
    sig: function is_in_middle_of_church(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_church:
    name: post_church
    code: "function post_church() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let pl = fen.players[uplayer];\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  let card = items.find(x => x.path && x.path.includes('church'));
      if (isdef(card)) card = card.key;\r

      \  let cand = items.length > 1 ? items.find(x => !x.path) :
      fen.candidates[0];\r

      \  if (isdef(cand) && isDict(cand)) cand = cand.key;\r

      \  if (nundef(card) || nundef(cand)) {\r

      \    select_error(`You must select a card ${items.length > 1 ? 'and
      a candidate' : ''}!`);\r

      \    return;\r

      \  }\r

      \  elem_from_to(card, fen.church, fen.players[cand].hand);\r

      \  ari_history_list([`${uplayer} gives ${cand} card ${card}`], 'new
      cards');\r

      \  removeInPlace(fen.toBeSelected, cand);\r

      \  if (fen.church.length == 1) {\r

      \    let cand = fen.toBeSelected[0];\r

      \    let card = fen.church[0];\r

      \    elem_from_to(card, fen.church, fen.players[cand].hand);\r

      \    ari_history_list([`${cand} receives last card: ${card}`], 'new
      cards');\r

      \    Z.stage = 14;\r

      \    let plorder = fen.plorder = jsCopy(fen.heraldorder);\r

      \    Z.turn = [plorder[0]];\r

      \    take_turn_fen();\r

      \  } else {\r

      \    Z.turn = [get_next_in_list(uplayer, fen.selorder)];\r

      \    take_turn_fen();\r

      \  }\r

      }\r\n"
    sig: function post_church(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_tide:
    name: post_tide
    code: "function post_tide() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  if (items.length == 0) { select_error('No cards selected!');
      return; }\r

      \  let st = items.map(x => ({ key: x.key, path: x.path }));\r

      \  let val = arrSum(st.map(x => ari_get_card(x.key).val));\r

      \  lookupSet(fen, ['players', uplayer, 'tides'], { keys: st, val:
      val });\r

      \  remove_tides_from_play(fen, uplayer);\r

      \  let pldone = plorder.filter(x => isdef(fen.players[x].tides));\r

      \  let minplayers = arrMin(pldone, x => fen.players[x].tides.val);\r

      \  let minplayer = isList(minplayers) ? minplayers[0] :
      minplayers;\r

      \  let minval = fen.tidemin = fen.players[minplayer].tides.val;\r

      \  let next = get_next_in_list(uplayer, fen.church_order);\r

      \  if (next == fen.church_order[0]) {\r

      \    assertion(sameList(pldone, plorder), 'NOT all players have
      tides!!!!!!!', pldone);\r

      \    if (minplayers.length > 1) { proceed_to_newcards_selection();
      return; }\r

      \    else {\r

      \      pldone = pldone.filter(x => x != minplayer);\r

      \      let sorted = sortBy(pldone, x => fen.players[x].tides.val);\r

      \      let second_min = sorted[0];\r

      \      fen.tide_minimum = fen.players[second_min].tides.val -
      minval;\r

      \      //#region check if minplayer has enough\r

      \      let pl = fen.players[minplayer];\r

      \      let hst = pl.hand.concat(pl.stall);\r

      \      let vals = hst.map(x => ari_get_card(x).val);\r

      \      let sum = isEmpty(vals) ? 0 : arrSum(vals);\r

      \      let min = fen.tide_minimum;\r

      \      if (sum < min) {\r

      \        pl.hand = [];\r

      \        pl.stall = [];\r

      \        let buildings = arrFlatten(get_values(pl.buildings));\r

      \        console.log('buildings', buildings);\r

      \        if (isEmpty(buildings)) {\r

      \          ari_history_list([`${minplayer} does not have a building
      to downgrade!`], 'downgrade');\r

      \          proceed_to_newcards_selection();\r

      \          return;\r

      \        }\r

      \        ari_history_list([`${minplayer} must downgrade a building
      to tide ${min}!`], 'downgrade');\r

      \        Z.stage = 22;\r

      \      } else {\r

      \        ari_history_list([`${minplayer} must tide more cards to
      reach ${min}!`], 'tide');\r

      \        Z.stage = 21;\r

      \      }\r

      \      //#endregion\r

      \      Z.turn = [minplayer];\r

      \    }\r

      \  } else {\r

      \    Z.turn = [next];\r

      \  }\r

      \  turn_send_move_update();\r

      }\r\n"
    sig: function post_tide(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\easy\aristo.js
    datetime: 2022-07-15-06-41
    timestamp: 1657892511803.6853
    size: 118844
  post_tide_minimum:
    name: post_tide_minimum
    code: "function post_tide_minimum() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let pl = fen.players[uplayer];\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  let st = items.map(x => ({ key: x.key, path: x.path }));\r

      \  pl.tides.keys = pl.tides.keys.concat(st);\r

      \  let newval = arrSum(st.map(x => ari_get_card(x.key).val));\r

      \  pl.tides.val += newval;\r

      \  console.log('tide_minimum', fen.tide_minimum);\r

      \  console.log('val', pl.tides.val);\r

      \  if (newval < fen.tide_minimum) {\r

      \    select_error(`you need to tide at least ${fen.tide_minimum} to
      reach minimum`);\r

      \    return;\r

      \  }\r

      \  remove_tides_from_play(fen, uplayer, st);\r

      \  proceed_to_newcards_selection();\r

      }\r\n"
    sig: function post_tide_minimum(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\easy\aristo.js
    datetime: 2022-07-15-06-41
    timestamp: 1657892511803.6853
    size: 118844
  post_complementing_market_after_church:
    name: post_complementing_market_after_church
    code: "function post_complementing_market_after_church() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let pl = fen.players[uplayer];\r

      \  let selectedKeys = A.selected.map(i => A.items[i].key);\r

      \  for (const ckey of selectedKeys) {\r

      \    elem_from_to(ckey, fen.players[uplayer].hand,
      fen.players[uplayer].stall);\r

      \  }\r

      \  if (selectedKeys.length > 0) ari_history_list([`${uplayer}
      complements stall`], 'complement stall');\r

      \  let next = get_next_player(Z, uplayer);\r

      \  if (next == plorder[0]) {\r

      \    ari_clear_church();\r

      \    ari_start_action_stage();\r

      \  } else {\r

      \    Z.turn = [next];\r

      \    take_turn_fen();\r

      \  }\r

      }\r\n"
    sig: function post_complementing_market_after_church(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  proceed_to_newcards_selection:
    name: proceed_to_newcards_selection
    code: "function proceed_to_newcards_selection() {\r

      \  let fen = Z.fen;\r

      \  let selorder = fen.selorder =
      sortByFuncDescending(fen.church_order, x => fen.players[x].tithes.val);\r

      \  fen.toBeSelected = jsCopy(selorder);\r

      \  fen.plorder = selorder;\r

      \  Z.turn = [selorder[0]];\r

      \  Z.stage = 19;\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function proceed_to_newcards_selection(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  remove_tides_from_play:
    name: remove_tides_from_play
    code: "function remove_tides_from_play(fen, plname, tides) {\r

      \  let pl = fen.players[plname];\r

      \  if (nundef(tides)) tides = pl.tides.keys;\r

      \  for (const tide of tides) {\r

      \    if (tide.path.includes('hand')) { removeInPlace(pl.hand,
      tide.key); }\r

      \    else if (tide.path.includes('stall')) { removeInPlace(pl.stall,
      tide.key); }\r

      \  }\r

      \  ari_history_list([`${plname} tides ${tides.map(x =>
      x.key).join(', ')}!`], 'tide');\r

      }\r\n"
    sig: function remove_tides_from_play(fen, plname, tides){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\easy\aristo.js
    datetime: 2022-07-15-06-41
    timestamp: 1657892511803.6853
    size: 118844
  reveal_church_cards:
    name: reveal_church_cards
    code: "function reveal_church_cards() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let pl = fen.players[uplayer];\r

      \  let uichurch = UI.church;\r

      \  let dOpenTable = UI.dOpenTable;\r

      \  let church_cards = uichurch.items;\r

      \  uichurch.container.remove();\r

      \  UI.church = uichurch = ui_type_market(fen.church, dOpenTable, {
      maleft: 25 }, 'church', 'church');\r

      }\r\n"
    sig: function reveal_church_cards(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_church_items:
    name: ui_get_church_items
    code: "function ui_get_church_items(uplayer) {\r

      \  let fen = Z.fen;\r

      \  let items = [], i = 0;\r

      \  let church = UI.church;\r

      \  for (const o of church.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: church.path, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  let candidates = fen.candidates = arrMinus(fen.toBeSelected,
      uplayer);\r

      \  if (candidates.length > 1) {\r

      \    let player_items = ui_get_string_items(candidates);\r

      \    items = items.concat(player_items);\r

      \    reindex_items(items);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_church_items(uplayer){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  is_setup_commissions_complete:
    name: is_setup_commissions_complete
    code: "function is_setup_commissions_complete() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let next = get_next_player(Z, uplayer);\r

      \  return next == plorder[0] && fen.comm_setup_num == 1;\r

      }\r\n"
    sig: function is_setup_commissions_complete(){}
    region: commission (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\easy\aristo.js
    datetime: 2022-07-15-06-41
    timestamp: 1657892511803.6853
    size: 118844
  process_comm_setup:
    name: process_comm_setup
    code: "function process_comm_setup() {\r

      \  let [fen, A, uplayer, plorder,pl] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder,Z.pl];\r

      \  assertion(fen.keeppolling == true, \"keeppolling must be true for
      process_comm_setup!!!\");\r

      \  if (DA.hallo) {\r

      \    console.log('process_comm_setup:', Z.playerdata,
      Z.stage,uplayer,pl);\r

      \    return;\r

      \  }\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  let next = get_next_player(Z, uplayer);\r

      \  let receiver = next;\r

      \  let giver = uplayer;\r

      \  let keys = items.map(x => x.key);\r

      \  Z.state = { giver:giver, receiver:receiver, keys:keys };\r

      \  assertion(isdef(Z.playerdata), \"Z.playerdata must be defined for
      process_comm_setup!!!\");\r

      \  let data = firstCond(Z.playerdata, x => x.name == uplayer);\r

      \  assertion(isdef(data), `MISSING: playerdata for ${uplayer}`);\r

      \  data.state = Z.state;\r

      \  let can_resolve = check_resolve();\r

      \  if (can_resolve) {\r

      \    Z.turn = [Z.host];\r

      \    Z.stage = 104; //'next_comm_setup_stage';\r

      \    take_turn_fen_write();\r

      \  } else {\r

      \    if (Z.mode == 'hotseat') { Z.turn = [get_next_player(Z,
      uplayer)]; take_turn_fen_write(); }\r

      \    else take_turn_multi();\r

      \  }\r

      }\r\n"
    sig: function process_comm_setup(){}
    region: commission (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  exp_church:
    name: exp_church
    code: "function exp_church(options) { return options.church == 'yes'; }\r\n"
    sig: function exp_church(options){}
    region: expansions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  exp_rumors:
    name: exp_rumors
    code: "function exp_rumors(options) { return options.rumors == 'yes'; }\r\n"
    sig: function exp_rumors(options){}
    region: expansions (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_add_rumor:
    name: ari_add_rumor
    code: "function ari_add_rumor(fenbuilding, key) {\r

      \  if (nundef(fenbuilding.rumors)) fenbuilding.rumors = [];\r

      \  fenbuilding.rumors.push(key);\r

      }\r\n"
    sig: function ari_add_rumor(fenbuilding, key){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_calc_real_vps:
    name: ari_calc_real_vps
    code: "function ari_calc_real_vps(fen, plname) {\r

      \  let pl = fen.players[plname];\r

      \  let bs = ari_get_correct_buildings(pl.buildings);\r

      \  let vps = calc_building_vps(bs);\r

      \  for (const btype in bs) {\r

      \    let blist = bs[btype];\r

      \    for (const b of blist) {\r

      \      let lead = b.list[0];\r

      \      if (firstCond(pl.commissions, x => x[0] == lead[0])) {\r

      \        vps += 1;\r

      \      }\r

      \    }\r

      \  }\r

      \  return vps;\r

      }\r\n"
    sig: function ari_calc_real_vps(fen, plname){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_calc_fictive_vps:
    name: ari_calc_fictive_vps
    code: "function ari_calc_fictive_vps(fen, plname) {\r

      \  let pl = fen.players[plname];\r

      \  let bs = pl.buildings;\r

      \  let vps = calc_building_vps(bs);\r

      \  return vps;\r

      }\r\n"
    sig: function ari_calc_fictive_vps(fen, plname){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_get_max_journey_length:
    name: ari_get_max_journey_length
    code: "function ari_get_max_journey_length(fen, uplayer) {\r

      \  let pl = fen.players[uplayer];\r

      \  let sorted_journeys = sortByDescending(pl.journeys.map(x => ({
      arr: x, len: x.length })), 'len');\r

      \  return isEmpty(pl.journeys) ? 0 : sorted_journeys[0].len;\r

      }\r\n"
    sig: function ari_get_max_journey_length(fen, uplayer){}
    region: general (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_card_items:
    name: ui_get_card_items
    code: "function ui_get_card_items(cards) {\r

      \  let items = [], i = 0;\r

      \  for (const o of cards) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: ``, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_card_items(cards){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\easy\aristo.js
    datetime: 2022-07-15-06-41
    timestamp: 1657892511803.6853
    size: 118844
  ui_get_top_rumors:
    name: ui_get_top_rumors
    code: "function ui_get_top_rumors() {\r

      \  let items = [], i = 0;\r

      \  for (const o of UI.rumor_top.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: `rumor_top`, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_top_rumors(){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_other_buildings_and_rumors:
    name: ui_get_other_buildings_and_rumors
    code: "function ui_get_other_buildings_and_rumors(uplayer) {\r

      \  let items = ui_get_other_buildings(uplayer);\r

      \  items = items.concat(ui_get_rumors_items(uplayer));\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_other_buildings_and_rumors(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_blackmailed_items:
    name: ui_get_blackmailed_items
    code: "function ui_get_blackmailed_items() {\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  let commands = ['accept', 'reject'];\r

      \  let rumors = fen.players[uplayer].rumors;\r

      \  let b = path2fen(fen, fen.blackmail.building_path);\r

      \  if (nundef(b.lead)) b.lead = b.list[0];\r

      \  if (isList(rumors) && firstCond(rumors, x => x[0] == b.lead[0]))
      {\r

      \    commands.push('defend');\r

      \  }\r

      \  return ui_get_string_items(commands);\r

      }\r\n"
    sig: function ui_get_blackmailed_items(){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_rumors_items:
    name: ui_get_rumors_items
    code: "function ui_get_rumors_items(uplayer) {\r

      \  let items = [], i = 0;\r

      \  let rum = UI.players[uplayer].rumors;\r

      \  for (const o of rum.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: rum.path, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_rumors_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_all_commission_items:
    name: ui_get_all_commission_items
    code: "function ui_get_all_commission_items(uplayer) {\r

      \  let items = [], i = 0;\r

      \  let comm = UI.players[uplayer].commissions;\r

      \  for (const o of comm.items) {\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: comm.path, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_all_commission_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_deck_item:
    name: ui_get_deck_item
    code: "function ui_get_deck_item(uideck) {\r

      \  let topdeck = uideck.get_topcard();\r

      \  let item = { o: topdeck, a: topdeck.key, key: topdeck.key,
      friendly: topdeck.short, path: uideck.path, index: 0 };\r

      \  return item;\r

      }\r\n"
    sig: function ui_get_deck_item(uideck){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_other_buildings_with_rumors:
    name: ui_get_other_buildings_with_rumors
    code: "function ui_get_other_buildings_with_rumors(uplayer) {\r

      \  let items = [];\r

      \  for (const plname of Z.plorder) {\r

      \    if (plname == uplayer) continue;\r

      \    items =
      items.concat(ui_get_buildings(UI.players[plname].buildinglist.filter(x =>
      !isEmpty(x.rumors))));\r

      \  }\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_other_buildings_with_rumors(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_hand_items_minus:
    name: ui_get_hand_items_minus
    code: "function ui_get_hand_items_minus(uplayer, cardlist) {\r

      \  if (!isList(cardlist)) cardlist = [cardlist];\r

      \  let items = [], i = 0;\r

      \  let hand = UI.players[uplayer].hand;\r

      \  for (const o of hand.items) {\r

      \    if (cardlist.includes(o)) continue;\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: hand.path, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_hand_items_minus(uplayer, cardlist){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  too_many_string_items:
    name: too_many_string_items
    code: "function too_many_string_items(A) { return A.items.filter(x =>
      nundef(x.o)).length >= 8; }\r\n"
    sig: function too_many_string_items(A){}
    region: hack (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_start_action_stage:
    name: ari_start_action_stage
    code: "function ari_start_action_stage() {\r

      \  let next = ari_select_next_player_according_to_stall_value();\r

      \  if (!next) { ari_next_phase(); }\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function ari_start_action_stage(){}
    region: market (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_start_church_stage:
    name: ari_start_church_stage
    code: "function ari_start_church_stage() {\r

      \  let [fen] = [Z.fen];\r

      \  let order = fen.plorder = fen.church_order =
      determine_church_turn_order();\r

      \  [Z.turn, Z.stage] = [[order[0]], 17];\r

      \  ari_history_list([`inquisition starts!`], 'church');\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function ari_start_church_stage(){}
    region: market (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_open_rumors:
    name: ari_open_rumors
    code: "function ari_open_rumors(stage = 28) {\r

      \  let [fen, deck] = [Z.fen, UI.deck_rumors];\r

      \  DA.qanim = [];\r

      \  fen.stage = Z.stage = stage;\r

      \  let n = Math.min(2, fen.deck_rumors.length);\r

      \  let cards = arrTake(fen.deck_rumors, n);\r

      \  let uicards = cards.map(x => ari_get_card(x));\r

      \  let dest = UI.rumor_top = ui_type_market([],
      deck.container.parentNode, { maleft: 12 }, `rumor_top`, 'rumor_top',
      ari_get_card);\r

      \  mMagnifyOnHoverControlPopup(dest.cardcontainer);\r

      \  for (let i = 0; i < n; i++) {\r

      \    DA.qanim.push([qanim_flip_topmost, [deck]]);\r

      \    DA.qanim.push([qanim_move_topmost, [deck, dest]]);\r

      \    DA.qanim.push([q_move_topmost, [deck, dest]]);\r

      \  }\r

      \  DA.qanim.push([q_mirror_fen, ['deck_rumors', 'rumor_top']]);\r

      \  DA.qanim.push([ari_pre_action, []]);\r

      \  qanim();\r

      }\r\n"
    sig: function ari_open_rumors(stage = 28){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  building_is_correct:
    name: building_is_correct
    code: "function building_is_correct(b) {\r

      \  let key = b.keycard.key;\r

      \  let list = b.list;\r

      \  for (let i = 0; i < list.length; i++) { if (list[i][0] != key[0])
      return false; }\r

      \  return true;\r

      }\r\n"
    sig: function building_is_correct(b){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  output_arr_short:
    name: output_arr_short
    code: "function output_arr_short(arr) {\r

      \  console.log('output_arr_short',
      getFunctionsNameThatCalledThisFunction());\r

      \  console.log('deck top 3', jsCopy(arrTake(arr, 3)));
      console.log('deck bottom 3', jsCopy(arrTakeLast(arr, 3)));\r

      }\r\n"
    sig: function output_arr_short(arr){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_rumors_setup:
    name: process_rumors_setup
    code: "function process_rumors_setup() {\r

      \  let [fen, A, uplayer, plorder, data] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder, Z.uplayer_data];\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  let receiver = firstCond(items, x =>
      plorder.includes(x.key)).key;\r

      \  let rumor = firstCond(items, x => !plorder.includes(x.key));\r

      \  if (nundef(receiver) || nundef(rumor)) {\r

      \    select_error('you must select exactly one player and one rumor
      card!');\r

      \    return;\r

      \  }\r

      \  assertion(isdef(data), 'no data for player ' + uplayer); \r

      \  rumor_update_playerdata(data, receiver, rumor);\r

      \  let playerdata_complete = rumor_playerdata_complete();\r

      \  if (playerdata_complete) {\r

      \    Z.turn = [Z.host];\r

      \    Z.stage = 105; //'next_rumors_setup_stage';\r

      \    clear_transaction();\r

      \    take_turn_fen_write();\r

      \  } else if (isEmpty(data.state.remaining)) {\r

      \    clear_transaction();\r

      \    take_turn_write();\r

      \  } else {\r

      \    add_transaction('rumorsetup');\r

      \    take_turn_write();\r

      \  }\r

      }\r\n"
    sig: function process_rumors_setup(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_rumor_both:
    name: post_rumor_both
    code: "function post_rumor_both() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let non_selected = A.items.filter(x => x.index !=
      A.selected[0])[0];\r

      \  let rumor = item.key;\r

      \  let rumor_other = non_selected.key;\r

      \  fen.players[uplayer].rumors.push(rumor);\r

      \  fen.players[A.owner].rumors.push(rumor_other);\r

      \  ari_history_list([`${uplayer} got a rumor, ${A.owner} got one
      too`], 'rumor');\r

      \  ari_next_action();\r

      }\r\n"
    sig: function post_rumor_both(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_inspect:
    name: post_inspect
    code: "function post_inspect() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let schwein = A.items[A.selected[0]].o;\r

      \  turn_new_schwein_up(schwein, A.fenbuilding, A.uibuilding);\r

      }\r\n"
    sig: function post_inspect(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_buy_rumor:
    name: post_buy_rumor
    code: "function post_buy_rumor() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let non_selected = A.items.filter(x => x.index !=
      A.selected[0]);\r

      \  let rumor = item.key;\r

      \  for (const item of non_selected) {
      fen.deck_rumors.push(item.key); }\r

      \  fen.players[uplayer].rumors.push(rumor);\r

      \  fen.players[uplayer].coins -= 1;\r

      \  ari_history_list([`${uplayer} bought a rumor`], 'rumor');\r

      \  ari_next_action();\r

      }\r\n"
    sig: function post_buy_rumor(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_rumor:
    name: process_rumor
    code: "function process_rumor() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  let building = firstCond(items, x =>
      x.path.includes('building'));\r

      \  let rumor = firstCond(items, x =>
      !x.path.includes('building'));\r

      \  if (nundef(building) || nundef(rumor)) {\r

      \    select_error('you must select exactly one building and one
      rumor card!');\r

      \    return;\r

      \  }\r

      \  let fenbuilding = lookup(fen, building.path.split('.'));\r

      \  lookupAddToList(fenbuilding, ['rumors'], rumor.key);\r

      \  removeInPlace(fen.players[uplayer].rumors, rumor.key);\r

      \  ari_history_list([`${uplayer} added rumor to
      ${ari_get_building_type(fenbuilding)}`,], 'rumor');\r

      \  ari_next_action(fen, uplayer);\r

      }\r\n"
    sig: function process_rumor(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_rumor_discard:
    name: process_rumor_discard
    code: "function process_rumor_discard() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  console.log('.........items', A.items, A.selected, item);\r

      \  let rumor = item.key;\r

      \  removeInPlace(fen.players[uplayer].rumors, rumor);\r

      \  ari_history_list([`building is correct! ${uplayer} had to discard
      rumor (${rumor})`], 'rumor');\r

      \  ari_next_action();\r

      }\r\n"
    sig: function process_rumor_discard(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_blackmail:
    name: process_blackmail
    code: "function process_blackmail() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  console.log('selected building to blackmail:', item);\r

      \  let building_owner = stringAfter(item.o.path, '.');
      building_owner = stringBefore(building_owner, '.');\r

      \  let path = item.o.path;\r

      \  fen.blackmail = { blackmailer: uplayer, blackmailed:
      building_owner, payment: A.payment, building_path: path };\r

      \  let fenbuilding = lookup(fen, path.split('.'));\r

      \  console.log('blackmail:', fen.blackmail);\r

      \  fenbuilding.isblackmailed = true;\r

      \  ari_history_list([`${uplayer} is blackmailing
      ${building_owner}`], 'blackmail');\r

      \  [Z.stage, Z.turn] = [33, [building_owner]];\r

      \  console.log('hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh')\r

      \  process_payment();\r

      \  setTimeout(take_turn_fen, 1000); \r

      }\r\n"
    sig: function process_blackmail(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  being_blackmailed:
    name: being_blackmailed
    code: "function being_blackmailed() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let cmd = item.key;\r

      \  console.log('selected reaction to blackmail:', item.key);\r

      \  if (cmd == 'accept') { Z.stage = 34; ari_pre_action(); }\r

      \  else if (cmd == 'reject') { post_reject_blackmail(); }\r

      \  else { post_defend_blackmail(); }\r

      }\r\n"
    sig: function being_blackmailed(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_accept_blackmail:
    name: post_accept_blackmail
    code: "function post_accept_blackmail() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let blackmailer = fen.blackmail.blackmailer;\r

      \  let blackmailed = fen.blackmail.blackmailed;\r

      \  let building_path = fen.blackmail.building_path;\r

      \  let fenbuilding = path2fen(fen, building_path);\r

      \  let building_owner = stringAfter(building_path, '.');
      building_owner = stringBefore(building_owner, '.');\r

      \  assertion(building_owner == blackmailed && blackmailed ==
      uplayer, 'blackmailed and uplayer and building owner must be same');\r

      \  elem_from_to(item.key, fen.players[blackmailed].stall,
      fen.players[blackmailer].hand);\r

      \  ari_history_list([`${blackmailed} accepts: gives ${item.key} to
      ${blackmailer}`], 'blackmail');\r

      \  delete fenbuilding.isblackmailed;\r

      \  [Z.stage, Z.turn] = [35, [blackmailer]];\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function post_accept_blackmail(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_defend_blackmail:
    name: post_defend_blackmail
    code: "function post_defend_blackmail() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let blackmailer = fen.blackmail.blackmailer;\r

      \  let blackmailed = fen.blackmail.blackmailed;\r

      \  let building_path = fen.blackmail.building_path;\r

      \  let fenbuilding = path2fen(fen, building_path);\r

      \  let building_owner = stringAfter(building_path, '.');
      building_owner = stringBefore(building_owner, '.');\r

      \  assertion(building_owner == blackmailed && blackmailed ==
      uplayer, 'blackmailed and uplayer and building owner must be same');\r

      \  let rumors = fen.players[building_owner].rumors;\r

      \  let lead = fenbuilding.lead;\r

      \  let brumors = fenbuilding.rumors;\r

      \  let match = firstCond(rumors, x => x[0] == lead[0]);\r

      \  removeInPlace(rumors, match);\r

      \  brumors.pop();\r

      \  ari_history_list([`${blackmailed} defends: pays matching rumor to
      deflect blackmail, 1 rumor is removed from building`], 'blackmail');\r

      \  delete fenbuilding.isblackmailed;\r

      \  [Z.stage, Z.turn] = [35, [blackmailer]];\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function post_defend_blackmail(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_reject_blackmail:
    name: post_reject_blackmail
    code: "function post_reject_blackmail() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let blackmailer = fen.blackmail.blackmailer;\r

      \  let blackmailed = fen.blackmail.blackmailed;\r

      \  let building_path = fen.blackmail.building_path;\r

      \  let fenbuilding = path2fen(fen, building_path);\r

      \  let building_owner = stringAfter(building_path, '.');
      building_owner = stringBefore(building_owner, '.');\r

      \  assertion(building_owner == blackmailed && blackmailed ==
      uplayer, 'blackmailed and uplayer and building owner must be same');\r

      \  ari_history_list([`${blackmailed} rejects!`], 'blackmail');\r

      \  let rumors = fenbuilding.rumors;\r

      \  let has_lead_rumor = firstCond(rumors, x => x[0] ==
      fenbuilding.lead[0]);\r

      \  if (has_lead_rumor) {\r

      \    let stall = fen.players[blackmailed].stall;\r

      \    fen.players[blackmailer].hand =
      fen.players[blackmailer].hand.concat(stall);\r

      \    fen.players[blackmailed].stall = [];\r

      \    ari_history_list([`RUMOR CORRECT!!! ${blackmailed} looses
      entire stall to ${blackmailer}`], 'blackmail');\r

      \  } else {\r

      \    ari_history_list([`${blackmailed} was lucky!!! rumors
      incorrect`], 'blackmail');\r

      \  }\r

      \  delete fenbuilding.rumors;\r

      \  delete fenbuilding.isblackmailed;\r

      \  [Z.stage, Z.turn] = [35, [blackmailer]];\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function post_reject_blackmail(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_blackmail:
    name: post_blackmail
    code: "function post_blackmail() {\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  ari_history_list([`blackmail complete!`], 'blackmail');\r

      \  delete fen.blackmail;\r

      \  ari_next_action();\r

      }\r\n"
    sig: function post_blackmail(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  turn_schwein_up:
    name: turn_schwein_up
    code: "function turn_schwein_up(b) {\r

      \  let key = b.keycard.key;\r

      \  let list = b.list;\r

      \  let schwein = firstCond(list, x => x[0] != key[0]);\r

      \  assertion(isdef(schwein), 'WAS DA IST GARKEIN SCHWEIN!!!!!!!!!!',
      b);\r

      \  let ui = firstCond(b.items, x => x.key == schwein);\r

      \  face_up(ui);\r

      \  let obuilding = lookup(Z.fen, b.path.split('.'));\r

      \  b.schwein = obuilding.schwein = schwein;\r

      \  ari_open_rumors(32);\r

      }\r\n"
    sig: function turn_schwein_up(b){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\easy\aristo.js
    datetime: 2022-07-15-06-41
    timestamp: 1657892511803.6853
    size: 118844
  ui_get_rumors_and_players_items:
    name: ui_get_rumors_and_players_items
    code: "function ui_get_rumors_and_players_items(uplayer) {\r

      \  let items = [], i = 0;\r

      \  let comm = UI.players[uplayer].rumors;\r

      \  let [data, pl] = [Z.uplayer_data, Z.pl];\r

      \  assertion(isdef(data), 'no data for player ' + uplayer);\r

      \  if (!isDict(data.state)) data.state = { remaining:
      jsCopy(pl.rumors), receivers: [], di: {} };\r

      \  let rem = data.state.remaining;\r

      \  for (const k of rem) {\r

      \    let o = firstCond(comm.items, x => x.key == k);\r

      \    let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: comm.path, index: i };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  let players = [];\r

      \  let receivers = data.state.receivers;\r

      \  for (const plname in UI.players) {\r

      \    if (plname == uplayer || receivers.includes(plname))
      continue;\r

      \    players.push(plname);\r

      \  }\r

      \  items = items.concat(ui_get_string_items(players));\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_rumors_and_players_items(uplayer){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  focusNextSiblingOrSubmitOnEnter:
    name: focusNextSiblingOrSubmitOnEnter
    code: "function focusNextSiblingOrSubmitOnEnter(ev, id) {\r

      \  if (ev.key === 'Enter') {\r

      \    ev.preventDefault();\r

      \    let el = mBy(id); let tag = el.tagName.toLowerCase();\r

      \    if (tag == 'input') el.focus();\r

      \    else if (tag == 'form') {\r

      \      el.submit();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function focusNextSiblingOrSubmitOnEnter(ev, id){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\xampp\htdocs\aroot\rechnung\baustelle.js
    datetime: 2022-07-15-11-24
    timestamp: 1657909467325.3176
    size: 1609
  bw_set_new_password_popup:
    name: bw_set_new_password_popup
    code: "function bw_set_new_password_popup() {\r

      \  let w = 200;\r

      \  let html = `\r

      \    <div id=\"dBw\" class=\"mystyle\"
      style=\"background:silver;padding:12px\">\r

      \    <h2 style=\"text-align:center\">Set New Master Password</h2>\r

      \    <div id=\"dBWLogin\" style=\"text-align:right\">\r

      \        <form action=\"javascript:bw_master_password_renew()\"
      id=\"fBitwarden\">\r

      \          <label for=\"inputPassword\">New Password:</label>\r

      \          <input style=\"width:${w}px\" type=\"password\"
      id=\"inputPassword\" placeholder=\"\"
      onkeydown=\"focusNextSiblingOrSubmitOnEnter(event,'inputPassword2')\" />\r

      \          <br><br><label for=\"inputPassword2\">Repeat
      Password:</label>\r

      \          <input style=\"width:${w}px\" type=\"password\"
      id=\"inputPassword2\" placeholder=\"\"
      onkeydown=\"focusNextSiblingOrSubmitOnEnter(event,'fBitwarden')\" />\r

      \          <br>\r

      \          <div id=\"dError\"
      style=\"color:yellow;background:red;text-align:center;margin-top:4px;padd\
      ing:0px 10px;box-sizing:border-box\"></div>\r

      \          <br><button onclick=\"bw_master_password_renew()\"
      >Submit</button>\r

      \        </form>\r

      \      </div>\r

      \    </div>\r

      \  `;\r

      \  let d = mCreateFrom(html);\r

      \  let dParent = mBy('dPopup');\r

      \  show(dParent);\r

      \  mClear(dParent);\r

      \  mStyle(dParent, { top: 50, right: 10 });\r

      \  mAppend(dParent, d);\r

      \  document.getElementById(\"inputPassword\").focus();\r

      }\r\n"
    sig: function bw_set_new_password_popup(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\xampp\htdocs\aroot\rechnung\baustelle.js
    datetime: 2022-07-15-11-24
    timestamp: 1657909467325.3176
    size: 1609
  bw_master_password_check:
    name: bw_master_password_check
    code: "function bw_master_password_check() {\r

      \  let pw = mBy('inputPassword').value;\r

      \  if (pw == S.master_password) {\r

      \    S.bw_state = 'loggedin';\r

      \    toggle_bw_symbol();\r

      \    hide('dPopup');\r

      \    if (DA.name == 'Password') { \r

      \      show_eval_message(true); DA.name=DA.challenge = null;\r

      \    }\r

      \  } else if (DA.name == 'Password') { \r

      \    DA.name=DA.challenge = null;\r

      \    show_eval_message(false,`Fail! the password is
      ${S.master_password}`); \r

      \    mBy('inputPassword').value = '';\r

      \    hide('dPopup');\r

      \  } else {\r

      \    let d = mBy('bw_login_status');\r

      \    d.innerHTML = 'Incorrect Master Password';\r

      \  }\r

      }\r\n"
    sig: function bw_master_password_check(){}
    region: funcs (baustelle2.js)
    filename: baustelle2.js
    type: func
    fname: baustelle2.js
    path: C:\xampp\htdocs\aroot\rechnung\baustelle2.js
    datetime: 2022-07-16-06-59
    timestamp: 1657979956842.881
    size: 2335
  bw_master_password_renew:
    name: bw_master_password_renew
    code: "function bw_master_password_renew() {\r

      \  let [inp1, inp2] = [document.getElementById('inputPassword'),
      document.getElementById('inputPassword2')];\r

      \  let pw = inp1.value;\r

      \  let pw2 = inp2.value;\r

      \  let letters = toLetters(pw);\r

      \  let minlen = 8;\r

      \  let correct = false;\r

      \  let d = mBy('dError');\r

      \  if (pw.length < minlen) {\r

      \    d.innerHTML = `password needs to be at least ${minlen}
      long!`;\r

      \  } else if (!letters.find(x =>
      'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.includes(x))) {\r

      \    d.innerHTML = 'password needs to contain at least 1 uppercase
      letter!';\r

      \  } else if (!letters.find(x => '0123456789'.includes(x))) {\r

      \    d.innerHTML = 'password needs to contain at least 1 digit!';\r

      \  } else if (isAlphaNum(pw)) {\r

      \    d.innerHTML = 'password needs to contain at least 1 special
      symbol!';\r

      \  } else if (pw !== pw2) {\r

      \    d.innerHTML = 'passwords do not match';\r

      \  } else correct = true;\r

      \  if (correct) {\r

      \    console.log('new password has been set!', pw);\r

      \    S.master_password = pw;\r

      \    boa_save();\r

      \    hide('dPopup');\r

      \    show_eval_message(true,`Password has been set to
      ${pw}`);  DA.challenge = DA.name = null;\r

      \  }else{\r

      \    inp1.value = inp2.value = '';\r

      \    inp1.focus();\r

      \  }\r

      }\r\n"
    sig: function bw_master_password_renew(){}
    region: funcs (baustelle2.js)
    filename: baustelle2.js
    type: func
    fname: baustelle2.js
    path: C:\xampp\htdocs\aroot\rechnung\baustelle2.js
    datetime: 2022-07-16-06-59
    timestamp: 1657979956842.881
    size: 2335
  initialize_state:
    name: initialize_state
    code: "function initialize_state() {\r

      \  let dpop = mBy('dPopup'); dpop.onclick = ev => evNoBubble(ev);\r

      \  onclick = close_popup;\r

      \  onkeyup = keyhandler;\r

      \  let state = localStorage.getItem('boa');\r

      \  if (state) S = JSON.parse(state);\r

      \  else S = { location: null, boa_state: null, bw_state: null,
      master_password: null, score: 0, };\r

      \  S.location = 'home'; \r

      \  S.bw_state = 'loggedin'; \r

      \  S.boa_state = null;\r

      }\r\n"
    sig: function initialize_state(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  start_challenge1:
    name: start_challenge1
    code: "function start_challenge1() {\r

      \  DA.challenge = 1;\r

      \  DA.name = 'Login';\r

      \  scrollToTop();\r

      \  onclick_location('boa');\r

      }\r\n"
    sig: function start_challenge1(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  start_challenge2:
    name: start_challenge2
    code: "function start_challenge2() {\r

      \  DA.challenge = 2;\r

      \  DA.name = 'Bill Pay';\r

      \  scrollToTop();\r

      \  boamain_start();\r

      \  show_bill_button();\r

      }\r\n"
    sig: function start_challenge2(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  start_challenge3:
    name: start_challenge3
    code: "function start_challenge3() {\r

      \  DA.challenge = 3;\r

      \  DA.name = 'Full Bill Pay';\r

      \  scrollToTop();\r

      \  onclick_location('boa');\r

      }\r\n"
    sig: function start_challenge3(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  start_challenge4:
    name: start_challenge4
    code: "function start_challenge4() {\r

      \  DA.challenge = 4;\r

      \  DA.name = 'Password';\r

      \  scrollToTop();\r

      \  if (S.bw_state == 'loggedin') toggle_bw_symbol();\r

      \  S.bw_state = (coin(25) || !S.master_password) ? 'expired' :
      'loggedout';\r

      }\r\n"
    sig: function start_challenge4(){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  add_verify_content:
    name: add_verify_content
    code: "function add_verify_content(dParent) {\r

      \  let d1 = mDiv(dParent);\r

      \  let [dl, dr] = mColFlex(d1, [4, 1]);\r

      \  dr.innerHTML = img_html('verify_right.jpg');\r

      \  let d2 = mDiv(dl, { w: '100%', padding: 12, box: true });\r

      \  let d3 = mDiv(d2, { fz: 22, weight: 900, rounding: 4, hmin: 50,
      border: '3px solid black' }, null, 'Request Authorization Code');\r

      \  let d4 = mDiv(dl, { w: '100%', padding: 12, box: true, fz: 14,
      family: 'Verdana' }, null, 'To verify your identity, we need to send you
      an authorization code');\r

      \  let d5 = mDiv(dl, { w: '100%', matop: 12, hpadding: 12, box:
      true, fz: 14, family: 'Verdana' }, null, 'Select a Phone Number');\r

      \  let st1 = `padding:12px;font-size:18px;`;\r

      \  let stradio = `margin:5px 10px;color:black`;\r

      \  let html = `\r

      \    <div id='dPhoneContact' style=\"${st1}\">\r

      \      <fieldset>\r

      \        <div style=\"${stradio}\">\r

      \          <div>\r

      \            <input class=\"multipleContact\" id=\"tlpvt-text1\"
      name=\"phoneContact\" value=\"text_1\" type=\"radio\" />\r

      \            <label for=\"tlpvt-text1\">XXX-XXX-7382</label>\r

      \            <div class=\"clearboth\"></div>\r

      \          </div>\r

      \        </div>\r

      \        <div style=\"${stradio}\">\r

      \          <div class=\"phone-num\">\r

      \            <input class=\"multipleContact\" id=\"tlpvt-text2\"
      name=\"phoneContact\" value=\"text_2\" type=\"radio\" />\r

      \            <label class=\"TL_NPI_L1\"
      for=\"tlpvt-text2\">XXX-XXX-9671</label>\r

      \            <div class=\"clearboth\"></div>\r

      \          </div>\r

      \        </div>\r

      \        <div style=\"${stradio}\">\r

      \          <div class=\"phone-num\">\r

      \            <input class=\"multipleContact\" id=\"tlpvt-text3\"
      name=\"phoneContact\" value=\"text_3\" type=\"radio\" />\r

      \            <label class=\"TL_NPI_L1\"
      for=\"tlpvt-text3\">XXX-XXX-0297</label>\r

      \            <div class=\"clearboth\"></div>\r

      \          </div>\r

      \        </div>\r

      \      </fieldset>\r

      \    </div>\r

      \  `;\r

      \  mAppend(dl, mCreateFrom(html));\r

      \  let d7 = mDiv(dl, { w: '100%', matop: 12, hpadding: 12, box:
      true, fz: 14, family: 'Verdana' }, null, 'How would you like to receive
      it?');\r

      \  html = `\r

      \    <div id='dTextOrPhone' style=\"${st1}\">\r

      \      <fieldset>\r

      \        <div style=\"${stradio}\">\r

      \          <div>\r

      \            <input class=\"multipleContact\" id=\"tph-text1\"
      name=\"textorphone\" value=\"text_1\" type=\"radio\" checked />\r

      \            <label for=\"tph-text1\">Text message</label>\r

      \            <div class=\"clearboth\"></div>\r

      \          </div>\r

      \        </div>\r

      \        <div style=\"${stradio}\">\r

      \          <div class=\"phone-num\">\r

      \            <input class=\"multipleContact\" id=\"tph-text2\"
      name=\"textorphone\" value=\"text_2\" type=\"radio\" />\r

      \            <label class=\"TL_NPI_L1\" for=\"tph-text2\">Phone
      call</label>\r

      \            <div class=\"clearboth\"></div>\r

      \          </div>\r

      \        </div>\r

      \      </fieldset>\r

      \    </div>\r

      \  `;\r

      \  mAppend(dl, mCreateFrom(html));\r

      \  let d9 = mDiv(dl, { w: '100%', matop: 12, hpadding: 12, box:
      true, fz: 14, family: 'Verdana' }, null, 'The code expires 10 minutes
      after you request it');\r

      \  let d10 = mDiv(dl, { w: '100%', matop: 12, hpadding: 12, box:
      true, fz: 14, family: 'Verdana' }, null, '<a>Having trouble receiving you
      code by phone?</a>');\r

      \  let d11 = mDiv(dl, { w: '100%', matop: 12, hpadding: 12, box:
      true, fz: 14, family: 'Verdana' }, null, 'You are consenting to be
      contacted at the phone number selected for the purpose of receiving an
      authorization code. If you selected text message, Wireless and text
      message fees may apply from you carrier.<br>Supported carriers include
      AT&T, Sprint, T-Mobile, US Cellular, Verizon, or any other branded
      wireless operator.');\r

      \  let d12 = mDiv(dl, { hpadding: 12, matop: 24, gap: 12 });
      mFlex(d12);\r

      \  let bstyle = { vpadding: 12, hpadding: 20, fz: 20, fg: 'grey',
      rounding: 6, maright: 25, weight: 'bold' };\r

      \  mButton('SEND CODE', onclick_boa_sendcode, d12, bstyle);\r

      \  mButton('CANCEL', onclick_boa_cancel, d12, bstyle);\r

      }\r\n"
    sig: function add_verify_content(dParent){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  add_havecode_content:
    name: add_havecode_content
    code: "function add_havecode_content(dParent) {\r

      \  let d1 = mDiv(dParent);\r

      \  let [dl, dr] = mColFlex(d1, [4, 1]);\r

      \  dr.innerHTML = img_html('verify_right.jpg');\r

      \  let d2 = mDiv(dl, { w: '100%', padding: 12, box: true });\r

      \  let d3 = mDiv(d2, { fz: 22, weight: 900, rounding: 4, hmin: 50,
      border: 'none' }, null, 'Enter Authorization Code');\r

      \  let d4 = mDiv(dl, { w: '100%', padding: 12, box: true, fz: 14,
      family: 'Verdana' }, null, 'An authorization code was sent to your
      phone');\r

      \  let d5 = mDiv(dl, { w: '100%', matop: 12, mabottom: 20, hpadding:
      12, box: true, fz: 14, family: 'Verdana' }, null, 'XXX-XXX-0297');\r

      \  let html = `\r

      \    <div>\r

      \      <form action=\"javascript:onclick_boa_submit_code();\">\r

      \        <div>\r

      \          <label for=\"inpAuthocode\">Authorization
      code</label><br>\r

      \          <input style=\"border:1px dotted silver;padding:4px\"
      id=\"inpAuthocode\" name=\"authocode\" value=\"XXXXXX\" type=\"text\" />\r

      \          <div class=\"clearboth\"></div>\r

      \        </div>\r

      \        <div style=\"font-size:12px;margin:30px 0px\">The code
      expires 10 minutes after you request it.</div>\r

      \        <a style=\"font-size:12px;\">Request another authorization
      code</a>\r

      \        <div style=\"margin-top:30px\"><button
      id='bSubmit'>SUBMIT</button><button id='bCancel'>CANCEL</button></div>\r

      \      </form>\r

      \    </div>\r

      \  `;\r

      \  let d6 = mDiv(dl, { w: '100%', matop: 12, hpadding: 12, box:
      true, fz: 14, family: 'Verdana' }, null, html);\r

      \  let bSubmit = document.getElementById('bSubmit');\r

      \  let bStyle = { vpadding: 6, hpadding: 20, fz: 20, rounding: 6,
      maright: 25, weight: 'bold' };\r

      \  mStyle(bSubmit, bStyle);\r

      \  mStyle(bCancel, bStyle); mStyle(bCancel, { fg: 'grey', border:
      'grey' })\r

      \  mClass(bSubmit, 'btn-bofa-blue');\r

      \  bCancel.onclick = onclick_boa_cancel;\r

      }\r\n"
    sig: function add_havecode_content(dParent){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  add_make_payments_button:
    name: add_make_payments_button
    code: "function add_make_payments_button(ev) {\r

      \  let id = evToClosestId(ev);\r

      \  let inp = mBy(id);\r

      \  if (isdef(DA.prevHidden)) { mClear(DA.prevHidden); }\r

      \  let dHidden =
      inp.parentNode.parentNode.parentNode.parentNode.parentNode.lastChild;\r

      \  mClear(dHidden);\r

      \  let d1 = mCard(dHidden, { w: '90%', padding: 10, box: true });\r

      \  let el = mDiv(d1, { cursor: 'pointer' }, null, `<span
      class=\"btn-bofa btn-bofa-blue btn-bofa-blue-lock\">Make
      Payments</span>`);\r

      \  el.onclick = () => make_payments_challenge_eval(inp);\r

      \  DA.prevHidden = dHidden;\r

      }\r\n"
    sig: function add_make_payments_button(ev){}
    region: var (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  bw_login_popup:
    name: bw_login_popup
    code: "function bw_login_popup() {\r

      \  let html = `\r

      \    <div id=\"dBw\" class=\"mystyle\"
      style=\"background:silver;padding:12px\">\r

      \      <div id=\"dBWLogin\">\r

      \        <form action=\"javascript:bw_master_password_check()\"
      id=\"fBitwarden\">\r

      \          <label for=\"inputPassword\">Enter Master
      Password:</label>\r

      \          <input type=\"password\" id=\"inputPassword\"
      placeholder=\"\" />\r

      \        </form>\r

      \        <div id=\"bw_login_status\" style=\"color:red\"></div>\r

      \      </div>\r

      \    </div>\r

      \  `;\r

      \  let d = mCreateFrom(html);\r

      \  let dParent = mBy('dPopup');\r

      \  show(dParent);\r

      \  mClear(dParent);\r

      \  mStyle(dParent, { top: 50, right: 10 });\r

      \  mAppend(dParent, d);\r

      \  document.getElementById(\"inputPassword\").focus();\r

      }\r\n"
    sig: function bw_login_popup(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  boa_start:
    name: boa_start
    code: "function boa_start() {\r

      \  let d = mBy('dBoa');\r

      \  mClear(d);\r

      \  mAppend(d, get_header_top('Log In')); \r

      \  mAppend(d, get_red_header('Mobile and Online Bill Pay', true));\r

      \  mAppend(d, get_boa_start_content());\r

      \  let footer = mAppend(d, get_boa_footer1());\r

      \  mStyle(footer, { matop: 100, hmax: 150 });\r

      \  S.boa_loggedin = false;\r

      }\r\n"
    sig: function boa_start(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  boa_save:
    name: boa_save
    code: "function boa_save() { localStorage.setItem('boa', JSON.stringify(S));
      }\r\n"
    sig: function boa_save(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  boalogin_start:
    name: boalogin_start
    code: "function boalogin_start() {\r

      \  console.log('boalogin_start');\r

      \  let d = mBy('dBoa');\r

      \  mClear(d);\r

      \  mAppend(d, get_header_top(''));\r

      \  mAppend(d, get_red_header('Log In to Online Banking'));\r

      \  mAppend(d, get_boalogin_html());\r

      \  mAppend(d, get_boa_footer2());\r

      \  S.boa_state = 'loginform'; \r

      \  let elem = get_boa_userid_input(); \r

      \  elem.onfocus = () => { bw_symbol_pulse(); S.current_input =
      get_boa_userid_input(); S.current_label = 'userid'; };\r

      \  let elem2 = get_boa_pwd_input(); \r

      \  elem2.onfocus = () => { bw_symbol_pulse(); S.current_input =
      get_boa_pwd_input(); S.current_label = 'pwd'; };\r

      }\r\n"
    sig: function boalogin_start(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  boamain_start:
    name: boamain_start
    code: "function boamain_start() {\r

      \  S.boa_state = 'authorized';\r

      \  if (DA.challenge == 1) {\r

      \    TO.boa = setTimeout(() => {\r

      \      S.boa_state = null;\r

      \      let msg = DA.challenge == 1 ? 'CONGRATULATIONS!!!! YOU
      SUCCEEDED IN LOGGING IN TO BOA' : 'Session timed out!';\r

      \      show_eval_message(true,null,onclick_home);\r

      \    }, 1000);\r

      \  } else if (DA.challenge == 3) show_bill_button();\r

      \  show_correct_location('boa');  \r

      \  let dParent = mBy('dBoa'); mClear(dParent);\r

      \  let d0 = mDiv(dParent, { align: 'center' }, 'dBoaMain');
      mCenterFlex(d0);\r

      \  let [wtotal, wleft, wright] = [972, 972 - 298, 292];\r

      \  let d = mDiv(d0, { w: wtotal, hmin: 500 }); mAppend(d,
      createImage('boamain_header.png', { h: 111 }));\r

      \  let dl = mDiv(d, { float: 'left', w: wleft, hmin: 400 });\r

      \  let dr = mDiv(d, { float: 'right', hmin: 400, w: wright });\r

      \  mDiv(dr, { h: 100 });\r

      \  mAppend(dr, createImage('boamain_rechts.png', { w: 292 }));\r

      \  mAppend(dl, createImage('boamain_left_top.jpg', { matop: 50,
      maleft: -20 }));\r

      \  mDiv(dl, { bg: '#857363', fg: 'white', fz: 15 }, null,
      '&nbsp;&nbsp;<i class=\"fa fa-caret-down\"></i>&nbsp;&nbsp;Default
      Group<div style=\"float:right;\">Sort&nbsp;&nbsp;</div>');\r

      \  let boadata = get_fake_boa_data_list();\r

      \  let color_alt = '#F9F7F4';\r

      \  let i = 0;\r

      \  for (const o of boadata) {\r

      \    let k = o.key;\r

      \    o.index = i;\r

      \    let logo = valf(o.logo, 'defaultacct.jpg');\r

      \    let path = `${logo}`;\r

      \    let [sz, bg] = [25, i % 2 ? 'white' : color_alt];\r

      \    let dall = mDiv(dl, { bg: bg, fg: '#FCFCFC', 'border-bottom':
      '1px dotted silver' }, `dAccount${i}`);\r

      \    let da = mDiv(dall);\r

      \    mFlexLR(da);\r

      \    let img = createImage(path, { h: sz, margin: 10 });\r

      \    let da1 = mDiv(da);\r

      \    mAppend(da1, img);\r

      \    let dtext = mDiv(da1, { align: 'left', display: 'inline-block',
      fg: '#FCFCFC', fz: 14 });\r

      \    mAppend(dtext, mCreateFrom(`<a>${k}</a>`));\r

      \    let dsub = mDiv(dtext, { fg: 'dimgray', fz: 12 }, null,
      o.sub);\r

      \    let da2 = mDiv(da); mFlex(da2);\r

      \    let da21 = mDiv(da2, { w: 100, hmargin: 20, mabottom: 20 });\r

      \    let padinput = 7;\r

      \    mDiv(da21, { fg: 'black', fz: 12, weight: 'bold' }, null,
      'Amount');\r

      \    mDiv(da21, { w: 100 }, null, `<input
      onfocus=\"add_make_payments_button(event)\"
      style=\"color:dimgray;font-size:14px;border:1px dotted
      silver;padding:${padinput}px;width:85px\" id=\"inp${i}\"
      name=\"authocode\" value=\"$\" type=\"text\" />`);\r

      \    let da22 = mDiv(da2, { maright: 10 });\r

      \    mDiv(da22, { fg: 'black', fz: 12, weight: 'bold' }, null,
      'Deliver By');\r

      \    mDiv(da22, {}, null, `<input
      style=\"color:dimgray;font-size:12px;border:1px dotted
      silver;padding:${padinput}px\" id=\"inpAuthocode\" name=\"authocode\"
      value=\"\" type=\"date\" />`);\r

      \    let dabot = mDiv(dall);\r

      \    mFlexLR(dabot);\r

      \    let lastpayment = isdef(o['Last Payment']) ? `Last Payment:
      ${o['Last Payment']}` : ' ';\r

      \    mDiv(dabot, { fz: 12, fg: '#303030', maleft: 10, mabottom: 25
      }, null, `${lastpayment}`);\r

      \    mDiv(dabot, { fz: 12, fg: 'blue', maright: 90, mabottom: 25 },
      null,
      `<a>Activity</a>&nbsp;&nbsp;&nbsp;<a>Reminders</a>&nbsp;&nbsp;&nbsp;<a>Au\
      toPay</a>`);\r

      \    mDiv(dall);\r

      \    i++;\r

      \  }\r

      }\r\n"
    sig: function boamain_start(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  boaverify_start:
    name: boaverify_start
    code: "function boaverify_start() {\r

      \  let d = mBy('dBoa');\r

      \  mClear(d);\r

      \  mAppend(d, get_header_top('Extra Security At Sign-in')); \r

      \  mAppend(d, get_red_header('Verify Your Identity'));\r

      \  add_verify_content(d);\r

      \  mAppend(d, get_boa_footer2());\r

      }\r\n"
    sig: function boaverify_start(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  boahavecode_start:
    name: boahavecode_start
    code: "function boahavecode_start() {\r

      \  let d = mBy('dBoa');\r

      \  mClear(d);\r

      \  mAppend(d, get_header_top('Extra Security At Sign-in')); \r

      \  mAppend(d, get_red_header('Verify Your Identity'));\r

      \  add_havecode_content(d);\r

      \  mAppend(d, get_boa_footer2());\r

      \  S.boa_state = 'authorization_pending';\r

      \  console.log(S.boa_authorization_code);\r

      }\r\n"
    sig: function boahavecode_start(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  bw_symbol_pulse:
    name: bw_symbol_pulse
    code: "function bw_symbol_pulse() { let elem = mBy('tbbw'); if (nundef(elem))
      return; else { mPulse1(elem); } } \r\n"
    sig: function bw_symbol_pulse(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  bw_list_entry:
    name: bw_list_entry
    code: "function bw_list_entry(d, key, loginOrCard = 'login') {\r

      \  let logins = loginOrCard == 'login' ? get_fake_bw_logins() :
      get_fake_bw_cards();\r

      \  let login = logins[key];\r

      \  let d4 = mDiv(d, { bg: 'white', fg: 'black', 'border-bottom':
      '1px dotted #ddd' });\r

      \  let d5 = mDiv(d4, { display: 'flex' });\r

      \  let dimg = mDiv(d5, { bg: 'white', fg: 'black' }, null, `<img
      src='../rechnung/images/${login.logo}' height=14
      style=\"margin:8px\">`);\r

      \  let dtext = mDiv(d5, { cursor: 'pointer' }, null,
      `<div>${key}</div><div
      style=\"font-size:12px;color:gray\">${login.sub}</div>`);\r

      \  dtext.onclick = () => onclick_bw_symbol(key)\r

      \  let d6 = mDiv(d4, { display: 'flex', padding: 2 });\r

      \  let disyms = {\r

      \    bwtext: { postfix: 'userid', matop: 2, maright: 0, mabottom: 0,
      maleft: 0, sz: 27 },\r

      \    bwcross: { postfix: 'cross', matop: 2, maright: 0, mabottom: 0,
      maleft: -13, sz: 25 },\r

      \    bwkey: { postfix: 'pwd', matop: 0, maright: 0, mabottom: 0,
      maleft: -12, sz: 27 },\r

      \    bwclock: { postfix: 'clock', matop: 0, maright: 0, mabottom: 0,
      maleft: 0, sz: 25 },\r

      \  }\r

      \  for (const k of ['bwtext', 'bwcross', 'bwkey']) { \r

      \    let o = disyms[k];\r

      \    let [filename, styles] = [k, disyms[k]];\r

      \    let path = `../rechnung/images/${filename}.png`;\r

      \    let [sz, ma] = [styles.sz, `${styles.matop}px
      ${styles.maright}px ${styles.mabottom}px ${styles.maleft}px`];\r

      \    let img = mDiv(d6, { paright: 16 }, null, `<img src='${path}'
      height=${sz} style=\"margin:${ma}\">`);\r

      \    if (k != 'bwcross') {\r

      \      mStyle(img, { cursor: 'pointer' });\r

      \      img.onclick = () => onclick_bw_symbol(key, o.postfix);\r

      \    }\r

      \  }\r

      \  mFlexSpacebetween(d4);\r

      \  return d4;\r

      }\r\n"
    sig: function bw_list_entry(d, key, loginOrCard = 'login'){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  bw_widget_popup:
    name: bw_widget_popup
    code: "function bw_widget_popup(key = 'boa') {\r

      \  let dpop = mBy('dPopup');\r

      \  show(dpop); mClear(dpop)\r

      \  mStyle(dpop, { top: 50, right: 10, border: 'silver' });\r

      \  let prefix = key;\r

      \  let douter = mDiv(dpop, { wmin: 200, bg: 'white', fg: 'black',
      border: '1px single #ccc' }, 'dBw');\r

      \  let d2 = mDiv(douter, { padding: 0, h: 30 }, null, `<img
      width='100%' src='../rechnung/images/bwsearch.jpg'>`);\r

      \  let d = mDiv(douter, { padding: 0, hmax: 600, 'overflow-y':
      'auto' });\r

      \  let dtb = mDiv(douter, { padding: 8 }); mFlexEvenly(dtb);\r

      \  let dibuttons = { tab: { top: 2, left: 0 }, vault: { top: 1,
      left: 3 }, send: { top: 2, left: 3 }, generator: { top: 2, left: 1 },
      settings: { top: 4, left: 2 } };\r

      \  for (const bname in dibuttons) {\r

      \    let path = `../rechnung/images/bw${bname}.jpg`;\r

      \    let db = mDiv(dtb, { w: 60 }); mCenterFlex(db);\r

      \    let img = mDiv(db, { h: 36, w: 36, bg: 'white', position:
      'relative' }, null, `<img
      style=\"position:absolute;top:${dibuttons[bname].top}px;left:${dibuttons[\
      bname].left}px\" src='${path}'>`);\r

      \    mLinebreak(db);\r

      \    let txt = mDiv(db, { fz: 12 }, null, capitalize(bname));\r

      \  }\r

      \  let d3 = mDiv(d, { bg: '#eee', fg: 'dimgray', padding: 8, matop:
      8 }, null, 'LOGINS');\r

      \  bw_list_entry(d, key);\r

      \  let d7 = mDiv(d, { bg: '#eee', fg: 'dimgray', padding: 7 }, null,
      'CARDS');\r

      \  let data = get_fake_bw_cards();\r

      \  let color_alt = '#F9F7F4';\r

      \  let i = 0;\r

      \  for (const k in data) {\r

      \    let dentry = bw_list_entry(d, k, 'cards');\r

      \  }\r

      }\r\n"
    sig: function bw_widget_popup(key = 'boa'){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  close_popup:
    name: close_popup
    code: "function close_popup() {\r

      \  let dpop = mBy('dPopup');\r

      \  hide(dpop);\r

      }\r\n"
    sig: function close_popup(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  enterOnlineIDFormSubmit:
    name: enterOnlineIDFormSubmit
    code: "function enterOnlineIDFormSubmit() {\r

      \  var form = document.getElementById(\"EnterOnlineIDForm\");\r

      \  let userid = mBy(\"enterID-input\");\r

      \  let pwd = mBy('tlpvt-passcode-input');\r

      \  onclick_submit_boa_login();\r

      }\r\n"
    sig: function enterOnlineIDFormSubmit(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  fillout_boa_login:
    name: fillout_boa_login
    code: "function fillout_boa_login() {\r

      \  let data = DIBOA.bw_info.boa;\r

      \  let elem_userid = get_boa_userid_input();\r

      \  let elem_pwd = get_boa_pwd_input();\r

      \  elem_userid.value = data.userid;\r

      \  elem_pwd.value = data.pwd;\r

      }\r\n"
    sig: function fillout_boa_login(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  generate_statement:
    name: generate_statement
    code: "function generate_statement(dParent, boacc, brand) {\r

      \  let brand_colors = {\r

      \    usbank: 'navy', prime: 'skyblue', citibank: 'silver',
      wellsfargo: RED, BofA_rgb: 'navy', chase_bank: BLUE,\r

      \    comcast: 'orange', oasis: GREEN, PSE: 'gold', redmond: 'grey'\r

      \  };\r

      \  let date = new Date();\r

      \  let acc = { index: boacc.index, creditline: rNumber(0, 10) * 100,
      holder: 'Gunter Yang Lee', num: 242948572348, due:
      rDate(addWeekToDate(date, 4), addWeekToDate(date, 2)) }\r

      \  let nums = { prevbalance: rNumber(0, 100), payments: rNumber(100,
      1000) + rNumber(0, 100) / 100, fees: rNumber(0, 100) };\r

      \  nums.balance = nums.prevbalance + nums.payments + nums.fees;\r

      \  acc.cashadvance = acc.creditline / 4;\r

      \  acc.num = acc.num.toString();\r

      \  acc.num = acc.num.substring(0, acc.num.length - 4) +
      boacc.sub.substring(1);\r

      \  acc.num = parseInt(acc.num);\r

      \  let [color, fromdate, todate] = [valf(brand_colors[brand],
      'random'), addWeekToDate(date, -5), addWeekToDate(date, -1)];\r

      \  //#region header\r

      \  let d;\r

      \  if (nundef(dParent)) {\r

      \    let dpop = mBy('dPopup'); show(dpop); mClear(dpop);
      mStyle(dpop, { top: 50, right: 10 });\r

      \    d = mDiv(dpop, { padding: 10, border: '1px solid #ddd', bg:
      'white', fg: 'black' });\r

      \  } else {\r

      \    mStyle(dParent, { 'justify-content': 'start' });\r

      \    d = mDiv(dParent);\r

      \  }\r

      \  mStyle(d, { bg: 'white', position: 'fixed', top: 50, right: 0,
      padding: 10 });\r

      \  let d1 = mDiv(d, { bg: color, h: 5, w: '100%' }); \r

      \  let dheader = mDiv(d, { fz: 12 }); \r

      \  let [dl, dr] = mColFlex(dheader, [1, 3]); \r

      \  let logo = createImage(`${brand}.png`, { hmax: 90, wmax: 300
      });\r

      \  let dl1 = mDiv(dl, { hmax: 90, wmax: 400 }); mAppend(dl1, logo);
      \r

      \  let dr1 = mDiv(dr, { align: 'right', paright: 10 });\r

      \  mDiv(dr1, {}, null, `Account Holder: ${acc.holder}`);\r

      \  mDiv(dr1, {}, null, `Account Number: ${acc.num}`);\r

      \  mDiv(dr1, {}, null, `Statement Period: ${date2locale(fromdate)} -
      ${date2locale(todate)}`);\r

      \  mDiv(dr1, {}, null, `Due Date: ${date2locale(acc.due)}`);\r

      \  mDiv(d, {}, null, '<br>');\r

      \  //#endregion\r

      \  let dmain = mDiv(d, { wmax: 600 }); \r

      \  let [dlm, drm] = mColFlex(dmain, [1, 1.25]); \r

      \  let dlm1 = mDiv(dlm, { hmargin: 10, }, null, `ACCOUNT
      SUMMARY`);\r

      \  let dsum = mDiv(dlm, { hmargin: 10, rounding: 12, padding: 10,
      border: '1px solid #ccc', bg: 'white', fg: 'black' });\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Previous Balance:`,
      `${format_currency(nums.prevbalance)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Payments and Credits:`,
      `${format_currency(nums.payments)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Purchases:`,
      `${format_currency(nums.payments)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Balance Transfers:`,
      `${format_currency(0)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Cash Advances:`,
      `${format_currency(0)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Fees Charged:`,
      `${format_currency(nums.fees)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Interest Charged:`,
      `${format_currency(0)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`New Balance:`,
      `${format_currency(nums.balance)}`]);\r

      \  mDiv(dsum, { fz: 9, align: 'center' }, null, 'see interest charge
      calculation section following the Transactions section for detailed APR
      information');\r

      \  mLine(dsum, { fz: 10, align: 'center' });\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Credit Line:`,
      `${format_currency(acc.creditline)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Credit Line Available:`,
      `${format_currency(acc.creditline)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Cash Advance Credit Line:`,
      `${format_currency(acc.cashadvance)}`]);\r

      \  mDivLR(dsum, { w: '100%' }, null, [`Cash Advance Credit Line
      Available:`, `${format_currency(acc.cashadvance)}`]);\r

      \  mDiv(dsum, {}, null, 'You may be able to avoid interest on
      purchases. See reverse for details');\r

      \  let drm1 = mDiv(drm, { hmargin: 10, }, null, `PAYMENT
      INFORMATION`);\r

      \  let dpay = mDiv(drm, { hmargin: 10, rounding: 12, padding: 10,
      border: '1px solid #ccc', bg: 'white', fg: 'black' });\r

      \  mDivLR(dpay, { w: '100%', weight: 'bold' }, null, [`New
      Balance:`, `${format_currency(nums.balance)}`]);\r

      \  mLine(dpay, { fz: 10, align: 'center' });\r

      \  mDivLR(dpay, { w: '100%' }, null, [`Minimum Payment Due:`,
      `${format_currency(nums.balance / 10)}`]);\r

      \  mDivLR(dpay, { w: '100%', weight: 'bold' }, null, [`Payment Due
      Date:`, `${date2locale(acc.due)}`]);\r

      \  mDiv(dpay, { fz: 9, matop: 10 }, null, '<b>Late Payment
      Warning:</b> If we do not receive your minimum payment by the date listed
      above, you may have to pay a fee of up to $10.00.');\r

      \  let drm2 = mDiv(drm, { matop: 10, hmargin: 10, }, null,
      `REWARDS`);\r

      \  let drewards = mDiv(drm, { hmargin: 10, rounding: 12, padding:
      10, border: '1px solid #ccc', bg: 'white', fg: 'black' });\r

      \  mDivLR(drewards, { w: '100%', weight: 'bold' }, null, [`Cashback
      Bonus*:`, `Anniversary Month`]);\r

      \  mDivLR(drewards, { w: '100%' }, null, [`Opening Balance:`,
      `${format_currency(0)}`]);\r

      \  mDivLR(drewards, { w: '100%' }, null, [`New Cashback Bonus this
      Period:`, `${format_currency(4.98)}`]);\r

      \  mDivLR(drewards, { w: '100%' }, null, [`Redeemed this Period:`,
      `${format_currency(0)}`]);\r

      \  mLine(drewards, { fz: 10, align: 'center' });\r

      \  mDivLR(drewards, { w: '100%', weight: 'bold' }, null, [`Cashback
      Bonus Balance:`, `${format_currency(4.98)}`]);\r

      \  mDiv(drewards, { fz: 10 }, null, `<b>to learn more log in to
      www.${brand}.com</b>`);\r

      \  mDiv(d, { matop: 25, maleft: 6 }, null,
      img_html('statement2.jpg'));\r

      \  mDiv(d, {}, null, '<br>');\r

      \  let dbla1 = mDiv(d, { hmargin: 10, rounding: 12, padding: 10,
      border: '1px solid #ccc', bg: 'white', fg: 'black' });\r

      \  mAppend(dbla1, createImage('statement1.jpg', {}));\r

      \  mAppend(d, createImage('statementfooter.jpg', {}));\r

      \  return { div: d, nums: nums, acc: acc, topay: nums.balance,
      brand: brand, boacc: boacc };\r

      }\r\n"
    sig: function generate_statement(dParent, boacc, brand){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  generate_skype_contacts:
    name: generate_skype_contacts
    code: "function generate_skype_contacts(n) {\r

      \  let date = new Date();\r

      \  let res = [{ num: `+${rNumber(11111, 99999)}`, date: date, color:
      rChoose([ORANGE, PURPLE, 'deepskyblue', 'hotpink']), msg: `<#>'BofA': DO
      NOT share this S...` }];\r

      \  for (let i = 1; i < n; i++) {\r

      \    date = rDate(date, new Date(2022, 1, 1));\r

      \    let istext = coin();\r

      \    let [num, msg] = istext ? [`+${rNumber(11111, 99999)}`,
      `<#>${rChoose(['BofA', 'Prudential'])}: DO NOT share this S...`]\r

      \      : [`+1425${rNumber(1111111, 9999999)}`, `Missed Call`];\r

      \    let c = { num: num, date: date, color: rChoose([ORANGE, PURPLE,
      'deepskyblue', 'hotpink']), msg: msg };\r

      \    res.push(c);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function generate_skype_contacts(n){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_fake_boa_data:
    name: get_fake_boa_data
    code: "function get_fake_boa_data() { if (nundef(DA.boadata)) DA.boadata =
      DIBOA.boa_data; return DA.boadata; }\r\n"
    sig: function get_fake_boa_data(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_fake_boa_data_list:
    name: get_fake_boa_data_list
    code: "function get_fake_boa_data_list() { if (nundef(DA.boadata)) DA.boadata =
      dict2list(DIBOA.boa_data, 'key'); return DA.boadata; }\r\n"
    sig: function get_fake_boa_data_list(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_fake_bw_cards:
    name: get_fake_bw_cards
    code: "function get_fake_bw_cards() {\r

      \  const cards = {\r

      \    'amazon': { sub: '*5555', logo: 'visa.png' },\r

      \    'amex': { sub: '*4554', logo: 'amex.png' },\r

      \    'becu': { sub: '*1331', logo: 'mastercard.png' },\r

      \    'becu other': { sub: '*7575', logo: 'mastercard.png' },\r

      \    'boa debit': { sub: '*8585', logo: 'visa.png' },\r

      \    'boa leprop': { sub: '*0898', logo: 'visa.png' },\r

      \    'costco': { sub: '*6565', logo: 'visa.png' },\r

      \    'disco': { sub: '*1324', logo: 'discover.png' },\r

      \    'fidel rewards': { sub: '*6456', logo: 'visa.png' },\r

      \    'flexper': { sub: '*9789', logo: 'visa.png' },\r

      \    'heritage': { sub: '*3131', logo: 'mastercard.png' },\r

      \    'premblue': { sub: '*0898', logo: 'visa.png' },\r

      \    'visa2': { sub: '*0797', logo: 'visa.png' },\r

      \    'zz credit': { sub: '*1432', logo: 'visa.png' },\r

      \  };\r

      \  return cards;\r

      }\r\n"
    sig: function get_fake_bw_cards(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_fake_bw_logins:
    name: get_fake_bw_logins
    code: "function get_fake_bw_logins() {\r

      \  const logins = {\r

      \    'bw': { link: '', sub: 'gilee144', p: '', acc: '*5555', logo:
      'bw.png' },\r

      \    'boa': { link: '', sub: 'gilee144', p: 'boa.png', acc: '*5555',
      logo: 'boa.png' },\r

      \    'authy': { link: '', sub: 'agfil22', p: 'authy.png', acc:
      '*5555', logo: 'authy.png' },\r

      \    'authenticator': { link: '', sub: 'amf234', p: '', acc:
      '*5555', logo: 'authenticator.png' },\r

      \    'skype': { link: '', sub: 'agile34', p: '', acc: '*5555', logo:
      'skype.png' },\r

      \    'onedrive': { link: '', sub: 'agand23', p: '', acc: '*5555',
      logo: 'onedrive.png' },\r

      \  }\r

      \  return logins;\r

      }\r\n"
    sig: function get_fake_bw_logins(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_boa_userid_input:
    name: get_boa_userid_input
    code: "function get_boa_userid_input() { return
      document.getElementById('enterID-input'); }\r\n"
    sig: function get_boa_userid_input(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_boa_pwd_input:
    name: get_boa_pwd_input
    code: "function get_boa_pwd_input() { return
      document.getElementById('tlpvt-passcode-input'); }\r\n"
    sig: function get_boa_pwd_input(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_boalogin_html:
    name: get_boalogin_html
    code: "function get_boalogin_html() {\r

      \  let html = `\r

      \    <div id=\"dBoaLogin\" class=\"fsd-layout
      fsd-2c-700lt-layout\">\r

      \      <div class=\"fsd-border\">\r

      \        <div class=\"center-content\">\r

      \          <div class=\"columns\">\r

      \            <div class=\"flex-col lt-col\">\r

      \              <div class=\"online-id-vipaa-module\">\r

      \                <div class=\"enter-skin phoenix\">\r

      \                  <form\r

      \                    class=\"simple-form collector-form-marker\"\r

      \                    name=\"enter-online-id-form\"\r

      \                    id=\"EnterOnlineIDForm\"\r

      \                    method=\"\"\r

      \                    action=\"javascript:onclick_submit_boa_login();\
      \"\r

      \                    autocomplete=\"off\"\r

      \                    novalidate=\"novalidate\"\r

      \                  >\r

      \                    <div class=\"online-id-section\">\r

      \                      <label for=\"enterID-input\">\r

      \                        User ID\r

      \                        <span class=\"ada-hidden\">Must be at least
      6 characters long</span>\r

      \                      </label>\r

      \                      <input\r

      \                        type=\"text\"\r

      \                        id=\"enterID-input\"\r

      \                        name=\"dummy-onlineId\"\r

      \                        maxlength=\"32\"\r

      \                        value=\"\"\r

      \                        autocomplete=\"off\"\r

      \                        class=\"cs-enterID-input\"\r

      \                        autocapitalize=\"none\"\r

      \                        autocorrect=\"off\"\r

      \                        spellcheck=\"false\"\r

      \                      />\r

      \                      <div class=\"remember-info\">\r

      \                        <input type=\"checkbox\" id=\"remID\"
      name=\"saveMyID\" class=\"cs-remID\" autocapitalize=\"none\"
      autocorrect=\"off\" spellcheck=\"false\" />\r

      \                        <label for=\"remID\">Save this User
      ID</label>\r

      \                        <a\r

      \                          class=\"boa-dialog force-xlarge
      info-layer-help-fsd dotted\"\r

      \                          href=\"javascript:void(0);\"\r

      \                          name=\"online-id-help\"\r

      \                          rel=\"help-content\"\r

      \                          title=\"Help\"\r

      \                        >\r

      \                          <span class=\"ada-hidden\">Online ID
      Help</span>\r

      \                          <span class=\"boa-ada-text
      ada-hidden\">&nbsp;layer</span>\r

      \                        </a>\r

      \                        <div class=\"clearboth\"></div>\r

      \                      </div>\r

      \                    </div>\r

      \                    <input\r

      \                      aria-hidden=\"true\"\r

      \                      type=\"password\"\r

      \                      class=\"tl-private cs-input\"\r

      \                      name=\"new-passcode\"\r

      \                      maxlength=\"20\"\r

      \                      style=\"display: none\"\r

      \                      value=\"\"\r

      \                      autocapitalize=\"none\"\r

      \                      autocorrect=\"off\"\r

      \                      spellcheck=\"false\"\r

      \                    />\r

      \                    <label for=\"tlpvt-passcode-input\"
      class=\"mtop-15\">\r

      \                      Password\r

      \                      <span class=\"ada-hidden\">is unavailable.
      Please enter atleast 6 characters of online id to enable Passcode</span>\r

      \                    </label>\r

      \                    <div class=\"TL_NPI_Pass\">\r

      \                      <input\r

      \                        type=\"password\"\r

      \                        class=\"tl-private fl-lt
      cs-tlpvt-passcode-input\"\r

      \                        id=\"tlpvt-passcode-input\"\r

      \                        name=\"dummy-passcode\"\r

      \                        maxlength=\"20\"\r

      \                        value=\"\"\r

      \                        autocomplete=\"off\"\r

      \                        autocapitalize=\"none\"\r

      \                        autocorrect=\"off\"\r

      \                        spellcheck=\"false\"\r

      \                      />\r

      \                    </div>\r

      \                    <a href=\"#\" class=\"fl-lt forgot-passcode\"
      name=\"forgot-your-passcode\">Forgot your Password?</a>\r

      \                    <div class=\"clearboth\"></div>\r

      \                    <a\r

      \                      href=\"javascript:void(0);\"\r

      \                      onclick=\"enterOnlineIDFormSubmit();\"\r

      \                      title=\"Log In\"\r

      \                      class=\"btn-bofa btn-bofa-blue btn-bofa-small
      behbio btn-bofa-noRight\"\r

      \                      name=\"enter-online-id-submit\"\r

      \                    >\r

      \                      <span class=\"btn-bofa-blue-lock\">Log
      In</span>\r

      \                    </a>\r

      \                    <a href=\"javascript:void(0);\"
      id=\"signin-mobile-app\" name=\"signin-mobile-app\"
      class=\"displayNone\">Log In with mobile app</a>\r

      \                    <a href=\"javascript:void(0);\"
      id=\"signin-with-passcode\" name=\"signin-with-passcode\"
      class=\"hidden\">Log In with Password</a>\r

      \                    <a href=\"javascript:void(0);\"
      id=\"signin-with-windows-hello\" name=\"signin-with-windows-hello\"
      class=\"bold hidden\">\r

      \                      Log in with Windows Hello\r

      \                    </a>\r

      \                    <div class=\"digital-id-notify phoenix hidden\"
      id=\"digital-id-success-message\">\r

      \                      <div class=\"digital-id-head\">Check your
      mobile device</div>\r

      \                      <span class=\"circle-animation\">\r

      \                        <div
      class=\"circle-inline\">Loading</div>\r

      \                        <div class=\"loading-circle
      circle-inline\">\r

      \                          <div class=\"circle-bounce1\"></div>\r

      \                          <div class=\"circle-bounce2\"></div>\r

      \                          <div class=\"circle-bounce3\"></div>\r

      \                        </div>\r

      \                      </span>\r

      \                      <p class=\"digital-id-msg\">\r

      \                        We sent a notification to your registered
      device. Verify your identity in the app now to log in to Online Banking.\r

      \                      </p>\r

      \                      <a href=\"javascript:void(0);\"
      class=\"digital-id-link send-notification-again\">Send notification
      again</a>\r

      \                      <a href=\"javascript:void(0);\"
      class=\"digital-id-link sign-in-with-passcode-instead\">Log In with
      Password instead</a>\r

      \                    </div>\r

      \                    <div class=\"digital-id-notify phoenix hidden\"
      id=\"digital-id-general-error\">\r

      \                      <div class=\"digital-id-head\">Check your
      mobile device</div>\r

      \                      <p class=\"digital-id-msg\">\r

      \                        If you're enrolled in this security
      feature, we sent a notification to your registered device. Verify your
      identity in the app now to\r

      \                        log in to Online Banking.\r

      \                      </p>\r

      \                      <a href=\"javascript:void(0);\"
      class=\"digital-id-link send-notification-again\">Send notification
      again</a>\r

      \                      <a href=\"javascript:void(0);\"
      class=\"digital-id-link sign-in-with-passcode-instead\">Log In with
      Password instead</a>\r

      \                    </div>\r

      \                    <div class=\"digital-id-notify phoenix hidden\"
      id=\"digital-id-max-error\">\r

      \                      <div class=\"digital-id-head\">Check your
      mobile device</div>\r

      \                      <p class=\"digital-id-msg\">We can't identify
      you at this time. Please use your User ID/Password to log in.</p>\r

      \                      <a href=\"javascript:void(0);\"
      class=\"digital-id-link sign-in-with-passcode-instead\">Log In with
      Password instead</a>\r

      \                    </div>\r

      \                    <div class=\"clearboth\"></div>\r

      \                    <input type=\"hidden\" name=\"_ia\"
      id=\"_iaID\" class=\"cs-_iaID\" autocapitalize=\"none\"
      autocorrect=\"off\" spellcheck=\"false\" />\r

      \                    <input\r

      \                      type=\"hidden\"\r

      \                      name=\"_u2support\"\r

      \                      id=\"u2supportID\"\r

      \                      value=\"1\"\r

      \                      class=\"cs-u2supportID\"\r

      \                      autocapitalize=\"none\"\r

      \                      autocorrect=\"off\"\r

      \                      spellcheck=\"false\"\r

      \                    />\r

      \                    <input\r

      \                      type=\"hidden\"\r

      \                      name=\"webAuthAPI\"\r

      \                      id=\"webAuthAPIID\"\r

      \                      value=\"true\"\r

      \                      class=\"cs-webAuthAPIID\"\r

      \                      autocapitalize=\"none\"\r

      \                      autocorrect=\"off\"\r

      \                      spellcheck=\"false\"\r

      \                    />\r

      \                  </form>\r

      \                  <!-- #region nach form -->\r

      \                  <div id=\"fpContainer\" class=\"\" style=\"width:
      50%\"></div>\r

      \                  <!-- Mobile CTA: Borneo version of 'Get the app'
      widget on the signOnV2 page -->\r

      \                  <!-- Normal Scenario -->\r

      \                  <div class=\"mobile-cta-section
      vertical-dotted-line fl-rt\">\r

      \                    <p class=\"cnx-regular title enroll-color-gray
      mbtm-10\">Stay connected with our app</p>\r

      \                    <img height=\"208\" width=\"149\"
      src=\"../rechnung/images/mobile_llama.png\" alt=\"Mobile banking Llama\"
      class=\"fl-lt\" />\r

      \                    <div class=\"get-app-content-section\">\r

      \                      <div class=\"cnx-regular title
      enroll-color-gray mcta-bubble\">Secure, convenient banking anytime</div>\r

      \                      <a\r

      \                        id=\"choose-device-get-the-app\"\r

      \                        name=\"choose-device-get-the-app\"\r

      \                        class=\"choose-device-get-the-app-modal
      btn-bofa btn-bofa-red btn-bofa-noRight cnx-regular\"\r

      \                        href=\"javascript:void(0);\"\r

      \                        rel=\"mobile-app-download-choose-device\"\r

      \                      >\r

      \                        <span>Get the app</span>\r

      \                        <span class=\"ada-hidden\">&nbsp; link
      opens a new info modal layer</span>\r

      \                      </a>\r

      \                    </div>\r

      \                  </div>\r

      \                  <!-- #endregion -->\r

      \                </div>\r

      \              </div>\r

      \              <!-- #region body rest -->\r

      \              <div class=\"modal-mobile-module hide\">\r

      \                <div class=\"get-app-skin aps-mobile-products\">\r

      \                  <h3>{title}</h3>\r

      \                  <div class=\"content-wrapper three-col\">\r

      \                    <div class=\"{storeLogo}\">\r

      \                      <div class=\"column app-box\">\r

      \                        <h4 class=\"sprite sprite-I5 sprited\">\r

      \                          Download directly to your mobile
      device.\r

      \                          <div class=\"spr\"></div>\r

      \                        </h4>\r

      \                        <a\r

      \                          class=\"sprite store-icon {storeLogo}
      sprited\"\r

      \                          name=\"{storeName}\"\r

      \                          href=\"#\"\r

      \                          id=\"{storeId}\"\r

      \                          target=\"_blank\"\r

      \                        >\r

      \                          <span
      class=\"ada-hidden\">{storeLinkText}</span>\r

      \                          <div class=\"spr\"></div>\r

      \                        </a>\r

      \                        <p class=\"{notice}\">{noticeText}</p>\r

      \                      </div>\r

      \                      <div class=\"column comm-box
      {text}{email}\">\r

      \                        <h4 class=\"sprite sprite-J5 {text}
      sprited\">\r

      \                          We'll text you a link to download the
      app.\r

      \                          <div class=\"spr\"></div>\r

      \                        </h4>\r

      \                        <h4 class=\"sprite sprite-L5 row-2 {email}
      sprited\">\r

      \                          We'll email you a link to download the
      app.\r

      \                          <div class=\"spr\"></div>\r

      \                        </h4>\r

      \                        <form action=\"\"
      id=\"mobile_app_download_url\">\r

      \                          <div id=\"field-level-error\"
      role=\"alert\"><span class=\"ada-hidden\"></span></div>\r

      \                          <div class=\"{text}\">\r

      \                            <label\r

      \                              class=\"ada-hidden\"\r

      \                              for=\"tlpvt-mob_app_download_phone_n\
      um\"\r

      \                              name=\"mobile_app_download_phone_pro\
      mpt\"\r

      \                              id=\"mobile_app_download_phone_prompt\
      \"\r

      \                            >\r

      \                              {placeholderText}\r

      \                            </label>\r

      \                            <input\r

      \                              type=\"text\"\r

      \                              name=\"mobile_app_download_phone_num\
      ber\"\r

      \                              id=\"tlpvt-mob_app_download_phone_num\
      \"\r

      \                              class=\"phone-input {text} tl-private
      cs-tlpvt-mob_app_download_phone_num\"\r

      \                              placeholder=\"{placeholderText}\"\r

      \                              autocapitalize=\"none\"\r

      \                              autocorrect=\"off\"\r

      \                              spellcheck=\"false\"\r

      \                            />\r

      \                          </div>\r

      \                          <div class=\"{email}\">\r

      \                            <label\r

      \                              class=\"ada-hidden\"\r

      \                              for=\"tlpvt-mob_app_download_email_id\
      \"\r

      \                              name=\"mobile_app_download_email_pro\
      mpt\"\r

      \                              id=\"mobile_app_download_email_prompt\
      \"\r

      \                            >\r

      \                              {emailPlaceholderText}\r

      \                            </label>\r

      \                            <input\r

      \                              type=\"text\"\r

      \                              name=\"mobile_app_download_email_id\"\
      \r

      \                              id=\"tlpvt-mob_app_download_email_id\
      \"\r

      \                              class=\"email-input {email}
      tl-private cs-tlpvt-mob_app_download_email_id\"\r

      \                              placeholder=\"{emailPlaceholderText}\
      \"\r

      \                              autocapitalize=\"none\"\r

      \                              autocorrect=\"off\"\r

      \                              spellcheck=\"false\"\r

      \                            />\r

      \                          </div>\r

      \                          <a\r

      \                            href=\"javascript:void(0);\"\r

      \                            name=\"anc-send-email-button\"\r

      \                            class=\"btn-bofa btn-bofa-small
      btn-bofa-noRight\"\r

      \                            id=\"mobile_app_download_send_button\"\
      \r

      \                            onclick=\"onclick_button_line_844()\"\r

      \                          >\r

      \                            Send\r

      \                          </a>\r

      \                          <div class=\"clearboth\"></div>\r

      \                          <p class=\"{text}\">\r

      \                            By providing your mobile number you are
      consenting to receive a text message. Text message fees may apply from
      your carrier. Text\r

      \                            messages may be transmitted
      automatically.\r

      \                          </p>\r

      \                        </form>\r

      \                      </div>\r

      \                      <div class=\"column info-box\">\r

      \                        <h4 class=\"sprite sprite-K5 sprited\">\r

      \                          Visit bankofamerica.com in your mobile
      web browser for a link to download the app.\r

      \                          <div class=\"spr\"></div>\r

      \                        </h4>\r

      \                      </div>\r

      \                    </div>\r

      \                    <div class=\"other-device-info
      {deviceStatus}\">\r

      \                      <div>\r

      \                        <p>Our mobile app is not available for all
      devices</p>\r

      \                        <a\r

      \                          href=\"#\"\r

      \                          class=\"style-link guillemet-right\"\r

      \                          name=\"anc_learn_more_about_phone_banking\
      \"\r

      \                        >\r

      \                          Learn about your Banking by Phone
      options&nbsp;\r

      \                          <span class=\"guillemet ls-n1 f-11 ls-n2
      guillement-set\">��</span>\r

      \                        </a>\r

      \                      </div>\r

      \                    </div>\r

      \                    <div class=\"confirmation-screen hide\">\r

      \                      <div class=\"inline-ack-msg sprite sprite-D7
      sprited\">\r

      \                        <span class=\"ada-hidden\"></span>\r

      \                        <span class=\"message\"></span>\r

      \                        <span id=\"inputHolder\"
      class=\"TL_NPI_L1\"></span>\r

      \                        <div class=\"spr\"></div>\r

      \                      </div>\r

      \                      <div class=\"button-wrapper\">\r

      \                        <a href=\"javascript:;\" class=\"btn-bofa
      btn-bofa-blue btn-bofa-small\" name=\"anc-close-button\"
      id=\"confirmModalCloseButton\">Close</a>\r

      \                        <a href=\"javascript:;\" class=\"btn-bofa
      btn-bofa-small btn-bofa-noRight\" name=\"anc-send-another-link\"
      id=\"confirmModalSendAnotherLink\">\r

      \                          Send another link\r

      \                        </a>\r

      \                      </div>\r

      \                    </div>\r

      \                    <div class=\"processing hide\">\r

      \                      <span class=\"ada-hidden\">Please wait. Your
      request is being processed.</span>\r

      \                      <span
      class=\"modal-skin-processing-text\">Please wait...</span>\r

      \                    </div>\r

      \                    <div class=\"clearboth\"></div>\r

      \                  </div>\r

      \                </div>\r

      \              </div>\r

      \              <div id=\"mobile-app-download-flex-modal\"
      class=\"aps-mobile-products\"></div>\r

      \              <style type=\"text/css\">\r

      \                .aps-mobile-products .sprite .spr {\r

      \                  background-image:
      url('/content/images/ContextualSiteGraphics/Instructional/en_US/aps-mobil\
      e-products-icon-sprite-dev.png');\r

      \                  background-size: 700px 550px;\r

      \                }\r

      \              </style>\r

      \              <div class=\"mobile-app-download-module hide\"
      id=\"mobile-app-download-choose-device\">\r

      \                <div class=\"choose-device-modal-skin\">\r

      \                  <h3>Select your device</h3>\r

      \                  <div class=\"flex-modal-main-content\">\r

      \                    <p>Please select your device to continue:</p>\r

      \                    <label for=\"device-pulldown\"
      class=\"ada-hidden\">Select your device. Press TAB to continue after
      making selection.</label>\r

      \                    <select id=\"device-pulldown\"
      name=\"device-pulldown\" class=\"select-bofa\">\r

      \                      <option value=\"Select your device\">Select
      your device</option>\r

      \                      <option value=\"iPhone\">iPhone</option>\r

      \                      <option value=\"iPad\">iPad</option>\r

      \                      <option value=\"Android\">Android</option>\r

      \                      <option value=\"Other\">Other</option>\r

      \                    </select>\r

      \                    <div class=\"clearboth\"></div>\r

      \                    <a\r

      \                      href=\"javascript:void(0);\"\r

      \                      id=\"choose-device\"\r

      \                      class=\"btn-bofa btn-bofa-red btn-disabled
      get-app-modal-trigger btn-bofa-noRight\"\r

      \                      name=\"choose-device\"\r

      \                      rel=\"choose-device-modal\"\r

      \                    >\r

      \                      Continue\r

      \                      <span class=\"ada-hidden\">&nbsp; link opens
      a new info modal layer</span>\r

      \                    </a>\r

      \                  </div>\r

      \                </div>\r

      \              </div>\r

      \              <style type=\"text/css\">\r

      \                .aps-mobile-products .sprite-D5 > .spr {\r

      \                  width: 50px !important;\r

      \                  left: 25px !important;\r

      \                  top: -5px !important;\r

      \                }\r

      \                .aps-mobile-products .sprite-J8 > .spr {\r

      \                  height: 51px;\r

      \                  width: 50px !important;\r

      \                  background-position: -522px -410px !important;\r

      \                  left: 30px !important;\r

      \                }\r

      \                .aps-mobile-products .sprite-F5 > .spr {\r

      \                  width: 50px !important;\r

      \                  left: 25px !important;\r

      \                  top: -5px !important;\r

      \                }\r

      \              </style>\r

      \              <!-- #endregion body rest -->\r

      \            </div>\r

      \            <div class=\"flex-col rt-col\">\r

      \              <div class=\"side-well-vipaa-module\">\r

      \                <div class=\"fsd-ll-skin\">\r

      \                  <h2>Login help</h2>\r

      \                  <ul class=\"li-pbtm-15\">\r

      \                    <li>\r

      \                      <a class=\"arrow\" href=\"#\" name=\"Forgot
      ID/Password?\">Forgot ID/Password?</a>\r

      \                    </li>\r

      \                    <li>\r

      \                      <a class=\"arrow\" href=\"#\" name=\"Problem
      logging in?\">Problem logging in?</a>\r

      \                    </li>\r

      \                  </ul>\r

      \                </div>\r

      \                <div class=\"fsd-ll-skin\">\r

      \                  <h2>Not using Online Banking?</h2>\r

      \                  <ul class=\"li-pbtm-15\">\r

      \                    <li>\r

      \                      <a class=\"arrow\" href=\"#\"
      name=\"Enroll_now\">\r

      \                        Enroll now\r

      \                        <span class=\"ada-hidden\">for online
      Banking</span>\r

      \                      </a>\r

      \                    </li>\r

      \                    <li>\r

      \                      <a class=\"arrow\" href=\"#\"
      name=\"Learn_more_about_Online_Banking_dotcom\">\r

      \                        Learn more about Online Banking\r

      \                      </a>\r

      \                    </li>\r

      \                    <li>\r

      \                      <a class=\"arrow\" href=\"#\"
      name=\"Service_Agreement_dotcom\">\r

      \                        Service Agreement\r

      \                      </a>\r

      \                    </li>\r

      \                  </ul>\r

      \                </div>\r

      \              </div>\r

      \            </div>\r

      \            <div class=\"clearboth\"></div>\r

      \          </div>\r

      \        </div>\r

      \      </div>\r

      \    </div>\r

      \  `;\r

      \  return mCreateFrom(html);\r

      }\r\n"
    sig: function get_boalogin_html(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_boa_footer1:
    name: get_boa_footer1
    code: "function get_boa_footer1() {\r

      \  return mCreateFrom(img_html('boa_footer.jpg', fulldim =
      'width'));\r

      }\r\n"
    sig: function get_boa_footer1(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_boa_footer2:
    name: get_boa_footer2
    code: "function get_boa_footer2() {\r

      \  let d = mDiv(null, { matop: 25, padding: 10, box: true });\r

      \  mAppend(d, mCreateFrom(img_html('boa_footer2.jpg', fulldim =
      'width')));\r

      \  return d;\r

      }\r\n"
    sig: function get_boa_footer2(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_header_top:
    name: get_header_top
    code: "function get_header_top(nebenLogo, links) {\r

      \  let html = `\r

      \    <div class=\"header-module\">\r

      \      <div class=\"fsd-secure-esp-skin\">\r

      \        <img height=\"28\" width=\"230\" alt=\"Bank of America\"
      src=\"../rechnung/images/BofA_rgb.png\" />\r

      \        <div class=\"page-type cnx-regular\">${nebenLogo}</div>\r

      \        <div class=\"right-links\">\r

      \          <div class=\"secure-area\">Secure Area</div>\r

      \          <div class=\"clearboth\"></div>\r

      \        </div>\r

      \        <div class=\"clearboth\"></div>\r

      \      </div>\r

      \    </div>\r

      \  `;\r

      \  return mCreateFrom(html);\r

      }\r\n"
    sig: function get_header_top(nebenLogo, links){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_red_header:
    name: get_red_header
    code: "function get_red_header(title, show_login_button = false) {\r

      \  let html = `\r

      \    <div class=\"page-title-module h-100\" id=\"skip-to-h1\">\r

      \      <div class=\"red-grad-bar-skin sup-ie\"
      style=\"display:flex;align-items:center;justify-content:space-between\">\r

      \        <h1 id=\"dRedTitle\"
      class=\"cnx-regular\">${title}</h1>`;\r

      \  if (show_login_button) {\r

      \    html += `\r

      \      <div class=\"title-button\">\r

      \        <a id=\"bLoginToOnline\"
      href=\"javascript:onclick_bigredloginbutton()\" class=\"spa-btn
      spa-btn--small spa-btn--white-border\">Log in to Online Banking</a>\r

      \      </div>\r

      \            `;\r

      \  }\r

      \  html += `\r

      \      </div>\r

      \    </div>\r

      \  `;\r

      \  return mCreateFrom(html);\r

      }\r\n"
    sig: function get_red_header(title, show_login_button = false){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_boa_start_content:
    name: get_boa_start_content
    code: "function get_boa_start_content() {\r

      \  let img = `<img src='../rechnung/images/boa_start_pic.JPG'
      width='100%'>`;\r

      \  return mCreateFrom(img);\r

      }\r\n"
    sig: function get_boa_start_content(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_make_payments_button:
    name: get_make_payments_button
    code: "function get_make_payments_button() {\r

      \  let html = `\r

      \    <a\r

      \      href=\"javascript:void(0);\"\r

      \      onclick=\"make_payments();\"\r

      \      class=\"btn-bofa btn-bofa-blue btn-bofa-small behbio
      btn-bofa-noRight\"\r

      \      name=\"make-payments-submit\"\r

      \      >\r

      \      <span class=\"btn-bofa  btn-bofa-blue-lock\">Make
      Payments</span>\r

      \    </a>\r

      \  `;\r

      }\r\n"
    sig: function get_make_payments_button(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_skype_expanded_message:
    name: get_skype_expanded_message
    code: "function get_skype_expanded_message(msg) {\r

      \  if (msg[0] == 'M') { return msg; }\r

      \  return msg.slice(0, msg.length - 4) + `ign In code. We will NEVER
      call you or text you for it. Code ${rNumber(111111, 999999)}. Reply HELP
      if you didn't request it. `;\r

      }\r\n"
    sig: function get_skype_expanded_message(msg){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_skype_phone_icon:
    name: get_skype_phone_icon
    code: "function get_skype_phone_icon(color) {\r

      \  let html = `\r

      \  <svg width=\"20\" height=\"20\"
      xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"
      fill=\"#0090B8\" gradientcolor1=\"#0090B8\"
      gradientcolor2=\"#0090B8\"><path d=\"M14.75 13.666a2.75 2.75 0
      00-2.745-2.745 2.75 2.75 0 00-2.744 2.745 2.75 2.75 0 002.744 2.744 2.75
      2.75 0 002.744-2.744zm-4.117 0c0-.761.622-1.373 1.372-1.373.75 0 1.372.612
      1.372 1.373 0 .75-.621 1.372-1.372 1.372-.75
      0-1.372-.622-1.372-1.372zm7.547-.466a.69.69 0 00-.686.686v4.121a.69.69 0
      01-.686.686H7.203a.69.69 0 01-.686-.686v-4.121a.69.69 0 00-.686-.686.69.69
      0 00-.686.686v4.121c0 1.136.922 2.058 2.058 2.058h9.605a2.059 2.059 0
      002.058-2.058v-4.121a.69.69 0 00-.686-.686z\"></path><path d=\"M12
      3.6c3.998-.005 6.703 1.53 8.585 3.192.792.699 1.154 1.75.966
      2.736l-.19.995c-.177.932-1.048 1.558-2.036
      1.463l-1.965-.19c-.856-.082-1.491-.708-1.76-1.596-.365-1.206-.6-2.1-.6-2.\
      1-.897-.368-1.784-.6-3-.6s-2.085.258-3 .6c0 0-.245.895-.6
      2.1-.237.805-.605 1.508-1.444
      1.592l-1.953.197c-.975.098-1.91-.522-2.187-1.45l-.297-.996c-.296-.99-.032\
      -2.033.693-2.736C4.922 5.147 8.008 3.605 12 3.6zm4.17
      4.232l.03.114.119.43c.103.367.25.884.43
      1.476.163.541.466.725.726.75l1.965.19c.415.04.69-.213.743-.493l.19-.995c.\
      105-.557-.097-1.185-.582-1.613C18.08 6.182 15.648 4.795 12
      4.8c-3.69.005-6.474 1.43-7.953 2.868-.395.383-.55.957-.38
      1.532l.298.995c.11.368.505.641.917.6l1.954-.197a.156.156 0
      00.064-.015.231.231 0 00.06-.06c.084-.106.183-.307.288-.662a138.653
      138.653 0 00.55-1.923l.033-.116c.123-.44.55-.747.748-.846.983-.368
      2.003-.676 3.42-.676 1.398 0 2.44.273
      3.455.69.182.075.579.341.706.805l.002.009.007.028z\"></path></svg>\r

      \  `;\r

      \  html = `\r

      \    <div role=\"none\" style=\"position: relative; display: flex;
      flex-direction: row; flex-grow: 0; flex-shrink: 0; overflow: hidden;
      align-items: center; background: linear-gradient(135deg, rgb(240, 252,
      255), rgb(199, 238, 255)) rgb(0, 120, 212); width: 40px; height: 40px;
      border-radius: 20px; justify-content: center;\"><div role=\"none\"
      aria-hidden=\"true\" style=\"position: relative; display: flex;
      flex-direction: column; flex-grow: 0; flex-shrink: 0; overflow: hidden;
      align-items: stretch; background-color: rgba(0, 0, 0, 0);\"><svg
      width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\"
      viewBox=\"0 0 24 24\" fill=\"#0090B8\" gradientcolor1=\"#0090B8\"
      gradientcolor2=\"#0090B8\"><path d=\"M14.75 13.666a2.75 2.75 0
      00-2.745-2.745 2.75 2.75 0 00-2.744 2.745 2.75 2.75 0 002.744 2.744 2.75
      2.75 0 002.744-2.744zm-4.117 0c0-.761.622-1.373 1.372-1.373.75 0 1.372.612
      1.372 1.373 0 .75-.621 1.372-1.372 1.372-.75
      0-1.372-.622-1.372-1.372zm7.547-.466a.69.69 0 00-.686.686v4.121a.69.69 0
      01-.686.686H7.203a.69.69 0 01-.686-.686v-4.121a.69.69 0 00-.686-.686.69.69
      0 00-.686.686v4.121c0 1.136.922 2.058 2.058 2.058h9.605a2.059 2.059 0
      002.058-2.058v-4.121a.69.69 0 00-.686-.686z\"></path><path d=\"M12
      3.6c3.998-.005 6.703 1.53 8.585 3.192.792.699 1.154 1.75.966
      2.736l-.19.995c-.177.932-1.048 1.558-2.036
      1.463l-1.965-.19c-.856-.082-1.491-.708-1.76-1.596-.365-1.206-.6-2.1-.6-2.\
      1-.897-.368-1.784-.6-3-.6s-2.085.258-3 .6c0 0-.245.895-.6
      2.1-.237.805-.605 1.508-1.444
      1.592l-1.953.197c-.975.098-1.91-.522-2.187-1.45l-.297-.996c-.296-.99-.032\
      -2.033.693-2.736C4.922 5.147 8.008 3.605 12 3.6zm4.17
      4.232l.03.114.119.43c.103.367.25.884.43
      1.476.163.541.466.725.726.75l1.965.19c.415.04.69-.213.743-.493l.19-.995c.\
      105-.557-.097-1.185-.582-1.613C18.08 6.182 15.648 4.795 12
      4.8c-3.69.005-6.474 1.43-7.953 2.868-.395.383-.55.957-.38
      1.532l.298.995c.11.368.505.641.917.6l1.954-.197a.156.156 0
      00.064-.015.231.231 0 00.06-.06c.084-.106.183-.307.288-.662a138.653
      138.653 0 00.55-1.923l.033-.116c.123-.44.55-.747.748-.846.983-.368
      2.003-.676 3.42-.676 1.398 0 2.44.273
      3.455.69.182.075.579.341.706.805l.002.009.007.028z\"></path></svg></div><\
      /div>  \r

      \  `;\r

      \  html = `\r

      \    <div\r

      \      role=\"none\"\r

      \      style=\"\r

      \        position: relative;\r

      \        display: flex;\r

      \        flex-direction: row;\r

      \        flex-grow: 0;\r

      \        flex-shrink: 0;\r

      \        overflow: hidden;\r

      \        align-items: center;\r

      \        background: linear-gradient(135deg, white,
      ${colorLight(color, .5)}, ${colorLight(color, .25)});\r

      \        width: 40px;\r

      \        height: 40px;\r

      \        border-radius: 20px;\r

      \        justify-content: center;\r

      \      \"\r

      \    >\r

      \      <div\r

      \        role=\"none\"\r

      \        aria-hidden=\"true\"\r

      \        style=\"\r

      \          position: relative;\r

      \          display: flex;\r

      \          flex-direction: column;\r

      \          flex-grow: 0;\r

      \          flex-shrink: 0;\r

      \          overflow: hidden;\r

      \          align-items: stretch;\r

      \          background-color: rgba(0, 0, 0, 0);\r

      \        \"\r

      \      >\r

      \        <svg width=\"20\" height=\"20\"
      xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"
      fill=\"${color}\" gradientcolor1=\"${color}\"
      gradientcolor2=\"${color}\">\r

      \          <path\r

      \            d=\"M14.75 13.666a2.75 2.75 0 00-2.745-2.745 2.75 2.75
      0 00-2.744 2.745 2.75 2.75 0 002.744 2.744 2.75 2.75 0
      002.744-2.744zm-4.117 0c0-.761.622-1.373 1.372-1.373.75 0 1.372.612 1.372
      1.373 0 .75-.621 1.372-1.372 1.372-.75
      0-1.372-.622-1.372-1.372zm7.547-.466a.69.69 0 00-.686.686v4.121a.69.69 0
      01-.686.686H7.203a.69.69 0 01-.686-.686v-4.121a.69.69 0 00-.686-.686.69.69
      0 00-.686.686v4.121c0 1.136.922 2.058 2.058 2.058h9.605a2.059 2.059 0
      002.058-2.058v-4.121a.69.69 0 00-.686-.686z\"\r

      \          ></path>\r

      \          <path\r

      \            d=\"M12 3.6c3.998-.005 6.703 1.53 8.585 3.192.792.699
      1.154 1.75.966 2.736l-.19.995c-.177.932-1.048 1.558-2.036
      1.463l-1.965-.19c-.856-.082-1.491-.708-1.76-1.596-.365-1.206-.6-2.1-.6-2.\
      1-.897-.368-1.784-.6-3-.6s-2.085.258-3 .6c0 0-.245.895-.6
      2.1-.237.805-.605 1.508-1.444
      1.592l-1.953.197c-.975.098-1.91-.522-2.187-1.45l-.297-.996c-.296-.99-.032\
      -2.033.693-2.736C4.922 5.147 8.008 3.605 12 3.6zm4.17
      4.232l.03.114.119.43c.103.367.25.884.43
      1.476.163.541.466.725.726.75l1.965.19c.415.04.69-.213.743-.493l.19-.995c.\
      105-.557-.097-1.185-.582-1.613C18.08 6.182 15.648 4.795 12
      4.8c-3.69.005-6.474 1.43-7.953 2.868-.395.383-.55.957-.38
      1.532l.298.995c.11.368.505.641.917.6l1.954-.197a.156.156 0
      00.064-.015.231.231 0 00.06-.06c.084-.106.183-.307.288-.662a138.653
      138.653 0 00.55-1.923l.033-.116c.123-.44.55-.747.748-.846.983-.368
      2.003-.676 3.42-.676 1.398 0 2.44.273
      3.455.69.182.075.579.341.706.805l.002.009.007.028z\"\r

      \          ></path>\r

      \        </svg>\r

      \      </div>\r

      \    </div>\r

      \  `;\r

      \  return mCreateFrom(html);\r

      }\r\n"
    sig: function get_skype_phone_icon(color){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_toolbar:
    name: get_toolbar
    code: "function get_toolbar(list) {\r

      \  if (nundef(list)) list = ['home', 'boa', 'bw', 'authenticator',
      'authy', 'onedrive', 'skype'];\r

      \  let d = mBy('dTop');\r

      \  mFlex(d);\r

      \  mStyle(d, { 'justify-content': 'space-between', padding: 10 });\r

      \  let dleft = mDiv(d, { display: 'flex', gap: 10 }, 'dTopLeft');
      let dright = mDiv(d, { display: 'flex', gap: 10 }, 'dTopRight');\r

      \  for (const k of list) {\r

      \    let o = DIBOA[k];\r

      \    if (nundef(o)) { console.log('missing toolbar item: ' + k);
      continue; }\r

      \    let d1 = o.align == 'left' ? dleft : dright;\r

      \    let dsym = mDiv(d1, {}, `tb${k}`, `<a href=\"javascript:${o.pop
      ? 'onclick_popup' : 'onclick_location'}('${k}')\"><img
      src=\"../rechnung/images/${o.img}\" height=\"30\"/></a>`);\r

      \    if (k == 'bw') {\r

      \      mStyle(dsym, { position: 'relative' });\r

      \      let elem = mCreateFrom(`<i class=\"fa fa-car\"></i>`);\r

      \      mAppend(dsym, elem);\r

      \      let offset = 6;\r

      \      mStyle(elem, { fg: 'transparent', fz: 10, position:
      'absolute', bottom: offset - 1, right: offset + 1 });\r

      \      if (!is_bw_loggedin()) toggle_bw_symbol(dsym);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function get_toolbar(list){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  is_bw_loggedin:
    name: is_bw_loggedin
    code: "function is_bw_loggedin() {\r

      \  let bw_state = S.bw_state; \r

      \  return bw_state == 'loggedin'; \r

      }\r\n"
    sig: function is_bw_loggedin(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  keyhandler:
    name: keyhandler
    code: "function keyhandler(ev) {\r

      \  if (ev.key == 'Enter') { } \r

      \  else if (ev.key == 'Escape') { close_popup(); } \r

      }\r\n"
    sig: function keyhandler(ev){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  make_payments_challenge_eval:
    name: make_payments_challenge_eval
    code: "function make_payments_challenge_eval(inp) {\r

      \  let val = inp.value;\r

      \  let solution = { amount: DA.bill.nums.balance, index:
      DA.bill.acc.index };\r

      \  let answer = { amount: Number(val.substring(1).trim()), index:
      Number(inp.id.substring(3)) };\r

      \  let correct = solution.amount.toFixed(2) ==
      answer.amount.toFixed(2) && solution.index == answer.index;\r

      \  show_eval_message(correct,null,correct ? onclick_home : null);\r

      }\r\n"
    sig: function make_payments_challenge_eval(inp){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_bill:
    name: onclick_bill
    code: "function onclick_bill() {\r

      \  let dParent = mBy('dBoaMain');\r

      \  if (dParent.children.length > 1) dParent.lastChild.remove();\r

      \  let acclist = get_fake_boa_data_list().filter(x => isdef(x['Last
      Payment']));\r

      \  let boacc = rChoose(acclist);\r

      \  let item = generate_statement(dParent, boacc, boacc.brand);\r

      \  DA.bill = item;\r

      \  lookupAddIfToList(DA, ['challengedata'], item);\r

      }\r\n"
    sig: function onclick_bill(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_bw_symbol:
    name: onclick_bw_symbol
    code: "function onclick_bw_symbol(app, key) {\r

      \  if (nundef(key)) key = S.current_label;\r

      \  let s = lookup(DIBOA, ['bw_info', app, key]);\r

      \  if (s && isdef(S.current_input)) {\r

      \    S.current_input.value = s;\r

      \  } else {\r

      \    console.log('no bw_info for', app, key);\r

      \  }\r

      }\r\n"
    sig: function onclick_bw_symbol(app, key){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_boa_sendcode:
    name: onclick_boa_sendcode
    code: "function onclick_boa_sendcode() {\r

      \  let list1 = get_checked_radios(mBy('dPhoneContact'));\r

      \  let list2 = get_checked_radios(mBy('dTextOrPhone'))\r

      \  console.log(list1, list2);\r

      \  let success_phone = list1.length == 1 && list1[0] == 'text_3';\r

      \  let success_textOrPhone = list2.length == 1 && list2[0] ==
      'text_1';\r

      \  let TESTSKIP = false;\r

      \  console.log('TESTSKIP', TESTSKIP);\r

      \  if (!TESTSKIP) {\r

      \    if (!success_phone) { alert(\"Please select the phone number
      ending in '0297'!\"); return; }\r

      \    if (!success_textOrPhone) { alert(\"Please select the option
      'Text message'!\"); return; }\r

      \  }\r

      \  boahavecode_start();\r

      }\r\n"
    sig: function onclick_boa_sendcode(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_boa_cancel:
    name: onclick_boa_cancel
    code: "function onclick_boa_cancel() { onclick_location('home'); }\r\n"
    sig: function onclick_boa_cancel(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_bigredloginbutton:
    name: onclick_bigredloginbutton
    code: "function onclick_bigredloginbutton() { boalogin_start(); }\r\n"
    sig: function onclick_bigredloginbutton(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_submit_boa_login:
    name: onclick_submit_boa_login
    code: "function onclick_submit_boa_login() {\r

      \  let userid = get_boa_userid_input().value;\r

      \  let pwd = get_boa_pwd_input().value;\r

      \  let TESTSUCCESS = false; \r

      \  if (TESTSUCCESS || userid == DIBOA.bw_info.boa.userid && pwd ==
      DIBOA.bw_info.boa.pwd) {\r

      \    boaverify_start();\r

      \  } else {\r

      \    console.log('FAIL!!!!!!! onclick_submit_boa_login', userid,
      pwd);\r

      \  }\r

      }\r\n"
    sig: function onclick_submit_boa_login(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_location:
    name: onclick_location
    code: "function onclick_location(k) {\r

      \  show_correct_location(k);\r

      \  if (k == 'boa') {\r

      \    console.log('boa_state', S.boa_state);\r

      \    if (S.boa_state == 'authorized') { boamain_start(); }\r

      \    else if (S.boa_state == 'authorization_pending')
      boahavecode_start();\r

      \    else { S.boa_state = 'start'; boa_start(); }\r

      \  } else if (k == 'skype') {\r

      \    skype_start();\r

      \  } else if (k == 'home') {\r

      \    let b = mBy('tbbill'); if (isdef(b)) b.remove();\r

      \    scrollToTop();\r

      \    S.boa_state = null;\r

      \    let dband = mBy('dBandMessage');\r

      \    if (isdef(dband)) mStyle(dband, { display: 'none', h: 0, hmin:
      0 });\r

      \    DA.challenge = DA.name = null;\r

      \  }\r

      }\r\n"
    sig: function onclick_location(k){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_userid:
    name: onclick_userid
    code: "function onclick_userid() {\r

      \  let userid = mBy(\"enterID-input\");\r

      \  let pwd = mBy('tlpvt-passcode-input');\r

      \  console.log('userid', userid.value, 'pwd', pwd.value);\r

      }\r\n"
    sig: function onclick_userid(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_popup:
    name: onclick_popup
    code: "function onclick_popup(k) {\r

      \  let o = DIBOA[k];\r

      \  if (nundef(o)) { console.log('missing popup item: ' + k); return;
      }\r

      \  if (k == 'bw') {\r

      \    if (!is_bw_loggedin()) {\r

      \      assertion(S.bw_state == 'loggedout' || S.bw_state ==
      'expired', \"bw_state is corrupted!!!!\", S.bw_state);\r

      \      if (S.bw_state == 'loggedout') { bw_login_popup(); } else {
      bw_set_new_password_popup(); }\r

      \    } else {\r

      \      bw_widget_popup();\r

      \    }\r

      \  } else { console.log('onclick_popup', k); }\r

      }\r\n"
    sig: function onclick_popup(k){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  onclick_boa_submit_code:
    name: onclick_boa_submit_code
    code: "function onclick_boa_submit_code() {\r

      \  let list1 = get_input_value('inpAuthocode');\r

      \  let success_code = list1 == S.boa_authorization_code;\r

      \  if (!success_code) {\r

      \    show_eval_message(false);\r

      \    return;\r

      \  }\r

      \  boamain_start();\r

      }\r\n"
    sig: function onclick_boa_submit_code(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  scrollToTop:
    name: scrollToTop
    code: "function scrollToTop() {\r

      \  document.body.scrollTop = 0; \r

      \  document.documentElement.scrollTop = 0; \r

      }\r\n"
    sig: function scrollToTop(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  show_bill_button:
    name: show_bill_button
    code: "function show_bill_button() {\r

      \  if (isdef(mBy('tbbill'))) return;\r

      \  let tb = mBy('dTopRight');\r

      \  let b = mDiv(tb, {}, `tbbill`, `<a
      href=\"javascript:onclick_bill()\"><img
      src=\"../rechnung/images/bill.png\" height=\"30\"/></a>`);\r

      \  mInsert(tb, b);\r

      }\r\n"
    sig: function show_bill_button(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  show_master_password:
    name: show_master_password
    code: "function show_master_password() {\r

      \  let score = localStorage.getItem('score');\r

      \  show_special_message('the bitwarden master password is ' +
      S.master_password, false, 5000, 2000, { bg: 'dodgerblue', classname: '',
      top: 400 });\r

      }\r\n"
    sig: function show_master_password(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  show_eval_message:
    name: show_eval_message
    code: "function show_eval_message(correct, msg=null, callback=null) {\r

      \  if (isdef(DA.anim)) {DA.anim.onfinish=null;DA.anim.cancel();} \r

      \  if (nundef(msg)) msg = correct ? `Congratulations!!! You passed
      the ${DA.name} challenge!` : 'Wrong solution - Try Again!';\r

      \  let d = valf(mBy('dBandMessage'), mDiv(document.body, {},
      'dBandMessage'));\r

      \  show(d);\r

      \  clearElement(d);\r

      \  d.innerHTML = msg;
      //'blablablablabllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaa';
      //msg;\r

      \  mStyle(d, { display:'block', position: 'fixed', top: 127, left:
      0, bg: 'red', fg: 'white', w: '100%', h: 40, hmin: 40, hmax: 40, fz: 24,
      align: 'center', vpadding: 10, classname: 'slow_gradient_blink' });\r

      \  DA.anim=mFadeRemove(d, 4000, callback);\r

      }\r\n"
    sig: function show_eval_message(correct, msg=null, callback=null){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  show_correct_location:
    name: show_correct_location
    code: "function show_correct_location(k) {\r

      \  hide('dPopup');\r

      \  for (const k1 in DIBOA) { hide(`d${capitalize(k1)}`); }\r

      \  S.location = k; \r

      \  show(`d${capitalize(k)}`);\r

      }\r\n"
    sig: function show_correct_location(k){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  show_one_skype_message:
    name: show_one_skype_message
    code: "function show_one_skype_message(dParent, o) {\r

      \  let d = mDiv(dParent, { rounding: 12, hpadding: 6, vpadding: 6,
      margin: 4, gap: 12 }); mFlex(d);\r

      \  let [sz] = [40];\r

      \  let dimg = get_skype_phone_icon(o.color); \r

      \  mAppend(d, dimg);\r

      \  let dmiddle = mDiv(d, { flex: 8, wmax: '75%' });\r

      \  let dnum = mDiv(dmiddle, { fz: 11, fg: 'grey' }, null,
      `<div>${o.num} ${format_date(o.date)}</div>`);\r

      \  let msg = get_skype_expanded_message(o.msg);\r

      \  S.boa_authorization_code = stringAfter(msg, 'Code ').substring(0,
      6);\r

      \  let dmsg = mDiv(dmiddle, { bg: '#EEE', fz: 14, fg: 'black',
      rounding: 8, padding: 8 }, null, `<div>${msg}</div>`);\r

      }\r\n"
    sig: function show_one_skype_message(dParent, o){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  show_skype_contact:
    name: show_skype_contact
    code: "function show_skype_contact(dParent) {\r

      \  let c = S.skype_contact;\r

      \  if (isdef(c)) {\r

      \    mClear(dParent);\r

      \    let d = mDiv(dParent, { h: 'calc( 100vh - 200px )',
      'overflow-y': 'scroll' }); \r

      \    let dfooter = mDiv(dParent, { h: 190, padding: 10 }); \r

      \    let address = c.num;\r

      \    dfooter.innerHTML = `to: ${address} via Skype<br>`;\r

      \    let dform = mDiv(dfooter, { vmargin: 14 }); mFlex(dform);\r

      \    let denter = mInput(dform, { border: 'none', w: '85%', h: 40,
      bg: '#EEE', fg: '#000', fz: 14, padding: 10, hmargin: 14, rounding: 25 },
      null, 'Type an SMS here');\r

      \    let b = skype_go_button();\r

      \    mAppend(dform, b);\r

      \    for (let i = 0; i < 20; i++) {\r

      \      show_one_skype_message(d, c)\r

      \    }\r

      \    d.scrollTop = d.scrollHeight;\r

      \  }\r

      }\r\n"
    sig: function show_skype_contact(dParent){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  set_new_password:
    name: set_new_password
    code: "function set_new_password() {\r

      \  let len = Math.min(20, S.master_password.length + 1);\r

      \  let pnew = rPassword(len);\r

      \  console.log('new password: ', pnew);\r

      \  S.master_password = pnew;\r

      \  S.score = 0;\r

      \  boa_save();\r

      }\r\n"
    sig: function set_new_password(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  set_boa_score:
    name: set_boa_score
    code: "function set_boa_score(inc) { S.score += inc; if (S.score < 0) S.score =
      0; boa_save(); }\r\n"
    sig: function set_boa_score(inc){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  skype_go_button:
    name: skype_go_button
    code: "function skype_go_button() {\r

      \  let html = `\r

      \    <button\r

      \      role=\"button\"\r

      \      title=\"Send message\"\r

      \      aria-label=\"Send message\"\r

      \      aria-disabled=\"false\"\r

      \      style=\"\r

      \        position: relative;\r

      \        display: flex;\r

      \        flex-direction: column;\r

      \        flex-grow: 0;\r

      \        flex-shrink: 0;\r

      \        overflow: visible;\r

      \        align-items: center;\r

      \        justify-content: center;\r

      \        app-region: no-drag;\r

      \        background-color: transparent;\r

      \        border-color: transparent;\r

      \        text-align: left;\r

      \        border-width: 0px;\r

      \        height: 44px;\r

      \        width: 44px;\r

      \        padding: 0px;\r

      \        cursor: pointer;\r

      \        border-style: solid;\r

      \      \"\r

      \    >\r

      \      <div\r

      \        role=\"none\"\r

      \        style=\"\r

      \          position: absolute;\r

      \          display: flex;\r

      \          flex-direction: column;\r

      \          flex-grow: 0;\r

      \          flex-shrink: 0;\r

      \          overflow: hidden;\r

      \          align-items: center;\r

      \          background: linear-gradient(135deg, rgb(0, 188, 242),
      rgb(0, 120, 212));\r

      \          height: 40px;\r

      \          width: 40px;\r

      \          border-radius: 20px;\r

      \          top: 2px;\r

      \          left: 2px;\r

      \          justify-content: center;\r

      \        \"\r

      \      >\r

      \        <div\r

      \          role=\"none\"\r

      \          aria-hidden=\"true\"\r

      \          style=\"position: relative; display: flex;
      flex-direction: column; flex-grow: 0; flex-shrink: 0; overflow: hidden;
      align-items: stretch; margin-left: 2px\"\r

      \        >\r

      \          <svg width=\"20\" height=\"20\"
      xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"
      fill=\"#FFFFFF\" gradientcolor1=\"#FFFFFF\" gradientcolor2=\"#FFFFFF\">\r

      \            <path\r

      \              d=\"M5.694 12L2.299
      3.272c-.236-.608.356-1.189.942-.982l.093.04 18 9a.75.75 0 01.097
      1.283l-.097.058-18 9c-.583.291-1.217-.245-1.065-.847l.03-.096L5.694 12
      2.299 3.272 5.694 12zM4.402 4.54l2.61 6.71h6.627a.75.75 0
      01.743.648l.007.102a.75.75 0 01-.649.743l-.101.007H7.01l-2.609 6.71L19.322
      12 4.401 4.54z\"\r

      \            ></path>\r

      \          </svg>\r

      \        </div>\r

      \      </div>\r

      \    </button>\r

      \  `;\r

      \  return mCreateFrom(html);\r

      }\r\n"
    sig: function skype_go_button(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  skype_start:
    name: skype_start
    code: "function skype_start() {\r

      \  let d = mBy('dSkype'); mClear(d); \r

      \  mStyle(d, { h: 'calc( 100vh - 56px )', 'overflow-y': 'hidden'
      });\r

      \  let d0 = mDiv(d);\r

      \  let [dl, dr] = mColFlex(d, [1, 3]); \r

      \  mStyle(dl, { border: '1px dotted silver' }); mStyle(dr, { border:
      '1px dotted silver' });\r

      \  mDiv(dl, {}, null, img_html('skypeTopLeft.jpg'));\r

      \  let d1 = mDiv(dl);\r

      \  DIBOA.skype.divRight = dr;\r

      \  DIBOA.skype.divLeft = dl;\r

      \  let contacts = DIBOA.skype.contacts =
      generate_skype_contacts(25); console.log(contacts)\r

      \  for (const o of contacts) {\r

      \    let dc = mDiv(d1, { rounding: 12, hpadding: 6, vpadding: 6,
      margin: 4, gap: 12, overflow: 'hidden' }, null, null, 'skypecontact');\r

      \    mFlex(dc);\r

      \    o.div = dc;\r

      \    dc.onclick = () => { S.skype_contact = toggleSelection(o,
      S.skype_contact, 'skypecontact_active'); show_skype_contact(dr) };\r

      \    let [sz] = [40];\r

      \    let dimg = get_skype_phone_icon(o.color); \r

      \    mAppend(dc, dimg);\r

      \    let dmiddle = mDiv(dc, { flex: 8 });\r

      \    let dnum = mDiv(dmiddle, { fz: 14, fg: 'black' }, null,
      `<div>${o.num}</div>`);\r

      \    let dmsg = mDiv(dmiddle, { fz: 11, fg: 'grey' }, null,
      `<div>${o.msg}</div>`);\r

      \    let ddate = mDiv(dc, { flex: 1, fz: 11, fg: 'grey' }, null,
      `<div>${format_date(o.date)}</div>`);\r

      \  }\r

      }\r\n"
    sig: function skype_start(){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  toggle_bw_symbol:
    name: toggle_bw_symbol
    code: "function toggle_bw_symbol(d) {\r

      \  if (nundef(d)) d = document.getElementById('tbbw');\r

      \  d = d.getElementsByTagName('i')[0];\r

      \  if (isdef(d)) {\r

      \    if (d.classList.contains('fa-car')) {\r

      \      d.classList.remove('fa-car');\r

      \      d.classList.add('fa-star');\r

      \      mStyle(d, { fg: 'silver' });\r

      \    } else {\r

      \      d.classList.remove('fa-star');\r

      \      d.classList.add('fa-car');\r

      \      mStyle(d, { fg: 'transparent' });\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function toggle_bw_symbol(d){}
    region: bw (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  get_input_value:
    name: get_input_value
    code: "function get_input_value(id) {\r

      \  let inp = mBy(id);\r

      \  let val = inp.value;\r

      \  return val;\r

      }\r\n"
    sig: function get_input_value(id){}
    region: ui (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  createImage:
    name: createImage
    code: "function createImage(filename, styles) {\r

      \  let img = mCreateFrom(`<img
      src='../rechnung/images/${filename}'>`);\r

      \  if (isdef(styles.w)) { img.setAttribute('width', styles.w); }\r

      \  if (isdef(styles.h)) { img.setAttribute('height', styles.h); }\r

      \  mStyle(img, styles);\r

      \  return img;\r

      }\r\n"
    sig: function createImage(filename, styles){}
    region: ui (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  img_html:
    name: img_html
    code: "function img_html(filename, fulldim = 'height') {\r

      \  return `<img ${fulldim}='100%'
      src='../rechnung/images/${filename}'>`;\r

      }\r\n"
    sig: function img_html(filename, fulldim = 'height'){}
    region: ui (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  test0_boa_bw_fa:
    name: test0_boa_bw_fa
    code: "function test0_boa_bw_fa() {\r

      \  let d = mDiv('dHome', { w: 200, h: 200, bg: 'red' }, 'd', `<i
      class=\"fa fa-car\"></i>`);\r

      \  d.onclick = () => toggle_bw_symbol(d.firstChild);\r

      }\r\n"
    sig: function test0_boa_bw_fa(){}
    region: boa (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  test1_bw_widget_boa:
    name: test1_bw_widget_boa
    code: "function test1_bw_widget_boa() {\r

      \  let dpop = mBy('dPopup');\r

      \  show(dpop);\r

      \  mStyle(dpop, { top: 50, right: 10 });\r

      \  let prefix = 'boa';\r

      \  let d = mDiv(dpop, { wmin: 200, hmin: 200, bg: 'red' }, 'dBw');\r

      \  let d2 = mDiv(d, { bg: 'dodgerblue', fg: 'white' }, null, 'your
      bitwarden vault');\r

      \  let d3 = mDiv(d, { bg: '#eee', fg: 'dimgray', padding: 8 }, null,
      'LOGINS');\r

      \  let d4 = mDiv(d, { bg: 'white', fg: 'black' });\r

      \  let d5 = mDiv(d4, { display: 'flex' });\r

      \  let dimg = mDiv(d5, { bg: 'white', fg: 'black' }, null, `<img
      src='../rechnung/images/boa.png' height=14 style=\"margin:8px\">`);\r

      \  let dtext = mDiv(d5, { cursor: 'pointer' }, null,
      `<div>boa</div><div style=\"font-size:12px;color:gray\">gleeb69</div>`);\r

      \  dtext.onclick = () => onclick_bw_symbol(prefix)\r

      \  let d6 = mDiv(d4, { display: 'flex', padding: 2 });\r

      \  let disyms = {\r

      \    bwtext: { postfix: 'userid', matop: 2, maright: 0, mabottom: 0,
      maleft: 0, sz: 27 },\r

      \    bwcross: { postfix: 'cross', matop: 2, maright: 0, mabottom: 0,
      maleft: -13, sz: 25 },\r

      \    bwkey: { postfix: 'pwd', matop: 0, maright: 0, mabottom: 0,
      maleft: -12, sz: 27 },\r

      \    bwclock: { postfix: 'clock', matop: 0, maright: 0, mabottom: 0,
      maleft: 0, sz: 25 },\r

      \  }\r

      \  for (const k of ['bwtext', 'bwcross', 'bwkey']) { \r

      \    let o = disyms[k];\r

      \    let [filename, styles] = [k, disyms[k]];\r

      \    let path = `../rechnung/images/${filename}.png`;\r

      \    let [sz, ma] = [styles.sz, `${styles.matop}px
      ${styles.maright}px ${styles.mabottom}px ${styles.maleft}px`];\r

      \    console.log('ma', ma);\r

      \    let img = mDiv(d6, { paright: 16 }, null, `<img src='${path}'
      height=${sz} style=\"margin:${ma}\">`);\r

      \    if (k != 'bwcross') {\r

      \      mStyle(img, { cursor: 'pointer' });\r

      \      img.onclick = () => onclick_bw_symbol(prefix, o.postfix);\r

      \    }\r

      \  }\r

      \  mFlexSpacebetween(d4);\r

      \  let d7 = mDiv(d, { bg: '#eee', fg: 'dimgray', padding: 7 }, null,
      'CARDS');\r

      \  let d8 = mDiv(d, { bg: 'dodgerblue', fg: 'white' }, null, `<img
      src='../rechnung/images/rest_bw.jpg'>`);\r

      }\r\n"
    sig: function test1_bw_widget_boa(){}
    region: boa (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  test2_boa_verify:
    name: test2_boa_verify
    code: "function test2_boa_verify() {\r

      \  mAppear('dScreen', 100);\r

      \  if (FirstLoad) { FirstLoad = false; initialize_state(); } \r

      \  get_toolbar();\r

      \  onclick_location('boa');\r

      \  boaverify_start();\r

      }\r\n"
    sig: function test2_boa_verify(){}
    region: boa (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  test3_boa_havecode:
    name: test3_boa_havecode
    code: "function test3_boa_havecode() {\r

      \  mAppear('dScreen', 100);\r

      \  if (FirstLoad) { FirstLoad = false; initialize_state(); } \r

      \  get_toolbar();\r

      \  onclick_location('boa');\r

      \  S.boa_authorization_code = '123456';\r

      \  boahavecode_start();\r

      }\r\n"
    sig: function test3_boa_havecode(){}
    region: boa (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  test4_boa_main:
    name: test4_boa_main
    code: "function test4_boa_main() {\r

      \  mAppear('dScreen', 100);\r

      \  if (FirstLoad) { FirstLoad = false; initialize_state(); } \r

      \  get_toolbar();\r

      \  onclick_location('boa');\r

      \  S.boa_authorization_code = '123456';\r

      \  boamain_start();\r

      }\r\n"
    sig: function test4_boa_main(){}
    region: boa (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  test5_bw_skin:
    name: test5_bw_skin
    code: "function test5_bw_skin() {\r

      \  mAppear('dScreen', 100);\r

      \  if (FirstLoad) { FirstLoad = false; initialize_state(); } \r

      \  get_toolbar();\r

      \  bw_widget_popup('skype');\r

      }\r\n"
    sig: function test5_bw_skin(){}
    region: boa (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  test6_generate_statement:
    name: test6_generate_statement
    code: "function test6_generate_statement() {\r

      \  mAppear('dScreen', 100);\r

      \  if (FirstLoad) { FirstLoad = false; initialize_state(); } \r

      \  get_toolbar();\r

      \  generate_statement();\r

      }\r\n"
    sig: function test6_generate_statement(){}
    region: boa (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\rechnung\start.js
    datetime: 2022-07-16-07-26
    timestamp: 1657981612343.2688
    size: 69522
  load_assets:
    name: load_assets
    code: "function load_assets(obj) {\r

      \  Config = jsyaml.load(obj.config);\r

      \  Syms = jsyaml.load(obj.syms);\r

      \  SymKeys = Object.keys(Syms);\r

      \  ByGroupSubgroup = jsyaml.load(obj.symGSG);\r

      \  C52 = jsyaml.load(obj.c52);\r

      \  Cinno = jsyaml.load(obj.cinno);\r

      \  Info = jsyaml.load(obj.info);\r

      \  Sayings = jsyaml.load(obj.sayings);\r

      \  create_card_assets_c52();\r

      \  KeySets = getKeySets();\r

      \  assertion(isdef(Config), 'NO Config!!!!!!!!!!!!!!!!!!!!!!!!');\r

      }\r\n"
    sig: function load_assets(obj){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  unpack_table:
    name: unpack_table
    code: "function unpack_table(table) {\r

      \  for (const k of ['players', 'fen', 'options', 'scoring']) {\r

      \    let val = table[k];\r

      \    if (isdef(table[k])) table[k] = if_stringified(val); if
      (nundef(table[k])) table[k] = {}; \r

      \  }\r

      \  if (isdef(table.modified)) { table.modified =
      Number(table.modified); table.timestamp = new Date(table.modified);
      table.stime = stringBeforeLast(table.timestamp.toString(), 'G').trim();
      }\r

      \  assertion(isdef(window[table.game]), 'game function for ' +
      table.game + ' not defined in window');\r

      \  if (isdef(table.game)) { table.func = window[table.game](); }\r

      \  if (isdef(table.options.mode)) { table.mode = table.options.mode;
      }\r

      \  delete table.action; delete table.expected;\r

      \  return table;\r

      }\r\n"
    sig: function unpack_table(table){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  update_current_table:
    name: update_current_table
    code: "function update_current_table() {\r

      \  let o = Serverdata.table;\r

      \  assertion(isdef(U), 'NO USER LOGGED IN WHEN GETTING TABLE FROM
      SERVER!!!!!!!!!!!!!!!!!!!!', U, o);\r

      \  if (nundef(Z) || nundef(Z.prev)) Z = { prev: {} };\r

      \  assertion(isdef(Z), 'ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ', Z);\r

      \  set_user(U.name);\r

      \  for (const wichtig of ['notes', 'uplayer', 'friendly', 'step',
      'round', 'phase', 'stage', 'timestamp', 'modified', 'stime', 'mode',
      'scoring']) {\r

      \    if (isdef(Z[wichtig])) Z.prev[wichtig] = jsCopy(Z[wichtig]);\r

      \  }\r

      \  Z.prev.turn = Clientdata.last_turn;\r

      \  copyKeys(o, Z, {uname:true});  \r

      \  let [mode, turn, uname, plorder, fen, host] = [Z.mode, Z.turn,
      Z.uname, Z.plorder, Z.fen, Z.host];\r

      \  assertion(!isEmpty(turn), 'turn
      empty!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!', turn, fen,
      plorder);\r

      \  Z.role = !plorder.includes(uname) ? 'spectator' :
      turn.includes(uname) ? 'active' : 'inactive';\r

      \  if (Z.game == 'fritz' && Z.role == 'spectator' &&
      isdef(Z.fen.roundorder) && Z.fen.roundorder.includes(uname)){\r

      \    Z.role = 'inactive';\r

      \  } \r

      \  let upl = Z.role == 'active' ? uname : turn[0];\r

      \  if (mode == 'hotseat' && turn.length > 1) { let next =
      get_next_human_player(Z.prev.uplayer); if (next) upl = next; }\r

      \  if (mode == 'multi' && Z.role == 'inactive' && (uname != host ||
      is_human_player(upl))) {\r

      \    upl = uname;\r

      \  }\r

      \  set_player(upl, fen);\r

      \  let [uplayer, pl] = [Z.uplayer, Z.pl];\r

      \  Z.playmode = pl.playmode; \r

      \  if (Z.playmode != 'human') Z.strategy = pl.strategy;\r

      \  let [friendly, modified] = [Z.friendly, Z.modified];\r

      \  Z.skip_presentation = !FORCE_REDRAW && friendly ==
      Z.prev.friendly && modified <= Z.prev.modified && uplayer ==
      Z.prev.uplayer;\r

      \  FORCE_REDRAW = false;\r

      \  if (Z.skip_presentation) {\r

      \    show_status(`nothing new in ${Z.friendly}`);\r

      \    const STOP_POLLING_AFTER = 30000;\r

      \    if (nundef(DA.noshow)) DA.noshow = 1; else DA.noshow++; if
      (DA.noshow >= STOP_POLLING_AFTER) onclick_stoppolling(); \r

      \    autopoll();\r

      \  } else {\r

      \    DA.noshow = 0;\r

      \    delete DA.sperre;\r

      \    clear_timeouts();\r

      \  }\r

      }\r\n"
    sig: function update_current_table(){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\easy\apiserver.js
    datetime: 2022-07-17-15-31
    timestamp: 1658097099801.671
    size: 8861
  old_mButtonX:
    name: old_mButtonX
    code: "function old_mButtonX(dParent, pos = 'tr', handler = null,
      defaultBehavior = 'hide', sz = 40) {\r

      \  dParent = toElem(dParent);\r

      \  let styles = { cursor: 'pointer', w: sz, h: sz };\r

      \  let d2 = mDiv(dParent, styles, null, `<svg width='100%'
      height='100%' ><use xlink:href=\"#Times\" /></svg>`);\r

      \  mClass(d2, 'svgbtnX');\r

      \  d2.onclick = isdef(handler) ? handler : defaultBehavior == 'hide'
      ? () => hide(dParent) : () => dParent.remove();\r

      \  mPlace(d2, pos, 10);\r

      \  return d2;\r

      }\r\n"
    sig: function old_mButtonX(dParent, pos = 'tr', handler = null, defaultBehavior
      = 'hide', sz = 40){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCardText:
    name: mCardText
    code: "function mCardText(ckey, sz, color) { return is_jolly(ckey) ? '<span
      style=\"font-family:Algerian\">jolly</span>' : `${ckey[0]}${mSuit(ckey,
      sz, color)}`; }\r\n"
    sig: function mCardText(ckey, sz, color){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDivLR:
    name: mDivLR
    code: "function mDivLR(dParent, styles, id, innerlist, classes) {\r

      \  let d = mDiv(dParent, styles, id,
      `<div>${innerlist[0]}</div><div>${innerlist[1]}</div>`, classes);\r

      \  mStyle(d, { display: 'flex', 'justify-content': 'space-between',
      'align-items': 'center' });\r

      \  return d;\r

      }\r\n"
    sig: function mDivLR(dParent, styles, id, innerlist, classes){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDraggable:
    name: mDraggable
    code: "function mDraggable(item) {\r

      \  let d = iDiv(item);\r

      \  d.draggable = true;\r

      \  d.ondragstart = drag;\r

      }\r\n"
    sig: function mDraggable(item){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDroppable:
    name: mDroppable
    code: "function mDroppable(item, handler, dragoverhandler) {\r

      \  let d = iDiv(item);\r

      \  d.ondragover = isdef(dragoverhandler) ? dragoverhandler :
      default_allowDrop;\r

      \  d.ondrop = handler;\r

      }\r\n"
    sig: function mDroppable(item, handler, dragoverhandler){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFlexEvenly:
    name: mFlexEvenly
    code: "function mFlexEvenly(d) {\r

      \  let styles = { display: 'flex' };\r

      \  styles['justify-content'] = 'space-evenly';\r

      \  mStyle(d, styles);\r

      }\r\n"
    sig: function mFlexEvenly(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFlexLR:
    name: mFlexLR
    code: "function mFlexLR(d) { mStyle(d, { display: 'flex', 'justify-content':
      'space-between', 'align-items': 'center' }); }\r\n"
    sig: function mFlexLR(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFlexSpacebetween:
    name: mFlexSpacebetween
    code: "function mFlexSpacebetween(d) { mFlexLR(d); }\r\n"
    sig: function mFlexSpacebetween(d){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mLine:
    name: mLine
    code: "function mLine(dParent, styles) { return mDiv(dParent, styles, null,
      '<hr>'); }\r\n"
    sig: function mLine(dParent, styles){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mLink:
    name: mLink
    code: "function mLink(href, dParent, styles, id, inner, classes, sizing) {\r

      \  let d = mCreate('a');\r

      \  if (dParent) mAppend(dParent, d);\r

      \  d.href = valf(href, '#');\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  if (isdef(classes)) mClass(d, classes);\r

      \  if (isdef(id)) d.id = id;\r

      \  if (isdef(inner)) d.innerHTML = inner;\r

      \  if (isdef(sizing)) { setRect(d, sizing); }\r

      \  return d;\r

      }\r\n"
    sig: function mLink(href, dParent, styles, id, inner, classes, sizing){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mStamp:
    name: mStamp
    code: "function mStamp(d1, text, color, sz) {\r

      \  mStyle(d1, { position: 'relative' });\r

      \  let r = getRect(d1);\r

      \  let [w, h] = [r.w, r.h];\r

      \  color = valf(color, 'black');\r

      \  sz = valf(sz, r.h / 7);\r

      \  let [padding, border, rounding, angle] = [sz / 10, sz / 6, sz /
      8, rChoose([-16, -14, -10, 10, 14])];\r

      \  let d2 = mDiv(d1, {\r

      \    fg: color,\r

      \    position: 'absolute', top: 25, left: 5,\r

      \    transform: `rotate(${angle}deg)`,\r

      \    fz: sz,\r

      \    hpadding: 2,\r

      \    vpadding: 0,\r

      \    rounding: rounding,\r

      \    border: `${border}px solid ${colorTrans(color, .8)}`,\r

      \    '-webkit-mask-size': `${w}px ${h}px`,\r

      \    '-webkit-mask-position': `50% 50%`,\r

      \    '-webkit-mask-image':
      'url(\"../base/assets/images/textures/grunge.png\")',\r

      \    weight: 400,\r

      \    display: 'inline-block',\r

      \    'text-transform': 'uppercase',\r

      \    family: 'blackops',\r

      \    'mix-blend-mode': 'multiply',\r

      \  }, null, text);\r

      }\r\n"
    sig: function mStamp(d1, text, color, sz){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  valfi:
    name: valfi
    code: "function valfi() {\r

      \  for (const arg of arguments) {\r

      \    if (isdef(arg)) return arg;\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function valfi(){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSymText:
    name: mSymText
    code: "function mSymText(s, dParent, styles = {}, pos, classes) {\r

      \  styles.display = 'inline-block';\r

      \  styles.w = valfi(styles.w, styles.sz, styles.h, '25%');\r

      \  styles.h = valfi(styles.h, styles.sz, styles.w, styles.fz,
      '25%');\r

      \  styles.fz = valfi(styles.fz, styles.sz * 4 / 5, styles.h * 4 / 5,
      styles.w * 2, '20%');\r

      \  styles.align = 'center';\r

      \  let x = mDiv(dParent, styles, null, s); mCenterCenterFlex(x);\r

      \  if (isdef(classes)) mClass(x, classes);\r

      \  if (isdef(pos)) { mPlace(x, pos); }\r

      \  return x;\r

      }\r\n"
    sig: function mSymText(s, dParent, styles = {}, pos, classes){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPulse1:
    name: mPulse1
    code: "function mPulse1(d, callback) { mPulse(d, 1000, callback); }\r\n"
    sig: function mPulse1(d, callback){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPulse2:
    name: mPulse2
    code: "function mPulse2(d, callback) { mPulse(d, 2000, callback); }\r\n"
    sig: function mPulse2(d, callback){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPulse3:
    name: mPulse3
    code: "function mPulse3(d, callback) { mPulse(d, 3000, callback); }\r\n"
    sig: function mPulse3(d, callback){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrFunc:
    name: arrFunc
    code: "function arrFunc(n, func) { let res = []; for (let i = 0; i < n; i++)
      res.push(func()); return res; }\r\n"
    sig: function arrFunc(n, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrRepeat:
    name: arrRepeat
    code: "function arrRepeat(n, el) { let res = []; for (let i = 0; i < n; i++)
      res.push(el); return res; }\r\n"
    sig: function arrRepeat(n, el){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrReplace1:
    name: arrReplace1
    code: "function arrReplace1(arr, elweg, eldazu) {\r

      \  let i = arr.indexOf(elweg);\r

      \  arr[i] = eldazu;\r

      \  return arr;\r

      }\r\n"
    sig: function arrReplace1(arr, elweg, eldazu){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrSplitAtIndex:
    name: arrSplitAtIndex
    code: "function arrSplitAtIndex(arr, i) {\r

      \  return [arr.slice(0, i), arr.slice(i)];\r

      }\r\n"
    sig: function arrSplitAtIndex(arr, i){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrTakeLast:
    name: arrTakeLast
    code: "function arrTakeLast(arr, n, from = 0) {\r

      \  let res = [];\r

      \  if (isDict(arr)) {\r

      \    let keys = Object.keys(arr);\r

      \    let ilast = keys.length - 1; for (let i = ilast - from; i >= 0
      && i > ilast - from - n; i--) { res.unshift(arr[keys[i]]); }\r

      \  } else {\r

      \    let ilast = arr.length - 1; for (let i = ilast - from; i >= 0
      && i > ilast - from - n; i--) { res.unshift(arr[i]); }\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function arrTakeLast(arr, n, from = 0){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  find_minimum_by_function:
    name: find_minimum_by_function
    code: "function find_minimum_by_function(array, func) {\r

      \  let min = func(array[0]);\r

      \  for (let i = 1; i < array.length; i++) {\r

      \    if (func(array[i]) < func(min)) min = array[i];\r

      \  }\r

      \  return min;\r

      }\r\n"
    sig: function find_minimum_by_function(array, func){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  find_minimum:
    name: find_minimum
    code: "function find_minimum(array) {\r

      \  let min = array[0];\r

      \  for (let i = 1; i < array.length; i++) {\r

      \    if (array[i] < min) min = array[i];\r

      \  }\r

      \  return min;\r

      }\r\n"
    sig: function find_minimum(array){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  addMonthToDate:
    name: addMonthToDate
    code: "function addMonthToDate(date, months) {\r

      \  let d = new Date(date);\r

      \  d.setMonth(d.getMonth() + months);\r

      \  return d;\r

      }\r\n"
    sig: function addMonthToDate(date, months){}
    region: date (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  addWeekToDate:
    name: addWeekToDate
    code: "function addWeekToDate(date, weeks) {\r

      \  let d = new Date(date);\r

      \  d.setDate(d.getDate() + (weeks * 7));\r

      \  return d;\r

      }\r\n"
    sig: function addWeekToDate(date, weeks){}
    region: date (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  calculateDaysBetweenDates:
    name: calculateDaysBetweenDates
    code: "function calculateDaysBetweenDates(begin, end) {\r

      \  var oneDay = 24 * 60 * 60 * 1000;\r

      \  var firstDate = new Date(begin);\r

      \  var secondDate = new Date(end);\r

      \  var diffDays = Math.round(Math.abs((firstDate.getTime() -
      secondDate.getTime()) / (oneDay)));\r

      \  return diffDays;\r

      }\r\n"
    sig: function calculateDaysBetweenDates(begin, end){}
    region: date (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  date2locale:
    name: date2locale
    code: "function date2locale(date) { return date.toLocaleDateString(); }\r\n"
    sig: function date2locale(date){}
    region: date (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  format_date:
    name: format_date
    code: "function format_date(date) {\r

      \  let d = new Date(date);\r

      \  let month = '' + (d.getMonth() + 1);\r

      \  let day = '' + d.getDate();\r

      \  let year = d.getFullYear();\r

      \  if (month.length < 2) month = '0' + month;\r

      \  if (day.length < 2) day = '0' + day;\r

      \  return [month, day, year].join('/');\r

      }\r\n"
    sig: function format_date(date){}
    region: date (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_weekday:
    name: get_weekday
    code: "function get_weekday(date) {\r

      \  let d = new Date(date);\r

      \  return d.getDay();\r

      }\r\n"
    sig: function get_weekday(date){}
    region: date (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rCard:
    name: rCard
    code: "function rCard(postfix = 'n', ranks = '*A23456789TJQK', suits = 'HSDC') {
      return rChoose(ranks) + rChoose(suits) + postfix; }\r\n"
    sig: function rCard(postfix = 'n', ranks = '*A23456789TJQK', suits = 'HSDC'){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rRank:
    name: rRank
    code: "function rRank(ranks = 'A23456789TJQK') { return rChoose(ranks); }\r\n"
    sig: function rRank(ranks = 'A23456789TJQK'){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rSuit:
    name: rSuit
    code: "function rSuit(suit = 'HSDC') { return rChoose(suit); }\r\n"
    sig: function rSuit(suit = 'HSDC'){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rDate:
    name: rDate
    code: "function rDate(before, after) {\r

      \  let after_date = new Date(after);\r

      \  let before_date = new Date(before);\r

      \  let random_date = new Date(Math.random() * (before_date.getTime()
      - after_date.getTime()) + after_date.getTime());\r

      \  return random_date;\r

      }\r\n"
    sig: function rDate(before, after){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rDigits:
    name: rDigits
    code: "function rDigits(n) { return rChoose(toLetters('0123456789'), n); }\r\n"
    sig: function rDigits(n){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rPassword:
    name: rPassword
    code: "function rPassword(n) { return
      rChoose(toLetters('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQR\
      STUVWXYZ!.?*&%$#@:;_'), n).join(''); }\r\n"
    sig: function rPassword(n){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  start_simple_timer:
    name: start_simple_timer
    code: "function start_simple_timer(dtimer, msInterval, onTick, msTotal,
      onElapsed) {\r

      \  if (isdef(DA.timer)) { DA.timer.clear(); DA.timer = null; }\r

      \  let timer = DA.timer = new SimpleTimer(dtimer, msInterval,
      onTick, msTotal, onElapsed);\r

      \  timer.start();\r

      }\r\n"
    sig: function start_simple_timer(dtimer, msInterval, onTick, msTotal,
      onElapsed){}
    region: simepl (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stop_simple_timer:
    name: stop_simple_timer
    code: "function stop_simple_timer() { if (isdef(DA.timer)) { DA.timer.clear();
      DA.timer = null; } }\r\n"
    sig: function stop_simple_timer(){}
    region: simepl (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  format_currency:
    name: format_currency
    code: "function format_currency(num) {\r

      \  return '$' + num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g,
      \",\");\r

      }\r\n"
    sig: function format_currency(num){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_mouse_pos:
    name: get_mouse_pos
    code: "function get_mouse_pos(ev) {\r

      \  let x = ev.pageX - document.body.scrollLeft;\r

      \  let y = ev.pageY - document.body.scrollTop;\r

      \  return ({ x: x, y: y });\r

      }\r\n"
    sig: function get_mouse_pos(ev){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  isListOf:
    name: isListOf
    code: "function isListOf(arr, predfunc) { return Array.isArray(arr) &&
      !firstCond(arr, x => !predfunc(x)); }\r\n"
    sig: function isListOf(arr, predfunc){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  load_assets_fetch:
    name: load_assets_fetch
    code: "async function load_assets_fetch(basepath, baseminpath) {\r

      \  let path = basepath + 'assets/';\r

      \  Config = await route_path_yaml_dict(baseminpath +
      'config.yaml');\r

      \  DB = await route_path_yaml_dict(basepath + 'DB.yaml');\r

      \  Syms = await route_path_yaml_dict(path + 'allSyms.yaml');\r

      \  SymKeys = Object.keys(Syms);\r

      \  ByGroupSubgroup = await route_path_yaml_dict(path +
      'symGSG.yaml');\r

      \  C52 = await route_path_yaml_dict(path + 'c52.yaml');\r

      \  Cinno = await route_path_yaml_dict(path + 'fe/inno.yaml');\r

      \  Info = await route_path_yaml_dict(path + 'lists/info.yaml');\r

      \  create_card_assets_c52();\r

      \  KeySets = getKeySets();\r

      \  console.assert(isdef(Config), 'NO
      Config!!!!!!!!!!!!!!!!!!!!!!!!');\r

      \  return { users: dict2list(DB.users, 'name'), games:
      dict2list(Config.games, 'name'), tables: [] };\r

      }\r\n"
    sig: async function load_assets_fetch(basepath, baseminpath){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_special_message:
    name: show_special_message
    code: "function show_special_message(msg, stay = false, ms = 3000, delay = 0,
      styles = {}, callback = null) {\r

      \  let dParent = mBy('dBandMessage');\r

      \  if (nundef(dParent)) dParent = mDiv(document.body, {},
      'dBandMessage');\r

      \  show(dParent);\r

      \  clearElement(dParent);\r

      \  addKeys({ position: 'fixed', top: 200, classname:
      'slow_gradient_blink', vpadding: 10, align: 'center', position:
      'absolute', fg: 'white', fz: 24, w: '100vw' }, styles);\r

      \  if (!isEmpty(styles.classname)) { mClass(dParent,
      styles.classname); }\r

      \  delete styles.classname;\r

      \  mStyle(dParent, styles);\r

      \  dParent.innerHTML = msg;\r

      \  if (delay > 0) TO.special = setTimeout(() => {
      mFadeRemove(dParent, ms, callback); }, delay);\r

      \  else mFadeRemove(dParent, ms, callback);\r

      }\r\n"
    sig: function show_special_message(msg, stay = false, ms = 3000, delay = 0,
      styles = {}, callback = null){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toggleSelection:
    name: toggleSelection
    code: "function toggleSelection(pic, selected, clSelected = 'framedPicture',
      clUnselected = null) {\r

      \  let ui = iDiv(pic);\r

      \  pic.isSelected = !pic.isSelected;\r

      \  if (pic.isSelected) {\r

      \    if (isdef(clUnselected)) mClassRemove(ui, clUnselected);\r

      \    mClass(ui, clSelected);\r

      \  } else {\r

      \    mClassRemove(ui, clSelected);\r

      \    if (isdef(clUnselected)) mClass(ui, clUnselected);\r

      \  }\r

      \  if (isdef(selected)) {\r

      \    if (isList(selected)) {\r

      \      if (pic.isSelected) {\r

      \        console.assert(!selected.includes(pic), 'UNSELECTED PIC IN
      PICLIST!!!!!!!!!!!!')\r

      \        selected.push(pic);\r

      \      } else {\r

      \        console.assert(selected.includes(pic), 'PIC NOT IN PICLIST
      BUT HAS BEEN SELECTED!!!!!!!!!!!!')\r

      \        removeInPlace(selected, pic);\r

      \      }\r

      \    } else {\r

      \      mClassRemove(iDiv(selected), clSelected);\r

      \      if (isdef(clUnselected)) mClass(iDiv(selected),
      clUnselected);\r

      \      selected.isSelected = false;\r

      \    }\r

      \  }\r

      \  return pic.isSelected ? pic : null;\r

      }\r\n"
    sig: function toggleSelection(pic, selected, clSelected = 'framedPicture',
      clUnselected = null){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  load_assets_direct:
    name: load_assets_direct
    code: "function load_assets_direct(obj) {\r

      \  Config = jsyaml.load(obj.config);\r

      \  Syms = jsyaml.load(obj.syms);\r

      \  SymKeys = Object.keys(Syms);\r

      \  ByGroupSubgroup = jsyaml.load(obj.symGSG);\r

      \  Info = jsyaml.load(obj.info);\r

      \  KeySets = getKeySets();\r

      \  console.assert(isdef(Config), 'NO
      Config!!!!!!!!!!!!!!!!!!!!!!!!');\r

      }\r\n"
    sig: function load_assets_direct(obj){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  onclick_ack:
    name: onclick_ack
    code: "function onclick_ack() {\r

      \  if (nundef(Z) || nundef(Z.func.clear_ack)) return;\r

      \  Z.func.clear_ack();\r

      }\r\n"
    sig: function onclick_ack(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_random:
    name: onclick_random
    code: "function onclick_random() {\r

      \  if (uiActivated && !DA.ai_is_moving) ai_move(300);\r

      \  else if (!uiActivated) console.log('NOP: ui not activated...');\r

      \  else if (DA.ai_is_moving) console.log('NOP: ai is (or was
      already) moving...');\r

      \  else console.log('NOP: unknown...');\r

      }\r\n"
    sig: function onclick_random(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_remove_host:
    name: onclick_remove_host
    code: "function onclick_remove_host() {\r

      \  let [role, host, game, fen, uplayer, turn, stage] = [Z.role,
      Z.host, Z.game, Z.fen, Z.uplayer, Z.turn, Z.stage];\r

      }\r\n"
    sig: function onclick_remove_host(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_restart_long:
    name: onclick_restart_long
    code: "function onclick_restart_long() {\r

      \  let game = Z.game;\r

      \  let playernames = [Z.host].concat(Z.plorder.filter(x => x !=
      Z.host));\r

      \  let playermodes = playernames.map(x =>
      Z.fen.players[x].playmode);\r

      \  let i = 0; let players = playernames.map(x => ({ name: x,
      playmode: playermodes[i++] }));\r

      \  let options = Z.options;\r

      \  stopgame();\r

      \  startgame(game, players, options);\r

      }\r\n"
    sig: function onclick_restart_long(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\easy\onclick.js
    datetime: 2022-07-18-09-51
    timestamp: 1658163114634.0864
    size: 8322
  onclick_restart:
    name: onclick_restart
    code: "function onclick_restart() {\r

      \  let [game, fen, plorder, host] = [Z.game, Z.fen, Z.plorder,
      Z.host];\r

      \  Z.scoring = {};\r

      \  if (nundef(fen.original_players)) fen.original_players =
      fen.players;\r

      \  let playernames =
      [host].concat(get_keys(fen.original_players).filter(x => x != host));\r

      \  let playmodes = playernames.map(x =>
      fen.original_players[x].playmode);\r

      \  let strategies = playernames.map(x =>
      fen.original_players[x].strategy);\r

      \  let default_options = {}; for (const k in
      Config.games[game].options) default_options[k] =
      arrLast(Config.games[game].options[k].split(','));\r

      \  addKeys(default_options, Z.options);\r

      \  fen = Z.fen = Z.func.setup(playernames, Z.options);\r

      \  [Z.plorder, Z.stage, Z.turn, Z.round, Z.step, Z.phase] =
      [fen.plorder, fen.stage, fen.turn, 1, 1, fen.phase];\r

      \  if (DA.TESTSTART1) Z.turn = fen.turn = Z.host;\r

      \  let i = 0; playernames.map(x => { let pl = fen.players[x];
      pl.name = x; pl.strategy = strategies[i]; pl.playmode = playmodes[i++];
      });\r

      \  take_turn_fen_clear();\r

      }\r\n"
    sig: function onclick_restart(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_restart_move:
    name: onclick_restart_move
    code: "function onclick_restart_move() { clear_transaction(); onclick_reload();
      }\r\n"
    sig: function onclick_restart_move(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_skip:
    name: onclick_skip
    code: "function onclick_skip() {\r

      \  let [game, fen, uplayer, turn, stage] = [Z.game, Z.fen,
      Z.uplayer, Z.turn, Z.stage];\r

      \  if (game == 'spotit') return;\r

      \  else if (game == 'bluff' && stage == 1 || game == 'ferro' &&
      stage == 'auto_ack') { onclick_ack(); }\r

      \  else if (game == 'aristo') {\r

      \    Z.uplayer = Z.turn[0];\r

      \    Z.A = { level: 0, di: {}, ll: [], items: [], selected: [],
      tree: null, breadcrumbs: [], sib: [], command: null };\r

      \    copyKeys(jsCopy(Z.fen), Z);\r

      \    copyKeys(UI, Z);\r

      \    activate_ui(Z);\r

      \    Z.func.activate_ui();\r

      \    ai_move();\r

      \  } else {\r

      \    let plskip = Z.turn[0];\r

      \    Z.turn = [get_next_player(Z, plskip)];\r

      \    Z.uplayer = plskip;\r

      \    take_turn_fen();\r

      \  }\r

      }\r\n"
    sig: function onclick_skip(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_start_spotit:
    name: onclick_start_spotit
    code: "function onclick_start_spotit() {\r

      \  let [game, fen, uplayer, turn, stage] = [Z.game, Z.fen,
      Z.uplayer, Z.turn, Z.stage];\r

      \  Z.stage = 'move';\r

      \  Z.turn = jsCopy(Z.plorder);\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function onclick_start_spotit(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_table:
    name: onclick_table
    code: "function onclick_table(tablename) {\r

      \  send_or_sim({ friendly: tablename, uname: U.name }, 'table');\r

      }\r\n"
    sig: function onclick_table(tablename){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_tide_all:
    name: onclick_tide_all
    code: "function onclick_tide_all() {\t\r

      \  let [game, fen, uplayer, turn, stage] = [Z.game, Z.fen,
      Z.uplayer, Z.turn, Z.stage];\r

      \  for(const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    if (isdef(pl.tides)) { continue; }\r

      \    pl.tides = { val: rNumber(8,10) };\r

      \  }\r

      \  proceed_to_newcards_selection();\r

      }\r\n"
    sig: function onclick_tide_all(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\xampp\htdocs\aroot\easy\onclick.js
    datetime: 2022-07-18-09-51
    timestamp: 1658163114634.0864
    size: 8322
  toggle_select:
    name: toggle_select
    code: "function toggle_select(item, selected, selstyle = 'selected') {\r

      \  let ui = iDiv(item);\r

      \  item.isSelected = !item.isSelected;\r

      \  if (item.isSelected) {\r

      \    mStyleOrClass(ui, selstyle);\r

      \  } else if (isString(selstyle)) {\r

      \    mClassRemove(ui, selstyle);\r

      \  } else if (isdef(item.style)) {\r

      \    mStyle(ui, item.style);\r

      \  } else {\r

      \    mStyleUndo(ui, selstyle);\r

      \  }\r

      \  if (isdef(selected)) {\r

      \    if (isList(selected)) {\r

      \      if (item.isSelected) {\r

      \        console.assert(!selected.includes(item), 'UNSELECTED PIC IN
      PICLIST!!!!!!!!!!!!')\r

      \        selected.push(item);\r

      \      } else {\r

      \        console.assert(selected.includes(item), 'PIC NOT IN PICLIST
      BUT HAS BEEN SELECTED!!!!!!!!!!!!')\r

      \        removeInPlace(selected, item);\r

      \      }\r

      \    } else {\r

      \      mStyle(iDiv(selected), selected.style);\r

      \      selected.isSelected = false;\r

      \    }\r

      \  }\r

      \  return item.isSelected ? item : null;\r

      }\r\n"
    sig: function toggle_select(item, selected, selstyle = 'selected'){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  style_not_playing:
    name: style_not_playing
    code: "function style_not_playing(item, game, list) {\r

      \  console.log('item', item, 'game', game, 'list', list)\r

      \  let ui = iDiv(item); let uname = ui.getAttribute('username');\r

      \  mStyle(ui, { bg: 'transparent', fg: 'black' });\r

      \  arrLast(arrChildren(ui)).innerHTML = uname;\r

      \  item.ifunc = 0; item.playmode = 'none'; removeInPlace(list,
      item);\r

      }\r\n"
    sig: function style_not_playing(item, game, list){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  style_playing_as_human:
    name: style_playing_as_human
    code: "function style_playing_as_human(item, game, list) {\r

      \  let ui = iDiv(item); let uname = ui.getAttribute('username');\r

      \  mStyle(ui, { bg: get_user_color(uname), fg:
      colorIdealText(get_user_color(uname)) });\r

      \  arrLast(arrChildren(ui)).innerHTML = uname;\r

      \  item.ifunc = 1; item.playmode = 'human'; list.push(item);\r

      }\r\n"
    sig: function style_playing_as_human(item, game, list){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  style_playing_as_bot:
    name: style_playing_as_bot
    code: "function style_playing_as_bot(item, game, list) {\r

      \  let ui = iDiv(item); let uname = ui.getAttribute('username'); let
      bg = get_game_color(game);\r

      \  mStyle(ui, { bg: bg, fg: colorIdealText(bg) });\r

      \  arrLast(arrChildren(ui)).innerHTML = uname.substring(0, 3) +
      'bot';\r

      \  item.ifunc = 2; item.playmode = 'bot';\r

      }\r\n"
    sig: function style_playing_as_bot(item, game, list){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  bluff_present_new:
    name: bluff_present_new
    code: "function bluff_present_new(dParent) {\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent, 1, 0); \r

      \  let [fen, uplayer, ui, stage, dt] = [Z.fen, Z.uplayer, UI,
      Z.stage, dOpenTable];\r

      \  clearElement(dt); mCenterFlex(dt);\r

      \  if (stage == 1) { DA.no_shield = true; } else { DA.ack = {};
      DA.no_shield = false; }\r

      \  bluff_stats_new(dt);\r

      \  mLinebreak(dt, 10);\r

      \  bluff_show_cards(dt);\r

      \  mLinebreak(dt, 4);\r

      \  let item = ui.currentBidItem = bluff_show_current_bid(dt);\r

      \  hide(item.button);\r

      \  mLinebreak(dt, 10);\r

      \  if (stage == 1) {\r

      \    let loser = fen.loser;\r

      \    let msg1 = fen.war_drin ? 'war drin!' : 'war NICHT drin!!!';\r

      \    let msg2 = isdef(fen.players[loser]) ? `${capitalize(loser)}
      will get ${fen.players[loser].handsize} cards!` : `${capitalize(loser)} is
      out!`;\r

      \    mText(`<span style=\"color:red\">${msg1} ${msg2}</span>`, dt, {
      fz: 22 });\r

      \    mLinebreak(dt, 4);\r

      \  }\r

      }\r\n"
    sig: function bluff_present_new(dParent){}
    region: funcs (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\easy\bluff.js
    datetime: 2022-07-19-07-21
    timestamp: 1658240484131.9966
    size: 20806
  bluff_activate_new:
    name: bluff_activate_new
    code: "function bluff_activate_new() {\r

      \  let [z, A, fen, stage, uplayer, ui, dt] = [Z, Z.A, Z.fen,
      Z.stage, Z.uplayer, UI, UI.dOpenTable];\r

      \  if (stage == 1) bluff_activate_stage1(); else {
      bluff_activate_stage0(); if (is_ai_player()) ai_move(1000); }\r

      }\r\n"
    sig: function bluff_activate_new(){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_stats_new:
    name: bluff_stats_new
    code: "function bluff_stats_new(dParent) {\r

      \  let player_stat_items = UI.player_stat_items = ui_player_info(Z,
      dParent, {}, { 'border-width': 1, margin: 10, wmax: 180 });\r

      \  let fen = Z.fen;\r

      \  for (const uname of fen.plorder) {\r

      \    let pl = fen.players[uname];\r

      \    let item = player_stat_items[uname];\r

      \    let d = iDiv(item); mCenterFlex(d); mLinebreak(d);\r

      \    if (fen.turn.includes(uname)) {\r

      \      let dh = show_hourglass(uname, d, 20, { left: -4, top: 0
      });\r

      \    }\r

      \    let dhz = mDiv(d, { fg: pl.handsize == Z.options.max_handsize ?
      'yellow' : 'white' }, null, `hand: ${pl.handsize}`); mLinebreak(d);\r

      \    if (uname == fen.loser) UI.dHandsize = dhz;\r

      \    let elem = mDiv(d, { fg: uname == fen.lastbidder ? 'red' :
      'white' }, null, `${valf(pl.lastbid, ['_']).join(' ')}`);\r

      \    let szhand = getSizeNeeded(dhz);\r

      \    let sz = getSizeNeeded(elem);\r

      \    let w = Math.max(szhand.w + 20, sz.w + 20, 80);\r

      \    mStyle(d, { w: w }); \r

      \    mLinebreak(d);\r

      \  }\r

      \  return player_stat_items[Z.uplayer];\r

      }\r\n"
    sig: function bluff_stats_new(dParent){}
    region: funcs (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\easy\bluff.js
    datetime: 2022-07-19-07-21
    timestamp: 1658240484131.9966
    size: 20806
  bluff_state_new:
    name: bluff_state_new
    code: "function bluff_state_new(dParent) {\r

      \  let user_html = get_user_pic_html(Z.uplayer, 30);\r

      \  dParent.innerHTML = `Round ${Z.round}:&nbsp;player: ${user_html}
      `;\r

      }\r\n"
    sig: function bluff_state_new(dParent){}
    region: funcs (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\easy\bluff.js
    datetime: 2022-07-19-07-21
    timestamp: 1658240484131.9966
    size: 20806
  bluff_change_to_ack_round:
    name: bluff_change_to_ack_round
    code: "function bluff_change_to_ack_round(fen, nextplayer) {\r

      \  [Z.stage, Z.turn] = [1, [get_admin_player(fen.plorder)]];\r

      \  fen.keeppolling = true;\r

      \  fen.nextturn = [nextplayer]; \r

      }\r\n"
    sig: function bluff_change_to_ack_round(fen, nextplayer){}
    region: turn (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_change_to_turn_round:
    name: bluff_change_to_turn_round
    code: "function bluff_change_to_turn_round() {\r

      \  let [fen, stage] = [Z.fen, Z.stage];\r

      \  assertion(stage == 1, \"ALREADY IN TURN
      ROUND!!!!!!!!!!!!!!!!!!!!!!\");\r

      \  Z.stage = 0;\r

      \  Z.turn = fen.nextturn;\r

      \  Z.round += 1;\r

      \  for (const k of ['bidder', 'loser', 'aufheber', 'lastbid',
      'lastbidder']) delete fen[k];\r

      \  for (const k of ['nextturn', 'keeppolling']) delete fen[k];\r

      \  for (const plname of fen.plorder) { delete
      fen.players[plname].lastbid; }\r

      }\r\n"
    sig: function bluff_change_to_turn_round(){}
    region: turn (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_ack_uplayer:
    name: bluff_ack_uplayer
    code: "function bluff_ack_uplayer() {\r

      \  let [A, fen, stage, uplayer] = [Z.A, Z.fen, Z.stage,
      Z.uplayer];\r

      \  fen.players[uplayer].ack = true;\r

      \  ack_player(uplayer);\r

      }\r\n"
    sig: function bluff_ack_uplayer(){}
    region: ack (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\easy\bluff.js
    datetime: 2022-07-19-07-21
    timestamp: 1658240484131.9966
    size: 20806
  apply_skin1:
    name: apply_skin1
    code: "function apply_skin1(item) {\r

      \  let d = item.container; mCenterFlex(d); mStyle(d, { position:
      'relative', w: 400 }); \r

      \  mText(`${item.label}: <span
      style=\"font-size:20px;margin:10px;color:red\">${item.content}</span>`,
      d);\r

      \  let b = mButton(item.caption, item.handler, d, { position:
      'absolute', right: 0, top: 'calc( 50% - 12px )', h: 24 }, ['selectbutton',
      'enabled']);\r

      \  console.log('button', b)\r

      }\r\n"
    sig: function apply_skin1(item){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  apply_skin2:
    name: apply_skin2
    code: "function apply_skin2(item) {\r

      \  let d = item.container; mCenterFlex(d); mStyle(d, { position:
      'relative', w: 400 }); \r

      \  let h = 24;\r

      \  let top = `calc( 50% - ${h / 2}px )`\r

      \  mText(item.label + ':', d, { position: 'absolute', left: 0, top:
      top, h: h });\r

      \  mText(`<span
      style=\"font-size:20px;margin:10px;color:red\">${item.content}</span>`,
      d);\r

      \  item.button = mButton(item.caption, item.handler, d, { position:
      'absolute', right: 0, top: top, h: h, w: 80 }, ['selectbutton',
      'enabled']);\r

      }\r\n"
    sig: function apply_skin2(item){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  apply_skin3:
    name: apply_skin3
    code: "function apply_skin3(item) {\r

      \  let d = item.container; mCenterCenterFlex(d); mStyle(d, {
      position: 'relative', w: 400 }); \r

      \  let h = 24;\r

      \  let top = `calc( 50% - ${h / 2}px )`\r

      \  mText(item.label + ':', d, { position: 'absolute', left: 0, top:
      top, h: h });\r

      \  let panel = UI.dAnzeige = item.panel = mDiv(d, { bg: '#ffffff80',
      padding: '4px 12px', w: 200, align: 'center', rounding: 8 });\r

      \  let words = toWords(item.content)\r

      \  let panelitems = UI.panelItems = item.panelitems = [];\r

      \  for (let i = 0; i < 4; i++) {\r

      \    let text = valf(words[i], '');\r

      \    let dw = mDiv(panel, { hpadding: 4, display: 'inline', fz: 22,
      weight: 'bold', fg: 'red' }, `dbid_${i}`, text);\r

      \    panelitems.push({ div: dw, index: i, initial: text, state:
      'unselected' })\r

      \  }\r

      \  let b = item.buttonX = mDiv(panel, { fz: 10, hpadding: 4, bg:
      'white' }, null, 'CLR', 'enabled'); mPlace(b, 'tr', 2)\r

      \  b.onclick = bluff_clear_panel;\r

      \  item.button = mButton(item.caption, item.handler, d, { position:
      'absolute', right: 0, top: top, h: h, w: 80 }, ['selectbutton',
      'enabled']);\r

      }\r\n"
    sig: function apply_skin3(item){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bid_to_string:
    name: bid_to_string
    code: "function bid_to_string(bid) { return bid.join(' '); }\r\n"
    sig: function bid_to_string(bid){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_activate_stage0:
    name: bluff_activate_stage0
    code: "function bluff_activate_stage0() {\r

      \  let [z, A, fen, stage, uplayer, ui, dt] = [Z, Z.A, Z.fen,
      Z.stage, Z.uplayer, UI, UI.dOpenTable];\r

      \  if (isdef(fen.lastbid)) show(ui.currentBidItem.button);\r

      \  bluff_show_new_bid(dt);\r

      \  mLinebreak(dt, 10);\r

      \  bluff_button_panel1(dt, fen.newbid, 50);\r

      }\r\n"
    sig: function bluff_activate_stage0(){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_activate_stage1:
    name: bluff_activate_stage1
    code: "function bluff_activate_stage1() {\r

      \  let [z, A, fen, stage, uplayer, ui, dt] = [Z, Z.A, Z.fen,
      Z.stage, Z.uplayer, UI, UI.dOpenTable];\r

      \  if (isdef(DA.ack) && isdef(DA.ack[uplayer])) {
      console.log('DA.ack', DA.ack); mText('...waiting for ack', dt); return;
      }\r

      \  if (isdef(ui.dHandsize)) mPulse(ui.dHandsize, 2000);\r

      }\r\n"
    sig: function bluff_activate_stage1(){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_button_panel1:
    name: bluff_button_panel1
    code: "function bluff_button_panel1(dt, bid, sz) {\r

      \  let n = bid[0] == '_' ? 1 : Number(bid[0]);\r

      \  let arr1 = arrRange(n, n + 5);\r

      \  let arr2 = toLetters('3456789TJQKA');\r

      \  let arr3 = arrRange(0, 5);\r

      \  let arr4 = toLetters('3456789TJQKA');\r

      \  let dPanel = mDiv(dt, { gap: 5 });\r

      \  [d1, d2, d3, d4] = mColFlex(dPanel, [1, 2, 1, 2]);\r

      \  UI.dn1 = create_bluff_input1(d1, arr1, 1, sz, 0); d1.onmouseenter
      = () => iHigh(UI.panelItems[0]); d1.onmouseleave = () =>
      iUnhigh(UI.panelItems[0]);\r

      \  UI.dr1 = create_bluff_input1(d2, arr2, 2, sz, 1); d2.onmouseenter
      = () => iHigh(UI.panelItems[1]); d2.onmouseleave = () =>
      iUnhigh(UI.panelItems[1]);\r

      \  UI.dn2 = create_bluff_input1(d3, arr3, 1, sz, 2); d3.onmouseenter
      = () => iHigh(UI.panelItems[2]); d3.onmouseleave = () =>
      iUnhigh(UI.panelItems[2]);\r

      \  UI.dr2 = create_bluff_input1(d4, arr4, 2, sz, 3); d4.onmouseenter
      = () => iHigh(UI.panelItems[3]); d4.onmouseleave = () =>
      iUnhigh(UI.panelItems[3]);\r

      }\r\n"
    sig: function bluff_button_panel1(dt, bid, sz){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_clear_panel:
    name: bluff_clear_panel
    code: "function bluff_clear_panel() {\r

      \  for (const item of UI.panelItems) {\r

      \    let d = iDiv(item);\r

      \    d.innerHTML = '_';\r

      \  }\r

      \  Z.fen.newbid = ['_', '_', '_', '_'];\r

      }\r\n"
    sig: function bluff_clear_panel(){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_generate_random_bid:
    name: bluff_generate_random_bid
    code: "function bluff_generate_random_bid() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  const di2 = { _: '_', three: 3, four: 4, five: 5, six: 6, seven:
      7, eight: 8, nine: 9, ten: 'T', jack: 'J', queen: 'Q', king: 'K', ace: 'A'
      };\r

      \  let words = get_keys(di2).slice(1);\r

      \  let b = isdef(fen.lastbid) ? jsCopy(fen.lastbid) : null;\r

      \  if (isdef(b)) {\r

      \    assertion(b[0] >= (b[2] == '_' ? 0 : b[2]),
      'bluff_generate_random_bid: bid not formatted correctly!!!!!!!', b)\r

      \    let nmax = calc_reasonable_max(fen);\r

      \    let n = b[0] == '_' ? 1 : Number(b[0]);\r

      \    let done = false;\r

      \    if (n > nmax + 1) {\r

      \      const di = { '3': 'three', '4': 'four', '5': 'five', '6':
      'six', '7': 'seven', '8': 'eight', '9': 'nine', T: 'ten', J: 'jack', Q:
      'queen', K: 'king', A: 'ace' };\r

      \      let rankstr = '3456789TJQKA';\r

      \      let w1 = di2[b[1]];\r

      \      let idx = isdef(w1) ? rankstr.indexOf(w1) : -1;\r

      \      if (idx >= 0 && idx < rankstr.length - 2) {\r

      \        let r = rankstr[idx + 1];\r

      \        b[1] = di[r];\r

      \        done = true;\r

      \      }\r

      \    }\r

      \    if (!done) {\r

      \      if (b[3] == '_') { b[2] = 1; b[3] = rChoose(words, 1, x => x
      != b[1]); }\r

      \      else if (b[0] > b[2]) { b[2] += 1; } \r

      \      else { b[0] += coin(80) ? 1 : 2; if (coin()) b[2] = b[3] =
      '_'; }\r

      \    }\r

      \  } else {\r

      \    let nmax = calc_reasonable_max(fen);\r

      \    let nmin = Math.max(nmax - 1, 1);\r

      \    let arr_nmax = arrRange(1, nmax);\r

      \    let arr_nmin = arrRange(1, nmin);\r

      \    b = [rChoose(arr_nmax), rChoose(words), rChoose(arr_nmin),
      rChoose(words)];\r

      \    if (b[1] == b[3]) b[3] = rChoose(words, 1, x => x != b[1]);\r

      \    if (coin()) b[2] = b[3] = '_';\r

      \  }\r

      \  fen.newbid = b;\r

      \  UI.dAnzeige.innerHTML = bid_to_string(b);\r

      }\r\n"
    sig: function bluff_generate_random_bid(){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_reset_to_current_bid:
    name: bluff_reset_to_current_bid
    code: "function bluff_reset_to_current_bid() { onclick_reload(); }\r\n"
    sig: function bluff_reset_to_current_bid(){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_show_cards:
    name: bluff_show_cards
    code: "function bluff_show_cards(dt) {\r

      \  let [fen, ui, stage, uplayer] = [Z.fen, UI, Z.stage,
      Z.uplayer];\r

      \  let pl = fen.players[uplayer], upl = ui.players[uplayer] = {};\r

      \  mText(stage == 1 ? \"all players' cards: \" : \"player's hand:
      \", dt); mLinebreak(dt, 2);\r

      \  let cards = stage == 1 ? fen.akku : pl.hand;\r

      \  cards = sort_cards(cards, false, 'CDSH', true, '3456789TJQKA2');
      \r

      \  let hand = upl.hand = ui_type_hand(cards, dt, { hmin: 160 },
      null, '', ckey => ari_get_card(ckey, 150));\r

      \  let uname_plays = isdef(fen.players[Z.uname]);;\r

      \  let ishidden = stage == 0 && uname_plays && uplayer != Z.uname &&
      Z.mode != 'hotseat';\r

      \  if (ishidden) { hand.items.map(x => face_down(x)); }\r

      }\r\n"
    sig: function bluff_show_cards(dt){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_show_current_bid:
    name: bluff_show_current_bid
    code: "function bluff_show_current_bid(dt) {\r

      \  let fen = Z.fen;\r

      \  let bid = fen.oldbid = valf(fen.lastbid, ['_', '_', '_', '_']);\r

      \  let d = mDiv(dt);\r

      \  let content = `${bid_to_string(bid)}`;\r

      \  let item = { container: d, label: 'current bid', content:
      content, caption: 'geht hoch!', handler: handle_gehtHoch };\r

      \  apply_skin2(item);\r

      \  return item;\r

      }\r\n"
    sig: function bluff_show_current_bid(dt){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_show_new_bid:
    name: bluff_show_new_bid
    code: "function bluff_show_new_bid(dt) {\r

      \  let fen = Z.fen;\r

      \  let bid = fen.oldbid = valf(fen.lastbid, ['_', '_', '_', '_']);\r

      \  fen.newbid = jsCopy(bid); \r

      \  let d = mDiv(dt);\r

      \  let content = `${bid_to_string(bid)}`;\r

      \  let item = { container: d, label: 'YOUR bid', content: content,
      caption: 'BID', handler: handle_bid };\r

      \  apply_skin3(item);\r

      }\r\n"
    sig: function bluff_show_new_bid(dt){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  calc_reasonable_max:
    name: calc_reasonable_max
    code: "function calc_reasonable_max(fen) {\r

      \  let allcards = [];\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    allcards = allcards.concat(pl.hand);\r

      \  }\r

      \  let ncards = allcards.length;\r

      \  let nmax = Math.floor(ncards / 13) + 1;\r

      \  return nmax;\r

      }\r\n"
    sig: function calc_reasonable_max(fen){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  calc_bid_minus_cards:
    name: calc_bid_minus_cards
    code: "function calc_bid_minus_cards(fen, bid) {\r

      \  let di2 = { _: '_', three: 3, four: 4, five: 5, six: 6, seven: 7,
      eight: 8, nine: 9, ten: 'T', jack: 'J', queen: 'Q', king: 'K', ace: 'A'
      };\r

      \  let di_ranks = aggregate_player_hands_by_rank(fen);\r

      \  let [brauch1, r1, brauch2, r2] = bid;\r

      \  [r1, r2] = [di2[r1], di2[r2]];\r

      \  if (brauch1 == '_') brauch1 = 0;\r

      \  if (brauch2 == '_') brauch2 = 0;\r

      \  let hab1 = valf(di_ranks[r1], 0);\r

      \  let hab2 = valf(di_ranks[r2], 0);\r

      \  let wildcards = valf(di_ranks['2'], 0);\r

      \  let diff1 = Math.max(0, brauch1 - hab1);\r

      \  let diff2 = Math.max(0, brauch2 - hab2);\r

      \  return diff1 + diff2 - wildcards;\r

      }\r\n"
    sig: function calc_bid_minus_cards(fen, bid){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  create_bluff_input1:
    name: create_bluff_input1
    code: "function create_bluff_input1(dParent, arr, units = 1, sz, index) {\r

      \  let d = mDiv(dParent, { gap: 5, w: units * sz * 1.35 });
      mCenterFlex(d);\r

      \  for (const a of arr) {\r

      \    let da = mDiv(d, { align: 'center', wmin: 20, padding: 4,
      cursor: 'pointer', rounding: 4, bg: units == 1 ? '#e4914b' : 'sienna', fg:
      'contrast' }, null, a == 'T' ? '10' : a); \r

      \    da.onclick = () => input_to_anzeige1(a, index);\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function create_bluff_input1(dParent, arr, units = 1, sz, index){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  handle_gehtHoch:
    name: handle_gehtHoch
    code: "function handle_gehtHoch() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  let [bid, bidder] = [fen.lastbid, fen.lastbidder];\r

      \  let diff = calc_bid_minus_cards(fen, bid); \r

      \  let aufheber = uplayer;\r

      \  let loser = diff > 0 ? bidder : aufheber;\r

      \  let war_drin = fen.war_drin = diff <= 0;\r

      \  let loser_handsize = inc_handsize(fen, loser);\r

      \  new_deal(fen);\r

      \  let nextplayer;\r

      \  if (loser_handsize > Z.options.max_handsize) {\r

      \    nextplayer = get_next_player(Z, loser)\r

      \    let plorder = fen.plorder = remove_player(fen, loser);\r

      \  } else {\r

      \    nextplayer = loser;\r

      \  }\r

      \  fen.loser = loser; fen.bidder = bidder; fen.aufheber =
      aufheber;\r

      \  bluff_change_to_ack_round(fen, nextplayer);\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function handle_gehtHoch(){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  handle_bid:
    name: handle_bid
    code: "function handle_bid() {\r

      \  let [z, A, fen, uplayer, ui] = [Z, Z.A, Z.fen, Z.uplayer, UI];\r

      \  let oldbid = jsCopy(fen.oldbid);\r

      \  let bid = jsCopy(fen.newbid);\r

      \  let ranks = '23456789TJQKA';\r

      \  bid = normalize_bid(bid);\r

      \  let higher = is_bid_higher_than(bid, oldbid);\r

      \  if (bid[2] == 0) bid[2] = '_';\r

      \  if (!higher) {\r

      \    select_error('the bid you entered is not high enough!');\r

      \  } else {\r

      \    fen.lastbid = fen.players[uplayer].lastbid = bid; \r

      \    fen.lastbidder = uplayer;\r

      \    delete fen.oldbid; delete fen.newbid;\r

      \    Z.turn = [get_next_player(Z, uplayer)];\r

      \    take_turn_fen();\r

      \  }\r

      }\r\n"
    sig: function handle_bid(){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  iHigh:
    name: iHigh
    code: "function iHigh(item) { let d = iDiv(item); mStyle(d, { bg: 'darkgray' });
      }\r\n"
    sig: function iHigh(item){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  iUnhigh:
    name: iUnhigh
    code: "function iUnhigh(item) { let d = iDiv(item); mStyle(d, { bg:
      'transparent' }); }\r\n"
    sig: function iUnhigh(item){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  inc_handsize:
    name: inc_handsize
    code: "function inc_handsize(fen, uname) {\r

      \  let pl = fen.players[uname];\r

      \  pl.handsize = Number(pl.handsize) + 1;\r

      \  return pl.handsize;\r

      }\r\n"
    sig: function inc_handsize(fen, uname){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  input_to_anzeige1:
    name: input_to_anzeige1
    code: "function input_to_anzeige1(caption, index) {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  const di = { '3': 'three', '4': 'four', '5': 'five', '6': 'six',
      '7': 'seven', '8': 'eight', '9': 'nine', T: 'ten', J: 'jack', Q: 'queen',
      K: 'king', A: 'ace' };\r

      \  let bid = fen.newbid;\r

      \  if (index == 0) {\r

      \    bid[0] = Number(caption);\r

      \    if (bid[0] == 0) {\r

      \      bid[0] = '_'; bid[1] = '_';\r

      \    } else if (bid[1] == '_') {\r

      \      let hand = fen.players[uplayer].hand;\r

      \      let c1 = arrLast(hand); \r

      \      let r = c1[0];\r

      \      if (r == '2') r = bid[3] == 'ace' ? 'K' : 'A';\r

      \      if (di[r] == bid[3]) bid[1] = bid[3] == 'three' ? 'four' :
      'three'; else bid[1] = di[r];\r

      \    }\r

      \  } else if (index == 1) {\r

      \    bid[1] = di[caption];\r

      \    if (bid[0] == '_') bid[0] = 1;\r

      \    if (bid[3] == bid[1]) { bid[0] = bid[0] + bid[2]; bid[2] =
      bid[3] = '_'; }\r

      \  } else if (index == 2) {\r

      \    bid[2] = Number(caption);\r

      \    if (bid[2] == 0) {\r

      \      bid[2] = '_'; bid[3] = '_';\r

      \    } else if (bid[3] == '_') {\r

      \      let hand = fen.players[uplayer].hand;\r

      \      let c1 = hand[0];\r

      \      let r = c1[0];\r

      \      if (r == '2') r = bid[1] == 'ace' ? 'K' : 'A';\r

      \      if (di[r] == bid[1]) bid[3] = bid[1] == 'three' ? 'four' :
      'three'; else bid[3] = di[r];\r

      \    }\r

      \  } else {\r

      \    bid[3] = di[caption];\r

      \    if (bid[2] == '_') bid[2] = 1;\r

      \    if (bid[3] == bid[1]) { bid[0] = bid[0] + bid[2]; bid[1] =
      bid[3]; bid[2] = bid[3] = '_'; }\r

      \  }\r

      \  for (let i = 0; i < 4; i++)  iDiv(UI.panelItems[i]).innerHTML =
      bid[i];\r

      }\r\n"
    sig: function input_to_anzeige1(caption, index){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  is_higher_ranked_name:
    name: is_higher_ranked_name
    code: "function is_higher_ranked_name(f1, f2) {\r

      \  let di2 = { _: 0, three: 3, four: 4, five: 5, six: 6, seven: 7,
      eight: 8, nine: 9, ten: 10, jack: 11, queen: 12, king: 13, ace: 14 };\r

      \  return di2[f1] > di2[f2];\r

      }\r\n"
    sig: function is_higher_ranked_name(f1, f2){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  new_deal:
    name: new_deal
    code: "function new_deal(fen) {\r

      \  let deck = fen.deck = create_fen_deck('n', fen.num_decks);\r

      \  shuffle(deck);\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    let handsize = pl.handsize;\r

      \    pl.hand = deck_deal(deck, handsize);\r

      \  }\r

      }\r\n"
    sig: function new_deal(fen){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  start_simple_ack_round:
    name: start_simple_ack_round
    code: "function
      start_simple_ack_round(ackstage,ack_players,nextplayer,callbackname_after\
      _ack,keeppolling=false) {\r

      \  let fen = Z.fen;\r

      \  fen.ack_players = ack_players;\r

      \  fen.lastplayer = arrLast(ack_players);\r

      \  fen.nextplayer = nextplayer; \r

      \  fen.turn_after_ack = [nextplayer];\r

      \  fen.callbackname_after_ack = callbackname_after_ack;\r

      \  fen.keeppolling = keeppolling;\r

      \  Z.stage = ackstage;\r

      \  Z.turn = [ack_players[0]];\r

      }\r\n"
    sig: function
      start_simple_ack_round(ackstage,ack_players,nextplayer,callbackname_after_ack,keeppolling=false){}
    region: ack (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\easy\start.js
    datetime: 2022-07-19-14-04
    timestamp: 1658264674358.299
    size: 12459
  ack_player:
    name: ack_player
    code: "function ack_player(plname){\r

      \  let [fen, uplayer, pl] = [Z.fen, Z.uplayer,
      Z.fen.players[Z.uplayer]];\r

      \  assertion(sameList(Z.turn,[plname]), \"ack_player: wrong
      turn\");\r

      \  if (plname == fen.lastplayer ||
      fen.players[uplayer].buy==true){\r

      \    let func = window[fen.callbackname_after_ack];\r

      \    if (isdef(func)) func();\r

      \  } else{\r

      \    Z.turn = [get_next_in_list(plname,fen.ack_players)];\r

      \  }\r

      \  turn_send_move_update();\r

      }\r\n"
    sig: function ack_player(plname){}
    region: ack (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\easy\start.js
    datetime: 2022-07-19-14-04
    timestamp: 1658264674358.299
    size: 12459
  clear_ack_variables:
    name: clear_ack_variables
    code: "function clear_ack_variables(){\r

      \  let [fen, uplayer, pl] = [Z.fen, Z.uplayer,
      Z.fen.players[Z.uplayer]];\r

      \  delete fen.ack_players;\r

      \  delete fen.lastplayer;\r

      \  delete fen.nextplayer;\r

      \  delete fen.turn_after_ack;\r

      \  delete fen.ackstage;\r

      \  delete fen.callbackname_after_ack;\r

      \  delete fen.keeppolling;\r

      }\r\n"
    sig: function clear_ack_variables(){}
    region: ack (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\easy\start.js
    datetime: 2022-07-19-14-04
    timestamp: 1658264674358.299
    size: 12459
  clear_screen:
    name: clear_screen
    code: "function clear_screen() { mShieldsOff(); clear_status(); clear_title();
      for (const ch of arrChildren('dScreen')) mClear(ch);
      mClassRemove('dTexture', 'wood'); mStyle(document.body, { bg: 'white', fg:
      'black' }); }\r\n"
    sig: function clear_screen(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  is_human_player:
    name: is_human_player
    code: "function is_human_player(plname) {\r

      \  let [fen, name] = [Z.fen, valf(plname, Z.uplayer)];\r

      \  return lookup(fen, ['players', name, 'playmode']) == 'human';\r

      }\r\n"
    sig: function is_human_player(plname){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  is_current_player_bot:
    name: is_current_player_bot
    code: "function is_current_player_bot() {\r

      \  let [fen, uplayer, turn] = [Z.fen, Z.uplayer, Z.turn];\r

      \  let curplayer = Z.turn[0];\r

      \  if (fen.players[curplayer].playmode == 'bot') return true; else
      return false;\r

      }\r\n"
    sig: function is_current_player_bot(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  STOPP:
    name: STOPP
    code: "function STOPP() { stopgame(); clear_screen(); assertion(Z == null,
      \"ZZZZZZZZZZ NOT NULL\") }\r\n"
    sig: function STOPP(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\easy\start.js
    datetime: 2022-07-19-14-04
    timestamp: 1658264674358.299
    size: 12459
  a_game:
    name: a_game
    code: "function a_game() {\r

      \  function state_info(dParent) { dParent.innerHTML = `turn:
      ${Z.turn}, stage:${Z.stage}`; } \r

      \  function setup(players, options) {\r

      \    let fen = { players: {}, plorder: jsCopy(players), history: []
      };\r

      \    shuffle(fen.plorder);\r

      \    let starter = fen.starter = fen.plorder[0];\r

      \    let cards_needed = players.length * options.handsize * 1.4;\r

      \    fen.num_decks = Math.ceil(cards_needed / 52); \r

      \    fen.deck = create_fen_deck('n', fen.num_decks, 0);\r

      \    shuffle(fen.deck);\r

      \    let [i, n, diff] = [0, players.length, get_slot_diff(fen)];\r

      \    for (const plname of players) {\r

      \      let pl = fen.players[plname] = {\r

      \        hand: deck_deal(fen.deck, options.handsize),\r

      \        score: 0,\r

      \        name: plname,\r

      \        color: get_user_color(plname),\r

      \        slot: diff * i,\r

      \      };\r

      \      i++;\r

      \    }\r

      \    [fen.phase, fen.stage, fen.step, fen.turn] = ['', 'click', 0,
      [starter]];\r

      \    return fen;\r

      \  }\r

      \  function present() { present_a_game(); } \r

      \  function check_gameover() { return false; }\r

      \  function activate_ui() {\r

      \    activate_a_game();\r

      \  }\r

      \  function post_collect() { agmove_resolve(); } \r

      \  return { post_collect, state_info, setup, present,
      check_gameover, activate_ui };\r

      }\r\n"
    sig: function a_game(){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  present_a_game:
    name: present_a_game
    code: "function present_a_game() {\r

      \  let [fen, uplayer, pl] = [Z.fen, Z.uplayer, Z.pl];\r

      \  UI.hand = ui_type_hand(pl.hand, dTable, { margin: 20 });\r

      }\r\n"
    sig: function present_a_game(){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  activate_a_game:
    name: activate_a_game
    code: "function activate_a_game() {\r

      \  if (Z.stage == 'click') {\r

      \    show_MMM('back to normal!!!!');\r

      \    mButton('single turn move', agmove_single, dTable, { margin: 20
      });\r

      \    mButton('clear players', agmove_clear_all, dTable, { margin: 20
      });\r

      \    mButton('clear first', agmove_clear_first, dTable, { margin: 20
      });\r

      \  } else if (Z.stage == 'clear') {\r

      \    agmove_startmulti();\r

      \  } else {\r

      \    mButton('indiv move', agmove_indiv, dTable, { margin: 20 });\r

      \  }\r

      }\r\n"
    sig: function activate_a_game(){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  autosend:
    name: autosend
    code: "function autosend(plname, slot) {\r

      \  Z.uplayer = plname;\r

      \  take_turn_collect_open();\r

      }\r\n"
    sig: function autosend(plname, slot){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  felix_sends_timed_move_at_mimi_slot:
    name: felix_sends_timed_move_at_mimi_slot
    code: "function felix_sends_timed_move_at_mimi_slot() {\r

      \  let [fen, pl] = [Z.fen, Z.pl];\r

      \  let slot = fen.players.mimi.slot;\r

      \  slot = busy_wait_until_slot(slot);\r

      }\r\n"
    sig: function felix_sends_timed_move_at_mimi_slot(){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  agmove_single:
    name: agmove_single
    code: "function agmove_single() {\r

      \  if (Z.pl.hand.length > 2) removeInPlace(Z.pl.hand,
      Z.pl.hand[0]);\r

      \  Z.turn = [get_next_player(Z, Z.uplayer)];\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function agmove_single(){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  agmove_startmulti:
    name: agmove_startmulti
    code: "function agmove_startmulti() { Z.stage = 'multi'; Z.turn =
      Z.plorder;[Z.fen.stage_after_multi, Z.fen.turn_after_multi] = ['click',
      [rChoose(Z.plorder)]]; take_turn_fen(); }\r\n"
    sig: function agmove_startmulti(){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  agmove_indiv:
    name: agmove_indiv
    code: "function agmove_indiv(plname, slot) {\r

      \  if (isDict(plname) && Z.uplayer != 'mimi') return; \r

      \  if (isString(plname)) Z.uplayer = plname;\r

      \  console.log('sender:', Z.uplayer);\r

      \  let pl = Z.fen.players[Z.uplayer];\r

      \  Z.state = { val: pl.hand[0] };\r

      \  if (nundef(slot)) slot = busy_wait_until_slot(pl.slot);\r

      \  console.log('time sending:', slot, Date.now());\r

      \  take_turn_collect_open();\r

      \  if (plname != 'felix') agmove_indiv('felix', pl.slot);\r

      }\r\n"
    sig: function agmove_indiv(plname, slot){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  agmove_resolve:
    name: agmove_resolve
    code: "function agmove_resolve() {\r

      \  console.log('---------------------- RESOLVE
      ----------------------');\r

      \  assertion(isdef(Z.playerdata), 'no playerdata');\r

      \  assertion(Z.uplayer == Z.fen.acting_host, 'wrong player
      resolves!!!!', Z.uplayer);\r

      \  let [fen, uplayer, pl, pldata] = [Z.fen, Z.uplayer, Z.pl,
      Z.playerdata];\r

      \  fen.collection = [];\r

      \  for (const data of pldata) {\r

      \    fen.collection.push({ name: data.name, state: data.state });\r

      \  }\r

      \  console.log('players selected the following cards:',
      fen.collection);\r

      \  [Z.stage, Z.turn] = [Z.fen.stage_after_multi,
      Z.fen.turn_after_multi];\r

      \  take_turn_resolve('single');\r

      }\r\n"
    sig: function agmove_resolve(){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  busy_wait_until_slot:
    name: busy_wait_until_slot
    code: "function busy_wait_until_slot(slot) {\r

      \  let diff = get_slot_diff(Z.fen);\r

      \  let dd;\r

      \  do {\r

      \    dd = last_n_digits(Date.now(), 2);\r

      \    if (dd >= slot && dd <= slot + diff) { break; }\r

      \  } while (true);\r

      \  return dd;\r

      }\r\n"
    sig: function busy_wait_until_slot(slot){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  last_n_digits:
    name: last_n_digits
    code: "function last_n_digits(number, n = 2) {\r

      \  return number % Math.pow(10, n);\r

      }\r\n"
    sig: function last_n_digits(number, n = 2){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  get_now_milliseconds:
    name: get_now_milliseconds
    code: "function get_now_milliseconds() {\r

      \  return Date.now();\r

      }\r\n"
    sig: function get_now_milliseconds(){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  get_slot_diff:
    name: get_slot_diff
    code: "function get_slot_diff(fen) { return Math.floor(100 /
      fen.plorder.length); }\r\n"
    sig: function get_slot_diff(fen){}
    region: var (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  agmove_clear_all:
    name: agmove_clear_all
    code: "function agmove_clear_all() { Z.stage = 'clear'; Z.fen.endcond = 'all';
      Z.fen.acting_host = Z.uplayer; Z.turn = [Z.uplayer]; take_turn_clear();
      }\r\n"
    sig: function agmove_clear_all(){}
    region: removed (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  agmove_clear_first:
    name: agmove_clear_first
    code: "function agmove_clear_first() { Z.stage = 'clear'; Z.fen.endcond =
      'first'; Z.fen.acting_host = Z.uplayer; Z.turn = [Z.uplayer];
      take_turn_clear(); }\r\n"
    sig: function agmove_clear_first(){}
    region: removed (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  agmove_clear_turn:
    name: agmove_clear_turn
    code: "function agmove_clear_turn() { Z.stage = 'clear'; Z.fen.endcond = 'turn';
      Z.fen.acting_host = Z.uplayer; Z.turn = [Z.uplayer]; take_turn_clear();
      }\r\n"
    sig: function agmove_clear_turn(){}
    region: removed (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  take_turn_clear:
    name: take_turn_clear
    code: "function take_turn_clear() {\r

      \  prep_move();\r

      \  let o = { uname: Z.uplayer, friendly: Z.friendly, fen: Z.fen,
      players: Z.playerlist };\r

      \  let cmd = 'clear';\r

      \  send_or_sim(o, cmd);\r

      }\r\n"
    sig: function take_turn_clear(){}
    region: removed (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  take_turn_collect_open:
    name: take_turn_collect_open
    code: "function take_turn_collect_open() {\r

      \  prep_move();\r

      \  let o = { uname: Z.uplayer, friendly: Z.friendly, fen: Z.fen,
      state: Z.state, write_player: true };\r

      \  let cmd = 'table';\r

      \  send_or_sim(o, cmd);\r

      }\r\n"
    sig: function take_turn_collect_open(){}
    region: removed (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  take_turn_resolve:
    name: take_turn_resolve
    code: "function take_turn_resolve(notes) {\r

      \  prep_move();\r

      \  let o = { uname: Z.uplayer, friendly: Z.friendly, fen: Z.fen,
      write_fen: true, write_notes: notes };\r

      \  let cmd = 'table';\r

      \  send_or_sim(o, cmd);\r

      }\r\n"
    sig: function take_turn_resolve(notes){}
    region: removed (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  take_turn_ack:
    name: take_turn_ack
    code: "function take_turn_ack() {\r

      \  prep_move();\r

      \  let o = { uname: Z.uplayer, friendly: Z.friendly, fen: Z.fen,
      state: { ack: true }, write_player: true };\r

      \  let cmd = 'table';\r

      \  send_or_sim(o, cmd);\r

      }\r\n"
    sig: function take_turn_ack(){}
    region: removed (a_game.js)
    filename: a_game.js
    type: func
    fname: a_game.js
    path: C:\xampp\htdocs\aroot\games\a_game.js
    datetime: 2022-07-29-12-44
    timestamp: 1659123890137.3545
    size: 5704
  ferro:
    name: ferro
    code: "function ferro() {\r

      \  const rankstr = '23456789TJQKA*';\r

      \  function setup(players, options) {\r

      \    let fen = { players: {}, plorder: jsCopy(players), history: []
      };\r

      \    options.jokers_per_group = 1;\r

      \    fen.allGoals = ['7R', '55', '5', '44', '4', '33', '3'];\r

      \    fen.availableGoals = options.maxrounds == 1 ?
      [rChoose(fen.allGoals)] : options.maxrounds < 7 ? rChoose(fen.allGoals,
      options.maxrounds) : fen.allGoals;\r

      \    fen.availableGoals.sort((a, b) => fen.allGoals.indexOf(a) -
      fen.allGoals.indexOf(b)); \r

      \    fen.roundGoals = arrReverse(fen.availableGoals); \r

      \    let n = players.length;\r

      \    let num_decks = fen.num_decks = 2 + (n >= 9 ? 2 : n >= 7 ? 1 :
      0); \r

      \    let deck = fen.deck = create_fen_deck('n', num_decks, 4 *
      num_decks);\r

      \    let deck_discard = fen.deck_discard = [];\r

      \    shuffle(deck);\r

      \    if (DA.TESTING != true) {
      shuffle(fen.plorder);shuffle(fen.plorder); } \r

      \    let starter = fen.plorder[0];\r

      \    let handsize = valf(Number(options.handsize), 11);\r

      \    for (const plname of players) {\r

      \      let pl = fen.players[plname] = {\r

      \        hand: deck_deal(deck, plname == starter ? handsize + 1 :
      handsize),\r

      \        journeys: [],\r

      \        roundgoal: false,\r

      \        coins: options.coins, \r

      \        vps: 0,\r

      \        score: 0,\r

      \        name: plname,\r

      \        color: get_user_color(plname),\r

      \      };\r

      \      pl.goals = {};\r

      \      for (const g of fen.availableGoals) { pl.goals[g] = 0; }\r

      \    }\r

      \    fen.phase = ''; \r

      \    [fen.stage, fen.turn] = ['card_selection', [starter]];\r

      \    return fen;\r

      \  }\r

      \  function activate_ui() { ferro_activate_ui(); }\r

      \  function check_gameover() { return isdef(Z.fen.winners) ?
      Z.fen.winners : false; }\r

      \  function clear_ack() {\r

      \    if (Z.stage == 'round_end') { start_new_round_ferro();
      take_turn_fen(); }\r

      \    else if (Z.stage != 'card_selection') {\r

      \      for (const plname of Z.fen.canbuy) {\r

      \        let pldata = firstCond(Z.playerdata, x => x.name ==
      plname);\r

      \        if (isdef(pldata) && lookup(pldata, ['state', 'buy']) ==
      true) {\r

      \          Z.fen.buyer = plname;\r

      \          break;\r

      \        }\r

      \      }\r

      \      Z.stage = 'can_resolve';\r

      \      ferro_change_to_card_selection();\r

      \    }\r

      \  }\r

      \  function present(dParent) { ferro_present(dParent); }\r

      \  function stats(dParent) { ferro_stats(dParent); }\r

      \  function state_info(dParent) { ferro_state(dParent); }\r

      \  return { rankstr, setup, activate_ui, check_gameover, clear_ack,
      present, state_info, stats };\r

      }\r\n"
    sig: function ferro(){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_pre_action:
    name: ferro_pre_action
    code: "function ferro_pre_action() {\r

      \  let [stage, A, fen, plorder, uplayer, deck] = [Z.stage, Z.A,
      Z.fen, Z.plorder, Z.uplayer, Z.deck];\r

      \  switch (stage) {\r

      \    case 'can_resolve': if (Z.options.auto_weiter)
      ferro_change_to_card_selection(); else {
      select_add_items(ui_get_string_items(['weiter']),
      ferro_change_to_card_selection, 'may click to continue', 1, 1, Z.mode ==
      'multi'); select_timer(2000, ferro_change_to_card_selection); } break;\r

      \    case 'buy_or_pass': if (!is_playerdata_set(uplayer)) {
      select_add_items(ui_get_buy_or_pass_items(), ferro_ack_uplayer, 'may click
      discard pile to buy or pass', 1, 1); if (uplayer != 'nasi')
      select_timer(Z.options.thinking_time * 1000, ferro_ack_uplayer); }
      break;\r

      \    case 'card_selection':
      select_add_items(ui_get_ferro_items(uplayer), fp_card_selection, 'must
      select one or more cards', 1, 100); break;\r

      \    default: console.log('stage is', stage); break;\r

      \  }\r

      }\r\n"
    sig: function ferro_pre_action(){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_present_new:
    name: ferro_present_new
    code: "function ferro_present_new(z, dParent, uplayer) {\r

      \  let [fen, ui, stage] = [z.fen, UI, z.stage];\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent);\r

      \  ferro_stats_new(z, dRechts);\r

      \  show_history(fen, dRechts);\r

      \  let deck = ui.deck = ui_type_deck(fen.deck, dOpenTable, { maleft:
      12 }, 'deck', 'deck', ferro_get_card);\r

      \  let deck_discard = ui.deck_discard =
      ui_type_deck(fen.deck_discard, dOpenTable, { maleft: 12 }, 'deck_discard',
      '', ferro_get_card);\r

      \  if (!isEmpty(deck_discard.items))
      face_up(deck_discard.get_topcard());\r

      \  let uname_plays = fen.plorder.includes(Z.uname);\r

      \  let show_first = uname_plays && Z.mode == 'multi' ? Z.uname :
      uplayer;\r

      \  order = arrCycle(fen.plorder, fen.plorder.indexOf(show_first));\r

      \  for (const plname of order) {\r

      \    let pl = fen.players[plname];\r

      \    let playerstyles = { w: '100%', bg: '#ffffff80', fg: 'black',
      padding: 4, margin: 4, rounding: 10, border: `2px
      ${get_user_color(plname)} solid` };\r

      \    let d = mDiv(dMiddle, playerstyles, null,
      get_user_pic_html(plname, 25));\r

      \    mFlexWrap(d);\r

      \    mLinebreak(d, 10);\r

      \    let hidden = compute_hidden(plname);\r

      \    ferro_present_player_new(z, plname, d, hidden);\r

      \  }\r

      }\r\n"
    sig: function ferro_present_new(z, dParent, uplayer){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ferro_present_player_new:
    name: ferro_present_player_new
    code: "function ferro_present_player_new(g, plname, d, ishidden = false) {\r

      \  let fen = g.fen;\r

      \  let pl = fen.players[plname];\r

      \  let ui = UI.players[plname] = { div: d };\r

      \  Config.ui.card.h = ishidden ? 100 : 150;\r

      \  Config.ui.container.h = Config.ui.card.h + 30;\r

      \  if (isdef(pl.handsorting)) {\r

      \    let bysuit = pl.handsorting.by == 'suit';\r

      \    let [arr1, arr2] = arrSplitAtIndex(pl.hand, pl.handsorting.n -
      1);\r

      \    pl.hand = sort_cards(arr1, bysuit, 'CDSH', true,
      '23456789TJQKA*').concat(arr2);\r

      \  }\r

      \  let hand = ui.hand = ui_type_hand(pl.hand, d, {},
      `players.${plname}.hand`, 'hand', ferro_get_card);\r

      \  if (ishidden) { hand.items.map(x => face_down(x)); }\r

      \  else {\r

      \    ensure_buttons_visible_for(Z.mode == 'hotseat' ? Z.uplayer :
      Z.uname);\r

      \  }\r

      \  ui.journeys = [];\r

      \  let i = 0;\r

      \  for (const j of pl.journeys) {\r

      \    let jui = ui_type_lead_hand(j, d, { maleft: 12, h: 130 },
      `players.${plname}.journeys.${i}`, '', ferro_get_card);\r

      \    i += 1;\r

      \    ui.journeys.push(jui);\r

      \  }\r

      }\r\n"
    sig: function ferro_present_player_new(g, plname, d, ishidden = false){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ferro_activate_ui:
    name: ferro_activate_ui
    code: "function ferro_activate_ui() { ferro_pre_action(); }\r\n"
    sig: function ferro_activate_ui(){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_state_new:
    name: ferro_state_new
    code: "function ferro_state_new(dParent) {\r

      \  if (is_fixed_goal()) {\r

      \    let goal = get_round_goal();\r

      \    let goal_html = `<div
      style=\"font-weight:bold;border-radius:50%;background:white;color:red;lin\
      e-height:100%;padding:4px 8px\">${goal}</div>`;\r

      \    dParent.innerHTML = `Round
      ${Z.round}:&nbsp;&nbsp;minimum:&nbsp;${goal_html}`;\r

      \  } else {\r

      \    let user_html = get_user_pic_html(Z.stage == 'buy_or_pass' ?
      Z.fen.turn_after_ack[0] : Z.turn[0], 30);\r

      \    dParent.innerHTML = `Round ${Z.round}:&nbsp;${Z.stage ==
      'buy_or_pass' ? 'next ' : ''}turn: ${user_html} `;\r

      \  }\r

      }\r\n"
    sig: function ferro_state_new(dParent){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ferro_stats_new:
    name: ferro_stats_new
    code: "function ferro_stats_new(z, dParent) {\r

      \  let player_stat_items = UI.player_stat_items = ui_player_info(z,
      dParent);\r

      \  let fen = z.fen;\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    let item = player_stat_items[plname];\r

      \    let d = iDiv(item); mCenterFlex(d); mLinebreak(d);\r

      \    player_stat_count('coin', pl.coins, d);\r

      \    player_stat_count('pinching hand', pl.hand.length, d);\r

      \    if (!compute_hidden(plname)) player_stat_count('hand with
      fingers splayed', calc_hand_value(pl.hand), d);\r

      \    player_stat_count('star', pl.score, d);\r

      \    mLinebreak(d, 4);\r

      \    if (!is_fixed_goal()) {\r

      \      let d2 = mDiv(d, { padding: 4, display: 'flex' },
      `d_${plname}_goals`);\r

      \      let sz = 16;\r

      \      let styles_done = { h: sz, fz: sz, maleft: 6, fg: 'grey',
      'text-decoration': 'line-through green', weight: 'bold' };\r

      \      let styles_todo = { h: sz, fz: sz, maleft: 6, border: 'red',
      weight: 'bold', padding: 4, 'line-height': sz }; \r

      \      for (const k in pl.goals) {\r

      \        mText(k, d2, pl.goals[k] ? styles_done : styles_todo);\r

      \      }\r

      \    }\r

      \    if (fen.turn.includes(plname)) { show_hourglass(plname, d, 30,
      { left: -3, top: 0 }); }\r

      \  }\r

      }\r\n"
    sig: function ferro_stats_new(z, dParent){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ferro_change_to_ack_round:
    name: ferro_change_to_ack_round
    code: "function ferro_change_to_ack_round() {\r

      \  let [plorder, stage, A, fen, uplayer] = [Z.plorder, Z.stage, Z.A,
      Z.fen, Z.uplayer];\r

      \  let nextplayer = get_next_player(Z, uplayer); \r

      \  let newturn = jsCopy(plorder); while (newturn[0] != nextplayer) {
      newturn = arrCycle(newturn, 1); } \r

      \  let buyerlist = fen.canbuy = []; \r

      \  for (const plname of newturn) {\r

      \    let pl = fen.players[plname];\r

      \    if (plname == uplayer) { pl.buy = false; continue; }\r

      \    else if (pl.coins > 0) { pl.buy = false;
      buyerlist.push(plname); }\r

      \  }\r

      \  start_simple_ack_round('buy_or_pass', buyerlist, nextplayer,
      'ferro_change_to_turn_round');\r

      }\r\n"
    sig: function ferro_change_to_ack_round(){}
    region: ack (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ferro_change_to_turn_round:
    name: ferro_change_to_turn_round
    code: "function ferro_change_to_turn_round() {\r

      \  let [z, A, fen, stage, uplayer, ui] = [Z, Z.A, Z.fen, Z.stage,
      Z.uplayer, UI];\r

      \  assertion(stage == 'buy_or_pass', \"ALREADY IN TURN
      ROUND!!!!!!!!!!!!!!!!!!!!!!\");\r

      \  for (const plname of fen.canbuy) {\r

      \    let pl = fen.players[plname];\r

      \    if (pl.buy == true) {\r

      \      let card = fen.deck_discard.shift();\r

      \      pl.hand.push(card);\r

      \      deck_deal_safe_ferro(fen, plname, 1);\r

      \      pl.coins -= 1; \r

      \      ari_history_list([`${plname} bought ${card}`], 'buy');\r

      \      break;\r

      \    }\r

      \  }\r

      \  deck_deal_safe_ferro(fen, fen.nextplayer, 1); \r

      \  Z.turn = fen.turn_after_ack;\r

      \  Z.stage = 'card_selection';\r

      \  clear_ack_variables();\r

      \  for (const k of ['canbuy']) delete fen[k];\r

      \  for (const plname of fen.plorder) { delete
      fen.players[plname].buy; }\r

      \  clear_transaction();\r

      }\r\n"
    sig: function ferro_change_to_turn_round(){}
    region: ack (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ferro_ack_uplayer:
    name: ferro_ack_uplayer
    code: "function ferro_ack_uplayer() { if (Z.mode == 'multi') {
      ferro_ack_uplayer_multi(); } else { ferro_ack_uplayer_hotseat(); } }\r\n"
    sig: function ferro_ack_uplayer(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  calc_ferro_score:
    name: calc_ferro_score
    code: "function calc_ferro_score(roundwinner) {\r

      \  let [round, plorder, stage, A, fen, uplayer] = [Z.round,
      Z.plorder, Z.stage, Z.A, Z.fen, Z.uplayer];\r

      \  assertion(roundwinner == uplayer, '_calc_ferro_score: roundwinner
      != uplayer');\r

      \  for (const plname of plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.newcards = [];\r

      \    if (nundef(pl.score)) pl.score = 0;\r

      \    if (uplayer == plname) pl.score -= round * 5;\r

      \    else pl.score += calc_hand_value(pl.hand);\r

      \  }\r

      }\r\n"
    sig: function calc_ferro_score(roundwinner){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  calc_ferro_highest_goal_achieved:
    name: calc_ferro_highest_goal_achieved
    code: "function calc_ferro_highest_goal_achieved(pl) {\r

      \  let jsorted = jsCopy(pl.journeys).sort((a, b) => b.length -
      a.length);\r

      \  let di = {\r

      \    '3': jsorted.length > 0 && is_group(jsorted[0]) &&
      jsorted[0].length >= 3,\r

      \    '33': jsorted.length > 1 && is_group(jsorted[0]) &&
      jsorted[0].length >= 3\r

      \      && is_group(jsorted[1]) && jsorted[1].length >= 3,\r

      \    '4': jsorted.length > 0 && is_group(jsorted[0]) &&
      jsorted[0].length >= 4,\r

      \    '44': jsorted.length > 1 && is_group(jsorted[0]) &&
      jsorted[0].length >= 4\r

      \      && is_group(jsorted[1]) && jsorted[1].length >= 4,\r

      \    '5': jsorted.length > 0 && is_group(jsorted[0]) &&
      jsorted[0].length >= 5,\r

      \    '55': jsorted.length > 1 && is_group(jsorted[0]) &&
      jsorted[0].length >= 5\r

      \      && is_group(jsorted[1]) && jsorted[1].length >= 5,\r

      \    '7R': jsorted.length > 0 && is_sequence(jsorted[0]) &&
      jsorted[0].length >= 7,\r

      \  };\r

      \  for (const k of Z.fen.availableGoals) { \r

      \    if (pl.goals[k]) {\r

      \      console.log('player', pl.name, 'already achieved goal', k);\r

      \      continue;\r

      \    }\r

      \    let achieved = di[k];\r

      \    if (achieved) {\r

      \      return k;\r

      \    }\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function calc_ferro_highest_goal_achieved(pl){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  deck_deal_safe_ferro:
    name: deck_deal_safe_ferro
    code: "function deck_deal_safe_ferro(fen, plname, n) {\r

      \  if (fen.deck.length < n) {\r

      \    fen.deck = fen.deck.concat(fen.deck_discard.reverse());\r

      \    fen.deck_discard = [];\r

      \  }\r

      \  let new_cards = deck_deal(fen.deck, n);\r

      \  fen.players[plname].hand.push(...new_cards);\r

      \  new_cards.map(x => lookupAddToList(fen.players[plname],
      ['newcards'], x));\r

      \  return new_cards;\r

      }\r\n"
    sig: function deck_deal_safe_ferro(fen, plname, n){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  end_of_round_ferro:
    name: end_of_round_ferro
    code: "function end_of_round_ferro() {\r

      \  let [plorder, stage, A, fen, uplayer] = [Z.plorder, Z.stage, Z.A,
      Z.fen, Z.uplayer];\r

      \  calc_ferro_score(uplayer);\r

      \  if (Z.options.phase_order == 'anti') {\r

      \    for (const plname of plorder) {\r

      \      let pl = fen.players[plname];\r

      \      if (!pl.roundgoal) pl.goals[get_round_goal()] = true;\r

      \    }\r

      \  }\r

      \  ari_history_list([`${uplayer} wins the round`], 'round');\r

      \  fen.round_winner = uplayer;\r

      \  [Z.stage, Z.turn] = ['round_end', [Z.host]]; \r

      \  take_turn_fen();\r

      }\r\n"
    sig: function end_of_round_ferro(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  fp_card_selection:
    name: fp_card_selection
    code: "function fp_card_selection() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  let selitems = A.selectedCards = A.selected.map(x =>
      A.items[x]);\r

      \  let cards = selitems.map(x => x.o);\r

      \  let cmd = A.last_selected.key;\r

      \  if (cmd == 'discard') {\r

      \    if (selitems.length != 1) { select_error('select exactly 1 hand
      card to discard!'); return; }\r

      \    let item = selitems[0];\r

      \    if (!item.path.includes(`${uplayer}.hand`)) {
      select_error('select a hand card to discard!', () => {
      ari_make_unselected(item); A.selected = []; }); return; }\r

      \    assertion(DA.transactionlist.length == 0 || DA.simulate,
      '!!!!!!!!!!!!!!!!transactionlist is not empty!');\r

      \    if (DA.transactionlist.length > 0) {\r

      \      console.log('VERIFYING TRANSACTION............')\r

      \      let legal = verify_min_req();\r

      \      clear_transaction();\r

      \      if (legal) {\r

      \        ferro_process_discard(); \r

      \      } else {\r

      \        ferro_transaction_error();\r

      \      }\r

      \    } else {\r

      \      ferro_process_discard(); \r

      \    }\r

      \  } else if (cmd == 'jolly') {\r

      \    if (selitems.length != 2) { select_error('select a hand card
      and the jolly you want!'); return; }\r

      \    let handcard = selitems.find(x => !is_joker(x.o) &&
      x.path.includes(`${uplayer}.hand`));\r

      \    let jolly = selitems.find(x => is_joker(x.o) &&
      !x.path.includes(`${uplayer}.hand`));\r

      \    if (!isdef(handcard) || !isdef(jolly)) { select_error('select a
      hand card and the jolly you want!'); return; }\r

      \    let key = handcard.key;\r

      \    let j = path2fen(fen, jolly.path);\r

      \    if (!jolly_matches(key, j)) { select_error('your card does not
      match jolly!'); return; }\r

      \    if (pl.journeys.length == 0) { add_transaction(cmd); }\r

      \    ferro_process_jolly(key, j);\r

      \    take_turn_fen();\r

      \  } else if (cmd == 'auflegen') {\r

      \    if (selitems.length < 3) { select_error('select cards to form a
      group!'); return; }\r

      \    else if (pl.hand.length == selitems.length) { select_error('you
      need to keep a card for discard!!', clear_selection); return; }\r

      \    let newset = ferro_is_set(cards, Z.options.jokers_per_group);\r

      \    if (!newset) { select_error('this is NOT a valid set!');
      return; }\r

      \    let is_illegal = is_correct_group_illegal(cards);\r

      \    if (is_illegal) { select_error(is_illegal); return; }\r

      \    if (pl.journeys.length == 0) { add_transaction(cmd); }\r

      \    let keys = newset; \r

      \    ferro_process_set(keys);\r

      \    take_turn_fen();\r

      \  } else if (cmd == 'anlegen') {\r

      \    if (selitems.length < 1) { select_error('select at least 1 hand
      card and the first card of a group!'); return; }\r

      \    else if (pl.hand.length == selitems.length - 1) {
      select_error('you need to keep a card for discard!!', clear_selection);
      return; }\r

      \    let handcards = selitems.filter(x => !is_joker(x.o) &&
      x.path.includes(`${uplayer}.hand`));\r

      \    let groupcard = selitems.find(x => !is_joker(x.o) &&
      !x.path.includes(`${uplayer}.hand`));\r

      \    if (isEmpty(handcards) || !isdef(groupcard)) {
      select_error('select 1 or more hand cards and the first card of a
      group!'); return; }\r

      \    let hand_rank = handcards[0].key[0];\r

      \    let handcards_same_rank = handcards.every(x => x.key[0] ==
      hand_rank);\r

      \    let j = path2fen(fen, groupcard.path);\r

      \    if (is_group(j)) {\r

      \      if (!handcards_same_rank) { select_error('all hand cards must
      have the same rank!'); return; }\r

      \      let group_rank = groupcard.key[0];\r

      \      if (group_rank == hand_rank) {\r

      \        for (const h of handcards) {\r

      \          elem_from_to(h.key, fen.players[uplayer].hand, j);\r

      \        }\r

      \        if (pl.journeys.length == 0) { add_transaction(cmd); }\r

      \        take_turn_fen();\r

      \        return;\r

      \      } else {\r

      \        select_error('hand cards do not match the group!');\r

      \        return;\r

      \      }\r

      \    } else { \r

      \      let suit = get_sequence_suit(j);\r

      \      let handkeys = handcards.map(x => x.key); \r

      \      if (firstCond(handkeys, x => x[1] != suit)) {
      select_error('hand card suit does not match the group!'); return; }\r

      \      let ij = j.findIndex(x => is_jolly(x));\r

      \      let j_has_jolly = ij > -1;\r

      \      let rank_to_be_relaced_by_jolly = j_has_jolly ?
      find_jolly_rank(j) : null;\r

      \      let r = rank_to_be_relaced_by_jolly;\r

      \      if (r) {\r

      \        j[ij] = r + suit + 'n';\r

      \      }\r

      \      keys = handkeys.concat(j);\r

      \      let allcards = keys.map(x => ferro_get_card(x)); \r

      \      let jneeded = sortCardItemsToSequence(allcards, undefined,
      0);\r

      \      if (jneeded == 0) {\r

      \        let seq = allcards.map(x => x.key);\r

      \        if (r) { arrReplace1(seq, r + suit + 'n', '*Hn'); }\r

      \        j.length = 0;\r

      \        j.push(...seq);\r

      \        for (const k of handkeys) {
      removeInPlace(fen.players[uplayer].hand, k); }\r

      \        if (pl.journeys.length == 0) { add_transaction(cmd); }\r

      \        take_turn_fen();\r

      \      } else {\r

      \        if (r != null) { j[ij] = '*Hn'; }\r

      \        select_error('hand cards cannot be added to sequence!');\r

      \        return;\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function fp_card_selection(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  old_ensure_buttons_visible_ferro:
    name: old_ensure_buttons_visible_ferro
    code: "function old_ensure_buttons_visible_ferro() {\r

      \  if (isdef(mBy('dbPlayer'))) return;\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  if (fen.players[uplayer].hand.length <= 1) return; \r

      \  let d = iDiv(UI.players[uplayer]);\r

      \  mStyle(d, { position: 'relative' })\r

      \  let dbPlayer = mDiv(d, { position: 'absolute', bottom: 2, left:
      100, height: 25 }, 'dbPlayer');\r

      \  let styles = { rounding: 6, bg: 'silver', fg: 'black', border: 0,
      maleft: 10 };\r

      \  let bByRank = mButton('by rank', onclick_by_rank_ferro, dbPlayer,
      styles, 'enabled');\r

      \  let bBySuit = mButton('by suit', onclick_by_suit_ferro, dbPlayer,
      styles, 'enabled');\r

      \  if (Z.game == 'ferro') {\r

      \    let b = mButton('clear selection',
      onclick_clear_selection_ferro, dbPlayer, styles, 'enabled',
      'bClearSelection'); \r

      \    if (isEmpty(A.selected)) hide(b);\r

      \  }\r

      }\r\n"
    sig: function old_ensure_buttons_visible_ferro(){}
    region: ack (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ensure_buttons_visible_ferro:
    name: ensure_buttons_visible_ferro
    code: "function ensure_buttons_visible_ferro() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  if (fen.players[uplayer].hand.length <= 1) return; \r

      \  let dbPlayer = mBy('dbPlayer');\r

      \  if (nundef(dbPlayer)) {\r

      \    let d = iDiv(UI.players[uplayer]);\r

      \    mStyle(d, { position: 'relative' })\r

      \    dbPlayer = mDiv(d, { position: 'absolute', bottom: 2, left:
      100, height: 25 }, 'dbPlayer');\r

      \  }\r

      \  let styles = { rounding: 6, bg: 'silver', fg: 'black', border: 0,
      maleft: 10 };\r

      \  if (Z.game == 'ferro') {\r

      \    let b = mButton('clear selection',
      onclick_clear_selection_ferro, dbPlayer, styles, 'enabled',
      'bClearSelection'); \r

      \    if (isEmpty(A.selected)) hide(b);\r

      \  }\r

      }\r\n"
    sig: function ensure_buttons_visible_ferro(){}
    region: ack (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ensure_buttons_visible_for:
    name: ensure_buttons_visible_for
    code: "function ensure_buttons_visible_for(plname) {\r

      \  if (Z.role == 'spectator' || isdef(mBy('dbPlayer'))) return;\r

      \  let fen = Z.fen;\r

      \  let pl = fen.players[plname];\r

      \  let plui = UI.players[plname];\r

      \  if (pl.hand.length <= 1) return; \r

      \  let d = iDiv(plui);\r

      \  mStyle(d, { position: 'relative' })\r

      \  let dbPlayer = mDiv(d, { position: 'absolute', bottom: 2, left:
      100, height: 25 }, 'dbPlayer');\r

      \  let styles = { rounding: 6, bg: 'silver', fg: 'black', border: 0,
      maleft: 10 };\r

      \  let bByRank = mButton('by rank', onclick_by_rank_ferro, dbPlayer,
      styles, 'enabled');\r

      \  let bBySuit = mButton('by suit', onclick_by_suit_ferro, dbPlayer,
      styles, 'enabled');\r

      }\r\n"
    sig: function ensure_buttons_visible_for(plname){}
    region: ack (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  ferro_is_set:
    name: ferro_is_set
    code: "function ferro_is_set(cards, max_jollies_allowed = 1, seqlen = 7,
      group_same_suit_allowed = true) {\r

      \  if (cards.length < 3) return false;\r

      \  let num_jollies_in_cards = cards.filter(x =>
      is_joker(x)).length;\r

      \  if (num_jollies_in_cards > max_jollies_allowed) return false;\r

      \  cards = sortCardItemsByRank(cards.map(x => x), rankstr =
      '23456789TJQKA*');\r

      \  let rank = cards[0].rank;\r

      \  let isgroup = cards.every(x => x.rank == rank || is_joker(x));\r

      \  let suits = cards.filter(x => !is_joker(x)).map(x => x.suit);\r

      \  let num_duplicate_suits = suits.filter(x => suits.filter(y => y
      == x).length > 1).length;\r

      \  if (isgroup && !group_same_suit_allowed && num_duplicate_suits >
      0) return false;\r

      \  else if (isgroup) return cards.map(x => x.key);\r

      \  let suit = cards[0].suit;\r

      \  if (!cards.every(x => is_jolly(x.key) || x.suit == suit)) return
      false;\r

      \  let keys = cards.map(x => x.key);\r

      \  if (keys.length != new Set(keys).size) return false;\r

      \  let at_most_jollies = Math.min(num_jollies_in_cards,
      max_jollies_allowed);\r

      \  let num_jolly = sortCardItemsToSequence(cards, rankstr =
      '23456789TJQKA', at_most_jollies);\r

      \  let cond1 = num_jolly <= at_most_jollies; \r

      \  let cond2 = cards.length >= seqlen; \r

      \  if (cond1 && cond2) return cards.map(x => x.key); else return
      false;\r

      }\r\n"
    sig: function ferro_is_set(cards, max_jollies_allowed = 1, seqlen = 7,
      group_same_suit_allowed = true){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_process_discard:
    name: ferro_process_discard
    code: "function ferro_process_discard() {\r

      \  let [plorder, stage, A, fen, uplayer] = [Z.plorder, Z.stage, Z.A,
      Z.fen, Z.uplayer];\r

      \  let pl = fen.players[uplayer];\r

      \  if (!isEmpty(pl.journeys) && !pl.roundgoal) {\r

      \    let goal = is_fixed_goal() ? get_round_goal() :
      calc_ferro_highest_goal_achieved(pl);\r

      \    pl.roundgoal = goal;\r

      \    pl.goals[goal] = true;\r

      \    ari_history_list([`${pl.name} achieved goal ${pl.roundgoal}`],
      'achieve');\r

      \  }\r

      \  let c = A.selectedCards[0].key;\r

      \  elem_from_to_top(c, fen.players[uplayer].hand,
      fen.deck_discard);\r

      \  ari_history_list([`${uplayer} discards ${c}`], 'discard');\r

      \  if (fen.players[uplayer].hand.length == 0) {
      end_of_round_ferro(); } else ferro_change_to_buy_pass(); \r

      }\r\n"
    sig: function ferro_process_discard(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_process_set:
    name: ferro_process_set
    code: "function ferro_process_set(keys) {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  if (is_group(keys)) {\r

      \    keys = sort_cards(keys, true, 'CDSH', true,
      '23456789TJQKA*');\r

      \  }\r

      \  let j = [];\r

      \  keys.map(x => elem_from_to(x, fen.players[uplayer].hand, j));\r

      \  fen.players[uplayer].journeys.push(j);\r

      \  ari_history_list([`${uplayer} reveals ${j.join(', ')}`],
      'auflegen');\r

      \  Z.stage = 'card_selection';\r

      }\r\n"
    sig: function ferro_process_set(keys){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_process_jolly:
    name: ferro_process_jolly
    code: "function ferro_process_jolly(key, j) {\r

      \  let [plorder, stage, A, fen, uplayer] = [Z.plorder, Z.stage, Z.A,
      Z.fen, Z.uplayer];\r

      \  let a = key;\r

      \  let b = j.find(x => x[0] == '*');\r

      \  arrReplace1(fen.players[uplayer].hand, a, b);\r

      \  replace_jolly(key, j);\r

      \  ari_history_list([`${uplayer} replaces for jolly`], 'jolly');\r

      \  Z.stage = 'card_selection';\r

      }\r\n"
    sig: function ferro_process_jolly(key, j){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_transaction_error:
    name: ferro_transaction_error
    code: "function ferro_transaction_error() {\r

      \  let d = mDiv(dError, { padding: 10, align: 'center' }, null,
      `Illegal turn sequence - transaction cannot be completed!!!<br>press
      reload and try again!<br>`);\r

      \  mButton('RELOAD', onclick_reload, d, { margin: 10 });\r

      \  clear_transaction();\r

      }\r\n"
    sig: function ferro_transaction_error(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  find_players_with_max_score:
    name: find_players_with_max_score
    code: "function find_players_with_max_score() {\r

      \  let [plorder, stage, A, fen, uplayer] = [Z.plorder, Z.stage, Z.A,
      Z.fen, Z.uplayer];\r

      \  let maxscore = -Infinity;\r

      \  let maxscorepls = [];\r

      \  for (const plname of plorder) {\r

      \    let pl = fen.players[plname];\r

      \    if (pl.score > maxscore) { maxscore = pl.score; maxscorepls =
      [plname]; }\r

      \    else if (pl.score == maxscore) maxscorepls.push(plname);\r

      \  }\r

      \  return maxscorepls;\r

      }\r\n"
    sig: function find_players_with_max_score(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  find_players_with_min_score:
    name: find_players_with_min_score
    code: "function find_players_with_min_score() {\r

      \  let [plorder, stage, A, fen, uplayer] = [Z.plorder, Z.stage, Z.A,
      Z.fen, Z.uplayer];\r

      \  let minscore = Infinity;\r

      \  let minscorepls = [];\r

      \  for (const plname of plorder) {\r

      \    let pl = fen.players[plname];\r

      \    if (pl.score < minscore) { minscore = pl.score; minscorepls =
      [plname]; }\r

      \    else if (pl.score == minscore) minscorepls.push(plname);\r

      \  }\r

      \  return minscorepls;\r

      }\r\n"
    sig: function find_players_with_min_score(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  get_available_goals:
    name: get_available_goals
    code: "function get_available_goals(plname) {\r

      \  return Z.fen.availableGoals.filter(x =>
      !Z.fen.players[plname].goals[x]);\r

      }\r\n"
    sig: function get_available_goals(plname){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  get_round_goal:
    name: get_round_goal
    code: "function get_round_goal() { return Z.fen.roundGoals[Z.round - 1]; } \r\n"
    sig: function get_round_goal(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  is_correct_group:
    name: is_correct_group
    code: "function is_correct_group(j, n = 3) { let r = j[0][0]; return j.length >=
      n && has_at_most_n_jolly(j, Z.options.jokers_per_group) && j.every(x =>
      is_jolly(x) || x[0] == r); }\r\n"
    sig: function is_correct_group(j, n = 3){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  is_fixed_goal:
    name: is_fixed_goal
    code: "function is_fixed_goal() { return Z.options.phase_order == 'fixed'; }\r\n"
    sig: function is_fixed_goal(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  is_group:
    name: is_group
    code: "function is_group(j) {\r

      \  if (j.length < 3) return false;\r

      \  let rank = firstCond(j, x => !is_jolly(x))[0];\r

      \  return j.every(x => is_jolly(x) || x[0] == rank);\r

      }\r\n"
    sig: function is_group(j){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  is_sequence:
    name: is_sequence
    code: "function is_sequence(j) { return !is_group(j); }\r\n"
    sig: function is_sequence(j){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  is_correct_group_illegal:
    name: is_correct_group_illegal
    code: "function is_correct_group_illegal(cards) {\r

      \  let keys = cards.map(x => x.key);\r

      \  let isgroup = is_group(keys);\r

      \  if (isgroup) return false;\r

      \  if (is_fixed_goal() && get_round_goal() != '7R') {\r

      \    return `the goal for this round is ${get_round_goal()}!`;\r

      \  }\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  let pl = fen.players[uplayer];\r

      \  if (!is_fixed_goal() && pl.goals['7R'] == true) return `you can
      only have one sequence of 7!`;\r

      \  if (pl.journeys.find(x => is_sequence(x))) return `you can only
      have one sequence of 7!`;\r

      \  if (pl.roundgoal) return `row of 7 NOT allowed except if it is
      the round goal!`;\r

      \  return false;\r

      }\r\n"
    sig: function is_correct_group_illegal(cards){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  is_legal_if_7R:
    name: is_legal_if_7R
    code: "function is_legal_if_7R(cards) {\r

      \  let keys = cards.map(x => x.key);\r

      \  let isgroup = is_group(keys);\r

      \  if (isgroup) return true;\r

      \  if (is_fixed_goal() && get_round_goal() != '7R') {\r

      \    return false;\r

      \  }\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  let pl = fen.players[uplayer];\r

      \  if (!is_fixed_goal() && pl.goals['7R'] == true) return false;\r

      \  if (pl.journeys.find(x => is_sequence(x))) return false;\r

      \  return true;\r

      }\r\n"
    sig: function is_legal_if_7R(cards){}
    region: ack (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  onclick_by_rank_ferro:
    name: onclick_by_rank_ferro
    code: "function onclick_by_rank_ferro() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  let items = ui_get_hand_items(uplayer).map(x => x.o);\r

      \  let h = UI.players[uplayer].hand;\r

      \  pl.handsorting = { n: items.length, by: 'rank' };\r

      \  let cardcont = h.cardcontainer;\r

      \  let ch = arrChildren(cardcont);\r

      \  ch.map(x => x.remove());\r

      \  let sorted = sortCardItemsByRank(items, '23456789TJQKA*');\r

      \  h.sortedBy = 'rank';\r

      \  for (const item of sorted) {\r

      \    mAppend(cardcont, iDiv(item));\r

      \  }\r

      }\r\n"
    sig: function onclick_by_rank_ferro(){}
    region: ack (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  onclick_by_suit_ferro:
    name: onclick_by_suit_ferro
    code: "function onclick_by_suit_ferro() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  let items = ui_get_hand_items(uplayer).map(x => x.o);\r

      \  let h = UI.players[uplayer].hand;\r

      \  pl.handsorting = { n: items.length, by: 'suit' };\r

      \  let cardcont = h.cardcontainer;\r

      \  let ch = arrChildren(cardcont);\r

      \  ch.map(x => x.remove());\r

      \  let sorted = sortCardItemsByRank(items, '23456789TJQKA*');\r

      \  sorted = sortCardItemsBySuit(sorted);\r

      \  h.sortedBy = 'suit';\r

      \  for (const item of sorted) {\r

      \    mAppend(cardcont, iDiv(item));\r

      \  }\r

      }\r\n"
    sig: function onclick_by_suit_ferro(){}
    region: ack (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\easy\ferro.js
    datetime: 2022-08-07-08-59
    timestamp: 1659887982841.4287
    size: 35132
  onclick_clear_selection_ferro:
    name: onclick_clear_selection_ferro
    code: "function onclick_clear_selection_ferro() { clear_selection(); }\r\n"
    sig: function onclick_clear_selection_ferro(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ui_get_buy_or_pass_items:
    name: ui_get_buy_or_pass_items
    code: "function ui_get_buy_or_pass_items() {\r

      \  let items = [], i = 0;\r

      \  if (!isEmpty(UI.deck_discard.items))
      items.push(ui_get_deck_item(UI.deck_discard));\r

      \  items = items.concat(ui_get_string_items(['pass']));\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_buy_or_pass_items(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ui_get_ferro_items:
    name: ui_get_ferro_items
    code: "function ui_get_ferro_items() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  let items = ui_get_hand_items(uplayer);  \r

      \  for (const plname of plorder) {\r

      \    let jlist = UI.players[plname].journeys;\r

      \    for (const jitem of jlist) {\r

      \      for (const o of jitem.items) {\r

      \        if (!is_joker(o)) { continue; }\r

      \        let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: jitem.path, index: 0 };\r

      \        items.push(item);\r

      \      }\r

      \    }\r

      \  }\r

      \  for (const plname of plorder) {\r

      \    let jlist = UI.players[plname].journeys;\r

      \    for (const jitem of jlist) {\r

      \      let o = jitem.items[0]; \r

      \      let item = { o: o, a: o.key, key: o.key, friendly: o.short,
      path: jitem.path, index: 0 };\r

      \      items.push(item);\r

      \    }\r

      \  }\r

      \  let cmds = ui_get_submit_items(['discard', 'auflegen', 'jolly',
      'anlegen']);\r

      \  items = items.concat(cmds);\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_ferro_items(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ui_get_submit_items:
    name: ui_get_submit_items
    code: "function ui_get_submit_items(commands) {\r

      \  let items = [], i = 0;\r

      \  for (const cmd of commands) { \r

      \    let item = { o: null, a: cmd, key: cmd, friendly: cmd, path:
      null, index: i, submit_on_click: true, itemtype: 'submit' };\r

      \    i++;\r

      \    items.push(item);\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_submit_items(commands){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  verify_min_req:
    name: verify_min_req
    code: "function verify_min_req() {\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  let pl = fen.players[uplayer];\r

      \  let jsorted = jsCopy(pl.journeys).sort((a, b) => b.length -
      a.length);\r

      \  let di = {\r

      \    '3': jsorted.length > 0 && is_group(jsorted[0]) &&
      jsorted[0].length >= 3,\r

      \    '33': jsorted.length > 1 && is_group(jsorted[0]) &&
      jsorted[0].length >= 3\r

      \      && is_group(jsorted[1]) && jsorted[1].length >= 3,\r

      \    '4': jsorted.length > 0 && is_group(jsorted[0]) &&
      jsorted[0].length >= 4,\r

      \    '44': jsorted.length > 1 && is_group(jsorted[0]) &&
      jsorted[0].length >= 4\r

      \      && is_group(jsorted[1]) && jsorted[1].length >= 4,\r

      \    '5': jsorted.length > 0 && is_group(jsorted[0]) &&
      jsorted[0].length >= 5,\r

      \    '55': jsorted.length > 1 && is_group(jsorted[0]) &&
      jsorted[0].length >= 5\r

      \      && is_group(jsorted[1]) && jsorted[1].length >= 5,\r

      \    '7R': jsorted.length > 0 && is_sequence(jsorted[0]) &&
      jsorted[0].length >= 7,\r

      \  };\r

      \  let goals = is_fixed_goal() ? [get_round_goal()] :
      get_available_goals(uplayer);\r

      \  for (const g of goals) {\r

      \    if (di[g] == true) { return true; } \r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function verify_min_req(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  add_transaction:
    name: add_transaction
    code: "function add_transaction(cmd) {\r

      \  if (!DA.simulate) start_transaction();\r

      \  DA.transactionlist.push(cmd);\r

      }\r\n"
    sig: function add_transaction(cmd){}
    region: transaction (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  start_transaction:
    name: start_transaction
    code: "function start_transaction() {\r

      \  if (DA.simulate) return;\r

      \  DA.simulate = true;\r

      \  DA.snapshot = { fen: jsCopy(Z.fen), stage: Z.stage, round:
      Z.round, phase: Z.phase, turn: Z.turn };\r

      \  DA.transactionlist = [];\r

      }\r\n"
    sig: function start_transaction(){}
    region: transaction (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  clear_transaction:
    name: clear_transaction
    code: "function clear_transaction() { DA.simulate = false; DA.transactionlist =
      []; }\r\n"
    sig: function clear_transaction(){}
    region: transaction (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rollback:
    name: rollback
    code: "function rollback() {\r

      \  if (isdef(DA.snapshot)) {\r

      \    Z.fen = DA.snapshot.fen;\r

      \    Z.stage = DA.snapshot.stage;\r

      \    Z.round = DA.snapshot.round;\r

      \    Z.phase = DA.snapshot.phase;\r

      \    Z.turn = DA.snapshot.turn;\r

      \  }\r

      }\r\n"
    sig: function rollback(){}
    region: transaction (select.js)
    filename: select.js
    type: func
    fname: select.js
    path: C:\xampp\htdocs\aroot\easy\select.js
    datetime: 2022-08-07-09-00
    timestamp: 1659888006611.9817
    size: 16165
  phpPostSimulate:
    name: phpPostSimulate
    code: "function phpPostSimulate(o, cmd) {\r

      \  FORCE_REDRAW = true;\r

      \  if (nundef(o.options) && isdef(Z)) {\r

      \    o.turn = Z.turn;\r

      \    o.expected = Z.expected;\r

      \    o.options = Z.options;\r

      \  }\r

      \  switch (cmd) {\r

      \    case \"gameover\": \r

      \    case \"move\":\r

      \    case \"table\":\r

      \    case \"startgame\":\r

      \      let t = pack_table(o);\r

      \      let t1 = JSON.parse(t);\r

      \      handle_result(t, cmd); break;\r

      \    default: break; \r

      \  }\r

      }\r\n"
    sig: function phpPostSimulate(o, cmd){}
    region: transaction (select.js)
    filename: select.js
    type: func
    fname: select.js
    path: C:\xampp\htdocs\aroot\easy\select.js
    datetime: 2022-08-07-09-00
    timestamp: 1659888006611.9817
    size: 16165
  pack_table:
    name: pack_table
    code: "function pack_table(o) {\r

      \  for (const k of ['players', 'fen', 'state', 'player_status',
      'options', 'scoring', 'notes', 'turn']) {\r

      \    let val = o[k];\r

      \    if (isdef(val)) o[k] = JSON.stringify(val);\r

      \  }\r

      \  return JSON.stringify({ table: o, playerdata:
      JSON.stringify(o.playerdata) });\r

      }\r\n"
    sig: function pack_table(o){}
    region: transaction (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  clear_selection:
    name: clear_selection
    code: "function clear_selection() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  if (nundef(Z.A) || isEmpty(A.selected)) return;\r

      \  let selitems = A.selected.map(x => A.items[x]);\r

      \  for (const item of selitems) { ari_make_unselected(item); }\r

      \  A.selected = [];\r

      }\r\n"
    sig: function clear_selection(){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  select_error:
    name: select_error
    code: "function select_error(msg, callback = null, stay = false) {\r

      \  let [A] = [Z.A];\r

      \  DA.callback = callback;\r

      \  if (A.maxselected == 1 && A.selected.length > 0) {\r

      \    let item = A.items[A.selected[0]];\r

      \    ari_make_unselected(item);\r

      \    A.selected = [];\r

      \  } else if (A.selected.length == 2) {\r

      \    let item = A.items[A.selected[1]];\r

      \    ari_make_unselected(item);\r

      \    A.selected = [A.selected[0]];\r

      \  }\r

      \  dError.innerHTML = msg;\r

      \  if (stay) {\r

      \    dError.innerHTML += '<br><button
      onclick=\"continue_after_error()\">CLICK TO CONTINUE</button>';\r

      \  } else {\r

      \    TO.error = setTimeout(continue_after_error, 3000);\r

      \  }\r

      }\r\n"
    sig: function select_error(msg, callback = null, stay = false){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  continue_after_error:
    name: continue_after_error
    code: "function continue_after_error() {\r

      \  dError.innerHTML = ''; if (isdef(DA.callback)) { DA.callback();
      delete (DA.callback); }\r

      }\r\n"
    sig: function continue_after_error(){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  remove_from_selection:
    name: remove_from_selection
    code: "function remove_from_selection(card) {\r

      \  if (nundef(Z.A)) return;\r

      \  let A = Z.A;\r

      \  let item = firstCond(A.items, x => x.id == card.id);\r

      \  if (isdef(item)) {\r

      \    let idx = item.index;\r

      \    A.items.splice(item.index, 1);\r

      \    removeInPlace(A.selected, item.index);\r

      \    make_card_unselectable(item);\r

      \    make_card_unselected(item);\r

      \    reindex_items(A.items);\r

      \  }\r

      }\r\n"
    sig: function remove_from_selection(card){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  restart_selection_process:
    name: restart_selection_process
    code: "function restart_selection_process() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  if (Z.game != 'ferro') {\r

      \    console.log('attempt to restart selection process in non-ferro
      game!!!');\r

      \    return;\r

      \  }\r

      \  A.selectedCards.map(x => ari_make_unselected(x));\r

      \  mClear('dSelections0');\r

      \  Z.A = { level: 0, di: {}, ll: [], items: [], selected: [], tree:
      null, breadcrumbs: [], sib: [], command: null };\r

      \  Z.stage = 'card_selection';\r

      \  ferro_pre_action();\r

      }\r\n"
    sig: function restart_selection_process(){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  select_timer:
    name: select_timer
    code: "function select_timer(ms, callback) {\r

      \  let d = mBy('dSelections0');\r

      \  let dtimer = mDiv(d, { w: 80, maleft: 10, fg: 'red', weight:
      'bold' }, 'dTimer');\r

      \  if (isdef(DA.timer)) { DA.timer.clear(); DA.timer = null; }\r

      \  let timer = DA.timer = new SimpleTimer(dtimer, 1000, null, ms,
      callback);\r

      \  timer.start();\r

      \  return dtimer;\r

      }\r\n"
    sig: function select_timer(ms, callback){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stop_timer:
    name: stop_timer
    code: "function stop_timer() {\r

      \  if (isdef(DA.timer)) {\r

      \    let res = DA.timer.clear();\r

      \    DA.timer = null;\r

      \    return isNumber(res) ? res : 0;\r

      \  }\r

      \  return 0;\r

      }\r\n"
    sig: function stop_timer(){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stage_building_new:
    name: stage_building_new
    code: "function stage_building_new(fen, i_pl, type, n_openschwein,
      n_closedschwein) {\r

      \  let n = type == 'chateau' ? 6 : type == 'estate' ? 5 : 4;\r

      \  let plname = fen.plorder[i_pl];\r

      \  lookupSet(fen.players[plname], ['buildings', type], []);\r

      \  let building = { list: deck_deal(fen.deck, 1), h: null, type:
      type, schweine: [] };\r

      \  let k = building.lead = building.list[0];\r

      \  let other = k[0] == 'Q' ? '2' : 'Q';\r

      \  let i, j;\r

      \  for (i = 1; i <= n_openschwein; i++) { building.schweine.push(i);
      building.list.push(other + rSuit('CSHD') + 'n'); }\r

      \  for (j = 1; j <= n_closedschwein; j++) { building.list.push(other
      + rSuit('CSHD') + 'n'); }\r

      \  while (building.list.length < n) { building.list.push(k); j++;
      }\r

      \  fen.players[plname].buildings[type].push(building); \r

      \  return building;\r

      }\r\n"
    sig: function stage_building_new(fen, i_pl, type, n_openschwein,
      n_closedschwein){}
    region: ARI (sim.js)
    filename: sim.js
    type: func
    fname: sim.js
    path: C:\xampp\htdocs\aroot\games\sim.js
    datetime: 2022-08-12-08-14
    timestamp: 1660317281170.8633
    size: 48386
  get_robot_personality:
    name: get_robot_personality
    code: "function get_robot_personality(name) { return { erratic: 20, bluff: 20,
      random: 20, risk: 20, passive: 20, clairvoyant: 20, aggressive: 20 };
      }\r\n"
    sig: function get_robot_personality(name){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  botbest:
    name: botbest
    code: "function botbest(list, max, mmax, exp, nreas, n2, have2, words, fen) {\r

      \  if (nundef(DA.ctrandom))DA.ctrandom =
      1;console.log(`${DA.ctrandom++}: ${Z.uplayer} using
      strategy`,Z.strategy)\r

      \  let bot = window[`bot_${Z.strategy}`];\r

      \  let [b, f] = bot(list, max, mmax, exp, nreas, n2, have2, words,
      fen);\r

      \  assertion(!b || b[2]!=0, 'bot returned bid with n2==0');\r

      \  return [b, f];\r

      }\r\n"
    sig: function botbest(list, max, mmax, exp, nreas, n2, have2, words, fen){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bot_clairvoyant:
    name: bot_clairvoyant
    code: "function bot_clairvoyant(list, maxvalue, mmax, exp, nreas, n2, have2,
      words, fen) {\r

      \  let reduced_list = list.filter(x=>x.value == list[0].value ||
      x.mine);\r

      \  let
      res=reduced_list.length>=2?rChoose(list,2):[reduced_list[0],{value:0,rank\
      :'_'}];\r

      \  let max=res[0].value>=res[1].value?res[0]:res[1];let
      min=res[0].value<res[1].value?res[0]:res[1];\r

      \  let b=[max.value,max.rank,min.value,min.rank];\r

      \  if (isdef(fen.lastbid)) {\r

      \    let [n1, r1, n2, r2] = bluff_convert2ranks(fen.lastbid);\r

      \    if (!is_bid_higher_than(bluff_convert2words(b), fen.lastbid))
      {\r

      \      return [null, handle_gehtHoch];\r

      \    }\r

      \  } \r

      \  return [bluff_convert2words(b), handle_bid];\r

      }\r\n"
    sig: function bot_clairvoyant(list, maxvalue, mmax, exp, nreas, n2, have2,
      words, fen){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bot_perfect:
    name: bot_perfect
    code: "function bot_perfect(list, max, mmax, exp, nreas, n2, have2, words, fen)
      {\r

      \  let i=0;while(list[i].rank == '2') i++;\r

      \  let b = [list[i].value+n2, list[i].rank, list[i+1].value,
      list[i+1].rank];\r

      \  list.map(x => console.log(x)); \r

      \  console.log('b:', b);\r

      \  if (isdef(fen.lastbid)) {\r

      \    let [n1, r1, n2, r2] = bluff_convert2ranks(fen.lastbid);\r

      \    if (!is_bid_higher_than(bluff_convert2words(b), fen.lastbid))
      {\r

      \      return [null, handle_gehtHoch];\r

      \    }\r

      \  } \r

      \  return [bluff_convert2words(b), handle_bid];\r

      }\r\n"
    sig: function bot_perfect(list, max, mmax, exp, nreas, n2, have2, words, fen){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bot_random:
    name: bot_random
    code: "function bot_random(list, max, mmax, exp, nreas, n2, have2, words, fen)
      {\r

      \  let ranks = rChoose('3456789TJQKA', 2);\r

      \  let b;\r

      \  if (nundef(fen.lastbid)) b = [rNumber(1, nreas), ranks[0],
      rNumber(1, nreas), ranks[1]];\r

      \  else if (fen.lastbid[0] > nreas + 2) {\r

      \    return [null, handle_gehtHoch];\r

      \  } else {\r

      \    [n1, r1, n2, r2] = bluff_convert2ranks(fen.lastbid);\r

      \    assertion(isNumber(n1) && n1>0 && isNumber(n2), 'bot_random: n1
      or n2 is not a number OR n1<=0!!!!!!!',n1,n2);\r

      \    if ((n1 + n2) / 2 > nreas && coin(50)) {\r

      \      return [null, handle_gehtHoch];\r

      \    } else if ((n1 + n2) / 2 <= nreas + 1) b = n1 <= nreas + 1 ?
      [n1 + 1, r1, n2, r2] : [n1, r1, n2 + 1, r2];\r

      \    else {\r

      \      let [i1, i2] = [BLUFF.rankstr.indexOf(r1),
      BLUFF.rankstr.indexOf(r2)];\r

      \      let s = '3456789TJQKA';\r

      \      let imin = Math.min(i1, i2); let imax = Math.max(i1, i2); let
      i = imax == i1 ? 1 : 2;\r

      \      let [smin, between, smax] = [s.substring(0, imin),
      s.substring(imin + 1, imax), s.substring(imax + 1, s.length)];\r

      \      if (!isEmpty(smax)) { if (i == 1) b = [n1, rChoose(smax), n2,
      r2]; else b = [n1, r1, n2, rChoose(smax)]; }\r

      \      else if (!isEmpty(between)) { if (i == 2) b = [n1,
      rChoose(between), n2, r2]; else b = [n1, r1, n2, rChoose(between)]; }\r

      \      else return [null, handle_gehtHoch];\r

      \    }\r

      \  }\r

      \  return [bluff_convert2words(b), handle_bid];\r

      }\r\n"
    sig: function bot_random(list, max, mmax, exp, nreas, n2, have2, words, fen){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_ai:
    name: bluff_ai
    code: "function bluff_ai() {\r

      \  let [A, fen, uplayer, pl] = [Z.A, Z.fen, Z.uplayer, Z.pl];\r

      \  const torank = { _: '_', three: '3', four: '4', five: '5', six:
      '6', seven: '7', eight: '8', nine: '9', ten: 'T', jack: 'J', queen: 'Q',
      king: 'K', ace: 'A' };\r

      \  const toword = { _: '_', '3': 'three', '4': 'four', '5': 'five',
      '6': 'six', '7': 'seven', '8': 'eight', '9': 'nine', T: 'ten', J: 'jack',
      Q: 'queen', K: 'king', A: 'ace' };\r

      \  let words = get_keys(torank).slice(1); \r

      \  let all_hand_cards = aggregate_elements(dict2list(fen.players,
      'name'), 'hand'); \r

      \  let no_twos = all_hand_cards.filter(x => x[0] != '2'); \r

      \  let rankstr = '3456789TJQKA2';\r

      \  sortByRank(all_hand_cards, rankstr);\r

      \  let byrank = aggregate_player_hands_by_rank(fen);\r

      \  let rank_list = dict2list(byrank, 'rank');\r

      \  let unique_ranks = sortByRank(get_keys(byrank));\r

      \  let myranks = sortByRank(pl.hand.map(x => x[0]));\r

      \  let my_unique = unique_ranks.filter(x => myranks.includes(x));\r

      \  rank_list.map(x => { x.mine = myranks.includes(x.rank); x.irank =
      rankstr.indexOf(x.rank); x.i = x.irank + 100 * x.value; });\r

      \  rank_list = rank_list.filter(x=>x.rank != '2');\r

      \  sortByDescending(rank_list, 'i');\r

      \  let maxcount = rank_list[0].value;\r

      \  let mymaxcount = rank_list.filter(x => x.mine)[0].value;\r

      \  let expected = all_hand_cards.length / 13; \r

      \  let nreason = Math.max(1, Math.round(expected * 2));\r

      \  let n_twos = all_hand_cards.filter(x => x[0] == '2').length;\r

      \  let have2 = firstCond(rank_list,x=>x.rank=='2' && x.mine);\r

      \  return botbest(rank_list, maxcount, mymaxcount, expected,
      nreason, n_twos, have2, words, fen);\r

      }\r\n"
    sig: function bluff_ai(){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_stats:
    name: bluff_stats
    code: "function bluff_stats(dParent) {\r

      \  let player_stat_items = UI.player_stat_items =
      ui_player_info(dParent, {}, { 'border-width': 1, margin: 10, wmax: 180
      });\r

      \  let fen = Z.fen;\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    let item = player_stat_items[plname];\r

      \    let d = iDiv(item); mCenterFlex(d); mLinebreak(d);\r

      \    if (fen.turn.includes(plname)) {\r

      \      let dh = show_hourglass(plname, d, 20, { left: -4, top: 0
      });\r

      \    }\r

      \    let dhz = mDiv(d, { fg: pl.handsize == Z.options.max_handsize ?
      'yellow' : 'white' }, null, `hand: ${pl.handsize}`); mLinebreak(d);\r

      \    if (plname == fen.loser) UI.dHandsize = dhz;\r

      \    let elem = mDiv(d, { fg: plname == fen.lastbidder ? 'red' :
      'white' }, null, `${valf(pl.lastbid, ['_']).join(' ')}`);\r

      \    let szhand = getSizeNeeded(dhz);\r

      \    let sz = getSizeNeeded(elem);\r

      \    let w = Math.max(szhand.w + 20, sz.w + 20, 80);\r

      \    mStyle(d, { w: w }); \r

      \    mLinebreak(d);\r

      \  }\r

      \  return player_stat_items[Z.uplayer];\r

      }\r\n"
    sig: function bluff_stats(dParent){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_state:
    name: bluff_state
    code: "function bluff_state(dParent) {\r

      \  let user_html = get_user_pic_html(Z.uplayer, 30);\r

      \  dParent.innerHTML = `Round ${Z.round}:&nbsp;player: ${user_html}
      `;\r

      }\r\n"
    sig: function bluff_state(dParent){}
    region: AI (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_convert2ranks:
    name: bluff_convert2ranks
    code: "function bluff_convert2ranks(b) { return [b[0], BLUFF.torank[b[1]],
      b[2]=='_'?0:b[2], BLUFF.torank[b[3]]]; }\r\n"
    sig: function bluff_convert2ranks(b){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  bluff_convert2words:
    name: bluff_convert2words
    code: "function bluff_convert2words(b) { return [b[0], BLUFF.toword[b[1]],
      b[2]<1?'_':b[2], BLUFF.toword[b[3]]]; }\r\n"
    sig: function bluff_convert2words(b){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  is_bid_higher_than:
    name: is_bid_higher_than
    code: "function is_bid_higher_than(bid, oldbid) {\r

      \  bid = jsCopy(bid);\r

      \  if (bid[0] == '_') bid[0] = 0;\r

      \  if (bid[2] == '_') bid[2] = 0;\r

      \  if (oldbid[0] == '_') oldbid[0] = 0;\r

      \  if (oldbid[2] == '_') oldbid[2] = 0;\r

      \  let higher = bid[0] > oldbid[0]\r

      \    || bid[0] == oldbid[0] && is_higher_ranked_name(bid[1],
      oldbid[1])\r

      \    || bid[0] == oldbid[0] && bid[1] == oldbid[1] && bid[2] >
      oldbid[2]\r

      \    || bid[0] == oldbid[0] && bid[1] == oldbid[1] && bid[2] ==
      oldbid[2] && is_higher_ranked_name(bid[3], oldbid[3]);\r

      \  return higher;\r

      }\r\n"
    sig: function is_bid_higher_than(bid, oldbid){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  normalize_bid:
    name: normalize_bid
    code: "function normalize_bid(bid) {\r

      \  let need_to_sort = bid[0] == '_' && bid[2] != '_'\r

      \    || bid[2] != '_' && bid[2] > bid[0]\r

      \    || bid[2] == bid[0] && is_higher_ranked_name(bid[3], bid[1]);\r

      \  if (need_to_sort) {\r

      \    let [h0, h1] = [bid[0], bid[1]];\r

      \    [bid[0], bid[1]] = [bid[2], bid[3]];\r

      \    [bid[2], bid[3]] = [h0, h1];\r

      \  }\r

      \  return bid;\r

      }\r\n"
    sig: function normalize_bid(bid){}
    region: helpers (bluff.js)
    filename: bluff.js
    type: func
    fname: bluff.js
    path: C:\xampp\htdocs\aroot\games\bluff.js
    datetime: 2022-08-15-06-29
    timestamp: 1660570154659.2556
    size: 27404
  test_start_ferro:
    name: test_start_ferro
    code: "function test_start_ferro(mode = 'multi') {\r

      \  let game = 'ferro';\r

      \  let playernames = ['mimi', 'lauren', 'felix'];\r

      \  let playmodes = ['human', 'human', 'human'];\r

      \  let strategies = ['random', 'random', 'random'];\r

      \  let i = 0; let players = playernames.map(x => ({ name: x,
      strategy: strategies[i], playmode: playmodes[i++] }));\r

      \  let options = { mode: mode, thinking_time: 20 };\r

      \  start_game(game, players, options);\r

      }\r\n"
    sig: function test_start_ferro(mode = 'multi'){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  test_start_aristo:
    name: test_start_aristo
    code: "function test_start_aristo(n = 3, mode = 'multi') {\r

      \  let game = 'aristo';\r

      \  let playernames = arrTake(['mimi', 'felix', 'amanda', 'lauren',
      'gul', 'nasi'], n);\r

      \  let playmodes = ['human', 'human', 'human', 'human', 'human',
      'human'];\r

      \  let strategies = ['random', 'random', 'random', 'random',
      'random', 'random', 'random'];\r

      \  let i = 0; let players = playernames.map(x => ({ name: x,
      strategy: strategies[i], playmode: playmodes[i++] }));\r

      \  let options = { mode: mode, commission: 'no' };\r

      \  start_game(game, players, options);\r

      }\r\n"
    sig: function test_start_aristo(n = 3, mode = 'multi'){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_by_rank:
    name: onclick_by_rank
    code: "function onclick_by_rank() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  let items = ui_get_hand_items(uplayer).map(x => x.o);\r

      \  let h = UI.players[uplayer].hand;\r

      \  pl.handsorting = 'rank'; \r

      \  Clientdata.handsorting = pl.handsorting;\r

      \  localStorage.setItem('handsorting', Clientdata.handsorting);\r

      \  let cardcont = h.cardcontainer;\r

      \  let ch = arrChildren(cardcont);\r

      \  ch.map(x => x.remove());\r

      \  let sorted = sortCardItemsByRank(items, Z.func.rankstr);
      //window[Z.game.toUpperCase()].rankstr); //'23456789TJQKA*');\r

      \  h.sortedBy = 'rank';\r

      \  for (const item of sorted) {\r

      \    mAppend(cardcont, iDiv(item));\r

      \  }\r

      }\r\n"
    sig: function onclick_by_rank(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_by_suit:
    name: onclick_by_suit
    code: "function onclick_by_suit() {\r

      \  let [plorder, stage, A, fen, uplayer, pl] = [Z.plorder, Z.stage,
      Z.A, Z.fen, Z.uplayer, Z.fen.players[Z.uplayer]];\r

      \  let items = ui_get_hand_items(uplayer).map(x => x.o);\r

      \  let h = UI.players[uplayer].hand;\r

      \  Clientdata.handsorting = pl.handsorting = 'suit'; \r

      \  localStorage.setItem('handsorting', Clientdata.handsorting);\r

      \  let cardcont = h.cardcontainer;\r

      \  let ch = arrChildren(cardcont);\r

      \  ch.map(x => x.remove());\r

      \  let sorted = sortCardItemsByRank(items, Z.func.rankstr);
      //'23456789TJQKA*');\r

      \  sorted = sortCardItemsBySuit(sorted);\r

      \  h.sortedBy = 'suit';\r

      \  for (const item of sorted) {\r

      \    mAppend(cardcont, iDiv(item));\r

      \  }\r

      }\r\n"
    sig: function onclick_by_suit(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_reload_after_switching:
    name: onclick_reload_after_switching
    code: "function onclick_reload_after_switching() { DA.pollCounter = 0;
      DA.reloadColor = rColor(); onclick_reload(); }\r\n"
    sig: function onclick_reload_after_switching(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_status:
    name: onclick_status
    code: "function onclick_status() { query_status(); }\r\n"
    sig: function onclick_status(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_tithe_all:
    name: onclick_tithe_all
    code: "function onclick_tithe_all() {\r

      \  let [game, fen, uplayer, turn, stage] = [Z.game, Z.fen,
      Z.uplayer, Z.turn, Z.stage];\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    if (isdef(pl.tithes)) { continue; }\r

      \    pl.tithes = { val: rNumber(8, 10) };\r

      \  }\r

      \  proceed_to_newcards_selection();\r

      }\r\n"
    sig: function onclick_tithe_all(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  onclick_view_buildings:
    name: onclick_view_buildings
    code: "function onclick_view_buildings(){\r

      \  let [game, fen, uplayer, turn, stage] = [Z.game, Z.fen,
      Z.uplayer, Z.turn, Z.stage];\r

      \  let buildings = UI.players[uplayer].buildinglist;\r

      \  for(const b of buildings) b.items.map(x=>face_up(x));\r

      \  TO.buildings = setTimeout(hide_buildings,5000);\r

      }\r\n"
    sig: function onclick_view_buildings(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a04\basejs\onclick.js
    datetime: 2022-12-12-07-48
    timestamp: 1670860119681.98
    size: 12074
  select_confirm_weiter:
    name: select_confirm_weiter
    code: "function select_confirm_weiter(callback) {\r

      \  select_add_items(ui_get_string_items(['weiter']), callback, 'may
      click to continue', 1, 1, Z.mode == 'multi');\r

      }\r\n"
    sig: function select_confirm_weiter(callback){}
    region: select (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fritz_present:
    name: fritz_present
    code: "function fritz_present(dParent) {\r

      \  DA.hovergroup = null;\r

      \  let [fen, ui, uplayer, stage, pl] = [Z.fen, UI, Z.uplayer,
      Z.stage, Z.pl];\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent); mFlexWrap(dOpenTable)\r

      \  Config.ui.card.h = 130;\r

      \  Config.ui.container.h = Config.ui.card.h + 30;\r

      \  if (isEmpty(fen.deck_discard)) {\r

      \    mText('discard pile is empty!', dOpenTable);\r

      \    ui.deck_discard = { items: [] }\r

      \  } else {\r

      \    mText('discard pile:', dOpenTable);mLinebreak(dOpenTable);\r

      \    let deck_discard = ui.deck_discard =
      ui_type_hand(fen.deck_discard, dOpenTable, { maright: 25 },
      'deck_discard', null, fritz_get_card, true);\r

      \    let i = 0; deck_discard.items.map(x => { x.source = 'discard';
      x.index = i++ });\r

      \  }\r

      \  mLinebreak(dOpenTable);\r

      \  mDiv(dOpenTable, { box:true,w:'100%' }, null, '<hr>');\r

      \  let ddarea = UI.ddarea = mDiv(dOpenTable, { border: 'dashed 1px
      black', bg: '#eeeeee80', box: true, hmin: 162, wmin: 245, padding: '5px
      50px 5px 5px', margin: 5 });\r

      \  mDroppable(ddarea, drop_card_fritz, dragover_fritz); ddarea.id =
      'dOpenTable'; Items[ddarea.id] = ddarea;\r

      \  mFlexWrap(ddarea)\r

      \  fritz_stats(dRechts);\r

      \  show_history(fen, dRechts);\r

      \  DA.TJ = [];\r

      \  for (const j of fen.journeys) {\r

      \    let cards = j.map(x => fritz_get_card(x));\r

      \    frnew(cards[0], { target: 'hallo' });\r

      \    for (let i = 1; i < cards.length; i++) { fradd(cards[i],
      Items[cards[0].groupid]); }\r

      \  }\r

      \  let loosecards = ui.loosecards = jsCopy(fen.loosecards).map(c =>
      fritz_get_card(c));\r

      \  for (const plname of fen.plorder) {\r

      \    let cards = fen.players[plname].loosecards.map(c =>
      fritz_get_card(c));\r

      \    cards.map(x => x.owner = plname);\r

      \    loosecards = loosecards.concat(cards);\r

      \  }\r

      \  for (const looseui of loosecards) {\r

      \    let card = looseui;\r

      \    frnew(card, { target: 'hallo' });\r

      \  }\r

      \  for (const group of DA.TJ) {\r

      \    assertion(isdef(group.id), 'no group id', group);\r

      \    let d = iDiv(group);\r

      \    let ch = arrChildren(iDiv(group));\r

      \    let cards = ch.map(x => Items[x.id]);\r

      \    cards.map(x => mDroppable(x, drop_card_fritz,
      dragover_fritz));\r

      \  }\r

      \  if (arrChildren(ddarea).length == 0) {\r

      \    let d = mDiv(ddarea, { 'pointer-events': 'none', maleft: 45,
      align: 'center', hmin: 40, w: '100%', fz: 12, fg: 'dimgray' }, 'ddhint',
      'drag and drop cards here');\r

      \  }\r

      \  ui.players = {};\r

      \  let uname_plays = fen.plorder.includes(Z.uname);\r

      \  let plmain = uname_plays && Z.mode == 'multi' ? Z.uname :
      uplayer;\r

      \  fritz_present_player(plmain, dMiddle);\r

      \  if (TESTING) {\r

      \    for (const plname of arrMinus(fen.plorder, plmain)) {\r

      \      fritz_present_player(plname, dMiddle);\r

      \    }\r

      \  }\r

      \  show_handsorting_buttons_for(Z.mode == 'hotseat' ? Z.uplayer :
      Z.uname,{left: 58, bottom:-1});\r

      }\r\n"
    sig: function fritz_present(dParent){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  fritz_stats:
    name: fritz_stats
    code: "function fritz_stats(dParent) {\r

      \  let player_stat_items = UI.player_stat_items =
      ui_player_info(dParent);\r

      \  let fen = Z.fen;\r

      \  console.log('players',get_keys(fen.players));\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    console.log('uname',plname);\r

      \    let item = player_stat_items[plname];\r

      \    let d = iDiv(item); mCenterFlex(d); mLinebreak(d);\r

      \    player_stat_count('hand with fingers splayed',
      calc_hand_value(pl.hand.concat(pl.loosecards), fritz_get_card), d);\r

      \    player_stat_count('star', pl.score, d);\r

      \    if (fen.turn.includes(plname)) { show_hourglass(plname, d, 30,
      { left: -3, top: 0 }); }\r

      \    else if (!fen.plorder.includes(plname)) mStyle(d, { opacity:
      0.5 });\r

      \  }\r

      }\r\n"
    sig: function fritz_stats(dParent){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  dragover_fritz:
    name: dragover_fritz
    code: "function dragover_fritz(ev){\r

      \  ev.preventDefault();\r

      \  ev.dataTransfer.dropEffect = \"move\"; \r

      \  let target_id = evToClosestId(ev);\r

      \  let d=mBy(target_id);\r

      \  mStyle(d,{bg:'red'});\r

      \  if (target_id == 'dOpenTable') {\r

      \  } else if (isdef(Items[target_id])) {\r

      \    let targetcard = Items[target_id];\r

      \    let targetgroup = Items[targetcard.groupid];\r

      \  } else {\r

      \  }\r

      }\r\n"
    sig: function dragover_fritz(ev){}
    region: funcs (fritz.js)
    filename: fritz.js
    type: func
    fname: fritz.js
    path: C:\xampp\htdocs\aroot\games\fritz.js
    datetime: 2022-08-19-20-24
    timestamp: 1660965871708.2256
    size: 22418
  PRHLayout:
    name: PRHLayout
    code: "function PRHLayout() {\r

      \  let drr = UI.DRR = mDiv(dTable);\r

      \  mAppend(drr, UI.dHistory);\r

      \  Clientdata.historyLayout = 'prh';\r

      }\r\n"
    sig: function PRHLayout(){}
    region: history (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  HRPLayout:
    name: HRPLayout
    code: "function HRPLayout() {\r

      \  let dr = UI.dRechts;\r

      \  dr.remove();\r

      \  let drr = UI.DRR = mDiv(dTable);\r

      \  mAppend(drr, UI.dHistory);\r

      \  mAppend(dTable, dr);\r

      \  Clientdata.historyLayout = 'hrp';\r

      }\r\n"
    sig: function HRPLayout(){}
    region: history (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  PHLayout:
    name: PHLayout
    code: "function PHLayout() {\r

      \  if (isdef(UI.DRR)) UI.DRR.remove();\r

      \  mAppend(UI.dRechts, UI.dHistory);\r

      \  Clientdata.historyLayout = 'ph';\r

      }\r\n"
    sig: function PHLayout(){}
    region: history (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  HPLayout:
    name: HPLayout
    code: "function HPLayout() {\r

      \  if (isdef(UI.DRR)) UI.DRR.remove();\r

      \  mInsert(UI.dRechts, UI.dHistory);\r

      \  Clientdata.historyLayout = 'hp';\r

      }\r\n"
    sig: function HPLayout(){}
    region: history (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sss:
    name: sss
    code: "function sss() { show_playerdatastate(); }\r\n"
    sig: function sss(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sss1:
    name: sss1
    code: "function sss1() {\r

      \  let [fen, A, uplayer, plorder, data] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder, Z.uplayer_data];\r

      \  let s = 'no data.state for player ' + uplayer;\r

      \  if (isDict(data.state)) {\r

      \    s = `${uplayer} passes `;\r

      \    for (const k in data.state.di) {\r

      \      s += `${k} ${data.state.di[k]}, `;\r

      \    }\r

      \  }\r

      \  console.log(s);\r

      }\r\n"
    sig: function sss1(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_playerdatastate:
    name: show_playerdatastate
    code: "function show_playerdatastate() {\r

      \  for (const pldata of Z.playerdata) {\r

      \    console.log('player', pldata.name,
      `status=${isEmpty(pldata.player_status) ? 'none' : pldata.player_status}`,
      pldata.state);\r

      \  }\r

      }\r\n"
    sig: function show_playerdatastate(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  shuffletest:
    name: shuffletest
    code: "function shuffletest(list) {\r

      \  for (let i = 0; i < 100; i++) {\r

      \    shuffle(list);\r

      \    console.log('shuffle: ' + jsCopy(list));\r

      \  }\r

      }\r\n"
    sig: function shuffletest(list){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  animatedTitle:
    name: animatedTitle
    code: "function animatedTitle(msg = 'DU BIST DRAN!!!!!') {\r

      \  TO.titleInterval = setInterval(() => {\r

      \    let corner = CORNERS[WhichCorner++ % CORNERS.length];\r

      \    document.title = `${corner} ${msg}`; //'⌞&amp;21543;    U+231E
      \\0xE2Fo\\u0027o Bar';\r

      \  }, 1000);\r

      }\r\n"
    sig: function animatedTitle(msg = 'DU BIST DRAN!!!!!'){}
    region: title (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  staticTitle:
    name: staticTitle
    code: "function staticTitle() {\r

      \  clearInterval(TO.titleInterval);\r

      \  let url = window.location.href;\r

      \  let loc = url.includes('telecave') ? 'telecave' : 'local';\r

      \  let game = isdef(Z) ? stringAfter(Z.friendly, 'of ') : '♠ GAMES
      ♠';\r

      \  document.title = `(${loc}) ${game}`;\r

      }\r\n"
    sig: function staticTitle(){}
    region: title (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  activate_playerstats:
    name: activate_playerstats
    code: "function activate_playerstats(items) {\r

      \  let fen = Z.fen;\r

      \  for (const plname in fen.players) {\r

      \    let ui = items[plname];\r

      \    let d = iDiv(ui);\r

      \    d.onclick = () => { switch_uname(plname); onclick_reload(); }\r

      \  }\r

      }\r\n"
    sig: function activate_playerstats(items){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  if_hotseat_autoswitch:
    name: if_hotseat_autoswitch
    code: "function if_hotseat_autoswitch(result) {\r

      \  if (isdef(result.table) && isdef(Z) && Z.mode == 'hotseat') {\r

      \    let turn = lookup(result, ['table', 'fen', 'turn']);\r

      \    assertion(isdef(turn), 'turn is NOT defined (_sendSIMSIM)
      !!!!');\r

      \    let uname = turn.length == 1 ? turn[0] : arrNext(turn,
      U.name);\r

      \    if (uname != U.name) switch_uname(uname);\r

      \  }\r

      }\r\n"
    sig: function if_hotseat_autoswitch(result){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  switch_uname:
    name: switch_uname
    code: "function switch_uname(plname) {\r

      \  set_user(plname);\r

      \  show_username();\r

      }\r\n"
    sig: function switch_uname(plname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  animate_card_exchange:
    name: animate_card_exchange
    code: "function animate_card_exchange(i0, i1, callback) {\r

      \  ari_make_unselectable(i0);\r

      \  ari_make_unselectable(i1);\r

      \  let d0 = iDiv(i0.o);\r

      \  let d1 = iDiv(i1.o);\r

      \  let r0 = getRect(d0);\r

      \  let r1 = getRect(d1);\r

      \  let c0 = { x: r0.x + r0.w / 2, y: r0.y + r0.h / 2 };\r

      \  let c1 = { x: r1.x + r1.w / 2, y: r1.y + r1.h / 2 };\r

      \  let v = { x: c1.x - c0.x, y: c1.y - c0.y };\r

      \  mTranslateBy(d0, v.x, v.y);\r

      \  mTranslateBy(d1, -v.x, -v.y, 700, callback);\r

      }\r\n"
    sig: function animate_card_exchange(i0, i1, callback){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  animate_card_approx:
    name: animate_card_approx
    code: "function animate_card_approx(card, goal, ms, callback) {\r

      \  let d = iDiv(card);\r

      \  let dgoal = iDiv(goal);\r

      \  let r = getRect(d);\r

      \  let rgoal = getRect(dgoal);\r

      \  let c = { x: r.x + r.w / 2, y: r.y + r.h / 2 };\r

      \  let cgoal = { x: rgoal.x + rgoal.w / 2, y: rgoal.y + rgoal.h / 2
      };\r

      \  let v = { x: cgoal.x - c.x, y: cgoal.y - c.y };\r

      \  mAnimateList(d, { transform: `translateX(${v.x}px)
      translateY(${v.y}px)`, opacity: 0 }, callback, ms, 'linear');\r

      }\r\n"
    sig: function animate_card_approx(card, goal, ms, callback){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  animate_card_transfer:
    name: animate_card_transfer
    code: "function animate_card_transfer(card, goal, callback) {\r

      \  let d = iDiv(card);\r

      \  let dgoal = iDiv(goal);\r

      \  let r = getRect(d);\r

      \  let rgoal = getRect(dgoal);\r

      \  let c = { x: r.x + r.w / 2, y: r.y + r.h / 2 };\r

      \  let cgoal = { x: rgoal.x + rgoal.w / 2, y: rgoal.y + rgoal.h / 2
      };\r

      \  let v = { x: cgoal.x - c.x, y: cgoal.y - c.y };\r

      \  mTranslateBy(d, v.x, v.y, 700, callback);\r

      }\r\n"
    sig: function animate_card_transfer(card, goal, callback){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  animate_title:
    name: animate_title
    code: "function animate_title() {\r

      \  var rev = \"fwd\";\r

      \  function titlebar(val) {\r

      \    var msg = \"Hallodi!\";\r

      \    var res = \" \";\r

      \    var speed = 100;\r

      \    var pos = val;\r

      \    msg = \"   |-\" + msg + \"-|\";\r

      \    var le = msg.length;\r

      \    if (rev == \"fwd\") {\r

      \      if (pos < le) {\r

      \        pos = pos + 1;\r

      \        scroll = msg.substr(0, pos);\r

      \        document.title = scroll;\r

      \        timer = window.setTimeout(\"titlebar(\" + pos + \")\",
      speed);\r

      \      }\r

      \      else {\r

      \        rev = \"bwd\";\r

      \        timer = window.setTimeout(\"titlebar(\" + pos + \")\",
      speed);\r

      \      }\r

      \    }\r

      \    else {\r

      \      if (pos > 0) {\r

      \        pos = pos - 1;\r

      \        var ale = le - pos;\r

      \        scrol = msg.substr(ale, le);\r

      \        document.title = scrol;\r

      \        timer = window.setTimeout(\"titlebar(\" + pos + \")\",
      speed);\r

      \      }\r

      \      else {\r

      \        rev = \"fwd\";\r

      \        timer = window.setTimeout(\"titlebar(\" + pos + \")\",
      speed);\r

      \      }\r

      \    }\r

      \  }\r

      \  titlebar(0);\r

      }\r\n"
    sig: function animate_title(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  beautify_history:
    name: beautify_history
    code: "function beautify_history(lines, title, fen, uplayer) {\r

      \  let html = `<div class=\"history\"><span
      style=\"color:red;font-weight:bold;\">${title}: </span>`;\r

      \  for (const l of lines) {\r

      \    let words = toWords(l);\r

      \    for (const w1 of words) {\r

      \      if (is_card_key(w1)) {\r

      \        html += mCardText(w1);\r

      \        continue;\r

      \      }\r

      \      w = w1.toLowerCase();\r

      \      if (isdef(fen.players[w])) {\r

      \        html += `<span
      style=\"color:${get_user_color(w)};font-weight:bold\"> ${w} </span>`;\r

      \      } else html += ` ${w} `;\r

      \    }\r

      \  }\r

      \  html += \"</div>\";\r

      \  return html;\r

      }\r\n"
    sig: function beautify_history(lines, title, fen, uplayer){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  compute_hidden:
    name: compute_hidden
    code: "function compute_hidden(plname) {\r

      \  let [fen, uplayer] = [Z.fen, Z.uplayer];\r

      \  let pl = fen.players[plname];\r

      \  let hidden;\r

      \  if (isdef(fen.winners)) hidden = false;\r

      \  else if (Z.role == 'spectator') hidden = plname != uplayer;\r

      \  else if (Z.mode == 'hotseat') hidden = (pl.playmode == 'bot' ||
      plname != uplayer);\r

      \  else hidden = plname != Z.uname;\r

      \  return hidden;\r

      }\r\n"
    sig: function compute_hidden(plname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  find_card:
    name: find_card
    code: "function find_card(index, ui_item) { return ui_item.items[index]; }\r\n"
    sig: function find_card(index, ui_item){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_admin_player:
    name: get_admin_player
    code: "function get_admin_player(list) {\r

      \  let res = valf(firstCond(list, x => x == 'mimi'), firstCond(list,
      x => ['felix', 'amanda', 'lauren'].includes(x)));\r

      \  return res ?? list[0];\r

      }\r\n"
    sig: function get_admin_player(list){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_next_in_list:
    name: get_next_in_list
    code: "function get_next_in_list(el, list) {\r

      \  let iturn = list.indexOf(el);\r

      \  let nextplayer = list[(iturn + 1) % list.length];\r

      \  return nextplayer;\r

      }\r\n"
    sig: function get_next_in_list(el, list){}
    region: uname (gamehelpers.js)
    filename: gamehelpers.js
    type: func
    fname: gamehelpers.js
    path: C:\xampp\htdocs\aroot\games\gamehelpers.js
    datetime: 2023-01-17-09-33
    timestamp: 1673976788948.1357
    size: 38600
  get_next_human_player:
    name: get_next_human_player
    code: "function get_next_human_player(plname) {\r

      \  if (nundef(plname)) return null;\r

      \  let [prevturn, mode, turn, uname, plorder, fen, host] =
      [Z.prev.turn, Z.mode, Z.turn, Z.uname, Z.plorder, Z.fen, Z.host];\r

      \  let same = isString(plname) && isList(prevturn) &&
      sameList(prevturn, turn);\r

      \  if (!same) return null;\r

      \  let plnew = get_next_player(Z, plname);\r

      \  while (fen.players[plnew].playmode == 'bot') {\r

      \    plnew = get_next_player(Z, plnew);\r

      \    if (plnew == plname) break;\r

      \  }\r

      \  return plnew;\r

      }\r\n"
    sig: function get_next_human_player(plname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_present_order:
    name: get_present_order
    code: "function get_present_order() {\r

      \  let [fen, uplayer, uname] = [Z.fen, Z.uplayer, Z.uname];\r

      \  let uname_plays = fen.plorder.includes(Z.uname);\r

      \  let show_first = uname_plays && Z.mode == 'multi' ? Z.uname :
      uplayer;\r

      \  return arrCycle(Z.fen.plorder,
      Z.fen.plorder.indexOf(show_first));\r

      }\r\n"
    sig: function get_present_order(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_texture:
    name: get_texture
    code: "function get_texture(name) { return
      `url(../base/assets/textures/${name}.png)`; }\r\n"
    sig: function get_texture(name){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  hide_buildings:
    name: hide_buildings
    code: "function hide_buildings() {\r

      \  let uplayer = Z.uplayer;\r

      \  let buildings = UI.players[uplayer].buildinglist;\r

      \  for (const b of buildings) {\r

      \    for (let i = 1; i < b.items.length; i++) {\r

      \      let card = b.items[i];\r

      \      if (b.schweine.includes(card)) continue;\r

      \      face_down(b.items[i]);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function hide_buildings(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  i_am_host:
    name: i_am_host
    code: "function i_am_host() { return U.name == Z.host; }\r\n"
    sig: function i_am_host(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  i_am_acting_host:
    name: i_am_acting_host
    code: "function i_am_acting_host() { return U.name == Z.fen.acting_host; }\r\n"
    sig: function i_am_acting_host(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  i_am_trigger:
    name: i_am_trigger
    code: "function i_am_trigger() { return is_multi_trigger(U.name); }\r\n"
    sig: function i_am_trigger(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_advanced_user:
    name: is_advanced_user
    code: "function is_advanced_user() {\r

      \  let advancedUsers = ['mimi', 'bob', 'buddy', 'minnow', 'nimble',
      'leo'];\r

      \  return isdef(U) && ((advancedUsers.includes(DA.secretuser) ||
      advancedUsers.includes(U.name)));\r

      }\r\n"
    sig: function is_advanced_user(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_collect_mode:
    name: is_collect_mode
    code: "function is_collect_mode() { return Z.turn.length > 1; }\r\n"
    sig: function is_collect_mode(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_multi_trigger:
    name: get_multi_trigger
    code: "function get_multi_trigger() { return lookup(Z, ['fen', 'trigger']);
      }\r\n"
    sig: function get_multi_trigger(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_multi_trigger:
    name: is_multi_trigger
    code: "function is_multi_trigger(plname) { return lookup(Z, ['fen', 'trigger'])
      == plname; }\r\n"
    sig: function is_multi_trigger(plname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_multi_stage:
    name: is_multi_stage
    code: "function is_multi_stage() { return isdef(Z.fen.trigger); }\r\n"
    sig: function is_multi_stage(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_playerdata_set:
    name: is_playerdata_set
    code: "function is_playerdata_set(plname) {\r

      \  return isdef(Z.playerdata) && !isEmpty(Z.playerdata) &&
      !isEmpty(Z.playerdata.find(x => x.name == plname).state);\r

      }\r\n"
    sig: function is_playerdata_set(plname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_playing:
    name: is_playing
    code: "function is_playing(pl, fen) {\r

      \  return isList(fen.plorder) && fen.plorder.includes(pl) ||
      isList(fen.roundorder) && fen.roundorder.includes(pl) || Z.game ==
      'feedback' && isdef(Z.fen.players[pl]);\r

      }\r\n"
    sig: function is_playing(pl, fen){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_shield_mode:
    name: is_shield_mode
    code: "function is_shield_mode() {\r

      \  return Z.role == 'spectator'\r

      \    || Z.mode == 'multi' && Z.role == 'inactive' && Z.host !=
      Z.uname\r

      \    || Z.mode == 'multi' && Z.role == 'inactive' && Z.pl.playmode
      != 'bot'\r

      }\r\n"
    sig: function is_shield_mode(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  path2fen:
    name: path2fen
    code: "function path2fen(fen, path) { let o = lookup(fen, path.split('.'));
      return o; }\r\n"
    sig: function path2fen(fen, path){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  path2UI:
    name: path2UI
    code: "function path2UI(path) {\r

      \  let res = lookup(UI, path.split('.'));\r

      \  return res;\r

      }\r\n"
    sig: function path2UI(path){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  new_cards_animation:
    name: new_cards_animation
    code: "function new_cards_animation(n = 2) {\r

      \  let [stage, A, fen, plorder, uplayer, deck] = [Z.stage, Z.A,
      Z.fen, Z.plorder, Z.uplayer, Z.deck];\r

      \  let pl = fen.players[uplayer];\r

      \  if (stage == 'card_selection' && !isEmpty(pl.newcards)) {\r

      \    let anim_elems = [];\r

      \    for (const key of pl.newcards) {\r

      \      let ui = lastCond(UI.players[uplayer].hand.items, x => x.key
      == key);\r

      \      if (nundef(ui)) { pl.newcards = []; return; }\r

      \      ui = iDiv(ui);\r

      \      anim_elems.push(ui);\r

      \    }\r

      \    delete pl.newcards;\r

      \    anim_elems.map(x => mPulse(x, n * 1000));\r

      \  }\r

      }\r\n"
    sig: function new_cards_animation(n = 2){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  round_change_animation:
    name: round_change_animation
    code: "function round_change_animation(n = 2) {\r

      \  let [stage, A, fen, plorder, uplayer, deck] = [Z.stage, Z.A,
      Z.fen, Z.plorder, Z.uplayer, Z.deck];\r

      \  let pl = fen.players[uplayer];\r

      \  if (pl.roundchange) {\r

      \    let d = mBy('dTitleLeft');\r

      \    mStyle(d, { 'transform-origin': '0% 0%' });\r

      \    mPulse(d, n * 1000);\r

      \    show_special_message(`${fen.round_winner} won round ${Z.round -
      1}!!!`)\r

      \    delete pl.roundchange;\r

      \  }\r

      }\r\n"
    sig: function round_change_animation(n = 2){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  remove_player:
    name: remove_player
    code: "function remove_player(fen, uname) {\r

      \  if (nundef(fen.original_players)) fen.original_players =
      jsCopy(fen.players);\r

      \  removeInPlace(fen.plorder, uname);\r

      \  delete fen.players[uname];\r

      \  return fen.plorder;\r

      }\r\n"
    sig: function remove_player(fen, uname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_player_strategy:
    name: set_player_strategy
    code: "function set_player_strategy(val) {\r

      \  Z.strategy = Clientdata.strategy = Z.pl.strategy = val;\r

      \  mRemove('dOptions')\r

      }\r\n"
    sig: function set_player_strategy(val){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_admin_ui:
    name: show_admin_ui
    code: "function show_admin_ui() {\r

      \  for (const id of ['bSpotitStart', 'bClearAck', 'bRandomMove',
      'bSkipPlayer', 'bRestartMove']) hide(id);\r

      \  if (Z.game == 'spotit' && Z.uname == Z.host && Z.stage == 'init')
      show('bSpotitStart');\r

      \  else if (Z.game == 'bluff' && Z.uname == Z.host && Z.stage == 1)
      show('bClearAck');\r

      \  else if (Z.uname == Z.host && Z.stage == 'round_end')
      show('bClearAck');\r

      \  else if (Z.game == 'ferro' && Z.uname == 'mimi' && Z.stage !=
      'card_selection') show('bClearAck');\r

      \  if (['ferro', 'bluff', 'aristo', 'a_game'].includes(Z.game) &&
      (Z.role == 'active' || Z.mode == 'hotseat')) {\r

      \    show('bRandomMove');\r

      \  }\r

      \  if (Z.uname == Z.host || Z.uname == 'mimi') show('dHostButtons');
      else hide('dHostButtons');\r

      \  if (DA.TEST0 == true) show('dTestButtons'); else
      hide('dTestButtons');\r

      }\r\n"
    sig: function show_admin_ui(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_player_button:
    name: show_player_button
    code: "function show_player_button(caption, ui_item, handler) {\r

      \  let d = ui_item.container ?? iDiv(ui_item);\r

      \  let styles = { rounding: 6, bg: 'silver', fg: 'black', border: 0,
      maleft: 10 };\r

      \  let b = mButton(caption, handler, d, styles, 'enabled');\r

      \  return b;\r

      }\r\n"
    sig: function show_player_button(caption, ui_item, handler){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_handsorting_buttons_for:
    name: show_handsorting_buttons_for
    code: "function show_handsorting_buttons_for(plname, styles = {}) {\r

      \  if (Z.role == 'spectator' || isdef(mBy('dHandButtons')))
      return;\r

      \  let fen = Z.fen;\r

      \  let pl = fen.players[plname];\r

      \  if (pl.hand.length <= 1) return;\r

      \  let d = UI.players[plname].hand.container; mStyle(d, { position:
      'relative', wmin: 155 });\r

      \  addKeys({ position: 'absolute', left: 58, bottom: -8, height: 25
      }, styles);\r

      \  let dHandButtons = mDiv(d, styles, 'dHandButtons');\r

      \  show_player_button('rank', dHandButtons, onclick_by_rank);\r

      \  show_player_button('suit', dHandButtons, onclick_by_suit);\r

      }\r\n"
    sig: function show_handsorting_buttons_for(plname, styles = {}){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ari_show_handsorting_buttons_for:
    name: ari_show_handsorting_buttons_for
    code: "function ari_show_handsorting_buttons_for(plname) {\r

      \  if (Z.role == 'spectator' || isdef(mBy('dHandButtons')))
      return;\r

      \  let fen = Z.fen;\r

      \  let pl = fen.players[plname];\r

      \  if (pl.hand.length <= 1) return;\r

      \  let d = UI.players[plname].hand.container; mStyle(d, { position:
      'relative' });\r

      \  let dHandButtons = mDiv(d, { position: 'absolute', bottom: -2,
      left: 52, height: 25 }, 'dHandButtons');\r

      \  show_player_button('sort', dHandButtons, onclick_by_rank);\r

      }\r\n"
    sig: function ari_show_handsorting_buttons_for(plname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_view_buildings_button:
    name: show_view_buildings_button
    code: "function show_view_buildings_button(plname) {\r

      \  if (Z.role == 'spectator' || isdef(mBy('dPlayerButtons')))
      return;\r

      \  if (isEmpty(UI.players[plname].buildinglist)) return;\r

      \  let d1 = iDiv(UI.players[plname]); mStyle(d1, { position:
      'relative' });\r

      \  let d2 = mDiv(d1, { position: 'absolute', top: 8, left: 50,
      height: 25 }, 'dPlayerButtons');\r

      \  show_player_button('view buildings', d2,
      onclick_view_buildings);\r

      }\r\n"
    sig: function show_view_buildings_button(plname){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_history_layout:
    name: show_history_layout
    code: "function show_history_layout(layout) {\r

      \  assertion(isdef(UI.dHistoryParent) && isdef(UI.dHistory),
      'UI.dHistoryParent && UI.dHistory do NOT exist!!!');\r

      \  if (layout == 'ph') PHLayout();\r

      \  else if (layout == 'hp') HPLayout();\r

      \  else if (layout == 'prh') PRHLayout();\r

      \  else if (layout == 'hrp') HRPLayout();\r

      \  else PHLayout();\r

      }\r\n"
    sig: function show_history_layout(layout){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_MMM:
    name: show_MMM
    code: "function show_MMM(msg) { show_fleeting_message(msg, mBy('dMMM')); }\r\n"
    sig: function show_MMM(msg){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_polling_signal:
    name: show_polling_signal
    code: "function show_polling_signal() {\r

      \  if (DA.TEST0 != true) return;\r

      \  let d1 = mDiv(mBy('dAdmin'), { position: 'fixed', top: 10, left:
      73 });\r

      \  let bg = Z.skip_presentation == true ? 'grey' : 'green';\r

      \  let d2 = mDiv(d1, { width: 20, height: 20, bg: bg, rounding: 10,
      display: 'inline-block' });\r

      \  mFadeRemove(d1, 1000);\r

      }\r\n"
    sig: function show_polling_signal(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_strategy_popup:
    name: show_strategy_popup
    code: "function show_strategy_popup() {\r

      \  let dpop = mPopup('', dTable, { fz: 16, fg: 'white', top: 0,
      right: 0, border: 'white', padding: 10, bg: 'dimgray' }, 'dOptions');\r

      \  mAppend(dpop, mCreateFrom(`<div
      style=\"text-align:center;width:100%;font-family:Algerian;font-size:22px;\
      \">${Z.game}</div>`));\r

      \  mDiv(dpop, { matop: 5, maleft: 10 }, null, `choose strategy:`);\r

      \  let vals = Config.games[Z.game].options.strategy.split(',');\r

      \  let key = 'strategy';\r

      \  let fs = mRadioGroup(dpop, { fg: 'white' }, `d_${key}`);\r

      \  for (const v of vals) { mRadio(v, isNumber(v) ? Number(v) : v,
      key, fs, { cursor: 'pointer' }, set_player_strategy, key, v ==
      Z.strategy); }\r

      \  measure_fieldset(fs);\r

      }\r\n"
    sig: function show_strategy_popup(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_waiting_for_ack_message:
    name: show_waiting_for_ack_message
    code: "function show_waiting_for_ack_message() {\r

      \  let dInstruction = mBy('dSelections0');\r

      \  mClass(dInstruction, 'instruction');\r

      \  mCenterCenterFlex(dInstruction);\r

      \  mBy('dSelections0').innerHTML = 'waiting for next round to
      start...';\r

      }\r\n"
    sig: function show_waiting_for_ack_message(){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_waiting_message:
    name: show_waiting_message
    code: "function show_waiting_message(msg) {\r

      \  let dInstruction = mBy('dSelections0');\r

      \  mClass(dInstruction, 'instruction');\r

      \  mCenterCenterFlex(dInstruction);\r

      \  mBy('dSelections0').innerHTML = msg;\r

      }\r\n"
    sig: function show_waiting_message(msg){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  feedback:
    name: feedback
    code: "function feedback() { }\r\n"
    sig: function feedback(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  feedback_present:
    name: feedback_present
    code: "function feedback_present() {\r

      \  dTable = mBy('dTable'); mStyle(dTable,{padding:20});\r

      \  DA.no_shield = true;\r

      \  feedback_stats(dTable);\r

      \  let dgreen = get_plus_progressbar(dTable, 'green');\r

      \  mLinebreak(dTable);\r

      \  let dred = get_plus_progressbar(dTable, 'red');\r

      \  mLinebreak(dTable);\r

      \  DA.bars = {\r

      \    green: dgreen,\r

      \    red: dred,\r

      \  };\r

      \  set_bar('green'); set_bar('red');\r

      \  if (Z.role == 'spectator') {\r

      \    feedback_disable_ui();\r

      \    mButton('JOIN AS PLAYER', onclick_join_as_player, dTable, { h:
      40, w: 200 });\r

      \  } else if (i_am_host()) {\r

      \    let [uname, fen, options, uplayer] = [Z.uname, Z.fen,
      Z.options, Z.uplayer];\r

      \    mButton('reset', onclick_reset_progressbars, dTable, { h: 30,
      w: 100 });\r

      \    feedback_disable_ui();\r

      \    let playerlist = Z.playerlist;\r

      \    let pldatalist = Z.playerdata.map(x => x.name);\r

      \    console.log('playerlist', playerlist, 'pldatalist',
      pldatalist);\r

      \    for (const plname of pldatalist) {\r

      \      if (!playerlist.includes(plname)) {\r

      \        console.log('plname', plname, 'not in playerlist',
      playerlist);\r

      \        fen.players[plname] = { score: 0, name: plname, color:
      get_user_color(plname) };\r

      \      }\r

      \    }\r

      \    if (playerlist.length != pldatalist.length) {\r

      \      phpPost({ friendly: Z.friendly, uname: Z.uplayer, players:
      pldatalist, fen: fen }, 'add_players');\r

      \    }\r

      \    fen.decrement = 0;\r

      \    start_downgrade_ticker();\r

      \  } else {\r

      \    assertion(Z.playerlist.includes(Z.uname),`${Z.uname} not in
      playerlist ${Z.playerlist} and not spectator`);\r

      \  }\r

      }\r\n"
    sig: function feedback_present(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\games\feedback.js
    datetime: 2022-08-19-22-39
    timestamp: 1660973999946.3196
    size: 5291
  feedback_stats:
    name: feedback_stats
    code: "function feedback_stats(d) {\r

      \  let players = Z.fen.players;\r

      \  let d1 = mDiv(d, { display: 'flex', 'justify-content': 'center',
      'align-items': 'space-evenly' });\r

      \  for (const plname in players) {\r

      \    let pl = players[plname];\r

      \    let sz = 50; \r

      \    let bcolor = 'silver';\r

      \    let border = pl.playmode == 'bot' ? `double 5px ${bcolor}` :
      `solid 5px ${bcolor}`;\r

      \    let rounding = pl.playmode == 'bot' ? '0px' : '50%';\r

      \    let d2 = mDiv(d1, { margin: 4, align: 'center' }, null, `<img
      src='../base/assets/images/${plname}.jpg'
      style=\"border-radius:${rounding};display:block;border:${border};box-sizi\
      ng:border-box\" class='img_person' width=${sz} height=${sz}>`);\r

      \  }\r

      }\r\n"
    sig: function feedback_stats(d){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\games\feedback.js
    datetime: 2022-08-19-22-39
    timestamp: 1660973999946.3196
    size: 5291
  feedback_disable_ui:
    name: feedback_disable_ui
    code: "function feedback_disable_ui() {\r

      \  for (const k in DA.bars) {\r

      \    let bar = DA.bars[k];\r

      \    let b=bar.cont.getElementsByTagName('button')[0];\r

      \    b.disabled = true;\r

      \  }\r

      }\r\n"
    sig: function feedback_disable_ui(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\games\feedback.js
    datetime: 2022-08-19-22-39
    timestamp: 1660973999946.3196
    size: 5291
  get_plus_progressbar:
    name: get_plus_progressbar
    code: "function get_plus_progressbar(dParent, color, id) {\r

      \  if (nundef(id)) id = getUID();\r

      \  let d = mDiv(dParent, {}, id, null, 'grid_progressbar');\r

      \  let button = mButton('+', () => onclick_plus(color, 10), d);\r

      \  let d1 = mDiv(d, {}, null, null, 'progressbar');\r

      \  let winit = DA.winit = 10;\r

      \  let dbar = mDiv(d1, { bg: color, w: winit + '%' }, 'b_' + color,
      null, 'barstatus');\r

      \  return { w: winit, cont: d, div: dbar, ti: null };\r

      }\r\n"
    sig: function get_plus_progressbar(dParent, color, id){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  onclick_join_as_player:
    name: onclick_join_as_player
    code: "function onclick_join_as_player() {\r

      \  let [uname, fen, options, uplayer] = [Z.uname, Z.fen, Z.options,
      Z.uplayer];\r

      \  console.log('uname', uname, 'uplayer', uplayer);\r

      \  phpPost({ friendly: Z.friendly, uname: uname }, 'join');\r

      }\r\n"
    sig: function onclick_join_as_player(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\games\feedback.js
    datetime: 2022-08-19-22-39
    timestamp: 1660973999946.3196
    size: 5291
  onclick_reset_progressbars:
    name: onclick_reset_progressbars
    code: "function onclick_reset_progressbars() {\r

      \  DA.winit = 10; \r

      \  let oldfen=isdef(Z.fen)?jsCopy(Z.fen):{green:0,red:0};\r

      \  let fen={green:DA.winit,red:DA.winit};\r

      \  for (const k in DA.bars) {\r

      \    set_new_goal(k, DA.winit);\r

      \  }\r

      \  phpPost({ friendly: 'feedback', fen: fen }, 'reset');\r

      }\r\n"
    sig: function onclick_reset_progressbars(){}
    region: funcs (host.js)
    filename: host.js
    type: func
    fname: host.js
    path: C:\xampp\htdocs\aroot\_other\feedback\host.js
    datetime: 2022-08-20-10-49
    timestamp: 1661017792834.9763
    size: 1229
  onclick_plus:
    name: onclick_plus
    code: "function onclick_plus(id, inc) {\r

      \  console.log('id', id);\r

      \  ensure_clientstate();\r

      \  Clientdata.state[id]++;\r

      \  console.log('sending Clientdata.state', Clientdata.state);\r

      \  let o = { friendly: 'feedback', uname: Clientdata.uid, state:
      jsCopy(Clientdata.state) };\r

      \  phpPost(o, 'update_player');\r

      }\r\n"
    sig: function onclick_plus(id, inc){}
    region: funcs (guest.js)
    filename: guest.js
    type: func
    fname: guest.js
    path: C:\xampp\htdocs\aroot\_other\feedback\guest.js
    datetime: 2022-08-20-10-59
    timestamp: 1661018397957.7805
    size: 1111
  set_bar:
    name: set_bar
    code: "function set_bar(id, val, speed) {\r

      \  let bar = DA.bars[id];\r

      \  let goal = Math.min(100, Math.max(0, val));\r

      \  if (goal == bar.w) return;\r

      \  let i = goal > bar.w ? speed : -speed;\r

      \  clearInterval(bar.ti);\r

      \  bar.ti = setInterval(() => anim(bar, i, goal), 10);\r

      \  function anim(bar, i, goal) {\r

      \    if (i < 0 && bar.w <= goal || i > 0 && bar.w >= goal) {\r

      \      clearInterval(bar.ti);\r

      \    } else {\r

      \      bar.w += i;\r

      \      bar.div.style.width = bar.w + '%';\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function set_bar(id, val, speed){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\games\feedback.js
    datetime: 2022-08-19-22-39
    timestamp: 1660973999946.3196
    size: 5291
  start_downgrade_ticker:
    name: start_downgrade_ticker
    code: "function start_downgrade_ticker() {\r

      \  TO.main = setTimeout(degrade_bars, 5000);\r

      }\r\n"
    sig: function start_downgrade_ticker(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\xampp\htdocs\aroot\games\baustelle.js
    datetime: 2022-08-19-22-51
    timestamp: 1660974674959.355
    size: 885
  degrade_bars:
    name: degrade_bars
    code: "function degrade_bars(dec) {\r

      \  let res = {};\r

      \  for (const color in DA.bars) {\r

      \    let bar = DA.bars[color];\r

      \    let val = Math.max(0, bar.w - dec);\r

      \    set_new_goal(color, val, 1);\r

      \    res[color] = val;\r

      \  }\r

      \  return res\r

      }\r\n"
    sig: function degrade_bars(dec){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  feedback_update_fen:
    name: feedback_update_fen
    code: "function feedback_update_fen() {\r

      \  let fen = Z.fen;\r

      \  fen.barvalues = {};\r

      \  for (const pldata of Z.playerdata) {\r

      \    if (isdef(pldata.state)) {\r

      \      for (const color in pldata.state) {\r

      \        let value = pldata.state[color];\r

      \        if (isdef(fen.barvalues[color])) {\r

      \          fen.barvalues[color] += value;\r

      \        } else {\r

      \          fen.barvalues[color] = value;\r

      \        }\r

      \      }\r

      \    }\r

      \  }\r

      \  for(const k in fen.barvalues) {\r

      \    let val = fen.barvalues[k]-fen.decrement;\r

      \    if (val<0) val=0;\r

      \    fen.barvalues[k] = val;\r

      \  }\r

      }\r\n"
    sig: function feedback_update_fen(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\xampp\htdocs\aroot\games\baustelle.js
    datetime: 2022-08-19-22-51
    timestamp: 1660974674959.355
    size: 885
  mAnimateList:
    name: mAnimateList
    code: "function mAnimateList(elem, ogoal, callback, msDuration = 1000, easing =
      'cubic-bezier(1,-0.03,.86,.68)', delay = 0) {\r

      \  for (const k in ogoal) {\r

      \    ogoal[k] = isString(ogoal[k]) || k == 'opacity' ? ogoal[k] : ''
      + ogoal[k] + 'px';\r

      \  }\r

      \  let kflist = [ogoal];\r

      \  let opts = { duration: msDuration, fill: 'forwards', easing:
      easing, delay: delay };\r

      \  let a = toElem(elem).animate(kflist, opts);\r

      \  if (isdef(callback)) { a.onfinish = callback; }\r

      \  return a;\r

      }\r\n"
    sig: function mAnimateList(elem, ogoal, callback, msDuration = 1000, easing =
      'cubic-bezier(1,-0.03,.86,.68)', delay = 0){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTableTransition:
    name: mTableTransition
    code: "function mTableTransition(d, ms = 800) {\r

      \  toElem(d).animate([{ opacity: .25 }, { opacity: 1 },], { fill:
      'both', duration: ms, easing: 'ease' });\r

      }\r\n"
    sig: function mTableTransition(d, ms = 800){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTranslateBy:
    name: mTranslateBy
    code: "function mTranslateBy(elem, x, y, ms = 800, callback = null) {\r

      \  mAnimate(elem, 'transform', [`translateX(${x}px)
      translateY(${y}px)`], callback, ms, 'ease');\r

      }\r\n"
    sig: function mTranslateBy(elem, x, y, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTranslateByFade:
    name: mTranslateByFade
    code: "function mTranslateByFade(elem, x, y, ms = 800, callback = null) {\r

      \  mAnimate(elem, 'transform', [`translateX(${x}px)
      translateY(${y}px)`], callback, ms, 'ease');\r

      \  let a = toElem(elem).animate([{ opacity: .25 }, { opacity: 1 },],
      { fill: 'both', duration: ms, easing: 'ease' });\r

      }\r\n"
    sig: function mTranslateByFade(elem, x, y, ms = 800, callback = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rUniqueId:
    name: rUniqueId
    code: "function rUniqueId(n) { return
      rChoose(toLetters('0123456789abcdefghijklmnopqABCDEFGHIJKLMNOPQRSTUVWXYZ_\
      '), n).join(''); }\r\n"
    sig: function rUniqueId(n){}
    region: random (basemin.js)
    filename: basemin.js
    type: func
    fname: basemin.js
    path: C:\xampp\htdocs\aroot\_other\feedback\basemin.js
    datetime: 2022-08-20-09-57
    timestamp: 1661014653826.6746
    size: 153589
  log_array:
    name: log_array
    code: "function log_array(arr) {\r

      \  arr.map(x => console.log(x));\r

      }\r\n"
    sig: function log_array(arr){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  reverse:
    name: reverse
    code: "function reverse(x) {\r

      \  if (isString(x)) {\r

      \    var newString = \"\";\r

      \    for (var i = x.length - 1; i >= 0; i--) {\r

      \      newString += x[i];\r

      \    }\r

      \    return newString;\r

      \  }\r

      \  if (isList(x)) return x.reverse();\r

      \  if (isDict(x)) return dict2list(x, 'value').reverse();\r

      \  return x;\r

      }\r\n"
    sig: function reverse(x){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aggregate_elements:
    name: aggregate_elements
    code: "function aggregate_elements(list_of_object, propname) {\r

      \  let result = [];\r

      \  for (let i = 0; i < list_of_object.length; i++) {\r

      \    let obj = list_of_object[i];\r

      \    let arr = obj[propname];\r

      \    for (let j = 0; j < arr.length; j++) {\r

      \      result.push(arr[j]);\r

      \    }\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function aggregate_elements(list_of_object, propname){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  complexCompare:
    name: complexCompare
    code: "function complexCompare(obj1, obj2) {\r

      \  const obj1Keys = Object.keys(obj1);\r

      \  const obj2Keys = Object.keys(obj2);\r

      \  if (obj1Keys.length !== obj2Keys.length) {\r

      \    return false;\r

      \  }\r

      \  for (let objKey of obj1Keys) {\r

      \    if (obj1[objKey] !== obj2[objKey]) {\r

      \      if (typeof obj1[objKey] == \"object\" && typeof obj2[objKey]
      == \"object\") {\r

      \        if (!isEqual(obj1[objKey], obj2[objKey])) {\r

      \          return false;\r

      \        }\r

      \      }\r

      \      else {\r

      \        return false;\r

      \      }\r

      \    }\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function complexCompare(obj1, obj2){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  exchange_by_index:
    name: exchange_by_index
    code: "function exchange_by_index(arr1, i1, arr2, i2) {\r

      \  let temp = arr1[i1];\r

      \  arr1[i1] = arr2[i2];\r

      \  arr2[i2] = temp;\r

      }\r\n"
    sig: function exchange_by_index(arr1, i1, arr2, i2){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  if_plural:
    name: if_plural
    code: "function if_plural(n) { return n == 1 ? '' : 's'; }\r\n"
    sig: function if_plural(n){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  if_stringified_or_list:
    name: if_stringified_or_list
    code: "function if_stringified_or_list(obj) { return nundef(obj) ? [] :
      is_stringified(obj) ? JSON.parse(obj) : obj; }\r\n"
    sig: function if_stringified_or_list(obj){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  if_stringified_or_dict:
    name: if_stringified_or_dict
    code: "function if_stringified_or_dict(obj) { return nundef(obj) ? {} :
      is_stringified(obj) ? JSON.parse(obj) : obj; }\r\n"
    sig: function if_stringified_or_dict(obj){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  if_stringified_or_string:
    name: if_stringified_or_string
    code: "function if_stringified_or_string(obj) { return nundef(obj) ? '' :
      is_stringified(obj) ? JSON.parse(obj) : obj; }\r\n"
    sig: function if_stringified_or_string(obj){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  if_stringified:
    name: if_stringified
    code: "function if_stringified(obj) { return is_stringified(obj) ?
      JSON.parse(obj) : obj; }\r\n"
    sig: function if_stringified(obj){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_stringified:
    name: is_stringified
    code: "function is_stringified(obj) {\r

      \  if (isString(obj)) {\r

      \    return '\"\\'{[('.includes(obj[0]);\r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function is_stringified(obj){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFlip:
    name: mFlip
    code: "function mFlip(card, ms, callback) {\r

      \  let a = mAnimate(iDiv(card), 'transform', [`scale(1,1)`,
      `scale(0,1)`],\r

      \    () => {\r

      \      if (card.faceUp) face_down(card); else face_up(card);\r

      \      mAnimate(iDiv(card), 'transform', [`scale(0,1)`,
      `scale(1,1)`], callback, ms / 2, 'ease-in', 0, 'both');\r

      \    },\r

      \    ms / 2, 'ease-out', 0, 'both');\r

      }\r\n"
    sig: function mFlip(card, ms, callback){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  object2string:
    name: object2string
    code: "function object2string(o, props = [], except_props = []) {\r

      \  let s = '';\r

      \  if (nundef(o)) return s;\r

      \  if (isString(o)) return o;\r

      \  let keys = Object.keys(o).sort();\r

      \  for (const k of keys) {\r

      \    if (!isEmpty(props) && props.includes(k) ||
      !except_props.includes(k)) {\r

      \      let val = isList(o[k]) ? o[k].join(',') : isDict(o[k]) ?
      object2string(o[k].props, except_props) : o[k];\r

      \      let key_part = isEmpty(s) ? '' : `, ${k}:`;\r

      \      s += val;\r

      \    }\r

      \  }\r

      \  return s;\r

      }\r\n"
    sig: function object2string(o, props = [], except_props = []){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  simpleCompare:
    name: simpleCompare
    code: "function simpleCompare(o1, o2) {\r

      \  let s1 = object2string(o1);\r

      \  let s2 = object2string(o2);\r

      \  return s1 == s2;\r

      }\r\n"
    sig: function simpleCompare(o1, o2){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  calc_speed:
    name: calc_speed
    code: "function calc_speed(oldgoal, newgoal) {\r

      \  let speed = Math.abs(newgoal - oldgoal) / 10;\r

      \  return speed;\r

      }\r\n"
    sig: function calc_speed(oldgoal, newgoal){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  ensure_clientstate:
    name: ensure_clientstate
    code: "function ensure_clientstate() {\r

      \  if (nundef(Clientdata.state)) {\r

      \    Clientdata.state = {};\r

      \    for (const k in DA.bars) Clientdata.state[k] = 0; \r

      \  }\r

      }\r\n"
    sig: function ensure_clientstate(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  ensure_Z:
    name: ensure_Z
    code: "function ensure_Z() {\r

      \  if (nundef(Z)) Z = {};\r

      \  copyKeys(Serverdata, Z);\r

      \  if (isdef(Serverdata.table)) { copyKeys(Serverdata.table, Z);
      copyKeys(Serverdata.table.fen, Z); }\r

      }\r\n"
    sig: function ensure_Z(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  disable_bar_ui:
    name: disable_bar_ui
    code: "function disable_bar_ui() {\r

      \  for (const k in DA.bars) {\r

      \    let bar = DA.bars[k];\r

      \    let b = bar.cont.getElementsByTagName('button')[0];\r

      \    b.disabled = true;\r

      \  }\r

      }\r\n"
    sig: function disable_bar_ui(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  get_bar_values:
    name: get_bar_values
    code: "function get_bar_values() {\r

      \  let res = {};\r

      \  for (const color in DA.bars) {\r

      \    let bar = DA.bars[color];\r

      \    res[color] = bar.w;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function get_bar_values(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  get_clicks_from_playerdata:
    name: get_clicks_from_playerdata
    code: "function get_clicks_from_playerdata() {\r

      \  let clicks = { green: 0, red: 0 };\r

      \  for (const pl of Z.playerdata) {\r

      \    let state = pl.state;\r

      \    if (!isEmpty(state)) {\r

      \      for (const k of ['green', 'red']) {\r

      \        if (state[k] > 0) {\r

      \          clicks[k] += state[k];\r

      \        }\r

      \      }\r

      \    }\r

      \  }\r

      \  return clicks;\r

      }\r\n"
    sig: function get_clicks_from_playerdata(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  init_table:
    name: init_table
    code: "function init_table() {\r

      \  dTable = mBy('dTable'); mStyle(dTable, { box: true, padding: 10,
      hmin: 500, w: '100%' }); \r

      }\r\n"
    sig: function init_table(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  onclick_role:
    name: onclick_role
    code: "function onclick_role(role) {\r

      \  mFade(mBy('dRoles'), 1000, null, 'linear');\r

      \  show_my_role(role);\r

      }\r\n"
    sig: function onclick_role(role){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  set_new_goal:
    name: set_new_goal
    code: "function set_new_goal(id, goal, speed = .1) {\r

      \  let bar = DA.bars[id];\r

      \  goal = Math.min(100, Math.max(0, goal));\r

      \  if (goal == bar.w) return;\r

      \  let i = goal > bar.w ? speed : -speed;\r

      \  clearInterval(bar.ti);\r

      \  bar.ti = setInterval(() => anim(bar, i, goal), 10);\r

      \  function anim(bar, i, goal) {\r

      \    if (i < 0 && bar.w <= goal || i > 0 && bar.w >= goal) {\r

      \      clearInterval(bar.ti);\r

      \    } else {\r

      \      bar.w += i;\r

      \      bar.div.style.width = bar.w + '%';\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function set_new_goal(id, goal, speed = .1){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  show_bars:
    name: show_bars
    code: "function show_bars() {\r

      \  let d = mDiv(dTable, { w: '100%', box: true, opacity: 0 },
      'dBars');\r

      \  mLinebreak(d);\r

      \  let dgreen = get_plus_progressbar(d, 'green');\r

      \  mLinebreak(d);\r

      \  let dred = get_plus_progressbar(d, 'red');\r

      \  mLinebreak(d);\r

      \  DA.bars = {\r

      \    green: dgreen,\r

      \    red: dred,\r

      \  };\r

      \  return d;\r

      }\r\n"
    sig: function show_bars(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  show_my_role:
    name: show_my_role
    code: "function show_my_role(role) {\r

      \  let dRoles = mBy('dRoles');\r

      \  dRoles.innerHTML = `<h1>${role}</h1>`;\r

      \  Clientdata.role = role;\r

      \  mAppear(dRoles, 1000, null, 'linear');\r

      \  let d = show_bars();\r

      \  mAppear(d, 1000, null, 'linear');\r

      \  if (role == 'host') {\r

      \    mButton('reset', onclick_reset_progressbars, d, { h: 30, w: 100
      });\r

      \    disable_bar_ui();\r

      \  } else if (role == 'guest') {\r

      \    if (nundef(Clientdata.uid)) Clientdata.uid = rUniqueId(30);\r

      \    Clientdata.new_clicks = 0;\r

      \  }\r

      \  autopoll();\r

      }\r\n"
    sig: function show_my_role(role){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  show_roles:
    name: show_roles
    code: "function show_roles() {\r

      \  let d = mDiv(dTable, {}, 'dRoles', null, 'grid_roles');\r

      \  mButton('host', () => onclick_role('host'), d, {}, ['donebutton',
      'enabled']);\r

      \  mButton('guest', () => onclick_role('guest'), d, {},
      ['donebutton', 'enabled']);\r

      }\r\n"
    sig: function show_roles(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  start_creeping_down:
    name: start_creeping_down
    code: "function start_creeping_down() {\r

      \  for (const k in Z.fen) {\r

      \    set_new_goal(k, 0);\r

      \  }\r

      }\r\n"
    sig: function start_creeping_down(){}
    region: funcs (feedback.js)
    filename: feedback.js
    type: func
    fname: feedback.js
    path: C:\xampp\htdocs\aroot\_other\feedback\feedback.js
    datetime: 2022-08-20-10-36
    timestamp: 1661016971791.5938
    size: 4490
  host_update:
    name: host_update
    code: "function host_update(){\r

      \  assertion(isdef(Z.fen), 'no fen');\r

      \  check_for_clicks();\r

      \  show_status();\r

      }\r\n"
    sig: function host_update(){}
    region: funcs (host.js)
    filename: host.js
    type: func
    fname: host.js
    path: C:\xampp\htdocs\aroot\_other\feedback\host.js
    datetime: 2022-08-20-10-49
    timestamp: 1661017792834.9763
    size: 1229
  check_for_clicks:
    name: check_for_clicks
    code: "function check_for_clicks(){\r

      \  let cur = get_bar_values();\r

      \  let clicks = get_clicks_from_playerdata();\r

      \  let newgoals=jsCopy(Z.fen),changed=false;\r

      \  for(const k in cur){\r

      \    if (clicks[k]==0) continue;\r

      \    changed=true;\r

      \    let newgoal = cur[k] + clicks[k]*10;\r

      \    newgoals[k]=newgoal;\r

      \    set_new_goal(k, newgoal);\r

      \  }\r

      \  Z.fen = newgoals;\r

      \  if (changed){\r

      \    phpPost({ friendly: 'feedback', fen: newgoals,
      newstate:{green:0,red:0} }, 'update_fen');\r

      \  }else{\r

      \    autopoll();\r

      \  }\r

      }\r\n"
    sig: function check_for_clicks(){}
    region: funcs (host.js)
    filename: host.js
    type: func
    fname: host.js
    path: C:\xampp\htdocs\aroot\_other\feedback\host.js
    datetime: 2022-08-20-10-49
    timestamp: 1661017792834.9763
    size: 1229
  guest_update:
    name: guest_update
    code: "function guest_update() {\r

      \  assertion(isdef(Z.fen), 'no fen');\r

      \  show_status();\r

      \  let mydata = firstCond(Z.playerdata,x=>x.name ==
      Clientdata.uid);\r

      \  if (isdef(mydata) && isdef(mydata.state) &&
      isNumber(mydata.state.green)) {\r

      \    console.log('mydata.state', mydata.state);\r

      \    assertion(isdef(mydata.state), 'no state');\r

      \    for(const k of ['green','red']){\r

      \      assertion(isNumber(mydata.state[k]), 'NAN state['+k+']');\r

      \      Clientdata.state[k] =
      Math.ceil((mydata.state[k]+Clientdata.state[k])/2);\r

      \    }\r

      \  }\r

      \  for (const k in Z.fen) {\r

      \    set_new_goal(k, Z.fen[k]);\r

      \  }\r

      \  autopoll();\r

      }\r\n"
    sig: function guest_update(){}
    region: funcs (guest.js)
    filename: guest.js
    type: func
    fname: guest.js
    path: C:\xampp\htdocs\aroot\_other\feedback\guest.js
    datetime: 2022-08-20-10-59
    timestamp: 1661018397957.7805
    size: 1111
  ferro_present:
    name: ferro_present
    code: "function ferro_present(dParent) {\r

      \  if (DA.simulate == true) show('bRestartMove'); else
      hide('bRestartMove'); \r

      \  let [fen, ui, uplayer, stage, pl] = [Z.fen, UI, Z.uplayer,
      Z.stage, Z.pl];\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent);\r

      \  ferro_stats(dRechts);\r

      \  show_history(fen, dRechts);\r

      \  let deck = ui.deck = ui_type_deck(fen.deck, dOpenTable, { maleft:
      12 }, 'deck', 'deck', ferro_get_card);\r

      \  let deck_discard = ui.deck_discard =
      ui_type_deck(fen.deck_discard, dOpenTable, { maleft: 12 }, 'deck_discard',
      '', ferro_get_card);\r

      \  if (!isEmpty(deck_discard.items))
      face_up(deck_discard.get_topcard());\r

      \  order = get_present_order();\r

      \  for (const plname of order) {\r

      \    let pl = fen.players[plname];\r

      \    let playerstyles = { w: '100%', bg: '#ffffff80', fg: 'black',
      padding: 4, margin: 4, rounding: 10, border: `2px
      ${get_user_color(plname)} solid` };\r

      \    let d = mDiv(dMiddle, playerstyles, null,
      get_user_pic_html(plname, 25));\r

      \    mFlexWrap(d);\r

      \    mLinebreak(d, 10);\r

      \    let hidden = compute_hidden(plname);\r

      \    ferro_present_player(plname, d, hidden);\r

      \  }\r

      \  Z.isWaiting = false;\r

      \  if (Z.stage == 'round_end') {\r

      \    show_waiting_for_ack_message();\r

      \    if (Z.role=='active' || i_am_host()) {\r

      \      show('bClearAck');\r

      \    }\r

      \  } else if (Z.stage == 'buy_or_pass' && uplayer == fen.trigger &&
      ferro_check_resolve()) {\r

      \    assertion(Z.stage == 'buy_or_pass', 'stage is not buy_or_pass
      when checking can_resolve!');\r

      \    Z.stage = 'can_resolve';\r

      \    [Z.turn, Z.stage] = [[get_multi_trigger()], 'can_resolve'];\r

      \    take_turn_fen(); return;\r

      \  } else if (Z.stage == 'buy_or_pass' && (Z.role != 'active' ||
      is_playerdata_set(uplayer))) {\r

      \    assertion(isdef(Z.playerdata), 'playerdata is not defined in
      buy_or_pass (present ferro)');\r

      \    let pl_not_done = Z.playerdata.filter(x =>
      Z.turn.includes(x.name) && isEmpty(x.state)).map(x => x.name);\r

      \    show_waiting_message(`waiting for possible buy decision...`);\r

      \    Z.isWaiting = true;\r

      \  }\r

      \  show_handsorting_buttons_for(Z.mode == 'hotseat' ? Z.uplayer :
      Z.uname, { bottom: -2 });\r

      \  new_cards_animation();\r

      }\r\n"
    sig: function ferro_present(dParent){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_present_player:
    name: ferro_present_player
    code: "function ferro_present_player(plname, d, ishidden = false) {\r

      \  let fen = Z.fen;\r

      \  let pl = fen.players[plname];\r

      \  let ui = UI.players[plname] = { div: d };\r

      \  Config.ui.card.h = ishidden ? 100 : 150;\r

      \  Config.ui.container.h = Config.ui.card.h + 30;\r

      \  if (!ishidden) pl.hand = correct_handsorting(pl.hand, plname);\r

      \  let hand = ui.hand = ui_type_hand(pl.hand, d, {},
      `players.${plname}.hand`, 'hand', ferro_get_card);\r

      \  if (ishidden) { hand.items.map(x => face_down(x)); }\r

      \  ui.journeys = [];\r

      \  let i = 0;\r

      \  for (const j of pl.journeys) {\r

      \    let jui = ui_type_lead_hand(j, d, { maleft: 12, h: 130 },
      `players.${plname}.journeys.${i}`, '', ferro_get_card);\r

      \    i += 1;\r

      \    ui.journeys.push(jui);\r

      \  }\r

      }\r\n"
    sig: function ferro_present_player(plname, d, ishidden = false){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_state:
    name: ferro_state
    code: "function ferro_state(dParent) {\r

      \  if (DA.TEST0 == true) {\r

      \    let html = `${Z.stage}`;\r

      \    if (isdef(Z.playerdata)) {\r

      \      let trigger = get_multi_trigger();\r

      \      if (trigger) html += ` trigger:${trigger}`;\r

      \      for (const data of Z.playerdata) {\r

      \        if (data.name == trigger) continue;\r

      \        let name = data.name;\r

      \        let state = data.state;\r

      \        let s_state = object2string(state);\r

      \        html += ` ${name}:'${s_state}'`; \r

      \      }\r

      \      dParent.innerHTML += ` ${Z.playerdata.map(x => x.name)}`;\r

      \    }\r

      \    dParent.innerHTML = html;\r

      \    return;\r

      \  }\r

      \  if (Z.stage == 'round_end') {\r

      \    dParent.innerHTML = `Round ${Z.round} ended by
      &nbsp;${get_user_pic_html(Z.fen.round_winner, 30)}`;\r

      \  } else if (is_fixed_goal()) {\r

      \    let goal = get_round_goal();\r

      \    console.log('goal', goal);\r

      \    let goal_html = `<div
      style=\"font-weight:bold;border-radius:50%;background:white;color:red;lin\
      e-height:100%;padding:4px 8px\">${goal}</div>`;\r

      \    dParent.innerHTML = `Round
      ${Z.round}:&nbsp;&nbsp;minimum:&nbsp;${goal_html}`;\r

      \  } else {\r

      \    let user_html = get_user_pic_html(Z.stage == 'buy_or_pass' ?
      Z.fen.nextturn[0] : Z.turn[0], 30);\r

      \    dParent.innerHTML = `Round ${Z.round}:&nbsp;${Z.stage ==
      'buy_or_pass' ? 'next ' : ''}turn: ${user_html} `;\r

      \  }\r

      }\r\n"
    sig: function ferro_state(dParent){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_stats:
    name: ferro_stats
    code: "function ferro_stats(dParent) {\r

      \  let player_stat_items = UI.player_stat_items =
      ui_player_info(dParent);\r

      \  let fen = Z.fen;\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    let item = player_stat_items[plname];\r

      \    let d = iDiv(item); mCenterFlex(d); mStyle(d, { wmin: 150 });
      mLinebreak(d);\r

      \    player_stat_count('coin', pl.coins, d);\r

      \    player_stat_count('pinching hand', pl.hand.length, d);\r

      \    if (!compute_hidden(plname)) player_stat_count('hand with
      fingers splayed', calc_hand_value(pl.hand), d);\r

      \    player_stat_count('star', pl.score, d);\r

      \    mLinebreak(d, 4);\r

      \    if (!is_fixed_goal()) {\r

      \      let d2 = mDiv(d, { padding: 4, display: 'flex' },
      `d_${plname}_goals`);\r

      \      if (fen.availableGoals.length < 4) { mStyle(d2, { wmin: 120
      }); mCenterFlex(d2); }\r

      \      let sz = 16;\r

      \      let styles_done = { h: sz, fz: sz, maleft: 6, fg: 'grey',
      'text-decoration': 'line-through green', weight: 'bold' };\r

      \      let styles_todo = { h: sz, fz: sz, maleft: 6, border: 'red',
      weight: 'bold', padding: 4, 'line-height': sz }; \r

      \      for (const k of fen.roundGoals) { \r

      \        mText(k, d2, pl.goals[k] ? styles_done : styles_todo);\r

      \      }\r

      \    }\r

      \    if (fen.turn.includes(plname)) { show_hourglass(plname, d, 30,
      { left: -3, top: 0 }); }\r

      \  }\r

      }\r\n"
    sig: function ferro_stats(dParent){}
    region: funcs (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_change_to_buy_pass:
    name: ferro_change_to_buy_pass
    code: "function ferro_change_to_buy_pass() {\r

      \  let [plorder, stage, A, fen, uplayer] = [Z.plorder, Z.stage, Z.A,
      Z.fen, Z.uplayer];\r

      \  let nextplayer = get_next_player(Z, uplayer); \r

      \  let newturn = jsCopy(plorder); while (newturn[0] != nextplayer) {
      newturn = arrCycle(newturn, 1); } \r

      \  fen.canbuy = newturn.filter(x => x != uplayer &&
      fen.players[x].coins > 0); \r

      \  fen.trigger = uplayer; \r

      \  fen.buyer = null;\r

      \  fen.nextturn = [nextplayer];\r

      \  if (isEmpty(fen.canbuy)) { Z.stage = 'can_resolve';
      ferro_change_to_card_selection(); return; }\r

      \  else if (Z.mode == 'multi') { [Z.stage, Z.turn] = ['buy_or_pass',
      fen.canbuy]; fen.keeppolling = true; take_turn_fen_clear(); }\r

      \  else {\r

      \    fen.canbuy.map(x => fen.players[x].buy = 'unset');\r

      \    fen.lastplayer = arrLast(fen.canbuy);\r

      \    [Z.stage, Z.turn] = ['buy_or_pass', [fen.canbuy[0]]];\r

      \    take_turn_fen();\r

      \  }\r

      }\r\n"
    sig: function ferro_change_to_buy_pass(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_ack_uplayer_multi:
    name: ferro_ack_uplayer_multi
    code: "function ferro_ack_uplayer_multi() {\r

      \  let [A, uplayer] = [Z.A, Z.uplayer];\r

      \  stopPolling();\r

      \  let o_pldata = Z.playerdata.find(x => x.name == uplayer);\r

      \  Z.state = o_pldata.state = { buy: !isEmpty(A.selected) &&
      A.selected[0] == 0 };\r

      \  let can_resolve = ferro_check_resolve();\r

      \  if (can_resolve) {\r

      \    assertion(Z.stage == 'buy_or_pass', 'stage is not buy_or_pass
      when checking can_resolve!');\r

      \    Z.stage = 'can_resolve';\r

      \    [Z.turn, Z.stage] = [[get_multi_trigger()], 'can_resolve'];\r

      \    take_turn_fen_write();\r

      \  } else { take_turn_multi(); }\r

      }\r\n"
    sig: function ferro_ack_uplayer_multi(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_check_resolve:
    name: ferro_check_resolve
    code: "function ferro_check_resolve() {\r

      \  let [pldata, stage, A, fen, plorder, uplayer, deck, turn] =
      [Z.playerdata, Z.stage, Z.A, Z.fen, Z.plorder, Z.uplayer, Z.deck,
      Z.turn];\r

      \  let pl = fen.players[uplayer];\r

      \  assertion(stage == 'buy_or_pass', \"check_resolve NOT IN
      buy_or_pass stage!!!!!!!!!\");\r

      \  assertion(isdef(pldata), \"no playerdata in buy_or_pass
      stage!!!!!!!!!!!!!!!!!!!!!!!\");\r

      \  let done = true;\r

      \  for (const plname of turn) {\r

      \    let data = firstCond(pldata, x => x.name == plname);\r

      \    assertion(isdef(data), 'no pldata for', plname);\r

      \    let state = data.state;\r

      \    if (isEmpty(state)) done = false;\r

      \    else if (state.buy == true) fen.buyer = plname;\r

      \    else continue;\r

      \    break;\r

      \  }\r

      \  return done;\r

      }\r\n"
    sig: function ferro_check_resolve(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_ack_uplayer_hotseat:
    name: ferro_ack_uplayer_hotseat
    code: "function ferro_ack_uplayer_hotseat() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  let buy = !isEmpty(A.selected) && A.selected[0] == 0;\r

      \  if (buy || uplayer == fen.lastplayer) { fen.buyer =
      uplayer;[Z.turn, Z.stage] = [[get_multi_trigger()], 'can_resolve']; }\r

      \  else { Z.turn = [get_next_in_list(uplayer, fen.canbuy)]; }\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function ferro_ack_uplayer_hotseat(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  ferro_change_to_card_selection:
    name: ferro_change_to_card_selection
    code: "function ferro_change_to_card_selection() {\r

      \  let [fen, stage] = [Z.fen, Z.stage];\r

      \  assertion(stage != 'card_selection', \"ALREADY IN TURN
      ROUND!!!!!!!!!!!!!!!!!!!!!!\");\r

      \  assertion(stage == 'can_resolve', \"change to card_selection: NOT
      IN can_resolve stage!!!!!!!!!!!!!!!!!!!!!!\");\r

      \  assertion(Z.uplayer == 'mimi' || Z.uplayer == fen.trigger,
      \"mixup uplayer in change_to_card_selection!!!!!!!!!!!!!!!!!!!!!!\");\r

      \  if (isdef(fen.buyer)) {\r

      \    let plname = fen.buyer;\r

      \    let pl = fen.players[plname];\r

      \    let card = fen.deck_discard.shift();\r

      \    pl.hand.push(card);\r

      \    lookupAddToList(pl, ['newcards'], card);\r

      \    deck_deal_safe_ferro(fen, plname, 1);\r

      \    pl.coins -= 1; \r

      \    ari_history_list([`${plname} bought ${card}`], 'buy');\r

      \  }\r

      \  let nextplayer = fen.nextturn[0];\r

      \  deck_deal_safe_ferro(fen, nextplayer, 1);\r

      \  Z.turn = fen.nextturn;\r

      \  Z.stage = 'card_selection';\r

      \  for (const k of ['buyer', 'canbuy', 'nextturn', 'trigger',
      'lastplayer']) delete fen[k];\r

      \  delete fen.keeppolling;\r

      \  clear_transaction();\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function ferro_change_to_card_selection(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  length_of_each_array:
    name: length_of_each_array
    code: "function length_of_each_array(arr) {\r

      \  let res = []\r

      \  for (const a of arr) {\r

      \    res.push(a.length);\r

      \  }\r

      \  return res.sort((a, b) => b - a);\r

      }\r\n"
    sig: function length_of_each_array(arr){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  longest_array:
    name: longest_array
    code: "function longest_array(arr) {\r

      \  let max = 0;\r

      \  for (const a of arr) {\r

      \    if (a.length > max) max = a.length;\r

      \  }\r

      \  return max;\r

      }\r\n"
    sig: function longest_array(arr){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  start_new_round_ferro:
    name: start_new_round_ferro
    code: "function start_new_round_ferro() {\r

      \  let [plorder, stage, A, fen, uplayer] = [Z.plorder, Z.stage, Z.A,
      Z.fen, Z.uplayer];\r

      \  let pl = fen.players[uplayer];\r

      \  Z.stage = 'card_selection';\r

      \  fen.plorder = arrCycle(plorder, 1);\r

      \  let starter = fen.plorder[0];\r

      \  Z.turn = fen.turn = [starter];\r

      \  let deck = fen.deck = create_fen_deck('n', fen.num_decks,
      fen.num_decks * 4);\r

      \  let deck_discard = fen.deck_discard = [];\r

      \  shuffle(deck);\r

      \  let handsize = valf(Number(Z.options.handsize), 11);\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.hand = deck_deal(deck, plname == starter ? handsize + 1 :
      handsize);\r

      \    pl.journeys = [];\r

      \    pl.roundgoal = false;\r

      \    pl.roundchange = true;\r

      \    delete pl.handsorting;\r

      \  }\r

      \  Z.round += 1;\r

      \  if (Z.round > Z.options.maxrounds) {\r

      \    ari_history_list([`game over`], 'game');\r

      \    Z.stage = 'game_over';\r

      \    fen.winners = find_players_with_min_score();\r

      \  }\r

      }\r\n"
    sig: function start_new_round_ferro(){}
    region: turn (ferro.js)
    filename: ferro.js
    type: func
    fname: ferro.js
    path: C:\xampp\htdocs\aroot\games\ferro.js
    datetime: 2022-08-20-12-35
    timestamp: 1661024130376.2837
    size: 35459
  get_now:
    name: get_now
    code: "function get_now() { return Date.now(); }\r\n"
    sig: function get_now(){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_progressbar:
    name: get_progressbar
    code: "function get_progressbar(dParent, color, sym) {\r

      \  let id = getUID();\r

      \  let d = mDiv(dParent, {}, id, null, 'grid_progressbar');\r

      \  let button = mButton(sym, () => onclick_plus_minus(color), d);\r

      \  let d1 = mDiv(d, {}, null, null, 'progressbar');\r

      \  let bar = mDiv(d1, { bg: color, w: 10 + '%' }, 'b_' + color,
      null, 'barstatus');\r

      \  return { bar: bar, button: button, color: color, container: d
      };\r

      }\r\n"
    sig: function get_progressbar(dParent, color, sym){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  handle_message:
    name: handle_message
    code: "function handle_message(x) { console.log('got message', x);
      io.emit('message', x); }\r\n"
    sig: function handle_message(x){}
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: func
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  handle_gamestate:
    name: handle_gamestate
    code: "function handle_gamestate(gamestate) {\r

      \  if (!in_game_screen) {\r

      \    return;\r

      \  }\r

      \  gamestate = JSON.parse(gamestate); \r

      \  requestAnimationFrame(() => paint_game(gamestate));\r

      }\r\n"
    sig: function handle_gamestate(gamestate){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  handle_settings:
    name: handle_settings
    code: "function handle_settings(x) {\r

      \  console.log('message from server:', x.msg);\r

      \  settings = x.settings;\r

      \  defaults = x.defaults;\r

      \  console.log('settings:', settings);\r

      \  console.log('defaults:', defaults);\r

      }\r\n"
    sig: function handle_settings(x){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  is_visible:
    name: is_visible
    code: "function is_visible(id) { return !mBy(id).classList.includes('d-block');
      }\r\n"
    sig: function is_visible(id){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  onclick_plus_minus:
    name: onclick_plus_minus
    code: "function onclick_plus_minus(color) { socket.emit('plus', color); }\r\n"
    sig: function onclick_plus_minus(color){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  onclick_test:
    name: onclick_test
    code: "async function onclick_test(){\r

      \  let res = await route_path_text('http://localhost:3000/test');\r

      \  console.log('res',res)\r

      }\r\n"
    sig: async function onclick_test(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\cita\start.js
    datetime: 2022-12-09-20-25
    timestamp: 1670646322392.744
    size: 2045
  onclick_settings_test:
    name: onclick_settings_test
    code: "function onclick_settings_test() {\r

      \  console.log('settings', settings);\r

      \  socket.emit('settings', { settings: settings });\r

      }\r\n"
    sig: function onclick_settings_test(){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  paint_game:
    name: paint_game
    code: "function paint_game(state) {\r

      \  let [wgreen, wred] = [state.green.pos, state.red.pos];\r

      \  dgreen.style.width = wgreen + '%';\r

      \  dred.style.width = wred + '%';\r

      }\r\n"
    sig: function paint_game(state){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  screen_transition:
    name: screen_transition
    code: "function screen_transition(idnew, idold) {\r

      \  if (isdef(idold)) mFade(idold, 500, () => mClassReplace(idold,
      'd-block', 'd-none'), 'linear');\r

      \  mAppear(idnew, 500, () => mClassReplace(idnew, 'd-none',
      'd-block'), 'linear');\r

      }\r\n"
    sig: function screen_transition(idnew, idold){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  send_reset:
    name: send_reset
    code: "function send_reset() { socket.emit('reset'); }\r\n"
    sig: function send_reset(){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  send_pause:
    name: send_pause
    code: "function send_pause() { socket.emit('pause'); }\r\n"
    sig: function send_pause(){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  send_resume:
    name: send_resume
    code: "function send_resume() { socket.emit('resume'); }\r\n"
    sig: function send_resume(){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  show_intro_screen:
    name: show_intro_screen
    code: "function show_intro_screen() {\r

      \  if (!in_game_screen) return;\r

      \  in_game_screen = false;\r

      \  screen_transition('dHeader', 'dTable');\r

      \  mBy('dSettingsButton').style.opacity = 0;\r

      }\r\n"
    sig: function show_intro_screen(){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  show_game_screen:
    name: show_game_screen
    code: "function show_game_screen(host = true) {\r

      \  if (in_game_screen) return;\r

      \  in_game_screen = true;\r

      \  screen_transition('dTable', 'dHeader');\r

      \  is_host = host;\r

      \  granularity = 100 / window.innerWidth;
      console.log('granularity:', granularity);\r

      \  mClear(dTable);\r

      \  mStyle(dTable, { hmin: 300 });\r

      \  let d = mDiv(dTable, { w: '100%', box: true, opacity: 0 },
      'dBars');\r

      \  mAppear(d, 500, null, 'linear');\r

      \  mLinebreak(d, 20);\r

      \  let dp = mDiv(d, { margin: 10, padding: 20 }, null, null,
      'card')\r

      \  mLinebreak(dp, 20);\r

      \  dgreen = get_progressbar(dp, 'green', '+').bar;\r

      \  mLinebreak(dp, 20);\r

      \  dred = get_progressbar(dp, 'red', '-').bar;\r

      \  mLinebreak(dp, 20);\r

      \  if (!is_host) return;\r

      \  let d1 = mDiv(dp, { gap: 12 }, 'dButtons', null, ['d-flex',
      'justify-content-center']);\r

      \  mButton('reset', send_reset, d1, {}, 'button');\r

      \  mButton('pause', send_pause, d1, {}, 'button');\r

      \  mButton('resume', send_resume, d1, {}, 'button');\r

      \  mLinebreak(dp, 20);\r

      \  mBy('dSettingsButton').style.opacity = 1;\r

      }\r\n"
    sig: function show_game_screen(host = true){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  reset_settings:
    name: reset_settings
    code: "function reset_settings() {\r

      \  for (const k in settings) { settings[k] = defaults[k]; }\r

      \  show_settings();\r

      }\r\n"
    sig: function reset_settings(){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  update_settings:
    name: update_settings
    code: "function update_settings() {\r

      \  for (const k in settings) {\r

      \    let lower = k.toLowerCase();\r

      \    let inp = mBy(`i_${lower}`);\r

      \    if (isdef(inp)) {\r

      \      let value = Number(inp.innerHTML);\r

      \      if (isNumber(value)) settings[k] = value;\r

      \    }\r

      \  }\r

      \  socket.emit('settings', JSON.stringify(settings));\r

      }\r\n"
    sig: function update_settings(){}
    region: var (index.js)
    filename: index.js
    type: func
    fname: index.js
    path: C:\xampp\htdocs\aroot\_other\frontend\index.js
    datetime: 2022-08-23-07-15
    timestamp: 1661264136386.4058
    size: 5616
  send_files:
    name: send_files
    code: "async function send_files() {\r

      \  const myFiles = document.getElementById('myFiles').files;\r

      \  const formData = new FormData();\r

      \  Object.keys(myFiles).forEach(key => {\r

      \    formData.append(myFiles.item(key).name, myFiles.item(key));\r

      \  })\r

      \  const response = await fetch(SERVERURL + '/upload', {\r

      \    method: 'POST',\r

      \    body: formData\r

      \  });\r

      \  const json = await response.json();\r

      \  const h2 = document.querySelector('h2');\r

      \  h2.textContent = `Status: ${json?.status}`;\r

      \  const h3 = document.querySelector('h3');\r

      \  h3.textContent = json?.message;\r

      \  console.log(json);\r

      }\r\n"
    sig: async function send_files(){}
    region: const (uploadform.js)
    filename: uploadform.js
    type: func
    fname: uploadform.js
    path: C:\D\a03\nodemaster\all\fileupload\public\uploadform.js
    datetime: 2022-08-28-04-38
    timestamp: 1661686715389.484
    size: 870
  animcoin:
    name: animcoin
    code: "function animcoin(plname, ms = 800, callback = null) {\r

      \  let d = UI.player_stat_items[plname].dCoin;\r

      \  let ani = [{ transform: 'scale(1)' }, { transform: 'scale(3)' },
      { transform: 'scale(1)' }];\r

      \  let options = {\r

      \    duration: ms,\r

      \    iterations: 1,\r

      \    easing: 'ease-out',\r

      \  };\r

      \  let a = d.animate(ani, options);\r

      \  a.onfinish = () => {\r

      \    let uplayer = Z.uplayer;\r

      \    let dAmount = UI.player_stat_items[uplayer].dAmount;\r

      \    dAmount.innerHTML = Z.fen.players[uplayer].coins;\r

      \    mStyle(dAmount, { fg: 'red' });\r

      \    if (callback) callback();\r

      \  };\r

      }\r\n"
    sig: function animcoin(plname, ms = 800, callback = null){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  animbuilding:
    name: animbuilding
    code: "function animbuilding(ui_building, ms = 800, callback = null) {\r

      \  let d = ui_building.cardcontainer;\r

      \  let ani = [{ transform: 'scale(1)' }, { transform: 'scale(1.5)'
      }, { transform: 'scale(1)' }];\r

      \  let options = {\r

      \    duration: ms,\r

      \    iterations: 1,\r

      \    easing: 'ease-out',\r

      \  };\r

      \  let a = d.animate(ani, options);\r

      \  a.onfinish = callback;\r

      }\r\n"
    sig: function animbuilding(ui_building, ms = 800, callback = null){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  animtest:
    name: animtest
    code: "function animtest(d, ms = 1000, callback) {\r

      \  let spinAway = [\r

      \    { transform: 'rotate(0) scale(1)' },\r

      \    { transform: 'rotate(360deg) scale(0)' }\r

      \  ];\r

      \  spinAway = [\r

      \    { transform: 'rotate(0) scale(1)' },\r

      \    { transform: 'rotate(180deg) scale(0)' },\r

      \    { transform: 'rotate(360deg) scale(2)' }\r

      \  ];\r

      \  spinAway = [\r

      \    { transform: 'scale(1)' },\r

      \    { transform: 'scale(3)' },\r

      \    { transform: 'scale(1)' }\r

      \  ];\r

      \  let options = {\r

      \    duration: ms,\r

      \    iterations: 1,\r

      \    easing: 'ease-out', //'cubic-bezier(.24,.65,.78,.03)',\r

      \    //easing: 'cubic-bezier(.89,.31,.67,1.05)', //
      'cubic-bezier(.55,.22,.52,.98)' //'cubic-bezier(1,-0.03,.86,.68)'\r

      \  }\r

      \  d.addEventListener('click', (ev) => {\r

      \    evNoBubble(ev);\r

      \    let a = d.animate(spinAway, options);\r

      \    a.onfinish = callback;\r

      \  });\r

      }\r\n"
    sig: function animtest(d, ms = 1000, callback){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  anipulse:
    name: anipulse
    code: "function anipulse(d, ms = 3000, callback) {\r

      \  let a = d.animate(\r

      \    [{\r

      \      'background-color': '#2ba805',\r

      \      'box-shadow': '0 0 3px #2ba805'\r

      \    },\r

      \    {\r

      \      'background-color': `#49e819`,\r

      \      'box-shadow': `0 0 10px #49e819`,\r

      \    },\r

      \    {\r

      \      'background-color': `#2ba805`,\r

      \      'box-shadow': `0 0 3px #2ba805`\r

      \    }], { fill: 'both', duration: ms, easing: 'ease', delay: 1000
      });\r

      \  a.onfinish = callback;\r

      \  return a;\r

      }\r\n"
    sig: function anipulse(d, ms = 3000, callback){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  remove_ui_items:
    name: remove_ui_items
    code: "function remove_ui_items(items) {\r

      \  console.log('remove_ui_items', items);\r

      \  for (const item of items) {\r

      \    let card = item.o;\r

      \    make_card_unselectable(item);\r

      \    iDiv(item.o).remove();\r

      \  }\r

      }\r\n"
    sig: function remove_ui_items(items){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_activate_ui:
    name: ari_activate_ui
    code: "function ari_activate_ui() { ari_pre_action(); }\r\n"
    sig: function ari_activate_ui(){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_state:
    name: ari_state
    code: "function ari_state(dParent) {\r

      \  function get_phase_html() {\r

      \    if (isEmpty(Z.phase) || Z.phase == 'over') return null; \r

      \    let rank = Z.phase[0].toUpperCase();\r

      \    let card = ari_get_card(rank + 'Hn', 40);\r

      \    let d = iDiv(card);\r

      \    mClassRemove(d.firstChild, 'card');\r

      \    return iDiv(card).outerHTML;\r

      \  }\r

      \  if (DA.TEST0 == true) {\r

      \    let html = `${Z.stage}`;\r

      \    if (isdef(Z.playerdata)) {\r

      \      let trigger = get_multi_trigger();\r

      \      if (trigger) html += ` trigger:${trigger}`;\r

      \      for (const data of Z.playerdata) {\r

      \        if (data.name == trigger) continue;\r

      \        let name = data.name;\r

      \        let state = data.state;\r

      \        let s_state = object2string(state);\r

      \        html += ` ${name}:'${s_state}'`; \r

      \      }\r

      \      dParent.innerHTML += ` ${Z.playerdata.map(x => x.name)}`;\r

      \    }\r

      \    dParent.innerHTML = html;\r

      \    return;\r

      \  }\r

      \  let user_html = get_user_pic_html(Z.uplayer, 30);\r

      \  let phase_html = get_phase_html();\r

      \  let html = '';\r

      \  if (phase_html) html += `${Z.phase}:&nbsp;${phase_html}`;\r

      \  if (Z.stage == 17) { html += `&nbsp;&nbsp;CHURCH EVENT!!!`; }\r

      \  else if (TESTING) { html += `&nbsp;&nbsp;&nbsp;stage:
      ${ARI.stage[Z.stage]}`; }\r

      \  else html += `&nbsp;player: ${user_html} `;\r

      \  dParent.innerHTML = html;\r

      }\r\n"
    sig: function ari_state(dParent){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ari_stats:
    name: ari_stats
    code: "function ari_stats(dParent) {\r

      \  let player_stat_items = UI.player_stat_items =
      ui_player_info(dParent); \r

      \  let fen = Z.fen;\r

      \  let herald = fen.heraldorder[0];\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    let item = player_stat_items[plname];\r

      \    let d = iDiv(item); mCenterFlex(d); mLinebreak(d);\r

      \    if (plname == herald) {\r

      \      mSym('tied-scroll', d, { fg: 'gold', fz: 24, padding: 4 },
      'TR');\r

      \    }\r

      \    if (exp_church(Z.options)) {\r

      \      if (isdef(pl.tithes)) {\r

      \        player_stat_count('cross', pl.tithes.val, d);\r

      \      }\r

      \    }\r

      \    let dCoin = player_stat_count('coin', pl.coins, d);\r

      \    item.dCoin = dCoin.firstChild;\r

      \    item.dAmount = dCoin.children[1];\r

      \    let list = pl.hand.concat(pl.stall);\r

      \    let list_luxury = list.filter(x => x[2] == 'l');\r

      \    player_stat_count('pinching hand', list.length, d);\r

      \    let d1 = player_stat_count('hand-holding-usd',
      list_luxury.length, d);\r

      \    mStyle(d1.firstChild, { fg: 'gold', fz: 20 })\r

      \    if (!isEmpty(fen.players[plname].stall) && fen.stage >= 5 &&
      fen.stage <= 6) {\r

      \      player_stat_count('shinto shrine',
      !fen.actionsCompleted.includes(plname) || fen.stage < 6 ?
      calc_stall_value(fen, plname) : '_', d);\r

      \    }\r

      \    player_stat_count('star', plname == U.name ||
      isdef(fen.winners) ? ari_calc_real_vps(fen, plname) :
      ari_calc_fictive_vps(fen, plname), d);\r

      \    if (fen.turn.includes(plname)) {\r

      \      show_hourglass(plname, d, 30, { left: -3, top: 0 }); //'calc(
      50% - 36px )' });\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function ari_stats(dParent){}
    region: animations (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  add_auction_history:
    name: add_auction_history
    code: "function add_auction_history() {\r

      \  let [fen, plorder] = [Z.fen, Z.plorder];\r

      \  for (const plname of fen.plorder) {\r

      \    if (nundef(fen.buy[plname])) continue;\r

      \    ari_history_list([`${plname} buys ${fen.buy[plname].a} for
      ${fen.second_most}`], 'auction');\r

      \  }\r

      }\r\n"
    sig: function add_auction_history(){}
    region: auction (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_tithe:
    name: post_tithe
    code: "function post_tithe() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  if (items.length == 0) { select_error('No cards selected!');
      return; }\r

      \  let st = items.map(x => ({ key: x.key, path: x.path }));\r

      \  let val = arrSum(st.map(x => ari_get_card(x.key).val));\r

      \  lookupSet(fen, ['players', uplayer, 'tithes'], { keys: st, val:
      val });\r

      \  remove_tithes_from_play(fen, uplayer);\r

      \  let pldone = plorder.filter(x => isdef(fen.players[x].tithes));\r

      \  let minplayers = arrMin(pldone, x =>
      fen.players[x].tithes.val);\r

      \  let minplayer = isList(minplayers) ? minplayers[0] :
      minplayers;\r

      \  let minval = fen.tithemin = fen.players[minplayer].tithes.val;\r

      \  let next = get_next_in_list(uplayer, fen.church_order);\r

      \  if (next == fen.church_order[0]) {\r

      \    assertion(sameList(pldone, plorder), 'NOT all players have
      tithes!!!!!!!', pldone);\r

      \    if (minplayers.length > 1) { proceed_to_newcards_selection();
      return; }\r

      \    else {\r

      \      pldone = pldone.filter(x => x != minplayer);\r

      \      let sorted = sortBy(pldone, x =>
      fen.players[x].tithes.val);\r

      \      let second_min = sorted[0];\r

      \      fen.tithe_minimum = fen.players[second_min].tithes.val -
      minval;\r

      \      //#region check if minplayer has enough\r

      \      let pl = fen.players[minplayer];\r

      \      let hst = pl.hand.concat(pl.stall);\r

      \      let vals = hst.map(x => ari_get_card(x).val);\r

      \      let sum = isEmpty(vals) ? 0 : arrSum(vals);\r

      \      let min = fen.tithe_minimum;\r

      \      if (sum < min) {\r

      \        pl.hand = [];\r

      \        pl.stall = [];\r

      \        let buildings = arrFlatten(get_values(pl.buildings));\r

      \        console.log('buildings', buildings);\r

      \        if (isEmpty(buildings)) {\r

      \          ari_history_list([`${minplayer} does not have a building
      to downgrade!`], 'downgrade');\r

      \          proceed_to_newcards_selection();\r

      \          return;\r

      \        }\r

      \        ari_history_list([`${minplayer} must downgrade a building
      to tithe ${min}!`], 'downgrade');\r

      \        Z.stage = 22;\r

      \      } else {\r

      \        ari_history_list([`${minplayer} must tithe more cards to
      reach ${min}!`], 'tithe');\r

      \        Z.stage = 21;\r

      \      }\r

      \      //#endregion\r

      \      Z.turn = [minplayer];\r

      \    }\r

      \  } else {\r

      \    Z.turn = [next];\r

      \  }\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function post_tithe(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_tithe_minimum:
    name: post_tithe_minimum
    code: "function post_tithe_minimum() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  let pl = fen.players[uplayer];\r

      \  let items = A.selected.map(x => A.items[x]);\r

      \  let st = items.map(x => ({ key: x.key, path: x.path }));\r

      \  pl.tithes.keys = pl.tithes.keys.concat(st);\r

      \  let newval = arrSum(st.map(x => ari_get_card(x.key).val));\r

      \  pl.tithes.val += newval;\r

      \  console.log('tithe_minimum', fen.tithe_minimum);\r

      \  console.log('val', pl.tithes.val);\r

      \  if (newval < fen.tithe_minimum) {\r

      \    select_error(`you need to tithe at least ${fen.tithe_minimum}
      to reach minimum`);\r

      \    return;\r

      \  }\r

      \  remove_tithes_from_play(fen, uplayer, st);\r

      \  proceed_to_newcards_selection();\r

      }\r\n"
    sig: function post_tithe_minimum(){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  remove_tithes_from_play:
    name: remove_tithes_from_play
    code: "function remove_tithes_from_play(fen, plname, tithes) {\r

      \  let pl = fen.players[plname];\r

      \  if (nundef(tithes)) tithes = pl.tithes.keys;\r

      \  for (const tithe of tithes) {\r

      \    if (tithe.path.includes('hand')) { removeInPlace(pl.hand,
      tithe.key); }\r

      \    else if (tithe.path.includes('stall')) {
      removeInPlace(pl.stall, tithe.key); }\r

      \  }\r

      \  ari_history_list([`${plname} tithes ${tithes.map(x =>
      x.key).join(', ')}!`], 'tithe');\r

      }\r\n"
    sig: function remove_tithes_from_play(fen, plname, tithes){}
    region: church (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  check_resolve:
    name: check_resolve
    code: "function check_resolve(){\r

      \  let can_resolve = true;\r

      \  for (const plname of Z.plorder) {\r

      \    let data1 = firstCond(Z.playerdata, x => x.name == plname &&
      !isEmpty(x.state));\r

      \    if (nundef(data1)) { can_resolve = false; break; }\r

      \  }\r

      \  return can_resolve;\r

      }\r\n"
    sig: function check_resolve(){}
    region: commission (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_comm_setup_stage:
    name: post_comm_setup_stage
    code: "function post_comm_setup_stage() {\r

      \  let [fen, A, uplayer, plorder, pl] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder, Z.pl];\r

      \  let achtungHack=false;\r

      \  let new_playerdata=[];\r

      \  for (const data of Z.playerdata) {\r

      \    let o=data;\r

      \    if (is_stringified(data)){\r

      \      console.log('achtungHack: data is stringified');\r

      \      o=JSON.parse(data);\r

      \      achtungHack=true;\r

      \    }else if (is_stringified(data.state)){\r

      \      console.log('achtungHack: data.state is stringified');\r

      \      o.state = JSON.parse(data.state);\r

      \      achtungHack = true;\r

      \    }\r

      \    new_playerdata.push(o);\r

      \    let state = o.state;\r

      \    let giver = state.giver;\r

      \    let receiver = state.receiver;\r

      \    let keys = state.keys;\r

      \    keys.map(x => elem_from_to(x, fen.players[giver].commissions,
      fen.players[receiver].commissions));\r

      \  }\r

      \  if (achtungHack) {Z.playerdata = new_playerdata;}\r

      \  fen.comm_setup_num -= 1;\r

      \  if (fen.comm_setup_num <= 0) {\r

      \    delete fen.comm_setup_di;\r

      \    delete fen.comm_setup_num;\r

      \    delete fen.keeppolling;\r

      \    ari_history_list([`commission trading ends`], 'commissions');\r

      \    if (exp_rumors && plorder.length > 2) {\r

      \      [Z.stage, Z.turn] = [24, Z.options.mode == 'hotseat' ?
      [fen.plorder[0]] : fen.plorder]; \r

      \      ari_history_list([`gossiping starts`], 'rumors');\r

      \    } else { [Z.stage, Z.turn] = set_journey_or_stall_stage(fen,
      Z.options, fen.phase); }\r

      \  } else {\r

      \    [Z.stage, Z.turn] = [23, Z.options.mode == 'hotseat' ?
      [fen.plorder[0]] : fen.plorder];\r

      \  }\r

      \  take_turn_fen_clear();\r

      }\r\n"
    sig: function post_comm_setup_stage(){}
    region: commission (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_commission_stall:
    name: process_commission_stall
    code: "function process_commission_stall() {\r

      \  let [fen, A, uplayer] = [Z.fen, Z.A, Z.uplayer];\r

      \  console.log('process_commission_stall selected', A.selected,
      'item', A.items[A.selected[0]]);\r

      \  Z.A.commission_stall_item = A.items[A.selected[0]];\r

      \  Z.stage = 16;\r

      \  ari_pre_action();\r

      }\r\n"
    sig: function process_commission_stall(){}
    region: commission (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_commission_stall_items:
    name: ui_get_commission_stall_items
    code: "function ui_get_commission_stall_items() {\r

      \  let [A, fen, uplayer] = [Z.A, Z.fen, Z.uplayer];\r

      \  console.log('ui_get_commission_stall_items similar',
      A.commission.similar);\r

      \  let items = A.commission.similar;\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_commission_stall_items(){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  ui_get_schweine_candidates:
    name: ui_get_schweine_candidates
    code: "function ui_get_schweine_candidates(uibuilding) {\r

      \  let items = ui_get_hidden_building_items(uibuilding);\r

      \  items = items.filter(x => x.o.key[0] !=
      uibuilding.keycard.key[0]);\r

      \  reindex_items(items);\r

      \  return items;\r

      }\r\n"
    sig: function ui_get_schweine_candidates(uibuilding){}
    region: get (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  post_rumor_setup:
    name: post_rumor_setup
    code: "function post_rumor_setup() {\r

      \  let [fen, A, uplayer, plorder] = [Z.fen, Z.A, Z.uplayer,
      Z.plorder];\r

      \  for (const plname of plorder) { fen.players[plname].rumors = [];
      }\r

      \  for (const plname of plorder) {\r

      \    let data = firstCond(Z.playerdata, x => x.name == plname);\r

      \    let di = data.state.di;\r

      \    for (const k in di) {\r

      \      arrPlus(fen.players[k].rumors, di[k]);\r

      \    }\r

      \  }\r

      \  ari_history_list([`gossiping ends`], 'rumors');\r

      \  [Z.stage, Z.turn] = set_journey_or_stall_stage(fen, Z.options,
      fen.phase);\r

      \  take_turn_fen_clear();\r

      }\r\n"
    sig: function post_rumor_setup(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  rumor_update_playerdata:
    name: rumor_update_playerdata
    code: "function rumor_update_playerdata(data, receiver, rumor) {\r

      \  let remaining = arrMinus(data.state.remaining, rumor.key); \r

      \  lookupAddToList(data, ['state', 'di', receiver], rumor.key);\r

      \  lookupAddToList(data, ['state', 'receivers'], receiver);\r

      \  lookupSetOverride(data, ['state', 'remaining'], remaining);\r

      \  Z.state = data.state; \r

      }\r\n"
    sig: function rumor_update_playerdata(data, receiver, rumor){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  rumor_playerdata_complete:
    name: rumor_playerdata_complete
    code: "function rumor_playerdata_complete() {\r

      \  for (const pldata of Z.playerdata) {\r

      \    if (isEmpty(pldata.state) || !isEmpty(pldata.state.remaining))
      return false;\r

      \  }\r

      \  return true;\r

      }\r\n"
    sig: function rumor_playerdata_complete(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  process_inspect:
    name: process_inspect
    code: "function process_inspect() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let cards = item.o.items;\r

      \  cards.map(x => face_up(x))\r

      \  weiter_process_inspect();\r

      }\r\n"
    sig: function process_inspect(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  weiter_process_inspect:
    name: weiter_process_inspect
    code: "function weiter_process_inspect() {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let item = A.items[A.selected[0]];\r

      \  let uibuilding = A.uibuilding = item.o;\r

      \  let fenbuilding = A.fenbuilding = lookup(fen,
      uibuilding.path.split('.'));\r

      \  let key = uibuilding.keycard.key;\r

      \  let cards = uibuilding.items;\r

      \  let schweine_cand = [];\r

      \  for (let i = 1; i < cards.length; i++) {\r

      \    if (fenbuilding.schweine.includes(i)) continue; \r

      \    let card = cards[i];\r

      \    if (card.key == key) continue;\r

      \    assertion(i == card.index, 'wrong card index!!!!')\r

      \    schweine_cand.push(card); \r

      \  }\r

      \  if (schweine_cand.length > 1) {\r

      \    Z.stage = 38;\r

      \    ari_pre_action();\r

      \  } else if (schweine_cand.length == 1) {\r

      \    setTimeout(() => turn_new_schwein_up(schweine_cand[0],
      fenbuilding, uibuilding), 3000);\r

      \  } else if (isEmpty(fenbuilding.schweine)) {\r

      \    Z.stage = 29;\r

      \    ari_history_list([`${uplayer} inspects a correct building`],
      'inspect');\r

      \    show_instruction('the building is CORRECT - You loose 1
      rumor')\r

      \    setTimeout(ari_pre_action, 2000); \r

      \  } else {\r

      \    let rumor = fen.deck_rumors[0]; fen.deck_rumors.shift();\r

      \    fen.players[uplayer].rumors.push(rumor);\r

      \    show_instruction('no additional schwein has been found - you
      gain 1 rumor')\r

      \    ari_history_list([`${uplayer} inspects a schweine!`],
      'inspect');\r

      \    setTimeout(ari_next_action, 2000);\r

      \  }\r

      }\r\n"
    sig: function weiter_process_inspect(){}
    region: rumors (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  get_schweine:
    name: get_schweine
    code: "function get_schweine(fenbuilding) { return fenbuilding.schweine; }\r\n"
    sig: function get_schweine(fenbuilding){}
    region: schwein (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  get_schweine_ui:
    name: get_schweine_ui
    code: "function get_schweine_ui(uibuilding) { return uibuilding.schweine; }\r\n"
    sig: function get_schweine_ui(uibuilding){}
    region: schwein (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  add_schwein:
    name: add_schwein
    code: "function add_schwein(card, fenbuilding, uibuilding) {\r

      \  if (isdef(uibuilding)) add_ui_schwein(card,
      uibuilding.schweine);\r

      \  let ckey = isString(card) ? card : card.key;\r

      \  let index = isString(card) ? fenbuilding.list.indexOf(ckey) :
      card.index;\r

      \  fenbuilding.schweine.push(index);\r

      \  console.log('fen schweine', fenbuilding.schweine);\r

      }\r\n"
    sig: function add_schwein(card, fenbuilding, uibuilding){}
    region: schwein (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  add_ui_schwein:
    name: add_ui_schwein
    code: "function add_ui_schwein(item, uischweine) {\r

      \  uischweine.push(item);\r

      \  mStyle(iDiv(item), { position: 'relative' });\r

      \  miPic('pig', iDiv(item), { position: 'absolute', top: 30, left:
      0, fz: 30 });\r

      \  face_up(item);\r

      }\r\n"
    sig: function add_ui_schwein(item, uischweine){}
    region: schwein (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  has_schweine:
    name: has_schweine
    code: "function has_schweine(fenbuilding) { return
      !isEmpty(fenbuilding.schweine); }\r\n"
    sig: function has_schweine(fenbuilding){}
    region: schwein (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  turn_new_schwein_up:
    name: turn_new_schwein_up
    code: "function turn_new_schwein_up(schwein, fenbuilding, uibuilding) {\r

      \  let [stage, A, fen, uplayer] = [Z.stage, Z.A, Z.fen,
      Z.uplayer];\r

      \  let is_first_schwein = isEmpty(fenbuilding.schweine);\r

      \  add_schwein(schwein, fenbuilding, uibuilding);\r

      \  ari_history_list([`${uplayer} reveals a schwein!`], 'inspect');\r

      \  if (is_first_schwein) {\r

      \    console.log('unique AND first new schwein');\r

      \    show_instruction('found schwein - both players get a
      rumor!');\r

      \    let owner = stringAfter(uibuilding.path, '.');\r

      \    owner = stringBefore(owner, '.');\r

      \    console.log('owner', owner, 'uplayer', uplayer);\r

      \    A.owner = owner;\r

      \    ari_open_rumors(32);\r

      \  } else {\r

      \    console.log('unique new schwein (gibt schon schweine)')\r

      \    show_instruction('found schwein - you gain a rumor!');\r

      \    let rumor = fen.deck_rumors[0]; fen.deck_rumors.shift();\r

      \    fen.players[uplayer].rumors.push(rumor);\r

      \    ari_history_list([`${uplayer} inspects a schweine building!`],
      'inspect');\r

      \    ari_next_action();\r

      \  }\r

      }\r\n"
    sig: function turn_new_schwein_up(schwein, fenbuilding, uibuilding){}
    region: schwein (aristo.js)
    filename: aristo.js
    type: func
    fname: aristo.js
    path: C:\xampp\htdocs\aroot\games\aristo.js
    datetime: 2022-08-29-06-29
    timestamp: 1661779751685.529
    size: 138319
  Branch:
    name: Branch
    code: "function Branch(start, end) {\r

      \  this.start = start;\r

      \  this.end = end;\r

      \  this.init = [start.x,start.y,end.x,end.y];\r

      \  this.children=[];\r

      \  this.finished=false;\r

      \  this.get_healthy_end = ()=>{return
      createVector(this.init[2],this.init[3]);}\r

      \  this.repair = () =>{\r

      \    this.start.x =this.init[0];\r

      \    this.start.y =this.init[1];\r

      \    this.end.x =this.init[2];\r

      \    this.end.y =this.init[3];\r

      \  }\r

      \  this.jitter = () =>{\r

      \    this.end.x += random(-1,1);\r

      \    this.end.y += random(-1,1);\r

      \  }\r

      \  this.show = () => {\r

      \    stroke(255);\r

      \    line(this.start.x, this.start.y, this.end.x, this.end.y)\r

      \  }\r

      \  this.branch = (angle,factor=.67) => {\r

      \    let dir = p5.Vector.sub(this.end, this.start);\r

      \    dir.rotate(angle);\r

      \    dir.mult(factor);\r

      \    let newend = p5.Vector.add(this.end, dir);\r

      \    let b = new Branch(this.end, newend);\r

      \    this.children.push(b);\r

      \    return b;\r

      \  }\r

      }\r\n"
    sig: function Branch(start, end){}
    region: funcs (branch.js)
    filename: branch.js
    type: func
    fname: branch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\branch.js
    datetime: 2022-09-02-17-19
    timestamp: 1662164374573.3132
    size: 847
  generate:
    name: generate
    code: "function generate(sentence) {\r

      \  let root = C.root;\r

      \  let rules = root.rules;\r

      \  var nextSentence = '';\r

      \  for (var i = 0; i < sentence.length; i++) {\r

      \    var current = sentence.charAt(i);\r

      \    var found = false;\r

      \    for (var j = 0; j < rules.length; j++) {\r

      \      if (current == rules[j].aus) {\r

      \        found = true;\r

      \        nextSentence += rules[j].wird;\r

      \        break;\r

      \      }\r

      \    }\r

      \    if (!found) {\r

      \      nextSentence += current;\r

      \    }\r

      \  }\r

      \  return nextSentence;\r

      }\r\n"
    sig: function generate(sentence){}
    region: funcs (lsystem.js)
    filename: lsystem.js
    type: func
    fname: lsystem.js
    path: C:\D\a03\nodemaster\all\fractals\nature\lsystem.js
    datetime: 2022-09-13-19-58
    timestamp: 1663124309311.4717
    size: 3188
  setup:
    name: setup
    code: "function setup() {\r

      \  show_jittering();\r

      \  createCanvas(600, 500); \r

      \  newtree();\r

      }\r\n"
    sig: function setup(){}
    region: var (sketch.js)
    filename: sketch.js
    type: func
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  turtle:
    name: turtle
    code: "function turtle() {\r

      \  background(51);\r

      \  stroke(255); \r

      \  translate(width/2,height);\r

      \  for (let i = 0; i < sentence.length; i++) {\r

      \    let x = sentence.charAt(i);\r

      \    if ('ABF'.includes(x)) {line(0, 0, 0,
      -len);translate(0,-len);}\r

      \    else if (x == '+') rotate(angle);\r

      \    else if (x == '-') rotate(-angle);\r

      \    else if (x == '[') push(); \r

      \    else if (x == ']') pop();\r

      \  }\r

      }\r\n"
    sig: function turtle(){}
    region: var (mysketch.js)
    filename: mysketch.js
    type: func
    fname: mysketch.js
    path: C:\D\a03\nodemaster\all\fractals\plant\mysketch.js
    datetime: 2022-09-03-07-06
    timestamp: 1662213971377.43
    size: 1964
  add_element:
    name: add_element
    code: "function add_element(f){\r

      \  if (tree.length == 0) { addlayer(); return; }\r

      \  let root = firstCond(tree, x => !x.finished);\r

      \  if (!root) {\r

      \    console.log('tree is finished!');\r

      \    return;\r

      \  }\r

      \  if (root) f(root);\r

      }\r\n"
    sig: function add_element(f){}
    region: var (sketch.js)
    filename: sketch.js
    type: func
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  newtree:
    name: newtree
    code: "function newtree() {\r

      \  tree = []; leaves = []; numlayers = 0;\r

      }\r\n"
    sig: function newtree(){}
    region: var (sketch.js)
    filename: sketch.js
    type: func
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  draw:
    name: draw
    code: "function draw() {\r

      \  background(51);\r

      \  for (let i = 0; i < tree.length; i++) {\r

      \    tree[i].show();\r

      \    if (jittering) tree[i].jitter();\r

      \  }\r

      \  for (let i = 0; i < leaves.length; i++) {\r

      \    let l = leaves[i].current;\r

      \    noStroke();\r

      \    fill(0, 255, 100, 100); \r

      \    ellipse(l.x, l.y, 8, 8);\r

      \    if (jittering) leaves[i].current.y += random(0, 2);\r

      \  }\r

      }\r\n"
    sig: function draw(){}
    region: var (sketch.js)
    filename: sketch.js
    type: func
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  show_jittering:
    name: show_jittering
    code: "function show_jittering() { let b = mBy('bJittering'); b.innerHTML =
      jittering ? 'repair' : 'desintegrate';  }\r\n"
    sig: function show_jittering(){}
    region: var (sketch.js)
    filename: sketch.js
    type: func
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  addleaf:
    name: addleaf
    code: "function addleaf(root) {\r

      \  let leaf = { current: root.get_healthy_end().copy(), orig:
      root.get_healthy_end().copy() }; \r

      \  leaves.push(leaf);\r

      \  root.finished = true;\r

      }\r\n"
    sig: function addleaf(root){}
    region: var (sketch.js)
    filename: sketch.js
    type: func
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  addfork:
    name: addfork
    code: "function addfork(root) {\r

      \  for (const a of [PI / 4, -PI / 6]) {\r

      \    let b = root.branch(a);\r

      \    root.children.push(b);\r

      \    tree.push(b);\r

      \  }\r

      \  root.finished = true;\r

      }\r\n"
    sig: function addfork(root){}
    region: var (sketch.js)
    filename: sketch.js
    type: func
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  addlayer:
    name: addlayer
    code: "function addlayer() {\r

      \  if (tree.length == 0) {\r

      \    let a = createVector(width / 2, height);\r

      \    let b = createVector(width / 2, height - 100);\r

      \    let root = tree[0] = new Branch(a, b);\r

      \  } else if (numlayers === 6) {\r

      \    for (let i = tree.length - 1; i >= 0; i--) {\r

      \      if (!tree[i].finished) addleaf(tree[i]);\r

      \    }\r

      \    clearInterval(interval_id);\r

      \  } else {\r

      \    for (let i = tree.length - 1; i >= 0; i--) {\r

      \      if (!tree[i].finished) addfork(tree[i]);\r

      \    }\r

      \    numlayers++;\r

      \  }\r

      }\r\n"
    sig: function addlayer(){}
    region: var (sketch.js)
    filename: sketch.js
    type: func
    fname: sketch.js
    path: C:\D\a03\nodemaster\all\fractals\tree\sketch.js
    datetime: 2022-09-03-08-47
    timestamp: 1662220045618.9844
    size: 1999
  onclick_fork:
    name: onclick_fork
    code: "function onclick_fork() { add_element(addfork); }\r\n"
    sig: function onclick_fork(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a03\nodemaster\all\fractals\tree\onclick.js
    datetime: 2022-09-06-05-57
    timestamp: 1662469048058.4307
    size: 449
  onclick_leaf:
    name: onclick_leaf
    code: "function onclick_leaf() { add_element(addleaf); }\r\n"
    sig: function onclick_leaf(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a03\nodemaster\all\fractals\tree\onclick.js
    datetime: 2022-09-06-05-57
    timestamp: 1662469048058.4307
    size: 449
  onclick_layer:
    name: onclick_layer
    code: "function onclick_layer() { addlayer(); }\r\n"
    sig: function onclick_layer(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a03\nodemaster\all\fractals\tree\onclick.js
    datetime: 2022-09-06-05-57
    timestamp: 1662469048058.4307
    size: 449
  onclick_animate:
    name: onclick_animate
    code: "function onclick_animate() { interval_id = setInterval(onclick_layer,
      500); }\r\n"
    sig: function onclick_animate(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a03\nodemaster\all\fractals\tree\onclick.js
    datetime: 2022-09-06-05-57
    timestamp: 1662469048058.4307
    size: 449
  onclick_jittering:
    name: onclick_jittering
    code: "function onclick_jittering() {\r

      \  jittering = !jittering;\r

      \  if (!jittering) {\r

      \    tree.map(x => x.repair()); \r

      \    leaves.map(x => x.current = x.orig.copy());\r

      \  }\r

      \  show_jittering();\r

      }\r\n"
    sig: function onclick_jittering(){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a03\nodemaster\all\fractals\tree\onclick.js
    datetime: 2022-09-06-05-57
    timestamp: 1662469048058.4307
    size: 449
  anim_toggle_face:
    name: anim_toggle_face
    code: "function anim_toggle_face(item, ms = 300, callback = null) {\r

      \  let d = iDiv(item);\r

      \  mClass(d, 'aniflip');\r

      \  TO.anim = setTimeout(() => {\r

      \    if (item.faceUp) face_down(item); else face_up(item);
      mClassRemove(d, 'aniflip');\r

      \    if (isdef(callback)) callback();\r

      \  }, ms);\r

      }\r\n"
    sig: function anim_toggle_face(item, ms = 300, callback = null){}
    region: card (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ferro_get_card:
    name: ferro_get_card
    code: "function ferro_get_card(ckey, h, w, ov = .25) {\r

      \  let type = ckey[2];\r

      \  let info = ckey[0] == '*' ? get_joker_info() :
      jsCopy(C52Cards[ckey.substring(0, 2)]);\r

      \  info.key = ckey;\r

      \  info.cardtype = ckey[2];\r

      \  let [r, s] = [info.rank, info.suit];\r

      \  info.val = r == '*' ? 50 : r == 'A' ? 20 : 'TJQK'.includes(r) ?
      10 : Number(r);\r

      \  info.color = RED;\r

      \  info.sz = info.h = valf(h, Config.ui.card.h);\r

      \  info.w = valf(w, info.sz * .7);\r

      \  info.irank = '23456789TJQKA*'.indexOf(r);\r

      \  info.isuit = 'SHCDJ'.indexOf(s);\r

      \  info.isort = info.isuit * 14 + info.irank;\r

      \  let card = cardFromInfo(info, h, w, ov);\r

      \  return card;\r

      }\r\n"
    sig: function ferro_get_card(ckey, h, w, ov = .25){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cardFromInfo:
    name: cardFromInfo
    code: "function cardFromInfo(info, h, w, ov) {\r

      \  let svgCode = C52[info.c52key];\r

      \  svgCode = '<div>' + svgCode + '</div>';\r

      \  let el = mCreateFrom(svgCode);\r

      \  h = valf(h, valf(info.h, 100));\r

      \  w = valf(w, h * .7);\r

      \  mSize(el, w, h);\r

      \  let res = {};\r

      \  copyKeys(info, res);\r

      \  copyKeys({ w: w, h: h, faceUp: true, div: el }, res);\r

      \  if (isdef(ov)) res.ov = ov;\r

      \  return res;\r

      }\r\n"
    sig: function cardFromInfo(info, h, w, ov){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sheriff_card:
    name: sheriff_card
    code: "function sheriff_card(name, color) {\r

      \  let di = SHERIFF.cards;\r

      \  let info = valf(di[name], { ksym: 'crossbow', kcenter: 'green
      apple', label: 'crossbow', type: 'contraband', value: 9, penalty: 4 });\r

      \  let bcolor = SHERIFF.color[info.type];\r

      \  let c = cPortrait(null, { margin: 12, border: `solid 4px
      ${bcolor}`, bg: valf(color, colorLight('gold', 60)) });\r

      \  let d = iDiv(c);\r

      \  let ds = mSym(info.ksym, d, { sz: 30 }, 'tl');\r

      \  ds = mSymText(info.value, d, { sz: 25, rounding: '50%', bg:
      'gold', margin: 3 }, 'tr');\r

      \  ds = mText(info.label.toUpperCase(), d, { family: 'Algerian', w:
      '100%', fz: 12, align: 'center', position: 'absolute', bottom: 0 });\r

      \  ds = mText(info.label.toUpperCase(), d, { family: 'Algerian', w:
      '100%', fz: 12, align: 'center', position: 'absolute', top: 0 });\r

      \  ds = mSymText(info.penalty, d, { sz: 25, rounding: '50%', bg:
      'crimson', margin: 3 }, 'br');\r

      \  ds = mSym(info.kcenter, d, { sz: 70 }, 'cc'); mPos(ds, 'calc( 50%
      - 35px )', 'calc( 50% - 35px )');\r

      \  return c;\r

      }\r\n"
    sig: function sheriff_card(name, color){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  face_down_alt:
    name: face_down_alt
    code: "function face_down_alt(item, bg, texture_name) {\r

      \  let dCover = item.live.dCover;\r

      \  if (nundef(dCover)) {\r

      \    let d = iDiv(item);\r

      \    dCover = item.live.dCover = mDiv(d, { background: bg, rounding:
      mGetStyle(d, 'rounding'), position: 'absolute', width: '100%', height:
      '100%', left: 0, top: 0 });\r

      \    let t = get_texture(texture_name);\r

      \    dCover.style.backgroundImage = t;\r

      \    dCover.style.backgroundRepeat = 'repeat';\r

      \  } else mStyle(dCover, { display: 'block' });\r

      }\r\n"
    sig: function face_down_alt(item, bg, texture_name){}
    region: card (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_type_lead_hand:
    name: ui_type_lead_hand
    code: "function ui_type_lead_hand(list, dParent, styles = {}, path = 'hand',
      title = 'hand', get_card_func = ari_get_card, show_if_empty = false) {\r

      \  let hcard = isdef(styles.h) ? styles.h - 30 : Config.ui.card.h;\r

      \  addKeys(get_container_styles(styles), styles);\r

      \  let cont = ui_make_container(dParent, styles);\r

      \  let items = list.map(x => get_card_func(x, hcard));\r

      \  let cardcont = mDiv(cont);\r

      \  let card = isEmpty(items) ? { w: 1, h: hcard, ov: 0 } :
      items[0];\r

      \  let splay = 5;\r

      \  mContainerSplay(cardcont, splay, card.w, card.h, items.length,
      card.ov * card.w);\r

      \  ui_add_cards_to_hand_container(cardcont, items, list);\r

      \  ui_add_container_title(title, cont, items, show_if_empty);\r

      \  return {\r

      \    ctype: 'hand',\r

      \    list: list,\r

      \    path: path,\r

      \    container: cont,\r

      \    cardcontainer: cardcont,\r

      \    splay: splay,\r

      \    items: items,\r

      \  };\r

      }\r\n"
    sig: function ui_type_lead_hand(list, dParent, styles = {}, path = 'hand', title
      = 'hand', get_card_func = ari_get_card, show_if_empty = false){}
    region: ui (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ui_type_church:
    name: ui_type_church
    code: "function ui_type_church(list, dParent, styles = {}, path = 'trick', title
      = '', get_card_func = ari_get_card, show_if_empty = false) {\r

      \  let cont = ui_make_container(dParent,
      get_container_styles(styles));\r

      \  let cardcont = mDiv(cont, { display: 'flex' });\r

      \  let items = [];\r

      \  let n = Z.plorder.length;\r

      \  let inc = 90;\r

      \  let rotation = n % 2 ? 0 : 90;\r

      \  for (const ckey of list) {\r

      \    let d = mDiv(cardcont, { origin: 'center', transform: `rotate(
      ${rotation}deg )`, position: 'absolute', left: 8 });\r

      \    let c = get_card_func(ckey);\r

      \    if (ckey != arrLast(list)) face_down(c);\r

      \    mAppend(d, iDiv(c));\r

      \    remove_card_shadow(c);\r

      \    let item = { card: c, div: d };\r

      \    items.push(item);\r

      \    rotation += inc;\r

      \  }\r

      \  ui_add_container_title(title, cont, items, show_if_empty);\r

      \  return {\r

      \    list: list,\r

      \    path: path,\r

      \    container: cont,\r

      \    cardcontainer: cardcont,\r

      \    items: items,\r

      \  }\r

      }\r\n"
    sig: function ui_type_church(list, dParent, styles = {}, path = 'trick', title =
      '', get_card_func = ari_get_card, show_if_empty = false){}
    region: ui (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aggregate_player_hands_by_rank:
    name: aggregate_player_hands_by_rank
    code: "function aggregate_player_hands_by_rank(fen) {\r

      \  let di_ranks = {};\r

      \  let akku = [];\r

      \  for (const uname in fen.players) {\r

      \    let pl = fen.players[uname];\r

      \    let hand = pl.hand;\r

      \    for (const c of hand) {\r

      \      akku.push(c);\r

      \      let r = c[0];\r

      \      if (isdef(di_ranks[r])) di_ranks[r] += 1; else di_ranks[r] =
      1;\r

      \    }\r

      \  }\r

      \  fen.akku = akku;\r

      \  return di_ranks;\r

      }\r\n"
    sig: function aggregate_player_hands_by_rank(fen){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  calc_hand_value:
    name: calc_hand_value
    code: "function calc_hand_value(hand, card_func = ferro_get_card) {\r

      \  let vals = hand.map(x => card_func(x).val);\r

      \  let sum = vals.reduce((a, b) => a + b, 0);\r

      \  return sum;\r

      }\r\n"
    sig: function calc_hand_value(hand, card_func = ferro_get_card){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  create_fen_deck:
    name: create_fen_deck
    code: "function create_fen_deck(cardtype, num_decks = 1, num_jokers = 0) {\r

      \  let arr = get_keys(C52Cards).map(x => x + cardtype);\r

      \  let newarr = [];\r

      \  while (num_decks > 0) { newarr = newarr.concat(arr); num_decks--;
      }\r

      \  while (num_jokers > 0) { newarr.push('*H' + cardtype);
      num_jokers--; }\r

      \  return newarr;\r

      }\r\n"
    sig: function create_fen_deck(cardtype, num_decks = 1, num_jokers = 0){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  find_index_of_jolly:
    name: find_index_of_jolly
    code: "function find_index_of_jolly(j) { return j.findIndex(x => is_jolly(x));
      }\r\n"
    sig: function find_index_of_jolly(j){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  find_jolly_rank:
    name: find_jolly_rank
    code: "function find_jolly_rank(j, rankstr = 'A23456789TJQKA') {\r

      \  let jolly_idx = find_index_of_jolly(j);\r

      \  if (jolly_idx == -1) return false;\r

      \  if (jolly_idx > 0) {\r

      \    let rank_before_index = j[jolly_idx - 1][0];\r

      \    let rank_needed = rankstr[rankstr.indexOf(rank_before_index) +
      1];\r

      \    return rank_needed;\r

      \  } else {\r

      \    let rank_after_index = j[jolly_idx + 1][0];\r

      \    let rank_needed = rank_after_index == 'A' ? 'K' :
      rankstr[rankstr.indexOf(rank_after_index) - 1];\r

      \    return rank_needed;\r

      \  }\r

      }\r\n"
    sig: function find_jolly_rank(j, rankstr = 'A23456789TJQKA'){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_group_rank:
    name: get_group_rank
    code: "function get_group_rank(j) { let non_jolly_key = firstCond(j, x =>
      !is_jolly(x)); return non_jolly_key[0]; }\r\n"
    sig: function get_group_rank(j){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_sequence_suit:
    name: get_sequence_suit
    code: "function get_sequence_suit(j) { let non_jolly_key = firstCond(j, x =>
      !is_jolly(x)); return non_jolly_key[1]; }\r\n"
    sig: function get_sequence_suit(j){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  get_joker_info:
    name: get_joker_info
    code: "function get_joker_info() {\r

      \  return {\r

      \    c52key: `card_0J`, //'card_1J', //`card_${1+n%2}`,\r

      \    color: \"#e6194B\",\r

      \    friendly: \"Joker\",\r

      \    key: '*Hn',\r

      \    h: 100,\r

      \    irank: 14,\r

      \    isort: 100,\r

      \    isuit: 3,\r

      \    ov: 0.25,\r

      \    rank: \"*\",\r

      \    short: \"J\",\r

      \    suit: \"H\",\r

      \    sz: 100,\r

      \    val: 1,\r

      \    w: 70,\r

      \  };\r

      }\r\n"
    sig: function get_joker_info(){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  has_at_most_n_jolly:
    name: has_at_most_n_jolly
    code: "function has_at_most_n_jolly(j, n = 1) { return j.filter(x =>
      is_jolly(x)).length <= n; }\r\n"
    sig: function has_at_most_n_jolly(j, n = 1){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  has_jolly:
    name: has_jolly
    code: "function has_jolly(j) { return firstCond(j, x => is_jolly(x)); }\r\n"
    sig: function has_jolly(j){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_card_key:
    name: is_card_key
    code: "function is_card_key(ckey, rankstr = '*A23456789TJQK', suitstr = 'SHCD')
      { return rankstr.includes(ckey[0]) && suitstr.includes(ckey[1]); }\r\n"
    sig: function is_card_key(ckey, rankstr = '*A23456789TJQK', suitstr = 'SHCD'){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_jolly:
    name: is_jolly
    code: "function is_jolly(ckey) { return ckey[0] == '*'; }\r\n"
    sig: function is_jolly(ckey){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_joker:
    name: is_joker
    code: "function is_joker(card) { return is_jolly(card.key); }\r\n"
    sig: function is_joker(card){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_overlapping_set:
    name: is_overlapping_set
    code: "function is_overlapping_set(cards, max_jollies_allowed = 1, seqlen = 7,
      group_same_suit_allowed = true) {\r

      \  let istart = 0;\r

      \  let inextstart = 0;\r

      \  let lmin = 3;\r

      \  let legal = true;\r

      \  if (cards.length < lmin) return false;\r

      \  while (legal && istart <= cards.length - lmin) {\r

      \    let cl = cards.slice(istart, istart + lmin);\r

      \    let set = ferro_is_set(cl, max_jollies_allowed, seqlen,
      group_same_suit_allowed);\r

      \    if (set) { istart++; inextstart = Math.min(istart + lmin,
      cards.length - 3); }\r

      \    else if (!set && inextstart == istart) return false;\r

      \    else istart++;\r

      \  }\r

      \  return cards.map(x => x.key);\r

      }\r\n"
    sig: function is_overlapping_set(cards, max_jollies_allowed = 1, seqlen = 7,
      group_same_suit_allowed = true){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  jolly_matches:
    name: jolly_matches
    code: "function jolly_matches(key, j, rankstr = 'A23456789TJQKA') {\r

      \  let jolly_idx = find_index_of_jolly(j);\r

      \  if (jolly_idx == -1) return false;\r

      \  if (is_group(j)) {\r

      \    let r = get_group_rank(j);\r

      \    if (key[0] == r) return true;\r

      \  } else if (jolly_idx > 0) {\r

      \    let rank_before_index = j[jolly_idx - 1][0];\r

      \    let suit_needed = j[jolly_idx - 1][1];\r

      \    let rank_needed = rankstr[rankstr.indexOf(rank_before_index) +
      1];\r

      \    if (key[0] == rank_needed && key[1] == suit_needed) return
      true;\r

      \  } else {\r

      \    let rank_after_index = j[jolly_idx + 1][0];\r

      \    let suit_needed = j[jolly_idx + 1][1];\r

      \    let rank_needed = rank_after_index == 'A' ? 'K' :
      rankstr[rankstr.indexOf(rank_after_index) - 1];\r

      \    if (key[0] == rank_needed && key[1] == suit_needed) return
      true;\r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function jolly_matches(key, j, rankstr = 'A23456789TJQKA'){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replace_jolly:
    name: replace_jolly
    code: "function replace_jolly(key, j) {\r

      \  let jolly_idx = find_index_of_jolly(j);\r

      \  j[jolly_idx] = key;\r

      }\r\n"
    sig: function replace_jolly(key, j){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sortCardItemsByRank:
    name: sortCardItemsByRank
    code: "function sortCardItemsByRank(items, rankstr = '23456789TJQKA') {\r

      \  let ranks = toLetters(rankstr);\r

      \  items.sort((a, b) => ranks.indexOf(a.key[0]) -
      ranks.indexOf(b.key[0]));\r

      \  return items;\r

      }\r\n"
    sig: function sortCardItemsByRank(items, rankstr = '23456789TJQKA'){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sortCardItemsBySuit:
    name: sortCardItemsBySuit
    code: "function sortCardItemsBySuit(items, suitstr = 'CDSH') {\r

      \  let ranks = toLetters(suitstr);\r

      \  items.sort((a, b) => ranks.indexOf(a.key[1]) -
      ranks.indexOf(b.key[1]));\r

      \  return items;\r

      }\r\n"
    sig: function sortCardItemsBySuit(items, suitstr = 'CDSH'){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  sortCardItemsToSequence:
    name: sortCardItemsToSequence
    code: "function sortCardItemsToSequence(items, rankstr = '23456789TJQKA',
      jolly_allowed = 1) {\r

      \  let ranks = toLetters(rankstr);\r

      \  let n = items.length;\r

      \  let jollies = items.filter(x => is_joker(x));\r

      \  if (jollies.length > jolly_allowed) { return null; }\r

      \  let no_jolly = items.filter(x => !is_joker(x));\r

      \  let sorted = sortCardItemsByRank(no_jolly, rankstr);\r

      \  let partial_sequences = [], seq = [sorted[0]], first, second;\r

      \  for (let i = 0; i < sorted.length - 1; i++) {\r

      \    first = sorted[i];\r

      \    second = sorted[i + 1];\r

      \    diff = second.irank - first.irank;\r

      \    if (diff == 1) { seq.push(second); }\r

      \    else {\r

      \      partial_sequences.push({ seq: seq, len: seq.length,
      diff_to_next: diff });\r

      \      seq = [second];\r

      \    }\r

      \  }\r

      \  diff = sorted[0].irank - (sorted[sorted.length - 1].irank -
      rankstr.length)\r

      \  if (!isEmpty(seq)) {\r

      \    partial_sequences.push({ seq: seq, len: seq.length,
      diff_to_next: diff });\r

      \  } else {\r

      \    arrLast(partial_sequences).diff_to_next = diff;\r

      \  }\r

      \  let i_max_diff = partial_sequences.findIndex(x => x.diff_to_next
      == Math.max(...partial_sequences.map(x => x.diff_to_next)));\r

      \  let max_diff = partial_sequences[i_max_diff].diff_to_next;\r

      \  let istart = (i_max_diff + 1) % partial_sequences.length;\r

      \  let final_sequence = [];\r

      \  let jollies_needed = 0;\r

      \  let len = partial_sequences.length;\r

      \  let ij = 0;\r

      \  for (let i = 0; i < len; i++) {\r

      \    let index = (i + istart) % len;\r

      \    let list = partial_sequences[index].seq;\r

      \    final_sequence = final_sequence.concat(list);\r

      \    let nj = partial_sequences[index].diff_to_next - 1;\r

      \    if (i < len - 1) {\r

      \      for (let j = 0; j < nj; j++) {
      final_sequence.push(jollies[ij++]); }\r

      \      jollies_needed += nj;\r

      \    }\r

      \  }\r

      \  for (let i = 0; i < final_sequence.length; i++) { items[i] =
      final_sequence[i]; }\r

      \  return jollies_needed;\r

      }\r\n"
    sig: function sortCardItemsToSequence(items, rankstr = '23456789TJQKA',
      jolly_allowed = 1){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  checkwinnersPossible:
    name: checkwinnersPossible
    code: "function checkwinnersPossible(arr, rows, cols) {\r

      \  for (i = 0; i < rows; i++) { let ch = bPartialRow(arr, i, rows,
      cols); if (ch) return ch; }\r

      \  for (i = 0; i < cols; i++) { let ch = bPartialCol(arr, i, rows,
      cols); if (ch) return ch; }\r

      \  let ch = bPartialDiag(arr, rows, cols); if (ch) return ch;\r

      \  ch = bPartialDiag2(arr, rows, cols); if (ch) return ch;\r

      \  return null;\r

      }\r\n"
    sig: function checkwinnersPossible(arr, rows, cols){}
    region: board (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  checkwinners:
    name: checkwinners
    code: "function checkwinners(arr, rows, cols) {\r

      \  for (i = 0; i < rows; i++) { let ch = bFullRow(arr, i, rows,
      cols); if (ch) return ch; }\r

      \  for (i = 0; i < cols; i++) { let ch = bFullCol(arr, i, rows,
      cols); if (ch) return ch; }\r

      \  let ch = bFullDiag(arr, rows, cols); if (ch) return ch;\r

      \  ch = bFullDiag2(arr, rows, cols); if (ch) return ch;\r

      \  return null;\r

      }\r\n"
    sig: function checkwinners(arr, rows, cols){}
    region: board (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  checkwinnersTTT:
    name: checkwinnersTTT
    code: "function checkwinnersTTT(arr, rows, cols) { return checkwinners(arr,
      rows, cols); }\r\n"
    sig: function checkwinnersTTT(arr, rows, cols){}
    region: board (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  checkwinnersC4:
    name: checkwinnersC4
    code: "function checkwinnersC4(arr, rows = 6, cols = 7, stride = 4) {\r

      \  for (i = 0; i < rows; i++) { let ch = bStrideRow(arr, i, rows,
      cols, stride); if (ch) return ch; }\r

      \  for (i = 0; i < cols; i++) { let ch = bStrideCol(arr, i, rows,
      cols, stride); if (ch) return ch; }\r

      \  for (i = 0; i < rows; i++) {\r

      \    for (j = 0; j < cols; j++) {\r

      \      let ch = bStrideDiagFrom(arr, i, j, rows, cols, stride); if
      (ch) return ch;\r

      \      ch = bStrideDiag2From(arr, i, j, rows, cols, stride); if (ch)
      return ch;\r

      \    }\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function checkwinnersC4(arr, rows = 6, cols = 7, stride = 4){}
    region: board (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  hide_history_popup:
    name: hide_history_popup
    code: "function hide_history_popup() {\tlet d = mBy('dHistoryPopup');\tif
      (isdef(d)) {mAppend(UI.dHistoryParent,UI.dHistory);mRemove(d);}}\r\n"
    sig: function hide_history_popup(){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  show_status_orig:
    name: show_status_orig
    code: "function show_status_orig(msg = '', stay) {\r

      \  if (isdef(stay)) showFleetingMessage(msg, mBy('dStatus'), { fg:
      'red' }, 1000, 0, false);\r

      \  else showFleetingMessage(msg, mBy('dStatus'), { fg: 'black'
      });  \r

      }\r\n"
    sig: function show_status_orig(msg = '', stay){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  start_tests:
    name: start_tests
    code: "function start_tests() {\r

      \  fentest_wise();\r

      \  //#region old tests\r

      \  //#endregion\r

      }\r\n"
    sig: function start_tests(){}
    region: funcs (start_test.js)
    filename: start_test.js
    type: func
    fname: start_test.js
    path: C:\xampp\htdocs\aroot\games\start_test.js
    datetime: 2023-01-16-07-55
    timestamp: 1673884517428.914
    size: 3256
  landing:
    name: landing
    code: "function landing() { if (isdef(DA.landing)) DA.landing(); } \r\n"
    sig: function landing(){}
    region: funcs (start_test.js)
    filename: start_test.js
    type: func
    fname: start_test.js
    path: C:\xampp\htdocs\aroot\games\start_test.js
    datetime: 2023-01-16-07-55
    timestamp: 1673884517428.914
    size: 3256
  ltest89_aristo_journey:
    name: ltest89_aristo_journey
    code: "function ltest89_aristo_journey() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'amanda', 'lauren'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'no', rumors: 'no' });\r

      }\r\n"
    sig: function ltest89_aristo_journey(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest88_aristo_market:
    name: ltest88_aristo_market
    code: "function ltest88_aristo_market() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_stalls], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest88_aristo_market(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest87_aristo:
    name: ltest87_aristo
    code: "function ltest87_aristo() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest87_aristo(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest86_ferro:
    name: ltest86_ferro
    code: "function ltest86_ferro() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_two_ferro_sets, make_long_history], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix', 'gul'];\r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest86_ferro(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest85_card_short_text:
    name: ltest85_card_short_text
    code: "function ltest85_card_short_text() {\r

      \  let dTable = mBy('dTable'); clearElement(dTable); mStyle(dTable,
      { hmin: 400 });\r

      \  let ckey = 'KCn';\r

      \  let sz = 20;\r

      \  let d = mDiv(dTable, {}, null, `hallo das ist ein
      ${mCardText(ckey)}.`);\r

      \  return;\r

      }\r\n"
    sig: function ltest85_card_short_text(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest84_svg:
    name: ltest84_svg
    code: "function ltest84_svg() {\r

      \  let dTable = mBy('dTable'); clearElement(dTable); mStyle(dTable,
      { hmin: 400 })\r

      \  let card = cBlank(dTable); let d = iDiv(card); let sz = card.h /
      6;\r

      \  let i = 0;\r

      \  for (let suit of ['H', 'S', 'D', 'C']) {\r

      \    let s1 = mSuit(suit, d, { w: sz, h: sz }); \r

      \    mPos(s1, sz * i, 0); i++;\r

      \  }\r

      }\r\n"
    sig: function ltest84_svg(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest83_svg:
    name: ltest83_svg
    code: "function ltest83_svg() {\r

      \  dTable = mBy('dTexture'); mCenterFlex(dTable); mStyle(dTable, {
      hmin: 500 }); mClass(dTable, 'wood');\r

      \  mStyle(dTable, { gap: 10 });\r

      \  let card;\r

      \  card = cBlankSvg(dTable);\r

      \  console.log('card', card); \r

      \  let g = iG(card); \r

      \  let x = mgSuit('Pik'); \r

      \  mgSize(x, 40);\r

      \  mgPos(card, x); \r

      }\r\n"
    sig: function ltest83_svg(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest83_ferro_multi:
    name: ltest83_ferro_multi
    code: "function ltest83_ferro_multi() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix']; \r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'multi' });\r

      }\r\n"
    sig: function ltest83_ferro_multi(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest82_ferro:
    name: ltest82_ferro
    code: "function ltest82_ferro() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_long_history], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix', 'gul'];\r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest82_ferro(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest81_spotit_multi:
    name: ltest81_spotit_multi
    code: "function ltest81_spotit_multi() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_long_history], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix']; \r

      \  startgame('spotit', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'multi' });\r

      }\r\n"
    sig: function ltest81_spotit_multi(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest80_fritz_multi:
    name: ltest80_fritz_multi
    code: "function ltest80_fritz_multi() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_long_history], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix']; \r

      \  startgame('fritz', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'multi' });\r

      }\r\n"
    sig: function ltest80_fritz_multi(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest79_bluff_multi:
    name: ltest79_bluff_multi
    code: "function ltest79_bluff_multi() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_long_history], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix']; \r

      \  startgame('bluff', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'multi' });\r

      }\r\n"
    sig: function ltest79_bluff_multi(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest78_aristo_church:
    name: ltest78_aristo_church
    code: "function ltest78_aristo_church() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_stalls, make_church], iter: 0, maxiter: 200, running: false,
      step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [['random'], ['random']];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest78_aristo_church(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest77_aristo_church:
    name: ltest77_aristo_church
    code: "function ltest77_aristo_church() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_stalls, make_church], iter: 0, maxiter: 200, running: false,
      step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'leo', 'gul']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest77_aristo_church(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest76_aristo_multi:
    name: ltest76_aristo_multi
    code: "function ltest76_aristo_multi() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_long_history], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix', 'gul'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'multi', rumors: 'no', commission: 'no', journey:
      'no' });\r

      }\r\n"
    sig: function ltest76_aristo_multi(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest75_ferro_multi:
    name: ltest75_ferro_multi
    code: "function ltest75_ferro_multi() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_long_history], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [['random']];\r

      \  let playernames = ['mimi', 'felix', 'gul', 'amanda', 'lauren',
      'valerie', 'guest', 'nimble', 'sheeba', 'sarah']; \r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'multi' });\r

      }\r\n"
    sig: function ltest75_ferro_multi(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest74_ferro_scroll_history:
    name: ltest74_ferro_scroll_history
    code: "function ltest74_ferro_scroll_history() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_long_history], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix', 'gul', 'amanda', 'lauren',
      'valerie', 'guest', 'nimble', 'sheeba', 'sarah']; \r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest74_ferro_scroll_history(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest73_ferro_deck_empty:
    name: ltest73_ferro_deck_empty
    code: "function ltest73_ferro_deck_empty() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_deck_empty], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'gul', 'amanda', 'lauren',
      'valerie', 'guest', 'nimble', 'sheeba', 'sarah']; \r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest73_ferro_deck_empty(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest72_ferro:
    name: ltest72_ferro
    code: "function ltest72_ferro() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'gul', 'amanda', 'lauren',
      'valerie', 'guest', 'nimble', 'sheeba', 'sarah']; \r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest72_ferro(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest71_ferro:
    name: ltest71_ferro
    code: "function ltest71_ferro() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'leo', 'gul']; \r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest71_ferro(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest70_aristo_church:
    name: ltest70_aristo_church
    code: "function ltest70_aristo_church() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_stalls, make_church], iter: 0, maxiter: 200, running: false,
      step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'leo', 'gul']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest70_aristo_church(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest69_ferro_is_group:
    name: ltest69_ferro_is_group
    code: "function ltest69_ferro_is_group() {\r

      \  let j = ['*Hn', '8Dn', '8Hn'];\r

      \  let x = is_group(j);\r

      \  console.log('is_group', x);\r

      \  j = ['8Hn', '*Dn', '8Hn'];\r

      \  x = is_group(j);\r

      \  console.log('is_group', x);\r

      }\r\n"
    sig: function ltest69_ferro_is_group(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest68_aristo_blackmail_owner_defend:
    name: ltest68_aristo_blackmail_owner_defend
    code: "function ltest68_aristo_blackmail_owner_defend() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [set_blackmail_owner_stage_defend], iter: 0, maxiter: 200, running: false,
      step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest68_aristo_blackmail_owner_defend(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest67_aristo_blackmail_owner:
    name: ltest67_aristo_blackmail_owner
    code: "function ltest67_aristo_blackmail_owner() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [set_blackmail_owner_stage], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest67_aristo_blackmail_owner(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest66_stamp_style:
    name: ltest66_stamp_style
    code: "function ltest66_stamp_style() {\r

      \  dTable = mBy('dTable'); mClass('dTexture', 'wood');
      mCenterFlex(dTable);\r

      \  let hand = ['2Hn', '3Hn', '4Hn', '5Hn', '6Hn', '7Hn', '8Hn',
      '9Hn', 'THn', 'JHn', 'QHn', 'KHn', 'AHn'];\r

      \  let ui = ui_type_hand(hand, dTable);\r

      \  mStamp(ui.container, 'blackmail');\r

      }\r\n"
    sig: function ltest66_stamp_style(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest65_stamp:
    name: ltest65_stamp
    code: "function ltest65_stamp() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest65_stamp(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest64_aristo_blackmailed_building:
    name: ltest64_aristo_blackmailed_building
    code: "function ltest64_aristo_blackmailed_building() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_other_blackmailed_building], iter: 0, maxiter: 200, running: false,
      step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest64_aristo_blackmailed_building(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest63_aristo_blackmail:
    name: ltest63_aristo_blackmail
    code: "function ltest63_aristo_blackmail() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_other_various_buildings, set_queen_phase], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest63_aristo_blackmail(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest62_aristo_inspect_closed_schwein:
    name: ltest62_aristo_inspect_closed_schwein
    code: "function ltest62_aristo_inspect_closed_schwein() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [x =>
      give_players_schwein(x, false), add_rumors_to_buildings], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest62_aristo_inspect_closed_schwein(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest61_aristo_inspect_correct:
    name: ltest61_aristo_inspect_correct
    code: "function ltest61_aristo_inspect_correct() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_buildings, add_rumors_to_buildings], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest61_aristo_inspect_correct(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest60_aristo_inspect_schwein:
    name: ltest60_aristo_inspect_schwein
    code: "function ltest60_aristo_inspect_schwein() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_schwein, add_rumors_to_buildings], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest60_aristo_inspect_schwein(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest59_arrTakeLast:
    name: ltest59_arrTakeLast
    code: "function ltest59_arrTakeLast() {\r

      \  let x = arrTakeLast([0, 1, 2, 3, 4, 5], 3, 2); console.log('x',
      x);\r

      \  x = arrTakeLast({ blue: 1, red: 2, green: 3 }, 2, 2);
      console.log('x', x);\r

      \  x = arrTakeLast([0, 1, 2, 3, 4, 5], 10, 0); console.log('x',
      x);\r

      }\r\n"
    sig: function ltest59_arrTakeLast(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest58_aristo_building_rumor_harvest:
    name: ltest58_aristo_building_rumor_harvest
    code: "function ltest58_aristo_building_rumor_harvest() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_buildings_plus, add_rumors_to_buildings, give_player_queen],
      iter: 0, maxiter: 200, running: false, step: true, suiteRunning: false,
      number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest58_aristo_building_rumor_harvest(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest57_aristo:
    name: ltest57_aristo
    code: "function ltest57_aristo() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest57_aristo(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest56_algo_overlapping_sets:
    name: ltest56_algo_overlapping_sets
    code: "function ltest56_algo_overlapping_sets() {\r

      \  let cards = ['2Hn', '3Hn', '4Hn', '5Hn', '6Hn', '7Hn', '7Cn',
      '7Dn', '7Hn'].map(x => fritz_get_card(x));\r

      \  let res = is_overlapping_set(cards, 1, 3, false); \r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['2Hn', '3Hn', '4Hn', '3Hn',
      '2Hn'].map(x => fritz_get_card(x)), 1, 3, false); \r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['2Hn', '3Hn', '4Hn', '3Hn'].map(x =>
      fritz_get_card(x)), 1, 3, false); \r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['2Hn', '3Hn', '3Hn', '3Cn'].map(x =>
      fritz_get_card(x)), 1, 3, false); \r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['2Hn', '3Hn', '4Hn', '5Hn', '5Cn',
      '5Dn', '5Cn', '5Hn'].map(x => fritz_get_card(x)), 1, 3, false); \r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['2Hn', '3Hn', '4Hn', '5Hn', '5Cn',
      '5Cn', '5Cn', '5Hn', '6Hn', '7Hn'].map(x => fritz_get_card(x)), 1, 3,
      false); \r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['2Hn', '*Hn', '2Cn', '3Hn',
      '4Cn'].map(x => fritz_get_card(x)), 1, 3, false);\r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['2Hn', '*Hn', '2Cn', '3Cn',
      '4Cn'].map(x => fritz_get_card(x)), 1, 3, false);\r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['4Hn', '3Hn', '2Hn', '2Cn', '2Sn',
      '3Sn', '4Sn'].map(x => fritz_get_card(x)), 1, 3, false); \r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['4Hn', '3Hn'].map(x =>
      fritz_get_card(x)), 1, 3, false); \r

      \  console.log('res:', res);\r

      \  res = is_overlapping_set(['4Hn'].map(x => fritz_get_card(x)), 1,
      3, false); \r

      \  console.log('res:', res);\r

      }\r\n"
    sig: function ltest56_algo_overlapping_sets(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest55_fritz_set_with_same_suits:
    name: ltest55_fritz_set_with_same_suits
    code: "function ltest55_fritz_set_with_same_suits() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [give_player_hand_groups], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0]\r

      \  };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('fritz', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest55_fritz_set_with_same_suits(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest54_fritz_outoftime:
    name: ltest54_fritz_outoftime
    code: "function ltest54_fritz_outoftime() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [make_both_run_out_of_time], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0]\r

      \  };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('fritz', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest54_fritz_outoftime(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest53_fritz_endround:
    name: ltest53_fritz_endround
    code: "function ltest53_fritz_endround() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [o => { let pl = o.fen.players[o.fen.turn[0]].hand =
      ['4Hn']; }], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0]\r

      \  };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('fritz', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest53_fritz_endround(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest52_aristo_church_empty:
    name: ltest52_aristo_church_empty
    code: "function ltest52_aristo_church_empty() {\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [give_players_empty_stalls], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0]\r

      \  };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest52_aristo_church_empty(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest51_aristo_church_downgrade:
    name: ltest51_aristo_church_downgrade
    code: "function ltest51_aristo_church_downgrade() {\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [give_players_stalls, prep_for_church_downgrade], iter:
      0, maxiter: 200, running: false, step: true, suiteRunning: false, number:
      0, list: [0]\r

      \  };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest51_aristo_church_downgrade(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest50_aristo_church:
    name: ltest50_aristo_church
    code: "function ltest50_aristo_church() {\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [give_players_stalls, make_church], iter: 0, maxiter:
      200, running: false, step: true, suiteRunning: false, number: 0, list:
      [0]\r

      \  };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest50_aristo_church(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest49_aristo_church:
    name: ltest49_aristo_church
    code: "function ltest49_aristo_church() {\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [give_players_stalls, make_church, set_player_tithes],
      iter: 0, maxiter: 200, running: false, step: true, suiteRunning: false,
      number: 0, list: [0]\r

      \  };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest49_aristo_church(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest48_aristo_church:
    name: ltest48_aristo_church
    code: "function ltest48_aristo_church() {\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [give_players_stalls], iter: 0, maxiter: 200, running:
      false, step: true, suiteRunning: false, number: 0, list: [0]\r

      \  };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'gul', 'amanda', 'lauren'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest48_aristo_church(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest47_aristo:
    name: ltest47_aristo
    code: "function ltest47_aristo() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'gul', 'amanda', 'lauren'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest47_aristo(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest46_fritz_endgame:
    name: ltest46_fritz_endgame
    code: "function ltest46_fritz_endgame() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = {\r

      \    mods: [o => { let pl = o.fen.players[o.fen.turn[0]].hand =
      ['4Hn', '2Cn', '3Cn']; }], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0]\r

      \  };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('fritz', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest46_fritz_endgame(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest45_fritz:
    name: ltest45_fritz
    code: "function ltest45_fritz() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('fritz', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest45_fritz(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest44_ferro_7R:
    name: ltest44_ferro_7R
    code: "function ltest44_ferro_7R() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_7R], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = []; \r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }, { name: 'felix', playmode: 'human' }, {
      name: 'gul', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest44_ferro_7R(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test_ferro_is_set:
    name: test_ferro_is_set
    code: "function test_ferro_is_set() {\r

      \  let cards = ['9Sn', '7Sn', '8Sn', '9Sn'].map(x =>
      fritz_get_card(x));\r

      \  let set = ferro_is_set(cards, 1, 3);\r

      \  console.log(set);\r

      }\r\n"
    sig: function test_ferro_is_set(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest43_fritz_discard_pile:
    name: ltest43_fritz_discard_pile
    code: "function ltest43_fritz_discard_pile() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [make_deck_discard], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('fritz', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest43_fritz_discard_pile(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest42_aristo:
    name: ltest42_aristo
    code: "function ltest42_aristo() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest42_aristo(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest41_frenzy_DD:
    name: ltest41_frenzy_DD
    code: "function ltest41_frenzy_DD() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('fritz', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest41_frenzy_DD(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest40_ferro_7R_anlegen:
    name: ltest40_ferro_7R_anlegen
    code: "function ltest40_ferro_7R_anlegen() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_7R], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [[0, 1, 2, 3, 4, 5, 6, 7]];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }, { name: 'felix', playmode: 'human' }, {
      name: 'gul', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest40_ferro_7R_anlegen(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest39_ferro_7R:
    name: ltest39_ferro_7R
    code: "function ltest39_ferro_7R() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_7R], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [[0, 1, 2, 3, 4, 5, 6, 7]];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }, { name: 'felix', playmode: 'human' }, {
      name: 'gul', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest39_ferro_7R(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest38_ferro_end_of_round:
    name: ltest38_ferro_end_of_round
    code: "function ltest38_ferro_end_of_round() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_group, give_player_only_one_card], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'nasi', playmode: 'human' }, { name: 'felix', playmode: 'human' }, { name:
      'gul', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest38_ferro_end_of_round(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest37_ferro_4_players:
    name: ltest37_ferro_4_players
    code: "function ltest37_ferro_4_players() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }, { name: 'felix', playmode: 'human' }, {
      name: 'gul', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest37_ferro_4_players(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest36_ferro_two_sequence:
    name: ltest36_ferro_two_sequence
    code: "function ltest36_ferro_two_sequence() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_jolly_sequence, give_player_sequence, o => o.round = 1],
      iter: 0, maxiter: 200, running: false, step: true, suiteRunning: false,
      number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [[0, 1, 2, 3, 4, 5, 6, 7, 8]];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest36_ferro_two_sequence(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest35_ferro_sequence_anlegen:
    name: ltest35_ferro_sequence_anlegen
    code: "function ltest35_ferro_sequence_anlegen() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_other_jolly_sequence, o => o.round = 1], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest35_ferro_sequence_anlegen(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest34_ferro_anlegen:
    name: ltest34_ferro_anlegen
    code: "function ltest34_ferro_anlegen() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_other_jolly_group, o => o.round = 1], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [[0, 14]];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest34_ferro_anlegen(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest33_ferro_sequence:
    name: ltest33_ferro_sequence
    code: "function ltest33_ferro_sequence() {\r

      \  DA.magnify_on_select = true;\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_sequence, give_other_jolly_group, o => o.round = 1], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [[2, 3, 6, 9, 10, 11, 12]];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest33_ferro_sequence(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest32_select_error:
    name: ltest32_select_error
    code: "function ltest32_select_error() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [small_hands, give_other_jolly_group, o => o.round = 4], iter: 0, maxiter:
      200, running: false, step: true, suiteRunning: false, number: 0, list: [0]
      };\r

      \  DA.test.end = () => ferro_transaction_error(['44', '5', '55',
      '7R'], ['jolly', 'anlegen'], 'take_turn_single');\r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest32_select_error(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest31_ferro_rollback:
    name: ltest31_ferro_rollback
    code: "function ltest31_ferro_rollback() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [small_hands, give_other_jolly_group, o => o.round = 1], iter: 0, maxiter:
      200, running: false, step: true, suiteRunning: false, number: 0, list: [0]
      };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest31_ferro_rollback(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest30_ferro_jolly_jolly:
    name: ltest30_ferro_jolly_jolly
    code: "function ltest30_ferro_jolly_jolly() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_each_jolly_group, give_player_jolly], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest30_ferro_jolly_jolly(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest29_ferro_play:
    name: ltest29_ferro_play
    code: "function ltest29_ferro_play() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_hand_group, o => o.round = 2], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [[0, 1, 2], [1]];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest29_ferro_play(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest28_ferro_jolly_complex:
    name: ltest28_ferro_jolly_complex
    code: "function ltest28_ferro_jolly_complex() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_other_jolly_group], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest28_ferro_jolly_complex(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest27_ferro_commands:
    name: ltest27_ferro_commands
    code: "function ltest27_ferro_commands() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [['random']];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest27_ferro_commands(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest26_ferro_endgame:
    name: ltest26_ferro_endgame
    code: "function ltest26_ferro_endgame() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [each_hand_of_one], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest26_ferro_endgame(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest25_ferro_jolly:
    name: ltest25_ferro_jolly
    code: "function ltest25_ferro_jolly() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_each_jolly_group], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest25_ferro_jolly(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest24_ferro_jolly:
    name: ltest24_ferro_jolly
    code: "function ltest24_ferro_jolly() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_other_jolly_group], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest24_ferro_jolly(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest23_aristo_building_downgrade:
    name: ltest23_aristo_building_downgrade
    code: "function ltest23_aristo_building_downgrade() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_buildings], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('aristo', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest23_aristo_building_downgrade(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest22_ferro_action1:
    name: ltest22_ferro_action1
    code: "function ltest22_ferro_action1() {\r

      \  DA.magnify_on_select = true; \r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest22_ferro_action1(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest21_spotit:
    name: ltest21_spotit
    code: "function ltest21_spotit() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { console.log('discard:', Z.fen); }\r

      \  DA.auto_moves = [];\r

      \  startgame('spotit', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat', adaptive: false });\r

      }\r\n"
    sig: function ltest21_spotit(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest20_spotit_adaptive:
    name: ltest20_spotit_adaptive
    code: "function ltest20_spotit_adaptive() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { console.log('discard:', Z.fen); }\r

      \  DA.auto_moves = [];\r

      \  startgame('spotit', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest20_spotit_adaptive(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest12_ferro_buy:
    name: ltest12_ferro_buy
    code: "function ltest12_ferro_buy() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { console.log('discard:',
      Z.fen.deck_discard); }\r

      \  DA.auto_moves = [['random']];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest12_ferro_buy(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest11_ferro_discard:
    name: ltest11_ferro_discard
    code: "function ltest11_ferro_discard() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { console.log('discard:',
      Z.fen.deck_discard); }\r

      \  DA.auto_moves = [['random'], [1], [1], ['random']];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'amanda', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest11_ferro_discard(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest10_ferro_sim:
    name: ltest10_ferro_sim
    code: "function ltest10_ferro_sim() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_one_player_0_coins], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.auto_moves = [['random']];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'felix', playmode: 'human' }, { name: 'amanda', playmode: 'human' }], {
      mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest10_ferro_sim(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest9_ferro_sim:
    name: ltest9_ferro_sim
    code: "function ltest9_ferro_sim() {\r

      \  TESTING = true; DA.testing = true; DA.test = { iter: 0, maxiter:
      200, running: false, step: true, suiteRunning: false, number: 0, list: [0]
      };\r

      \  DA.auto_moves = [['random']];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'felix', playmode: 'human' }, { name: 'amanda', playmode: 'human' }], {
      mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest9_ferro_sim(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest8_ferro_sim:
    name: ltest8_ferro_sim
    code: "function ltest8_ferro_sim() {\r

      \  TESTING = true; DA.testing = true; DA.test = { iter: 0, maxiter:
      200, running: false, step: true, suiteRunning: false, number: 0, list: [0]
      };\r

      \  DA.auto_moves = [['last']];\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'felix', playmode: 'human' }, { name: 'amanda', playmode: 'human' }], {
      mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest8_ferro_sim(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest7_ferro_skin:
    name: ltest7_ferro_skin
    code: "function ltest7_ferro_skin() {\r

      \  startgame('ferro', [{ name: U.name, playmode: 'human' }, { name:
      'felix', playmode: 'human' }, { name: 'amanda', playmode: 'human' }], {
      mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest7_ferro_skin(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest6_bluff_skin:
    name: ltest6_bluff_skin
    code: "function ltest6_bluff_skin() {\r

      \  startgame('bluff', [{ name: 'valerie', playmode: 'human' }, {
      name: 'felix', playmode: 'human' }], { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest6_bluff_skin(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest5_jokerhtml:
    name: ltest5_jokerhtml
    code: "function ltest5_jokerhtml() {\r

      \  let html = `\r

      \    <div style=\"position: absolute; top: 0px; left: 0px; width:
      200px; height: 300px; background: blue\">\r

      \      HALLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOO\r

      \      <!-- joker svg orig -->\r

      \      <svg\r

      \        xmlns=\"http://www.w3.org/2000/svg\"\r

      \        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r

      \        class=\"card\"\r

      \        face=\"0J\"\r

      \        height=\"100%\"\r

      \        preserveAspectRatio=\"none\"\r

      \        viewBox=\"-120 -168 240 336\"\r

      \        width=\"100%\"\r

      \      >\r

      \        <symbol id=\"J11\" preserveAspectRatio=\"none\" viewBox=\"0
      0 1300 2000\">\r

      \          <path fill=\"#FC4\" d=\"M1095,1000A445,445 0 0 1 650,1445
      445,445 0 0 1 205,1000 445,445 0 0 1 650,555 445,445 0 0 1
      1095,1000Z\"></path>\r

      \        </symbol>\r

      \        <symbol id=\"J12\" preserveAspectRatio=\"none\" viewBox=\"0
      0 1300 2000\">\r

      \          <path\r

      \            fill=\"red\"\r

      \            d=\"M317.05664,1294.416 100,1620l220,-60 40,240
      140,-200 160,200 40,-200 180,180 60,-220 260,60
      -236.67969,-304.3027A445,445 0 0 1 650,1445 445,445 0 0 1
      317.05664,1294.416ZM831.71484,249.10742C687.94378,262.65874
      542.4812,256.33752 420,520 369.08062,331.38331 278.61481,370.61289
      187.77148,412.01367a75,75 0 0 1 2.52344,19.12695 75,75 0 0 1
      -16.78515,47.19532c66.827,55.25537 117.57478,127.8247
      155.77539,213.90429A445,445 0 0 1 650,555 445,445 0 0 1
      924.33984,650.26562c42.39917,-50.4556 91.60026,-93.34711
      167.51176,-106.5332a75,75 0 0 1 -0.6524,-9.14258 75,75 0 0 1
      14.6172,-44.3457C1026.3517,437.47479 931.12146,446.83238 840,440
      761.98041,388.07638 804.10248,338.17898 853.51758,288.4043a75,75 0 0 1
      -21.80274,-39.29688z\"\r

      \          ></path>\r

      \        </symbol>\r

      \        <symbol id=\"J13\" preserveAspectRatio=\"none\" viewBox=\"0
      0 1300 2000\">\r

      \          <path\r

      \            fill=\"#44F\"\r

      \            d=\"M879.65521,937.6026a40,40 0 0 1 -40,40 40,40 0 0 1
      -40,-40 40,40 0 0 1 40,-40 40,40 0 0 1 40,40zm-379.31039,0a40,40 0 0 1
      -40,40 40,40 0 0 1 -40,-40 40,40 0 0 1 40,-40 40,40 0 0 1 40,40z\"\r

      \          ></path>\r

      \        </symbol>\r

      \        <symbol id=\"J14\" preserveAspectRatio=\"none\" viewBox=\"0
      0 1300 2000\">\r

      \          <path\r

      \            stroke=\"#44F\"\r

      \            stroke-linecap=\"round\"\r

      \            stroke-linejoin=\"round\"\r

      \            stroke-width=\"6\"\r

      \            fill=\"none\"\r

      \            d=\"M317.05664,1294.416 100,1620l220,-60 40,240
      140,-200 160,200 40,-200 180,180 60,-220 260,60
      -236.67969,-304.3027M1241.1987,534.58948a75,75 0 0 1 -75,75 75,75 0 0 1
      -75,-75 75,75 0 0 1 75,-75 75,75 0 0 1 75,75zM980.11493,234.09686a75,75 0
      0 1 -75,75 75,75 0 0 1 -75,-75 75,75 0 0 1 75,-75 75,75 0 0 1
      75,75zM190.29556,431.1412a75,75 0 0 1 -75,75 75,75 0 0 1 -74.999997,-75
      75,75 0 0 1 74.999997,-75 75,75 0 0 1
      75,75zM924.3457,650.27148c42.40088,-50.45397 91.5936,-93.35356
      167.5059,-106.53906 -0.4037,-3.03138 -0.6215,-6.0846 -0.6524,-9.14258
      0.03,-15.96068 5.1503,-31.4957 14.6172,-44.3457C1026.3517,437.47479
      931.12146,446.83238 840,440 761.98041,388.07638 804.10248,338.17898
      853.51758,288.4043 842.40414,277.84182 834.79487,264.12701
      831.71484,249.10742 687.94378,262.65874 542.4812,256.33752 420,520
      369.08062,331.38331 278.61481,370.61289
      187.77148,412.01367c1.66108,6.24042 2.50924,12.66925 2.52344,19.12695
      -0.0209,17.1896 -5.94587,33.85038 -16.7832,47.19336 66.82714,55.25532
      117.5686,127.8306 155.76953,213.91016M384.88867,1140c51.89013,98.343
      153.91815,159.9189 265.11133,160 111.19809,-0.076 213.23257,-61.6527
      265.125,-160M1095,1000A445,445 0 0 1 650,1445 445,445 0 0 1 205,1000
      445,445 0 0 1 650,555 445,445 0 0 1 1095,1000Z\"\r

      \          ></path>\r

      \        </symbol>\r

      \        <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \        <text x=\"-110\" y=\"-115\" fill=\"red\" stroke=\"red\"
      style=\"font:bold 60px sans-serif\">*</text>\r

      \        <use width=\"202.8\" height=\"312\" x=\"-101.4\" y=\"-156\"
      xlink:href=\"#J11\"></use>\r

      \        <use width=\"202.8\" height=\"312\" x=\"-101.4\" y=\"-156\"
      xlink:href=\"#J12\"></use>\r

      \        <use width=\"202.8\" height=\"312\" x=\"-101.4\" y=\"-156\"
      xlink:href=\"#J13\"></use>\r

      \        <use width=\"202.8\" height=\"312\" x=\"-101.4\" y=\"-156\"
      xlink:href=\"#J14\"></use>\r

      \      </svg>\r

      \    </div>\r

      \  `;\r

      \  document.body.appendChild(mCreateFrom(html));\r

      }\r\n"
    sig: function ltest5_jokerhtml(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest4_sheriff:
    name: ltest4_sheriff
    code: "function ltest4_sheriff() {\r

      \  let di = SHERIFF.cards;\r

      \  for (const name in di) { let c = sheriff_card(name);
      mAppend(dTable, iDiv(c)); }\r

      }\r\n"
    sig: function ltest4_sheriff(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest3_card:
    name: ltest3_card
    code: "function ltest3_card() {\r

      \  let di = SHERIFF.cards;\r

      \  for (const name in di) {\r

      \    let c = sheriff_card(name); \r

      \    mAppend(dTable, iDiv(c));\r

      \  }\r

      }\r\n"
    sig: function ltest3_card(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest2_card:
    name: ltest2_card
    code: "function ltest2_card() {\r

      \  let c = cPortrait(dTable, { margin: 12, border: 'solid 4px lime',
      bg: 'lightgreen' });\r

      \  let d = iDiv(c);\r

      \  console.log('d', d)\r

      \  let ds = mSym('red apple', d, { sz: 30 }, 'tl');\r

      \  ds = mSymText(2, d, { sz: 25, rounding: '50%', bg: 'gold',
      margin: 3 }, 'tr');\r

      \  ds = mText('APPLES', d, { family: 'Algerian', w: '100%', fz: 12,
      align: 'center', position: 'absolute', bottom: 0 });\r

      \  ds = mSymText(2, d, { sz: 25, rounding: '50%', bg: 'crimson',
      margin: 3 }, 'br');\r

      \  ds = mSym('green apple', d, { sz: 70 }, 'cc');\r

      }\r\n"
    sig: function ltest2_card(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest1_card:
    name: ltest1_card
    code: "function ltest1_card() { let c = cLandscape(dTable, { margin: 12 });
      }\r\n"
    sig: function ltest1_card(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest0_card:
    name: ltest0_card
    code: "function ltest0_card() { let c = ari_get_card('QSn'); mAppend(dTable,
      iDiv(c)); }\r\n"
    sig: function ltest0_card(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest7_gameover:
    name: fentest7_gameover
    code: "function fentest7_gameover() {\r

      \  let [game, A, fen, uplayer] = [Z.game, Z.A, Z.fen, Z.uplayer];\r

      \  if (game == 'aristo') fentest6_endgame();\r

      \  else if (game == 'spotit') {\r

      \    for (const plname in fen.players) { fen.players[plname].score =
      Z.options.winning_score - 1; }\r

      \    take_turn_fen();\r

      \  } else if (game == 'bluff') {\r

      \    let pl = fen.players[uplayer];\r

      \    while (pl.handsize < Z.options.max_handsize) inc_handsize(fen,
      uplayer); \r

      \    deck_add(fen.deck, 1, pl.hand);\r

      \    take_turn_fen();\r

      \  }\r

      }\r\n"
    sig: function fentest7_gameover(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test100_partial_sequences:
    name: test100_partial_sequences
    code: "function test100_partial_sequences() {\r

      \  let hand = ['AHn', '2Hn', '3Hn', '4Hn', '5Hn', '6Hn', '7Hn',
      '8Hn']; \r

      \  hand = ['AHn', '2Hn', '3Hn', '4Hn', '5Hn', '7Hn', '8Hn'];\r

      \  hand = ['4Hn', '7Hn', 'AHn', '2Hn', '5Hn', '6Hn', '3Hn', '8Hn'];
      \r

      \  hand = ['4Hn', '7Hn', 'AHn', '2Hn', '3Hn', '8Hn']; \r

      \  hand = ['4Hn', '7Hn', 'AHn', '2Hn', '9Hn', 'THn', 'QHn', '3Hn',
      '8Hn']; \r

      \  hand = ['4Hn', '7Hn', 'AHn', '2Hn', 'THn', 'QHn', '3Hn', '8Hn'];
      \r

      \  let items = hand.map(x => ferro_get_card(x));\r

      \  console.log('items', items);\r

      \  sortCardItemsToSequence(items);\r

      }\r\n"
    sig: function test100_partial_sequences(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  add_rumors_to_buildings:
    name: add_rumors_to_buildings
    code: "function add_rumors_to_buildings(o) {\r

      \  fen = o.fen;\r

      \  for (const plname of fen.plorder) {\r

      \    let buildings = fen.players[plname].buildings;\r

      \    for (const type in buildings) {\r

      \      for (const b of buildings[type]) {\r

      \        if (type == 'farm') b.h = rCard('n');\r

      \        b.rumors = arrFunc(2, () => rCard('r'));\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function add_rumors_to_buildings(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  each_hand_of_one:
    name: each_hand_of_one
    code: "function each_hand_of_one(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.hand = [rChoose(['4Hn', '5Hn', 'QHn', 'KHn', 'AHn'])];\r

      \    pl.goals['33'] = true; pl.roundgoal = '33';\r

      \    pl.journeys.push(['4Hn', '4Sn', '*Hn'], ['5Hn', '5Sn', '*Hn'],
      ['QHn', 'QSn', '*Hn']);\r

      \  }\r

      \  fen.players[uplayer].hand = ['4Cn'];\r

      }\r\n"
    sig: function each_hand_of_one(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  get_building_with_rumor:
    name: get_building_with_rumor
    code: "function get_building_with_rumor(fen, plname) {\r

      \  let buildings = fen.players[plname].buildings;\r

      \  for (const type in buildings) {\r

      \    let i = 0;\r

      \    for (const b of buildings[type]) {\r

      \      if (isdef(b.rumors)) {\r

      \        b.type = type;\r

      \        b.path = `players.${plname}.buildings.${type}.${i}`;\r

      \        return b;\r

      \      }\r

      \      i++;\r

      \    }\r

      \  }\r

      \  return null;\r

      }\r\n"
    sig: function get_building_with_rumor(fen, plname){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_hand_groups:
    name: give_player_hand_groups
    code: "function give_player_hand_groups(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.hand = ['2Hn', '2Hn', '2Sn', '2Cn', '3Sn', '3Hn', '4Hn',
      '4Sn', '*Hn'];\r

      }\r\n"
    sig: function give_player_hand_groups(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_only_one_card:
    name: give_player_only_one_card
    code: "function give_player_only_one_card(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.hand = ['4Hn'];\r

      }\r\n"
    sig: function give_player_only_one_card(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_group:
    name: give_player_group
    code: "function give_player_group(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.journeys = [['2Hn', '2Sn', '2Hn']];\r

      }\r\n"
    sig: function give_player_group(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_one_ferro_set:
    name: give_player_one_ferro_set
    code: "function give_player_one_ferro_set(o) {\r

      \  o.fen.players[o.fen.turn[0]].hand = ['*Hn', 'KHn', 'KCn'];\r

      }\r\n"
    sig: function give_player_one_ferro_set(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_two_ferro_sets:
    name: give_player_two_ferro_sets
    code: "function give_player_two_ferro_sets(o) {\r

      \  o.fen.players[o.fen.turn[0]].hand = ['*Hn', 'KHn', 'KCn', 'QHn',
      'QCn', 'QDn'];\r

      }\r\n"
    sig: function give_player_two_ferro_sets(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_7R:
    name: give_player_7R
    code: "function give_player_7R(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.hand = ['7Cn', '8Cn', 'TCn', 'JCn', 'QCn', 'KCn', 'ACn',
      '*Hn', '8Cn', '2Hn', '2Sn', '2Hn'];\r

      \  let otherplayer = firstCond(fen.plorder, (p) => p != uplayer);\r

      \  let plother = fen.players[otherplayer];\r

      \  plother.hand.unshift('9Cn', '2Sn', '2Hn', '6Cn', '5Cn');\r

      }\r\n"
    sig: function give_player_7R(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_hand_group:
    name: give_player_hand_group
    code: "function give_player_hand_group(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.hand = ['2Hn', '2Sn', '2Hn', '3Hn', '3Sn', '3Hn', '4Hn',
      '4Sn', '*Hn'];\r

      }\r\n"
    sig: function give_player_hand_group(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_jolly:
    name: give_player_jolly
    code: "function give_player_jolly(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.hand.push('*Hn');\r

      }\r\n"
    sig: function give_player_jolly(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_each_jolly_group:
    name: give_each_jolly_group
    code: "function give_each_jolly_group(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.journeys.push(['4Hn', '4Sn', '*Hn']);\r

      \    pl.goals['3'] = true; pl.roundgoal = '3';\r

      \  }\r

      \  fen.players[uplayer].hand.push('4Cn');\r

      }\r\n"
    sig: function give_each_jolly_group(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_sequence:
    name: give_player_sequence
    code: "function give_player_sequence(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.hand = ['2Sn', '3Sn', '4Sn', '5Sn', '6Sn', '7Sn', '8Sn',
      '9Sn', 'ASn'];\r

      }\r\n"
    sig: function give_player_sequence(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_other_jolly_group:
    name: give_other_jolly_group
    code: "function give_other_jolly_group(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let otherplayer = firstCond(fen.plorder, (p) => p != uplayer);\r

      \  let pl = fen.players[otherplayer];\r

      \  pl.journeys.push(['2Hn', '2Sn', '*Hn']);\r

      \  pl.goals['3'] = true; pl.roundgoal = '3';\r

      \  fen.players[uplayer].hand.push('2Cn');\r

      }\r\n"
    sig: function give_other_jolly_group(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_jolly_sequence:
    name: give_player_jolly_sequence
    code: "function give_player_jolly_sequence(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.journeys.push(['KHn', 'AHn', '*Hn', '3Hn', '4Hn', '5Hn',
      '6Hn']);\r

      \  pl.goals['7R'] = true; pl.roundgoal = '7R';\r

      \  fen.players[uplayer].hand.push('2Hn', 'JHn', 'QHn');\r

      }\r\n"
    sig: function give_player_jolly_sequence(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_other_jolly_sequence:
    name: give_other_jolly_sequence
    code: "function give_other_jolly_sequence(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let otherplayer = firstCond(fen.plorder, (p) => p != uplayer);\r

      \  let pl = fen.players[otherplayer];\r

      \  pl.journeys.push(['KHn', 'AHn', '*Hn', '3Hn', '4Hn', '5Hn',
      '6Hn']);\r

      \  pl.goals['7R'] = true; pl.roundgoal = '7R';\r

      \  fen.players[uplayer].hand.push('2Hn', '5Hn', 'JHn', 'QHn');\r

      }\r\n"
    sig: function give_other_jolly_sequence(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_other_blackmailed_building:
    name: give_other_blackmailed_building
    code: "function give_other_blackmailed_building(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let b1 = stage_building(fen, 1, 'farm'); b1.rumors = ['KHr'];\r

      \  b1.isblackmailed = true;\r

      \  set_queen_phase(o);\r

      }\r\n"
    sig: function give_other_blackmailed_building(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_various_buildings:
    name: give_player_various_buildings
    code: "function give_player_various_buildings(o) {\r

      \  let plname = o.fen.turn[0];\r

      \  return give_various_buildings_to(o, plname);\r

      }\r\n"
    sig: function give_player_various_buildings(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_other_various_buildings:
    name: give_other_various_buildings
    code: "function give_other_various_buildings(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let other = firstCond(o.fen.plorder, (p) => p != uplayer);\r

      \  return give_various_buildings_to(o, other);\r

      }\r\n"
    sig: function give_other_various_buildings(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_various_buildings_to:
    name: give_various_buildings_to
    code: "function give_various_buildings_to(o, plname) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let i = fen.plorder.indexOf(plname);\r

      \  let b1 = stage_building(fen, i, 'farm'); b1.rumors = ['KHr'];\r

      \  let b2 = stage_building(fen, i, 'farm');\r

      \  let lead = b2.lead; \r

      \  b2.rumors = ['4Cr', `${lead[0]}Cr`];\r

      \  let b3 = stage_building(fen, i, 'farm');\r

      \  return plname;\r

      }\r\n"
    sig: function give_various_buildings_to(o, plname){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_buildings:
    name: give_players_buildings
    code: "function give_players_buildings(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  stage_correct_buildings(fen, { mimi: { estate: 1 }, amanda: {
      chateau: 1 } });\r

      \  fen.stage = 5;\r

      \  fen.phase = 'king';\r

      }\r\n"
    sig: function give_players_buildings(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_schwein:
    name: give_players_schwein
    code: "function give_players_schwein(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  for (let i = 0; i < fen.plorder.length; i++) {\r

      \    let b = stage_building(fen, i, 'farm');\r

      \    b.h = 'KHn';\r

      \    b.schweine = [2];\r

      \    let b1 = stage_building(fen, i, 'estate');\r

      \  }\r

      \  [fen.turn, fen.stage] = [[uplayer], 5];\r

      \  fen.phase = 'king';\r

      }\r\n"
    sig: function give_players_schwein(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_one_player_0_coins:
    name: give_one_player_0_coins
    code: "function give_one_player_0_coins(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let otherplayer = firstCond(fen.plorder, (p) => p != uplayer);\r

      \  let pl = fen.players[otherplayer];\r

      \  pl.coins = 0;\r

      }\r\n"
    sig: function give_one_player_0_coins(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_empty_stalls:
    name: give_players_empty_stalls
    code: "function give_players_empty_stalls(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let n = rChoose([2, 3]);\r

      \  fen.market = deck_deal(fen.deck, 2);\r

      \  fen.stage = 4, fen.actionsCompleted = [], fen.stallSelected =
      jsCopy(fen.plorder);\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.stall = [];\r

      \    pl.stall_value = 0;\r

      \  }\r

      }\r\n"
    sig: function give_players_empty_stalls(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_stalls:
    name: give_players_stalls
    code: "function give_players_stalls(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let n = rChoose([2, 3]);\r

      \  fen.market = deck_deal(fen.deck, 2);\r

      \  fen.stage = 4, fen.actionsCompleted = [], fen.stallSelected =
      jsCopy(fen.plorder);\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    for (let i = 0; i < n; i++)  top_elem_from_to(pl.hand,
      pl.stall);\r

      \    pl.stall_value = calc_stall_value(fen, plname);\r

      \  }\r

      }\r\n"
    sig: function give_players_stalls(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_queen:
    name: give_player_queen
    code: "function give_player_queen(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  fen.players[uplayer].hand.push('QHn');\r

      }\r\n"
    sig: function give_player_queen(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_buildings_plus:
    name: give_players_buildings_plus
    code: "function give_players_buildings_plus(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let di = {};\r

      \  for (const plname of fen.plorder) { di[plname] = { estate: 1,
      farm: 1, chateau: 1 }; }\r

      \  stage_correct_buildings(fen, di);\r

      \  ari_add_harvest_cards(fen);\r

      \  fen.stage = o.stage = 5;\r

      \  fen.phase = 'king';\r

      }\r\n"
    sig: function give_players_buildings_plus(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  make_both_run_out_of_time:
    name: make_both_run_out_of_time
    code: "function make_both_run_out_of_time(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  for (const plname in fen.players) {\r

      \    let pl = fen.players[plname];\r

      \    pl.time_left = 100;\r

      \  }\r

      }\r\n"
    sig: function make_both_run_out_of_time(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  make_church:
    name: make_church
    code: "function make_church(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  fen.stage = 1004;\r

      \  fen.market = ['JHn', 'QSn'];\r

      }\r\n"
    sig: function make_church(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  make_long_history:
    name: make_long_history
    code: "function make_long_history(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  fen.history = [];\r

      \  for (let i = 0; i < 100; i++) {\r

      \    let lines = [`${rChoose(get_keys(fen.players))} discards
      ${rCard()}`];\r

      \    let title = 'discard';\r

      \    fen.history.push({ title: title, lines: lines });\r

      \  }\r

      }\r\n"
    sig: function make_long_history(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  make_deck_empty:
    name: make_deck_empty
    code: "function make_deck_empty(o) {\r

      \  let fen = o.fen;\r

      \  fen.deck_discard = fen.deck;\r

      \  output_arr_short(fen.deck);\r

      \  fen.deck = [];\r

      }\r\n"
    sig: function make_deck_empty(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  make_deck_discard:
    name: make_deck_discard
    code: "function make_deck_discard(o) {\r

      \  let fen = o.fen;\r

      \  let uplayer = o.uplayer;\r

      \  fen.deck_discard = ['2Sn', '3Sn', '4Sn', '5Sn', '6Sn', '7Sn',
      '8Sn', '9Sn', 'TSn'];\r

      \  fen.journeys = [['2Dn', '3Dn', '4Dn'], ['5Sn', '6Sn', '7Sn']];\r

      }\r\n"
    sig: function make_deck_discard(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  prep_for_church_downgrade:
    name: prep_for_church_downgrade
    code: "function prep_for_church_downgrade(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  fen.stage = 1004;\r

      \  fen.market = ['JHn', 'QSn'];\r

      \  let ob = {}; ob[uplayer] = { estate: 1 };
      stage_correct_buildings(fen, ob);\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.hand = ['JHn', 'QSn']; pl.stall = ['JHn', 'QSn'];\r

      \    if (plname == uplayer) {\r

      \      pl.hand = ['2Hn', '2Sn']; pl.stall = ['AHn', 'ASn'];\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function prep_for_church_downgrade(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  set_blackmail_owner_stage_defend:
    name: set_blackmail_owner_stage_defend
    code: "function set_blackmail_owner_stage_defend(o) {\r

      \  set_blackmail_owner_stage(o);\r

      \  console.log('==>blackmailed is', o.fen.turn[0])\r

      \  let fen = o.fen;\r

      \  let uplayer = fen.turn[0];\r

      \  console.log('==>blackmailed is', uplayer)\r

      \  let building = path2fen(fen, fen.blackmail.building_path);\r

      \  let lead = building.lead;\r

      \  fen.players[uplayer].rumors.push(`${lead[0]}Cr`);\r

      \  let plname = fen.blackmail.blackmailed;\r

      \  let rumors = fen.players[plname].rumors;\r

      \  console.log('lead', lead, 'blackmailed rumors', rumors);\r

      }\r\n"
    sig: function set_blackmail_owner_stage_defend(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  set_blackmail_owner_stage:
    name: set_blackmail_owner_stage
    code: "function set_blackmail_owner_stage(o) {\r

      \  set_queen_phase(o); \r

      \  let fen = o.fen;\r

      \  let uplayer = fen.turn[0];\r

      \  console.log('blackmailed is', uplayer)\r

      \  give_various_buildings_to(o, uplayer);\r

      \  let other = firstCond(fen.plorder, (p) => p != uplayer);\r

      \  let building = get_building_with_rumor(o.fen, uplayer);\r

      \  let payment = { o: null, a: 'coin', key: 'coin', friendly:
      'coin', path: null };\r

      \  fen.blackmail = { blackmailer: other, blackmailed: uplayer,
      payment: payment, building_path: building.path };\r

      \  building.isblackmailed = true;\r

      \  fen.stage = o.stage = 33;\r

      }\r\n"
    sig: function set_blackmail_owner_stage(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  set_player_tides:
    name: set_player_tides
    code: "function set_player_tides(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let min = 1000, minplayer = null;\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    let hkey = pl.hand[0];\r

      \    let val = ari_get_card(hkey).val;\r

      \    pl.tides = { keys: [hkey], val: val };\r

      \    if (val < min) { min = val; minplayer = plname; }\r

      \    console.log('player', plname, 'tides', pl.tides);\r

      \  }\r

      \  let sorted = sortByDescending(fen.plorder, x =>
      fen.players[x].tides.val);\r

      \  fen.church_order = jsCopy(fen.plorder);\r

      \  fen.tide_minimum =\r

      \    fen.stage = 21;\r

      }\r\n"
    sig: function set_player_tides(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\easy\test.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634798.381
    size: 145764
  set_queen_phase:
    name: set_queen_phase
    code: "function set_queen_phase(o) {\r

      \  fen = o.fen;\r

      \  fen.phase = o.phase = 'queen';\r

      \  arisim_stage_3(fen);\r

      \  arisim_stage_4_all(fen, 3, false);\r

      \  ensure_actions(fen);\r

      \  fen.turn = [fen.plorder[0]];\r

      }\r\n"
    sig: function set_queen_phase(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  small_hands:
    name: small_hands
    code: "function small_hands(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.hand.sort();\r

      \    pl.hand = arrTake(pl.hand, 7); \r

      \  }\r

      }\r\n"
    sig: function small_hands(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  correct_handsorting:
    name: correct_handsorting
    code: "function correct_handsorting(hand, plname) {\r

      \  let pl = Z.fen.players[plname];\r

      \  let [cs, pls, locs] = [Clientdata.handsorting, pl.handsorting,
      localStorage.getItem('handsorting')];\r

      \  let s = cs ?? pls ?? locs ??
      Config.games[Z.game].defaulthandsorting;\r

      \  hand = sort_cards(hand, s == 'suit', 'CDSH', true,
      Z.func.rankstr);\r

      \  return hand;\r

      }\r\n"
    sig: function correct_handsorting(hand, plname){}
    region: cards (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ari_get_card_large:
    name: ari_get_card_large
    code: "function ari_get_card_large(ckey, h, w, ov = .2) {\r

      \  let type = ckey[2];\r

      \  let sz = { largecard: 120, smallcard: 80 };\r

      \  let info = type == 'n' ? to_aristocard(ckey, sz.largecard) : type
      == 'l' ? to_luxurycard(ckey, sz.largecard) : type == 'r' ?
      to_rumorcard(ckey, sz.smallcard) : to_commissioncard(ckey,
      sz.smallcard);\r

      \  let card = cardFromInfo(info, h, w, ov);\r

      \  if (type == 'l') luxury_card_deco(card);\r

      \  return card;\r

      }\r\n"
    sig: function ari_get_card_large(ckey, h, w, ov = .2){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  luxury_card_deco:
    name: luxury_card_deco
    code: "function luxury_card_deco(card) {\r

      \  let d = iDiv(card); mStyle(d, { position: 'relative' });\r

      \  let d1 = mDiv(d, { fg: 'dimgray', fz: 11, family: 'tangerine',
      position: 'absolute', left: 0, top: 0, 'writing-mode': 'vertical-rl',
      transform: 'scale(-1)', top: '35%' }, null, 'Luxury');\r

      \  let html = `<img height=${18}
      src=\"../base/assets/icons/deco0.svg\"
      style=\"transform:scaleX(-1);\">`;\r

      \  d1 = mDiv(d, { position: 'absolute', bottom: -2, left: 3,
      opacity: .25 }, null, html);\r

      }\r\n"
    sig: function luxury_card_deco(card){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  to_rumorcard:
    name: to_rumorcard
    code: "function to_rumorcard(ckey, sz = 40, color = GREEN, w) { return
      to_aristocard(ckey, sz, color); }\r\n"
    sig: function to_rumorcard(ckey, sz = 40, color = GREEN, w){}
    region: get (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  anim_face_up:
    name: anim_face_up
    code: "function anim_face_up(item, ms = 300, callback = null) { face_down(item);
      anim_toggle_face(item, callback); }\r\n"
    sig: function anim_face_up(item, ms = 300, callback = null){}
    region: card (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  anim_face_down:
    name: anim_face_down
    code: "function anim_face_down(item, ms = 300, callback = null) { face_up(item);
      anim_toggle_face(item, callback); }\r\n"
    sig: function anim_face_down(item, ms = 300, callback = null){}
    region: card (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  symbolcolor:
    name: symbolcolor
    code: "function symbolcolor(card, color) {\r

      \  let d = iDiv(card);\r

      \  let els = d.getElementsByTagName('symbol');\r

      \  console.log('list', els)\r

      \  for (const el of els) {\r

      \    let html = el.innerHTML;\r

      \    let html1 = replaceAll(html, 'red', color);\r

      \    let html2 = replaceAll(html1, 'black', color);\r

      \    el.innerHTML = html2;\r

      \  }\r

      }\r\n"
    sig: function symbolcolor(card, color){}
    region: helpers (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _ui_game_menu_item:
    name: _ui_game_menu_item
    code: "function _ui_game_menu_item(g, g_tables = []) {\r

      \  function runderkreis(color, id) {\r

      \    return `<div id=${id}
      style='width:20px;height:20px;border-radius:50%;background-color:${color}\
      ;color:white;position:absolute;left:0px;top:0px;'>` + '' + \"</div>\";\r

      \  }\r

      \  let [sym, bg, color, id] = [Syms[g.logo], g.color, null,
      getUID()];\r

      \  if (!isEmpty(g_tables)) {\r

      \    let t = g_tables[0]; \r

      \    let have_another_move = t.player_status == 'joined';\r

      \    color = have_another_move ? 'green' : 'red';\r

      \    id = `rk_${t.id}`;\r

      \  }\r

      \  return `\r

      \  <div onclick=\"onclick_game_menu_item(event)\" gamename=${g.id}
      style='cursor:pointer;border-radius:10px;margin:10px;padding:5px;padding-\
      top:15px;min-width:120px;height:90px;display:inline-block;background:${bg\
      };position:relative;'>\r

      \  ${nundef(color) ? '' : runderkreis(color, id)}\r

      \  <span
      style='font-size:50px;font-family:${sym.family}'>${sym.text}</span><br>${\
      g.friendly.toString()}</div>\r

      \  `;\r

      }\r\n"
    sig: function _ui_game_menu_item(g, g_tables = []){}
    region: start (legacy.js)
    filename: legacy.js
    type: func
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  spotit_read_all_scores:
    name: spotit_read_all_scores
    code: "function spotit_read_all_scores() {\r

      \  if (nundef(Z.playerdata)) {\r

      \    Z.playerdata = [];\r

      \    for (const pl in Z.fen.players) {\r

      \      Z.playerdata.push({\r

      \        name: pl,\r

      \        state: { score: 0 },\r

      \      });\r

      \    }\r

      \  }\r

      \  for (const pldata of Z.playerdata) {\r

      \    let plname = pldata.name;\r

      \    let state = pldata.state;\r

      \    let score = !isEmpty(state) ? state.score : 0;\r

      \    let fenscore = lookupSet(Z.fen, ['players', plname, 'score'],
      score);\r

      \    Z.fen.players[plname].score = Math.max(fenscore, score);\r

      \  }\r

      }\r\n"
    sig: function spotit_read_all_scores(){}
    region: internal (spotit.js)
    filename: spotit.js
    type: func
    fname: spotit.js
    path: C:\xampp\htdocs\aroot\games\spotit.js
    datetime: 2022-09-07-10-24
    timestamp: 1662571452273.635
    size: 15606
  arr_count:
    name: arr_count
    code: "function arr_count(arr,funcprop) {\r

      \  console.log('arr',arr);\r

      \  let di = {};\r

      \  if (isdef(funcprop) && isString(funcprop)){\r

      \    for (const a of arr) { if (isdef(di[a[funcprop]]))
      di[a[funcprop]] += 1; else di[a[funcprop]] = 1; }\r

      \  }else if (isdef(funcprop)){ \r

      \    for (const a of arr) { \r

      \      let val = funcprop(a);\r

      \      if (isdef(di[val])) di[val] += 1; else di[val] = 1; \r

      \    }\r

      \  }else{\r

      \    for (const a of arr) { if (isdef(di[a])) di[a] += 1; else di[a]
      = 1; }\r

      \  }\r

      \  for(const a of arr){\r

      \    a.rank=a.key[0];\r

      \    a.count=di[a.rank];\r

      \  }\r

      \  let sorted = sortByDescending(arr,'count');\r

      \  return sorted;\r

      }\r\n"
    sig: function arr_count(arr,funcprop){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  arrExcept:
    name: arrExcept
    code: "function arrExcept(arr,el){\r

      \  let res = [];\r

      \  for(const a of arr){if (a!=el) res.push(a);}\r

      \  return res;\r

      }\r\n"
    sig: function arrExcept(arr,el){}
    region: objects (base.js)
    filename: base.js
    type: func
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  onclick_menu_item:
    name: onclick_menu_item
    code: "function onclick_menu_item(name) { G_init(name); onclick_playpause();
      }\r\n"
    sig: function onclick_menu_item(name){}
    region: funcs (onclick.js)
    filename: onclick.js
    type: func
    fname: onclick.js
    path: C:\D\a03\nodemaster\all\fractals\nature\onclick.js
    datetime: 2022-09-11-16-33
    timestamp: 1662939226915.2368
    size: 134
  executeFrame:
    name: executeFrame
    code: "function executeFrame(){\r

      \  if(animate)\r

      \    requestAnimFrame(executeFrame);\r

      \  incrementSimulation();\r

      \  c.clearRect(0, 0, canvas.width, canvas.height);\r

      \  drawBox();\r

      \  drawCircle();\r

      \  if(mouse.down)\r

      \    drawLineToMouse();\r

      }\r\n"
    sig: function executeFrame(){}
    region: var (ball.js)
    filename: ball.js
    type: func
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  incrementSimulation:
    name: incrementSimulation
    code: "function incrementSimulation(){\r

      \  if(mouse.down){\r

      \    var dx = mouse.x - circle.x,\r

      \        dy = mouse.y - circle.y,\r

      \        distance = Math.sqrt(dx*dx + dy*dy),\r

      \        unitX = dx / distance,\r

      \        unitY = dy / distance,\r

      \        force = distance * mousePullStrength;\r

      \    circle.vx += unitX * force;\r

      \    circle.vy += unitY * force;\r

      \  }\r

      \  circle.vy += gravity;\r

      \  circle.vx *= dampening;\r

      \  circle.vy *= dampening;\r

      \  circle.x += circle.vx;\r

      \  circle.y += circle.vy;\r

      \  if(circle.y + radius > canvas.height){\r

      \    circle.y = canvas.height - radius;\r

      \    circle.vy = - Math.abs(circle.vy);\r

      \  }\r

      \  else if(circle.y - radius < 0){\r

      \    circle.y = radius;\r

      \    circle.vy = Math.abs(circle.vy);\r

      \  }\r

      \  if(circle.x + radius > canvas.width){\r

      \    circle.x = canvas.width - radius;\r

      \    circle.vx = - Math.abs(circle.vx);\r

      \  }\r

      \  else if(circle.x - radius < 0){\r

      \    circle.x = radius;\r

      \    circle.vx = Math.abs(circle.vx);\r

      \  }\r

      }\r\n"
    sig: function incrementSimulation(){}
    region: var (ball.js)
    filename: ball.js
    type: func
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  drawBox:
    name: drawBox
    code: "function drawBox(){\r

      \  c.lineWidth = 1;\r

      \  c.strokeRect(0.5, 0.5, canvas.width - 1, canvas.height - 1);\r

      }\r\n"
    sig: function drawBox(){}
    region: var (ball.js)
    filename: ball.js
    type: func
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  drawCircle:
    name: drawCircle
    code: "function drawCircle(){\r

      \  c.beginPath();\r

      \  c.arc(circle.x, circle.y, radius - lineWidth/2, 0 , 2 * Math.PI,
      false);\r

      \  c.fillStyle = '00F0FF';\r

      \  c.fill();\r

      \  c.lineWidth = 4;\r

      \  c.strokeStyle = 'black';\r

      \  c.stroke();\r

      }\r\n"
    sig: function drawCircle(){}
    region: var (ball.js)
    filename: ball.js
    type: func
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  drawLineToMouse:
    name: drawLineToMouse
    code: "function drawLineToMouse(){\r

      \  c.lineWidth = 2;\r

      \  c.moveTo(circle.x, circle.y);\r

      \  c.lineTo(mouse.x, mouse.y);\r

      \  c.stroke();\r

      }\r\n"
    sig: function drawLineToMouse(){}
    region: var (ball.js)
    filename: ball.js
    type: func
    fname: ball.js
    path: C:\D\a03\nodemaster\all\canvas\lib\ball.js
    datetime: 2022-09-12-10-28
    timestamp: 1663003703326.7866
    size: 3556
  create_flower:
    name: create_flower
    code: "function create_flower(){\r\n}\r\n"
    sig: function create_flower(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\fractals\nature\baustelle.js
    datetime: 2022-09-13-19-58
    timestamp: 1663124316299.8252
    size: 1539
  flower_draw:
    name: flower_draw
    code: "function flower_draw(x, y, color, angle = 0, petalCount = 1, lineWidth =
      3, sz = 10) { \r

      \  function createPetal(length, width) {\r

      \    const path = new Path2D();\r

      \    path.moveTo(0, 0); \r

      \    path.lineTo(length * 0.3, -width);\r

      \    path.lineTo(length * 0.8, -width);\r

      \    path.lineTo(length, 0);\r

      \    path.lineTo(length * 0.8, width);\r

      \    path.lineTo(length * 0.3, width);\r

      \    path.closePath(); \r

      \    path.moveTo(0, 0);\r

      \    path.lineTo(length, 0);\r

      \    return path;\r

      \  }\r

      \  function drawPetals(x, y, count, startAt, petal) {\r

      \    const step = (Math.PI * 2) / count;\r

      \    CX.setTransform(1, 0, 0, 1, x, y); \r

      \    CX.rotate(startAt);  \r

      \    for (var i = 0; i < count; i += 1) {\r

      \      CX.stroke(petal);  \r

      \      CX.rotate(step);   \r

      \    }\r

      \    CX.setTransform(1, 0, 0, 1, 0, 0);  \r

      \  }\r

      \  CX.strokeStyle = color;\r

      \  CX.lineWidth = lineWidth;\r

      \  const size = 50;\r

      \  drawPetals(x, y, petalCount, angle, createPetal(sz, sz * .2)); \r

      \  CX.beginPath();\r

      \  CX.arc(x, y, sz * .15, 0, Math.PI * 2); \r

      \  CX.fillStyle = color;\r

      \  CX.fill();\r

      }\r\n"
    sig: function flower_draw(x, y, color, angle = 0, petalCount = 1, lineWidth = 3,
      sz = 10){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\fractals\nature\baustelle.js
    datetime: 2022-09-13-19-58
    timestamp: 1663124316299.8252
    size: 1539
  lsys_init:
    name: lsys_init
    code: "function lsys_init(offx = 0, offy = 0, options = {}) {\r

      \  let n=NATURE.lsystems.length;\r

      \  let i=DA.isystem=(DA.isystem+1)%n;\r

      \  let system = NATURE.lsystems[i]; \r

      \  let maxdepth = calc_maxdepth(12000, system.rules);\r

      \  let root = {\r

      \    axiom: system.axiom, //'F',\r

      \    sentence: system.axiom,\r

      \    rules: system.rules, \r

      \    t: 'root',\r

      \    p2: { x: CV.width / valf(system.xstart,2), y: CV.height },\r

      \    angle: toRadian(90),\r

      \    len: valf(system.len, 100),\r

      \    age: 0,\r

      \    gen: 0,\r

      \    id: 0,\r

      \    dangle: toRadian(valf(system.angle,25)),\r

      \    dlen: valf(system.dlen, .5),\r

      \    thickness: valf(options.thick, 1),\r

      \    dthickness: 1,\r

      \    color: rColor(70), //'seagreen',\r

      \    depth: Math.min(valf(system.depth,NATURE.depth), maxdepth), \r

      \    animated: false,\r

      \    jitter: false,\r

      \    done: true,\r

      \  };\r

      \  return root;\r

      }\r\n"
    sig: function lsys_init(offx = 0, offy = 0, options = {}){}
    region: funcs (lsystem.js)
    filename: lsystem.js
    type: func
    fname: lsystem.js
    path: C:\D\a03\nodemaster\all\fractals\nature\lsystem.js
    datetime: 2022-09-13-19-58
    timestamp: 1663124309311.4717
    size: 3188
  lsys_add:
    name: lsys_add
    code: "function lsys_add() {\r

      \  C.items = {};\r

      \  let root = C.root; root.gen++; \r

      \  let [stack, gen, b, sentence, x, y, angle, len, id] = [[],
      root.gen, root, root.sentence, root.p2.x, root.p2.y, root.angle, root.len,
      root.id++];\r

      \  for (let i = 0; i < gen; i++) { len *= root.dlen; sentence =
      generate(sentence); }\r

      \  let step = 0;\r

      \  for (var i = 0; i < sentence.length; i++) {\r

      \    var ch = sentence[i];\r

      \    if ('ABCFVWXYZ'.includes(ch)) {\r

      \      b = create_branch(b, angle, len, b.color);
      lookupAddToList(C.items, ['branch'], b); b.id = id++;\r

      \    } else if (ch == '+') {\r

      \      angle -= root.dangle; \r

      \    } else if (ch == '-') {\r

      \      angle += root.dangle; \r

      \    } else if (ch == '[') {\r

      \      stack.push({ x: b.p2.x, y: b.p2.y, angle: angle, b: b }); \r

      \    } else if (ch == ']') {\r

      \      let o = stack.pop();\r

      \      angle = o.angle; x = o.x; y = o.y; b = o.b; \r

      \    }\r

      \  }\r

      \  C.changed = true;\r

      \  if (root.gen < root.depth) TO.iv1 = setTimeout(lsys_add, 100);
      else TO.iv1 = setTimeout(() => G_init('lsys'), 5000);\r

      }\r\n"
    sig: function lsys_add(){}
    region: funcs (lsystem.js)
    filename: lsystem.js
    type: func
    fname: lsystem.js
    path: C:\D\a03\nodemaster\all\fractals\nature\lsystem.js
    datetime: 2022-09-13-19-58
    timestamp: 1663124309311.4717
    size: 3188
  calc_maxdepth:
    name: calc_maxdepth
    code: "function calc_maxdepth(maxnodes, rules) {\r

      \  let laus = rules.map(x => x.aus).join();\r

      \  let lwird = rules.map(x => x.wird).join();\r

      \  let naus = countAll(laus, 'ABF');\r

      \  let nwird = countAll(lwird, 'ABF');\r

      \  let ratio = nwird / naus;\r

      \  let pow = 2;\r

      \  while (Math.pow(ratio, pow) < maxnodes) pow++;\r

      \  return pow - 1;\r

      }\r\n"
    sig: function calc_maxdepth(maxnodes, rules){}
    region: funcs (lsystem.js)
    filename: lsystem.js
    type: func
    fname: lsystem.js
    path: C:\D\a03\nodemaster\all\fractals\nature\lsystem.js
    datetime: 2022-09-13-19-58
    timestamp: 1663124309311.4717
    size: 3188
  G_clear:
    name: G_clear
    code: "function G_clear() { gameloop_stop(); clear_timeouts(); mClear('dTable');
      C = G = CV = CX = null; }\r\n"
    sig: function G_clear(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\fractals\nature\start.js
    datetime: 2022-09-14-08-24
    timestamp: 1663169087491.1687
    size: 2839
  G_init:
    name: G_init
    code: "function G_init(name) {\r

      \  if (CV) G_clear();\r

      \  [dLeft, dCenter] = mColFlex(dTable, [0, 5]);\r

      \  let res = mCanvas(dCenter, { w:500, h:500, bg: '#222', rounding:
      10 });\r

      \  [CV, CX] = [res.cv,res.cx];\r

      \  let bpp = _mPlayPause(dCenter, { fz: 28, fg: 'lightgreen',
      display: 'flex', ajcenter: true }, onclick_playpause);\r

      \  G = { running: false, bPP: bpp };\r

      \  C = { changed: true, name: name, items: {}, root: get_func(name,
      'init')() };\r

      }\r\n"
    sig: function G_init(name){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\fractals\nature\start.js
    datetime: 2022-09-14-08-24
    timestamp: 1663169087491.1687
    size: 2839
  C_update:
    name: C_update
    code: "function C_update() { C.root.animated = true; get_func(C.name, 'add')();
      }\r\n"
    sig: function C_update(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\fractals\nature\start.js
    datetime: 2022-09-14-08-24
    timestamp: 1663169087491.1687
    size: 2839
  C_draw:
    name: C_draw
    code: "function C_draw() {\r

      \  if (!C.changed) return;\r

      \  cClear(CV, CX);\r

      \  for (const type in C.items) { let f = get_func(type, 'draw'); for
      (const item of C.items[type]) { f(item); } }\r

      \  C.changed = false;\r

      }\r\n"
    sig: function C_draw(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\fractals\nature\start.js
    datetime: 2022-09-14-08-24
    timestamp: 1663169087491.1687
    size: 2839
  gameloop_start:
    name: gameloop_start
    code: "function gameloop_start() { TO.ivdraw = setInterval(gameloop, 1000 / FR);
      G.items.map(x => x.draw()); G.running = true; }\r\n"
    sig: function gameloop_start(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\noc\start.js
    datetime: 2022-12-23-08-19
    timestamp: 1671812387893.1394
    size: 1251
  gameloop_stop:
    name: gameloop_stop
    code: "function gameloop_stop() { clear_timeouts(); if (G) G.running = false;
      }\r\n"
    sig: function gameloop_stop(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\noc\start.js
    datetime: 2022-12-23-08-19
    timestamp: 1671812387893.1394
    size: 1251
  gameloop_toggle:
    name: gameloop_toggle
    code: "function gameloop_toggle() { if (G.running === true) gameloop_stop();
      else gameloop_start(); }\r\n"
    sig: function gameloop_toggle(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\fractals\nature\start.js
    datetime: 2022-09-14-08-24
    timestamp: 1663169087491.1687
    size: 2839
  get_func:
    name: get_func
    code: "function get_func(itemtype, cmd) { return window[`${itemtype}_${cmd}`];
      }\r\n"
    sig: function get_func(itemtype, cmd){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\fractals\nature\start.js
    datetime: 2022-09-14-08-24
    timestamp: 1663169087491.1687
    size: 2839
  _mPlayPause:
    name: _mPlayPause
    code: "function _mPlayPause(dParent, styles = {}, handler = null) {\r

      \  if (!handler) handler = audio_onclick_pp;\r

      \  let html = `\r

      \    <section id=\"dButtons\">\r

      \      <a id=\"bPlay\" href=\"#\" }\">\r

      \        <i class=\"fa fa-play fa-2x\"></i>\r

      \      </a>\r

      \      <a id=\"bPause\" href=\"#\" style=\"display: none\">\r

      \        <i class=\"fa fa-pause fa-2x\"></i>\r

      \      </a>\r

      \    </section>\r

      \  `;\r

      \  let pp = mCreateFrom(html);\r

      \  mAppend(dParent, pp);\r

      \  mStyle(pp, styles);\r

      \  mBy('bPlay').onclick = () => { hide0('bPlay'); show0('bPause');
      handler(); }\r

      \  mBy('bPause').onclick = () => { hide0('bPause'); show0('bPlay');
      handler(); }\r

      \  return  { button: pp, show_play: () => { hide0('bPause');
      show0('bPlay'); }, show_pause: () => { hide0('bPlay'); show0('bPause'); }
      };\r

      }\r\n"
    sig: function _mPlayPause(dParent, styles = {}, handler = null){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\fractals\nature\start.js
    datetime: 2022-09-14-08-24
    timestamp: 1663169087491.1687
    size: 2839
  tree_init:
    name: tree_init
    code: "function tree_init(offx = 0, offy = 0, options = {}) {\r

      \  let root = {\r

      \    done: false,\r

      \    t: 'root',\r

      \    age: 0,\r

      \    p2: { x: offx + CV.width / 2, y: offy + CV.height },\r

      \    len: valf(options.len, 100), \r

      \    angle: toRadian(90),\r

      \    thickness: valf(options.thick, 20), \r

      \    color: valf(options.color, 'sienna'), \r

      \    depth: NATURE.depth, \r

      \    branching: NATURE.branching, \r

      \    dlen: .7,\r

      \    dthickness: .7,\r

      \    phase: 'spring',\r

      \    speed: { spring: 100, summer: 100, autumn: 25, winter: 100,
      over: 2000 },\r

      \    animated: false,\r

      \    jitter: false,\r

      \  };\r

      \  return root;\r

      }\r\n"
    sig: function tree_init(offx = 0, offy = 0, options = {}){}
    region: funcs (tree.js)
    filename: tree.js
    type: func
    fname: tree.js
    path: C:\D\a03\nodemaster\all\fractals\nature\tree.js
    datetime: 2022-09-17-06-29
    timestamp: 1663421387579.0999
    size: 4177
  tree_add:
    name: tree_add
    code: "function tree_add() {\r

      \  let root = C.root;\r

      \  if (root.phase == 'spring') {\r

      \    C.changed = false;\r

      \    assertion(root, 'ROOT IS NULL BEI TREE_ADD!!!!!!!!!!!!!')\r

      \    if (!root.done) {\r

      \      let b = create_branch(root, root.angle, root.len * root.dlen,
      root.color);\r

      \      lookupAddToList(C.items, [b.t], b);\r

      \      C.changed = true;\r

      \    } else {\r

      \      for (const b of C.items.branch.filter(x => !x.done)) {\r

      \        if (b.age < root.depth) { \r

      \          let br = root.branching; \r

      \          for (const a of br) {\r

      \            let o = create_branch(b, b.angle + toRadian(a), b.len *
      root.dlen, colorMix(b.color, 'lime', 3)); lookupAddToList(C.items, [o.t],
      o);\r

      \          }\r

      \        } else {\r

      \          let o = create_leaf(b, root); lookupAddToList(C.items,
      [o.t], o);\r

      \        }\r

      \        C.changed = true;\r

      \        root.maxage = b.age + 1;\r

      \        b.done = true;\r

      \      }\r

      \    }\r

      \    if (!C.changed) { root.minage = 0; root.phase = 'summer'; }\r

      \  }\r

      \  else if (root.phase == 'summer') {\r

      \    let colors = ['darkgreen', 'olive', '#8B9216', '#A79F0F',
      '#EDA421', '#E98604', '#DF3908', '#C91E0A', '#8C584A'];\r

      \    let changed = mutate_colors('leaf', colors);\r

      \    if (!changed) root.phase = 'autumn';\r

      \    root.jitter = true;\r

      \    C.changed = true;\r

      \  }\r

      \  else if (root.phase == 'autumn') {\r

      \    root.jitter = false;\r

      \    C.changed = true;\r

      \    let falling = C.items.leaf.filter(l => l.p.y < CV.height);\r

      \    if (isEmpty(falling)) {\r

      \      C.changed = false; root.phase = 'winter';\r

      \    } else {\r

      \      for (const b of falling) { b.p = { x: b.p.x + Math.random() *
      .51, y: b.p.y + Math.random() * 3 }; }\r

      \    }\r

      \  }\r

      \  else if (root.phase == 'winter') {\r

      \    let colors = ['#8E2100', '#5C1306', '#371C0F', '#1C1B19'];\r

      \    let changed = mutate_colors('branch', colors);\r

      \    if (!changed) root.phase = 'over';\r

      \    C.changed = true;\r

      \  }\r

      \  else if (root.phase == 'over') { root.animated = false;  }\r

      \  if (root.animated) TO.iv1 = setTimeout(tree_add,
      root.speed[root.phase]); else TO.iv1=
      setTimeout(()=>G_init('tree'),3000);\r

      }\r\n"
    sig: function tree_add(){}
    region: funcs (tree.js)
    filename: tree.js
    type: func
    fname: tree.js
    path: C:\D\a03\nodemaster\all\fractals\nature\tree.js
    datetime: 2022-09-17-06-29
    timestamp: 1663421387579.0999
    size: 4177
  tree_clear:
    name: tree_clear
    code: "function tree_clear() { G_clear(); onclick_menu_item('tree'); }\r\n"
    sig: function tree_clear(){}
    region: funcs (tree.js)
    filename: tree.js
    type: func
    fname: tree.js
    path: C:\D\a03\nodemaster\all\fractals\nature\tree.js
    datetime: 2022-09-17-06-29
    timestamp: 1663421387579.0999
    size: 4177
  create_branch:
    name: create_branch
    code: "function create_branch(b, angle, len, color) {\r

      \  let root = C.root;\r

      \  let x = b.p2.x + Math.cos(angle) * len;\r

      \  let y = b.p2.y - Math.sin(angle) * len;\r

      \  let age = b.age + 1;\r

      \  let o = {\r

      \    done: false,\r

      \    p1: b.p2,\r

      \    p2: { x: x, y: y },\r

      \    x: x,\r

      \    y: y,\r

      \    t: 'branch',\r

      \    age: age,\r

      \    angle: angle,\r

      \    len: len,\r

      \    thickness: b.thickness * root.dthickness,\r

      \    color: color,\r

      \  };\r

      \  b.done = true;\r

      \  return o;\r

      }\r\n"
    sig: function create_branch(b, angle, len, color){}
    region: funcs (tree.js)
    filename: tree.js
    type: func
    fname: tree.js
    path: C:\D\a03\nodemaster\all\fractals\nature\tree.js
    datetime: 2022-09-17-06-29
    timestamp: 1663421387579.0999
    size: 4177
  branch_draw:
    name: branch_draw
    code: "function branch_draw(o) {\r

      \  cStyle({fg:o.color,thickness:o.thickness,cap:'round'},CX);\r

      \  if (C.root.jitter) cLine(o.p1.x, o.p1.y, o.p2.x + Math.random() *
      2 - 1, o.p2.y + Math.random() * 2 - 1,{},CX);\r

      \  else cLine(o.p1.x, o.p1.y, o.p2.x, o.p2.y,{},CX);\r

      }\r\n"
    sig: function branch_draw(o){}
    region: funcs (tree.js)
    filename: tree.js
    type: func
    fname: tree.js
    path: C:\D\a03\nodemaster\all\fractals\nature\tree.js
    datetime: 2022-09-17-06-29
    timestamp: 1663421387579.0999
    size: 4177
  create_leaf:
    name: create_leaf
    code: "function create_leaf(b, root) {\r

      \  let o = {\r

      \    done: true,\r

      \    p: b.p2,\r

      \    x: b.p2.x,\r

      \    y: b.p2.y,\r

      \    t: 'leaf',\r

      \    age: b.age + 1,\r

      \    len: b.len * root.dlen,\r

      \    angle: b.angle,\r

      \    thickness: 20,\r

      \    color: 'lawngreen',\r

      \  };\r

      \  b.done = true;\r

      \  return o;\r

      }\r\n"
    sig: function create_leaf(b, root){}
    region: funcs (tree.js)
    filename: tree.js
    type: func
    fname: tree.js
    path: C:\D\a03\nodemaster\all\fractals\nature\tree.js
    datetime: 2022-09-17-06-29
    timestamp: 1663421387579.0999
    size: 4177
  leaf_draw:
    name: leaf_draw
    code: "function leaf_draw(o) {\r

      \  let [x, y] = [o.p.x, o.p.y];\r

      \  let [w, h] = [o.len * 1.5, o.len];\r

      \  cEllipse(x, y, w, h, {bg:o.color},o.angle);\r

      }\r\n"
    sig: function leaf_draw(o){}
    region: funcs (tree.js)
    filename: tree.js
    type: func
    fname: tree.js
    path: C:\D\a03\nodemaster\all\fractals\nature\tree.js
    datetime: 2022-09-17-06-29
    timestamp: 1663421387579.0999
    size: 4177
  mutate_colors:
    name: mutate_colors
    code: "function mutate_colors(type, colors) {\r

      \  let items = C.items[type];\r

      \  let changed = false;\r

      \  let lastcolor = arrLast(colors);\r

      \  for (const item of items) {\r

      \    if (item.color == lastcolor) continue;\r

      \    changed = true;\r

      \    if (coin()) continue;\r

      \    let i = colors.indexOf(item.color) + 1;\r

      \    item.color = colors[i];\r

      \    if (type == 'branch') item.thickness -= 1.5;\r

      \  }\r

      \  return changed;\r

      }\r\n"
    sig: function mutate_colors(type, colors){}
    region: funcs (tree.js)
    filename: tree.js
    type: func
    fname: tree.js
    path: C:\D\a03\nodemaster\all\fractals\nature\tree.js
    datetime: 2022-09-17-06-29
    timestamp: 1663421387579.0999
    size: 4177
  combine:
    name: combine
    code: "function combine(combiner, f, g) {\r

      \  if (typeof f != 'function') f = x => f; \r

      \  if (typeof g != 'function') g = x => g; \r

      \  return combiner(f, g);\r

      }\r\n"
    sig: function combine(combiner, f, g){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  fpowerer:
    name: fpowerer
    code: "function fpowerer(f, g) { return x => Math.pow(f(x), g(x)); }\r\n"
    sig: function fpowerer(f, g){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  fadder:
    name: fadder
    code: "function fadder(f, g) { return x => f(x) - g(x); }\r\n"
    sig: function fadder(f, g){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  fsubtracter:
    name: fsubtracter
    code: "function fsubtracter(f, g) { return x => f(x) - g(x); }\r\n"
    sig: function fsubtracter(f, g){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  fmultiplier:
    name: fmultiplier
    code: "function fmultiplier(f, g) { return x => f(x) * g(x); }\r\n"
    sig: function fmultiplier(f, g){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  fcomposer:
    name: fcomposer
    code: "function fcomposer(f, g) { return x => f(g(x)); }\r\n"
    sig: function fcomposer(f, g){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  fderivative:
    name: fderivative
    code: "function fderivative(exp) {\r

      \  return nerdamer(`diff(${exp},x)`).buildFunction();\r

      }\r\n"
    sig: function fderivative(exp){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  fintegral:
    name: fintegral
    code: "function fintegral(exp) {\r

      \  return nerdamer(`integrate(${exp},x)`).buildFunction();\r

      }\r\n"
    sig: function fintegral(exp){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  fprime:
    name: fprime
    code: "function fprime(exp) {\r

      \  return x => math.derivative(exp, 'x').evaluate({ x: x });\r

      }\r\n"
    sig: function fprime(exp){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  foscillator:
    name: foscillator
    code: "function foscillator(exp, vars) {\r

      \  for (const v of vars) {\r

      \    [v.val, v.step] = oscillate_between(v.val, v.min, v.max,
      vstep);\r

      \    exp = replaceAll(exp, v.name, v.val);\r

      \  }\r

      \  return nerdamer('exp').buildFunction();\r

      }\r\n"
    sig: function foscillator(exp, vars){}
    region: funcs (fops.js)
    filename: fops.js
    type: func
    fname: fops.js
    path: C:\D\a03\nodemaster\noc\fops.js
    datetime: 2022-09-19-19-19
    timestamp: 1663640381369.9004
    size: 1389
  gameloop:
    name: gameloop
    code: "function gameloop() {\r

      \  for (const item of G.items) {\r

      \    let changed = item.update();\r

      \    if (changed) item.draw();\r

      \  }\r

      }\r\n"
    sig: function gameloop(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\canvas\noc\start.js
    datetime: 2022-09-23-17-12
    timestamp: 1663978376885.806
    size: 1255
  normalDistribution:
    name: normalDistribution
    code: "function normalDistribution(mu, sigma) {\r

      \  this.mu = eval(mu);\r

      \  this.sigma = eval(sigma);\r

      \  this.mean = mean;\r

      \  this.variance = variance;\r

      \  this.sd = sd;\r

      \  this.pdf = pdf;\r

      \  this.cdf = cdf;\r

      \  this.percentile = percentile;\r

      \  this.printMoments = printMoments;\r

      \  this.printPdf = printPdf;\r

      \  function mean() {\r

      \    return jStat.normal.mean(this.mu, this.sigma);\r

      \  }\r

      \  function variance() {\r

      \    return jStat.normal.variance(this.mu, this.sigma);\r

      \  }\r

      \  function sd() {\r

      \    return Math.sqrt(this.variance());\r

      \  }\r

      \  function pdf(x) {\r

      \    if (!isNaN(eval(x))) {\r

      \      return jStat.normal.pdf(x, this.mu, this.sigma);\r

      \    }\r

      \    return '';\r

      \  }\r

      \  function cdf(x) {\r

      \    if (!isNaN(eval(x))) {\r

      \      return jStat.normal.cdf(x, this.mu, this.sigma);\r

      \    }\r

      \    return '';\r

      \  }\r

      \  function percentile(p) {\r

      \    if (!isNaN(eval(p))) {\r

      \      return jStat.normal.inv(p, this.mu, this.sigma);\r

      \    }\r

      \    return '';\r

      \  }\r

      \  function printMoments() {\r

      \    var txt = \"\";\r

      \    txt += '$ \\\\mu = E(X) = ' + roundNumber(this.mean(), 3) +
      '\\\\hspace{0.5cm}$';\r

      \    txt += '$ \\\\sigma = SD(X) = ' + roundNumber(this.sd(), 3) +
      '\\\\hspace{0.5cm}$';\r

      \    txt += '$ \\\\sigma^2 = Var(X) = ' +
      roundNumber(this.variance(), 3) + '$';\r

      \    document.getElementById(\"moments\").innerHTML = txt;\r

      \    MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, \"moments\"]);\r

      \  }\r

      \  function printPdf(x, direction) {\r

      \    var data = new google.visualization.DataTable();\r

      \    data.addColumn('number', 'x');\r

      \    data.addColumn('number', 'f(x)');\r

      \    data.addColumn('number', 'f(x)');\r

      \    data.addColumn('number', 'f(x)');\r

      \    x = eval(x);\r

      \    var lo = this.mean() - 4 * this.sd();\r

      \    var hi = this.mean() + 4 * this.sd();\r

      \    data.addRows(401);\r

      \    var i, grd;\r

      \    for (i = 0; i < 401; i++) {\r

      \      grd = lo + (hi - lo) * i / 400;\r

      \      data.setCell(i, 0, grd);\r

      \      data.setCell(i, 1, this.pdf(grd));\r

      \      if (!isNaN(x)) {\r

      \        if (grd < x) {\r

      \          if (direction == 'less')\r

      \            data.setCell(i, 2, this.pdf(grd));\r

      \        }\r

      \        else {\r

      \          if (direction == 'greater')\r

      \            data.setCell(i, 2, this.pdf(grd));\r

      \        }\r

      \        if (direction == 'twotail') {\r

      \          if (grd < -Math.abs(x)) data.setCell(i, 2,
      this.pdf(grd));\r

      \          if (grd > Math.abs(x)) data.setCell(i, 2,
      this.pdf(grd));\r

      \        }\r

      \        if (direction == 'twotailinside') {\r

      \          if (grd > -Math.abs(x) && grd < Math.abs(x))
      data.setCell(i, 2, this.pdf(grd));\r

      \        }\r

      \        var xdelta = (hi - lo) / 140;\r

      \        if (direction == 'less' || direction == 'greater') {\r

      \          if (grd > x - xdelta && grd < x + xdelta) {\r

      \            data.setCell(i, 3, this.pdf(grd));\r

      \          }\r

      \        }\r

      \        if (direction == 'twotail') {\r

      \          if (grd > -Math.abs(x) - xdelta && grd < -Math.abs(x) +
      xdelta)\r

      \            data.setCell(i, 3, this.pdf(grd));\r

      \          if (grd > Math.abs(x) - xdelta && grd < Math.abs(x) +
      xdelta)\r

      \            data.setCell(i, 3, this.pdf(grd));\r

      \        }\r

      \        if (direction == 'twotailinside') {\r

      \          if (grd > -Math.abs(x) - xdelta && grd < -Math.abs(x) +
      xdelta)\r

      \            data.setCell(i, 3, this.pdf(grd));\r

      \          if (grd > Math.abs(x) - xdelta && grd < Math.abs(x) +
      xdelta)\r

      \            data.setCell(i, 3, this.pdf(grd));\r

      \        }\r

      \      }\r

      \    }\r

      \    var options = {\r

      \      backgroundColor: 'transparent',\r

      \      areaOpacity: 0,\r

      \      hAxis: {\r

      \        title: 'x', titleTextStyle: { color: '#000000' },\r

      \        min: lo,\r

      \        max: hi,\r

      \        gridlines: { color: 'transparent', count: 7 },\r

      \        baseline: lo\r

      \      },\r

      \      vAxis: {\r

      \        title: 'f(x)', titleTextStyle: { color: '#000000' },\r

      \        gridlines: { count: 5, color: 'transparent' },\r

      \        viewWindow: { min: 0 },\r

      \        viewWindowMode: 'explicit'\r

      \      },\r

      \      legend: { position: 'none' },\r

      \      series: {\r

      \        0: { color: 'black', areaOpacity: 0, lineWidth: 1.2 },\r

      \        1: { color: '#e7b0b0', areaOpacity: 1, lineWidth: 0 },\r

      \        2: { color: '#83aaf1', areaOpacity: 1, lineWidth: 0 },\r

      \        3: { color: '#E8E8E8', areaOpacity: 1, lineWidth: 0 }\r

      \      },\r

      \      tooltip: { trigger: 'none' }\r

      \    };\r

      \    var chart = new
      google.visualization.AreaChart(document.getElementById('pdfPlot'));\r

      \    chart.draw(data, options);\r

      \  }\r

      }\r\n"
    sig: function normalDistribution(mu, sigma){}
    region: funcs (normaldist.js)
    filename: normaldist.js
    type: func
    fname: normaldist.js
    path: C:\D\a03\nodemaster\noc\normaldist.js
    datetime: 2022-09-23-21-35
    timestamp: 1663994159733.9087
    size: 4361
  eval_approx_integral:
    name: eval_approx_integral
    code: "function eval_approx_integral(f,xfrom,xto,dx){}\r\n"
    sig: function eval_approx_integral(f,xfrom,xto,dx){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  eval_approx_derivative:
    name: eval_approx_derivative
    code: "function eval_approx_derivative(f,xfrom,xto,dx){}\r\n"
    sig: function eval_approx_derivative(f,xfrom,xto,dx){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  eval_normal_cdf:
    name: eval_normal_cdf
    code: "function eval_normal_cdf(x,mean,stdev){let
      f=get_normal_cdf(mean,stdev);return f(x);}\r\n"
    sig: function eval_normal_cdf(x,mean,stdev){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  eval_normal_pdf:
    name: eval_normal_pdf
    code: "function eval_normal_pdf(x,mean,stdev){let
      f=get_normal_pdf(mean,stdev);return f(x);}\r\n"
    sig: function eval_normal_pdf(x,mean,stdev){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  get_approx_integral:
    name: get_approx_integral
    code: "function get_approx_integral(f,dx){}\r\n"
    sig: function get_approx_integral(f,dx){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  get_approx_derivative:
    name: get_approx_derivative
    code: "function get_approx_derivative(f,dx){}\r\n"
    sig: function get_approx_derivative(f,dx){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  get_normal_cdf:
    name: get_normal_cdf
    code: "function get_normal_cdf(mean,stdev){}\r\n"
    sig: function get_normal_cdf(mean,stdev){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  get_normal_pdf:
    name: get_normal_pdf
    code: "function get_normal_pdf(mean,stdev){}\r\n"
    sig: function get_normal_pdf(mean,stdev){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  plot_function:
    name: plot_function
    code: "function plot_function(canvas,f,xfrom,xto,styles={}){}\r\n"
    sig: function plot_function(canvas,f,xfrom,xto,styles={}){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  plot_line:
    name: plot_line
    code: "function plot_line(canvas, item) {\r

      \  let cx = canvas.cx;\r

      \  cx.font = `${valf(item.fz, 16)}px Arial`;\r

      \  cx.fillStyle = item.color;\r

      \  if (isdef(item.label)) cx.fillText(`  ${item.label}`, 0, 0);\r

      \  cLine(item.x1, item.y1, item.x2, item.y2, { bg: item.color }, 0,
      cx);\r

      }\r\n"
    sig: function plot_line(canvas, item){}
    region: point (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  plot_point:
    name: plot_point
    code: "function plot_point(canvas,x,y,styles={}){}\r\n"
    sig: function plot_point(canvas,x,y,styles={}){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  plot_pdf:
    name: plot_pdf
    code: "function plot_pdf(canvas,mean,stdev,xfrom,xto,styles={}){}\r\n"
    sig: function plot_pdf(canvas,mean,stdev,xfrom,xto,styles={}){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  plot_cdf:
    name: plot_cdf
    code: "function plot_cdf(canvas,mean,stdev,xfrom,xto,styles={}){}\r\n"
    sig: function plot_cdf(canvas,mean,stdev,xfrom,xto,styles={}){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  plot_integral:
    name: plot_integral
    code: "function plot_integral(canvas,f,xfrom,xto,styles={}){}\r\n"
    sig: function plot_integral(canvas,f,xfrom,xto,styles={}){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  plot_derivative:
    name: plot_derivative
    code: "function plot_derivative(canvas,f,xfrom,xto,styles={}){}\r\n"
    sig: function plot_derivative(canvas,f,xfrom,xto,styles={}){}
    region: funcs (statist.js)
    filename: statist.js
    type: func
    fname: statist.js
    path: C:\D\a03\nodemaster\noc\statist.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 909
  a0_functions:
    name: a0_functions
    code: "function a0_functions(){\r\n}\r\n"
    sig: function a0_functions(){}
    region: phantasy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  noc6_simple_gaussian:
    name: noc6_simple_gaussian
    code: "function noc6_simple_gaussian() {\r

      \  let canvas = arrFirst(G.items);\r

      \  simple_gaussian(canvas);\r

      }\r\n"
    sig: function noc6_simple_gaussian(){}
    region: multiple (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  noc5_draw_text:
    name: noc5_draw_text
    code: "function noc5_draw_text() {\r

      \  let canvas = arrLast(G.items);\r

      \  let d = mInsert(dTable, mCreate('div'));\r

      \  mText('hallo', d, { fz: 40, family: 'algerian' }); \r

      \  draw_text(canvas, 'hallo', { family: 'algerian', fg: 'white',
      pos: 'tr' }); \r

      }\r\n"
    sig: function noc5_draw_text(){}
    region: multiple (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  noc4_gaussian:
    name: noc4_gaussian
    code: "function noc4_gaussian() {\r

      \  let canvas = arrLast(G.items);\r

      \  draw_gaussian(canvas, 100, 15, 'lime', 1, 'silver', 'IQ');\r

      \  return;\r

      \  canvas.draw_axes();\r

      \  canvas.scale = 40; console.log('canvas', canvas)\r

      \  let f = gaussian_amp(canvas, 1)\r

      \  canvas.plot(f, 'orange', 1);\r

      \  draw_ticks_gaussian(canvas, f, 100, 15, 'silver');\r

      }\r\n"
    sig: function noc4_gaussian(){}
    region: multiple (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  noc3_gaussian:
    name: noc3_gaussian
    code: "function noc3_gaussian() {\r

      \  let canvas = arrLast(G.items);\r

      \  let [mean, stdev] = [0, 1]\r

      \  let f = x => gaussian1(x, mean, stdev);\r

      \  let y = f(0);\r

      \  console.log('y', y);\r

      \  let amp = .9 * (-canvas.miny) / (40 * y);\r

      \  f = x => gaussian1(x, mean, stdev, amp);\r

      \  canvas.draw_axes();\r

      \  canvas.plot(f, 'orange', 1);\r

      \  let x = 40 * search_end_point(f, 0, canvas.maxx, .1, .01);\r

      \  console.log('point x', x, canvas.minx, canvas.maxx);\r

      \  y = -40 * f(x / 40)\r

      \  console.log('point y', x, 0, canvas.maxy);\r

      \  console.log('scale', canvas.scale)\r

      \  let xreal = x / 40;\r

      \  let yreal = f(xreal) / (40);\r

      \  x = 0;\r

      \  for (let i = canvas.minx; i < canvas.maxx; i += canvas.scale) {\r

      \    let x1 = Math.round(convert_to_range(x, -4, 4, 50, 150));\r

      \    let x2 = Math.round(convert_to_range(-x, -4, 4, 50, 150));\r

      \    canvas.pp(x * 40, 0, `${x1}`);\r

      \    canvas.pp(-x * 40, 0, `${x2}`); x += 2;\r

      \  }\r

      }\r\n"
    sig: function noc3_gaussian(){}
    region: multiple (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  noc2_explicit_distribution:
    name: noc2_explicit_distribution
    code: "function noc2_explicit_distribution() {\r

      \  let [c1, c2] = [G.items[0], G.items[1]];\r

      \  const sampler = new WeightedSampler([{ x: 1 }, { x: -1 }, { y: 1
      }, { y: -1 }], [1, 2, 1, 2]);\r

      \  let randomArray = Array.apply(null, Array(100000)).map(() =>
      sampler.get());\r

      \  let randomArray2 = Array.apply(null, Array(100000)).map(() =>
      sampler.get());\r

      \  console.log(randomArray);\r

      }\r\n"
    sig: function noc2_explicit_distribution(){}
    region: multiple (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  noc1_randomwalkers:
    name: noc1_randomwalkers
    code: "function noc1_randomwalkers() {\r

      \  let [c1, c2] = [G.items[0], G.items[1]];\r

      \  let probs = [{ val: { x: -1, y: 0 }, p: 1 }, { val: { x: 1, y: 0
      }, p: 2 }, { val: { x: 0, y: -1 }, p: 3 }, { val: { x: 0, y: 1 }, p: 3
      }];\r

      \  c1.add({ probs: probs, update: move_probs, w: 2, h: 2 });\r

      \  c2.add({ label: 'tom', draw: draw_label, update: move_random
      });\r

      }\r\n"
    sig: function noc1_randomwalkers(){}
    region: multiple (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  noc0_randomwalkers:
    name: noc0_randomwalkers
    code: "function noc0_randomwalkers() {\r

      \  let [c1, c2] = [G.items[0], G.items[1]];\r

      \  c1.add({ update: move_random, w: 2, h: 2 });\r

      \  c2.add({ label: 'tom', draw: draw_label, update: move_random
      });\r

      \  c2.add(new CItemWalker('tim'));\r

      }\r\n"
    sig: function noc0_randomwalkers(){}
    region: multiple (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test17_randomwalk:
    name: test17_randomwalk
    code: "function test17_randomwalk() {\r

      \  C = new CCanvasNoClear(dTable, {}, {}, gameloop_start,
      gameloop_stop);\r

      \  C.add({ update: move_random, w: 2, h: 2 });\r

      \  C.add(new CItemWalker({ label: 'tom' }))\r

      \  C.play();\r

      }\r\n"
    sig: function test17_randomwalk(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test16_function:
    name: test16_function
    code: "function test16_function() {\r

      \  C = new Plotter(dTable);\r

      \  C.add({ color: 'skyblue', thickness: 1, func:
      nerdamer('integrate(x,x)').buildFunction() });\r

      \  C.draw();\r

      }\r\n"
    sig: function test16_function(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test15_function:
    name: test15_function
    code: "function test15_function() {\r

      \  C = new Plotter(dTable);\r

      \  C.add({ color: 'skyblue', thickness: 1, func: x => Math.sin(x)
      });\r

      \  C.draw();\r

      }\r\n"
    sig: function test15_function(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test14_function:
    name: test14_function
    code: "function test14_function() {\r

      \  C = new Plotter(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc');\r

      \  C.add({ astep: .1, a: 0, bstep: .1, b: 0, color: 'skyblue',
      thickness: 1, basefunc: x => -x * (-Math.sign(x)), func: x => Math.sin(x),
      update: oscillator });\r

      \  C.play();\r

      }\r\n"
    sig: function test14_function(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test13_nerdamer:
    name: test13_nerdamer
    code: "function test13_nerdamer() {\r

      \  nerdamer.setVar('M', 'matrix([1, 5], [4, 4])');\r

      \  var x = nerdamer('invert(M)');\r

      \  console.log(x.toString(), typeof x, x);\r

      \  var r = nerdamer('polarform(b*x+x*c*i)');\r

      \  console.log(r.toString());\r

      \  var t = nerdamer('polarform(5+i)')\r

      \  console.log(t.toString());\r

      \  nerdamer.setVar('M', 'matrix([x,y],[a,b])');\r

      \  console.log(nerdamer('transpose(M)').toString());\r

      \  nerdamer.setVar('M', 'matrix([4,5],[1,7])');\r

      \  x = nerdamer('determinant(M)');\r

      \  console.log(x.toString(), Number(x), typeof x, typeof Number(x),
      Number(x) + 1);\r

      \  console.log('==>', parseFloat(x));\r

      \  var x = nerdamer('limit(x^x-1,x,0)');\r

      \  console.log(x.toString());\r

      \  var y = nerdamer('limit((x^2+2*x-3)/(x^6+4),x,0)');\r

      \  console.log(y.toString());\r

      \  var x = nerdamer('solve(x^3+1, x)');\r

      \  console.log(x.toString());\r

      \  x = nerdamer.solve('x^2+2*x+1', 'x');\r

      \  console.log(x.toString());\r

      \  x = nerdamer.solve('3*(x+a)*(x-b)', 'x');\r

      \  console.log(x.toString());\r

      \  x = nerdamer.solve('3*(x+a)*(x-b)', 'x');\r

      \  console.log(x.toString());\r

      \  x = nerdamer('solve(x^4=1,x)');\r

      \  console.log(x.toString());\r

      \  x = nerdamer('solve(y=m*x+c, x)');\r

      \  console.log(x.toString());\r

      \  x = nerdamer.solve('x^2-1', 'x');\r

      \  console.log(x.toString());\r

      \  x = nerdamer.max(1, 4, 3, 5);\r

      \  console.log(x.toString());\r

      \  var x = nerdamer('sqcomp(9*x^2-18*x+17)');\r

      \  console.log(x.toString());\r

      \  var y = nerdamer('sqcomp(a*x^2+b*x-11*c, x)');\r

      \  console.log(y.toString());\r

      \  var x = nerdamer('roots(x^2-3*x-10)');\r

      \  console.log(x.toString())\r

      \  var y = nerdamer('roots(x^2+1)');\r

      \  console.log(y.toString());\r

      \  var x = nerdamer('divide(x^2+2*x+1, x+1)');\r

      \  console.log(x.toString())\r

      \  var y = nerdamer('divide(-b*z-a*z+b^3+a*b^2+a*b+a^2, b+a)');\r

      \  console.log(y.toString());\r

      \  var x = nerdamer('gcd(x^2+2*x+1, x^2+6*x+5)');\r

      \  console.log(x.toString())\r

      \  var y = nerdamer('gcd(b*z+a*z+b^2+a*b, a+b)');\r

      \  console.log(y.toString());\r

      \  var z = nerdamer('gcd(24,12,552)');\r

      \  console.log(z.toString());\r

      \  var x = nerdamer('product(x+1, x, 1, 20)');\r

      \  console.log(x.toString())\r

      \  var y = nerdamer('product(x+y, x, 1, 5)');\r

      \  console.log(y.toString());\r

      \  var z = nerdamer('product(x, x, 1, 5)');\r

      \  console.log(z.toString());\r

      \  var x = nerdamer('sum(x+1, x, 1, 5)');\r

      \  console.log(x.toString())\r

      \  var y = nerdamer('sum(x+y, x, 1, 20)');\r

      \  console.log(y.toString());\r

      \  console.log('_______simplify')\r

      \  var x = nerdamer('simplify((x^2+4*x-45)/(x^2+x-30))');\r

      \  console.log(x.toString());\r

      \  var y =
      nerdamer('simplify((17/2)*(-10+8*i)^(-1)-5*(-10+8*i)^(-1)*i)');\r

      \  console.log(y.toString());\r

      \  var z = nerdamer('simplify(1+1+3+5+13)');\r

      \  console.log(z, typeof z, Number(z) + 1);\r

      \  console.log('_______ defint')\r

      \  var x = nerdamer('defint(e^(cos(x)), 1, 2)');\r

      \  console.log(x.text());\r

      \  var y = nerdamer('defint(x^2+2*x+1,0, 10)');\r

      \  console.log(y.text());\r

      \  var y = nerdamer('defint(log(2cos(x/2)),-π,π,x)');\r

      \  console.log(y.text());\r

      \  console.log('_______ derivative diff')\r

      \  var x = nerdamer('diff(cos(x)*sin(x), x)');\r

      \  console.log(x.toString());\r

      \  var y = nerdamer('diff([x^2, cos(x), 1], x, 2)'); \r

      \  console.log(y.toString());\r

      \  var y = nerdamer('diff(x^3+a*x^3+x^2, x, 2)'); \r

      \  console.log(y.toString());\r

      \  x = nerdamer.diff(nerdamer('x^2').add(1).multiply('tan(x)'),
      'x')\r

      \  console.log(x.toString());\r

      \  x = nerdamer('diff(a+b*x+c*x^2, x)');\r

      \  console.log(x.toString());\r

      \  x = nerdamer('diff(x^2, x)');\r

      \  console.log(x.toString());\r

      \  var x = nerdamer('sin(9+5)');\r

      \  console.log(x.toString());\r

      \  console.log(x.evaluate().toString());\r

      \  var x = nerdamer('integrate(x*2,x)');\r

      \  console.log(x.toString());\r

      \  y = x.evaluate();\r

      \  console.log('eval:', y);\r

      \  var x = nerdamer('integrate(10*q/(4*x^2+24*x+20), x)');\r

      \  console.log(x.toString());\r

      \  var y = nerdamer('integrate(sec(x)^2, x)');\r

      \  console.log(y.toString());\r

      \  var y = nerdamer('integrate([sec(x)^2, x^2, 2], x)');\r

      \  console.log(y.toString());\r

      \  var x = nerdamer('integrate(cos(x)*x^6, x)');\r

      \  console.log(x.toString());\r

      \  console.log(x.hasIntegral());\r

      \  x = nerdamer.integrate('sinh(x)*e^x');\r

      \  console.log(x.toString());\r

      \  var e = nerdamer('x^2+2*(cos(x)+x*x)', { x: 6 }).evaluate();\r

      \  var e = nerdamer('x^2+2*(cos(x)+x*x)', { x: 6 });\r

      \  var e = nerdamer('x^2+2*(cos(x)+x*x)', { x: 6 }).evaluate();\r

      \  console.log(e.text());\r

      \  console.log(e);\r

      \  var e = nerdamer('x^2+2*(cos(x)+x*x)');\r

      \  console.log(e.text());\r

      \  console.log(e);\r

      \  var result = nerdamer('cos(x)', { x: 6 });\r

      \  console.log(result.text());\r

      \  var result = nerdamer('cos(x)', { x: 6 }, 'numer');\r

      \  console.log(result.text());\r

      \  var result = nerdamer('cos(x)', { x: 6 }).evaluate();\r

      \  console.log(result.text());\r

      \  var f = nerdamer('integrate(x,x)').buildFunction();\r

      \  console.log(f(3));\r

      \  f = nerdamer('diff(x^3,x)').buildFunction();\r

      \  console.log(f(20));\r

      }\r\n"
    sig: function test13_nerdamer(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test12_fop:
    name: test12_fop
    code: "function test12_fop() {\r

      \  let f = fprime('x*x'); let y = f(5); console.log('math.js y',
      y);\r

      }\r\n"
    sig: function test12_fop(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test11_function:
    name: test11_function
    code: "function test11_function() {\r

      \  C = new Plotter(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc');\r

      \  C.add({ astep: .1, a: 0, bstep: .1, b: 0, color: 'skyblue',
      thickness: 1, basefunc: x => -x * (-Math.sign(x)), func: x => Math.sin(x),
      update: oscillator });\r

      }\r\n"
    sig: function test11_function(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test10_update:
    name: test10_update
    code: "function test10_update(canvas, item) {\r

      \  let [astep, a, bstep, b, func] = [item.astep, item.a, item.bstep,
      item.b, item.func];\r

      \  canvas.clear();\r

      \  [a, astep] = oscillate_between(a, 0, 5, astep);\r

      \  [b, bstep] = oscillate_between(b, 0, 5, bstep);\r

      \  [item.astep, item.a, item.bstep, item.b] = [astep, a, bstep,
      b];\r

      \  canvas.plot(x => b * func(a * x), \"rgb(11,153,11)\", 1);\r

      \  return false;\r

      }\r\n"
    sig: function test10_update(canvas, item){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test10_function:
    name: test10_function
    code: "function test10_function() {\r

      \  C = new Plotter(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc');\r

      \  let canvas = C.cv;\r

      \  C.add({ astep: .1, a: 0, bstep: .1, b: 0, func: x => Math.sin(x),
      update: test10_update });\r

      }\r\n"
    sig: function test10_function(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  fun1:
    name: fun1
    code: "function fun1(x) { return Math.sin(x); }\r\n"
    sig: function fun1(x){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  fun2:
    name: fun2
    code: "function fun2(x) { return Math.cos(3 * x); }\r\n"
    sig: function fun2(x){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  geniales_sin_ease:
    name: geniales_sin_ease
    code: "function geniales_sin_ease(canvas, item) {\r

      \  let [cv, ctx, astep, a, bstep, b, func, axes] = [canvas.cv,
      canvas.cx, item.astep, item.a, item.bstep, item.b, item.func,
      item.axes];\r

      \  cClear(cv, ctx);\r

      \  showAxes(ctx, axes);\r

      \  [a, astep] = oscillate_between(a, 0, 5, astep);\r

      \  [b, bstep] = oscillate_between(b, 0, 5, bstep);\r

      \  [item.astep, item.a, item.bstep, item.b] = [astep, a, bstep,
      b];\r

      \  funGraph(ctx, axes, x => b * func(a * x), \"rgb(11,153,11)\",
      1);\r

      \  return false;\r

      }\r\n"
    sig: function geniales_sin_ease(canvas, item){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test9_function:
    name: test9_function
    code: "function test9_function() {\r

      \  C = new CCanvas(dTable, {}, {}, gameloop_start, gameloop_stop,
      'tl');\r

      \  let canvas = C.cv;\r

      \  let axes = {}, ctx = canvas.getContext(\"2d\");\r

      \  axes.x0 = .5 + .5 * canvas.width;  \r

      \  axes.y0 = .5 + .5 * canvas.height; \r

      \  axes.scale = 40;                 \r

      \  axes.doNegativeX = true;\r

      \  C.add({ astep: .1, a: 0, bstep: .1, b: 0, func: x => Math.sin(x),
      axes: axes, update: geniales_sin_ease });\r

      }\r\n"
    sig: function test9_function(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test8_function:
    name: test8_function
    code: "function test8_function() {\r

      \  C = new CCanvas(dTable, {}, {}, gameloop_start, gameloop_stop,
      'tl');\r

      \  let canvas = C.cv;\r

      \  if (null == canvas || !canvas.getContext) return;\r

      \  var axes = {}, ctx = canvas.getContext(\"2d\");\r

      \  axes.x0 = .5 + .5 * canvas.width;  \r

      \  axes.y0 = .5 + .5 * canvas.height; \r

      \  axes.scale = 40;                 \r

      \  axes.doNegativeX = true;\r

      \  console.log('axes', axes)\r

      \  showAxes(ctx, axes);\r

      \  funGraph(ctx, axes, fun1, \"rgb(11,153,11)\", 1);\r

      \  funGraph(ctx, axes, fun2, \"rgb(66,44,255)\", 2);\r

      }\r\n"
    sig: function test8_function(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test7_function:
    name: test7_function
    code: "function test7_function() {\r

      \  C = new CCanvas(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc');\r

      \  let ctx = C.cx; \r

      \  let canvas = C.cv;\r

      \  let h = canvas.height;\r

      \  let w = canvas.width;\r

      \  let cw = w / 2; \r

      \  let ch = h / 2;\r

      \  let subStepCount = 10;  \r

      \  let scale = 10;         \r

      \  function plot(func, col, lineWidth) {\r

      \    let invScale = 1 / scale;    \r

      \    let top = ch * invScale;     \r

      \    let bottom = -ch * invScale;\r

      \    let subStep = invScale / subStepCount; \r

      \    let x, y, yy, xx, subX;                    \r

      \    let start = (-cw - 1) * invScale;      \r

      \    let end = (cw + 1) * invScale;\r

      \    ctx.strokeStyle = col;\r

      \    ctx.lineWidth = lineWidth * invScale; \r

      \    ctx.beginPath();\r

      \    for (x = start; x < end; x += invScale) { \r

      \      for (subX = 0; subX < invScale; subX += subStep) {  \r

      \        y = func(x + subX);                    \r

      \        if (yy !== undefined) {                \r

      \          if (y > top || y < bottom) {       \r

      \            if (yy < top && yy > bottom) { \r

      \              ctx.lineTo(x + subX, y);\r

      \            }\r

      \          } else {                         \r

      \            if (yy > top || yy < bottom) { \r

      \              ctx.moveTo(xx, yy);       \r

      \            }\r

      \            if (subX === 0) {              \r

      \              if (y > bottom && y < top) {  \r

      \                if (Math.abs(yy - y) > (top - bottom) * (1 / 3))
      {\r

      \                  ctx.moveTo(x, y);\r

      \                } else {\r

      \                  ctx.lineTo(x, y);\r

      \                }\r

      \              }\r

      \            }\r

      \          }\r

      \        } else {\r

      \          if (subX === 0) {\r

      \            ctx.moveTo(x, y);\r

      \          }\r

      \        }\r

      \        yy = y;\r

      \        xx = x + subX;\r

      \      }\r

      \    }\r

      \    ctx.stroke();\r

      \  }\r

      \  ctx.setTransform(scale, 0, 0, -scale, cw, ch);\r

      \  plot(x => 0, 'white', 2);\r

      \  plot(x => 5 * Math.sin(x), 'white', 2);\r

      \  plot(x => 5 * Math.sin(x), 'white', 2);\r

      }\r\n"
    sig: function test7_function(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test6_func_GEHT_NICHT:
    name: test6_func_GEHT_NICHT
    code: "function test6_func_GEHT_NICHT() {\r

      \  C = new MathCanvas(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc', 10);\r

      \  let f = x => Math.sqrt(x), d = .01;\r

      \  for (let x = C.minx; x < C.maxx; x += d) {\r

      \    let pt = C.point(x, f(x), 'yellow');\r

      \    C.add(pt);\r

      \  }\r

      \  C.draw();\r

      }\r\n"
    sig: function test6_func_GEHT_NICHT(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test5_line_GEHT_NICHT:
    name: test5_line_GEHT_NICHT
    code: "function test5_line_GEHT_NICHT() {\r

      \  C = new MathCanvas(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc', 10);\r

      \  let p1 = C.point(5, 3, 'yellow');\r

      \  let p2 = C.point(25, 12, 'red');\r

      \  for (let i = 0; i < 1; i += .01) {\r

      \    let p3 = lerpoint(p1, p2, i);\r

      \    C.add(p3);\r

      \  }\r

      \  C.draw();\r

      }\r\n"
    sig: function test5_line_GEHT_NICHT(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test4_range_math_GEHT_NICHT:
    name: test4_range_math_GEHT_NICHT
    code: "function test4_range_math_GEHT_NICHT() {\r

      \  C = new MathCanvas(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc', 10);\r

      \  let x = colorMix('yellow', 'red'); console.log('color', x)\r

      \  let p1 = C.point(5, 3, 'yellow');\r

      \  let p2 = C.point(25, 12, 'red');\r

      \  for (let i = 0.1; i < .9; i += .1) {\r

      \    let p3 = lerpoint(p1, p2, i);\r

      \    C.add(p3);\r

      \  }\r

      \  C.draw();\r

      }\r\n"
    sig: function test4_range_math_GEHT_NICHT(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test3_point_math:
    name: test3_point_math
    code: "function test3_point_math() {\r

      \  C = new CCanvas(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc', null, true);\r

      \  C.add();\r

      \  C.add({ x: 50, y: 80, color: 'pink', draw: draw_point, update:
      update_move });\r

      \  C.add({ x: 50, y: -80, color: 'red', draw: draw_car, update:
      update_car, v: { a: 0, mag: 5 } });\r

      \  C.draw();\r

      \  C.play();\r

      }\r\n"
    sig: function test3_point_math(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test2_point_nomath:
    name: test2_point_nomath
    code: "function test2_point_nomath() {\r

      \  C = new CCanvas(dTable, {}, {}, gameloop_start, gameloop_stop);\r

      \  C.add();\r

      \  C.add({ x: -200, y: 100, color: 'pink', draw: draw_point });\r

      \  C.draw();\r

      \  C.play();\r

      }\r\n"
    sig: function test2_point_nomath(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test1_car_math:
    name: test1_car_math
    code: "function test1_car_math() {\r

      \  C = new CCanvas(dTable, {}, {}, gameloop_start, gameloop_stop,
      'cc', null, true);\r

      \  C.add({ w: 30, h: 25, color: 'red', draw: draw_car, update:
      update_car, turn_inc: 10, v: { a: 280, mag: 5 } });\r

      \  C.add({ x: 30, y: -100, color: 'green', w: 35, h: 25, draw:
      draw_car, update: update_car, v: { a: 0, mag: 3 } });\r

      \  C.draw();\r

      }\r\n"
    sig: function test1_car_math(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test0_car_nomath:
    name: test0_car_nomath
    code: "function test0_car_nomath() {\r

      \  C = new CCanvas(dTable, {}, {}, gameloop_start, gameloop_stop);\r

      \  C.add({ w: 30, h: 25, color: 'red', draw: draw_car, update:
      update_car, turn_inc: 10, v: { a: 280, mag: 5 } });\r

      \  C.add({ x: 30, y: -100, color: 'green', w: 35, h: 25, draw:
      draw_car, update: update_car, v: { a: 0, mag: 3 } });\r

      \  C.draw();\r

      }\r\n"
    sig: function test0_car_nomath(){}
    region: legacy (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\noc\test.js
    datetime: 2022-09-24-08-38
    timestamp: 1664033935674.9023
    size: 17314
  test5:
    name: test5
    code: "function test5(map, p1, p2) {\r

      \  let control = M.control = test4_get_waypoints(map, p1, p2);\r

      \  M.coords = [];\r

      \  control.on('routeselected', function (e) {\r

      \    arrExtend(M.coords, e.route.coordinates);\r

      \    console.log('M', M)\r

      \  });\r

      }\r\n"
    sig: function test5(map, p1, p2){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\start.js
    datetime: 2022-10-21-05-52
    timestamp: 1666356769972.4026
    size: 6890
  roundNumber:
    name: roundNumber
    code: "function roundNumber(x,n){return x.toFixed(n);}\r\n"
    sig: function roundNumber(x,n){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  g4:
    name: g4
    code: "function g4(x, mean, stdev) {\r

      \  let variance = stdev * stdev;\r

      \  var y = mean / Math.E ** (((x) ** 2) / (2 * variance)); return
      y;\r

      }\r\n"
    sig: function g4(x, mean, stdev){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  g5:
    name: g5
    code: "function g5(x, mean, stdev) {\r

      \  x = (x - mean) / stdev;\r

      \  return Math.pow(Math.E, -Math.pow(x, 2) / 2) / Math.sqrt(2 *
      Math.PI);\r

      }\r\n"
    sig: function g5(x, mean, stdev){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  g6:
    name: g6
    code: "function g6(x, mean, stdev) {\r

      \  x = (x - mean) / stdev;\r

      \  return Math.E ** (-(x ** 2) / 2) / Math.sqrt(2 * Math.PI);\r

      }\r\n"
    sig: function g6(x, mean, stdev){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  g7:
    name: g7
    code: "function g7(x, mean, stdev) {\r

      \  x = (x - mean);\r

      \  let v = stdev * stdev;\r

      \  return Math.E ** (-(x ** 2) / (2 * v)) / Math.sqrt(v * 2 *
      Math.PI);\r

      }\r\n"
    sig: function g7(x, mean, stdev){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  g8:
    name: g8
    code: "function g8(x, mean, stdev) {\r

      \  const dividend = Math.E ** -((x - mean) ** 2 / (2 * stdev **
      2));\r

      \  const divisor = stdev * Math.sqrt(2 * Math.PI); return dividend /
      divisor;\r

      }\r\n"
    sig: function g8(x, mean, stdev){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  g9:
    name: g9
    code: "function g9(x, mean, stdev) {\r

      \  let f = new Gaussian(mean, stdev ** 2);\r

      \  console.log('f', f)\r

      \  return f.pdf(x);\r

      }\r\n"
    sig: function g9(x, mean, stdev){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  test4:
    name: test4
    code: "function test4() { test2(); }\r\n"
    sig: function test4(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test3_cdf:
    name: test3_cdf
    code: "function test3_cdf() {\r

      \  y = cumulative_distribution(85, 115, 100, 15);\r

      \  y = cumulative_distribution(105, 115, 100, 15);\r

      \  return;\r

      \  console.log('y', y); return;\r

      \  for (let x = 0; x <= 150; x += 25) {\r

      \    let y = cdf0(x);\r

      \    console.log('x', x, 'y', y)\r

      \  }\r

      }\r\n"
    sig: function test3_cdf(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  test2_nerd:
    name: test2_nerd
    code: "function test2_nerd() {\r

      \  var core = nerdamer.getCore();\r

      \  var _ = core.PARSER;\r

      \  core.Math2.custom = function (x) { return (100 *
      formula1(x)).toFixed(4); };\r

      \  _.functions.custom = [, 1];\r

      \  var x = nerdamer('custom(140)').evaluate();\r

      \  console.log(x.toString()); \r

      \  let fi = nerdamer(`integrate(custom(x),x)`).buildFunction();\r

      \  let y = fi(100);\r

      \  console.log('fi(100)', y)\r

      }\r\n"
    sig: function test2_nerd(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  test1_nerd:
    name: test1_nerd
    code: "function test1_nerd() {\r

      \  test0_nerd();\r

      \  let fi = nerdamer(`integrate(custom(x),x)`).buildFunction();\r

      \  let y = fi(100);\r

      \  console.log('fi(100)', y)\r

      }\r\n"
    sig: function test1_nerd(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  test0_nerd:
    name: test0_nerd
    code: "function test0_nerd() {\r

      \  var core = nerdamer.getCore();\r

      \  var _ = core.PARSER;\r

      \  core.Math2.custom = function (x) { return (100 *
      formula1(x)).toFixed(4); };\r

      \  _.functions.custom = [, 1];\r

      \  var x = nerdamer('custom(140)').evaluate();\r

      \  console.log(x.toString()); \r

      }\r\n"
    sig: function test0_nerd(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  formula0:
    name: formula0
    code: "function formula0(x, mean, stdev) {\r

      \  let v = stdev * stdev;\r

      \  let t = Math.sqrt(Math.PI * 2) * stdev;\r

      \  let t1 = 1 / t;\r

      \  let t2 = (x - mean) ** 2;\r

      \  let t3 = 2 * v;\r

      \  let t4 = -t2 / t3;\r

      \  let t5 = Math.E ** t4;\r

      \  return t1 * t5;\r

      }\r\n"
    sig: function formula0(x, mean, stdev){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  formula1:
    name: formula1
    code: "function formula1(x) {\r

      \  return formula0(x, 100, 15);\r

      }\r\n"
    sig: function formula1(x){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  test_formula0:
    name: test_formula0
    code: "function test_formula0() {\r

      \  let fi = nerdamer(`integrate(formula1(x),x)`).buildFunction();\r

      \  let y = fi(100);\r

      \  console.log('')\r

      \  let f = x => formula0(x, 100, 115);\r

      \  let sum = 0;\r

      \  for (let x = 100; x <= 145; x++) {\r

      \    let y = formula0(x, 100, 15);\r

      \    sum += y;\r

      \    console.log('x', x, 'y', Math.round(y * 100),
      Math.round(sum));\r

      \  }\r

      }\r\n"
    sig: function test_formula0(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  simple_gaussian:
    name: simple_gaussian
    code: "function simple_gaussian(canvas) {\r

      \  var mean = 100;\r

      \  var b = 25;\r

      \  var stdev = 10;\r

      \  let variance = stdev * stdev;\r

      \  var cv = canvas.cv;\r

      \  var cx = canvas.cx;\r

      \  cx.strokeStyle = 'silver';\r

      \  let width_of_rect = cv.width / (4 * b); let w = width_of_rect;\r

      \  for (var j = 0; j < 2 * b; j++) {\r

      \    let x = j - b;\r

      \    var y = mean / Math.E ** (((j - b) ** 2) / (2 * variance));\r

      \    console.log('x', x, 'y', y)\r

      \    cx.rect(j * w + 125, cv.height - y, w, y);\r

      \    cx.stroke();\r

      \  }\r

      }\r\n"
    sig: function simple_gaussian(canvas){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\noc\baustelle.js
    datetime: 2022-09-24-09-10
    timestamp: 1664035827120.306
    size: 6674
  make_favicon:
    name: make_favicon
    code: "function make_favicon(key) {\r

      \  let url = valf(Emicons[key], Emicons.maus);\r

      \  var link = document.querySelector(\"link[rel*='icon']\") ||
      document.createElement('link');\r

      \  link.type = 'image/png';\r

      \  link.rel = 'shortcut icon';\r

      \  link.href = url;
      //'https://ssl.gstatic.com/docs/doclist/images/infinite_arrow_favicon_5.i\
      co';\r

      \  document.getElementsByTagName('head')[0].appendChild(link);\r

      }\r\n"
    sig: function make_favicon(key){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\favicontester\start.js
    datetime: 2022-10-01-10-14
    timestamp: 1664644478311.996
    size: 1077
  normalcdf:
    name: normalcdf
    code: "function normalcdf(x, mean, stdev) {   \r

      \  x = (x - mean) / stdev;\r

      \  var a1 = 1 / (1 + .2316419 * Math.abs(x));\r

      \  var a2 = .3989423 * Math.exp(-x * x / 2);\r

      \  var p = a2 * a1 * (.3193815 + a1 * (-.3565638 + a1 * (1.781478 +
      a1 * (-1.821256 + a1 * 1.330274))));\r

      \  if (x > 0) {\r

      \    p = 1 - p\r

      \  }\r

      \  return p;\r

      }\r\n"
    sig: function normalcdf(x, mean, stdev){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  cdf0:
    name: cdf0
    code: "function cdf0(x) {\r

      \  function normal(x, mu, sigma) {\r

      \    return stdNormal((x - mu) / sigma);\r

      \  }\r

      \  function stdNormal(z) {\r

      \    var j, k, kMax, m, values, total, subtotal, item, z2, z4, a,
      b;\r

      \    if (z < -6) { return 0; }\r

      \    if (z > 6) { return 1; }\r

      \    m = 1;        \r

      \    b = z;        \r

      \    z2 = z * z;    \r

      \    z4 = z2 * z2;  \r

      \    values = [];\r

      \    for (k = 0; k < 100; k += 2) {\r

      \      a = 2 * k + 1;\r

      \      item = b / (a * m);\r

      \      item *= (1 - (a * z2) / ((a + 1) * (a + 2)));\r

      \      values.push(item);\r

      \      m *= (4 * (k + 1) * (k + 2));\r

      \      b *= z4;\r

      \    }\r

      \    total = 0;\r

      \    for (k = 49; k >= 0; k--) {\r

      \      total += values[k];\r

      \    }\r

      \    return 0.5 + 0.3989422804014327 * total;\r

      \  }\r

      \  return normal(x, 100, 15);\r

      }\r\n"
    sig: function cdf0(x){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  cumulative_distribution:
    name: cumulative_distribution
    code: "function cumulative_distribution(from, to, mean, stdev, n = 0) {\r

      \  function cdfNormal(x, mean = 100, standardDeviation = 15) {\r

      \    return (1 - math.erf((mean - x) / (Math.sqrt(2) *
      standardDeviation))) / 2;\r

      \  }\r

      \  let res;\r

      \  if (to < from) { let h = from; from = to; to = h; }\r

      \  assertion(from <= to,
      'MATH!!!!!!!!!!!!!!!??????????????????????')\r

      \  if (from <= mean && to >= mean) {\r

      \    let kleiner_als_from = cdfNormal(from, mean, stdev);
      console.log(kleiner_als_from)\r

      \    let kleiner_als_mean = cdfNormal(mean, mean, stdev);
      console.log(kleiner_als_mean)\r

      \    let res1 = kleiner_als_mean - kleiner_als_from;
      console.log('res1', res1);\r

      \    let kleiner_als_to = cdfNormal(to, mean, stdev);
      console.log(kleiner_als_to)\r

      \    let res2 = kleiner_als_to - kleiner_als_mean;
      console.log('res2', res2);\r

      \    console.log(res1 + res2); res = res1 + res2;\r

      \  } else {\r

      \    let kleiner_als_to = cdfNormal(to, mean, stdev);
      console.log(kleiner_als_to)\r

      \    let kleiner_als_from = cdfNormal(from, mean, stdev);
      console.log(kleiner_als_from)\r

      \    res = kleiner_als_to - kleiner_als_from; console.log('res',
      res);\r

      \  }\r

      \  return 100 * res.toFixed(n);\r

      }\r\n"
    sig: function cumulative_distribution(from, to, mean, stdev, n = 0){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  gauss:
    name: gauss
    code: "function gauss(x, mean, standardDeviation) {\r

      \  return (1 / standardDeviation * Math.sqrt(2 * (3, 14))) *
      Math.pow(Math.E, -Math.pow(x - mean, 2) / (2 * (standardDeviation *
      standardDeviation)));\r

      }\r\n"
    sig: function gauss(x, mean, standardDeviation){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  gaussian_amp:
    name: gaussian_amp
    code: "function gaussian_amp(canvas, stdev) {\r

      \  let v = stdev * stdev;\r

      \  function formula(x, v, amp) { return amp * Math.E ** (-(x ** 2) /
      (2 * v)) / Math.sqrt(v * 2 * Math.PI); }\r

      \  let y = 1 / Math.sqrt(v * 2 * Math.PI);\r

      \  let amp = .9 * (-canvas.miny) / (canvas.scale * y);\r

      \  let f = formula(2, amp);\r

      \  f = x => formula(x, v, amp);\r

      \  return f;\r

      }\r\n"
    sig: function gaussian_amp(canvas, stdev){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  gaussianRand:
    name: gaussianRand
    code: "function gaussianRand() {\r

      \  var rand = 0;\r

      \  for (var i = 0; i < 6; i += 1) { rand += Math.random(); }\r

      \  return rand / 6;\r

      }\r\n"
    sig: function gaussianRand(){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  gaussianRandom:
    name: gaussianRandom
    code: "function gaussianRandom(start, end) { return Math.floor(start +
      gaussianRand() * (end - start + 1)); }\r\n"
    sig: function gaussianRandom(start, end){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  ncdf:
    name: ncdf
    code: "function ncdf(x, mean = 100, std = 15) {\r

      \  var x = (x - mean) / std\r

      \  var t = 1 / (1 + .2315419 * Math.abs(x))\r

      \  var d = .3989423 * Math.exp(-x * x / 2)\r

      \  var prob = d * t * (.3193815 + t * (-.3565638 + t * (1.781478 + t
      * (-1.821256 + t * 1.330274))))\r

      \  if (x > 0) prob = 1 - prob\r

      \  return prob\r

      }\r\n"
    sig: function ncdf(x, mean = 100, std = 15){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  nerd_custom_function:
    name: nerd_custom_function
    code: "function nerd_custom_function() {\r

      \  var core = nerdamer.getCore();\r

      \  var _ = core.PARSER;\r

      \  core.Math2.custom = function (a, b) {\r

      \    return (2 * a + b) / a;\r

      \  };\r

      \  _.functions.custom = [, 2];\r

      \  var x = nerdamer('custom(2, 6)').evaluate();\r

      \  console.log(x.toString()); \r

      \  var y = nerdamer('custom(a, b)').evaluate();\r

      \  console.log(y.toString()); \r

      }\r\n"
    sig: function nerd_custom_function(){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  convert_to_range:
    name: convert_to_range
    code: "function convert_to_range(x, min1, max1, min2, max2) {\r

      \  return (x - min1) * ((max2 - min2) / (max1 - min1)) + min2;\r

      }\r\n"
    sig: function convert_to_range(x, min1, max1, min2, max2){}
    region: math (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  clamp:
    name: clamp
    code: "function clamp(x, min, max) { return Math.min(Math.max(x, min), max);
      }\r\n"
    sig: function clamp(x, min, max){}
    region: math (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cycle:
    name: cycle
    code: "function cycle(x, min, max) { let d = max - min; return (x - min) % d +
      min; }\r\n"
    sig: function cycle(x, min, max){}
    region: math (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  decompose_2d_matrix:
    name: decompose_2d_matrix
    code: "function decompose_2d_matrix(mat) {\r

      \  var a = mat[0];\r

      \  var b = mat[1];\r

      \  var c = mat[2];\r

      \  var d = mat[3];\r

      \  var e = mat[4];\r

      \  var f = mat[5];\r

      \  var delta = a * d - b * c;\r

      \  let result = {\r

      \    translation: [e, f],\r

      \    rotation: 0,\r

      \    scale: [0, 0],\r

      \    skew: [0, 0],\r

      \  };\r

      \  if (a != 0 || b != 0) {\r

      \    var r = Math.sqrt(a * a + b * b);\r

      \    result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a /
      r);\r

      \    result.scale = [r, delta / r];\r

      \    result.skew = [Math.atan((a * c + b * d) / (r * r)), 0];\r

      \  } else if (c != 0 || d != 0) {\r

      \    var s = Math.sqrt(c * c + d * d);\r

      \    result.rotation =\r

      \      Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c /
      s));\r

      \    result.scale = [delta / s, s];\r

      \    result.skew = [0, Math.atan((a * c + b * d) / (s * s))];\r

      \  } else {\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function decompose_2d_matrix(mat){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  draw_gaussian:
    name: draw_gaussian
    code: "function draw_gaussian(canvas, mean, stdev, color, thick, legendcolor,
      legend) {\r

      \  canvas.draw_axes();\r

      \  canvas.scale = 40;\r

      \  let f = gaussian_amp(canvas, 1)\r

      \  canvas.plot(f, color, thick);\r

      \  draw_ticks_gaussian(canvas, f, mean, stdev, legendcolor);\r

      \  draw_text(canvas, legend, { fg: legendcolor, pos: 'tr', hmargin:
      25, vmargin: 12 });\r

      }\r\n"
    sig: function draw_gaussian(canvas, mean, stdev, color, thick, legendcolor,
      legend){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  draw_label:
    name: draw_label
    code: "function draw_label(canvas, item) {\r

      \  let cx = canvas.cx;\r

      \  cx.textAlign = 'center';\r

      \  cx.font = `${valf(item.fz, 16)}px Arial`;\r

      \  cx.fillStyle = item.color;\r

      \  cx.fillText(`  ${item.label}`, 0, 0);\r

      }\r\n"
    sig: function draw_label(canvas, item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  draw_point:
    name: draw_point
    code: "function draw_point(canvas, item) {\r

      \  let cx = canvas.cx;\r

      \  cx.font = `${valf(item.fz, 16)}px Arial`;\r

      \  cx.fillStyle = item.color;\r

      \  if (isdef(item.label)) cx.fillText(`  ${item.label}`, 0, 0);\r

      \  cEllipse(0, 0, item.w, item.h, { bg: item.color }, 0, cx);\r

      }\r\n"
    sig: function draw_point(canvas, item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  draw_rect:
    name: draw_rect
    code: "function draw_rect(canvas, item) {\r

      \  let cx = canvas.cx;\r

      \  cRect(0 - item.w / 2, 0 - item.h / 2, item.w, item.h, { bg:
      item.color }, cx);\r

      }\r\n"
    sig: function draw_rect(canvas, item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  draw_text:
    name: draw_text
    code: "function draw_text(canvas, text, styles = {}) {\r

      \  let cx = canvas.cx;\r

      \  addKeys({ x: 0, y: 0, family: 'opensans', fz: 36 }, styles);\r

      \  styles.bg = styles.fg;\r

      \  styles.font = `${styles.fz}px ${styles.family}`;\r

      \  cStyle(styles, cx);\r

      \  let [x, y, offx, offy] = [styles.x, styles.y,
      valf(styles.hmargin, styles.margin, 4), valf(styles.vmargin,
      styles.margin, 4)];\r

      \  if (isdef(styles.pos)) {\r

      \    let pos = styles.pos; \r

      \    if (pos[0] == 't') {\r

      \      y += canvas.miny + offy;\r

      \      cx.textBaseline = 'hanging';\r

      \    } else if (pos[0] == 'c') {\r

      \      y += offy;\r

      \      cx.textBaseline = 'middle';\r

      \    } else {\r

      \      y += canvas.maxy - offy;\r

      \      cx.textBaseline = 'top';\r

      \    }\r

      \    if (pos[1] == 'l') {\r

      \      x += canvas.minx + offx;\r

      \      cx.textAlign = 'start';\r

      \    } else if (pos[1] == 'c') {\r

      \      x += offx;\r

      \      cx.textAlign = 'center';\r

      \    } else {\r

      \      x += canvas.maxx - offx;\r

      \      cx.textAlign = 'end';\r

      \    }\r

      \  } else {\r

      \    cx.textAlign = 'center'; \r

      \    cx.textBaseline = 'middle'; \r

      \  }\r

      \  if (isdef(styles.al)) {\r

      \    let a = ' ' + styles.al;\r

      \    console.log('a', a);\r

      \    cx.textAlign = a.includes(' s') ? 'start' : a.includes(' e') ?
      'end' : a.includes(' r') ? 'right' : a.includes(' l') ? 'left' :
      'center';\r

      \    cx.textBaseline = a.includes(' b') ? 'bottom' : a.includes('
      t') ? 'top' : a.includes(' h') ? 'hanging' : a.includes(' a') ?
      'alpjabetic' : a.includes(' i') ? 'ideographic' : 'middle';\r

      \  }\r

      \  if (isdef(styles.offy)) {\r

      \    if (isNumber(styles.offy)) y += styles.offy;\r

      \    else {\r

      \      let ws = toWords(styles.offy);\r

      \      let di = { below: 'hanging', above: 'bottom', ontop:
      'bottom', onbottom: 'hanging', unterhalb: 'hanging', oberhalb: 'bottom',
      unten: 'hanging', oben: 'bottom' };\r

      \      for (const w of ws) {\r

      \        if (isNumber(w)) y += Number(w);\r

      \        else if (isdef(di[w])) cx.textBaseline = di[w];\r

      \        else if (w.length == 1) {\r

      \          cx.textBaseline = w == 'b' ? 'bottom' : w == 't' ? 'top'
      : w == 'a' ? 'alphabetic' : w == 'i' ? 'ideographic' : w == 'm' ? 'middle'
      : 'hanging';\r

      \        } else cx.textBaseline = w;\r

      \      }\r

      \    }\r

      \  }\r

      \  if (isdef(styles.offx)) {\r

      \    if (isNumber(styles.offx)) y += styles.offx;\r

      \    else {\r

      \      let ws = toWords(styles.offx);\r

      \      for (const w of ws) {\r

      \        if (isNumber(w)) x += Number(w);\r

      \        else if (w.length == 1) {\r

      \          cx.textAlign = w == 's' ? 'start' : w == 'e' ? 'end' : w
      == 'l' ? 'left' : w == 'r' ? 'right' : 'center';\r

      \        } else cx.textAlign = w;\r

      \      }\r

      \    }\r

      \  }\r

      \  console.log('x', x, 'y', y, 'elign', cx.textAlign, 'baseline',
      cx.textBaseline)\r

      \  cx.fillText(text, x, y);\r

      }\r\n"
    sig: function draw_text(canvas, text, styles = {}){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  draw_ticks_gaussian:
    name: draw_ticks_gaussian
    code: "function draw_ticks_gaussian(canvas, f, mean, dev, color) {\r

      \  let sc = canvas.scale;\r

      \  let x_end = search_end_point(f, 0, canvas.maxx, .005, .02);\r

      \  let dx = x_end / 3, x = 0;\r

      \  for (let i = 0; i <= 3; i++) {\r

      \    canvas.pp(x * sc, 0, `${mean + i * dev}`, { bg: color });\r

      \    if (x) canvas.pp(-x * sc, 0, `${mean - i * dev}`, { bg: color
      });\r

      \    x += dx;\r

      \  }\r

      }\r\n"
    sig: function draw_ticks_gaussian(canvas, f, mean, dev, color){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  draw_ticks:
    name: draw_ticks
    code: "function draw_ticks(canvas, f) {\r

      \  let sc = canvas.scale;\r

      \  let x_end = search_end_point(f, 0, canvas.maxx, 0.02);\r

      \  let y_end = f(x_end);\r

      \  canvas.pp(x_end * sc, -y_end * sc, `${Math.round(x_end * sc)}`,
      'red', 'tc');\r

      \  console.log('endpoint x', x_end, 'y', y_end, canvas.minx,
      canvas.maxx);\r

      \  console.log('stdev', x_end / 3);\r

      \  let label = 100, dx = x_end / 3, x = 0;\r

      \  for (let i = 0; i <= 3; i++) {\r

      \    let x1 = Math.round(convert_to_range(x, -x_end, x_end, 50,
      150));\r

      \    let x2 = Math.round(convert_to_range(-x, -x_end, x_end, 50,
      150));\r

      \    canvas.pp(x * sc, 0, `${label + i * 15}`);\r

      \    if (x) canvas.pp(-x * sc, 0, `${label - i * 15}`);\r

      \    x += dx;\r

      \  }\r

      }\r\n"
    sig: function draw_ticks(canvas, f){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  funGraph:
    name: funGraph
    code: "function funGraph(ctx, axes, func, color, thick) {\r

      \  var xx, yy, dx = 4, x0 = axes.x0, y0 = axes.y0, scale =
      axes.scale;\r

      \  var iMax = Math.round((ctx.canvas.width - x0) / dx);\r

      \  var iMin = axes.doNegativeX ? Math.round(-x0 / dx) : 0;\r

      \  ctx.beginPath();\r

      \  ctx.lineWidth = thick;\r

      \  ctx.strokeStyle = color;\r

      \  for (var i = iMin; i <= iMax; i++) {\r

      \    xx = dx * i; yy = scale * func(xx / scale);\r

      \    if (i == iMin) ctx.moveTo(x0 + xx, y0 - yy);\r

      \    else ctx.lineTo(x0 + xx, y0 - yy);\r

      \  }\r

      \  ctx.stroke();\r

      }\r\n"
    sig: function funGraph(ctx, axes, func, color, thick){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  get_with_prob:
    name: get_with_prob
    code: "function get_with_prob(probs) {\r

      \  let sum = arrSum(probs, 'p');\r

      \  let r = Math.random() * sum;\r

      \  console.log('sum', sum);\r

      \  let np = []; let sofar = 0;\r

      \  for (const el of probs) {\r

      \    sofar += el.p;\r

      \    np.push({ val: el.val, p: el.p, akk: sofar });\r

      \    if (r <= sofar) return el.val;\r

      \  }\r

      \  return arrLast(probs.val);\r

      }\r\n"
    sig: function get_with_prob(probs){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  get_quadrant:
    name: get_quadrant
    code: "function get_quadrant(a) { return a > 270 ? 4 : a > 180 ? 3 : a > 90 ? 2
      : 1; }\r\n"
    sig: function get_quadrant(a){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  is_turn_counter_clockwise:
    name: is_turn_counter_clockwise
    code: "function is_turn_counter_clockwise(a1, a2) {\r

      \  let diff = Math.abs(a2 - a1);\r

      \  let q1 = get_quadrant(a1);\r

      \  let q2 = get_quadrant(a2);\r

      \  let cclock = false;\r

      \  if (q1 == q2) { cclock = a2 < a1; }\r

      \  else {\r

      \    if (a2 > a1 && diff > 180) cclock = true;\r

      \    if (a2 < a1 && diff < 180) cclock = true;\r

      \  }\r

      \  return cclock;\r

      }\r\n"
    sig: function is_turn_counter_clockwise(a1, a2){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  lerpos:
    name: lerpos
    code: "function lerpos(i1, i2, frac = .5) { return { x: lerp(i1.x, i2.x, frac),
      y: lerp(i1.y, i2.y, frac) }; }\r\n"
    sig: function lerpos(i1, i2, frac = .5){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  lerpoint:
    name: lerpoint
    code: "function lerpoint(i1, i2, frac = .5) {\r

      \  let o = { draw: i1.draw, update: i1.update };\r

      \  addKeys(i1, o);\r

      \  let pos = lerpos(i1, i2, frac);\r

      \  o.x = pos.x; o.y = pos.y;\r

      \  o.color = colorMix(i1.color, i2.color, frac * 100);\r

      \  if (isdef(i1.label)) o.label = `${(o.x /
      i1.ppp).toFixed(1)},${(o.y / i1.ppp).toFixed(1)}`;\r

      \  return o;\r

      }\r\n"
    sig: function lerpoint(i1, i2, frac = .5){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  move_down:
    name: move_down
    code: "function move_down(canvas, item) { item.y += 1; canvas.clamp(item);
      return true; }\r\n"
    sig: function move_down(canvas, item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  move_random:
    name: move_random
    code: "function move_random(canvas, item) { item.x += rFloat(-1, 1); item.y +=
      rFloat(-1, 1); canvas.clamp(item); return true; }\r\n"
    sig: function move_random(canvas, item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  move_probs:
    name: move_probs
    code: "function move_probs(canvas, item) {\r

      \  let pinc = get_with_prob(item.probs);\r

      \  item.x += pinc.x; item.y += pinc.y;\r

      \  canvas.clamp(item);\r

      \  return true;\r

      }\r\n"
    sig: function move_probs(canvas, item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  oscillator:
    name: oscillator
    code: "function oscillator(item) {\r

      \  let [astep, a, bstep, b, basefunc] = [item.astep, item.a,
      item.bstep, item.b, item.basefunc];\r

      \  [a, astep] = oscillate_between(a, 0, 5, astep);\r

      \  [b, bstep] = oscillate_between(b, 0, 5, bstep);\r

      \  [item.astep, item.a, item.bstep, item.b] = [astep, a, bstep,
      b];\r

      \  item.func = x => b * basefunc(a * x);\r

      \  return true;\r

      }\r\n"
    sig: function oscillator(item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  search_end_point:
    name: search_end_point
    code: "function search_end_point(f, min, max, lower, upper) {\r

      \  if (SICHERER-- < 0) { console.log('!!!!!!!!!!'); return 0; }\r

      \  let x = min + (max - min) / 2;\r

      \  let y = f(x);\r

      \  if (y > upper) { return search_end_point(f, x, max, lower,
      upper); }\r

      \  else if (y < lower) { return search_end_point(f, min, x, lower,
      upper); }\r

      \  else return x;\r

      }\r\n"
    sig: function search_end_point(f, min, max, lower, upper){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  showAxes:
    name: showAxes
    code: "function showAxes(ctx, axes) {\r

      \  var x0 = axes.x0, w = ctx.canvas.width;\r

      \  var y0 = axes.y0, h = ctx.canvas.height;\r

      \  var xmin = axes.doNegativeX ? 0 : x0;\r

      \  ctx.beginPath();\r

      \  ctx.strokeStyle = \"rgb(128,128,128)\";\r

      \  ctx.moveTo(xmin, y0); ctx.lineTo(w, y0);  \r

      \  ctx.moveTo(x0, 0); ctx.lineTo(x0, h);  \r

      \  ctx.stroke();\r

      }\r\n"
    sig: function showAxes(ctx, axes){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  update_func:
    name: update_func
    code: "function update_func(canvas, item) {\r

      \  let [cv, ctx, ia, ib, ifunc, axes] = [canvas.cv, canvas.cx,
      item.ia, item.ib, item.ifunc, item.axes];\r

      \  cClear(cv, ctx);\r

      \  showAxes(ctx, axes);\r

      \  let [la, lb, lf] = [[1, 2, 3, 4, 5, 5, 5, 4, 3, 2], [0, .5, 1,
      1.5, 2, 2.5, 2.5, 2.5, 2, 1.5, 1, .5], ['sin', 'cos']];\r

      \  let [a, b, f] = [la[ia], lb[ib], lf[ifunc]];\r

      \  [item.ia, item.ib, item.ifunc] = [(ia + 1) % la.length, (ib + 1)
      % lb.length, (ifunc + 1) % lf.length];\r

      \  funGraph(ctx, axes, x => Math[f](a * x), \"rgb(11,153,11)\",
      1);\r

      \  return false;\r

      }\r\n"
    sig: function update_func(canvas, item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  update_move:
    name: update_move
    code: "function update_move(canvas, item) {\r

      \  item.y += 1; \r

      \  item.y = cycle(item.y, canvas.miny, canvas.maxy);\r

      \  return true;\r

      }\r\n"
    sig: function update_move(canvas, item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  update_position:
    name: update_position
    code: "function update_position(item) {\r

      \  let [a1, a2] = [item.a, item.v.a];\r

      \  let diff = Math.abs(a2 - a1);\r

      \  let inc = valf(item.turn_inc, 0);\r

      \  if (inc && diff > inc) {\r

      \    let cclock = is_turn_counter_clockwise(a1, a2);\r

      \    if (cclock) inc = -inc;\r

      \    let anew = a1 + inc;\r

      \    anew = (anew + 360) % 360;\r

      \    item.a = anew;\r

      \  } else {\r

      \    item.a = a2 % 360;\r

      \    let angle = toRadian(item.a);\r

      \    item.x += Math.cos(angle) * item.v.mag;\r

      \    item.y += Math.sin(angle) * item.v.mag;\r

      \  }\r

      }\r\n"
    sig: function update_position(item){}
    region: math (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  draw_car:
    name: draw_car
    code: "function draw_car(canvas, item) {\r

      \  let cx = canvas.cx;\r

      \  cRect(0 - item.w / 2, 0 - item.h / 2, item.w, item.h, { bg:
      item.color }, cx);\r

      \  cRect(item.w - item.w / 2, 0 - item.h / 2, 10, item.h, { bg:
      'yellow' }, cx);\r

      }\r\n"
    sig: function draw_car(canvas, item){}
    region: car (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  update_car:
    name: update_car
    code: "function update_car(canvas, item) {\r

      \  let di = { ArrowUp: canvas.math ? 90 : 270, ArrowDown:
      canvas.math ? 270 : 90, ArrowLeft: 180, ArrowRight: 0 };\r

      \  for (const key in di) {\r

      \    if (is_key_down(key)) {\r

      \      item.v.a = di[key];\r

      \      update_position(item);\r

      \      return true;\r

      \    }\r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function update_car(canvas, item){}
    region: car (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\noc\helpers.js
    datetime: 2022-10-02-06-16
    timestamp: 1664716596499.9414
    size: 18284
  selectStyle:
    name: selectStyle
    code: "function selectStyle(feature) {\r

      \  const color = feature.get('COLOR') || '#eeeeee';\r

      \  selected.getFill().setColor(color);\r

      \  return selected;\r

      }\r\n"
    sig: function selectStyle(feature){}
    region: const (main.js)
    filename: main.js
    type: func
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  test3_add_cities_layer:
    name: test3_add_cities_layer
    code: "function test3_add_cities_layer(color) {\r

      \  let cities = rChoose(M.capitals, 20);\r

      \  for (const c of cities) map_add_city(M.cities[c]);\r

      }\r\n"
    sig: function test3_add_cities_layer(color){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\openlayers\map\start.js
    datetime: 2022-10-05-19-01
    timestamp: 1665021666531.7283
    size: 3263
  test1_can_I_get_new_cities:
    name: test1_can_I_get_new_cities
    code: "async function test1_can_I_get_new_cities(min = 25000) {\r

      \  let info = await
      route_path_yaml_dict('../base/assets/lists/info.yaml');\r

      \  let text = await route_path_text('../base/mapdata/cities.csv');\r

      \  let cities = M.cities = csv2list(text);\r

      \  let capitals = [];\r

      \  let new_cities = {};\r

      \  let num = 0;\r

      \  for (const o of cities) {\r

      \    let n = o.population;\r

      \    if (nundef(n)) continue;\r

      \    n = Number(n);\r

      \    if (n < min) continue;\r

      \    let w1 = o.city_ascii.toLowerCase();\r

      \    if (nundef(o.country)) {\r

      \      console.log('missing country', o);\r

      \      continue;\r

      \    }\r

      \    num += 1;\r

      \    let land1 = o.country.toLowerCase();\r

      \    for (const k of info.capital) {\r

      \      let w = k.toLowerCase();\r

      \      if (w.includes(w1) && w.includes(land1)) {\r

      \        capitals.push(o);\r

      \        o.capital = 'capital';\r

      \      }\r

      \      let name = o.name = o.city_ascii;\r

      \      if (isdef(new_cities[name]) &&
      new_cities[name].includes('capital')) continue; \r

      \      new_cities[name] =
      `${o.lng},${o.lat},${o.country},${o.capital},${o.population}`;\r

      \    }\r

      \  }\r

      \  downloadAsYaml(new_cities, 'cities');\r

      \  return new_cities;\r

      }\r\n"
    sig: async function test1_can_I_get_new_cities(min = 25000){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\openlayers\map\start.js
    datetime: 2022-10-05-19-01
    timestamp: 1665021666531.7283
    size: 3263
  test0_simulateClick:
    name: test0_simulateClick
    code: "async function test0_simulateClick() {\r

      \  let info = await
      route_path_yaml_dict('../base/assets/lists/info.yaml');\r

      \  downloadAsYaml(info, 'info');\r

      }\r\n"
    sig: async function test0_simulateClick(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\openlayers\map\start.js
    datetime: 2022-10-05-19-01
    timestamp: 1665021666531.7283
    size: 3263
  chall4:
    name: chall4
    code: "function chall4() {\r

      \  let caps = M.capitals;\r

      \  let list = caps; \r

      \  for (const o of list) {\r

      \    map_add_city(o);\r

      \    console.log('city', o)\r

      \  }\r

      \  console.log('source',
      ensure_city_layer().getSource().getFeatures().map(x =>
      x.data.city_ascii));\r

      }\r\n"
    sig: function chall4(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\openlayers\map\start.js
    datetime: 2022-10-05-19-01
    timestamp: 1665021666531.7283
    size: 3263
  cha3:
    name: cha3
    code: "function cha3(cities) {\r

      \  let list = rChoose(cities, 20);\r

      \  for (const o of list) {\r

      \    map_add_city(o);\r

      \  }\r

      \  console.log('source',
      ensure_city_layer().getSource().getFeatures().map(x =>
      x.data.city_ascii));\r

      }\r\n"
    sig: function cha3(cities){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\openlayers\map\start.js
    datetime: 2022-10-05-19-01
    timestamp: 1665021666531.7283
    size: 3263
  challenge2:
    name: challenge2
    code: "function challenge2() {\r

      \  let layer = map_add_layer('city', M.map); \r

      \  let feature = map_add_circle_to_layer(16, 48, layer);\r

      \  feature.data = { hallo: 'Vienna' };\r

      \  console.log('source', layer.getSource().getFeatures());\r

      }\r\n"
    sig: function challenge2(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\openlayers\map\start.js
    datetime: 2022-10-05-19-01
    timestamp: 1665021666531.7283
    size: 3263
  challenge1:
    name: challenge1
    code: "async function challenge1() {\r

      \  let data = await
      route_path_json('../base/mapdata/gadm36_AUT_2.json');\r

      \  var mapOptions = {\r

      \    center: [48.3, 16.3],\r

      \    zoom: 10\r

      \  }\r

      \  var map = new L.map('map', mapOptions);\r

      \  var layer = new L.TileLayer('');
      //http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');\r

      \  map.addLayer(layer);\r

      \  geojson = L.geoJson(data, {}).addTo(map);\r

      \  for (const f of data.features) {\r

      \    let name = f.properties.NAME_2;\r

      \    let fpoly = single_poly_feature(f); \r

      \    let center = get_poly_center(fpoly);\r

      \    let p = get_circle(center).addTo(map); \r

      \    var marker = L.marker(center, { opacity: 0 }); \r

      \    marker.addTo(map);\r

      \    marker.bindTooltip(f.properties.NAME_2, { direction: 'center',
      permanent: true, className: 'mylabel',offset: L.point({x: -30, y: 30}) });
      \r

      \  }\r

      }\r\n"
    sig: async function challenge1(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\start.js
    datetime: 2022-10-15-07-59
    timestamp: 1665845941280.0645
    size: 4280
  challenge0:
    name: challenge0
    code: "function challenge0() {\r

      \  for (const o of arrTake(cities, 10)) {\r

      \    console.log('o', o)\r

      \    add_circle(Number(o.lng), Number(o.lat), M.map);\r

      \  }\r

      }\r\n"
    sig: function challenge0(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\openlayers\map\start.js
    datetime: 2022-10-05-19-01
    timestamp: 1665021666531.7283
    size: 3263
  onclick_cities:
    name: onclick_cities
    code: "function onclick_cities() {\r

      \  let layer = M.layers.city;\r

      \  let capitals = rChoose(M.capitals, 50);\r

      \  console.log('capitals', capitals);\r

      \  for (const c of M.capitals) { \r

      \    console.log('presenting',c)\r

      \    map_add_object(M.cities[c], { layer: layer });\r

      \  }\r

      }\r\n"
    sig: function onclick_cities(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\openlayers\map\baustelle.js
    datetime: 2022-10-05-19-03
    timestamp: 1665021811489.0476
    size: 298
  polygonStyleFunction:
    name: polygonStyleFunction
    code: "function polygonStyleFunction(feature, resolution) {\r

      \  return new Style({\r

      \    stroke: new Stroke({\r

      \      color: 'blue',\r

      \      width: 1,\r

      \    }),\r

      \    fill: new Fill({\r

      \      color: 'rgba(0, 0, 255, 0.1)',\r

      \    }),\r

      \    text: createTextStyle(feature, resolution, myDom.polygons),\r

      \  });\r

      }\r\n"
    sig: function polygonStyleFunction(feature, resolution){}
    region: const (main.js)
    filename: main.js
    type: func
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  lineStyleFunction:
    name: lineStyleFunction
    code: "function lineStyleFunction(feature, resolution) {\r

      \  return new Style({\r

      \    stroke: new Stroke({\r

      \      color: 'green',\r

      \      width: 2,\r

      \    }),\r

      \    text: createTextStyle(feature, resolution, myDom.lines),\r

      \  });\r

      }\r\n"
    sig: function lineStyleFunction(feature, resolution){}
    region: const (main.js)
    filename: main.js
    type: func
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  pointStyleFunction:
    name: pointStyleFunction
    code: "function pointStyleFunction(feature, resolution) {\r

      \  return new Style({\r

      \    image: new CircleStyle({\r

      \      radius: 10,\r

      \      fill: new Fill({ color: 'rgba(255, 0, 0, 0.1)' }),\r

      \      stroke: new Stroke({ color: 'red', width: 1 }),\r

      \    }),\r

      \    text: createTextStyle(feature, resolution, myDom.points),\r

      \  });\r

      }\r\n"
    sig: function pointStyleFunction(feature, resolution){}
    region: const (main.js)
    filename: main.js
    type: func
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  stringDivider:
    name: stringDivider
    code: "function stringDivider(str, width, spaceReplacer) {\r

      \  if (str.length > width) {\r

      \    let p = width;\r

      \    while (p > 0 && str[p] != ' ' && str[p] != '-') {\r

      \      p--;\r

      \    }\r

      \    if (p > 0) {\r

      \      let left;\r

      \      if (str.substring(p, p + 1) == '-') {\r

      \        left = str.substring(0, p + 1);\r

      \      } else {\r

      \        left = str.substring(0, p);\r

      \      }\r

      \      const right = str.substring(p + 1);\r

      \      return left + spaceReplacer + stringDivider(right, width,
      spaceReplacer);\r

      \    }\r

      \  }\r

      \  return str;\r

      }\r\n"
    sig: function stringDivider(str, width, spaceReplacer){}
    region: const (main.js)
    filename: main.js
    type: func
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  test0:
    name: test0
    code: "function test0() {\r

      \  dTable.onclick = game_add_default_item;\r

      }\r\n"
    sig: function test0(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  mist:
    name: mist
    code: "function mist() {\r

      \  var map = L.map('map', {\r

      \    minZoom: 0,\r

      \    maxZoom: 20\r

      \  });\r

      \  var cartodbAttribution = '&copy; <a
      href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors, &copy; <a
      href=\"https://carto.com/attribution\">CARTO</a>';\r

      \  //maps: http://bl.ocks.org/Xatpy/raw/854297419bd7eb3421d0/\r

      \  // var layer =
      L.tileLayer('https://cartocdn_{s}.global.ssl.fastly.net/base-antique/{z}/\
      {x}/{y}.png', { attribution: cartodbAttribution }).addTo(map);\r

      \  // var layer =
      L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',
      { attribution: cartodbAttribution }).addTo(map);\r

      \  var layer =
      L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',
      { attribution: cartodbAttribution }).addTo(map);\r

      \  //var layer =
      L.tileLayer('http://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}.p\
      ng', { attribution: cartodbAttribution }).addTo(map);\r

      \  //var layer =
      L.tileLayer('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', {
      attribution: cartodbAttribution }).addTo(map);\r

      \  //var layer =
      L.tileLayer('https://cartocdn_{s}.global.ssl.fastly.net/base-eco/{z}/{x}/\
      {y}.png', { attribution: cartodbAttribution }).addTo(map);\r

      \  //var layer =
      L.tileLayer('https://cartocdn_{s}.global.ssl.fastly.net/base-midnight/{z}\
      /{x}/{y}.png', { attribution: cartodbAttribution }).addTo(map);\r

      \  map.setView([0, 0], 0);\r

      \  return;\r

      \  setView(center, zoom); \r

      \  flyTo(center, zoom); \r

      \  zoomIn() / zoomIn(delta); \r

      \  zoomOut() / zoomOut(delta); \r

      \  setZoomAround(fixedPoint, zoom); \r

      \  fitBounds(bounds);  \r

      }\r\n"
    sig: function mist(){}
    region: var (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf\helpers.js
    datetime: 2022-10-07-10-37
    timestamp: 1665164235531.332
    size: 10224
  test1:
    name: test1
    code: "function test1(map) {\r

      \  var baseballIcon = L.icon({\r

      \    iconUrl: '../leaf94/baseball-marker.png',\r

      \    iconSize: [32, 37],\r

      \    iconAnchor: [16, 37],\r

      \    popupAnchor: [0, -28]\r

      \  });\r

      \  function onEachFeature(feature, layer) {\r

      \    var popupContent = '<p>I started out as a GeoJSON ' +\r

      \      feature.geometry.type + ', but now I\\'m a Leaflet
      vector!</p>';\r

      \    if (feature.properties && feature.properties.popupContent) {\r

      \      popupContent += feature.properties.popupContent;\r

      \    }\r

      \    layer.bindPopup(popupContent);\r

      \  }\r

      \  /* global campus, bicycleRental, freeBus, coorsField */\r

      \  var bicycleRentalLayer = L.geoJSON([bicycleRental, campus], {\r

      \    style: function (feature) {\r

      \      return feature.properties && feature.properties.style;\r

      \    },\r

      \    onEachFeature: onEachFeature,\r

      \    pointToLayer: function (feature, latlng) {\r

      \      return L.circleMarker(latlng, {\r

      \        radius: 8,\r

      \        fillColor: '#ff7800',\r

      \        color: '#000',\r

      \        weight: 1,\r

      \        opacity: 1,\r

      \        fillOpacity: 0.8\r

      \      });\r

      \    }\r

      \  }).addTo(map);\r

      \  var freeBusLayer = L.geoJSON(freeBus, {\r

      \    filter: function (feature, layer) {\r

      \      if (feature.properties) {\r

      \        return feature.properties.underConstruction !== undefined ?
      !feature.properties.underConstruction : true;\r

      \      }\r

      \      return false;\r

      \    },\r

      \    onEachFeature: onEachFeature\r

      \  }).addTo(map);\r

      \  var coorsLayer = L.geoJSON(coorsField, {\r

      \    pointToLayer: function (feature, latlng) {\r

      \      return L.marker(latlng, { icon: baseballIcon });\r

      \    },\r

      \    onEachFeature: onEachFeature\r

      \  }).addTo(map);\r

      }\r\n"
    sig: function test1(map){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf91\start.js
    datetime: 2022-10-07-11-27
    timestamp: 1665167277943.0964
    size: 3875
  color_by_area:
    name: color_by_area
    code: "function color_by_area(colormap_name = 'autumn') {\r

      \  const min = 1e8; \r

      \  const max = 2e13; \r

      \  const steps = 50;\r

      \  const ramp = colorMap({\r

      \    colormap: colormap_name,\r

      \    nshades: steps,\r

      \  });\r

      \  function clamp(value, low, high) {\r

      \    return Math.max(low, Math.min(value, high));\r

      \  }\r

      \  function getColor(feature) {\r

      \    let geo = feature.getGeometry(); let type = geo.getType();\r

      \    let isPoly = type.includes('Polygon'); \r

      \    if (!isPoly) { console.log('not a poly', type); return '#ff0';
      }\r

      \    const area = ol.sphere.getArea(feature.getGeometry());\r

      \    const f = Math.pow(clamp((area - min) / (max - min), 0, 1), 1 /
      2);\r

      \    const index = Math.round(f * (steps - 1));\r

      \    return ramp[index];\r

      \  }\r

      \  return getColor;\r

      }\r\n"
    sig: function color_by_area(colormap_name = 'autumn'){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\openlayers\map\maphelpers.js
    datetime: 2022-10-07-10-41
    timestamp: 1665164483947.056
    size: 4494
  capitals_in_red:
    name: capitals_in_red
    code: "function capitals_in_red(feature) {\r

      \  console.log('feature data', feature.data);\r

      \  let type = lookup(feature, ['data', 'type']);\r

      \  console.log('city', lookup(feature, ['data', 'name']), ':',
      type)\r

      \  return type == 'capital' ? 'red' : 'yellow';\r

      }\r\n"
    sig: function capitals_in_red(feature){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\openlayers\map\maphelpers.js
    datetime: 2022-10-07-10-41
    timestamp: 1665164483947.056
    size: 4494
  get_style_func:
    name: get_style_func
    code: "function get_style_func(func, bg, fg) {\r

      \  let res = (feature) => {\r

      \    return new ol.style.Style({\r

      \      fill: new ol.style.Fill({\r

      \        color: valf(func(feature), bg)\r

      \      }),\r

      \      stroke: new ol.style.Stroke({\r

      \        color: fg,\r

      \      }),\r

      \    });\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function get_style_func(func, bg, fg){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\openlayers\map\maphelpers.js
    datetime: 2022-10-07-10-41
    timestamp: 1665164483947.056
    size: 4494
  get_style:
    name: get_style
    code: "function get_style(bg, fg) {\r

      \  let res = new ol.style.Style({\r

      \    fill: new ol.style.Fill({ color: bg }),\r

      \    stroke: new ol.style.Stroke({ color: fg }),\r

      \  });\r

      \  return res;\r

      }\r\n"
    sig: function get_style(bg, fg){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\openlayers\map\maphelpers.js
    datetime: 2022-10-07-10-41
    timestamp: 1665164483947.056
    size: 4494
  get_cities_and_capitals:
    name: get_cities_and_capitals
    code: "async function get_cities_and_capitals() {\r

      \  let cities = await
      route_path_yaml_dict('../base/assets/cities.yaml');\r

      \  let cont_by_country = {};\r

      \  for (const continent in Geo.continents) {\r

      \    for (const country of Geo.continents[continent]) {\r

      \      cont_by_country[country] = continent;\r

      \    }\r

      \  }\r

      \  let res = {}; let capitals = []; \r

      \  for (const c in cities) {\r

      \    let s = cities[c];\r

      \    let ws = s.split(',').map(x => x.trim());\r

      \    let o = { name: c, lon: Number(ws[0]), lat: Number(ws[1]),
      country: ws[2], type: ws[3], pop: Number(ws[4]) };\r

      \    o.center = [o.lat, o.lon];\r

      \    if (o.type == 'capital') capitals.push(c);\r

      \    o.continent=cont_by_country[o.country];\r

      \    if (nundef(o.continent)) {console.log('no continent
      for',o.country); break; }\r

      \    res[c.toLowerCase()] = o;\r

      \  }\r

      \  Geo.cities = res;\r

      \  Geo.capitals = capitals;\r

      }\r\n"
    sig: async function get_cities_and_capitals(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  set_style_from_options:
    name: set_style_from_options
    code: "function set_style_from_options(layer, options={}) {\r

      \  let style = isdef(options.colorfunc) ?
      get_style_func(options.colorfunc, valf(options.bg, 'lime'),
      valf(options.fg, 'orange'))\r

      \    : get_style(valf(options.bg, 'yellow'), valf(options.fg,
      'yellow'));\r

      \  layer.setStyle(style);\r

      }\r\n"
    sig: function set_style_from_options(layer, options={}){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\openlayers\map\maphelpers.js
    datetime: 2022-10-07-10-41
    timestamp: 1665164483947.056
    size: 4494
  map_add_object:
    name: map_add_object
    code: "function map_add_object(o, options={}) {\r

      \  let layer = valf(options.layer, M.map.getLayers()[0]);\r

      \  let [lon, lat] = [valf(options.lon, o.lon, 16), valf(options.lat,
      o.lat, 48)];\r

      \  let shape = valf(options.shape, 'circle');\r

      \  let center = ol.proj.fromLonLat([lon, lat]);\r

      \  let feature;\r

      \  switch (shape) {\r

      \    default: feature = new ol.Feature({ geometry: new
      ol.geom.Circle(center, 25000), data: o }); break;\r

      \  }\r

      \  layer.getSource().addFeature(feature);\r

      \  return feature;\r

      }\r\n"
    sig: function map_add_object(o, options={}){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\openlayers\map\maphelpers.js
    datetime: 2022-10-07-10-41
    timestamp: 1665164483947.056
    size: 4494
  map_add_layer:
    name: map_add_layer
    code: "function map_add_layer(key = 'osm') {\r

      \  let layer;\r

      \  if (key == 'osm') {\r

      \    layer =
      L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a
      href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>',
      subdomains: ['a', 'b', 'c'] });\r

      \  }else if (key == 'watercolor'){\r

      \    let url =
      'https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.jpg';\r

      \  } else if (startsWith(key, 'mb')) {\r

      \    let url =
      'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.\
      eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214A\
      riISLbB6B5aw';\r

      \    let id = key.includes('sat') ? 'mapbox/satellite-v9' :
      'mapbox/streets-v11';\r

      \    layer = L.tileLayer(url, { id: id, tileSize: 512, zoomOffset:
      -1, attribution: 'Map data &copy; <a
      href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'
      });\r

      \  } else if (key.includes('top')) {\r

      \    layer =
      L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\r

      \      maxZoom: 22,\r

      \      attribution: 'Map data: &copy; <a
      href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map
      style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a
      href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\r

      \    });\r

      \  }\r

      \  layer.addTo(M.map);\r

      \  return layer;\r

      }\r\n"
    sig: function map_add_layer(key = 'osm'){}
    region: map (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf\maphelpers.js
    datetime: 2022-10-09-09-20
    timestamp: 1665332440568.0818
    size: 2230
  map_init_OSM:
    name: map_init_OSM
    code: "function map_init_OSM() {\r

      \  return new ol.Map({\r

      \    target: 'map-container',\r

      \    layers: [\r

      \      new ol.layer.Tile({\r

      \        source: new ol.source.OSM(),\r

      \      }),\r

      \    ],\r

      \    view: new ol.View({ center: ol.proj.fromLonLat([0, 0]), zoom:
      2, }),\r

      \  });\r

      }\r\n"
    sig: function map_init_OSM(){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\openlayers\map\maphelpers.js
    datetime: 2022-10-07-10-41
    timestamp: 1665164483947.056
    size: 4494
  map_init:
    name: map_init
    code: "function map_init(dParent, city, zoom) {\r

      \  let o=M.cities[city];\r

      \  let center = [o.lat,o.lon];\r

      \  var map = L.map(dParent, { center: center, minZoom: 2, zoom: zoom
      });\r

      \  return map;\r

      }\r\n"
    sig: function map_init(dParent, city, zoom){}
    region: map (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leaf\maphelpers.js
    datetime: 2022-10-09-09-20
    timestamp: 1665332440568.0818
    size: 2230
  get_layer_options:
    name: get_layer_options
    code: "function get_layer_options() {\r

      \  return {\r

      \    \"OSM\": osmBase,\r

      \    \"OpenCycleMap\": OpenCycleMap,\r

      \    \"StamenWatercolor\": StamenWatercolor,\r

      \  };\r

      \  return {\r

      \    'OpenStreetMap Default':
      L.tileLayer.provider('OpenStreetMap.Mapnik'),\r

      \    'OpenStreetMap German Style':
      L.tileLayer.provider('OpenStreetMap.DE'),\r

      \    'OpenStreetMap H.O.T.':
      L.tileLayer.provider('OpenStreetMap.HOT'),\r

      \    'Thunderforest OpenCycleMap':
      L.tileLayer.provider('Thunderforest.OpenCycleMap', { apikey:
      '87e7668535754c798ef4870cadbeb2ab' }),\r

      \    'Thunderforest Landscape':
      L.tileLayer.provider('Thunderforest.Landscape', { apikey:
      '87e7668535754c798ef4870cadbeb2ab' }),\r

      \    'Thunderforest Atlas':
      L.tileLayer.provider('Thunderforest.Atlas', { apikey:
      '87e7668535754c798ef4870cadbeb2ab' }),\r

      \    'Thunderforest Transport':
      L.tileLayer.provider('Thunderforest.Transport', { apikey:
      '87e7668535754c798ef4870cadbeb2ab' }),\r

      \    'Stamen Toner': L.tileLayer.provider('Stamen.Toner'),\r

      \    'Stamen Terrain': L.tileLayer.provider('Stamen.Terrain'),\r

      \    'Stamen Watercolor':
      L.tileLayer.provider('Stamen.Watercolor'),\r

      \    'Jawg Streets': L.tileLayer.provider('Jawg.Streets', { apikey:
      'DBmQfjladcdInyiIKKel1mAI428eYlXfZG26VCU6PvwEGLQ1QvoIqCl0k7I41eAv' }),\r

      \    'Jawg Terrain': L.tileLayer.provider('Jawg.Terrain', { apikey:
      'DBmQfjladcdInyiIKKel1mAI428eYlXfZG26VCU6PvwEGLQ1QvoIqCl0k7I41eAv' }),\r

      \    'Jawg Test': L.tileLayer.provider('Jawg.Test', { apikey:
      'DBmQfjladcdInyiIKKel1mAI428eYlXfZG26VCU6PvwEGLQ1QvoIqCl0k7I41eAv' }),\r

      \    'Esri WorldStreetMap':
      L.tileLayer.provider('Esri.WorldStreetMap'),\r

      \    //'Esri DeLorme': L.tileLayer.provider('Esri.DeLorme'), max
      zoom 12\r

      \    'Esri WorldTopoMap':
      L.tileLayer.provider('Esri.WorldTopoMap'),\r

      \    'Esri WorldImagery':
      L.tileLayer.provider('Esri.WorldImagery'),\r

      \    'Esri NatGeoWorldMap':
      L.tileLayer.provider('Esri.NatGeoWorldMap'), \r

      \    'Esri WorldGrayCanvas':
      L.tileLayer.provider('Esri.WorldGrayCanvas'),\r

      \  }\r

      }\r\n"
    sig: function get_layer_options(){}
    region: var (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leafp\helpers.js
    datetime: 2022-10-09-09-08
    timestamp: 1665331681428.4597
    size: 5422
  toggle_layers_control:
    name: toggle_layers_control
    code: "function toggle_layers_control() {\r

      \  if (DA.layers_control) { M.map.removeControl(DA.layers_control);
      DA.layers_control = null; } \r

      \  else {\r

      \    let baseLayers = get_layer_options();\r

      \    let overlayLayers = get_layer_options();\r

      \    DA.layers_control = L.control.layers(baseLayers, overlayLayers,
      { collapsed: false })\r

      \    DA.layers_control.addTo(M.map);\r

      \  }\r

      }\r\n"
    sig: function toggle_layers_control(){}
    region: var (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\all\leaflet\leafp\helpers.js
    datetime: 2022-10-09-09-08
    timestamp: 1665331681428.4597
    size: 5422
  create_map:
    name: create_map
    code: "function create_map(o = {}) {\r

      \  addKeys({ maxBounds: [[-89.98155760646617, -180],
      [89.99346179538875, 180]], key: 'osm', center:
      Geo.places.tuerkenschanzpark, zoom: 17, id: 'map' }, o);\r

      \  let info = Geo.layerInfo[o.key];\r

      \  o.layers = [isdef(info) ? L.tileLayer(info.url, info.options) :
      L.tileLayer('')];\r

      \  let map = L.map(o.id, o);\r

      \  return map;\r

      }\r\n"
    sig: function create_map(o = {}){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  get_img_html:
    name: get_img_html
    code: "function get_img_html(path, styles, classes) {\r

      \  let img = mImage(path, null, styles, classes);\r

      \  let x = img.outerHTML;\r

      \  return img.outerHTML;\r

      }\r\n"
    sig: function get_img_html(path, styles, classes){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  handle_connect:
    name: handle_connect
    code: "function handle_connect(id) { console.log('connected', id);
      io.emit('message', 'someone logged in!'); }\r\n"
    sig: function handle_connect(id){}
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: func
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  handle_disconnect:
    name: handle_disconnect
    code: "function handle_disconnect(x) { console.log('disconnected', x);
      io.emit('message',x); }\r\n"
    sig: function handle_disconnect(x){}
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: func
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  handle_update:
    name: handle_update
    code: "function handle_update(x){ console.log('got update', x);
      io.emit('update',x);}\r\n"
    sig: function handle_update(x){}
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: func
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  get_poly_center:
    name: get_poly_center
    code: "function get_poly_center(fpoly) {\r

      \  let c2 = my_poly_center(fpoly);\r

      \  if (!c2) {\r

      \    console.log('NEIN!!!!!!!!!!!');\r

      \    let polygon = L.polygon(fpoly.geometry.coordinates);\r

      \    let bounds = polygon.getBounds();\r

      \    let center = bounds.getCenter();\r

      \    center = [center.lng, center.lat]; \r

      \    c2 = center;\r

      \  }\r

      \  return c2;\r

      }\r\n"
    sig: function get_poly_center(fpoly){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\baustelle.js
    datetime: 2022-10-14-11-22
    timestamp: 1665771771358.2424
    size: 8356
  single_poly_feature:
    name: single_poly_feature
    code: "function single_poly_feature(f) {\r

      \  if (f.geometry.type == 'MultiPolygon') {\r

      \    let max_area_polygon;\r

      \    let max_area = 0;\r

      \    for (poly in (f.geometry.coordinates)) {\r

      \      let polygon1 = turf.polygon((f.geometry.coordinates)[poly])\r

      \      area = turf.area(polygon1);\r

      \      if (area > max_area) {\r

      \        max_area = area\r

      \        max_area_polygon = polygon1; \r

      \      }\r

      \    }\r

      \    return max_area_polygon;\r

      \  } else return f;\r

      }\r\n"
    sig: function single_poly_feature(f){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\baustelle.js
    datetime: 2022-10-14-11-22
    timestamp: 1665771771358.2424
    size: 8356
  extract_polygon:
    name: extract_polygon
    code: "function extract_polygon(f) {\r

      \  var polygon = L.polygon(f.geometry.coordinates);\r

      \  if (f.geometry.type == 'MultiPolygon') {\r

      \    let max_area_polygon;\r

      \    let max_area = 0;\r

      \    for (poly in (f.geometry.coordinates)) {\r

      \      let polygon1 = turf.polygon((f.geometry.coordinates)[poly])\r

      \      area = turf.area(polygon1);\r

      \      if (area > max_area) {\r

      \        max_area = area\r

      \        max_area_polygon = polygon1; \r

      \      }\r

      \    }\r

      \    console.log('turf', turf)\r

      \    console.log('polymax', max_area_polygon)\r

      \    polygon = L.polygon(max_area_polygon.geometry.coordinates);\r

      \  }\r

      \  return polygon;\r

      }\r\n"
    sig: function extract_polygon(f){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\baustelle.js
    datetime: 2022-10-14-11-22
    timestamp: 1665771771358.2424
    size: 8356
  my_poly_center:
    name: my_poly_center
    code: "function my_poly_center(f) {\r

      \  let pts = points_from_feature(f);\r

      \  let c2 = get_polygon_centroid(pts);\r

      \  if (isNaN(c2.x) || isNaN(c2.y)) return null;\r

      \  center = [c2.y, c2.x];\r

      \  return center;\r

      }\r\n"
    sig: function my_poly_center(f){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\baustelle.js
    datetime: 2022-10-14-11-22
    timestamp: 1665771771358.2424
    size: 8356
  points_from_feature:
    name: points_from_feature
    code: "function points_from_feature(f) {\r

      \  let coords = f.geometry.coordinates;\r

      \  let pts = [];\r

      \  for (const c of coords[0]) {\r

      \    let p = { x: c[0], y: c[1] };\r

      \    pts.push(p);\r

      \  }\r

      \  return pts;\r

      }\r\n"
    sig: function points_from_feature(f){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\baustelle.js
    datetime: 2022-10-14-11-22
    timestamp: 1665771771358.2424
    size: 8356
  get_polygon_centroid:
    name: get_polygon_centroid
    code: "function get_polygon_centroid(pts) {\r

      \  var first = pts[0], last = pts[pts.length - 1];\r

      \  if (first.x != last.x || first.y != last.y) pts.push(first);\r

      \  var twicearea = 0,\r

      \    x = 0, y = 0,\r

      \    nPts = pts.length,\r

      \    p1, p2, f;\r

      \  for (var i = 0, j = nPts - 1; i < nPts; j = i++) {\r

      \    p1 = pts[i]; p2 = pts[j];\r

      \    f = p1.x * p2.y - p2.x * p1.y;\r

      \    twicearea += f;\r

      \    x += (p1.x + p2.x) * f;\r

      \    y += (p1.y + p2.y) * f;\r

      \  }\r

      \  f = twicearea * 3;\r

      \  return { x: x / f, y: y / f };\r

      }\r\n"
    sig: function get_polygon_centroid(pts){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\baustelle.js
    datetime: 2022-10-14-11-22
    timestamp: 1665771771358.2424
    size: 8356
  start0:
    name: start0
    code: "async function start0() {\r

      \  TESTING = 'nosockets'; \r

      \  if (TESTING != 'nosockets') {\r

      \    Socket = TESTING == 'live' ? io('http://127.0.0.1:3000') :
      TESTING == 'nginx' ? io('http://216.250.112.218:3000') : io();\r

      \    Socket.on('message', x => console.log('got message', x));\r

      \    Socket.on('disconnect', x => console.log('got disconnect',
      x));\r

      \    Socket.on('update', x => console.log('got update', x));\r

      \  }\r

      \  let [citylist, capitals] = [M.cities, M.capitals] = await
      get_cities_and_capitals();\r

      \  await load_syms();\r

      \  let list = dict2list(citylist).filter(x => x.pop > 1000000 &&
      x.type == 'capital');\r

      \  console.log('list', list);\r

      \  let cities = M.layers.cities = L.layerGroup();\r

      \  let markers = M.markers = [];\r

      \  for (const c of list) {\r

      \    let m = L.marker(c.center).bindPopup(c.name);\r

      \    addKeys(c, m);\r

      \    markers.push(m);\r

      \  }\r

      \  M.layers = {};\r

      \  cities.type == 'overlay';\r

      \  let osm = M.layers.osm = get_layer('osm', { opacity: 1, type:
      'base' });\r

      \  let map = M.map = L.map('map', { center:
      Geo.places.tuerkenschanzpark, zoom: 2, layers: [osm, cities] });\r

      \  var baseMaps = { osm: osm }; \r

      \  var overlayMaps = { cities: citylist }; \r

      \  var layerControl = M.layer_control = L.control.layers(baseMaps,
      overlayMaps).addTo(map);\r

      \  return;\r

      \  let players = [{ name: 'felix', city: 'Paris' }, { name:
      'amanda', city: 'Vienna' }, { name: 'mimi', city: 'Madrid' }];\r

      \  M.markers = {};\r

      \  players.map(x => M.markers[x.name] = get_marker(map,
      citylist[x.city].center, { user: x.name, draggable: true }));\r

      \  map.on('zoomend', ev => {\r

      \    let x = ev.target;\r

      \    dZoom.innerHTML = 'zoom: ' + x.getZoom();\r

      \  });\r

      \  console.log('marker in geojson: ',
      M.markers.felix.toGeoJSON());\r

      \  map.on('click', function (e) {\r

      \    document.getElementById('dPosition').innerHTML =\r

      \      \"Lat, Lon : \" + e.latlng.lat + \", \" + e.latlng.lng;\r

      \  });\r

      \  L.streetView({ position: 'topleft', mapillaryId:
      'RC1ZRTBfaVlhWmJmUGVqRk5CYnAxQTpmMGE3OTU0MzM0MTljZTA4' }).addTo(map);\r

      \  var marker = L.marker(map.getCenter()).addTo(map);\r

      \  map.on('move', function () { marker.setLatLng(map.getCenter());
      });\r

      }\r\n"
    sig: async function start0(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\baustelle.js
    datetime: 2022-10-14-11-22
    timestamp: 1665771771358.2424
    size: 8356
  start_leaflet:
    name: start_leaflet
    code: "async function start_leaflet() {\r

      \  TESTING = 'nosockets'; \r

      \  if (TESTING != 'nosockets') {\r

      \    Socket = TESTING == 'live' ? io('http://127.0.0.1:3000') :
      TESTING == 'nginx' ? io('http://216.250.112.218:3000') : io();\r

      \    Socket.on('message', x => console.log('got message', x));\r

      \    Socket.on('disconnect', x => console.log('got disconnect',
      x));\r

      \    Socket.on('update', x => console.log('got update', x));\r

      \  }\r

      \  var cities = L.layerGroup();\r

      \  var mLittleton = L.marker([39.61, -105.02]).bindPopup('This is
      Littleton, CO.').addTo(cities);\r

      \  var mDenver = L.marker([39.74, -104.99]).bindPopup('This is
      Denver, CO.').addTo(cities);\r

      \  var mAurora = L.marker([39.73, -104.8]).bindPopup('This is
      Aurora, CO.').addTo(cities);\r

      \  var mGolden = L.marker([39.77, -105.23]).bindPopup('This is
      Golden, CO.').addTo(cities);\r

      \  var mbAttr = 'Map data &copy; <a
      href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>';\r

      \  var mbUrl =
      'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.\
      eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214A\
      riISLbB6B5aw';\r

      \  var streets = L.tileLayer(mbUrl, { id: 'mapbox/streets-v11',
      tileSize: 512, zoomOffset: -1, attribution: mbAttr });\r

      \  var osm =
      L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r

      \    maxZoom: 19,\r

      \    attribution: '&copy; <a
      href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r

      \  });\r

      \  var map = L.map('map', {\r

      \    center: [39.73, -104.99],\r

      \    zoom: 10,\r

      \    layers: [osm, cities]\r

      \  });\r

      \  var baseLayers = {\r

      \    'OpenStreetMap': osm,\r

      \    'Streets': streets\r

      \  };\r

      \  var overlays = {\r

      \    'Cities': cities\r

      \  };\r

      \  var layerControl = L.control.layers(baseLayers,
      overlays).addTo(map);\r

      \  var crownHill = L.marker([39.75, -105.09]).bindPopup('This is
      Crown Hill Park.');\r

      \  var rubyHill = L.marker([39.68, -105.00]).bindPopup('This is Ruby
      Hill Park.');\r

      \  var parks = L.layerGroup([crownHill, rubyHill]);\r

      \  var satellite = L.tileLayer(mbUrl, { id: 'mapbox/satellite-v9',
      tileSize: 512, zoomOffset: -1, attribution: mbAttr });\r

      \  layerControl.addBaseLayer(satellite, 'Satellite');\r

      \  layerControl.addOverlay(parks, 'Parks');\r

      }\r\n"
    sig: async function start_leaflet(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\baustelle.js
    datetime: 2022-10-14-11-22
    timestamp: 1665771771358.2424
    size: 8356
  get_circle:
    name: get_circle
    code: "function get_circle(center, styles = {}) {\r

      \  addKeys({ opacity: isdef(styles.bg) ? 1 : 0, sz: 10, fg: 'black'
      }, styles)\r

      \  styles = styles_to_leaflet_options(styles);\r

      \  styles.x = center.lon; styles.y = center.lat; styles.center =
      center;\r

      \  return L.circle(center, styles);\r

      }\r\n"
    sig: function get_circle(center, styles = {}){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\start.js
    datetime: 2022-10-15-07-59
    timestamp: 1665845941280.0645
    size: 4280
  mcreate_map:
    name: mcreate_map
    code: "function mcreate_map(opts) {\r

      \  let center = M.center = valf(opts.center,
      Geo.places.tuerkenschanzpark);\r

      \  let zoom = M.zoom = valf(opts.zoom, 19);\r

      \  let [minzoom, maxzoom] = [M.minzoom, M.maxzoom] = [2, 19];\r

      \  let map = mget_map(center, zoom);\r

      \  mset_bounds(minzoom, maxzoom);\r

      \  mset_layers(opts.base, opts.overlay);\r

      \  return map;\r

      }\r\n"
    sig: function mcreate_map(opts){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  mget_map:
    name: mget_map
    code: "function mget_map(center = Geo.places.tuerkenschanzpark, zoom = 17) {\r

      \  M.center = center;\r

      \  M.zoom = zoom;\r

      \  let map = M.map = L.map('map').setView(center, zoom);\r

      \  return map;\r

      }\r\n"
    sig: function mget_map(center = Geo.places.tuerkenschanzpark, zoom = 17){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  mset_bounds:
    name: mset_bounds
    code: "function mset_bounds(minzoom = 2, maxzoom = 20) {\r

      \  let map = M.map;\r

      \  map.options.minZoom = minzoom; \r

      \  map.options.maxZoom = maxzoom; \r

      \  var southWest = L.latLng(-89.98155760646617, -180),\r

      \    northEast = L.latLng(89.99346179538875, 180);\r

      \  var bounds = L.latLngBounds(southWest, northEast);\r

      \  map.setMaxBounds(bounds);\r

      \  map.on('drag', function () {\r

      \    map.panInsideBounds(bounds, { animate: false });\r

      \  });\r

      }\r\n"
    sig: function mset_bounds(minzoom = 2, maxzoom = 20){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  mset_layers:
    name: mset_layers
    code: "function mset_layers(base, overlay) {\r

      \  let map = M.map;\r

      \  [base, overlay] = [toWords(base), toWords(overlay)];\r

      \  let baseLayers = {}, overlays = {};\r

      \  M.layers = {};\r

      \  for (const k of base) {\r

      \    let l = _get_layer(k, { opacity: 1 });\r

      \    l.overlay = false;\r

      \    l.key = k;\r

      \    M.layers[k] = baseLayers[k] = l;\r

      \  }\r

      \  for (const k of overlay) {\r

      \    let l = get_layer(k, { opacity: .5 });\r

      \    l.overlay = true;\r

      \    l.key = k;\r

      \    M.layers['ov_' + k] = overlays[k] = l;\r

      \  }\r

      \  M.layer_control = L.control.layers(baseLayers,
      overlays).addTo(map);\r

      \  baseLayers[base[0]].addTo(map);\r

      \  overlays[overlay[0]].addTo(map);\r

      }\r\n"
    sig: function mset_layers(base, overlay){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  _get_layer:
    name: _get_layer
    code: "function _get_layer(key, options) {\r

      \  let o = Geo.layerInfo[key];\r

      \  if (nundef(o)) o = Geo.layerInfo.empty;\r

      \  copyKeys(options, o.options);\r

      \  return L.tileLayer(o.url, o.options);\r

      }\r\n"
    sig: function _get_layer(key, options){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  get_layer:
    name: get_layer
    code: "function get_layer(key, options) {\r

      \  let o = Geo.layerInfo[key];\r

      \  if (nundef(o)) o = Geo.layerInfo.empty;\r

      \  copyKeys(options, o.options);\r

      \  let l = L.tileLayer(o.url, o.options);\r

      \  addKeys(options, l);\r

      \  return l;\r

      }\r\n"
    sig: function get_layer(key, options){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  get_marker:
    name: get_marker
    code: "function get_marker(map, center, options = {}) {\r

      \  let path;\r

      \  if (isdef(options.user)) path = '../base/assets/users/' +
      options.user + '.jpg';\r

      \  else if (isdef(options.icon)) path = '../base/assets/icons/' +
      options.icon + '.png';\r

      \  else if (isdef(options.path)) path = options.path;\r

      \  let marker;\r

      \  if (nundef(path)) {\r

      \    marker = L.marker(center, options);\r

      \  } else {\r

      \    let [w, h] = [valf(options.w, options.sz, 50), valf(options.h,
      options.sz, 50)];\r

      \    addKeys({ w: w, h: h, border: `solid medium ${BLUE}`, bg:
      colorTrans(BLUE, .5), rounding: '50%', box: true }, options);\r

      \    let myIcon = L.divIcon({\r

      \      className: 'custom-div-icon',\r

      \      html: get_img_html(path, options), \r

      \      tooltipAnchor: [5, h / 4], \r

      \      popupAnchor: [w / 2 - 5, -5],\r

      \    });\r

      \    copyKeys({ icon: myIcon }, options)\r

      \    marker = L.marker(center, options);\r

      \  }\r

      \  if (isdef(options.tooltip)) {
      marker.bindTooltip(options.tooltip).addTo(map); }\r

      \  if (isdef(options.tooltip)) {
      marker.bindPopup(options.popup).addTo(map); }\r

      \  return marker.addTo(map);\r

      }\r\n"
    sig: function get_marker(map, center, options = {}){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  styles_to_leaflet_options:
    name: styles_to_leaflet_options
    code: "function styles_to_leaflet_options(o) {\r

      \  let res = {};\r

      \  let di = {\r

      \    fg: 'color', bg: 'fillColor', opacity: 'fillOpacity', sz:
      'radius'\r

      \  };\r

      \  for (const k in o) {\r

      \    if (k == 'sz') o[k] /= 2;\r

      \    res[isdef(di[k]) ? di[k] : k] = o[k];\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function styles_to_leaflet_options(o){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  mapzeug_sample_code:
    name: mapzeug_sample_code
    code: "function mapzeug_sample_code() {\r

      \  //#region sample code marker, circle and on drag handler\r

      \  M.markers.nasi = get_marker(map, center, { user: 'nasi',
      draggable: true });\r

      \  M.shapes = {};\r

      \  M.shapes.nasi = get_circle(center, { sz: 1000, bg: GREEN
      }).addTo(map);\r

      \  M.markers.nasi.on('drag', function (e) {\r

      \    var d = map.distance(e.latlng, M.shapes.nasi.getLatLng()); \r

      \    var isInside = d < M.shapes.nasi.getRadius();\r

      \    console.log('inside?', isInside ? 'YES' : 'NO');\r

      \    M.shapes.nasi.setStyle({ fillColor: isInside ? 'green' : '#f03'
      }); \r

      \  });\r

      \  //#endregion\r

      }\r\n"
    sig: function mapzeug_sample_code(){}
    region: funcs (maphelpers.js)
    filename: maphelpers.js
    type: func
    fname: maphelpers.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\maphelpers.js
    datetime: 2022-10-16-07-12
    timestamp: 1665929561771.223
    size: 4901
  test6:
    name: test6
    code: "function test6(map, p1, p2) {\r

      \  let control = M.control = L.Routing.control({\r

      \    waypoints: points_to_waypoints(p1, p2),\r

      \    lineOptions: { styles: [{ color: '#006a4e', opacity: 1, weight:
      5 }], },\r

      \    draggableWaypoints: false,\r

      \    createMarker: function () { return false; },\r

      \    show: false,\r

      \  }).addTo(map);\r

      \  M.coords = [];\r

      \  control.on('routesfound', function (e) {\r

      \    M.routes = e.routes;\r

      \    M.num_requests = e.target._requestCount;\r

      \    M.coords = arrExtend(M.coords, e.routes[0].coordinates);\r

      \    console.log('M', M)\r

      \  });\r

      }\r\n"
    sig: function test6(map, p1, p2){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\start.js
    datetime: 2022-10-21-05-52
    timestamp: 1666356769972.4026
    size: 6890
  test4_get_waypoints:
    name: test4_get_waypoints
    code: "function test4_get_waypoints(mymap, p1, p2) {\r

      \  var routeData = L.Routing.control({\r

      \    waypoints: points_to_waypoints(p1, p2),\r

      \    lineOptions: { styles: [{ color: '#006a4e', opacity: 1, weight:
      5 }], },\r

      \    draggableWaypoints: false,\r

      \    createMarker: function () { return false; },\r

      \    show: false,\r

      \  }).addTo(mymap);\r

      \  var routeArray = new Array();\r

      \  routeArray = routeData.getWaypoints();\r

      \  console.log(routeArray);\r

      \  return routeData;\r

      \  L.motion.polyline([[52.501737, -2.119792], [52.501267,
      -2.114707], [52.500313, -2.110361], [52.499243, -2.108751], [52.498596,
      -2.105886], [52.498812, -2.104953], [52.498798, -2.102591]], {\r

      \    color: \"transparent\"\r

      \  }, {\r

      \    auto: true,\r

      \    duration: 30000,\r

      \    easing: L.Motion.Ease.easeInOutQuart\r

      \  }, {\r

      \    removeOnEnd: false,\r

      \    showMarker: true,\r

      \    icon: L.icon({ iconUrl: 'marker.png', iconSize: [32, 37] })\r

      \  }).addTo(mymap);\r

      }\r\n"
    sig: function test4_get_waypoints(mymap, p1, p2){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\start.js
    datetime: 2022-10-21-05-52
    timestamp: 1666356769972.4026
    size: 6890
  test3_mapbounds:
    name: test3_mapbounds
    code: "function test3_mapbounds() {\r

      \  var map = L.map('map');\r

      \  map.setView(Geo.places.vegagasse, 16)\r

      \  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      {\r

      \    attribution: '© OpenStreetMap contributors'\r

      \  }).addTo(map);\r

      \  let b = map.getBounds();\r

      \  console.log('b', b._southWest, b._northEast);\r

      \  let [p1, p2] = [[b._southWest.lat, b._southWest.lng],
      [b._northEast.lat, b._northEast.lng]];\r

      \  M = get_route_control(map, p1, p2);\r

      }\r\n"
    sig: function test3_mapbounds(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\start.js
    datetime: 2022-10-21-05-52
    timestamp: 1666356769972.4026
    size: 6890
  get_route_control:
    name: get_route_control
    code: "function get_route_control(map, p1, p2) {\r

      \  return L.Routing.control({\r

      \    waypoints: [\r

      \      L.latLng(p1[0], p1[1]),\r

      \      L.latLng(p2[0], p2[1])\r

      \    ],\r

      \    waypointNameFallback: function (latLng) {\r

      \      function zeroPad(n) {\r

      \        n = Math.round(n);\r

      \        return n < 10 ? '0' + n : n;\r

      \      }\r

      \      function sexagesimal(p, pos, neg) {\r

      \        var n = Math.abs(p),\r

      \          degs = Math.floor(n),\r

      \          mins = (n - degs) * 60,\r

      \          secs = (mins - Math.floor(mins)) * 60,\r

      \          frac = Math.round((secs - Math.floor(secs)) * 100);\r

      \        return (n >= 0 ? pos : neg) + degs + '°' +\r

      \          zeroPad(mins) + '\\'' +\r

      \          zeroPad(secs) + '.' + zeroPad(frac) + '\"';\r

      \      }\r

      \      return sexagesimal(latLng.lat, 'N', 'S') + ' ' +
      sexagesimal(latLng.lng, 'E', 'W');\r

      \    },\r

      \    routeWhileDragging: true\r

      \  }).addTo(map);\r

      }\r\n"
    sig: function get_route_control(map, p1, p2){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\start.js
    datetime: 2022-10-21-05-52
    timestamp: 1666356769972.4026
    size: 6890
  test2_waypointfallback:
    name: test2_waypointfallback
    code: "function test2_waypointfallback() {\r

      \  var map = L.map('map');\r

      \  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      {\r

      \    attribution: '© OpenStreetMap contributors'\r

      \  }).addTo(map);\r

      \  console.log('geo', Geo)\r

      \  let [p1, p2] = [Geo.places.tuerkenschanzpark,
      Geo.places.vegagasse];\r

      \  map.setView(p1, 16)\r

      \  M = L.Routing.control({\r

      \    waypoints: [\r

      \      L.latLng(p1[0], p1[1]),\r

      \      L.latLng(p2[0], p2[1])\r

      \    ],\r

      \    waypointNameFallback: function (latLng) {\r

      \      function zeroPad(n) {\r

      \        n = Math.round(n);\r

      \        return n < 10 ? '0' + n : n;\r

      \      }\r

      \      function sexagesimal(p, pos, neg) {\r

      \        var n = Math.abs(p),\r

      \          degs = Math.floor(n),\r

      \          mins = (n - degs) * 60,\r

      \          secs = (mins - Math.floor(mins)) * 60,\r

      \          frac = Math.round((secs - Math.floor(secs)) * 100);\r

      \        return (n >= 0 ? pos : neg) + degs + '°' +\r

      \          zeroPad(mins) + '\\'' +\r

      \          zeroPad(secs) + '.' + zeroPad(frac) + '\"';\r

      \      }\r

      \      return sexagesimal(latLng.lat, 'N', 'S') + ' ' +
      sexagesimal(latLng.lng, 'E', 'W');\r

      \    },\r

      \    routeWhileDragging: true\r

      \  }).addTo(map);\r

      }\r\n"
    sig: function test2_waypointfallback(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\start.js
    datetime: 2022-10-21-05-52
    timestamp: 1666356769972.4026
    size: 6890
  test1_basic:
    name: test1_basic
    code: "function test1_basic() {\r

      \  var map = L.map('map');\r

      \  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      {\r

      \    attribution: '© OpenStreetMap contributors'\r

      \  }).addTo(map);\r

      \  console.log('geo', Geo)\r

      \  let [p1, p2] = [Geo.places.tuerkenschanzpark,
      Geo.places.vegagasse];\r

      \  map.setView(p1, 16)\r

      \  M = L.Routing.control({\r

      \    waypoints: [\r

      \      L.latLng(p1[0], p1[1]),\r

      \      L.latLng(p2[0], p2[1])\r

      \    ],\r

      \    routeWhileDragging: true\r

      \  }).addTo(map);\r

      }\r\n"
    sig: function test1_basic(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\start.js
    datetime: 2022-10-21-05-52
    timestamp: 1666356769972.4026
    size: 6890
  test0_orig:
    name: test0_orig
    code: "function test0_orig() {\r

      \  var map = L.map('map');\r

      \  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      {\r

      \    attribution: '© OpenStreetMap contributors'\r

      \  }).addTo(map);\r

      \  L.Routing.control({\r

      \    waypoints: [\r

      \      L.latLng(57.74, 11.94),\r

      \      L.latLng(57.6792, 11.949)\r

      \    ],\r

      \    routeWhileDragging: true\r

      \  }).addTo(map);\r

      }\r\n"
    sig: function test0_orig(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\start.js
    datetime: 2022-10-21-05-52
    timestamp: 1666356769972.4026
    size: 6890
  getInstrGeoJson:
    name: getInstrGeoJson
    code: "function getInstrGeoJson(instr, coord) {\r

      \  console.log('instr', instr, 'coord', coord);\r

      \  var formatter = new L.Routing.Formatter();\r

      \  var instrPts = {\r

      \    type: \"FeatureCollection\",\r

      \    features: []\r

      \  };\r

      \  for (var i = 0; i < instr.length; ++i) {\r

      \    var g = {\r

      \      \"type\": \"Point\",\r

      \      \"coordinates\": [coord[instr[i].index].lng,
      coord[instr[i].index].lat]\r

      \    };\r

      \    var p = {\r

      \      \"instruction\": formatter.formatInstruction(instr[i])\r

      \    };\r

      \    instrPts.features.push({\r

      \      \"geometry\": g,\r

      \      \"type\": \"Feature\",\r

      \      \"properties\": p\r

      \    });\r

      \  }\r

      \  return instrPts;\r

      }\r\n"
    sig: function getInstrGeoJson(instr, coord){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\baustelle.js
    datetime: 2022-10-21-06-08
    timestamp: 1666357687968.4854
    size: 1333
  get_middle_point:
    name: get_middle_point
    code: "function get_middle_point(p1, p2) { return [(p1[0] + p2[0]) / 2, (p1[1] +
      p2[1]) / 2]; }\r\n"
    sig: function get_middle_point(p1, p2){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  hallo:
    name: hallo
    code: "function hallo(control, map) {\r

      \  control.on('routeselected', function (e) {\r

      \    var coord = e.route.coordinates;\r

      \    var instr = e.route.instructions;\r

      \    L.geoJson(getInstrGeoJson(instr, coord)).addTo(map);\r

      \  });\r

      }\r\n"
    sig: function hallo(control, map){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\baustelle.js
    datetime: 2022-10-21-06-08
    timestamp: 1666357687968.4854
    size: 1333
  just_points:
    name: just_points
    code: "function just_points(map) {\r

      \  console.log('geo', Geo)\r

      \  let [p1, p2] = [Geo.places.tuerkenschanzpark,
      Geo.places.vegagasse];\r

      \  return [p1, p2];\r

      }\r\n"
    sig: function just_points(map){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\baustelle.js
    datetime: 2022-10-21-06-08
    timestamp: 1666357687968.4854
    size: 1333
  just_map:
    name: just_map
    code: "function just_map() {\r

      \  var map = L.map('map');\r

      \  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      {\r

      \    attribution: '© OpenStreetMap contributors'\r

      \  }).addTo(map);\r

      \  return map;\r

      }\r\n"
    sig: function just_map(){}
    region: funcs (baustelle.js)
    filename: baustelle.js
    type: func
    fname: baustelle.js
    path: C:\D\a03\nodemaster\all\leaflet\routing\baustelle.js
    datetime: 2022-10-21-06-08
    timestamp: 1666357687968.4854
    size: 1333
  points_to_waypoints:
    name: points_to_waypoints
    code: "function points_to_waypoints(pts = []) { return pts.map(x =>
      L.latLng(x[0], x[1])); }\r\n"
    sig: function points_to_waypoints(pts = []){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  cities_from_csv_and_info:
    name: cities_from_csv_and_info
    code: "async function cities_from_csv_and_info(min = 25000) {\r

      \  let info = await
      route_path_yaml_dict('../base/assets/lists/info.yaml');\r

      \  let text = await route_path_text('../base/mapdata/cities.csv');\r

      \  let cities = M.cities = csv2list(text);\r

      \  let capitals = [];\r

      \  let new_cities = {};\r

      \  let num = 0;\r

      \  for (const o of cities) {\r

      \    let n = o.population;\r

      \    if (nundef(n)) continue;\r

      \    n = Number(n);\r

      \    if (n < min) continue;\r

      \    let w1 = o.city_ascii.toLowerCase();\r

      \    if (nundef(o.country)) {\r

      \      console.log('missing country', o);\r

      \      continue;\r

      \    }\r

      \    num += 1;\r

      \    let land1 = o.country.toLowerCase();\r

      \    for (const k of info.capital) {\r

      \      let w = k.toLowerCase();\r

      \      if (w.includes(w1) && w.includes(land1)) {\r

      \        capitals.push(o);\r

      \        o.capital = 'capital';\r

      \      }\r

      \      let name = o.name = o.city_ascii;\r

      \      if (isdef(new_cities[name]) &&
      new_cities[name].includes('capital')) continue; \r

      \      else if (isdef(new_cities[name]) &&
      Number(stringAfterLast(new_cities[name],','))>n) continue; \r

      \      new_cities[name] =
      `${o.lng},${o.lat},${o.country},${o.capital},${o.population}`;\r

      \    }\r

      \  }\r

      \  downloadAsYaml(new_cities, 'cities');\r

      \  return new_cities;\r

      }\r\n"
    sig: async function cities_from_csv_and_info(min = 25000){}
    region: funcs (databuilder.js)
    filename: databuilder.js
    type: func
    fname: databuilder.js
    path: C:\D\a04\basejs\databuilder.js
    datetime: 2022-10-28-11-25
    timestamp: 1666981549331.6038
    size: 2060
  faicon_list:
    name: faicon_list
    code: "async function faicon_list(){\r

      \  let txt = await route_path_text('../base/alibs/fa.min.css');\r

      \  txt='.fa-0' + stringAfter(txt,'.fa-0');\r

      \  txt=stringBefore(txt,'sr-only');\r

      \  let parts = txt.split(':before');\r

      \  console.log('parts',parts.length);\r

      \  let list=[];\r

      \  for(const p of parts){\r

      \    let word = stringAfter(p,'.fa-').trim();\r

      \    list.push(word);\r

      \  }\r

      \  arrRemoveLast(list);\r

      \  list.sort();\r

      \  console.log('list',list); \r

      \  downloadJson({l:list},'liste');\r

      }\r\n"
    sig: async function faicon_list(){}
    region: funcs (databuilder.js)
    filename: databuilder.js
    type: func
    fname: databuilder.js
    path: C:\D\a04\basejs\databuilder.js
    datetime: 2022-10-28-11-25
    timestamp: 1666981549331.6038
    size: 2060
  engine_go:
    name: engine_go
    code: "function engine_go(e) {\r

      \  const matrix={\r

      \    a:{\r

      \      click:()=>add_agent_at(M.map,[e.latlng.lat, e.latlng.lng]),\r

      \      route:()=>{M.event='route',M.state='r';engine_go()}\r

      \    },\r

      \    r:{\r

      \    },\r

      \  }\r

      \  switch (M.state) {\r

      \    case 'a':\r

      \      switch(event){\r

      \        case 'click': break;\r

      \        case 'route': M.state = 'r'; break;\r

      \        case 'clear': break;\r

      \      }\r

      \      break;\r

      \    case 'r':\r

      \      break;\r

      \    default:\r

      \      break;\r

      \  }\r

      }\r\n"
    sig: function engine_go(e){}
    region: funcs (wait.js)
    filename: wait.js
    type: func
    fname: wait.js
    path: C:\D\a03\nodemaster\all\caba\wait.js
    datetime: 2022-10-29-06-24
    timestamp: 1667049876125.8118
    size: 1904
  plot_on_canvas:
    name: plot_on_canvas
    code: "function plot_on_canvas(d,items){\r

      \  let r = getRect(dTable);\r

      \  let c = mCanvas(d,{w:r.w,h:r.h,rounding:0,bg:'white'});
      let[cv,cx]=[c.cv,c.cx];\r

      \  for(const item of items){\r

      \    let d1 = item.div =
      cRect(item.x,item.y,item.w,item.h,{bg:item.bg},cx); \r

      \  }\r

      }\r\n"
    sig: function plot_on_canvas(d,items){}
    region: graph (wait.js)
    filename: wait.js
    type: func
    fname: wait.js
    path: C:\D\a03\nodemaster\all\caba\wait.js
    datetime: 2022-10-29-06-24
    timestamp: 1667049876125.8118
    size: 1904
  plot_on_div:
    name: plot_on_div
    code: "function plot_on_div(d,items){\r

      \  mStyle(d, { position: 'relative' });\r

      \  for(const item of items){\r

      \    let d1 = item.div =
      mDiv(d,{x:item.x,y:item.y,w:item.w,h:item.h,bg:item.bg,rounding:'50%',pos\
      ition:'absolute'}); \r

      \  }\r

      }\r\n"
    sig: function plot_on_div(d,items){}
    region: graph (wait.js)
    filename: wait.js
    type: func
    fname: wait.js
    path: C:\D\a03\nodemaster\all\caba\wait.js
    datetime: 2022-10-29-06-24
    timestamp: 1667049876125.8118
    size: 1904
  create_nodes:
    name: create_nodes
    code: "function create_nodes(r,pad,dmin){\r

      \  let [xstart, ystart, w, h] = [r.x+pad,r.y+pad,r.w, r.h];\r

      \  let [x,y]=[xstart,ystart];\r

      \  let items = []; let [rows,cols,row,col]=[0,0,0,0];\r

      \  while (y < h - dmin) {\r

      \    while (x < w - dmin) {\r

      \      let item = { w: 5, h: 5, iy:row, ix:col, bg: 'blue',
      position: 'absolute', x: x, y: y };\r

      \      x += dmin;\r

      \      items.push(item);\r

      \      cols++;col++;\r

      \    }\r

      \    rows++;row++;col=0;\r

      \    x = xstart;\r

      \    y += dmin;\r

      \  }\r

      \  return items;\r

      }\r\n"
    sig: function create_nodes(r,pad,dmin){}
    region: graph (wait.js)
    filename: wait.js
    type: func
    fname: wait.js
    path: C:\D\a03\nodemaster\all\caba\wait.js
    datetime: 2022-10-29-06-24
    timestamp: 1667049876125.8118
    size: 1904
  adjacency_init:
    name: adjacency_init
    code: "function adjacency_init(items){\r

      \  let last=arrLast(items);\r

      \  let [rows,cols]=[last.iy+1,last.ix+1];\r

      \  console.log('there are',rows,'rows',cols,'cols')\r

      }\r\n"
    sig: function adjacency_init(items){}
    region: graph (wait.js)
    filename: wait.js
    type: func
    fname: wait.js
    path: C:\D\a03\nodemaster\all\caba\wait.js
    datetime: 2022-10-29-06-24
    timestamp: 1667049876125.8118
    size: 1904
  shake_and_sieve:
    name: shake_and_sieve
    code: "function shake_and_sieve(items){}\r\n"
    sig: function shake_and_sieve(items){}
    region: graph (wait.js)
    filename: wait.js
    type: func
    fname: wait.js
    path: C:\D\a03\nodemaster\all\caba\wait.js
    datetime: 2022-10-29-06-24
    timestamp: 1667049876125.8118
    size: 1904
  startGame:
    name: startGame
    code: "function startGame() {\r

      \  meme = new component(30, 30, 'red', 10, 120);\r

      \  meme.gravity = 0.05;\r

      \  score = new component('30px', 'Consolas', 'black', 280, 40,
      'text');\r

      \  myGameArea.start();\r

      }\r\n"
    sig: function startGame(){}
    region: var (bau1.js)
    filename: bau1.js
    type: func
    fname: bau1.js
    path: C:\D\a03\nodemaster\all\caba\bau1.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 1805
  updateGameArea:
    name: updateGameArea
    code: "function updateGameArea() {\r

      \  var x, height, gap, minHeight, maxHeight, minGap, maxGap;\r

      \  for (i = 0; i < obstacles.length; i += 1) {\r

      \    if (meme.crashWith(obstacles[i])) {\r

      \      return;\r

      \    }\r

      \  }\r

      \  myGameArea.clear();\r

      \  myGameArea.frameNo += 1;\r

      \  if (myGameArea.frameNo == 1 || everyinterval(150)) {\r

      \    x = myGameArea.canvas.width;\r

      \    minHeight = 20;\r

      \    maxHeight = 200;\r

      \    height = Math.floor(Math.random() * (maxHeight - minHeight + 1)
      + minHeight);\r

      \    minGap = 50;\r

      \    maxGap = 200;\r

      \    gap = Math.floor(Math.random() * (maxGap - minGap + 1) +
      minGap);\r

      \    obstacles.push(new component(10, height, 'green', x, 0));\r

      \    obstacles.push(new component(10, x - height - gap, 'green', x,
      height + gap));\r

      \  }\r

      \  for (i = 0; i < obstacles.length; i += 1) {\r

      \    obstacles[i].x += -1;\r

      \    obstacles[i].draw();\r

      \  }\r

      \  score.text = 'SCORE: ' + myGameArea.frameNo;\r

      \  score.draw();\r

      \  meme.newPos();\r

      \  meme.draw();\r

      }\r\n"
    sig: function updateGameArea(){}
    region: var (bau1.js)
    filename: bau1.js
    type: func
    fname: bau1.js
    path: C:\D\a03\nodemaster\all\caba\bau1.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 1805
  everyinterval:
    name: everyinterval
    code: "function everyinterval(n) {\r

      \  if ((myGameArea.frameNo / n) % 1 == 0) {\r

      \    return true;\r

      \  }\r

      \  return false;\r

      }\r\n"
    sig: function everyinterval(n){}
    region: var (bau1.js)
    filename: bau1.js
    type: func
    fname: bau1.js
    path: C:\D\a03\nodemaster\all\caba\bau1.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 1805
  accelerate:
    name: accelerate
    code: "function accelerate(n) {\r

      \  meme.gravity = n;\r

      }\r\n"
    sig: function accelerate(n){}
    region: var (bau1.js)
    filename: bau1.js
    type: func
    fname: bau1.js
    path: C:\D\a03\nodemaster\all\caba\bau1.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 1805
  component:
    name: component
    code: "function component(width, height, color, x, y, type) {\r

      \  this.type = type;\r

      \  this.score = 0;\r

      \  this.width = width;\r

      \  this.height = height;\r

      \  this.speedX = 0;\r

      \  this.speedY = 0;\r

      \  this.x = x;\r

      \  this.y = y;\r

      \  this.gravity = 0;\r

      \  this.gravitySpeed = 0;\r

      \  this.draw = function () {\r

      \    ctx = myGameArea.context;\r

      \    if (this.type == 'text') {\r

      \      ctx.font = this.width + ' ' + this.height;\r

      \      ctx.fillStyle = color;\r

      \      ctx.fillText(this.text, this.x, this.y);\r

      \    } else {\r

      \      ctx.fillStyle = color;\r

      \      ctx.fillRect(this.x, this.y, this.width, this.height);\r

      \    }\r

      \  };\r

      \  this.newPos = function () {\r

      \    this.gravitySpeed += this.gravity;\r

      \    this.x += this.speedX;\r

      \    this.y += this.speedY + this.gravitySpeed;\r

      \    this.hitBottom();\r

      \  };\r

      \  this.hitBottom = function () {\r

      \    var rockbottom = myGameArea.canvas.height - this.height;\r

      \    if (this.y > rockbottom) {\r

      \      this.y = rockbottom;\r

      \      this.gravitySpeed = 0;\r

      \    }\r

      \  };\r

      \  this.crashWith = function (otherobj) {\r

      \    var myleft = this.x;\r

      \    var myright = this.x + this.width;\r

      \    var mytop = this.y;\r

      \    var mybottom = this.y + this.height;\r

      \    var otherleft = otherobj.x;\r

      \    var otherright = otherobj.x + otherobj.width;\r

      \    var othertop = otherobj.y;\r

      \    var otherbottom = otherobj.y + otherobj.height;\r

      \    var crash = true;\r

      \    if (mybottom < othertop || mytop > otherbottom || myright <
      otherleft || myleft > otherright) {\r

      \      crash = false;\r

      \    }\r

      \    return crash;\r

      \  };\r

      }\r\n"
    sig: function component(width, height, color, x, y, type){}
    region: funcs (bau2.js)
    filename: bau2.js
    type: func
    fname: bau2.js
    path: C:\D\a03\nodemaster\all\caba\bau2.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066085105.3179
    size: 1472
  add_agent_at:
    name: add_agent_at
    code: "function add_agent_at(map, p1) {\r

      \  if (M.state != 'a') { console.log('wrong state!', M.state);
      return; }\r

      \  let a = new Agent(map, .0001, false, null, p1);\r

      \  lookupAddToList(M, ['agents'], a);\r

      \  console.log(\"adding agent at\", p1);\r

      }\r\n"
    sig: function add_agent_at(map, p1){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  add_click_set_agent:
    name: add_click_set_agent
    code: "function add_click_set_agent() { M.state = 'a'; M.map.on('click', e => {
      add_agent_at(M.map, [e.latlng.lat, e.latlng.lng]) }); }\r\n"
    sig: function add_click_set_agent(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  calc_map_dims:
    name: calc_map_dims
    code: "function calc_map_dims(){\r

      \  let d = M.dims = {\r

      \    pixels: get_map_dims_in_pixel(),\r

      \    meters: get_map_dims_in_meters(),\r

      \    latlng: get_map_dims_in_lat_lng(),\r

      \    zoom: M.map.getZoom(),\r

      \  };\r

      \  let ppm = M.dims.pixels_per_meter =
      [d.pixels[0]/d.meters[0],d.pixels[1]/d.meters[1]];\r

      \  M.dims.meters_per_pixel = [1/ppm[0],1/ppm[1]];\r

      \  let ppll = M.dims.pixels_per_ll =
      [d.pixels[0]/d.latlng[1],d.pixels[1]/d.latlng[0]];\r

      \  M.dims.ll_per_pixel = [1/ppll[0],1/ppll[1]];\r

      \  let mpll = M.dims.meters_per_ll =
      [d.meters[0]/d.latlng[1],d.meters[1]/d.latlng[0]];\r

      \  M.dims.ll_per_meters = [1/mpll[1],1/mpll[0]]; \r

      }\r\n"
    sig: function calc_map_dims(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  clear_agents:
    name: clear_agents
    code: "function clear_agents() {\r

      \  for (const a of M.agents) {\r

      \    let marker = a.ui;\r

      \    M.map.removeLayer(marker);\r

      \  }\r

      \  M.agents = [];\r

      }\r\n"
    sig: function clear_agents(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  clear_router:
    name: clear_router
    code: "function clear_router() { M.map.removeControl(M.router); }\r\n"
    sig: function clear_router(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  create_div:
    name: create_div
    code: "function create_div(where, o={}){\r

      \  let res;\r

      \  if (is_map(where)) {\r

      \    let icon = L.divIcon({className: 'my-div-icon'});\r

      \    var greenIcon = L.icon({\r

      \      iconUrl: 'leaf-green.png',\r

      \      shadowUrl: 'leaf-shadow.png',\r

      \      iconSize:     [38, 95], \r

      \      shadowSize:   [50, 64], \r

      \      iconAnchor:   [22, 94], \r

      \      shadowAnchor: [4, 62],  \r

      \      popupAnchor:  [-3, -76] \r

      \  });    \r

      \  res = L.marker(o.center, {icon: greenIcon}).addTo(map);\r

      \  } else {\r

      \    res = mDiv(where, o);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function create_div(where, o={}){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  create_sym:
    name: create_sym
    code: "function create_sym(map, key, center, sz, styles) {\r

      \  let d1 = mSym(key,null,styles);\r

      \  let html = d1.innerHTML;\r

      \  let [xoff, yoff] = sz == 'large' ? [136, 150] : sz == 'medium' ?
      [36, 40] : [16, 18];\r

      \  let offset = [xoff,yoff];\r

      \  return create_div_marker(map,html,center,sz,offset);\r

      }\r\n"
    sig: function create_sym(map, key, center, sz, styles){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  create_fa:
    name: create_fa
    code: "function create_fa(map, key, center, styles={}) {\r

      \  addKeys({fz:30},styles);\r

      \  let d=mCreate('i');\r

      \  mStyle(d,styles);\r

      \  mClass(d,`fa fa-${key}`);\r

      \  let dp=mCreate('div');\r

      \  mAppend(dp,d);\r

      \  let html = dp.innerHTML; \r

      \  let offset=[styles.fz/2,styles.fz/3];\r

      \  let className = `custom-div-icon`;\r

      \  let res = L.marker(center, { icon: L.divIcon({ iconAnchor:
      offset, className: className, html: html }) }).addTo(map);\r

      \  return res; \r

      }\r\n"
    sig: function create_fa(map, key, center, styles={}){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  create_div_marker:
    name: create_div_marker
    code: "function create_div_marker(map,html,center,sz,offset){\r

      \  let res = L.marker(center, { icon: L.divIcon({ iconAnchor:
      offset, className: `custom-div-icon ${sz}`, html: html }) }).addTo(map);\r

      \  return res;\r

      }\r\n"
    sig: function create_div_marker(map,html,center,sz,offset){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  create_agent:
    name: create_agent
    code: "function create_agent(where, o = {}) {\r

      \  let res;\r

      \  if (is_map(where)) {\r

      \    res =
      L.marker(valf(o.center,where.options.center)).addTo(where);\r

      \  } else {\r

      \    res = mDiv(where, o);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function create_agent(where, o = {}){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  create_toolbar:
    name: create_toolbar
    code: "function create_toolbar(map) {\r

      \  let d = map._controlContainer; \r

      \  console.log('control container', d);\r

      \  dMap = mDiv(d, { position: 'absolute', top: 0, left: 50, w:
      '100%', h: '100%' });\r

      \  dMap.style.zIndex = 12000;\r

      \  let toolbar = mDiv(dMap, { hmargin: 10, padding: 10, cursor:
      'pointer' }, null, null, 'top'); mFlexWrap(toolbar);\r

      \  return toolbar;\r

      }\r\n"
    sig: function create_toolbar(map){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  dummy_reaction:
    name: dummy_reaction
    code: "function dummy_reaction(ev) { console.log('clicked', ev.target) }\r\n"
    sig: function dummy_reaction(ev){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  fit_points:
    name: fit_points
    code: "function fit_points(map, pts, padding = true) {\r

      \  let latlngs = to_lat_lng(pts); \r

      \  let o = L.latLngBounds(latlngs);\r

      \  map.fitBounds(o, { padding: padding ? [25, 25] : [0, 0] });\r

      }\r\n"
    sig: function fit_points(map, pts, padding = true){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  from_lat_lng:
    name: from_lat_lng
    code: "function from_lat_lng(p) { return [p.lat, p.lng]; }\r\n"
    sig: function from_lat_lng(p){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  from_lat_long:
    name: from_lat_long
    code: "function from_lat_long(p) { return from_lat_lng(p); }\r\n"
    sig: function from_lat_long(p){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  get_distance:
    name: get_distance
    code: "function get_distance(from, to) {\r

      \  var fromLatLng = L.latLng(from);\r

      \  var toLatLng = L.latLng(to);\r

      \  var dis = fromLatLng.distanceTo(toLatLng);\r

      \  console.log('distance in meters', dis);\r

      \  return dis;\r

      }\r\n"
    sig: function get_distance(from, to){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  get_map_dims_in_lat_lng:
    name: get_map_dims_in_lat_lng
    code: "function get_map_dims_in_lat_lng() { return get_map_dims_in_lat_long();
      }\r\n"
    sig: function get_map_dims_in_lat_lng(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  get_map_dims_in_lat_long:
    name: get_map_dims_in_lat_long
    code: "function get_map_dims_in_lat_long() {\r

      \  let map = M.map;\r

      \  const se = map.getBounds().getSouthEast();\r

      \  const ne = map.getBounds().getNorthEast();\r

      \  const nw = map.getBounds().getNorthWest();\r

      \  return [Math.abs(se.lat-ne.lat),Math.abs(ne.lng-nw.lng)];\r

      }\r\n"
    sig: function get_map_dims_in_lat_long(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  get_map_dims_in_meters:
    name: get_map_dims_in_meters
    code: "function get_map_dims_in_meters() {\r

      \  let map = M.map;\r

      \  const southEastPoint = map.getBounds().getSouthEast();\r

      \  const northEastPoint = map.getBounds().getNorthEast();\r

      \  const northWestPoint = map.getBounds().getNorthWest();\r

      \  const h = southEastPoint.distanceTo(northEastPoint);\r

      \  const w = northWestPoint.distanceTo(northEastPoint);\r

      \  return [w, h];\r

      }\r\n"
    sig: function get_map_dims_in_meters(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  get_map_dims_in_pixel:
    name: get_map_dims_in_pixel
    code: "function get_map_dims_in_pixel(){ \r

      \  let container = M.map.getContainer();\r

      \  let rect = getRect(container);\r

      \  return [rect.w,rect.h];\r

      }\r\n"
    sig: function get_map_dims_in_pixel(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  get_meters_per_pixel:
    name: get_meters_per_pixel
    code: "function get_meters_per_pixel() {\r

      \  let map = M.map;\r

      \  const southEastPoint = map.getBounds().getSouthEast();\r

      \  const northEastPoint = map.getBounds().getNorthEast();\r

      \  const mapHeightInMetres =
      southEastPoint.distanceTo(northEastPoint);\r

      \  const mapHeightInPixels = map.getSize().y;\r

      \  return mapHeightInMetres / mapHeightInPixels;\r

      } \r\n"
    sig: function get_meters_per_pixel(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  is_lat_lng:
    name: is_lat_lng
    code: "function is_lat_lng(p) { return isdef(p.lat); }\r\n"
    sig: function is_lat_lng(p){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  is_lat_long:
    name: is_lat_long
    code: "function is_lat_long(p) { return is_lat_lng(p); }\r\n"
    sig: function is_lat_long(p){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  is_map:
    name: is_map
    code: "function is_map(o) { return isdef(o.map) || isdef(o._panes); }\r\n"
    sig: function is_map(o){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  map_moveby:
    name: map_moveby
    code: "function map_moveby(pin, fx, fy) {\r

      \  let pos = pin.getLatLng();\r

      \  let lat = fx(pos.lat);\r

      \  let lng = fy(pos.lng);\r

      \  pin.setLatLng([lat, lng]);\r

      }\r\n"
    sig: function map_moveby(pin, fx, fy){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  map_moveto:
    name: map_moveto
    code: "function map_moveto(pin, center) { pin.setLatLng(center); }\r\n"
    sig: function map_moveto(pin, center){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  show_map_dims:
    name: show_map_dims
    code: "function show_map_dims(){\r

      \  let map=M.map;\r

      \  console.log('________ at zoom',map.getZoom());\r

      \  console.log('meters per pixel',get_meters_per_pixel());\r

      \  console.log('map dims in meters',get_map_dims_in_meters());\r

      \  console.log('map dims in lat lon',get_map_dims_in_lat_long());\r

      \  console.log('map dims in pixel',get_map_dims_in_pixel());\r

      }\r\n"
    sig: function show_map_dims(){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  show_route:
    name: show_route
    code: "function show_route(map, pts, color, callback) {\r

      \  let control = L.Routing.control({\r

      \    waypoints: points_to_waypoints(pts),\r

      \    lineOptions: { styles: [{ color: color, opacity: 1, weight: 3
      }], },\r

      \    draggableWaypoints: false,\r

      \    createMarker: function () { return false; },\r

      \    show: false,\r

      \  }).addTo(map);\r

      \  control.on('routesfound', callback); \r

      \  return control;\r

      }\r\n"
    sig: function show_route(map, pts, color, callback){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  to_lat_lng:
    name: to_lat_lng
    code: "function to_lat_lng(pts = []) { return points_to_waypoints(pts); }\r\n"
    sig: function to_lat_lng(pts = []){}
    region: maphelpers (code.js)
    filename: code.js
    type: func
    fname: code.js
    path: C:\D\a03\nodemaster\all\caba\code.js
    datetime: 2022-10-29-10-54
    timestamp: 1667066059104.236
    size: 8622
  test16_fa_animation:
    name: test16_fa_animation
    code: "function test16_fa_animation() {\r

      \  dTable = mBy('map');\r

      \  let fa = rChoose(Info.fa);\r

      \  mCenterCenterFlex(dTable); mStyle(dTable, { bg: 'white',
      position:'relative' });\r

      \  let d0 = mDiv(dTable); mStyle(d0, { rounding: '50%', align:
      'center', bg: 'blue', fg: 'white', display: 'inline-block' })\r

      \  let dfa = mDiv(d0, { padding: 40, }, null, `<i class=\"fa
      fa-${fa} fa-2x\"></i>`);\r

      }\r\n"
    sig: function test16_fa_animation(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test15_fa_list:
    name: test15_fa_list
    code: "function test15_fa_list() {\r

      \  dTable = mBy('map');\r

      \  let animations = ['beat', 'bounce', 'fade', 'flip', 'pulse',
      'shake', 'spin'];\r

      \  let iani = 0;\r

      \  let list = Info.fa;\r

      \  for (const w of arrTake(list, 25)) {\r

      \    let an = 'pulse';\r

      \    let d = mDiv(dTable, { align: 'center', bg: 'blue', margin: 8,
      fg: 'white', display: 'inline-block', padding: 10 }, null, `<i class=\"fa
      fa-${w} fa-${an} fa-3x\"></i><br>${w}`);\r

      \  }\r

      }\r\n"
    sig: function test15_fa_list(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test14_factory:
    name: test14_factory
    code: "function test14_factory() {\r

      \  let d = mSym('frog', 'map');\r

      }\r\n"
    sig: function test14_factory(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test13_get_the_div:
    name: test13_get_the_div
    code: "function test13_get_the_div() {\r

      \  let map = M.map = create_map({ zoom: 5, center:
      Geo.cities.stuttgart });\r

      \  let dmap = document.getElementById('map');\r

      \  let dtiles = dmap.firstChild.firstChild;\r

      \  console.log('dtiles', dtiles); \r

      }\r\n"
    sig: function test13_get_the_div(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test12_europe:
    name: test12_europe
    code: "function test12_europe() {\r

      \  let map = M.map = create_map({ zoom: 5, center:
      Geo.cities.stuttgart });\r

      \  let list = get_values(Geo.cities).filter(x => x.continent ==
      'Europe' && x.pop >= 1000000 && x.country == 'Austria');\r

      \  console.log('list', list);\r

      \  for (const c of list) {\r

      \    let m = create_fa(map, 'helicopter', c.center);\r

      \    break;\r

      \  }\r

      }\r\n"
    sig: function test12_europe(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test11_oest:
    name: test11_oest
    code: "function test11_oest() {\r

      \  let map = M.map = create_map({ zoom: 7, center:
      Geo.cities.salzburg });\r

      \  let list = get_values(Geo.cities).filter(x => x.country ==
      'Austria');\r

      \  console.log('list', list);\r

      \  for (const c of list) {\r

      \    create_agent(map, c);\r

      \  }\r

      }\r\n"
    sig: function test11_oest(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test14:
    name: test14
    code: "function test14() {\r

      \  show_emos();\r

      \  say('what do you feel right now???', 'uk', null, .5, .8);\r

      }\r\n"
    sig: function test14(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test12_cyto:
    name: test12_cyto
    code: "function test12_cyto() {\r\n}\r\n"
    sig: function test12_cyto(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test11_gengraph:
    name: test11_gengraph
    code: "function test11_gengraph() {\r

      \  let items = create_nodes({ x: 0, y: 0, w: 500, h: 500 }, 20,
      120);\r

      \  console.log('items', items, items[120]);\r

      \  dTable = toElem('map');\r

      \  plot_on_div(dTable, items);\r

      \  adjacency_init(items);\r

      }\r\n"
    sig: function test11_gengraph(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test10_autocomplete:
    name: test10_autocomplete
    code: "function test10_autocomplete() {\r

      \  let map = M.map = create_map({ zoom: 16 });\r

      \  map.on('moveend', function (e) { calc_map_dims();
      console.log(\"dims\", M.dims); });\r

      \  let tb = M.toolbar = create_toolbar(map);\r

      \  mButton('Dummy', dummy_reaction, tb);\r

      \  mAutocomplete(tb);\r

      }\r\n"
    sig: function test10_autocomplete(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test9_google:
    name: test9_google
    code: "function test9_google() {\r

      \  mBy('dTable').innerHTML = `\r

      \  <iframe class='flat' id=\"gmap\"
      src=\"http://maps.google.com/maps?z=15&t=m&q=loc:48.25+16.3&output=embed\"
      width=\"100%\" height=\"${window.innerWidth}\"></iframe>  \r

      \  `;\r

      \  let x = document.getElementById('gmap');\r

      \  console.log('x', x);\r

      \  mStyle(x, { bg: 'blue' });\r

      }\r\n"
    sig: function test9_google(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test8_load_googlemap_in_iframe:
    name: test8_load_googlemap_in_iframe
    code: "function test8_load_googlemap_in_iframe() {\r

      \  var iDiv = document.createElement('iframe');\r

      \  iDiv.id = 'iframe1';\r

      \  mStyle(iDiv, { w: '100%', h: '100%' })\r

      \  document.getElementById(\"map\").appendChild(iDiv);\r

      \  iDiv.src =
      'https://maps.google.com/maps?q=48.2,16.3&output=embed';\r

      \  // iDiv.src =
      'https://maps.google.com/maps?q=48.2,16.3&hl=fa;z=5&ie=UTF8&output=embed&\
      hl=en';\r

      }\r\n"
    sig: function test8_load_googlemap_in_iframe(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test7_display_dims_on_moveend:
    name: test7_display_dims_on_moveend
    code: "function test7_display_dims_on_moveend() {\r

      \  let map = M.map = create_map({ zoom: 16 });\r

      \  map.on('moveend', function (e) { calc_map_dims();
      console.log(\"dims\", M.dims); });\r

      \  let city = rChoose(M.capitals);\r

      \  console.log('city has been chosen:', city);\r

      \  map.flyTo(Geo.cities[city].center);\r

      }\r\n"
    sig: function test7_display_dims_on_moveend(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test6_click:
    name: test6_click
    code: "function test6_click() {\r

      \  let map = M.map = create_map({ zoom: 16 });\r

      \  add_click_set_agent();\r

      \  let tb = M.toolbar = create_toolbar(map);\r

      \  mButton('route', () => {\r

      \    map.off('click');\r

      \    let pts = M.agents.map(x => x.pos);\r

      \    let color = 'red';\r

      \    let callback = e => fit_points(map, pts);\r

      \    M.router = show_route(map, pts, color, callback);\r

      \  }, tb);\r

      \  mButton('clear', () => { clear_router(); clear_agents();
      add_click_set_agent(); }, tb);\r

      }\r\n"
    sig: function test6_click(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test5_showroute:
    name: test5_showroute
    code: "function test5_showroute() {\r

      \  let map = M.map = create_map();\r

      \  let agent = M.agent = new Agent(map, .0001, false);\r

      \  let tb = M.toolbar = create_toolbar(map);\r

      \  let pts = [Geo.places.tuerkenschanzpark, Geo.places.vegagasse]\r

      \  let color = 'green';\r

      \  let callback = e => fit_points(map, pts);\r

      \  let control = M.router = show_route(map, pts, color, callback);\r

      }\r\n"
    sig: function test5_showroute(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test4_tools:
    name: test4_tools
    code: "function test4_tools() {\r

      \  let map = create_map();\r

      \  console.log('map', map); \r

      \  let d = map._controlContainer; \r

      \  console.log('control container', d);\r

      \  dMap = mDiv(d, { position: 'absolute', top: 0, left: 50, w:
      '100%', h: '100%' });\r

      \  dMap.style.zIndex = 12000;\r

      \  dTop = mDiv(dMap, { hmargin: 10, padding: 10, cursor: 'pointer'
      }, null, null, 'top'); mFlexWrap(dTop);\r

      \  let b = mButton('hallo', dummy_reaction, dTop);\r

      \  b = mButton('download', () => downloadJson({ hallo: 4343 },
      '__test'), dTop);\r

      \  let a = mLink(\"http://duckduckgo.com\", dTop, { color: 'dimgray'
      }, null, 'ein link');\r

      \  a = mLink(\"javascript:void(0)\", dTop, { color: 'dimgray' },
      null, 'ein link');\r

      \  a.onclick = dummy_reaction;\r

      \  b = mButton('Paris', () => map.setView(Geo.cities.Paris.center),
      dTop);\r

      \  b = mButton('London', () => map.flyTo(Geo.cities.London.center),
      dTop);\r

      \  let agent = new Agent(map, .0001, false); \r

      \  return;\r

      \  let x = create_toolbar(map); console.log('toolbar', x)\r

      \  let tb = x._container; console.log('toolbar', tb);\r

      \  mButton('click', () => console.log('clicked!'), tb, { cursor:
      'pointer' })\r

      }\r\n"
    sig: function test4_tools(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test3_better_agent:
    name: test3_better_agent
    code: "async function test3_better_agent() {\r

      \  M = create_map();\r

      \  console.log('M', M);\r

      \  let agent = new Agent(M, .0001, false); \r

      \  let c1 = create_button(M.map, 'hallo')\r

      \  let c2 = create_button(M.map, 'h2')\r

      \  let c3 = create_button(M.map, 'h3')\r

      \  console.log('buttons', c1, c2, c3)\r

      }\r\n"
    sig: async function test3_better_agent(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test2_two_maps:
    name: test2_two_maps
    code: "async function test2_two_maps() {\r

      \  let [cities, capitals] = await get_cities_and_capitals();\r

      \  let o = { center: cities.Paris.center, zoom: 7, id: 'map' };\r

      \  let m1 = create_map(jsCopy(o));\r

      \  copyKeys({ id: 'map2', preferCanvas: true }, o);\r

      \  let m2 = create_map(o);\r

      \  let a1 = create_agent(m1);\r

      \  let a2 = create_agent(m2);\r

      \  let f1 = x => x + rFloat(-.01, .05);\r

      \  let f2 = x => x + rGaussian(-.01, .05); \r

      \  run_for_seconds(2, () => { map_moveby(a2, f2, f2); map_moveby(a1,
      f1, f1); })\r

      }\r\n"
    sig: async function test2_two_maps(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test1_maxBounds:
    name: test1_maxBounds
    code: "function test1_maxBounds() { let m1 = create_map({ zoom: 0 }); }\r\n"
    sig: function test1_maxBounds(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  test0_canvas_overlay:
    name: test0_canvas_overlay
    code: "function test0_canvas_overlay() {\r

      \  let pin = canvas_overlay();\r

      \  let f = x => x + rGaussian(-.01, .04); \r

      \  run_for_seconds(2, () => map_moveby(pin, f, f))\r

      }\r\n"
    sig: function test0_canvas_overlay(){}
    region: cytograph (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\all\caba\test.js
    datetime: 2022-11-08-06-13
    timestamp: 1667916790978.8235
    size: 16815
  ccanvas:
    name: ccanvas
    code: "function ccanvas(dParent, styles, bstyles, play, pause, origin = 'cc')
      {\r

      \  let o = mCanvas(dParent, styles, bstyles, play, pause);\r

      \  [this.cv, this.cx, this.play, this.pause] = [o.cv, o.cx, o.play,
      o.pause];\r

      \  let [w, h] = [this.w, this.h] = [this.cv.width,
      this.cv.height];\r

      \  this.defaultsize = 20;\r

      \  this.origin = cv_init_origin(this, origin);\r

      \  this.cx.translate(this.origin.x, this.origin.y);\r

      \  this.maxx = w - this.origin.x; this.minx = this.maxx - w;\r

      \  this.maxy = h - this.origin.y; this.miny = this.maxy - h;\r

      \  this.items = [];\r

      }\r\n"
    sig: function ccanvas(dParent, styles, bstyles, play, pause, origin = 'cc'){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  cv_init_origin:
    name: cv_init_origin
    code: "function cv_init_origin(canvas, origin) {\r

      \  let cv = canvas.cv;\r

      \  if (nundef(origin)) origin = 'cc';\r

      \  let pt = origin;\r

      \  if (isString(origin)) {\r

      \    let v = origin[0], h = origin[1];\r

      \    let y = v == 't' ? 0 : v == 'c' ? cv.height / 2 : cv.height;\r

      \    let x = h == 'l' ? 0 : h == 'c' ? cv.width / 2 : cv.width;\r

      \    pt = { x: x, y: y };\r

      \  }\r

      \  return pt;\r

      }\r\n"
    sig: function cv_init_origin(canvas, origin){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  default_item_serializer:
    name: default_item_serializer
    code: "function default_item_serializer(o) { return copyKeys(o, {}, { live: true
      }); }\r\n"
    sig: function default_item_serializer(o){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  detect_size_from_styles:
    name: detect_size_from_styles
    code: "function detect_size_from_styles(st = {}, defsize = 50) {\r

      \  return [valf(st.w, st.sz, defsize), valf(st.w, st.sz,
      defsize)];\r

      }\r\n"
    sig: function detect_size_from_styles(st = {}, defsize = 50){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  dict_augment:
    name: dict_augment
    code: "function dict_augment(di,o){addKeys(o,di); return di;}\r\n"
    sig: function dict_augment(di,o){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  dict_remove:
    name: dict_remove
    code: "function dict_remove(di,keys){\r

      }\r\n"
    sig: function dict_remove(di,keys){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  draw_on_canvas:
    name: draw_on_canvas
    code: "function draw_on_canvas(cx, item) {\r

      \  if (isdef(item.draw)) { item.draw(cx, item); }\r

      \  else {\r

      \    cx.save();\r

      \    let st = item.styles;\r

      \    let [x, y, w, h, a, color] = [valf(st.x, 0), valf(st.y, 0),
      valf(st.w, 30), valf(st.h, 30), valf(st.a, 0), valf(st.bg, RED)];\r

      \    cx.translate(x, y);\r

      \    cx.rotate(toRadian(a));\r

      \    cEllipse(0, 0, w, h, { bg: colorFrom(color) }, 0, cx); \r

      \    cx.restore();\r

      \  }\r

      }\r\n"
    sig: function draw_on_canvas(cx, item){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  draw_on_div:
    name: draw_on_div
    code: "function draw_on_div(dParent, item) {\r

      \  if (isdef(item.draw)) { item.draw(dParent, item); }\r

      \  else {\r

      \    let d = mDiv(dParent, item.styles);\r

      \    iAdd(item, { div: d });\r

      \  }\r

      }\r\n"
    sig: function draw_on_div(dParent, item){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  game_add_default_item:
    name: game_add_default_item
    code: "function game_add_default_item(ev) {\r

      \  evNoBubble(ev);\r

      \  let sz = 50;\r

      \  let [x, y] = [ev.clientX - sz / 2, ev.clientY - sz / 2]; \r

      \  let item = { styles: { position: 'absolute', x: x, y: y, w: sz,
      h: sz, bg: 'random', fg: 'contrast' }, init: true, refresh: true, draw:
      draw_dom };\r

      \  game_add_item(item);\r

      }\r\n"
    sig: function game_add_default_item(ev){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  game_add_item:
    name: game_add_item
    code: "function game_add_item(item) {\r

      \  addKeys({ init: true, refresh: true, draw: draw_dom }, item);\r

      \  G.items.push(item);\r

      }\r\n"
    sig: function game_add_item(item){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  get_center:
    name: get_center
    code: "function get_center(d) { let r = getRect(d); return [r.w / 2, r.h / 2];
      }\r\n"
    sig: function get_center(d){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  iInit:
    name: iInit
    code: "function iInit(dParent, item) {\r

      \  if (is_canvas(dParent)) draw_on_canvas(dParent.cx, item);\r

      \  else draw_on_div(dParent, item);\r

      }\r\n"
    sig: function iInit(dParent, item){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  is_canvas:
    name: is_canvas
    code: "function is_canvas(item) { return isdef(item.cx) && isdef(item.cv); }\r\n"
    sig: function is_canvas(item){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  load_all:
    name: load_all
    code: "async function load_all() {\r

      \  let o = await route_path_yaml_dict('../y/page.yaml');\r

      \  for (const item of o) { add_edit(item.x, item.y - 41, item.text);
      }\r

      }\r\n"
    sig: async function load_all(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  serialize_all:
    name: serialize_all
    code: "function serialize_all() {\r

      \  let list = [];\r

      \  for (const id in Items) {\r

      \    let res = default_item_serializer(Items[id]);\r

      \    list.push(res);\r

      \  }\r

      \  console.log('list', list)\r

      \  downloadAsYaml(list, '_all');\r

      \  toLocalStorage(list);\r

      }\r\n"
    sig: function serialize_all(){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  show_available_voices:
    name: show_available_voices
    code: "function show_available_voices() { say('', 'english male', () =>
      console.log(DA.voicelist.map(x => x.name))); }\r\n"
    sig: function show_available_voices(){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  ui_type_item_line:
    name: ui_type_item_line
    code: "function ui_type_item_line(dParent, item, styles = {}, handler = null,
      props = []) {\r

      \  let d = mDiv(dParent, styles, `d_${item.key}`); mFlex(d);\r

      \  for (const p of props) {\r

      \    let family = p == 'text' ? item.family : 'arial';\r

      \    let fz = p == 'text' ? 40 : 20;\r

      \    mDiv(d, { family: family, fz: fz, bg: styles.bg, fg: styles.fg
      }, null, item[p]);\r

      \  }\r

      \  if (isdef(handler)) {d.onclick = handler;
      d.setAttribute('item',JSON.stringify(item));}\r

      \  return d;\r

      }\r\n"
    sig: function ui_type_item_line(dParent, item, styles = {}, handler = null,
      props = []){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  ui_type_item:
    name: ui_type_item
    code: "function ui_type_item(dParent, item, styles = {}, handler = null,
      show_key = null) {\r

      \  addKeys({ align: 'center', overflow: 'hidden', cursor: 'pointer',
      rounding: 10, margin: 10, padding: 5, w: 120, wmin: 90, display:
      'inline-block', bg: 'random', fg: 'contrast' }, styles);\r

      \  let d = mDiv(dParent, styles);\r

      \  if (!isEmptyOrWhiteSpace(item.text)) mSpan(d, { family:
      item.family, fz: 50 }, item.text);\r

      \  if (show_key) {\r

      \    mSpan(d, { family: 'opensans' }, '<br>' + show_key);\r

      \  }\r

      \  if (isdef(handler)) d.onclick = handler;\r

      \  return d;\r

      }\r\n"
    sig: function ui_type_item(dParent, item, styles = {}, handler = null, show_key
      = null){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  draw_dom:
    name: draw_dom
    code: "function draw_dom(item) {\r

      \  if (item.init) { item.init = false; iAdd(item, { div:
      mDiv(valf(dParent, item.container, dTable)) }); }\r

      \  if (item.refresh) { item.refresh = false; mStyle(iDiv(item.id),
      item.styles); }\r

      }\r\n"
    sig: function draw_dom(item){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  draw_canvas:
    name: draw_canvas
    code: "function draw_canvas(item) {\r

      \  let r = getRect(dTable);\r

      \  let c = mCanvas(d, { w: r.w, h: r.h, rounding: 0, bg: 'white' });
      let [cv, cx] = [c.cv, c.cx];\r

      \  for (const item of items) {\r

      \    let d1 = item.div = cRect(item.x, item.y, item.w, item.h, { bg:
      item.bg }, cx); \r

      \  }\r

      }\r\n"
    sig: function draw_canvas(item){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  drawloop:
    name: drawloop
    code: "function drawloop() { G.items.map(x => { if (isdef(x.draw)) x.draw(x);
      }); }\r\n"
    sig: function drawloop(){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  mDivCenteredAt:
    name: mDivCenteredAt
    code: "function mDivCenteredAt(pt, dParent, styles = {}, id, inner, classes) {\r

      \  [w, h] = detect_size_from_styles(styles);\r

      \  addKeys({ position: 'relative' }, dParent);\r

      \  copyKeys({ position: 'absolute', x: w / 2, y: h / 2 }, styles);\r

      \  return mDiv(dParent, styles, id, inner, classes);\r

      }\r\n"
    sig: function mDivCenteredAt(pt, dParent, styles = {}, id, inner, classes){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  start_loop:
    name: start_loop
    code: "function start_loop() {\r

      \  TO.running = setInterval(() => {\r

      \    for (const item of G.items) {\r

      \    }\r

      \  }, 100);\r

      }\r\n"
    sig: function start_loop(){}
    region: funcs (helpers.js)
    filename: helpers.js
    type: func
    fname: helpers.js
    path: C:\D\a03\nodemaster\cai\helpers.js
    datetime: 2022-11-13-06-25
    timestamp: 1668349520417.2266
    size: 6043
  toWordsSpeech:
    name: toWordsSpeech
    code: "function toWordsSpeech(s) {\r

      \  var th = ['', 'thousand', 'million', 'billion', 'trillion'];\r

      \  var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six',
      'seven', 'eight', 'nine'];\r

      \  var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen',
      'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\r

      \  var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty',
      'seventy', 'eighty', 'ninety'];\r

      \  s = s.toString();\r

      \  s = s.replace(/[\\, ]/g, '');\r

      \  if (s != parseFloat(s)) return 'not a number';\r

      \  var x = s.indexOf('.');\r

      \  if (x == -1) x = s.length;\r

      \  if (x > 15) return 'too big';\r

      \  var n = s.split('');\r

      \  var str = '';\r

      \  var sk = 0;\r

      \  for (var i = 0; i < x; i++) {\r

      \    if ((x - i) % 3 == 2) {\r

      \      if (n[i] == '1') { str += tn[Number(n[i + 1])] + ' '; i++; sk
      = 1; }\r

      \      else if (n[i] != 0) { str += tw[n[i] - 2] + ' '; sk = 1; }\r

      \    } else if (n[i] != 0) {\r

      \      str += dg[n[i]] + ' '; if ((x - i) % 3 == 0) str += 'hundred
      '; sk = 1;\r

      \    } if ((x - i) % 3 == 1) {\r

      \      if (sk) str += th[(x - i - 1) / 3] + ' '; sk = 0;\r

      \    }\r

      \  }\r

      \  if (x != s.length) {\r

      \    var y = s.length;\r

      \    str += 'point ';\r

      \    str.replace(/\\s+/g, ' ');\r

      \  }\r

      \  return str.trim();\r

      }\r\n"
    sig: function toWordsSpeech(s){}
    region: helpers (speech.js)
    filename: speech.js
    type: func
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  create_menu:
    name: create_menu
    code: "function create_menu(dParent, dir = 'h') {\r

      \  let d;\r

      \  if (dir == 'h') {\r

      \    d = dMenu = mDiv(dParent, { w: '100%', display: 'flex' }); \r

      \  } else {\r

      \    d = dMenu = mDiv(dParent, { padding: 10, gap: 10, h: '100%',
      display: 'flex', dir: dir }); \r

      \  }\r

      \  mToolbar(['grow', 'clear'], handle_command, d, {}, { vmargin: 5
      });\r

      \  mTogglebar({ jitter: false }, flag_toggle, { bg: 'lightgreen' },
      { bg: '#eee' }, d);\r

      \  mLinebreak(dTable, 10);\r

      }\r\n"
    sig: function create_menu(dParent, dir = 'h'){}
    region: funcs (useful.js)
    filename: useful.js
    type: func
    fname: useful.js
    path: C:\D\a03\nodemaster\all\fractals\nature\useful.js
    datetime: 2022-11-15-07-14
    timestamp: 1668525242777.8228
    size: 892
  flag_set:
    name: flag_set
    code: "function flag_set(prop) { G[prop] = true; }\r\n"
    sig: function flag_set(prop){}
    region: funcs (useful.js)
    filename: useful.js
    type: func
    fname: useful.js
    path: C:\D\a03\nodemaster\all\fractals\nature\useful.js
    datetime: 2022-11-15-07-14
    timestamp: 1668525242777.8228
    size: 892
  flag_reset:
    name: flag_reset
    code: "function flag_reset(prop) { G[prop] = false; }\r\n"
    sig: function flag_reset(prop){}
    region: funcs (useful.js)
    filename: useful.js
    type: func
    fname: useful.js
    path: C:\D\a03\nodemaster\all\fractals\nature\useful.js
    datetime: 2022-11-15-07-14
    timestamp: 1668525242777.8228
    size: 892
  flag_toggle:
    name: flag_toggle
    code: "function flag_toggle(name) { if (G[name]) flag_reset(name); else
      flag_set(name); }\r\n"
    sig: function flag_toggle(name){}
    region: funcs (useful.js)
    filename: useful.js
    type: func
    fname: useful.js
    path: C:\D\a03\nodemaster\all\fractals\nature\useful.js
    datetime: 2022-11-15-07-14
    timestamp: 1668525242777.8228
    size: 892
  handle_command:
    name: handle_command
    code: "function handle_command(cmd) {\r

      \  switch (cmd) {\r

      \    case 'clear': G.selist = clear_select(G.selist);
      toolbar_check(); break;\r

      \    case 'next': push_hist(); inc_g_index(); break;\r

      \    case 'back': pop_hist(); dec_g_index(); break;\r

      \    default: console.log('do not know how to handle ***', cmd,
      '***'); break;\r

      \  }\r

      \  console.log('history', G.hist)\r

      \  console.log('current selection', G.selist.map(x => x.name));\r

      }\r\n"
    sig: function handle_command(cmd){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  get_bstp:
    name: get_bstp
    code: "function get_bstp() {\r

      \  const actions = {\r

      \    obst: 'apfel orange assorted plum granat',\r

      \    veggie: 'karotte kartoffel purree kohlsprossen zwiebel
      knoblauch assorted',\r

      \    backen: 'almondhorn gugelhupf vanillekipferl striezelteig
      apfelmus marm',\r

      \    kochen: 'purree hameggs omelette soup mushroom pizza',\r

      \    spaz: 'femto micro macro standard 104 tennis HS safeway
      libTJ',\r

      \    klavier: 'op111 wald1 mond3 etude nocturne ballade ital mozartB
      mozartKKC kk3_3 kk5_2',\r

      \    putzen: 'herd counter kueche eingang guklo stiege loft/guzi
      wohnzi',\r

      \    erltm: 'post zahlen scan emailtm discordtm termin',\r

      \    deconstruction: 'video sleep walkthink libthink
      starbucksthink',\r

      \  };\r

      \  let time = rNumber(1, 5);\r

      \  let points = rNumber(1, 3);\r

      \  let key = rChoose(get_keys(actions));\r

      \  let val = rChoose(actions[key]);\r

      \  console.log('val', val);\r

      }\r\n"
    sig: function get_bstp(){}
    region: funcs (magic.js)
    filename: magic.js
    type: func
    fname: magic.js
    path: C:\D\a03\nodemaster\cai\magic.js
    datetime: 2022-11-19-07-01
    timestamp: 1668870085032.663
    size: 1000
  mAutocomplete:
    name: mAutocomplete
    code: "function mAutocomplete(dParent) {\r

      \  let form = mCreateFrom(`\r

      \    <form class='form' autocomplete=\"off\"
      action=\"javascript:void(0);\">\r

      \      <div class=\"autocomplete\" style=\"width: 200px\">\r

      \        <input id=\"myInput\" type=\"text\" name=\"myCity\"
      placeholder=\"City\" onclick=\"select()\" />\r

      \      </div>\r

      \      <input style=\"margin-left:-15px\" type=\"submit\"
      value=\"Go!\" />\r

      \    </form>\r

      \  `  );\r

      \  form.onsubmit = () => {\r

      \    let c = mBy('myInput').value.toLowerCase();\r

      \    let o = Geo.cities[c];\r

      \    if (nundef(o)) { c = toUmlaut(c); o = Geo.cities[c]; }\r

      \    console.log('c', c);\r

      \    let center = o.center;\r

      \    M.map.flyTo(center, M.map.getZoom(), { animate: false })\r

      \  }\r

      \  let d = mAppend(dParent, form);\r

      \  autocomplete('myInput', get_values(Geo.cities).map(x =>
      x.name));\r

      }\r\n"
    sig: function mAutocomplete(dParent){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCanvas:
    name: mCanvas
    code: "function mCanvas(dParent, styles = {}, bstyles = {}, play = null, pause =
      null, origin = 'tl') {\r

      \  let cv = mCreate('canvas');\r

      \  mAppend(toElem(dParent), cv);\r

      \  addKeys({ w: 500, h: 500, bg: '#222', rounding: 10 }, styles);\r

      \  mStyle(cv, styles);\r

      \  let [w, h] = [cv.width, cv.height] = [styles.w, styles.h];\r

      \  let cx = cv.getContext('2d');\r

      \  let [x, y] = posToPoint(origin, w, h);\r

      \  cx.translate(x, y);\r

      \  if (!play) return { cv: cv, cx: cx, origin: { x: x, y: y }, x: 0,
      y: 0, w: w, h: h };\r

      \  mLinebreak(dParent)\r

      \  addKeys({ fz: 28, fg: 'skyblue', display: 'flex', ajcenter: true,
      w: styles.w }, bstyles)\r

      \  let controls = mPlayPause(dParent, bstyles, play, pause);\r

      \  return { cv: cv, cx: cx, origin: { x: x, y: y }, x: 0, y: 0, w:
      w, h: h, controls: controls.ui, play: controls.play, pause:
      controls.pause, stop: controls.play, stop: controls.pause };\r

      }\r\n"
    sig: function mCanvas(dParent, styles = {}, bstyles = {}, play = null, pause =
      null, origin = 'tl'){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCenter:
    name: mCenter
    code: "function mCenter(d, gap) { mCenterFlex(d, true, false, true, gap); }\r\n"
    sig: function mCenter(d, gap){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mCenterCenter:
    name: mCenterCenter
    code: "function mCenterCenter(d, gap) { mCenterCenterFlex(d, gap); }\r\n"
    sig: function mCenterCenter(d, gap){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mClassToggle:
    name: mClassToggle
    code: "function mClassToggle(d, classes) {\r

      \  let wlist = toWords(classes);\r

      \  d = toElem(d);\r

      \  for (const c of wlist) if (d.classList.contains(c))
      mClassRemove(d, c); else mClass(d, c);\r

      }\r\n"
    sig: function mClassToggle(d, classes){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mDivLine:
    name: mDivLine
    code: "function mDivLine(dParent, styles = {}, id = null, innerlist = ['', '',
      ''], classes = null) {\r

      \  addKeys({ w: '100%', box: true, padding: 4 }, styles);\r

      \  let d = mDiv(dParent, styles, id,
      `<div>${innerlist[0]}</div><div>${innerlist[1]}</div><div>${innerlist[2]}\
      </div>`, classes);\r

      \  mStyle(d, { display: 'flex', 'justify-content': 'space-between',
      'align-items': 'center' });\r

      \  return d;\r

      }\r\n"
    sig: function mDivLine(dParent, styles = {}, id = null, innerlist = ['', '',
      ''], classes = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _unfocusOnEnter:
    name: _unfocusOnEnter
    code: "function _unfocusOnEnter(ev) { if (ev.key === 'Enter') {
      ev.preventDefault(); mBy('dummy').focus(); } }\r\n"
    sig: function _unfocusOnEnter(ev){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _selectText:
    name: _selectText
    code: "function _selectText(el) {\r

      \  var sel, range;\r

      \  if (window.getSelection && document.createRange) {\r

      \    sel = window.getSelection();\r

      \    if (sel.toString() == '') {\r

      \      window.setTimeout(function () {\r

      \        range = document.createRange();\r

      \        range.selectNodeContents(el);\r

      \        sel.removeAllRanges();\r

      \        sel.addRange(range);\r

      \      }, 1);\r

      \    }\r

      \  } else if (document.selection) {\r

      \    sel = document.selection.createRange();\r

      \    if (sel.text == '') {\r

      \      range = document.body.createTextRange();\r

      \      range.moveToElementText(el);\r

      \      range.select();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function _selectText(el){}
    region: CLEANUP (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPlayPause:
    name: mPlayPause
    code: "function mPlayPause(dParent, styles = {}, handle_play = null,
      handle_pause = null) {\r

      \  if (!handle_play) handle_play = audio_onclick_pp;\r

      \  if (!handle_pause) handle_pause = handle_play;\r

      \  let html = `\r

      \    <div id=\"dButtons\">\r

      \      <a id=\"bPlay\" href=\"#\">\r

      \        <i class=\"fa fa-play fa-2x\"></i>\r

      \      </a>\r

      \      <a id=\"bPause\" href=\"#\" style=\"display: none\">\r

      \        <i class=\"fa fa-pause fa-2x\"></i>\r

      \      </a>\r

      \    </div>\r

      \  `;\r

      \  let pp = mCreateFrom(html);\r

      \  mAppend(dParent, pp);\r

      \  addKeys({ fz: 28, fg: 'lightgreen', display: 'flex', ajcenter:
      true, w: getRect(dParent).w }, styles);\r

      \  mStyle(pp, styles);\r

      \  mBy('bPlay').onclick = () => { hide0('bPlay'); show0('bPause');
      handle_play(); }\r

      \  mBy('bPause').onclick = () => { hide0('bPause'); show0('bPlay');
      handle_pause(); }\r

      \  let [fg, fz] = [styles.fg, styles.fz];\r

      \  mStyle(mBy('bPlay'), { fg: fg, fz: fz })\r

      \  mStyle(mBy('bPause'), { fg: fg, fz: fz })\r

      \  return { ui: pp, play: () => fireClick(mBy('bPlay')), pause: ()
      => fireClick(mBy('bPause')) };\r

      }\r\n"
    sig: function mPlayPause(dParent, styles = {}, handle_play = null, handle_pause
      = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSection:
    name: mSection
    code: "function mSection(styles = {}, id, inner, tag, classes) {\r

      \  let d = mBy(id);\r

      \  addKeys({ position: 'relative' }, styles);\r

      \  mStyle(d, styles);\r

      \  if (isdef(tag) && isdef(inner)) inner =
      `<${tag}>${inner}</${tag}>`;\r

      \  if (isdef(inner)) d.innerHTML = inner;\r

      \  if (isdef(classes)) mClass(d, classes);\r

      \  return d;\r

      }\r\n"
    sig: function mSection(styles = {}, id, inner, tag, classes){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _gCreate:
    name: _gCreate
    code: "function _gCreate(tag) { return document.createElementNS('http:/' +
      '/www.w3.org/2000/svg', tag); }\r\n"
    sig: function _gCreate(tag){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _mStamp:
    name: _mStamp
    code: "function _mStamp(d1, text, color, sz) {\r

      \  mStyle(d1, { position: 'relative' });\r

      \  let r = getRect(d1);\r

      \  let [w, h] = [r.w, r.h];\r

      \  color = ['green', 'red', 'blue'].includes(color) ? color :
      'black';\r

      \  sz = valf(sz, r.h / 7);\r

      \  console.log('r', r, 'sz', sz);\r

      \  let [padding, border, rounding, angle] = [sz / 10, sz / 6, sz /
      8, rNumber(-25, 25)];\r

      \  let d2 = mDiv(d1, {\r

      \    fg: color,\r

      \    position: 'absolute', top: 25, left: 5,\r

      \    transform: `rotate(${angle}deg)`,\r

      \    fz: sz,\r

      \    hpadding: 2,\r

      \    vpadding: 0,\r

      \    rounding: rounding,\r

      \    weight: 400,\r

      \    display: 'inline-block',\r

      \    'text-transform': 'uppercase',\r

      \    family: 'fredericka',\r

      \    'mix-blend-mode': 'multiply',\r

      \  }, null, text);\r

      \  mClass(d2, `${color}stamp`);\r

      }\r\n"
    sig: function _mStamp(d1, text, color, sz){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTag:
    name: mTag
    code: "function mTag(tag, inner = null, dParent = null, styles = {}, id = null,
      classes = null) {\r

      \  let el = mCreate(tag);\r

      \  if (inner) el.innerHTML = inner; //'Descriptive Text goes
      here';\r

      \  if (dParent) mAppend(dParent, el);\r

      \  if (styles) mStyle(el, styles);\r

      \  if (id) el.id = id;\r

      \  if (classes) mClass(el, classes);\r

      \  return el;\r

      }\r\n"
    sig: function mTag(tag, inner = null, dParent = null, styles = {}, id = null,
      classes = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mStyleGet:
    name: mStyleGet
    code: "function mStyleGet(elem, prop) { return mGetStyle(elem, prop); }\r\n"
    sig: function mStyleGet(elem, prop){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mStyleUndo:
    name: mStyleUndo
    code: "function mStyleUndo(ui, styles = {}) {\r

      \  for (const k in styles) {\r

      \    let key = valf(STYLE_PARAMS[k], k);\r

      \    ui.style[key] = null;\r

      \  }\r

      }\r\n"
    sig: function mStyleUndo(ui, styles = {}){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mStyleOrClass:
    name: mStyleOrClass
    code: "function mStyleOrClass(elem, st) { if (isString(st)) mClass(elem, st);
      else mStyle(elem, st); }\r\n"
    sig: function mStyleOrClass(elem, st){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTextWidth:
    name: mTextWidth
    code: "function mTextWidth(txt, fz = 16) {\r

      \  let len = txt.length;\r

      \  let wprox = (len + 1.5) * fz / 2;\r

      \  return wprox;\r

      }\r\n"
    sig: function mTextWidth(txt, fz = 16){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getTextWidth:
    name: getTextWidth
    code: "function getTextWidth(text, font) {\r

      \  var canvas = getTextWidth.canvas || (getTextWidth.canvas =
      document.createElement('canvas'));\r

      \  var context = canvas.getContext('2d');\r

      \  context.font = font;\r

      \  var metrics = context.measureText(text);\r

      \  return metrics.width;\r

      }\r\n"
    sig: function getTextWidth(text, font){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  measureText:
    name: measureText
    code: "function measureText(text, styles = {}, cx = null) {\r

      \  if (!cx) {\r

      \    var canvas = getTextWidth.canvas || (getTextWidth.canvas =
      document.createElement('canvas'));\r

      \    cx = canvas.getContext('2d');\r

      \  }\r

      \  cx.font = isdef(styles.font) ? styles.font : `${styles.fz}px
      ${styles.family}`;\r

      \  var metrics = cx.measureText(text);\r

      \  return { w: metrics.width, h: metrics.actualBoundingBoxAscent +
      metrics.actualBoundingBoxDescent };\r

      }\r\n"
    sig: function measureText(text, styles = {}, cx = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTogglebar:
    name: mTogglebar
    code: "function mTogglebar(di, handler, styleyes, styleno, dParent, styles,
      bstyles, id, classes, bclasses) {\r

      \  let d = mDiv(dParent, styles, id, classes);\r

      \  for (const k in di) {\r

      \    mToggle(k, d, bstyles, handler, di[k], styleyes, styleno,
      bclasses);\r

      \  }\r

      }\r\n"
    sig: function mTogglebar(di, handler, styleyes, styleno, dParent, styles,
      bstyles, id, classes, bclasses){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mToolbar:
    name: mToolbar
    code: "function mToolbar(buttons, handler, dParent, styles = {}, bstyles = {},
      id = null, classes = null, bclasses = null) {\r

      \  let d = mDiv(dParent, styles, id, classes);\r

      \  for (const arg of buttons) {\r

      \    let funcname = replaceWhite(arg);\r

      \    mButton(arg, () => handler(arg), d, bstyles, bclasses,
      `b${funcname}`);\r

      \  }\r

      \  return d;\r

      }\r\n"
    sig: function mToolbar(buttons, handler, dParent, styles = {}, bstyles = {}, id
      = null, classes = null, bclasses = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mPuppet:
    name: mPuppet
    code: "function mPuppet(key, dParent, styles = {}, dist = 250) {\r

      \  if (nundef(dParent)) dParent = document.body; else dParent =
      toElem(dParent);\r

      \  addKeys({ position: 'fixed', fz: 40, left: 40, top: 40 },
      styles);\r

      \  dPuppet = miPic(key, dParent, styles);\r

      \  aRollby(dPuppet, dist);\r

      }\r\n"
    sig: function mPuppet(key, dParent, styles = {}, dist = 250){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aRollby:
    name: aRollby
    code: "function aRollby(elem, dx = 100, ms = 3000) {\r

      \  anime({ targets: elem, translateX: dx, rotate: '1turn', duration:
      ms });\r

      }\r\n"
    sig: function aRollby(elem, dx = 100, ms = 3000){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aJumpby:
    name: aJumpby
    code: "function aJumpby(elem, h = 40, ms = 1000) {\r

      \  anime({\r

      \    targets: elem,\r

      \    keyframes: [\r

      \      { translateY: 2, scaleX: 1.05, scaleY: .95 },\r

      \      { translateY: 2, scaleX: 1.05, scaleY: .95 },\r

      \      { translateY: -h, scaleX: .9, scaleY: 1.1 },\r

      \      { translateY: -h, scaleX: .9, scaleY: 1.1 },\r

      \      { translateY: 0, scaleX: 1, scaleY: 1 },\r

      \      { translateY: -7, scaleX: 1, scaleY: 1 },\r

      \      { translateY: 0, scaleX: 1, scaleY: 1 },\r

      \      { translateY: 0, scaleX: 1, scaleY: 1 },\r

      \      { translateY: 0, scaleX: 1, scaleY: 1 },\r

      \      { translateY: 0, scaleX: 1, scaleY: 1 },\r

      \    ],\r

      \    duration: 1000,\r

      \    easing: 'easeInOutSine', //'easeOutElastic(1, .8)',\r

      \  });\r

      }\r\n"
    sig: function aJumpby(elem, h = 40, ms = 1000){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cClear:
    name: cClear
    code: "function cClear(cnv = null, ctx = null) {\r

      \  if (nundef(cnv)) { cnv = CV; ctx = CX; if (!ctx) return; }\r

      \  ctx.save();\r

      \  ctx.setTransform(1, 0, 0, 1, 0, 0);\r

      \  ctx.clearRect(0, 0, cnv.width, cnv.height);\r

      \  ctx.restore();\r

      }\r\n"
    sig: function cClear(cnv = null, ctx = null){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cEllipse:
    name: cEllipse
    code: "function cEllipse(x, y, w, h, styles = null, angle = 0, ctx = null) {\r

      \  if (nundef(ctx)) { ctx = CX; if (!ctx) return; }\r

      \  if (styles) cStyle(styles, ctx);\r

      \  ctx.beginPath();\r

      \  ctx.ellipse(x, y, w / 2, h / 2, -angle, 0, 2 * Math.PI);\r

      \  if (isdef(styles.bg) || nundef(styles.fg)) ctx.fill();\r

      \  if (isdef(styles.fg)) ctx.stroke();\r

      }\r\n"
    sig: function cEllipse(x, y, w, h, styles = null, angle = 0, ctx = null){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cLine:
    name: cLine
    code: "function cLine(x1, y1, x2, y2, styles = null, ctx = null) {\r

      \  if (nundef(ctx)) { ctx = CX; if (!ctx) return; }\r

      \  if (styles) cStyle(styles, ctx);\r

      \  ctx.beginPath();\r

      \  ctx.moveTo(x1, y1);\r

      \  ctx.lineTo(x2, y2)\r

      \  ctx.stroke();\r

      }\r\n"
    sig: function cLine(x1, y1, x2, y2, styles = null, ctx = null){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cRect:
    name: cRect
    code: "function cRect(x, y, w, h, styles = null, ctx = null) {\r

      \  if (nundef(ctx)) { ctx = CX; if (!ctx) return; }\r

      \  if (styles) cStyle(styles, ctx);\r

      \  if (isdef(styles.bg) || nundef(styles.fg)) ctx.fillRect(x, y, w,
      h);\r

      \  if (isdef(styles.fg)) ctx.strokeRect(x, y, w, h);\r

      }\r\n"
    sig: function cRect(x, y, w, h, styles = null, ctx = null){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cStyle:
    name: cStyle
    code: "function cStyle(styles, ctx) {\r

      \  if (nundef(ctx)) { ctx = CX; if (nundef(ctx)) { console.log('ctx
      undefined!!!!!!!'); return; } }\r

      \  const di = { bg: 'fillStyle', fill: 'fillStyle', stroke:
      'strokeStyle', fg: 'strokeStyle', thickness: 'lineWidth', thick:
      'lineWidth', cap: 'lineCap', ending: 'lineCap' };\r

      \  if (isdef(styles)) {\r

      \    for (const k in styles) { ctx[isdef(di[k]) ? di[k] : k] =
      styles[k]; }\r

      \  }\r

      }\r\n"
    sig: function cStyle(styles, ctx){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cShadow:
    name: cShadow
    code: "function cShadow(ctx, color, offx, offy, blur) {\r

      \  ctx.shadowColor = color;\r

      \  ctx.shadowOffsetX = offx;\r

      \  ctx.shadowOffsetY = offy;\r

      \  ctx.shadowBlur = blur;\r

      }\r\n"
    sig: function cShadow(ctx, color, offx, offy, blur){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cSetOrigin:
    name: cSetOrigin
    code: "function cSetOrigin(ctx, x, y) {\r

      \  ctx.translate(x, y);\r

      }\r\n"
    sig: function cSetOrigin(ctx, x, y){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cCenterOrigin:
    name: cCenterOrigin
    code: "function cCenterOrigin(cnv, ctx) {\r

      \  cSetOrigin(ctx, cnv.width / 2, cnv.height / 2);\r

      }\r\n"
    sig: function cCenterOrigin(cnv, ctx){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cColor:
    name: cColor
    code: "function cColor(fill, cvx) { if (nundef(cvx)) cvx = CX; CX.fillStyle =
      fill; }\r\n"
    sig: function cColor(fill, cvx){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cStyle_dep:
    name: cStyle_dep
    code: "function cStyle_dep(cvx, fill, stroke, wline, cap) {\r

      \  cvx.fillStyle = fill;\r

      \  if (isdef(stroke)) cvx.strokeStyle = stroke;\r

      \  if (isdef(wline)) cvx.lineWidth = wline;\r

      \  if (isdef(cap)) cvx.lineCap = cap;\r

      }\r\n"
    sig: function cStyle_dep(cvx, fill, stroke, wline, cap){}
    region: canvas (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _gSizeToContent:
    name: _gSizeToContent
    code: "function _gSizeToContent(svg) {\r

      \  var bbox = svg.getBBox();\r

      \  svg.setAttribute(\"width\", bbox.x + bbox.width + bbox.x);\r

      \  svg.setAttribute(\"height\", bbox.y + bbox.height + bbox.y);\r

      }\r\n"
    sig: function _gSizeToContent(svg){}
    region: SVG (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  audio_beep:
    name: audio_beep
    code: "function audio_beep(vol, freq, duration) {\r

      \  console.log('sollte beepen!!!');\r

      \  if (nundef(_AUDIOCONTEXT)) _AUDIOCONTEXT = new AudioContext();\r

      \  let a = _AUDIOCONTEXT;\r

      \  v = a.createOscillator()\r

      \  u = a.createGain()\r

      \  v.connect(u)\r

      \  v.frequency.value = freq\r

      \  v.type = \"square\";\r

      \  u.connect(a.destination)\r

      \  u.gain.value = vol * 0.01\r

      \  v.start(a.currentTime)\r

      \  v.stop(a.currentTime + duration * 0.001);\r

      }\r\n"
    sig: function audio_beep(vol, freq, duration){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  audio_play:
    name: audio_play
    code: "function audio_play(key, wait = true) {\r

      \  if (!wait) _qSound = [];\r

      \  _enqSound(key);\r

      \  if (_idleSound) { _idleSound = false; _deqSound(); }\r

      }\r\n"
    sig: function audio_play(key, wait = true){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  audio_pause:
    name: audio_pause
    code: "function audio_pause() {\r

      \  _qSound = [];\r

      \  if (_loaded && isdef(_sndPlayer)) {\r

      \    clearTimeout(_TOSound);\r

      \    _sndPlayer.onended = null;\r

      \    _sndPlayer.onpause = _whenSoundPaused;\r

      \    _sndPlayer.pause();\r

      \  }\r

      }\r\n"
    sig: function audio_pause(){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  audio_playing:
    name: audio_playing
    code: "function audio_playing() { return DA.isSound; }\r\n"
    sig: function audio_playing(){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  audio_toggle:
    name: audio_toggle
    code: "function audio_toggle(key) {\r

      \  if (DA.isSound == true) { audio_pause(); DA.isSound = false;
      return; }\r

      \  audio_play(key);\r

      \  DA.isSound = true;\r

      }\r\n"
    sig: function audio_toggle(key){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  audio_onclick_pp:
    name: audio_onclick_pp
    code: "function audio_onclick_pp() {\r

      \  audio_toggle('mozart');\r

      \  if (audio_playing()) { hide0('bPlay'); show0('bPause'); } else {
      hide0('bPause'); show0('bPlay'); }\r

      }\r\n"
    sig: function audio_onclick_pp(){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _whenSoundPaused:
    name: _whenSoundPaused
    code: "function _whenSoundPaused() {\r

      \  _sndPlayer = null;\r

      \  _sndPlayerIdle = true;\r

      \  _loaded = false;\r

      \  if (!isEmpty(_qSound)) { _deqSound(); } else { _idleSound = true;
      }\r

      }\r\n"
    sig: function _whenSoundPaused(){}
    region: audio (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorMap:
    name: colorMap
    code: "function colorMap(spec) {\r

      \  const Colormap = {\r

      \    \"jet\": [{ \"index\": 0, \"rgb\": [0, 0, 131] }, { \"index\":
      0.125, \"rgb\": [0, 60, 170] }, { \"index\": 0.375, \"rgb\": [5, 255, 255]
      }, { \"index\": 0.625, \"rgb\": [255, 255, 0] }, { \"index\": 0.875,
      \"rgb\": [250, 0, 0] }, { \"index\": 1, \"rgb\": [128, 0, 0] }],\r

      \    \"hsv\": [{ \"index\": 0, \"rgb\": [255, 0, 0] }, { \"index\":
      0.169, \"rgb\": [253, 255, 2] }, { \"index\": 0.173, \"rgb\": [247, 255,
      2] }, { \"index\": 0.337, \"rgb\": [0, 252, 4] }, { \"index\": 0.341,
      \"rgb\": [0, 252, 10] }, { \"index\": 0.506, \"rgb\": [1, 249, 255] }, {
      \"index\": 0.671, \"rgb\": [2, 0, 253] }, { \"index\": 0.675, \"rgb\": [8,
      0, 253] }, { \"index\": 0.839, \"rgb\": [255, 0, 251] }, { \"index\":
      0.843, \"rgb\": [255, 0, 245] }, { \"index\": 1, \"rgb\": [255, 0, 6]
      }],\r

      \    \"hot\": [{ \"index\": 0, \"rgb\": [0, 0, 0] }, { \"index\":
      0.3, \"rgb\": [230, 0, 0] }, { \"index\": 0.6, \"rgb\": [255, 210, 0] }, {
      \"index\": 1, \"rgb\": [255, 255, 255] }],\r

      \    \"spring\": [{ \"index\": 0, \"rgb\": [255, 0, 255] }, {
      \"index\": 1, \"rgb\": [255, 255, 0] }],\r

      \    \"summer\": [{ \"index\": 0, \"rgb\": [0, 128, 102] }, {
      \"index\": 1, \"rgb\": [255, 255, 102] }],\r

      \    \"autumn\": [{ \"index\": 0, \"rgb\": [255, 0, 0] }, {
      \"index\": 1, \"rgb\": [255, 255, 0] }],\r

      \    \"winter\": [{ \"index\": 0, \"rgb\": [0, 0, 255] }, {
      \"index\": 1, \"rgb\": [0, 255, 128] }],\r

      \    \"bone\": [{ \"index\": 0, \"rgb\": [0, 0, 0] }, { \"index\":
      0.376, \"rgb\": [84, 84, 116] }, { \"index\": 0.753, \"rgb\": [169, 200,
      200] }, { \"index\": 1, \"rgb\": [255, 255, 255] }],\r

      \    \"copper\": [{ \"index\": 0, \"rgb\": [0, 0, 0] }, { \"index\":
      0.804, \"rgb\": [255, 160, 102] }, { \"index\": 1, \"rgb\": [255, 199,
      127] }],\r

      \    \"greys\": [{ \"index\": 0, \"rgb\": [0, 0, 0] }, { \"index\":
      1, \"rgb\": [255, 255, 255] }],\r

      \    \"yignbu\": [{ \"index\": 0, \"rgb\": [8, 29, 88] }, {
      \"index\": 0.125, \"rgb\": [37, 52, 148] }, { \"index\": 0.25, \"rgb\":
      [34, 94, 168] }, { \"index\": 0.375, \"rgb\": [29, 145, 192] }, {
      \"index\": 0.5, \"rgb\": [65, 182, 196] }, { \"index\": 0.625, \"rgb\":
      [127, 205, 187] }, { \"index\": 0.75, \"rgb\": [199, 233, 180] }, {
      \"index\": 0.875, \"rgb\": [237, 248, 217] }, { \"index\": 1, \"rgb\":
      [255, 255, 217] }],\r

      \    \"greens\": [{ \"index\": 0, \"rgb\": [0, 68, 27] }, {
      \"index\": 0.125, \"rgb\": [0, 109, 44] }, { \"index\": 0.25, \"rgb\":
      [35, 139, 69] }, { \"index\": 0.375, \"rgb\": [65, 171, 93] }, {
      \"index\": 0.5, \"rgb\": [116, 196, 118] }, { \"index\": 0.625, \"rgb\":
      [161, 217, 155] }, { \"index\": 0.75, \"rgb\": [199, 233, 192] }, {
      \"index\": 0.875, \"rgb\": [229, 245, 224] }, { \"index\": 1, \"rgb\":
      [247, 252, 245] }],\r

      \    \"yiorrd\": [{ \"index\": 0, \"rgb\": [128, 0, 38] }, {
      \"index\": 0.125, \"rgb\": [189, 0, 38] }, { \"index\": 0.25, \"rgb\":
      [227, 26, 28] }, { \"index\": 0.375, \"rgb\": [252, 78, 42] }, {
      \"index\": 0.5, \"rgb\": [253, 141, 60] }, { \"index\": 0.625, \"rgb\":
      [254, 178, 76] }, { \"index\": 0.75, \"rgb\": [254, 217, 118] }, {
      \"index\": 0.875, \"rgb\": [255, 237, 160] }, { \"index\": 1, \"rgb\":
      [255, 255, 204] }],\r

      \    \"bluered\": [{ \"index\": 0, \"rgb\": [0, 0, 255] }, {
      \"index\": 1, \"rgb\": [255, 0, 0] }],\r

      \    \"rdbu\": [{ \"index\": 0, \"rgb\": [5, 10, 172] }, {
      \"index\": 0.35, \"rgb\": [106, 137, 247] }, { \"index\": 0.5, \"rgb\":
      [190, 190, 190] }, { \"index\": 0.6, \"rgb\": [220, 170, 132] }, {
      \"index\": 0.7, \"rgb\": [230, 145, 90] }, { \"index\": 1, \"rgb\": [178,
      10, 28] }],\r

      \    \"picnic\": [{ \"index\": 0, \"rgb\": [0, 0, 255] }, {
      \"index\": 0.1, \"rgb\": [51, 153, 255] }, { \"index\": 0.2, \"rgb\":
      [102, 204, 255] }, { \"index\": 0.3, \"rgb\": [153, 204, 255] }, {
      \"index\": 0.4, \"rgb\": [204, 204, 255] }, { \"index\": 0.5, \"rgb\":
      [255, 255, 255] }, { \"index\": 0.6, \"rgb\": [255, 204, 255] }, {
      \"index\": 0.7, \"rgb\": [255, 153, 255] }, { \"index\": 0.8, \"rgb\":
      [255, 102, 204] }, { \"index\": 0.9, \"rgb\": [255, 102, 102] }, {
      \"index\": 1, \"rgb\": [255, 0, 0] }],\r

      \    \"rainbow\": [{ \"index\": 0, \"rgb\": [150, 0, 90] }, {
      \"index\": 0.125, \"rgb\": [0, 0, 200] }, { \"index\": 0.25, \"rgb\": [0,
      25, 255] }, { \"index\": 0.375, \"rgb\": [0, 152, 255] }, { \"index\":
      0.5, \"rgb\": [44, 255, 150] }, { \"index\": 0.625, \"rgb\": [151, 255, 0]
      }, { \"index\": 0.75, \"rgb\": [255, 234, 0] }, { \"index\": 0.875,
      \"rgb\": [255, 111, 0] }, { \"index\": 1, \"rgb\": [255, 0, 0] }],\r

      \    \"portland\": [{ \"index\": 0, \"rgb\": [12, 51, 131] }, {
      \"index\": 0.25, \"rgb\": [10, 136, 186] }, { \"index\": 0.5, \"rgb\":
      [242, 211, 56] }, { \"index\": 0.75, \"rgb\": [242, 143, 56] }, {
      \"index\": 1, \"rgb\": [217, 30, 30] }],\r

      \    \"blackbody\": [{ \"index\": 0, \"rgb\": [0, 0, 0] }, {
      \"index\": 0.2, \"rgb\": [230, 0, 0] }, { \"index\": 0.4, \"rgb\": [230,
      210, 0] }, { \"index\": 0.7, \"rgb\": [255, 255, 255] }, { \"index\": 1,
      \"rgb\": [160, 200, 255] }],\r

      \    \"earth\": [{ \"index\": 0, \"rgb\": [0, 0, 130] }, {
      \"index\": 0.1, \"rgb\": [0, 180, 180] }, { \"index\": 0.2, \"rgb\": [40,
      210, 40] }, { \"index\": 0.4, \"rgb\": [230, 230, 50] }, { \"index\": 0.6,
      \"rgb\": [120, 70, 20] }, { \"index\": 1, \"rgb\": [255, 255, 255] }],\r

      \    \"electric\": [{ \"index\": 0, \"rgb\": [0, 0, 0] }, {
      \"index\": 0.15, \"rgb\": [30, 0, 100] }, { \"index\": 0.4, \"rgb\": [120,
      0, 100] }, { \"index\": 0.6, \"rgb\": [160, 90, 0] }, { \"index\": 0.8,
      \"rgb\": [230, 200, 0] }, { \"index\": 1, \"rgb\": [255, 250, 220] }],\r

      \    \"alpha\": [{ \"index\": 0, \"rgb\": [255, 255, 255, 0] }, {
      \"index\": 1, \"rgb\": [255, 255, 255, 1] }],\r

      \    \"viridis\": [{ \"index\": 0, \"rgb\": [68, 1, 84] }, {
      \"index\": 0.13, \"rgb\": [71, 44, 122] }, { \"index\": 0.25, \"rgb\":
      [59, 81, 139] }, { \"index\": 0.38, \"rgb\": [44, 113, 142] }, {
      \"index\": 0.5, \"rgb\": [33, 144, 141] }, { \"index\": 0.63, \"rgb\":
      [39, 173, 129] }, { \"index\": 0.75, \"rgb\": [92, 200, 99] }, {
      \"index\": 0.88, \"rgb\": [170, 220, 50] }, { \"index\": 1, \"rgb\": [253,
      231, 37] }],\r

      \    \"inferno\": [{ \"index\": 0, \"rgb\": [0, 0, 4] }, {
      \"index\": 0.13, \"rgb\": [31, 12, 72] }, { \"index\": 0.25, \"rgb\": [85,
      15, 109] }, { \"index\": 0.38, \"rgb\": [136, 34, 106] }, { \"index\":
      0.5, \"rgb\": [186, 54, 85] }, { \"index\": 0.63, \"rgb\": [227, 89, 51]
      }, { \"index\": 0.75, \"rgb\": [249, 140, 10] }, { \"index\": 0.88,
      \"rgb\": [249, 201, 50] }, { \"index\": 1, \"rgb\": [252, 255, 164] }],\r

      \    \"magma\": [{ \"index\": 0, \"rgb\": [0, 0, 4] }, { \"index\":
      0.13, \"rgb\": [28, 16, 68] }, { \"index\": 0.25, \"rgb\": [79, 18, 123]
      }, { \"index\": 0.38, \"rgb\": [129, 37, 129] }, { \"index\": 0.5,
      \"rgb\": [181, 54, 122] }, { \"index\": 0.63, \"rgb\": [229, 80, 100] }, {
      \"index\": 0.75, \"rgb\": [251, 135, 97] }, { \"index\": 0.88, \"rgb\":
      [254, 194, 135] }, { \"index\": 1, \"rgb\": [252, 253, 191] }],\r

      \    \"plasma\": [{ \"index\": 0, \"rgb\": [13, 8, 135] }, {
      \"index\": 0.13, \"rgb\": [75, 3, 161] }, { \"index\": 0.25, \"rgb\":
      [125, 3, 168] }, { \"index\": 0.38, \"rgb\": [168, 34, 150] }, {
      \"index\": 0.5, \"rgb\": [203, 70, 121] }, { \"index\": 0.63, \"rgb\":
      [229, 107, 93] }, { \"index\": 0.75, \"rgb\": [248, 148, 65] }, {
      \"index\": 0.88, \"rgb\": [253, 195, 40] }, { \"index\": 1, \"rgb\": [240,
      249, 33] }],\r

      \    \"warm\": [{ \"index\": 0, \"rgb\": [125, 0, 179] }, {
      \"index\": 0.13, \"rgb\": [172, 0, 187] }, { \"index\": 0.25, \"rgb\":
      [219, 0, 170] }, { \"index\": 0.38, \"rgb\": [255, 0, 130] }, { \"index\":
      0.5, \"rgb\": [255, 63, 74] }, { \"index\": 0.63, \"rgb\": [255, 123, 0]
      }, { \"index\": 0.75, \"rgb\": [234, 176, 0] }, { \"index\": 0.88,
      \"rgb\": [190, 228, 0] }, { \"index\": 1, \"rgb\": [147, 255, 0] }],\r

      \    \"cool\": [{ \"index\": 0, \"rgb\": [125, 0, 179] }, {
      \"index\": 0.13, \"rgb\": [116, 0, 218] }, { \"index\": 0.25, \"rgb\":
      [98, 74, 237] }, { \"index\": 0.38, \"rgb\": [68, 146, 231] }, {
      \"index\": 0.5, \"rgb\": [0, 204, 197] }, { \"index\": 0.63, \"rgb\": [0,
      247, 146] }, { \"index\": 0.75, \"rgb\": [0, 255, 88] }, { \"index\":
      0.88, \"rgb\": [40, 255, 8] }, { \"index\": 1, \"rgb\": [147, 255, 0]
      }],\r

      \    \"rainbow-soft\": [{ \"index\": 0, \"rgb\": [125, 0, 179] }, {
      \"index\": 0.1, \"rgb\": [199, 0, 180] }, { \"index\": 0.2, \"rgb\": [255,
      0, 121] }, { \"index\": 0.3, \"rgb\": [255, 108, 0] }, { \"index\": 0.4,
      \"rgb\": [222, 194, 0] }, { \"index\": 0.5, \"rgb\": [150, 255, 0] }, {
      \"index\": 0.6, \"rgb\": [0, 255, 55] }, { \"index\": 0.7, \"rgb\": [0,
      246, 150] }, { \"index\": 0.8, \"rgb\": [50, 167, 222] }, { \"index\":
      0.9, \"rgb\": [103, 51, 235] }, { \"index\": 1, \"rgb\": [124, 0, 186]
      }],\r

      \    \"bathymetry\": [{ \"index\": 0, \"rgb\": [40, 26, 44] }, {
      \"index\": 0.13, \"rgb\": [59, 49, 90] }, { \"index\": 0.25, \"rgb\": [64,
      76, 139] }, { \"index\": 0.38, \"rgb\": [63, 110, 151] }, { \"index\":
      0.5, \"rgb\": [72, 142, 158] }, { \"index\": 0.63, \"rgb\": [85, 174, 163]
      }, { \"index\": 0.75, \"rgb\": [120, 206, 163] }, { \"index\": 0.88,
      \"rgb\": [187, 230, 172] }, { \"index\": 1, \"rgb\": [253, 254, 204] }],\r

      \    \"cdom\": [{ \"index\": 0, \"rgb\": [47, 15, 62] }, {
      \"index\": 0.13, \"rgb\": [87, 23, 86] }, { \"index\": 0.25, \"rgb\":
      [130, 28, 99] }, { \"index\": 0.38, \"rgb\": [171, 41, 96] }, { \"index\":
      0.5, \"rgb\": [206, 67, 86] }, { \"index\": 0.63, \"rgb\": [230, 106, 84]
      }, { \"index\": 0.75, \"rgb\": [242, 149, 103] }, { \"index\": 0.88,
      \"rgb\": [249, 193, 135] }, { \"index\": 1, \"rgb\": [254, 237, 176] }],\r

      \    \"chlorophyll\": [{ \"index\": 0, \"rgb\": [18, 36, 20] }, {
      \"index\": 0.13, \"rgb\": [25, 63, 41] }, { \"index\": 0.25, \"rgb\": [24,
      91, 59] }, { \"index\": 0.38, \"rgb\": [13, 119, 72] }, { \"index\": 0.5,
      \"rgb\": [18, 148, 80] }, { \"index\": 0.63, \"rgb\": [80, 173, 89] }, {
      \"index\": 0.75, \"rgb\": [132, 196, 122] }, { \"index\": 0.88, \"rgb\":
      [175, 221, 162] }, { \"index\": 1, \"rgb\": [215, 249, 208] }],\r

      \    \"density\": [{ \"index\": 0, \"rgb\": [54, 14, 36] }, {
      \"index\": 0.13, \"rgb\": [89, 23, 80] }, { \"index\": 0.25, \"rgb\":
      [110, 45, 132] }, { \"index\": 0.38, \"rgb\": [120, 77, 178] }, {
      \"index\": 0.5, \"rgb\": [120, 113, 213] }, { \"index\": 0.63, \"rgb\":
      [115, 151, 228] }, { \"index\": 0.75, \"rgb\": [134, 185, 227] }, {
      \"index\": 0.88, \"rgb\": [177, 214, 227] }, { \"index\": 1, \"rgb\":
      [230, 241, 241] }],\r

      \    \"freesurface-blue\": [{ \"index\": 0, \"rgb\": [30, 4, 110] },
      { \"index\": 0.13, \"rgb\": [47, 14, 176] }, { \"index\": 0.25, \"rgb\":
      [41, 45, 236] }, { \"index\": 0.38, \"rgb\": [25, 99, 212] }, { \"index\":
      0.5, \"rgb\": [68, 131, 200] }, { \"index\": 0.63, \"rgb\": [114, 156,
      197] }, { \"index\": 0.75, \"rgb\": [157, 181, 203] }, { \"index\": 0.88,
      \"rgb\": [200, 208, 216] }, { \"index\": 1, \"rgb\": [241, 237, 236] }],\r

      \    \"freesurface-red\": [{ \"index\": 0, \"rgb\": [60, 9, 18] }, {
      \"index\": 0.13, \"rgb\": [100, 17, 27] }, { \"index\": 0.25, \"rgb\":
      [142, 20, 29] }, { \"index\": 0.38, \"rgb\": [177, 43, 27] }, { \"index\":
      0.5, \"rgb\": [192, 87, 63] }, { \"index\": 0.63, \"rgb\": [205, 125, 105]
      }, { \"index\": 0.75, \"rgb\": [216, 162, 148] }, { \"index\": 0.88,
      \"rgb\": [227, 199, 193] }, { \"index\": 1, \"rgb\": [241, 237, 236] }],\r

      \    \"oxygen\": [{ \"index\": 0, \"rgb\": [64, 5, 5] }, {
      \"index\": 0.13, \"rgb\": [106, 6, 15] }, { \"index\": 0.25, \"rgb\":
      [144, 26, 7] }, { \"index\": 0.38, \"rgb\": [168, 64, 3] }, { \"index\":
      0.5, \"rgb\": [188, 100, 4] }, { \"index\": 0.63, \"rgb\": [206, 136, 11]
      }, { \"index\": 0.75, \"rgb\": [220, 174, 25] }, { \"index\": 0.88,
      \"rgb\": [231, 215, 44] }, { \"index\": 1, \"rgb\": [248, 254, 105] }],\r

      \    \"par\": [{ \"index\": 0, \"rgb\": [51, 20, 24] }, { \"index\":
      0.13, \"rgb\": [90, 32, 35] }, { \"index\": 0.25, \"rgb\": [129, 44, 34]
      }, { \"index\": 0.38, \"rgb\": [159, 68, 25] }, { \"index\": 0.5, \"rgb\":
      [182, 99, 19] }, { \"index\": 0.63, \"rgb\": [199, 134, 22] }, {
      \"index\": 0.75, \"rgb\": [212, 171, 35] }, { \"index\": 0.88, \"rgb\":
      [221, 210, 54] }, { \"index\": 1, \"rgb\": [225, 253, 75] }],\r

      \    \"phase\": [{ \"index\": 0, \"rgb\": [145, 105, 18] }, {
      \"index\": 0.13, \"rgb\": [184, 71, 38] }, { \"index\": 0.25, \"rgb\":
      [186, 58, 115] }, { \"index\": 0.38, \"rgb\": [160, 71, 185] }, {
      \"index\": 0.5, \"rgb\": [110, 97, 218] }, { \"index\": 0.63, \"rgb\":
      [50, 123, 164] }, { \"index\": 0.75, \"rgb\": [31, 131, 110] }, {
      \"index\": 0.88, \"rgb\": [77, 129, 34] }, { \"index\": 1, \"rgb\": [145,
      105, 18] }],\r

      \    \"salinity\": [{ \"index\": 0, \"rgb\": [42, 24, 108] }, {
      \"index\": 0.13, \"rgb\": [33, 50, 162] }, { \"index\": 0.25, \"rgb\":
      [15, 90, 145] }, { \"index\": 0.38, \"rgb\": [40, 118, 137] }, {
      \"index\": 0.5, \"rgb\": [59, 146, 135] }, { \"index\": 0.63, \"rgb\":
      [79, 175, 126] }, { \"index\": 0.75, \"rgb\": [120, 203, 104] }, {
      \"index\": 0.88, \"rgb\": [193, 221, 100] }, { \"index\": 1, \"rgb\":
      [253, 239, 154] }],\r

      \    \"temperature\": [{ \"index\": 0, \"rgb\": [4, 35, 51] }, {
      \"index\": 0.13, \"rgb\": [23, 51, 122] }, { \"index\": 0.25, \"rgb\":
      [85, 59, 157] }, { \"index\": 0.38, \"rgb\": [129, 79, 143] }, {
      \"index\": 0.5, \"rgb\": [175, 95, 130] }, { \"index\": 0.63, \"rgb\":
      [222, 112, 101] }, { \"index\": 0.75, \"rgb\": [249, 146, 66] }, {
      \"index\": 0.88, \"rgb\": [249, 196, 65] }, { \"index\": 1, \"rgb\": [232,
      250, 91] }],\r

      \    \"turbidity\": [{ \"index\": 0, \"rgb\": [34, 31, 27] }, {
      \"index\": 0.13, \"rgb\": [65, 50, 41] }, { \"index\": 0.25, \"rgb\": [98,
      69, 52] }, { \"index\": 0.38, \"rgb\": [131, 89, 57] }, { \"index\": 0.5,
      \"rgb\": [161, 112, 59] }, { \"index\": 0.63, \"rgb\": [185, 140, 66] }, {
      \"index\": 0.75, \"rgb\": [202, 174, 88] }, { \"index\": 0.88, \"rgb\":
      [216, 209, 126] }, { \"index\": 1, \"rgb\": [233, 246, 171] }],\r

      \    \"velocity-blue\": [{ \"index\": 0, \"rgb\": [17, 32, 64] }, {
      \"index\": 0.13, \"rgb\": [35, 52, 116] }, { \"index\": 0.25, \"rgb\":
      [29, 81, 156] }, { \"index\": 0.38, \"rgb\": [31, 113, 162] }, {
      \"index\": 0.5, \"rgb\": [50, 144, 169] }, { \"index\": 0.63, \"rgb\":
      [87, 173, 176] }, { \"index\": 0.75, \"rgb\": [149, 196, 189] }, {
      \"index\": 0.88, \"rgb\": [203, 221, 211] }, { \"index\": 1, \"rgb\":
      [254, 251, 230] }],\r

      \    \"velocity-green\": [{ \"index\": 0, \"rgb\": [23, 35, 19] }, {
      \"index\": 0.13, \"rgb\": [24, 64, 38] }, { \"index\": 0.25, \"rgb\": [11,
      95, 45] }, { \"index\": 0.38, \"rgb\": [39, 123, 35] }, { \"index\": 0.5,
      \"rgb\": [95, 146, 12] }, { \"index\": 0.63, \"rgb\": [152, 165, 18] }, {
      \"index\": 0.75, \"rgb\": [201, 186, 69] }, { \"index\": 0.88, \"rgb\":
      [233, 216, 137] }, { \"index\": 1, \"rgb\": [255, 253, 205] }],\r

      \    \"cubehelix\": [{ \"index\": 0, \"rgb\": [0, 0, 0] }, {
      \"index\": 0.07, \"rgb\": [22, 5, 59] }, { \"index\": 0.13, \"rgb\": [60,
      4, 105] }, { \"index\": 0.2, \"rgb\": [109, 1, 135] }, { \"index\": 0.27,
      \"rgb\": [161, 0, 147] }, { \"index\": 0.33, \"rgb\": [210, 2, 142] }, {
      \"index\": 0.4, \"rgb\": [251, 11, 123] }, { \"index\": 0.47, \"rgb\":
      [255, 29, 97] }, { \"index\": 0.53, \"rgb\": [255, 54, 69] }, { \"index\":
      0.6, \"rgb\": [255, 85, 46] }, { \"index\": 0.67, \"rgb\": [255, 120, 34]
      }, { \"index\": 0.73, \"rgb\": [255, 157, 37] }, { \"index\": 0.8,
      \"rgb\": [241, 191, 57] }, { \"index\": 0.87, \"rgb\": [224, 220, 93] }, {
      \"index\": 0.93, \"rgb\": [218, 241, 142] }, { \"index\": 1, \"rgb\":
      [227, 253, 198] }]\r

      \  };\r

      \  var indicies, fromrgba, torgba, nsteps, cmap, colormap, format,
      nshades, colors, alpha, i;\r

      \  if (!spec) spec = {};\r

      \  nshades = (spec.nshades || 72) - 1;\r

      \  format = spec.format || 'hex';\r

      \  colormap = spec.colormap;\r

      \  if (!colormap) colormap = 'jet';\r

      \  if (typeof colormap === 'string') {\r

      \    colormap = colormap.toLowerCase();\r

      \    if (!Colormap[colormap]) {\r

      \      throw Error(colormap + ' not a supported colorscale');\r

      \    }\r

      \    cmap = Colormap[colormap];\r

      \  } else if (Array.isArray(colormap)) {\r

      \    cmap = colormap.slice();\r

      \  } else {\r

      \    throw Error('unsupported colormap option', colormap);\r

      \  }\r

      \  if (cmap.length > nshades + 1) {\r

      \    throw new Error(\r

      \      colormap + ' map requires nshades to be at least size ' +
      cmap.length\r

      \    );\r

      \  }\r

      \  if (!Array.isArray(spec.alpha)) {\r

      \    if (typeof spec.alpha === 'number') {\r

      \      alpha = [spec.alpha, spec.alpha];\r

      \    } else {\r

      \      alpha = [1, 1];\r

      \    }\r

      \  } else if (spec.alpha.length !== 2) {\r

      \    alpha = [1, 1];\r

      \  } else {\r

      \    alpha = spec.alpha.slice();\r

      \  }\r

      \  indicies = cmap.map(c => {\r

      \    return Math.round(c.index * nshades);\r

      \  });\r

      \  alpha[0] = Math.min(Math.max(alpha[0], 0), 1);\r

      \  alpha[1] = Math.min(Math.max(alpha[1], 0), 1);\r

      \  var steps = cmap.map((c, i) => {\r

      \    var index = cmap[i].index\r

      \    var rgba = cmap[i].rgb.slice();\r

      \    if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {\r

      \      return rgba\r

      \    }\r

      \    rgba[3] = alpha[0] + (alpha[1] - alpha[0]) * index;\r

      \    return rgba\r

      \  })\r

      \  var colors = []\r

      \  for (i = 0; i < indicies.length - 1; ++i) {\r

      \    nsteps = indicies[i + 1] - indicies[i];\r

      \    fromrgba = steps[i];\r

      \    torgba = steps[i + 1];\r

      \    for (var j = 0; j < nsteps; j++) {\r

      \      var amt = j / nsteps\r

      \      colors.push([\r

      \        Math.round(lerp(fromrgba[0], torgba[0], amt)),\r

      \        Math.round(lerp(fromrgba[1], torgba[1], amt)),\r

      \        Math.round(lerp(fromrgba[2], torgba[2], amt)),\r

      \        lerp(fromrgba[3], torgba[3], amt)\r

      \      ])\r

      \    }\r

      \  }\r

      \  colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))\r

      \  if (format === 'hex') colors = colors.map(rgb2hex);\r

      \  else if (format === 'rgbaString') colors = colors.map(rgbaStr);\r

      \  else if (format === 'float') colors = colors.map(rgb2float);\r

      \  return colors;\r

      }\r\n"
    sig: function colorMap(spec){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorChannelMixer:
    name: colorChannelMixer
    code: "function colorChannelMixer(colorChannelA, colorChannelB, amountToMix) {\r

      \  var channelA = colorChannelA * amountToMix;\r

      \  var channelB = colorChannelB * (1 - amountToMix);\r

      \  return parseInt(channelA + channelB);\r

      }\r\n"
    sig: function colorChannelMixer(colorChannelA, colorChannelB, amountToMix){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorMixer:
    name: colorMixer
    code: "function colorMixer(rgbA, rgbB, amountToMix) {\r

      \  var r = colorChannelMixer(rgbA[0], rgbB[0], amountToMix);\r

      \  var g = colorChannelMixer(rgbA[1], rgbB[1], amountToMix);\r

      \  var b = colorChannelMixer(rgbA[2], rgbB[2], amountToMix);\r

      \  return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r

      }\r\n"
    sig: function colorMixer(rgbA, rgbB, amountToMix){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  colorMix:
    name: colorMix
    code: "function colorMix(c1, c2, percent = 50) {\r

      \  return pSBC(percent / 100, colorHex(c1), colorHex(c2), true);\r

      \  let o1 = colorRGB(c1, true); let rgbA = [o1.r, o1.g, o1.b];\r

      \  let o2 = colorRGB(c2, true); let rgbB = [o2.r, o2.g, o2.b];\r

      \  amountToMix = percent / 100;\r

      \  var r = colorChannelMixer(rgbA[0], rgbB[0], amountToMix);\r

      \  var g = colorChannelMixer(rgbA[1], rgbB[1], amountToMix);\r

      \  var b = colorChannelMixer(rgbA[2], rgbB[2], amountToMix);\r

      \  return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r

      }\r\n"
    sig: function colorMix(c1, c2, percent = 50){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  simulateClick:
    name: simulateClick
    code: "function simulateClick(elem) {\r

      \  var evt = new MouseEvent('click', { bubbles: true, cancelable:
      true, view: window });\r

      \  var canceled = !elem.dispatchEvent(evt);\r

      }\r\n"
    sig: function simulateClick(elem){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  downloadJson:
    name: downloadJson
    code: "function downloadJson(o, filename) {\r

      \  if (filename.indexOf('.') < 0) filename = filename.json;\r

      \  let txt = (typeof o == 'object') ?
      encodeURIComponent(JSON.stringify(o)) : o;\r

      \  let dl = document.getElementById('downloadAnchorElement');\r

      \  if (nundef(dl)) dl = mCreateFrom(`<a id=\"downloadAnchorElem\"
      style=\"display:none\"></a>`);\r

      \  var dataStr = \"data:text/json;charset=utf-8,\" + txt;\r

      \  dl.setAttribute(\"href\", dataStr);\r

      \  dl.setAttribute(\"download\", \"_aaa\\\\scene.json\");\r

      \  dl.click();\r

      }\r\n"
    sig: function downloadJson(o, filename){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fromLocalStorage:
    name: fromLocalStorage
    code: "function fromLocalStorage(name = '_all') { return
      JSON.parse(localStorage.getItem(name)); }\r\n"
    sig: function fromLocalStorage(name = '_all'){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toLocalStorage:
    name: toLocalStorage
    code: "function toLocalStorage(o, name = '_all') { localStorage.setItem(name,
      JSON.stringify(o)); }\r\n"
    sig: function toLocalStorage(o, name = '_all'){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toDegree:
    name: toDegree
    code: "function toDegree(rad) { return Math.floor(180 * rad / Math.PI); }\r\n"
    sig: function toDegree(rad){}
    region: geo (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrRemoveDuplicates:
    name: arrRemoveDuplicates
    code: "function arrRemoveDuplicates(items, prop) {\r

      \  let di = {};\r

      \  let res = [];\r

      \  for (const item of items) {\r

      \    if (isdef(di[item[prop].toLowerCase()])) { continue; }\r

      \    res.push(item);\r

      \    di[item[prop].toLowerCase()] = true;\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function arrRemoveDuplicates(items, prop){}
    region: keys (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rAdd:
    name: rAdd
    code: "function rAdd(dmin = -1, dmax = 1) { return x => x + dmin + Math.random()
      * (dmax - dmin); }\r\n"
    sig: function rAdd(dmin = -1, dmax = 1){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rAddSub:
    name: rAddSub
    code: "function rAddSub(d) { return x => x + (coin() ? d : -d); }\r\n"
    sig: function rAddSub(d){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rAddSubRange:
    name: rAddSubRange
    code: "function rAddSubRange(d) { return x => x + (Math.random() * 2 * d - d);
      }\r\n"
    sig: function rAddSubRange(d){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _rChoose:
    name: _rChoose
    code: "function _rChoose(arr, n = 1, func = null, exceptIndices = null) {\r

      \  let arr1 = jsCopy(arr);\r

      \  if (isdef(exceptIndices)) {\r

      \    for (const i of exceptIndices) removeInPlace(arr1, arr[i]);\r

      \  }\r

      \  if (isdef(func)) arr1 = arr1.filter(func);\r

      \  if (n == 1) {\r

      \    let idx = Math.floor(Math.random() * arr1.length);\r

      \    return arr1[idx];\r

      \  }\r

      \  arrShufflip(arr1);\r

      \  return arr1.slice(0, n);\r

      }\r\n"
    sig: function _rChoose(arr, n = 1, func = null, exceptIndices = null){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rGaussian:
    name: rGaussian
    code: "function rGaussian(min, max, int = false) {\r

      \  function rGauss() {\r

      \    var rand = 0;\r

      \    for (var i = 0; i < 6; i += 1) { rand += Math.random(); }\r

      \    return rand / 6;\r

      \  }\r

      \  return int ? Math.floor(min + rGauss() * (max - min + 1)) : min +
      rGauss() * (max - min);\r

      }\r\n"
    sig: function rGaussian(min, max, int = false){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rFloat:
    name: rFloat
    code: "function rFloat(min = -1, max = 1) { return Math.random() * (max - min) +
      min; }\r\n"
    sig: function rFloat(min = -1, max = 1){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  germanize:
    name: germanize
    code: "function germanize(s) { return toUmlaut(s); }\r\n"
    sig: function germanize(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  replaceWhite:
    name: replaceWhite
    code: "function replaceWhite(s, sby = '_') { let w = toWords(s); return
      w.join(sby); }\r\n"
    sig: function replaceWhite(s, sby = '_'){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  countAll:
    name: countAll
    code: "function countAll(s, scount) {\r

      \  let letters = toLetters(scount);\r

      \  function counter(total, ch) { if (letters.includes(ch)) return
      total + 1; else return total; }\r

      \  let res = [...s].reduce(counter, 0);\r

      \  return res;\r

      }\r\n"
    sig: function countAll(s, scount){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _evToClass:
    name: _evToClass
    code: "function _evToClass(ev, className) {\r

      \  let elem = findParentWithClass(ev.target, className);\r

      \  return elem;\r

      }\r\n"
    sig: function _evToClass(ev, className){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  load_syms:
    name: load_syms
    code: "async function load_syms(path) {\r

      \  if (nundef(path)) path = '../base/assets/';\r

      \  Syms = await route_path_yaml_dict(path + 'allSyms.yaml');\r

      \  SymKeys = Object.keys(Syms);\r

      \  ByGroupSubgroup = await route_path_yaml_dict(path +
      'symGSG.yaml');\r

      \  KeySets = getKeySets();\r

      \  Info = await route_path_yaml_dict(path + 'lists/info.yaml');\r

      \  C52 = await route_path_yaml_dict(path + 'c52.yaml');\r

      \  create_card_assets_c52();\r

      \  assertion(Syms, 'Syms undefined!');\r

      }\r\n"
    sig: async function load_syms(path){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  oscillate_between:
    name: oscillate_between
    code: "function oscillate_between(x, min, max, step) {\r

      \  x += step;\r

      \  if (x <= min || x >= max) step = -step;\r

      \  return [x, step];\r

      }\r\n"
    sig: function oscillate_between(x, min, max, step){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  post_json:
    name: post_json
    code: "function post_json(url, o, callback) {\r

      \  fetch(url, {\r

      \    method: 'POST',\r

      \    headers: {\r

      \      'Accept': 'application/json',\r

      \      'Content-Type': 'application/json'\r

      \    },\r

      \    body: JSON.stringify(o)\r

      \  }).then(response => response.json()).then(response =>
      callback(response));\r

      }\r\n"
    sig: function post_json(url, o, callback){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  route_post_json:
    name: route_post_json
    code: "function route_post_json(url, o, callback) { post_json(url, o, callback);
      }\r\n"
    sig: function route_post_json(url, o, callback){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  route_path_json:
    name: route_path_json
    code: "async function route_path_json(url) {\r

      \  let data = await fetch(url);\r

      \  let o = await data.json();\r

      \  return o;\r

      }\r\n"
    sig: async function route_path_json(url){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show0:
    name: show0
    code: "function show0(id) { mBy(id).style.display = \"block\"; }\r\n"
    sig: function show0(id){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toModulo:
    name: toModulo
    code: "function toModulo(n, modul) { rem = n % modul; n = n - rem; if (n < 0) n
      = 0; return n; }\r\n"
    sig: function toModulo(n, modul){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mConfine:
    name: mConfine
    code: "function mConfine(n, modul, min, max) {\r

      \  rem = n % modul; n = n - rem;\r

      \  while (n < min) n += modul;\r

      \  while (n > max) n -= modul;\r

      \  return n;\r

      }\r\n"
    sig: function mConfine(n, modul, min, max){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  clear_select:
    name: clear_select
    code: "function clear_select(selected, selstyle = 'selected') {\r

      \  for (const item of selected) {\r

      \    item.isSelected = false;\r

      \    let ui = iDiv(item);\r

      \    if (isString(selstyle)) {\r

      \      mClassRemove(ui, selstyle);\r

      \    } else if (isdef(item.style)) {\r

      \      mStyle(ui, item.style);\r

      \    } else {\r

      \      mStyleUndo(ui, selstyle);\r

      \    }\r

      \  }\r

      \  return [];\r

      }\r\n"
    sig: function clear_select(selected, selstyle = 'selected'){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _valf:
    name: _valf
    code: "function _valf(val, def) { return isdef(val) ? val : def; }\r\n"
    sig: function _valf(val, def){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lerp:
    name: lerp
    code: "function lerp(a, b, t) { return a + (b - a) * t; }\r\n"
    sig: function lerp(a, b, t){}
    region: math (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  run_for_seconds:
    name: run_for_seconds
    code: "function run_for_seconds(secs, f, interval = 50) {\r

      \  DA.start = get_now(); doit(secs, f, interval);\r

      }\r\n"
    sig: function run_for_seconds(secs, f, interval = 50){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  db_add_code:
    name: db_add_code
    code: "function db_add_code() {\r

      \  let kw = prompt('Enter Keywords');\r

      \  let text = dCode.value; \r

      \  console.log('saving', kw, text);\r

      \  let code = { kw: kw, c: text };\r

      \  let data = { table: 'code', item: code };\r

      \  lookupAddToList(DB,['code'],code);\r

      \  post_json('http://localhost:3000/db/add/code', code, r =>
      console.log('resp', r));\r

      }\r\n"
    sig: function db_add_code(){}
    region: funcs (db.js)
    filename: db.js
    type: func
    fname: db.js
    path: C:\D\a04\basejs\db.js
    datetime: 2022-12-08-07-31
    timestamp: 1670513473568.4912
    size: 1036
  db_init_code:
    name: db_init_code
    code: "function db_init_code() {\r

      \  let code = [\r

      \    { kw: 'post route', c:
      `post_json('http://localhost:3000/post/json',o,r=>console.log('resp',r));`
      },\r

      \    { kw: 'get yaml route', c: `await
      route_path_yaml_dict('http://localhost:3000/route')` },\r

      \    { kw: 'get json route', c: `await
      route_path_json('http://localhost:3000/route')` },\r

      \  ];\r

      \  DB.code = code;\r

      \  post_json('http://localhost:3000/db/init/code', code, r =>
      console.log('resp', r));\r

      }\r\n"
    sig: function db_init_code(){}
    region: funcs (db.js)
    filename: db.js
    type: func
    fname: db.js
    path: C:\D\a04\basejs\db.js
    datetime: 2022-12-08-07-31
    timestamp: 1670513473568.4912
    size: 1036
  db_list_code:
    name: db_list_code
    code: "function db_list_code(){\r

      \  for(const code of DB.code){\r

      \  }\r

      }\r\n"
    sig: function db_list_code(){}
    region: funcs (db.js)
    filename: db.js
    type: func
    fname: db.js
    path: C:\D\a04\basejs\db.js
    datetime: 2022-12-08-07-31
    timestamp: 1670513473568.4912
    size: 1036
  t0_textarea:
    name: t0_textarea
    code: "function t0_textarea() { \r

      \  dTable = mBy('dTable'); mCenterFlex(dTable);\r

      \  mDiv(dTable, { w: '100%' }, null, 'Enter Code:');\r

      \  let d = mTextArea(25, 120, dTable, { fz: 16, margin: 'auto',
      padding: 10, outline: 'none', border: 'none' }, 'dCode');\r

      \  let dButtons = mDiv(dTable, { display: 'flex', w: '100%' });\r

      \  let asave = mLink(\"javascript:void(0)\", dButtons, {}, null,
      'Save Code', 'a');\r

      \  asave.onclick = db_add_code; \r

      \  let aclear = mLink(\"javascript:void(0)\", dButtons, {}, null,
      'Clear Code', 'a');\r

      \  aclear.onclick = () => console.log('click clear code!');\r

      }\r\n"
    sig: function t0_textarea(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\basejs\test.js
    datetime: 2022-12-08-07-52
    timestamp: 1670514771164.0764
    size: 689
  show_code_editor:
    name: show_code_editor
    code: "function show_code_editor() {\r

      \  mHide('fSearch')\r

      \  mClear(dTable);\r

      \  mDiv(dTable, { w: '100%' }, null, 'Enter Code:');\r

      \  let d = mTextArea(25, 120, dTable, { fz: 16, margin: 'auto',
      padding: 10, outline: 'none', border: 'none' }, 'dCode');\r

      \  let dButtons = mDiv(dTable, { display: 'flex', w: '100%' });\r

      \  let asave = mLink(\"javascript:void(0)\", dButtons, {}, null,
      'Save Code', 'a');\r

      \  asave.onclick = db_add_code; \r

      \  let aclear = mLink(\"javascript:void(0)\", dButtons, {}, null,
      'Clear Code', 'a');\r

      \  aclear.onclick = () => d.value = ''; \r

      }\r\n"
    sig: function show_code_editor(){}
    region: funcs (ui.js)
    filename: ui.js
    type: func
    fname: ui.js
    path: C:\D\a04\basejs\ui.js
    datetime: 2022-12-09-09-34
    timestamp: 1670607244405.0066
    size: 1105
  show_code_list:
    name: show_code_list
    code: "function show_code_list(list) {\r

      \  mClear(dTable);\r

      \  for (const code of list) {\r

      \    let d = mDiv(dTable, { w: '100%' });\r

      \    let dkw = mDiv(d, {}, null, code.kw);\r

      \    let text = code.c; let lines = text.split('\\n'); let rows =
      lines.length; \r

      \    let dcode = mDiv(d, {}, null, `<textarea rows=${rows}
      cols=120>${code.c}</textarea>`);\r

      \  }\r

      }\r\n"
    sig: function show_code_list(list){}
    region: funcs (ui.js)
    filename: ui.js
    type: func
    fname: ui.js
    path: C:\D\a04\basejs\ui.js
    datetime: 2022-12-09-09-34
    timestamp: 1670607244405.0066
    size: 1105
  onclick_list:
    name: onclick_list
    code: "function onclick_list() { show_code_list(DB.code); }\r\n"
    sig: function onclick_list(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\cita\start.js
    datetime: 2022-12-09-20-25
    timestamp: 1670646322392.744
    size: 2045
  onclick_new:
    name: onclick_new
    code: "function onclick_new() { show_code_editor(); }\r\n"
    sig: function onclick_new(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\cita\start.js
    datetime: 2022-12-09-20-25
    timestamp: 1670646322392.744
    size: 2045
  onclick_file:
    name: onclick_file
    code: "async function onclick_file(){\r

      \  let res = await
      route_path_yaml_dict('http://localhost:3000/file?name=test');\r

      \  console.log('res',res,typeof(res));\r

      }\r\n"
    sig: async function onclick_file(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\cita\start.js
    datetime: 2022-12-09-20-25
    timestamp: 1670646322392.744
    size: 2045
  onclick_save:
    name: onclick_save
    code: "async function onclick_save(){\r

      \  DB = await route_path_yaml_dict('http://localhost:3000/save');\r

      \  console.log('DB',DB);\r

      }\r\n"
    sig: async function onclick_save(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\cita\start.js
    datetime: 2022-12-09-20-25
    timestamp: 1670646322392.744
    size: 2045
  perform_search:
    name: perform_search
    code: "function perform_search(){\r

      \  let words = toWords(mBy('iKeywords').value);\r

      \  console.log('keywords are',words);\r

      \  let res = [], i=0;\r

      \  for(const c of DB.code){\r

      \    for(const w of words){\r

      \      let w1 = w.toLowerCase();\r

      \      let kw = c.kw.toLowerCase();\r

      \      let code = c.c.toLowerCase();\r

      \      if (kw.includes(w1) || code.includes(w1)) {\r

      \        res.push(c);\r

      \        c.index = i;\r

      \        break;\r

      \      }\r

      \    }\r

      \    i++;\r

      \  }\r

      \  console.log('filtered:',res);\r

      \  show_code_list(res);\r

      }\r\n"
    sig: function perform_search(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a03\nodemaster\all\cita\start.js
    datetime: 2022-12-09-20-25
    timestamp: 1670646322392.744
    size: 2045
  call_answer:
    name: call_answer
    code: "function call_answer(i) { call_func('a' + i); }\r\n"
    sig: function call_answer(i){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  call_question:
    name: call_question
    code: "function call_question(i) { call_func('q' + i); }\r\n"
    sig: function call_question(i){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  call_func:
    name: call_func
    code: "function call_func(name) { let f = window[name]; f(); }\r\n"
    sig: function call_func(name){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  dec_g_index:
    name: dec_g_index
    code: "function dec_g_index(i) { set_g_index(G.i - 1); }\r\n"
    sig: function dec_g_index(i){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  inc_g_index:
    name: inc_g_index
    code: "function inc_g_index() { set_g_index(G.i + 1); }\r\n"
    sig: function inc_g_index(){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  iStrip:
    name: iStrip
    code: "function iStrip(item) { delete item.live; return item; }\r\n"
    sig: function iStrip(item){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  mDisable:
    name: mDisable
    code: "function mDisable(elem) { elem = toElem(elem); mStyle(elem, { cursor:
      'default', opacity: 0 }); }\r\n"
    sig: function mDisable(elem){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  mEnable:
    name: mEnable
    code: "function mEnable(elem) { elem = toElem(elem); mStyle(elem, { cursor:
      'pointer', opacity: 1 }); }\r\n"
    sig: function mEnable(elem){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  push_hist:
    name: push_hist
    code: "function push_hist() { let o = { i: G.i, items: G.selist.map(x =>
      iStrip(x)) }; G.hist.push(o); }\r\n"
    sig: function push_hist(){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  pop_hist:
    name: pop_hist
    code: "function pop_hist() { let top = G.hist.pop(); G.selist = top.selist;
      }\r\n"
    sig: function pop_hist(){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  set_g_index:
    name: set_g_index
    code: "function set_g_index(i) { G.i = i; call_question(i); }\r\n"
    sig: function set_g_index(i){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  show_prompt:
    name: show_prompt
    code: "function show_prompt(q, list, handler) {\r

      \  mClear(dTable);\r

      \  console.log('list', list)\r

      \  let dqcont = mDiv(dTable, G.stcont);\r

      \  mLinebreak(dTable);\r

      \  let dq = mDiv(dqcont, G.stq, `q_${G.i}`, q);\r

      \  let qitem = iAdd({ type: 'q', index: G.i, text: q }, { cont:
      dqcont, div: dq });\r

      \  let dacont = mDiv(dTable, G.stcont);\r

      \  mLinebreak(dTable);\r

      \  let tb = mToolbar(['back', 'clear', 'next'], handle_command,
      dTable, { align: 'center' }, { margin: 8, fz: 30, cursor: 'pointer' });\r

      \  G.buttons = tb.children;\r

      \  let aslist = [];\r

      \  list.map(x => {\r

      \    let da = ui_type_sym_text_line(dacont, x, dict_augment({ bg:
      x.color }, G.sta), handler);\r

      \    let item = iAdd(x, { div: da });\r

      \    aslist.push(item.id);\r

      \  });\r

      \  G.q = qitem.id;\r

      \  G.alist = aslist;\r

      \  G.selist = [];\r

      \  dTable.setAttribute('transition-style',
      \"in:wipe:bottom-right\");\r

      \  toolbar_check();\r

      }\r\n"
    sig: function show_prompt(q, list, handler){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  show_emos:
    name: show_emos
    code: "function show_emos() {\r

      \  let d = mDiv(dTable, DA.styles); \r

      \  for (const k in EMO.emoscale) {\r

      \    let emo = EMO.emoscale[k];\r

      \    let sym = Syms[emo.key];\r

      \    let item = { name: k, key: emo.key, text: sym.text, color:
      emo.color, family: sym.family, list: emo.list };\r

      \    let handler = question2; \r

      \    let d1 = ui_type_item_line(d, item, { cursor: 'pointer',
      aitems: 'center', vpadding: 6, hpadding: 12, gap: 4, margin: 6, rounding:
      12, bg: item.color, fg: 'contrast' }, handler, ['text', 'list']); \r

      \    iAdd(item, { div: d1 });\r

      \  }\r

      }\r\n"
    sig: function show_emos(){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  toolbar_check:
    name: toolbar_check
    code: "function toolbar_check() {\r

      \  if (isEmpty(G.selist)) { mDisable('bclear'); mDisable('bnext') }
      else { mEnable('bclear'); mEnable('bnext') }\r

      \  if (isEmpty(G.hist)) { mDisable('bback'); } else {
      mEnable('bback'); }\r

      }\r\n"
    sig: function toolbar_check(){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  ui_type_sym_text_line:
    name: ui_type_sym_text_line
    code: "function ui_type_sym_text_line(dParent, item, styles = {}, handler =
      null) {\r

      \  let d = mDiv(dParent, styles, `d_${item.key}`); mFlex(d);\r

      \  let sym = valf(item.sym, Syms[item.key]);\r

      \  mDiv(d, { family: sym.family, fz: 40 }, null, sym.text);\r

      \  mDiv(d, { family: 'opensans', fz: 20 }, null, item.text);\r

      \  if (isdef(handler)) { d.onclick = handler; d.setAttribute('item',
      JSON.stringify(item)); }\r

      \  return d;\r

      }\r\n"
    sig: function ui_type_sym_text_line(dParent, item, styles = {}, handler =
      null){}
    region: funcs (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  q0:
    name: q0
    code: "function q0() {\r

      \  let list = dict2list(EMO.emoscale, 'k').map(x => ({ name: x.k,
      key: x.key, color: x.color, text: x.list })); \r

      \  show_prompt('how are you feeling right now?', list, a0);\r

      }\r\n"
    sig: function q0(){}
    region: q (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  a0:
    name: a0
    code: "function a0(ev) {\r

      \  toggle_select(evToItem(ev), G.selist);\r

      \  toolbar_check();\r

      }\r\n"
    sig: function a0(ev){}
    region: q (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  q1:
    name: q1
    code: "function q1() {\r

      \  let list = [];\r

      \  for (const item of G.selist) {\r

      \    let alpha = .4;\r

      \    for (const w of item.text.split(',')) {\r

      \      let o = { name: w.trim(), key: item.key, color:
      colorTrans(item.color, alpha), text: w.trim() };\r

      \      alpha += .2;\r

      \      list.push(o);\r

      \    }\r

      \  }\r

      \  show_prompt('select the 2 dominant feelings', list, a1);\r

      }\r\n"
    sig: function q1(){}
    region: q (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  a1:
    name: a1
    code: "function a1(ev) { a0(ev); }\r\n"
    sig: function a1(ev){}
    region: q (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  q2:
    name: q2
    code: "function q2() {\r

      \  console.log('G', G)\r

      \  const transitions = {\r

      \    worried: {\r

      \      money: {},\r

      \      time: {},\r

      \      past: {},\r

      \      future: {},\r

      \      material: {},\r

      \    },\r

      \  };\r

      \  let step1 = ''\r

      }\r\n"
    sig: function q2(){}
    region: q (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  load_yt_in_iframe:
    name: load_yt_in_iframe
    code: "function load_yt_in_iframe(dParent) {\r

      \  var div = document.createElement('iframe');\r

      \  div.id = 'iframe1';\r

      \  mStyle(div, { w: 500, h: 300 });\r

      \  mAppend(dParent, div);\r

      \  div.src = \"https://www.youtube.com/embed/3pNpHZ1yv3I\"; //YES!\r

      \  //iDiv.src =
      \"https://www.youtube.com/embed/3pNpHZ1yv3I?autoplay=1\";\r

      }\r\n"
    sig: function load_yt_in_iframe(dParent){}
    region: youtube (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  playt:
    name: playt
    code: "function playt() {\r

      \  var tag = document.createElement('script');\r

      \  tag.src = \"https://www.youtube.com/iframe_api\";\r

      \  var firstScriptTag =
      document.getElementsByTagName('script')[0];\r

      \  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r

      \  var player;\r

      \  function onYouTubeIframeAPIReady() {\r

      \    player = new YT.Player('player', {\r

      \      height: '390',\r

      \      width: '640',\r

      \      videoId: 'Kopr6Q3oGHw',\r

      \      playerVars: {\r

      \        'playsinline': 1,\r

      \      },\r

      \      events: {\r

      \        'onReady': onPlayerReady,\r

      \        'onStateChange': onPlayerStateChange\r

      \      }\r

      \    });\r

      \  }\r

      \  function onPlayerReady(event) {\r

      \    console.log('player is ready - please click anywhere on
      page')\r

      \    onclick = () => event.target.playVideo();\r

      \  }\r

      \  var done = false;\r

      \  function onPlayerStateChange(event) {\r

      \    if (event.data == YT.PlayerState.PLAYING && !done) {\r

      \      setTimeout(volume_up, 2000);\r

      \      done = true;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function playt(){}
    region: youtube (qa.js)
    filename: qa.js
    type: func
    fname: qa.js
    path: C:\D\a03\nodemaster\cai\qa.js
    datetime: 2022-12-11-07-34
    timestamp: 1670772864059.485
    size: 7092
  test21_resizable:
    name: test21_resizable
    code: "function test21_resizable() {\r

      }\r\n"
    sig: function test21_resizable(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test22_centering_container:
    name: test22_centering_container
    code: "function test22_centering_container() {\r

      \  let d = mDiv(dTable, { bg: 'yellow', w: '100%', h: '100%',
      aitems: 'center' }); mCenterCenter(d);\r

      \  for (let i = 0; i < 14; i++) {\r

      \    mDiv(d, { display: 'inline-block', w: rNumber(50, 150), h:
      rNumber(50, 150), bg: 'random', margin: 10 });\r

      \  }\r

      }\r\n"
    sig: function test22_centering_container(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test21_centering_container:
    name: test21_centering_container
    code: "function test21_centering_container() {\r

      \  let d = mDiv(dTable, { bg: 'yellow', w: '100%', h: '100%' });
      mCenterCenter(d);\r

      \  let d1 = mDiv(d, { bg: 'red', 'place-content': 'center', w:
      '80%', display: 'grid', 'grid-template-columns': 'repeat(auto-fill,
      100px)', 'grid-gap': '1rem' });\r

      \  for (let i = 0; i < 14; i++) {\r

      \    mDiv(d1, { w: rNumber(50, 150), h: 100, bg: 'random', margin:
      10 });\r

      \  }\r

      }\r\n"
    sig: function test21_centering_container(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test20_aspect_ratio_image_card:
    name: test20_aspect_ratio_image_card
    code: "function test20_aspect_ratio_image_card() {\r

      \  let d = mDiv(dTable, { display: 'grid', place: 'center', h:
      '100%' });\r

      \  let dcard = mDiv(d, { w: '50%', display: 'flex', dir: 'column',
      padding: '1rem' }, null, null, 'blue'); \r

      \  let dtitle = mTag('h1', 'Video Title', dcard);\r

      \  let dimg = mDiv(dcard, { aspectRatio: '16 / 9' }, null, null,
      'green'); \r

      \  let ddesc = mTag('p', 'Descriptive Text goes here', dcard);\r

      \  return d;\r

      }\r\n"
    sig: function test20_aspect_ratio_image_card(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  fail_yt:
    name: fail_yt
    code: "async function fail_yt() {\r

      \  let url = `http://gdata.youtube.com/feeds/api/videos`; //blocked
      by CORS\r

      \  let result = await route_path_text(url);\r

      \  console.log('result', result);\r

      \  let res = `\r

      \    http://gdata.youtube.com/feeds/api/videos\r

      \    ?v=2\r

      \    &author=SesameStreet\r

      \    &q=rubber+ducky\r

      \    &orderby=viewCount\r

      \    &start-index=1\r

      \    &max-results=10\r

      \    &alt=json-in-script\r

      \    &callback=myCallbackFunction\r

      \    &prettyprint=true\r

      \  `;\r

      }\r\n"
    sig: async function fail_yt(){}
    region: FAILED (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test17_load_save_texte:
    name: test17_load_save_texte
    code: "function test17_load_save_texte() {\r

      \  mStyle(dTable, { h: '100%', family: 'opensans', fz: 20, bg:
      ORANGE, fg: 'white', position: 'relative' }); mCenterFlex(dTable);\r

      \  let buttons = ['clear', 'magic']; \r

      \  dToolbar = mToolbar(buttons, onclick_toobar, 'dToolbar', {
      padding: 10, display: 'flex', gap: 10, bg: 'orange' });\r

      \  document.addEventListener('mouseleave', e => { console.log('page
      mouse left!!!'); save_all(); })\r

      \  document.addEventListener('visibilitychange', e => { if
      (document.visibilityState === 'visible') { console.log('page activated!');
      } else { console.log('page deactivated!!!'); save_all(); } });\r

      \  load_all();\r

      \  onclick = open_invisible_input;\r

      }\r\n"
    sig: function test17_load_save_texte(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  add_edit:
    name: add_edit
    code: "function add_edit(x, y, text = '', bg = 'random') {\r

      \  let d = mDiv(dTable, { bg: bg, fg: 'contrast', x: x, y: y,
      position: 'absolute', padding: 10, wmin: 10, }, getUID(), text); \r

      \  DA.edits.push(d);\r

      \  add_interaction(d);\r

      }\r\n"
    sig: function add_edit(x, y, text = '', bg = 'random'){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  add_interaction:
    name: add_interaction
    code: "function add_interaction(d) {\r

      \  d.setAttribute('contentEditable', true);\r

      \  d.style.outline = 'none';\r

      \  d.onkeydown = function (e) {\r

      \    DA.tabKeyPressed = e.keyCode == 9;\r

      \    if (DA.tabKeyPressed) {\r

      \      e.preventDefault();\r

      \      return;\r

      \    } else {\r

      \    }\r

      \  };\r

      \  d.onkeyup = function (e) {\r

      \    if (DA.tabKeyPressed) {\r

      \      let idx = DA.edits.indexOf(e.target);\r

      \      let next = (idx + 1) % DA.edits.length;\r

      \      if (next != idx) DA.edits[next].focus();\r

      \      e.preventDefault();\r

      \      return;\r

      \    }\r

      \  };\r

      \  d.onfocus = e => {\r

      \    if (DA.focusElement != e.target && isdef(DA.focusElement)) {\r

      \      let el = DA.focusElement;\r

      \      if (isEmpty(el.innerHTML)) {\r

      \        removeInPlace(DA.edits, el);\r

      \        el.remove();\r

      \      }\r

      \    }\r

      \    DA.focusElement = e.target;\r

      \  };\r

      \  d.focus();\r

      }\r\n"
    sig: function add_interaction(d){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  onclick_toobar:
    name: onclick_toobar
    code: "function onclick_toobar(name) {\r

      \  console.log('clicked', name);\r

      \  switch (name) {\r

      \    case 'clear': mClear(dTable); DA.edits = []; break;\r

      \    case 'magic': break;\r

      \    case 'lineup':\r

      \      mCenterFlex(dTable); \r

      \      DA.edits.map(x => mStyle(x, { position: null, display:
      'inline' }));\r

      \      break;\r

      \    case 'orig': DA.edits.map(x => x.style.position = 'absolute');
      break;\r

      \  }\r

      }\r\n"
    sig: function onclick_toobar(name){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  open_invisible_input:
    name: open_invisible_input
    code: "function open_invisible_input(ev) {\r

      \  if (ev.target.id != 'dTable') return;\r

      \  let [x, y] = [ev.offsetX, ev.offsetY];\r

      \  y = toModulo(y - 10, 20, 0, mStyleGet(dTable, 'h') - 47);\r

      \  x = toModulo(x, 50);\r

      \  add_edit(x, y);\r

      }\r\n"
    sig: function open_invisible_input(ev){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  save_all:
    name: save_all
    code: "function save_all() {\r

      \  let data = [];\r

      \  for (const edit of DA.edits) {\r

      \    let rect = getRect(edit);\r

      \    let text = edit.innerHTML;\r

      \    let o = { x: rect.x, y: rect.y, text: text };\r

      \    data.push(o);\r

      \  }\r

      \  route_post_json('http://localhost:3000/post/json', { data: data,
      filename: 'page' }, response => {\r

      \  });\r

      }\r\n"
    sig: function save_all(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test16_yt:
    name: test16_yt
    code: "function test16_yt() {\r

      \  playt();\r

      }\r\n"
    sig: function test16_yt(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test15_qa:
    name: test15_qa
    code: "function test15_qa() {\r

      \  G = {\r

      \    i: 0,\r

      \    q: null, \r

      \    alist: null, \r

      \    selist: null, \r

      \    hist: [], \r

      \    stcont: { box: true, wmin: 600 },\r

      \    sta: { cursor: 'pointer', aitems: 'center', vpadding: 6,
      hpadding: 12, gap: 4, margin: 6, rounding: 12, fg: 'contrast' },\r

      \    stq: { padding: 12, weight: 'bold', family: 'opensans', fz: 28
      },\r

      \  };\r

      \  q0();\r

      }\r\n"
    sig: function test15_qa(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  question2:
    name: question2
    code: "function question2(ev) {\r

      \  let id = evToId(ev);\r

      \  let item = Items[id];\r

      \  console.log('item', item);\r

      \  say(`why do you feel ${item.list}???`, 'uk', show_reasons, .5,
      .8);\r

      }\r\n"
    sig: function question2(ev){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test13_load_yt_in_iframe:
    name: test13_load_yt_in_iframe
    code: "function test13_load_yt_in_iframe() {\r

      \  var div = document.createElement('iframe');\r

      \  div.id = 'iframe1';\r

      \  mStyle(div, { w: 500, h: 300 })\r

      \  document.getElementById(\"map\").appendChild(div);\r

      \  div.src = \"https://www.youtube.com/embed/3pNpHZ1yv3I\"; //YES!\r

      \  //iDiv.src =
      \"https://www.youtube.com/embed/3pNpHZ1yv3I?autoplay=1\";\r

      }\r\n"
    sig: function test13_load_yt_in_iframe(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test12_iconviewer:
    name: test12_iconviewer
    code: "async function test12_iconviewer() {\r

      \  let items = findKeys('face').map(x => Syms[x]); \r

      \  items = KeySets['smileys-emotion'].map(x => Syms[x]);\r

      \  items = items.map(x => ({ key: x.key, text: x.text, E: x.E, D:
      x.D, family: x.family }));\r

      \  let items2 = Info.emotion.map(x => ({ key: x, E: x, D: '',
      family: 'opensans', text: '' }));\r

      \  sortBy(items2, 'key');\r

      \  items2 = arrRemoveDuplicates(items2, 'E');\r

      \  items = items.concat(items2);\r

      \  dTable = mBy('dTable');\r

      \  for (const item of items) ui_type_item(dTable, item, {}, null,
      item.key);\r

      }\r\n"
    sig: async function test12_iconviewer(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test11_say:
    name: test11_say
    code: "async function test11_say() {\r

      \  say(germanize('wie fuehlst du dich gerade?'), 'pl',
      test12_iconviewer, 1, .8, .8);\r

      }\r\n"
    sig: async function test11_say(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test7_uploadfile:
    name: test7_uploadfile
    code: "function test7_uploadfile() {\r

      \  let o = { filename: 'ex', data: { text: 'jajajaaber geh jaaaa',
      id: 78912 } };\r

      \  route_post_json('http://localhost:3000/post/json', o, response =>
      {\r

      \    console.log(JSON.stringify(response))\r

      \  });\r

      }\r\n"
    sig: function test7_uploadfile(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test6_init:
    name: test6_init
    code: "function test6_init() {\r

      \  let item = { styles: { bg: 'orange', w: 30, h: 30, round: true }
      };\r

      \  iInit(c1, item);\r

      \  iInit(c2, item);\r

      \  iInit(dTable, item);\r

      \  start_loop();\r

      \  setTimeout(() => item.styles.bg = BLUE, 2000);\r

      }\r\n"
    sig: function test6_init(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test5_load:
    name: test5_load
    code: "function test5_load() {\r

      \  dTable = mDiv('dTable');\r

      \  load_all();\r

      }\r\n"
    sig: function test5_load(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test4_save:
    name: test4_save
    code: "function test4_save() {\r

      \  let [table, players] = test3_sit_around_table(3); \r

      \  serialize_all();\r

      }\r\n"
    sig: function test4_save(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test3_sit_around_table:
    name: test3_sit_around_table
    code: "function test3_sit_around_table(n = 4) {\r

      \  dTable = mBy('dTable');\r

      \  let r = getRect(dTable);\r

      \  let [w, h] = [r.w * .9, r.h * .9]; \r

      \  let [offx, offy] = [r.w * .05, r.h * .05]; \r

      \  let mindim = Math.min(w, h);\r

      \  let [szTable, szPlayer] = [mindim / 2, mindim / 4];\r

      \  let pTable = { x: offx + w / 2 - szTable / 2, y: offy + h / 2 -
      szTable / 2 };\r

      \  let styles = { round: true, x: pTable.x, y: pTable.y, position:
      'absolute', w: szTable, h: szTable, classname: 'wood' };\r

      \  let d = mDiv(dTable, styles); \r

      \  let table = iAdd({ numplayers: n, styles: styles }, { div: d })\r

      \  let numPlayers = n;\r

      \  let sz = szPlayer;\r

      \  let pts = cCircle({ x: offx + w / 2, y: offy + h / 2 }, w - sz,
      numPlayers);\r

      \  console.log('pts', pts);\r

      \  let players = [];\r

      \  for (const pt of pts) {\r

      \    let [x, y] = [pt.x - sz / 2, pt.y - sz / 2];\r

      \    styles = { round: true, x: x, y: y, position: 'absolute', w:
      sz, h: sz, bg: colorFrom('randdark') };\r

      \    d = mDiv(dTable, styles);\r

      \    let player = iAdd({ styles: styles }, { div: d });\r

      \    players.push(player);\r

      \  }\r

      \  return [table, players];\r

      }\r\n"
    sig: function test3_sit_around_table(n = 4){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test2_sit_around_table:
    name: test2_sit_around_table
    code: "function test2_sit_around_table() {\r

      \  dTable = mBy('dTable');\r

      \  let r = getRect(dTable);\r

      \  let sz = 250;\r

      \  let pts = cCircle({ x: r.w / 2, y: r.h / 2 }, r.w - sz, 6,
      -90);\r

      \  for (const pt of pts) {\r

      \    console.log('pt', pt)\r

      \    mDiv(dTable, { round: true, x: pt.x - sz / 2, y: pt.y - sz / 2,
      position: 'absolute', w: sz, h: sz, bg: 'randdark' });\r

      \  }\r

      }\r\n"
    sig: function test2_sit_around_table(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  tests1_canvas_vs_dom:
    name: tests1_canvas_vs_dom
    code: "function tests1_canvas_vs_dom() {\r

      \  let dPage = mBy('dTable'); mCenterCenterFlex(dPage);
      mStyle(dPage, { gap: 4 }); \r

      \  G = { items: [] };\r

      \  dHeader = mDivLine(dPage);\r

      \  mLinebreak(dPage);\r

      \  let st = { w: 300, h: 250, bg: 'randlight' };\r

      \  let c1 = new ccanvas(dPage, st); \r

      \  mLinebreak(dPage);\r

      \  dTable = mDiv(dPage, st);\r

      \  mLinebreak(dPage);\r

      \  let c2 = new ccanvas(dPage, st); \r

      \  mLinebreak(dPage);\r

      \  dFooter = mDivLine(dPage);\r

      \  mLinebreak(dPage);\r

      }\r\n"
    sig: function tests1_canvas_vs_dom(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  tests0_table_drawloop:
    name: tests0_table_drawloop
    code: "function tests0_table_drawloop() {\r

      \  dTable = mBy('dTable'); mStyle(dTable, { vpadding: 20, bg: BLUE,
      align: 'center' });\r

      \  G = { items: [] };\r

      \  TO.running = setInterval(drawloop, 100);\r

      \  test1ttt(); \r

      }\r\n"
    sig: function tests0_table_drawloop(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  test1ttt:
    name: test1ttt
    code: "function test1ttt() {\r

      \  let board = new Board(dTable, 4, 4, ev => {\r

      \    let field = Items[ev.target.id];\r

      \    console.log('field', field);\r

      \    if (isdef(field.content)) return;\r

      \    let item = { field: field, container: ev.target, styles: { bg:
      'red', w: 30, h: 30, rounding: '50%' } };\r

      \    game_add_item(item);\r

      \  }); \r

      }\r\n"
    sig: function test1ttt(){}
    region: test17 (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a03\nodemaster\cai\test.js
    datetime: 2022-12-20-09-24
    timestamp: 1671557050529.616
    size: 13429
  ui_type_tile:
    name: ui_type_tile
    code: "function ui_type_tile(ga, d, styles, classes) {\r

      \  let item = {};\r

      \  copyKeys(ga, item);\r

      \  let [sym, bg, id] = [Syms[ga.logo], ga.color, getUID()];\r

      \  item.id = id; item.isOpen = true;\r

      \  function open() {\r

      \    let item = Items[id];\r

      \    if (item.isOpen) return; item.isOpen = true;\r

      \    let d1 = iDiv(item); iClear(d1);\r

      \    let d2 = mDiv(d1, { position: 'absolute', top: 2, left: 2,
      display: 'flex', gap: 2 });\r

      \    let sz = 20;\r

      \    mDiv(d2, { fz: sz, family: sym.family, 'line-height': sz },
      null, sym.text);\r

      \    mDiv(d2, { fz: sz - 5, 'line-height': sz }, null,
      item.friendly);\r

      \    console.log('item.name',item.name)\r

      \    let f=window[item.name+'_open']; if (isdef(f)) f(item);\r

      \  }\r

      \  function close(trigger=true) {\r

      \    let item = Items[id];\r

      \    if (!item.isOpen) return; item.isOpen = false;\r

      \    let d1 = iDiv(item); iClear(d1);\r

      \    mDiv(d1, { fz: 50, family: sym.family, 'line-height': 55 },
      null, sym.text);\r

      \    mLinebreak(d1, 4);\r

      \    mDiv(d1, { fz: 18, align: 'center' }, null, item.friendly);\r

      \    if (!trigger) return;\r

      \    let f=window[item.name+'_close']; if (isdef(f)) f(item);\r

      \  }\r

      \  function toggle(ev){\r

      \    evNoBubble(ev);\r

      \    let item = Items[id];\r

      \    if (item.isOpen) close(); else open();\r

      \  }\r

      \  let d1 = mDiv(d, { cursor: 'pointer', 'user-select': 'none',
      rounding: 10, margin: 10, vpadding: 15, hmin: 90, wmin: 140, bg: bg,
      position: 'relative' }, id, null, 'hop1');\r

      \  d1.setAttribute('name', ga.name);\r

      \  mCenterFlex(d1);\r

      \  iReg(item, { div: d1 });\r

      \  d1.onclick = toggle;\r

      \  close(false);\r

      \  return {\r

      \    item: item,\r

      \    open: open,\r

      \    close: close,\r

      \    toggle: toggle,\r

      \  }\r

      }\r\n"
    sig: function ui_type_tile(ga, d, styles, classes){}
    region: funcs (ui.js)
    filename: ui.js
    type: func
    fname: ui.js
    path: C:\D\a04\game\ui.js
    datetime: 2023-01-04-08-33
    timestamp: 1672850002915.5854
    size: 1858
  ltest111_start:
    name: ltest111_start
    code: "function ltest111_start() {\r

      \  show_home_logo();\r

      \  if (nundef(U)) { show_users(); return; } show_username();\r

      \  if (DA.TEST0) show('dTestButtons');\r

      }\r\n"
    sig: function ltest111_start(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest110_fritz:
    name: ltest110_fritz
    code: "function ltest110_fritz() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('fritz', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest110_fritz(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest109_spotit:
    name: ltest109_spotit
    code: "function ltest109_spotit() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('spotit', playernames.map(x => ({ name: x, playmode:
      'human' })), {});\r

      }\r\n"
    sig: function ltest109_spotit(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest108_animate_coin:
    name: ltest108_animate_coin
    code: "function ltest108_animate_coin() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [set_king_phase, give_players_schweine_variety], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  DA.landing = () => {\r

      \    d = UI.player_stat_items[Z.uplayer].dCoin;\r

      \    anim1(d);\r

      \  };\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest108_animate_coin(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest107_aristo_build:
    name: ltest107_aristo_build
    code: "function ltest107_aristo_build() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [set_king_phase, give_players_schweine_variety], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })));\r

      }\r\n"
    sig: function ltest107_aristo_build(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest110_auction:
    name: ltest110_auction
    code: "function ltest110_auction() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [set_auction_phase], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'no', rumors: 'no' });\r

      }\r\n"
    sig: function ltest110_auction(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest109_ferro:
    name: ltest109_ferro
    code: "function ltest109_ferro() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_achieve_5], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'felix', 'gul'];\r

      \  startgame('ferro', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest109_ferro(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest108_aristo_inspect_schwein:
    name: ltest108_aristo_inspect_schwein
    code: "function ltest108_aristo_inspect_schwein() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_schweine_variety, set_queen_phase], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest108_aristo_inspect_schwein(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest107_aristo_inspect_schwein:
    name: ltest107_aristo_inspect_schwein
    code: "function ltest107_aristo_inspect_schwein() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_schwein, set_queen_phase], iter: 0, maxiter: 200, running:
      false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest107_aristo_inspect_schwein(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest106_aristo_build:
    name: ltest106_aristo_build
    code: "function ltest106_aristo_build() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [set_king_phase, give_player_only_4_cards], iter: 0, maxiter: 200,
      running: false, step: true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest106_aristo_build(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest105_aristo_church:
    name: ltest105_aristo_church
    code: "function ltest105_aristo_church() {\r

      \  TESTING = true; DA.testing = true;\r

      \  DA.test = { mods: [give_players_stalls, make_church], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest105_aristo_church(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest_aristo_simple:
    name: ltest_aristo_simple
    code: "function ltest_aristo_simple() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'gul', 'amanda', 'lauren'];
      \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { commission: 'no' });\r

      }\r\n"
    sig: function ltest_aristo_simple(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest103_aristo_journey:
    name: ltest103_aristo_journey
    code: "function ltest103_aristo_journey() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_player_luxury_cards], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'no', rumors: 'no' });\r

      }\r\n"
    sig: function ltest103_aristo_journey(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest102_luxurycard:
    name: ltest102_luxurycard
    code: "function ltest102_luxurycard() {\r

      \  let dTable = mBy('dTable'); clearElement(dTable); mStyle(dTable,
      { hmin: 400 });\r

      \  drawcard('AHl', dTable, 300);\r

      \  drawcard('AHl', dTable, 200);\r

      \  drawcard('AHl', dTable, 100);\r

      }\r\n"
    sig: function ltest102_luxurycard(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest101_commission:
    name: ltest101_commission
    code: "function ltest101_commission() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [set_queen_phase, give_player_multiple_commission_cards], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'yes', rumors: 'no' });\r

      }\r\n"
    sig: function ltest101_commission(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest100_auction:
    name: ltest100_auction
    code: "function ltest100_auction() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [set_auction_phase], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'no', rumors: 'no' });\r

      }\r\n"
    sig: function ltest100_auction(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest99_fritz:
    name: ltest99_fritz
    code: "function ltest99_fritz() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('fritz', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'no', rumors: 'no' });\r

      }\r\n"
    sig: function ltest99_fritz(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest98_weired_blatt_aendern:
    name: ltest98_weired_blatt_aendern
    code: "function ltest98_weired_blatt_aendern() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_hand_A2], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'no', rumors: 'no' });\r

      }\r\n"
    sig: function ltest98_weired_blatt_aendern(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest97_find_sequences:
    name: ltest97_find_sequences
    code: "function ltest97_find_sequences() {\r

      \  let x = follows_in_rank('ACn', '2Cn', 'A23456789TJQK');\r

      \  console.log('follows', x);\r

      \  x = find_sequences(['ACn', '2Cn', '3Hn', '5Hn', '7Hn', '7Sn',
      '7Cn', '7Dn'], 2, 'A23456789TJQK');\r

      \  console.log('follows', x);\r

      }\r\n"
    sig: function ltest97_find_sequences(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest96_aristo_visit:
    name: ltest96_aristo_visit
    code: "function ltest96_aristo_visit() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_schwein, set_queen_phase, give_player_queen], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'amanda', 'lauren'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'no', rumors: 'no' });\r

      }\r\n"
    sig: function ltest96_aristo_visit(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest95_aristo_rumor_action:
    name: ltest95_aristo_rumor_action
    code: "function ltest95_aristo_rumor_action() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_buildings_plus, set_queen_phase, give_player_king], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'amanda', 'lauren'];\r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest95_aristo_rumor_action(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest94_aristo_journey:
    name: ltest94_aristo_journey
    code: "function ltest94_aristo_journey() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [give_players_hand_journey], iter: 0, maxiter: 200, running: false, step:
      true, suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix']; \r

      \  startgame('aristo', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat', commission: 'no', rumors: 'no' });\r

      }\r\n"
    sig: function ltest94_aristo_journey(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest93_bluff:
    name: ltest93_bluff
    code: "function ltest93_bluff() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'amanda', 'lauren'];\r

      \  startgame('bluff', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest93_bluff(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest92_bluff_bots:
    name: ltest92_bluff_bots
    code: "function ltest92_bluff_bots() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'lauren', 'felix'];\r

      \  let playmodes = ['bot', 'bot', 'bot'];\r

      \  let strategy = ['random', 'perfect', 'clairvoyant'];\r

      \  let i = 0; let players = playernames.map(x => ({ name: x,
      strategy: strategy[i], playmode: playmodes[i++] }));\r

      \  let options = { mode: 'hotseat' };\r

      \  startgame('bluff', players, options);\r

      }\r\n"
    sig: function ltest92_bluff_bots(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest91_bluff_strategy:
    name: ltest91_bluff_strategy
    code: "function ltest91_bluff_strategy() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = ['mimi', 'lauren', 'felix'];\r

      \  let playmodes = ['human', 'bot', 'bot'];\r

      \  let strategy = ['', 'random', 'clairvoyant'];\r

      \  let i = 0; let players = playernames.map(x => ({ name: x,
      strategy: strategy[i], playmode: playmodes[i++] }));\r

      \  let options = { mode: 'hotseat' };\r

      \  startgame('bluff', players, options);\r

      }\r\n"
    sig: function ltest91_bluff_strategy(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest90_bluff_ueberbiete:
    name: ltest90_bluff_ueberbiete
    code: "function ltest90_bluff_ueberbiete() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods:
      [bluff_start_bid], iter: 0, maxiter: 200, running: false, step: true,
      suiteRunning: false, number: 0, list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'amanda', 'lauren'];\r

      \  startgame('bluff', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest90_bluff_ueberbiete(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  ltest90_bluff:
    name: ltest90_bluff
    code: "function ltest90_bluff() {\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { }; \r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix', 'amanda', 'lauren'];\r

      \  startgame('bluff', playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function ltest90_bluff(){}
    region: TESTING (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest_wise:
    name: fentest_wise
    code: "function fentest_wise(){\r

      \  TESTING = true; DA.testing = true; DA.test = { mods: [], iter: 0,
      maxiter: 200, running: false, step: true, suiteRunning: false, number: 0,
      list: [0] };\r

      \  DA.test.end = () => { };\r

      \  DA.auto_moves = [];\r

      \  let playernames = [U.name, 'felix'];\r

      \  startgame('wise',playernames.map(x => ({ name: x, playmode:
      'human' })), { mode: 'hotseat' });\r

      }\r\n"
    sig: function fentest_wise(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest10_ferro_end_of_round_goals:
    name: fentest10_ferro_end_of_round_goals
    code: "function fentest10_ferro_end_of_round_goals() {\r

      \  let [game, A, fen, uplayer, plorder] = [Z.game, Z.A, Z.fen,
      Z.uplayer, Z.plorder];\r

      \  let pl = fen.players[plorder[0]];\r

      \  pl.hand = ['3Hn','3Hn', '3Hn', '3Hn'];\r

      \  pl = fen.players[plorder[1]];\r

      \  pl.journeys = [['3Cn','3Hn', '3Hn', '3Hn']];\r

      \  pl.goals['4'] = true;\r

      \  pl.hand = ['3Hn','KSn'];\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function fentest10_ferro_end_of_round_goals(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest9_ferro_transation_error:
    name: fentest9_ferro_transation_error
    code: "function fentest9_ferro_transation_error() {\r

      \  let [game, A, fen, uplayer] = [Z.game, Z.A, Z.fen, 'mimi']; \r

      \  let pl = fen.players[uplayer];\r

      \  pl.goals['3'] = true;\r

      \  pl.goals['4'] = true;\r

      \  pl.goals['5'] = true;\r

      \  pl.hand = ['3Hn', '3Hn', '3Hn', '2Cn', '2Cn', '2Cn', '*Cn',
      'ACn', '*Cn'];\r

      \  Z.turn = ['mimi'];\r

      \  let other = firstCond(Z.playerlist, x => x != uplayer);\r

      \  pl = fen.players[other];\r

      \  pl.goals['4'] = true;\r

      \  pl.journeys = [['3Hn', '3Hn', '3Hn'], ['AHn', 'ACn', 'ACn',
      '*Cn']];\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function fentest9_ferro_transation_error(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  fentest8_ferro_transation_error:
    name: fentest8_ferro_transation_error
    code: "function fentest8_ferro_transation_error() {\r

      \  let [game, A, fen, uplayer] = [Z.game, Z.A, Z.fen, 'mimi']; \r

      \  let pl = fen.players[uplayer];\r

      \  pl.goals['3'] = true;\r

      \  pl.hand.push('3Hn', '3Hn', '3Hn');\r

      \  Z.turn = ['mimi'];\r

      \  take_turn_fen();\r

      }\r\n"
    sig: function fentest8_ferro_transation_error(){}
    region: fen (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  test_ferro_goal_sorting:
    name: test_ferro_goal_sorting
    code: "function test_ferro_goal_sorting() {\r

      \  let av = ['7R', '3', '5', '33'];\r

      \  av = ['33', '3', '5', '4'];\r

      \  av.sort((a, b) => Z.fen.allGoals.indexOf(a) -
      Z.fen.allGoals.indexOf(b));\r

      \  return av;\r

      }\r\n"
    sig: function test_ferro_goal_sorting(){}
    region: misc (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  bluff_start_bid:
    name: bluff_start_bid
    code: "function bluff_start_bid(o) {\r

      \  let ranks = rChoose(BLUFF.rankstr, 2).map(x =>
      BLUFF.toword[x]);\r

      \  let b2 = coin(10) ? '_' : rNumber(1, 4);\r

      \  o.fen.lastbid = [rNumber(1, 4), ranks[0], b2, b2 == '_' ? '_' :
      ranks[1]];\r

      }\r\n"
    sig: function bluff_start_bid(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  drawcard:
    name: drawcard
    code: "function drawcard(key, dParent, sz) {\r

      \  let d1;\r

      \  let card = ari_get_card(key, sz);\r

      \  mAppend(dParent, iDiv(card));\r

      \  let d = iDiv(card); mStyle(d, { position: 'relative', margin: 20
      });\r

      \  let h = sz * .6;\r

      \  let w = h / 6.5;\r

      \  let left = sz >= 300 ? 7 : sz >= 200 ? 5 : sz >= 100 ? 3 : 3;\r

      \  let bottom = sz >= 300 ? 0 : sz >= 200 ? -1 : sz >= 100 ? -2 :
      -3;\r

      \  let matop = (sz - h) / 2;\r

      \  let html = `<img height=${sz / 3}
      src=\"./base/assets/images/icons/deco0.svg\"
      style=\"transform:scaleX(-1);\">`;\r

      \  d1 = mDiv(d, { position: 'absolute', bottom: bottom, left: left,
      opacity: .5 }, null, html);\r

      \  let dt = mDiv(d, { family: 'Algerian' }, null, 'luxury');\r

      \  mPlace(dt, 'tc', 0, '50%')\r

      }\r\n"
    sig: function drawcard(key, dParent, sz){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_achieve_5:
    name: give_player_achieve_5
    code: "function give_player_achieve_5(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.hand = ['6Hn', '6Hn', '6Hn', '6Hn', '*Hn', '4Cn', '4Cn',
      '4Cn', '3Dn', '3Dn', '2Sn', 'KHn', 'QSn'];\r

      \  for (const plname of fen.plorder) {\r

      \    if (plname == uplayer) continue;\r

      \    let pl1 = fen.players[plname];\r

      \    pl1.journeys = [['2Cn', '2Hn', '*Hn']];\r

      \  }\r

      }\r\n"
    sig: function give_player_achieve_5(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_schwein_old:
    name: give_players_schwein_old
    code: "function give_players_schwein_old(o, isOpen = true) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let b = stage_building(fen, 1, 'farm');\r

      \  b.h = 'KHn';\r

      \  if (isOpen) b.schweine = [b.list[2]];\r

      \  fen.stage = 5;\r

      \  fen.phase = 'king';\r

      }\r\n"
    sig: function give_players_schwein_old(o, isOpen = true){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_king:
    name: give_player_king
    code: "function give_player_king(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  fen.players[uplayer].hand.push('KHn');\r

      }\r\n"
    sig: function give_player_king(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_luxury_cards:
    name: give_player_luxury_cards
    code: "function give_player_luxury_cards(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  fen.players[uplayer].hand.push('AHl', 'AHl', 'AHl');\r

      }\r\n"
    sig: function give_player_luxury_cards(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_only_4_cards:
    name: give_player_only_4_cards
    code: "function give_player_only_4_cards(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  fen.players[uplayer].hand = ['AHn', 'AHn'];\r

      \  fen.players[uplayer].stall = ['ACn', 'ASn'];\r

      }\r\n"
    sig: function give_player_only_4_cards(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_player_multiple_commission_cards:
    name: give_player_multiple_commission_cards
    code: "function give_player_multiple_commission_cards(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let pl = fen.players[uplayer];\r

      \  pl.hand.push('QCn', 'QHn');\r

      \  pl.stall.push('QDn', 'QSn');\r

      \  pl.commissions.push('QCc');\r

      }\r\n"
    sig: function give_player_multiple_commission_cards(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_schweine_variety:
    name: give_players_schweine_variety
    code: "function give_players_schweine_variety(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let b = stage_building_new(fen, 1, 'farm', 1, 1);\r

      \  b = stage_building_new(fen, 1, 'farm', 1, 0);\r

      \  b = stage_building_new(fen, 1, 'farm', 0, 0);\r

      \  b = stage_building_new(fen, 1, 'farm', 0, 1);\r

      \  b = stage_building_new(fen, 1, 'farm', 0, 2);\r

      \  b = stage_building(fen, 0, 'farm'); b.h = 'KHn'; b.schweine =
      [2];\r

      \  [fen.turn, fen.stage] = [[uplayer], 5];\r

      \  fen.phase = 'king';\r

      }\r\n"
    sig: function give_players_schweine_variety(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_hand_journey:
    name: give_players_hand_journey
    code: "function give_players_hand_journey(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    arrExtend(pl.hand, ['ACn', '2Cn', '3Cn']);\r

      \  }\r

      }\r\n"
    sig: function give_players_hand_journey(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  give_players_hand_A2:
    name: give_players_hand_A2
    code: "function give_players_hand_A2(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    pl.hand = ['ACn', '2Cn', '3Cn', '5Hn', '7Hn', '7Sn', '7Cn',
      '7Dn'];\r

      \  }\r

      \  [fen.stage, fen.turn] = set_journey_or_stall_stage(fen,
      o.options, fen.phase);\r

      }\r\n"
    sig: function give_players_hand_A2(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  set_player_tithes:
    name: set_player_tithes
    code: "function set_player_tithes(o) {\r

      \  let [fen, uplayer] = [o.fen, o.fen.turn[0]];\r

      \  let min = 1000, minplayer = null;\r

      \  for (const plname of fen.plorder) {\r

      \    let pl = fen.players[plname];\r

      \    let hkey = pl.hand[0];\r

      \    let val = ari_get_card(hkey).val;\r

      \    pl.tithes = { keys: [hkey], val: val };\r

      \    if (val < min) { min = val; minplayer = plname; }\r

      \    console.log('player', plname, 'tithes', pl.tithes);\r

      \  }\r

      \  let sorted = sortByDescending(fen.plorder, x =>
      fen.players[x].tithes.val);\r

      \  fen.church_order = jsCopy(fen.plorder);\r

      \  fen.tithe_minimum =\r

      \    fen.stage = 21;\r

      }\r\n"
    sig: function set_player_tithes(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  set_auction_phase:
    name: set_auction_phase
    code: "function set_auction_phase(o) {\r

      \  fen = o.fen;\r

      \  fen.phase = o.phase = 'jack';\r

      \  fen.turn = [fen.plorder[0]];\r

      \  fen.stage = 12;\r

      \  ensure_market(fen, 3);\r

      }\r\n"
    sig: function set_auction_phase(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  set_king_phase:
    name: set_king_phase
    code: "function set_king_phase(o) { set_queen_phase(o); o.phase = o.fen.phase =
      'king'; }\r\n"
    sig: function set_king_phase(o){}
    region: mods (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\xampp\htdocs\aroot\games\test.js
    datetime: 2023-01-16-07-43
    timestamp: 1673883833195.6006
    size: 164818
  _start:
    name: _start
    code: "async function _start() {\r

      \  set_run_state_no_server(); \r

      \  onpagedeactivated(() => { saveEnv(); dbSave(); });\r

      \  await load_syms(); \r

      \  await load_db(); \r

      \  let superdi = CODE.di = await
      load_codebase(['../game/aaasuper.js'], true );\r

      \  console.log('superdi',superdi);\r

      \  show_sidebar(sortCaseInsensitive(get_keys(superdi.const)));\r

      \  dTable = mBy('dTable');\r

      \  fiddleInit();\r

      }\r\n"
    sig: async function _start(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a04\game\start.js
    datetime: 2023-01-28-11-32
    timestamp: 1674934322336.7986
    size: 4061
  update_table:
    name: update_table
    code: "function update_table() {\r

      \  assertion(isdef(U), 'NO USER LOGGED IN WHEN GETTING TABLE FROM
      SERVER!!!!!!!!!!!!!!!!!!!!', U);\r

      \  if (nundef(Z) || nundef(Z.prev)) Z = { prev: {} };\r

      \  for (const wichtig of ['playerdata', 'notes', 'uplayer', 'uname',
      'friendly', 'step', 'round', 'phase', 'stage', 'timestamp', 'modified',
      'stime', 'mode', 'scoring']) {\r

      \    if (isdef(Z[wichtig])) Z.prev[wichtig] = jsCopy(Z[wichtig]);\r

      \  }\r

      \  Z.prev.turn = Clientdata.last_turn = Clientdata.this_turn;\r

      \  copyKeys(Serverdata, Z);\r

      \  if (isdef(Serverdata.table)) { copyKeys(Serverdata.table, Z);
      Z.playerlist = Z.players; copyKeys(Serverdata.table.fen, Z); }\r

      \  assertion(isdef(Z.fen), 'no fen in Z bei cmd=table or
      startgame!!!', Serverdata);\r

      \  Clientdata.this_turn = Z.turn;\r

      \  set_user(U.name); \r

      \  assertion(!isEmpty(Z.turn), 'turn
      empty!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!', Z.turn);\r

      \  let fen = Z.fen; \r

      \  Z.role = !is_playing(Z.uname, fen) ? 'spectator' :
      fen.turn.includes(Z.uname) ? 'active' : 'inactive';\r

      \  let [uname, turn, mode, host] = [Z.uname, fen.turn, Z.mode,
      Z.host];\r

      \  let upl = Z.role == 'active' ? uname : turn[0];\r

      \  if (mode == 'hotseat' && turn.length > 1) { let next =
      get_next_human_player(Z.prev.uplayer); if (next) upl = next; }\r

      \  if (mode == 'multi' && Z.role == 'inactive' && (uname != host ||
      is_human_player(upl))) { upl = uname; }\r

      \  set_player(upl, fen);\r

      \  let pl = Z.pl;\r

      \  Z.playmode = pl.playmode; \r

      \  Z.strategy = uname == pl.name ? valf(Clientdata.strategy,
      pl.strategy) : pl.strategy; \r

      \  let [uplayer, friendly, modified] = [Z.uplayer, Z.friendly,
      Z.modified];\r

      \  Z.uplayer_data = firstCond(Z.playerdata, x => x.name ==
      Z.uplayer);\r

      \  let sametable = !FORCE_REDRAW && friendly == Z.prev.friendly &&
      modified <= Z.prev.modified && uplayer == Z.prev.uplayer;\r

      \  let sameplayerdata = isEmpty(Z.playerdata_changed_for);\r

      \  let myplayerdatachanged =
      Z.playerdata_changed_for.includes(Z.uplayer);\r

      \  let specialcase = !i_am_host() && !i_am_acting_host() &&
      !i_am_trigger() && !myplayerdatachanged;\r

      \  Z.skip_presentation = sametable && (sameplayerdata ||
      specialcase);\r

      \  if (DA.TEST0 && (!sametable || !sameplayerdata)) {\r

      \    console.log('======>Z.skip_presentation', Z.skip_presentation,
      '\\nplayerdata_changed_for', Z.playerdata_changed_for);\r

      \    console.log('_______ *** THE END *** ___________')\r

      \  }\r

      \  FORCE_REDRAW = false;\r

      }\r\n"
    sig: function update_table(){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  stopPolling:
    name: stopPolling
    code: "function stopPolling() { pollStop(); }\r\n"
    sig: function stopPolling(){}
    region: helpers (apiserver.js)
    filename: apiserver.js
    type: func
    fname: apiserver.js
    path: C:\xampp\htdocs\aroot\games\apiserver.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 12302
  db_clear_players:
    name: db_clear_players
    code: "function db_clear_players(friendly) {\r

      \  assertion(isdef(GT[friendly]), `table ${friendly} does NOT
      exist!!!!`);\r

      \  let t = GT[friendly]; \r

      \  for (const pldata of t.playerdata) { pldata.state = null;
      pldata.player_status = null; }\r

      \  return t.playerdata;\r

      }\r\n"
    sig: function db_clear_players(friendly){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  db_write_player:
    name: db_write_player
    code: "function db_write_player(friendly, uname, state, player_status) {\r

      \  assertion(isdef(GT[friendly]), `table ${friendly} does NOT
      exist!!!!`);\r

      \  let t = GT[friendly];\r

      \  let pldata = firstCond(t.playerdata, x => x.name == uname);\r

      \  pldata.state = state;\r

      \  pldata.player_status = player_status;\r

      \  pldata.checked = Date.now();\r

      \  return t.playerdata;\r

      }\r\n"
    sig: function db_write_player(friendly, uname, state, player_status){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  db_read_playerdata:
    name: db_read_playerdata
    code: "function db_read_playerdata(friendly) {\r

      \  assertion(isdef(GT[friendly]), `table ${friendly} does NOT
      exist!!!!`);\r

      \  return GT[friendly].playerdata;\r

      }\r\n"
    sig: function db_read_playerdata(friendly){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  db_write_fen:
    name: db_write_fen
    code: "function db_write_fen(friendly, fen, scoring = null) {\r

      \  assertion(isdef(GT[friendly]), `table ${friendly} does NOT
      exist!!!!`);\r

      \  let t = GT[friendly];\r

      \  let table = t.table;\r

      \  table.fen = fen; table.scoring = scoring; table.phase =
      isdef(scoring) ? 'over' : '';\r

      \  table.modified = Date.now();  \r

      \  return table;\r

      }\r\n"
    sig: function db_write_fen(friendly, fen, scoring = null){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  db_read_table:
    name: db_read_table
    code: "function db_read_table(friendly) {\r

      \  assertion(isdef(GT[friendly]), `table ${friendly} does NOT
      exist!!!!`);\r

      \  return GT[friendly].table;\r

      }\r\n"
    sig: function db_read_table(friendly){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  db_new_table:
    name: db_new_table
    code: "function db_new_table(friendly, game, host, players, fen, options) {\r

      \  let table = { friendly, game, host, players, fen, options };\r

      \  table.modified = Date.now();  \r

      \  let playerdata = [];\r

      \  for (const plname of players) {\r

      \    playerdata.push({ name: `${plname}`, state: null,
      player_status: null });\r

      \  }\r

      \  let res = { table, playerdata };\r

      \  GT[friendly] = res;\r

      \  return res;\r

      }\r\n"
    sig: function db_new_table(friendly, game, host, players, fen, options){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  db_table_exists:
    name: db_table_exists
    code: "function db_table_exists(friendly) { return isdef(GT[friendly]); }\r\n"
    sig: function db_table_exists(friendly){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  data_from_client:
    name: data_from_client
    code: "function data_from_client(raw) {\r

      \  assertion(is_stringified(raw), 'data should be stringified
      json!!!!!!!!!!!!!!!', raw);\r

      \  let js = JSON.parse(raw);\r

      \  return js;\r

      }\r\n"
    sig: function data_from_client(raw){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  apiphp:
    name: apiphp
    code: "function apiphp(o, saveFromZ = false) {\r

      \  let [data, cmd] = [o.data, o.cmd];\r

      \  let result = {}, friendly, uname, state, player_status, fen;\r

      \  if (saveFromZ && isdef(data.friendly) &&
      !db_table_exists(data.friendly)) {\r

      \    let res = db_new_table(data.friendly, Z.game, Z.host,
      jsCopy(Z.playerlist), jsCopy(Z.fen), jsCopy(Z.options));\r

      \    if (isdef(Z.playerdata)) res.playerdata =
      jsCopy(Z.playerdata);\r

      \  }\r

      \  if (cmd == 'table') {\r

      \    if (isdef(data.auto)) result.auto = data.auto;\r

      \    friendly = data.friendly;\r

      \    uname = data.uname;\r

      \    result.status = \"table\";\r

      \    if (isdef(data.clear_players)) {\r

      \      result.playerdata = db_clear_players(friendly);\r

      \      result.status = \"clear_players\";\r

      \    } else if (isdef(data.write_player) && isdef(data.state)) {\r

      \      player_status = isdef(data.player_status) ?
      data.player_status : '';\r

      \      result.playerdata = db_write_player(friendly, uname,
      data.state, player_status);\r

      \      result.status = \"write_player\";\r

      \    } else {\r

      \      result.playerdata = db_read_playerdata(friendly);\r

      \    }\r

      \    if (isdef(data.write_fen)) {\r

      \      result.table = db_write_fen(friendly, data.fen);\r

      \      result.status += \" write_fen\";\r

      \    } else {\r

      \      result.table = db_read_table(friendly);\r

      \    }\r

      \  } else if (cmd == 'startgame') {\r

      \    let res = db_new_table(data.friendly, data.game, data.host,
      data.players, data.fen, data.options);\r

      \    result.table = res.table;\r

      \    result.playerdata = res.playerdata;\r

      \    result.status = `startgame ${data.friendly}`;\r

      \  } else if (cmd == 'tables') {\r

      \    result.tables = dict2list(GT, 'friendly').map(x => x.table);\r

      \    result.status = \"tables\";\r

      \  } else if (cmd == 'gameover') {\r

      \    result.table = db_write_fen(data.friendly, data.fen,
      data.scoring);\r

      \    result.status = `scored table ${data.friendly}`;\r

      \  }\r

      \  return result;\r

      }\r\n"
    sig: function apiphp(o, saveFromZ = false){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  sendSIMSIM:
    name: sendSIMSIM
    code: "function sendSIMSIM(o, exclusive = false, saveFromZ = false) {\r

      \  o = data_from_client(o);  \r

      \  let result = apiphp(o, saveFromZ); \r

      \  if (TESTING && o.cmd == 'startgame') { for (const func of
      DA.test.mods) func(result.table); }\r

      \  let res = JSON.stringify(result);\r

      \  if (exclusive) { if_hotseat_autoswitch(result);
      handle_result(res, o.cmd); } else { console.log('sendSIMSIM testresult',
      result); }\r

      }\r\n"
    sig: function sendSIMSIM(o, exclusive = false, saveFromZ = false){}
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: func
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  take_turn_fen:
    name: take_turn_fen
    code: "function take_turn_fen() { take_turn(); }\r\n"
    sig: function take_turn_fen(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  take_turn_spotit:
    name: take_turn_spotit
    code: "function take_turn_spotit() { take_turn(true, true); }\r\n"
    sig: function take_turn_spotit(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  take_turn_fen_clear:
    name: take_turn_fen_clear
    code: "function take_turn_fen_clear() { take_turn(true, false, true); }\r\n"
    sig: function take_turn_fen_clear(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  take_turn_fen_write:
    name: take_turn_fen_write
    code: "function take_turn_fen_write() { take_turn(true, true); }\r\n"
    sig: function take_turn_fen_write(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  take_turn_multi:
    name: take_turn_multi
    code: "function take_turn_multi() { if (isdef(Z.state)) take_turn(false, true);
      else take_turn(false, false); }\r\n"
    sig: function take_turn_multi(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  take_turn_write:
    name: take_turn_write
    code: "function take_turn_write() { take_turn_multi(); }\r\n"
    sig: function take_turn_write(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  take_turn_waiting:
    name: take_turn_waiting
    code: "function take_turn_waiting() { take_turn(true,false,false,null); }\r\n"
    sig: function take_turn_waiting(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  take_turn:
    name: take_turn
    code: "function take_turn(write_fen = true, write_player = false, clear_players
      = false, player_status = null) {\r

      \  prep_move();\r

      \  let o = { uname: Z.uplayer, friendly: Z.friendly };\r

      \  if (isdef(Z.fen)) o.fen = Z.fen;\r

      \  if (write_fen) { assertion(isdef(Z.fen) && isdef(Z.fen.turn),
      'write_fen without fen!!!!'); o.write_fen = true; }\r

      \  if (write_player) { o.write_player = true; o.state = Z.state; }
      \r

      \  if (clear_players) o.clear_players = true;\r

      \  o.player_status = player_status;\r

      \  let cmd = 'table';\r

      \  send_or_sim(o, cmd);\r

      }\r\n"
    sig: function take_turn(write_fen = true, write_player = false, clear_players =
      false, player_status = null){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  take_feedback_host:
    name: take_feedback_host
    code: "function take_feedback_host(write_fen = true, write_player = false,
      clear_players = false, player_status = null) {\r

      \  prep_move();\r

      \  let o = { uname: Z.uplayer, friendly: Z.friendly };\r

      \  if (isdef(Z.fen)) o.fen = Z.fen;\r

      \  if (write_fen) { assertion(isdef(Z.fen) && isdef(Z.fen.turn),
      'write_fen without fen!!!!'); o.write_fen = true; }\r

      \  if (write_player) { o.write_player = true; o.state = Z.state; }
      \r

      \  if (clear_players) o.clear_players = true;\r

      \  o.player_status = player_status;\r

      \  o.auto = true;\r

      \  let cmd = 'table';\r

      \  send_or_sim(o, cmd);\r

      }\r\n"
    sig: function take_feedback_host(write_fen = true, write_player = false,
      clear_players = false, player_status = null){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  prep_move:
    name: prep_move
    code: "function prep_move() {\r

      \  let [fen, uplayer, pl] = [Z.fen, Z.uplayer, Z.pl];\r

      \  for (const k of ['round', 'phase', 'stage', 'step', 'turn']) {
      fen[k] = Z[k]; }\r

      \  deactivate_ui();\r

      \  clear_timeouts();\r

      }\r\n"
    sig: function prep_move(){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  send_or_sim:
    name: send_or_sim
    code: "function send_or_sim(o, cmd) {\r

      \  Counter.server += 1; \r

      \  phpPost(o, cmd);\r

      }\r\n"
    sig: function send_or_sim(o, cmd){}
    region: helpers (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\xampp\htdocs\aroot\games\start.js
    datetime: 2023-01-17-07-00
    timestamp: 1673967650863.3025
    size: 14808
  wise:
    name: wise
    code: "function wise() {\r

      \  function state_info(dParent) { return; }\r

      \  function setup(players, options) {\r

      \    let fen = { players: {}, plorder: jsCopy(players), history: [],
      num: options.num };\r

      \    let starter = fen.starter = fen.plorder[0];\r

      \    Sayings = shuffle(Sayings);\r

      \    fen.index = 0;\r

      \    fen.saying = Sayings[fen.index];\r

      \    for (const plname of players) {\r

      \      let pl = fen.players[plname] = {\r

      \        score: 0,\r

      \        name: plname,\r

      \        color: get_user_color(plname),\r

      \      };\r

      \    }\r

      \    [fen.phase, fen.stage, fen.step, fen.turn] = ['one', 'write',
      0, jsCopy(fen.plorder)];\r

      \    return fen;\r

      \  }\r

      \  function check_gameover() {\r

      \    let winners = [];\r

      \    for (const plname of Z.plorder) {\r

      \      let cond = get_player_score(plname) >=
      Z.options.winning_score;\r

      \      if (cond) { winners.push(plname); }\r

      \    }\r

      \    if (!isEmpty(winners)) Z.fen.winners = winners;\r

      \    return isEmpty(winners)?false:Z.fen.winners;\r

      \  }\r

      \  function post_collect() { agmove_resolve(); } \r

      \  return { post_collect, state_info, setup, present: wise_present,
      check_gameover, activate_ui: wise_activate };\r

      }\r\n"
    sig: function wise(){}
    region: funcs (wise.js)
    filename: wise.js
    type: func
    fname: wise.js
    path: C:\xampp\htdocs\aroot\games\wise.js
    datetime: 2023-01-17-09-22
    timestamp: 1673976147568.6895
    size: 6703
  wise_present:
    name: wise_present
    code: "function wise_present(dParent) {\r

      \  let [fen, ui, stage, uplayer] = [Z.fen, UI, Z.stage,
      Z.uplayer];\r

      \  let [dOben, dOpenTable, dMiddle, dRechts] =
      tableLayoutMR(dParent, 1, 0); \r

      \  let dt = dTable = dOpenTable; clearElement(dt);
      mCenterFlex(dt);\r

      \  wise_stats(dt);\r

      \  mLinebreak(dt, 10);\r

      }\r\n"
    sig: function wise_present(dParent){}
    region: funcs (wise.js)
    filename: wise.js
    type: func
    fname: wise.js
    path: C:\xampp\htdocs\aroot\games\wise.js
    datetime: 2023-01-17-09-22
    timestamp: 1673976147568.6895
    size: 6703
  wise_activate:
    name: wise_activate
    code: "function wise_activate() {\r

      \  let [pldata, stage, A, fen, phase, uplayer] = [Z.playerdata,
      Z.stage, Z.A, Z.fen, Z.phase, Z.uplayer];\r

      \  let donelist = Z.playerdata.filter(x => isDict(x.state));\r

      \  let complete = donelist.length == Z.plorder.length;\r

      \  let resolvable = uplayer == fen.starter && complete;\r

      \  let waiting = !resolvable && isdef(donelist.find(x => x.name ==
      uplayer));\r

      \  console.log(uplayer, stage, 'done', donelist, 'complete',
      complete, 'waiting', waiting);\r

      \  Z.isWaiting = false;\r

      \  if (waiting) {\r

      \    mDiv(dTable, {}, null, 'WAITING FOR PLAYERS TO
      COMPLETE....');\r

      \    if (complete) {\r

      \      Z.turn = [fen.starter];\r

      \      if (Z.mode != 'multi') take_turn_waiting();\r

      \    }\r

      \    Z.isWaiting = true;\r

      \    autopoll();\r

      \  } else if (stage == 'write' && resolvable) {\r

      \    assertion(uplayer == fen.starter, 'NOT THE STARTER WHO
      COMPLETES THE STAGE!!!')\r

      \    let start = fen.saying.start.toLowerCase();\r

      \    let sentences = [];\r

      \    for (const pldata of Z.playerdata) {\r

      \      let plname = pldata.name;\r

      \      let text = start + ' ' + pldata.state.text;\r

      \      sentences.push({ plname: plname, text: text.toLowerCase()
      });\r

      \    }\r

      \    sentences.push({ plname: '', text: start + ' ' +
      fen.saying.end.toLowerCase() });\r

      \    fen.sentences = shuffle(sentences);\r

      \    Z.turn = jsCopy(Z.plorder);\r

      \    Z.stage = 'select';\r

      \    take_turn_fen_clear();\r

      \  } else if (stage == 'write') {\r

      \    let d = mCreate('form');\r

      \    let dt = dTable;\r

      \    mAppend(dt, d);\r

      \    d.autocomplete = \"off\";\r

      \    d.action = \"javascript:void(0);\";\r

      \    mDiv(d, { fz: 20 }, 'dForm', fen.saying.start.toLowerCase() +
      '...');\r

      \    Z.form = d;\r

      \    mLinebreak(d, 10);\r

      \    mInput(d, { wmin: 600 }, 'i_end', 'enter ending');\r

      \    d.onsubmit = wise_submit_text;\r

      \  } else if (stage == 'select' && resolvable) {\r

      \    assertion(uplayer == fen.starter, 'NOT THE STARTER WHO
      COMPLETES THE STAGE!!!')\r

      \    let d = mDiv(dTable, {});\r

      \    fen.result = {};\r

      \    for (const pldata of Z.playerdata) {\r

      \      let selecting = pldata.name;\r

      \      let selected = pldata.state.plname;\r

      \      let text = pldata.state.text;\r

      \      if (isEmpty(selected)) { \r

      \        console.log('REINGEGANGEN!!!!!!!!!!!!!!')\r

      \        fen.players[selecting].score += 1;\r

      \        selected = 'correct';\r

      \      } else if (selecting != selected) {\r

      \        fen.players[selected].score += 1;\r

      \      }\r

      \      fen.result[selecting] = { plname: selected, text: text };\r

      \    }\r

      \    delete fen.sentences;\r

      \    Z.turn = jsCopy(Z.plorder);\r

      \    Z.stage = 'round';\r

      \    take_turn_fen_clear();\r

      \  } else if (stage == 'select') {\r

      \    let d = mDiv(dTable, {});\r

      \    let i = 1;\r

      \    for (const s of fen.sentences) {\r

      \      let d1 = mDiv(d, { fz: 20, hline: 30 }, `dsent_${s.plname}`,
      '' + (i++) + ') ' + s.text, 'hop1');\r

      \      d1.onclick = wise_select_sentence;\r

      \    }\r

      \  } else if (stage == 'round' && resolvable) {\r

      \    assertion(uplayer == fen.starter, 'NOT THE STARTER WHO
      COMPLETES THE STAGE!!!')\r

      \    delete fen.result;\r

      \    Z.turn = jsCopy(Z.plorder);\r

      \    fen.index++;\r

      \    fen.saying = Sayings[fen.index];\r

      \    Z.stage = 'write';\r

      \    take_turn_fen_clear();\r

      \  } else if (stage == 'round') {\r

      \    let d = mDiv(dTable, {});\r

      \    for (const plname in fen.result) {\r

      \      let o = fen.result[plname];\r

      \      let d1 = mDiv(d, { fz: 20, hline: 30 }, null, `${plname}
      selected ${o.plname}: ${o.text}`);\r

      \    }\r

      \    mLinebreak(dTable, 12)\r

      \    mButton('WEITER', wise_onclick_weiter, dTable, {},
      ['donebutton', 'enabled']);\r

      \  }else{\r

      \    console.log('Z',Z)\r

      \    alert('PROBLEM!!!')\r

      \  }\r

      }\r\n"
    sig: function wise_activate(){}
    region: funcs (wise.js)
    filename: wise.js
    type: func
    fname: wise.js
    path: C:\xampp\htdocs\aroot\games\wise.js
    datetime: 2023-01-17-09-22
    timestamp: 1673976147568.6895
    size: 6703
  wise_onclick_weiter:
    name: wise_onclick_weiter
    code: "function wise_onclick_weiter() {\r

      \  Z.state = { plname: Z.uplayer };\r

      \  take_turn_multi();\r

      }\r\n"
    sig: function wise_onclick_weiter(){}
    region: funcs (wise.js)
    filename: wise.js
    type: func
    fname: wise.js
    path: C:\xampp\htdocs\aroot\games\wise.js
    datetime: 2023-01-17-09-22
    timestamp: 1673976147568.6895
    size: 6703
  wise_select_sentence:
    name: wise_select_sentence
    code: "function wise_select_sentence(ev) {\r

      \  if (!uiActivated) return;\r

      \  let text = ev.target.innerHTML;\r

      \  let plname = stringAfter(ev.target.id, 'dsent_')\r

      \  Z.state = { plname: plname, text: text };\r

      \  take_turn_multi();\r

      }\r\n"
    sig: function wise_select_sentence(ev){}
    region: funcs (wise.js)
    filename: wise.js
    type: func
    fname: wise.js
    path: C:\xampp\htdocs\aroot\games\wise.js
    datetime: 2023-01-17-09-22
    timestamp: 1673976147568.6895
    size: 6703
  wise_submit_text:
    name: wise_submit_text
    code: "function wise_submit_text(ev) { ev.preventDefault(); let text =
      mBy('i_end').value; Z.state = { text: text }; take_turn_multi(); }\r\n"
    sig: function wise_submit_text(ev){}
    region: funcs (wise.js)
    filename: wise.js
    type: func
    fname: wise.js
    path: C:\xampp\htdocs\aroot\games\wise.js
    datetime: 2023-01-17-09-22
    timestamp: 1673976147568.6895
    size: 6703
  wise_stats:
    name: wise_stats
    code: "function wise_stats(d) {\r

      \  let players = Z.fen.players;\r

      \  let d1 = mDiv(d, { display: 'flex', 'justify-content': 'center',
      'align-items': 'space-evenly' });\r

      \  for (const plname of get_present_order()) {\r

      \    let pl = players[plname];\r

      \    let onturn = Z.turn.includes(plname);\r

      \    let sz = 50; \r

      \    let bcolor = plname == Z.uplayer ? 'lime' : 'silver';\r

      \    let border = pl.playmode == 'bot' ? `double 5px ${bcolor}` :
      `solid 5px ${bcolor}`;\r

      \    let rounding = pl.playmode == 'bot' ? '0px' : '50%';\r

      \    let d2 = mDiv(d1, { margin: 4, align: 'center' }, null, `<img
      src='../base/assets/images/${plname}.jpg'
      style=\"border-radius:${rounding};display:block;border:${border};box-sizi\
      ng:border-box\" class='img_person' width=${sz}
      height=${sz}>${get_player_score(plname)}`);\r

      \  }\r

      }\r\n"
    sig: function wise_stats(d){}
    region: funcs (wise.js)
    filename: wise.js
    type: func
    fname: wise.js
    path: C:\xampp\htdocs\aroot\games\wise.js
    datetime: 2023-01-17-09-22
    timestamp: 1673976147568.6895
    size: 6703
  maButton:
    name: maButton
    code: "function maButton(caption, handler, dParent, styles) {\r

      \  let a = mLink(\"javascript:void(0)\", dParent, {}, null, caption,
      'a');\r

      \  a.onclick = handler;\r

      \  if (isdef(styles)) mStyle(a, styles);\r

      \  return a;\r

      }\r\n"
    sig: function maButton(caption, handler, dParent, styles){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mTextarea:
    name: mTextarea
    code: "function mTextarea(rows, cols, dParent, styles = {}, id) {\r

      \  let html = `<textarea id=\"${id}\"`;\r

      \  if (isdef(rows)) html += ` rows=\"${rows}\"`;\r

      \  if (isdef(cols)) html += ` cols=\"${cols}\"`;\r

      \  html += ` wrap=\"hard\"></textarea>`;\r

      \  let t = mCreateFrom(html);\r

      \  mAppend(dParent, t);\r

      \  mStyle(t, styles);\r

      \  return t;\r

      }\r\n"
    sig: function mTextarea(rows, cols, dParent, styles = {}, id){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is_key_down:
    name: is_key_down
    code: "function is_key_down(key) {\r

      \  if (nundef(DA.keystate)) {\r

      \    DA.keystate = {};\r

      \    window.addEventListener('keyup', (e) => state[e.key] =
      false);\r

      \    window.addEventListener('keydown', (e) => { state[e.key] =
      true; });\r

      \  }\r

      \  let state = DA.keystate;\r

      \  state.hasOwnProperty(key) && state[key] || false;\r

      }\r\n"
    sig: function is_key_down(key){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rVowel:
    name: rVowel
    code: "function rVowel(w, except = []) { let vowels = w ? getVowels(w, except) :
      toLetters('aeiouy'); return chooseRandom(vowels); }\r\n"
    sig: function rVowel(w, except = []){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rConsonant:
    name: rConsonant
    code: "function rConsonant(w, except = []) { let vowels = w ? getConsonants(w,
      except) : toLetters('aeiouy'); return chooseRandom(vowels); }\r\n"
    sig: function rConsonant(w, except = []){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rWheel:
    name: rWheel
    code: "function rWheel(n = 1, hue = null, sat = 100, bri = 50) {\r

      \  let d = 360 / n;\r

      \  let h = valf(hue, rHue());\r

      \  let arr = [];\r

      \  for (let i = 0; i < n; i++) {\r

      \    console.log('h', h)\r

      \    let r = colorFromHSL(h, sat, bri);\r

      \    h = (h + d) % 360;\r

      \    arr.push(r);\r

      \  }\r

      \  return arr;\r

      }\r\n"
    sig: function rWheel(n = 1, hue = null, sat = 100, bri = 50){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrNext:
    name: arrNext
    code: "function arrNext(list, el) {\r

      \  let iturn = list.indexOf(el);\r

      \  let nextplayer = list[(iturn + 1) % list.length];\r

      \  return nextplayer;\r

      }\r\n"
    sig: function arrNext(list, el){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  load_config:
    name: load_config
    code: "async function load_config(port = 3000, apps = true, tables = false) {\r

      \  Config = await route_path_yaml_dict('../y/config.yaml');\r

      \  let server = 'http:/' + '/localhost:' + port;\r

      \  if (apps) {\r

      \    let files = await route_path_json(server +
      '/files?dir=appdata');\r

      \    console.log('apps', files)\r

      \    for (const f of files) {\r

      \      let appname = stringBefore(f, '.');\r

      \      Config.apps[appname].data = await
      route_path_yaml_dict(`../y/appdata/${appname}.yaml`);\r

      \    }\r

      \  }\r

      \  if (tables) {\r

      \    let files = await route_path_json(server +
      '/files?dir=tables');\r

      \    console.log('tables', files)\r

      \    Tables = {};\r

      \    for (const f of files) {\r

      \      let id = stringBefore(f, '.');\r

      \      Tables[id] = await
      route_path_yaml_dict(`../y/tables/${id}.yaml`);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: async function load_config(port = 3000, apps = true, tables = false){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  load_config_fast:
    name: load_config_fast
    code: "async function load_config_fast(applist = [], tablelist = []) {\r

      \  Config = await route_path_yaml_dict('../y/config.yaml');\r

      \  for (const appname of applist) {\r

      \    Config.apps[appname].data = await
      route_path_yaml_dict(`../y/appdata/${appname}.yaml`);\r

      \    Config.apps[appname].name = appname;\r

      \  }\r

      \  Tables = {};\r

      \  for (const tableid of tablelist) {\r

      \    Tables[tableid] = await
      route_path_yaml_dict(`../y/tables/${tableid}.yaml`);\r

      \    Tables[tableid].name = tableid;\r

      \  }\r

      }\r\n"
    sig: async function load_config_fast(applist = [], tablelist = []){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  load_config_new:
    name: load_config_new
    code: "async function load_config_new() {\r

      \  Config = await route_path_yaml_dict('../y/config.yaml');\r

      \  let data = await route_path_yaml_dict('../y/appdata.yaml');\r

      \  for (const k in data) {\r

      \    Config.apps[k].data = data[k];\r

      \  }\r

      }\r\n"
    sig: async function load_config_new(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  load_db:
    name: load_db
    code: "async function load_db() { DB = await
      route_path_yaml_dict('../y/db.yaml'); Config = DB; }\r\n"
    sig: async function load_db(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  onpagedeactivated:
    name: onpagedeactivated
    code: "function onpagedeactivated(handler) {\r

      \  document.addEventListener('visibilitychange',\r

      \    () => {\r

      \      console.log('visibilityState', document.visibilityState);\r

      \      if (document.visibilityState !== 'visible') handler();\r

      \    });\r

      }\r\n"
    sig: function onpagedeactivated(handler){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_run_state:
    name: set_run_state
    code: "function set_run_state(singleclient = true, sockets = false, port = 3000,
      localhost = true, testing = true, liveserver = true, nodejs = true) {\r

      \  SERVER = localhost ? '127.0.0.1' : '216.250.112.218';\r

      \  PORT = port;\r

      \  SERVERURL = `http:/` + `${SERVER}:${PORT}`;\r

      \  NODEJS = nodejs;\r

      \  LIVE_SERVER = liveserver;\r

      \  TESTING = testing;\r

      \  SINGLECLIENT = singleclient;\r

      \  if (sockets) {\r

      \    Socket = liveserver ? io(SERVERURL) : io();\r

      \    Socket.on('message', x => console.log('got message', x));\r

      \    Socket.on('disconnect', x => console.log('got disconnect',
      x));\r

      \    Socket.on('update', x => console.log('got update', x));\r

      \  }\r

      \  console.log('SERVER:' + SERVERURL, 'LIVE:' + LIVE_SERVER,
      'Socket:' + Socket, TESTING ? 'TESTING' : '', SINGLECLIENT ? 'SINGLE' :
      '');\r

      }\r\n"
    sig: function set_run_state(singleclient = true, sockets = false, port = 3000,
      localhost = true, testing = true, liveserver = true, nodejs = true){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  db_init:
    name: db_init
    code: "function db_init(db) { DB = db; return db; }\r\n"
    sig: function db_init(db){}
    region: db (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  db_create:
    name: db_create
    code: "function db_create(table, rec, db) {\r

      \  if (!db) { db = DB; }\r

      \  lookupAddToList(db, ['appdata', table], rec);\r

      \  return db;\r

      }\r\n"
    sig: function db_create(table, rec, db){}
    region: db (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  db_readall:
    name: db_readall
    code: "function db_readall(db) {\r

      \  if (!db) { db = DB; }\r

      \  return db;\r

      }\r\n"
    sig: function db_readall(db){}
    region: db (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  db_update:
    name: db_update
    code: "function db_update(table, i, rec, save = false) {\r

      \  if (isdef(DB)) { let list = lookup(DB, ['appdata', table]);
      list[i] = rec; }\r

      \  if (NODEJS) post_json(SERVERURL + `/update`, { table: table, i:
      i, rec: rec, save: save }, () => console.log('updated db'));\r

      }\r\n"
    sig: function db_update(table, i, rec, save = false){}
    region: db (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  db_delete:
    name: db_delete
    code: "function db_delete(table, i, db) {\r

      \  if (!db) { db = DB; }\r

      \  if (nundef(i)) delete db.appdata[table]; else
      arrRemovip(lookup(db, ['appdata', table])[i]);\r

      \  return db;\r

      }\r\n"
    sig: function db_delete(table, i, db){}
    region: db (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  dbSave:
    name: dbSave
    code: "function dbSave() {\r

      \  if (NODEJS) {\r

      \    let route = `/post/json`;\r

      \    let o = { filename: 'db', data: DB }\r

      \    let callback = () => console.log('saved db');\r

      \    post_json(route, o, callback);\r

      \    console.log('full route', route);\r

      \  } else console.log('not saved - no app running!')\r

      }\r\n"
    sig: function dbSave(){}
    region: db (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  empty_func:
    name: empty_func
    code: "function empty_func(x) { nundef(x) || x == ' '; }\r\n"
    sig: function empty_func(x){}
    region: board (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  parseCodefile:
    name: parseCodefile
    code: "function parseCodefile(content, fname, preserveRegionNames = true, info =
      {}, superdi = {}) {\r

      \  let defaultRegions = { cla: 'classes', func: 'funcs' };\r

      \  let lines = content.split('\\r\\n');\r

      \  let parsing = false, code, type, key, regionName, regionOrig; \r

      \  let firstletters = [], firstWords = [], iline = 0;\r

      \  for (const line of lines) {\r

      \    let l = line; iline += 1;\r

      \    if (!l.includes(\"'//\") && !l.includes(\"//'\") &&
      !l.includes(\"http\")) {\r

      \      l = replaceAllFast(line, '://', '://');\r

      \      l = replaceAllFast(l, '//#', '@@#');\r

      \      l = stringBefore(l, '//');\r

      \      l = replaceAllFast(l, '@@#', '//#');\r

      \      l = replaceAllFast(l, '://', '://');\r

      \    }\r

      \    if (isEmptyOrWhiteSpace(l.trim())) continue;\r

      \    if (parsing) {\r

      \      let l1 = replaceAllSpecialChars(l, '\\t', '  ');\r

      \      let ch = l1[0];\r

      \      let oneliner=(type == 'var' && !code.includes('\\r\\n'));\r

      \      if (' }]'.includes(ch)) code += l1 + '\\r\\n';\r

      \      if (ch != ' ') { \r

      \        parsing = false;\r

      \        if (nundef(regionName)) { regionName = regionOrig =
      valf(defaultRegions[type], type); }\r

      \        let regKey = preserveRegionNames ? regionOrig :
      `${regionName} (${fname})`;\r

      \        let sig;\r

      \        if (type == 'cla') {\r

      \          sig = `class ${key}{}`;\r

      \        } else if (type == 'func') {\r

      \          let firstline = stringBefore(code, '\\r\\n');\r

      \          if (firstline.includes(') {')) sig =
      stringBefore(firstline, ') {') + ')';\r

      \          else if (firstline.includes('){')) sig =
      stringBefore(firstline, '){') + ')';\r

      \          else sig = `function ${key}()`;\r

      \          sig += '{}';\r

      \        } else { sig = `${type} ${key}`; }\r

      \        let othervars = [];\r

      \        if (oneliner && code.includes(',') && !code.includes('[')
      && !code.includes('{')){\r

      \          othervars = stringAfter(l, 'var').trim().split(',');\r

      \          othervars = othervars.map(x => firstWord(x)); \r

      \          othervars.shift();\r

      \        }\r

      \        let o = { name: key, code: code, sig: sig, region: regKey,
      filename: fname, type: type };\r

      \        addKeys(info, o);\r

      \        lookupSetOverride(superdi, [type, key], o);\r

      \        for (const v of othervars) {\r

      \          let o = { lead: key, name: v, code: '', sig: sig, region:
      regKey, filename: fname, type: type };\r

      \          addKeys(info, o);\r

      \          lookupSetOverride(superdi, [type, v], o);\r

      \        }\r

      \        addIf(firstletters, l[0]);\r

      \      }\r

      \    } else {\r

      \      let w = l[0] != '/' ? firstWord(l) : l.substring(0, 3);\r

      \      addIf(firstWords, w);\r

      \      //if (!['onload', 'async', 'function', 'class', 'var',
      'const', '//#'].includes(w)) { console.log('line', iline, w, l[0]); }\r

      \    }\r

      \    if (parsing) continue;\r

      \    if (startsWith(l, '//#region')) {\r

      \      regionOrig = stringAfter(l, 'region').trim();\r

      \      regionName = firstWordAfter(l, 'region');\r

      \    } else if (startsWith(l, 'var')) {\r

      \      key = firstWordAfter(l, 'var');\r

      \      for(const t of ['const','func','cla']) if
      (lookup(superdi,[t,key])) continue;\r

      \      parsing = true;\r

      \      code = l + '\\r\\n';\r

      \      type = 'var';\r

      \    } else if (startsWith(l, 'const')) {\r

      \      key = firstWordAfter(l, 'const');\r

      \      for(const t of ['func','cla']) if (lookup(superdi,[t,key]))
      continue;\r

      \      if (isdef(superdi.var[key])) delete superdi.var[key];\r

      \      parsing = true;\r

      \      code = l + '\\r\\n';\r

      \      type = 'const';\r

      \    } else if (startsWith(l, 'class')) {\r

      \      key = firstWordAfter(l, 'class');\r

      \      for(const t of ['func']) if (lookup(superdi,[t,key]))
      continue;\r

      \      for(const t of ['var','const']) if (lookup(superdi,[t,key]))
      delete superdi[t][key];\r

      \      parsing = true;\r

      \      code = l + '\\r\\n';\r

      \      type = 'cla';\r

      \      key = firstWordAfter(l, 'class');\r

      \    } else if (startsWith(l, 'async') || startsWith(l, 'function'))
      {\r

      \      key = stringBefore(stringAfter(l, 'function').trim(), '(');\r

      \      for(const t of ['var','const','cla']) if
      (lookup(superdi,[t,key])) delete superdi[t][key];\r

      \      parsing = true;\r

      \      code = l + '\\r\\n';\r

      \      type = 'func';\r

      \    }\r

      \  }\r

      \  return superdi;\r

      }\r\n"
    sig: function parseCodefile(content, fname, preserveRegionNames = true, info =
      {}, superdi = {}){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  autocomplete:
    name: autocomplete
    code: "function autocomplete(inp, arr) {\r

      \  /* inp...input element, arr...array of possible autocompleted
      values:*/\r

      \  var currentFocus;\r

      \  inp = toElem(inp);\r

      \  inp.addEventListener('input', e => { /*execute a func when
      someone writes in the text field:*/\r

      \    var a, b, i, val = this.value;    /*close any already open
      lists of autocompleted values*/\r

      \    autocomplete_closeAllLists();\r

      \    if (!val) { return false; }\r

      \    currentFocus = -1;\r

      \    a = document.createElement('DIV'); /*create a DIV element that
      will contain the items (values):*/\r

      \    a.setAttribute('id', this.id + 'autocomplete-list');\r

      \    a.setAttribute('class', 'autocomplete-items');\r

      \    this.parentNode.appendChild(a); /*append the DIV element as a
      child of the autocomplete container:*/\r

      \    for (i = 0; i < arr.length; i++) {\r

      \      if (arr[i].substr(0, val.length).toUpperCase() ==
      val.toUpperCase()) {\r

      \        b = document.createElement('DIV'); /*create a DIV element
      for each matching element:*/\r

      \        b.innerHTML = '<strong>' + arr[i].substr(0, val.length) +
      '</strong>'; /*make the matching letters bold:*/\r

      \        b.innerHTML += arr[i].substr(val.length);\r

      \        b.innerHTML += \"<input type='hidden' value='\" + arr[i] +
      \"'>\"; /*insert a input field that will hold the current array item's
      value:*/\r

      \        b.addEventListener('click', e => {\r

      \          inp.value = this.getElementsByTagName('input')[0].value;
      /*insert the value for the autocomplete text field:*/\r

      \          autocomplete_closeAllLists();\r

      \        });\r

      \        a.appendChild(b);\r

      \      }\r

      \    }\r

      \  });\r

      \  inp.addEventListener('keydown', e => {\r

      \    var x = document.getElementById(this.id +
      'autocomplete-list');\r

      \    if (x) x = x.getElementsByTagName('div');\r

      \    if (e.keyCode == 40) {\r

      \      currentFocus++;\r

      \      autocomplete_addActive(x);\r

      \    } else if (e.keyCode == 38) {\r

      \      currentFocus--;\r

      \      autocomplete_addActive(x);\r

      \    } else if (e.keyCode == 13) {\r

      \      e.preventDefault();\r

      \      if (currentFocus > -1) {\r

      \        if (x) x[currentFocus].click();\r

      \      }\r

      \    }\r

      \  });\r

      \  inp.addEventListener('dblclick', e => { evNoBubble(e); });\r

      \  document.addEventListener('click', e => {\r

      \    autocomplete_closeAllLists(e.target);\r

      \  });\r

      }\r\n"
    sig: function autocomplete(inp, arr){}
    region: autocomplete (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  autocomplete_addActive:
    name: autocomplete_addActive
    code: "function autocomplete_addActive(x) {\r

      \  if (!x) return false;\r

      \  autocomplete_removeActive(x);\r

      \  if (currentFocus >= x.length) currentFocus = 0;\r

      \  if (currentFocus < 0) currentFocus = x.length - 1;\r

      \  x[currentFocus].classList.add('autocomplete-active');\r

      }\r\n"
    sig: function autocomplete_addActive(x){}
    region: autocomplete (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  autocomplete_removeActive:
    name: autocomplete_removeActive
    code: "function autocomplete_removeActive(x) {\r

      \  for (var i = 0; i < x.length; i++) {\r

      \    x[i].classList.remove('autocomplete-active');\r

      \  }\r

      }\r\n"
    sig: function autocomplete_removeActive(x){}
    region: autocomplete (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  autocomplete_closeAllLists:
    name: autocomplete_closeAllLists
    code: "function autocomplete_closeAllLists(elmnt) {\r

      \  var x = document.getElementsByClassName('autocomplete-items');\r

      \  for (var i = 0; i < x.length; i++) {\r

      \    if (elmnt != x[i] && elmnt != inp) {\r

      \      x[i].parentNode.removeChild(x[i]);\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function autocomplete_closeAllLists(elmnt){}
    region: autocomplete (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  default_allowDrop:
    name: default_allowDrop
    code: "function default_allowDrop(ev) { ev.preventDefault(); }\r\n"
    sig: function default_allowDrop(ev){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mFleeting:
    name: mFleeting
    code: "function mFleeting(inner, d, ms = 3000, styles = {}, classes = null) {\r

      \  d = toElem(d);\r

      \  addKeys({ transition: 'all .5s ease', padding: 10, box: true, fg:
      'red' }, styles)\r

      \  if (isdef(styles)) mStyle(d, styles);\r

      \  if (isdef(classes)) mClass(d, classes);\r

      \  d.innerHTML = inner;\r

      \  TO.fleeting = setTimeout(() => mClear(d), ms);\r

      }\r\n"
    sig: function mFleeting(inner, d, ms = 3000, styles = {}, classes = null){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  mSearch:
    name: mSearch
    code: "function mSearch(handler, dParent, styles, classes) {\r

      \  let html = `\r

      \    <form id=\"fSearch\" action=\"javascript:void(0);\"
      class='form'>\r

      \      <label>Keywords:</label>\r

      \      <input id=\"iKeywords\" type=\"text\" name=\"keywords\"
      style=\"flex-grow:1\" />\r

      \      <button type=\"submit\" class='hop1' >Search</button>\r

      \    </form>\r

      \  `;\r

      \  let elem = mCreateFrom(html);\r

      \  mAppend(dParent, elem);\r

      \  elem.onsubmit = handler;\r

      \  return elem;\r

      }\r\n"
    sig: function mSearch(handler, dParent, styles, classes){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  aRestore:
    name: aRestore
    code: "function aRestore(elem) { elem.style.transform = ''; }\r\n"
    sig: function aRestore(elem){}
    region: m (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iClear:
    name: iClear
    code: "function iClear(item) {\r

      \  if (nundef(item)) return;\r

      \  if (isString(item)) { let id = item; if (isdef(Items[id])) item =
      Items[id]; else item = toElem(id); }\r

      \  let d = iDiv(item);\r

      \  if (isdef(d)) {\r

      \    let desc =
      Array.from(d.querySelectorAll('[id]:not([id=\"\"])'));
      //'[id]:not([id]=\"\")');\r

      \    desc = desc.filter(x => isdef(Items[x.id]))\r

      \    for (const item1 of desc) iDelete(item1.id);\r

      \    mClear(d);\r

      \  }\r

      }\r\n"
    sig: function iClear(item){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iReg:
    name: iReg
    code: "function iReg(item, liveprops, addprops) {\r

      \  iRepair(item);\r

      \  if (isdef(liveprops)) for (const k in liveprops) {
      lookupSetOverride(item, ['live', k], liveprops[k]) }\r

      \  if (isdef(addprops)) copyKeys(addprops, item);\r

      \  let umain = iDiv(item); if (nundef(umain) && isdef(item.live)) {
      umain = get_values(item.live)[0]; }\r

      \  let id = item.id;\r

      \  if (nundef(id) && umain) { id = valnwhite(umain.id, getUID());
      item.id = id; }\r

      \  else if (nundef(id)) { id = getUID(); item.id = id; }\r

      \  if (umain) { umain.id = id; }\r

      \  if (nundef(Items[id])) Items[id] = item;\r

      \  return item;\r

      }\r\n"
    sig: function iReg(item, liveprops, addprops){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iRepair:
    name: iRepair
    code: "function iRepair(item) {\r

      \  let todelete = [];\r

      \  delete item.funcs;\r

      \  for (const k in item) {\r

      \    let val = item[k];\r

      \    if (isDOM(val) || k == 'cx') {\r

      \      lookupSetOverride(item, ['live', k], val);\r

      \      todelete.push(k);\r

      \    } else if (typeof val == 'function') {\r

      \      lookupSet(item, ['funcs', k], true);\r

      \    }\r

      \  }\r

      \  for (const k of todelete) delete item[k];\r

      \  return item;\r

      }\r\n"
    sig: function iRepair(item){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  iTrim:
    name: iTrim
    code: "function iTrim(item, serialize = true) {\r

      \  let todelete = [];\r

      \  for (const k in item) {\r

      \    let val = item[k];\r

      \    if (isDOM(val)) {\r

      \      if (!serialize) { if (isEmptyOrWhiteSpace(val.id)) val.id =
      getUID(); lookupSetOverride(item, ['live', val.id], val); }\r

      \      todelete.push(k);\r

      \    } else if (typeof val == 'function') {\r

      \      console.log('funcname', val.name);\r

      \      if (serialize) item[k] = val.name;\r

      \      else { lookupSetOverride(item, ['funcs', val.name], val);
      todelete.push(k); }\r

      \    }\r

      \  }\r

      \  if (serialize) { delete item.live; delete item.funcs };\r

      \  for (const k of todelete) delete item[k];\r

      \  return item;\r

      }\r\n"
    sig: function iTrim(item, serialize = true){}
    region: i (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrPrev:
    name: arrPrev
    code: "function arrPrev(list, el) {\r

      \  let iturn = list.indexOf(el);\r

      \  if (iturn == 0) iturn = list.length;\r

      \  let nextplayer = list[(iturn - 1) % list.length];\r

      \  return nextplayer;\r

      }\r\n"
    sig: function arrPrev(list, el){}
    region: uname (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rgb2float:
    name: rgb2float
    code: "function rgb2float(rgba) {\r

      \  return [\r

      \    rgba[0] / 255,\r

      \    rgba[1] / 255,\r

      \    rgba[2] / 255,\r

      \    rgba[3]\r

      \  ]\r

      }\r\n"
    sig: function rgb2float(rgba){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rgb2hex:
    name: rgb2hex
    code: "function rgb2hex(rgba) {\r

      \  var dig, hex = '#';\r

      \  for (var i = 0; i < 3; ++i) {\r

      \    dig = rgba[i];\r

      \    dig = dig.toString(16);\r

      \    hex += ('00' + dig).substr(dig.length);\r

      \  }\r

      \  return hex;\r

      }\r\n"
    sig: function rgb2hex(rgba){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rgbaStr:
    name: rgbaStr
    code: "function rgbaStr(rgba) {\r

      \  return 'rgba(' + rgba.join(',') + ')';\r

      }\r\n"
    sig: function rgbaStr(rgba){}
    region: color (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  download_all_functions:
    name: download_all_functions
    code: "function download_all_functions() { downloadAsText(CODE.text, 'hallo',
      'js'); }\r\n"
    sig: function download_all_functions(){}
    region: file (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  map_range:
    name: map_range
    code: "function map_range(x, min1, max1, min2, max2) { return
      convert_to_range(x, min1, max1, min2, max2); }\r\n"
    sig: function map_range(x, min1, max1, min2, max2){}
    region: math (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rPerlin:
    name: rPerlin
    code: "function rPerlin(x, y = 0, z = 0) {\r

      \  Perlin.lastx = x;\r

      \  if (Perlin.perlin == null) {\r

      \    Perlin.perlin = new Array(Perlin.PERLIN_SIZE + 1);\r

      \    for (let i = 0; i < Perlin.PERLIN_SIZE + 1; i++) {\r

      \      Perlin.perlin[i] = Math.random();\r

      \    }\r

      \  }\r

      \  if (x < 0) { x = -x; }\r

      \  if (y < 0) { y = -y; }\r

      \  if (z < 0) { z = -z; }\r

      \  let xi = Math.floor(x), yi = Math.floor(y), zi = Math.floor(z);\r

      \  let xf = x - xi;\r

      \  let yf = y - yi;\r

      \  let zf = z - zi;\r

      \  let rxf, ryf;\r

      \  let r = 0;\r

      \  let ampl = 0.5;\r

      \  let n1, n2, n3;\r

      \  for (let o = 0; o < Perlin.perlin_octaves; o++) {\r

      \    let of = xi + (yi << Perlin.PERLIN_YWRAPB) + (zi <<
      Perlin.PERLIN_ZWRAPB);\r

      \    rxf = Perlin.scaled_cosine(xf);\r

      \    ryf = Perlin.scaled_cosine(yf);\r

      \    n1 = Perlin.perlin[of & Perlin.PERLIN_SIZE];\r

      \    n1 += rxf * (Perlin.perlin[(of + 1) & Perlin.PERLIN_SIZE] -
      n1);\r

      \    n2 = Perlin.perlin[(of + Perlin.PERLIN_YWRAP) &
      Perlin.PERLIN_SIZE];\r

      \    n2 += rxf * (Perlin.perlin[(of + Perlin.PERLIN_YWRAP + 1) &
      Perlin.PERLIN_SIZE] - n2);\r

      \    n1 += ryf * (n2 - n1);\r

      \    of += Perlin.PERLIN_ZWRAP;\r

      \    n2 = Perlin.perlin[of & Perlin.PERLIN_SIZE];\r

      \    n2 += rxf * (Perlin.perlin[(of + 1) & Perlin.PERLIN_SIZE] -
      n2);\r

      \    n3 = Perlin.perlin[(of + Perlin.PERLIN_YWRAP) &
      Perlin.PERLIN_SIZE];\r

      \    n3 += rxf * (Perlin.perlin[(of + Perlin.PERLIN_YWRAP + 1) &
      Perlin.PERLIN_SIZE] - n3);\r

      \    n2 += ryf * (n3 - n2);\r

      \    n1 += Perlin.scaled_cosine(zf) * (n2 - n1);\r

      \    r += n1 * ampl;\r

      \    ampl *= Perlin.perlin_amp_falloff;\r

      \    xi <<= 1;\r

      \    xf *= 2;\r

      \    yi <<= 1;\r

      \    yf *= 2;\r

      \    zi <<= 1;\r

      \    zf *= 2;\r

      \    if (xf >= 1.0) { xi++; xf--; }\r

      \    if (yf >= 1.0) { yi++; yf--; }\r

      \    if (zf >= 1.0) { zi++; zf--; }\r

      \  }\r

      \  return r;\r

      };\r\n"
    sig: function rPerlin(x, y = 0, z = 0){}
    region: random (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  firstWordAfter:
    name: firstWordAfter
    code: "function firstWordAfter(s, sub) {\r

      \  let s1 = stringAfter(s, sub);\r

      \  let s2 = toWords(s1)[0]\r

      \  return s2;\r

      }\r\n"
    sig: function firstWordAfter(s, sub){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  firstWord:
    name: firstWord
    code: "function firstWord(s) { return toWords(s)[0]; }\r\n"
    sig: function firstWord(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  cap_each_word:
    name: cap_each_word
    code: "function cap_each_word(s) {\r

      \  let arr = s.split(' ');\r

      \  let res = '';\r

      \  for (const a of arr) { res += capitalize(a) + ' '; }\r

      \  return res.slice(0, -1);\r

      }\r\n"
    sig: function cap_each_word(s){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  indexOfAny:
    name: indexOfAny
    code: "function indexOfAny(s, list, pos) {\r

      \  let min = 1000000;\r

      \  let match = null;\r

      \  for (const w of list) {\r

      \    let i = s.indexOf(w, pos);\r

      \    if (i >= 0 && i < min) { min = i; match = w; }\r

      \  }\r

      \  return match ? [min, match] : [-1, null];\r

      }\r\n"
    sig: function indexOfAny(s, list, pos){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  lastIndexOfAny:
    name: lastIndexOfAny
    code: "function lastIndexOfAny(s, list, pos) {\r

      \  let min = -1;\r

      \  let match = null;\r

      \  for (const w of list) {\r

      \    let i = s.lastIndexOf(w, pos);\r

      \    if (i >= 0 && i > min) { min = i; match = w; }\r

      \  }\r

      \  return match ? [min, match] : [-1, null];\r

      }\r\n"
    sig: function lastIndexOfAny(s, list, pos){}
    region: string (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  evStop:
    name: evStop
    code: "function evStop(ev) {\r

      \  ev.preventDefault();\r

      \  ev.stopPropagation();\r

      \  ev.stopImmediatePropagation();\r

      \  ev.cancelBubble = true;\r

      }\r\n"
    sig: function evStop(ev){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  fromYaml:
    name: fromYaml
    code: "function fromYaml(x) { return jsyaml.load(x); }\r\n"
    sig: function fromYaml(x){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  toYaml:
    name: toYaml
    code: "function toYaml(o) { return jsonToYaml(o); }\r\n"
    sig: function toYaml(o){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  posToPoint:
    name: posToPoint
    code: "function posToPoint(pos = 'cc', w, h, offx = 0, offy = 0) {\r

      \  let di = { t: 0, b: h, l: 0, r: w };\r

      \  let py = pos[0] == 'c' ? h / 2 : di[pos[0]];\r

      \  let px = pos[1] == 'c' ? w / 2 : di[pos[1]];\r

      \  return [px + offx, py + offy];\r

      }\r\n"
    sig: function posToPoint(pos = 'cc', w, h, offx = 0, offy = 0){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_run_state_no_server:
    name: set_run_state_no_server
    code: "function set_run_state_no_server() {\r

      \  set_run_state(true, false, 3000, true, true, true, false);\r

      }\r\n"
    sig: function set_run_state_no_server(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_run_state_local:
    name: set_run_state_local
    code: "function set_run_state_local() {\r

      \  set_run_state(true, false, 3000, true, false, true, true);\r

      }\r\n"
    sig: function set_run_state_local(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  set_run_state_vps:
    name: set_run_state_vps
    code: "function set_run_state_vps() {\r

      \  set_run_state(false, false, 3000, false, false, false, true);\r

      }\r\n"
    sig: function set_run_state_vps(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  valnwhite:
    name: valnwhite
    code: "function valnwhite() {\r

      \  for (const arg of arguments) if (isdef(arg) &&
      !isEmptyOrWhiteSpace(arg)) return arg;\r

      \  return null;\r

      }\r\n"
    sig: function valnwhite(){}
    region: misc (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  arrAverage:
    name: arrAverage
    code: "function arrAverage(arr, prop) {\r

      \  let n = arr.length; if (!n) return 0;\r

      \  let sum = arrSum(arr, prop);\r

      \  return sum / n;\r

      }\r\n"
    sig: function arrAverage(arr, prop){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getCaretCoordinates:
    name: getCaretCoordinates
    code: "function getCaretCoordinates(element, position, options) {\r

      \  var properties = [\r

      \    'direction',\r

      \    'boxSizing',\r

      \    'width',\r

      \    'height',\r

      \    'overflowX',\r

      \    'overflowY',\r

      \    'borderTopWidth',\r

      \    'borderRightWidth',\r

      \    'borderBottomWidth',\r

      \    'borderLeftWidth',\r

      \    'borderStyle',\r

      \    'paddingTop',\r

      \    'paddingRight',\r

      \    'paddingBottom',\r

      \    'paddingLeft',\r

      \    'fontStyle',\r

      \    'fontVariant',\r

      \    'fontWeight',\r

      \    'fontStretch',\r

      \    'fontSize',\r

      \    'fontSizeAdjust',\r

      \    'lineHeight',\r

      \    'fontFamily',\r

      \    'textAlign',\r

      \    'textTransform',\r

      \    'textIndent',\r

      \    'textDecoration',\r

      \    'letterSpacing',\r

      \    'wordSpacing',\r

      \    'tabSize',\r

      \    'MozTabSize'\r

      \  ];\r

      \  var isBrowser = (typeof window !== 'undefined');\r

      \  var isFirefox = (isBrowser && window.mozInnerScreenX != null);\r

      \  if (!isBrowser) {\r

      \    throw new Error('textarea-caret-position#getCaretCoordinates
      should only be called in a browser');\r

      \  }\r

      \  var debug = options && options.debug || false;\r

      \  if (debug) {\r

      \    var el =
      document.querySelector('#input-textarea-caret-position-mirror-div');\r

      \    if (el) el.parentNode.removeChild(el);\r

      \  }\r

      \  var div = document.createElement('div');\r

      \  div.id = 'input-textarea-caret-position-mirror-div';\r

      \  document.body.appendChild(div);\r

      \  var style = div.style;\r

      \  var computed = window.getComputedStyle ?
      window.getComputedStyle(element) : element.currentStyle;\r

      \  var isInput = element.nodeName === 'INPUT';\r

      \  style.whiteSpace = 'pre-wrap';\r

      \  if (!isInput) style.wordWrap = 'break-word';\r

      \  style.position = 'absolute';\r

      \  if (!debug) style.visibility = 'hidden';\r

      \  properties.forEach(prop => {\r

      \    if (isInput && prop === 'lineHeight') {\r

      \      if (computed.boxSizing === \"border-box\") {\r

      \        var height = parseInt(computed.height);\r

      \        var outerHeight =\r

      \          parseInt(computed.paddingTop) +\r

      \          parseInt(computed.paddingBottom) +\r

      \          parseInt(computed.borderTopWidth) +\r

      \          parseInt(computed.borderBottomWidth);\r

      \        var targetHeight = outerHeight +
      parseInt(computed.lineHeight);\r

      \        if (height > targetHeight) {\r

      \          style.lineHeight = height - outerHeight + \"px\";\r

      \        } else if (height === targetHeight) {\r

      \          style.lineHeight = computed.lineHeight;\r

      \        } else {\r

      \          style.lineHeight = 0;\r

      \        }\r

      \      } else {\r

      \        style.lineHeight = computed.height;\r

      \      }\r

      \    } else {\r

      \      style[prop] = computed[prop];\r

      \    }\r

      \  });\r

      \  if (isFirefox) {\r

      \    if (element.scrollHeight > parseInt(computed.height))\r

      \      style.overflowY = 'scroll';\r

      \  } else {\r

      \    style.overflow = 'hidden';\r

      \  }\r

      \  div.textContent = element.value.substring(0, position);\r

      \  if (isInput)\r

      \    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\r

      \  var span = document.createElement('span');\r

      \  span.textContent = element.value.substring(position) || '.';\r

      \  div.appendChild(span);\r

      \  var coordinates = {\r

      \    top: span.offsetTop + parseInt(computed['borderTopWidth']),\r

      \    left: span.offsetLeft +
      parseInt(computed['borderLeftWidth']),\r

      \    height: parseInt(computed['lineHeight'])\r

      \  };\r

      \  if (debug) {\r

      \    span.style.backgroundColor = '#aaa';\r

      \  } else {\r

      \    document.body.removeChild(div);\r

      \  }\r

      \  return coordinates;\r

      }\r\n"
    sig: function getCaretCoordinates(element, position, options){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getGlobals:
    name: getGlobals
    code: "function getGlobals() {\r

      \  let di = {};\r

      \  let keys = get_keys(window); keys.sort();\r

      \  for (const k of keys) {\r

      \    let o = window[k];\r

      \    let type = typeof o;\r

      \    lookupAddToList(di, [type], { key: k, o: o, value: k, type:
      type });\r

      \  }\r

      \  Globals = di;\r

      \  return di;\r

      }\r\n"
    sig: function getGlobals(){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getTextAreaCurrentLine:
    name: getTextAreaCurrentLine
    code: "function getTextAreaCurrentLine(el) {\r

      \  let line = '';\r

      \  if (el instanceof HTMLTextAreaElement) {\r

      \    line = el.value.slice(el.value.lastIndexOf('\\n',
      el.selectionStart - 1) + 1,\r

      \      ((end = el.value.indexOf('\\n', el.selectionStart)) => end >
      -1 ? end : undefined)());\r

      \  }\r

      \  return line;\r

      }\r\n"
    sig: function getTextAreaCurrentLine(el){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  getTextAreaCurrentWord:
    name: getTextAreaCurrentWord
    code: "function getTextAreaCurrentWord(el) {\r

      \  let line = '', w = '', prefix = '';\r

      \  if (el instanceof HTMLTextAreaElement) {\r

      \    let s = el.value;\r

      \    let i_caret = el.selectionEnd;\r

      \    let i_last_break_before_caret = s.lastIndexOf('\\n', i_caret -
      1); if (i_last_break_before_caret < 0) i_last_break_before_caret = 0;\r

      \    let i_next_break = s.indexOf('\\n', i_caret); if (i_next_break
      < 0) i_next_break = s.length - 1;\r

      \    let i_caret_within_line = i_caret -
      i_last_break_before_caret;\r

      \    line = s.slice(i_last_break_before_caret + 1, i_next_break);\r

      \    let pos = i_caret_within_line - 2;\r

      \    console.log('_________\\nline:', line, '\\ni_caret=' + i_caret,
      'i_in_line=' + pos);\r

      \    for (let i = pos; i >= 0; i--) {\r

      \      let ch = line[i];\r

      \      if (isAlphaNum(ch)) w = ch + w; else break;\r

      \    }\r

      \    prefix = w;\r

      \    for (let i = pos + 1; i < line.length; i++) {\r

      \      let ch = line[i];\r

      \      if (isAlphaNum(ch)) w = w + ch; else break;\r

      \    }\r

      \  }\r

      \  return [w, prefix];\r

      }\r\n"
    sig: function getTextAreaCurrentWord(el){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  rName:
    name: rName
    code: "function rName(n = 1) { let arr = MyNames; return rChoose(arr, n); }\r\n"
    sig: function rName(n = 1){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  stringLast:
    name: stringLast
    code: "function stringLast(s, n) { return s.substring(s.length - n, s.length);
      }\r\n"
    sig: function stringLast(s, n){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  doit:
    name: doit
    code: "function doit(secs, f, interval) {\r

      \  if (get_now() - DA.start < secs * 1000) setTimeout(() => { f();
      doit(secs, f, interval); }, interval);\r

      \  else console.log('DONE!!!');\r

      }\r\n"
    sig: function doit(secs, f, interval){}
    region: new (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  _parseCodefile:
    name: _parseCodefile
    code: "function _parseCodefile(content, fname) {\r

      \  let di = {}, text = '';\r

      \  let dicode = {};\r

      \  let diregion = {};\r

      \  let lines = content.split('\\r\\n');\r

      \  let classes_started = true;\r

      \  let parsing = false, code, ending, type, key;\r

      \  let firstletters = [];\r

      \  for (const line of lines) {\r

      \    let l = line;\r

      \    if (!l.includes(\"'//\")){\r

      \      l = replaceAllFast(line, '://', ':@@');\r

      \      l = replaceAllFast(l, '//#', '@@#');\r

      \      l = stringBefore(l, '//');\r

      \      l = replaceAllFast(l, '@@#', '//#');\r

      \      l = replaceAllFast(l, ':@@', '://');\r

      \    }\r

      \    if (isEmptyOrWhiteSpace(l.trim())) continue;\r

      \    if (parsing) { \r

      \      assertion(classes_started, 'parsing but NOT
      classes_started!!!!');\r

      \      let l1 = replaceAllSpecialChars(l, '\\t', '  ');\r

      \      let ch = l1[0];\r

      \      if (' }'.includes(ch)) code += l1 + '\\n';\r

      \      if (ch != ' ') {\r

      \        parsing = false;\r

      \        lookupSetOverride(dicode, [key], code);\r

      \        lookupAddIfToList(di, [type], key);\r

      \        lookupSetOverride(diregion, [fname, CODE.region, key], {
      name: key, code: code, sig: stringBefore(code, ') {'), region:
      CODE.region, filename: fname });\r

      \        addIf(firstletters, l[0]);\r

      \      }\r

      \    }\r

      \    if (classes_started && startsWith(l, '//#end')) continue;\r

      \    assertion(!startsWith(l, '//#endregion') || !classes_started,
      'ASSERTION!!!');\r

      \    if (parsing) continue;\r

      \    if (startsWith(l, '//#region')) {\r

      \      let region = CODE.region = firstWordAfter(l, 'region');\r

      \      if (startsWith(l, '//#region classes')) classes_started =
      true;\r

      \      if (!classes_started || startsWith(l, '//#region vars')) text
      += `\\n//#region ${fname} ${region}\\n`;\r

      \      continue;\r

      \    } else if (startsWith(l, 'var')) {\r

      \      if (classes_started) console.log('line', l)\r

      \      classes_started = false; \r

      \      let vs = stringAfter(l, 'var').trim().split(',');\r

      \      vs.map(x => firstWord(x)).map(y => lookupAddToList(di,
      ['var'], y));\r

      \    } else if (startsWith(l, 'const')) {\r

      \      lookupAddToList(di, ['const'], toWords(l)[1]);\r

      \    } else if (startsWith(l, 'class')) {\r

      \      parsing = true;\r

      \      code = l + '\\n';\r

      \      type = 'cla';\r

      \      key = firstWordAfter(l, 'class'); \r

      \    } else if (startsWith(l, 'async') || startsWith(l, 'function'))
      {\r

      \      parsing = true;\r

      \      code = l + '\\n';\r

      \      type = 'func';\r

      \      key = stringBefore(stringAfter(l, 'function').trim(), '(');\r

      \    }\r

      \    if (!classes_started) text += l + '\\n';\r

      \  }\r

      \  console.log('first letters', firstletters)\r

      \  for (const k in di) {\r

      \    di[k].sort();\r

      \  }\r

      \  if (isdef(di.cla)) {\r

      \    text += `\\n//#region ${fname} classes\\n`;\r

      \    for (const k of di.cla) {\r

      \      text += dicode[k];\r

      \    }\r

      \    text += `//#endregion ${fname} classes\\n`;\r

      \  }\r

      \  for (const r in diregion[fname]) {\r

      \    if (r == 'classes') continue;\r

      \    text += `\\n//#region ${fname} ${r}\\n`;\r

      \    let sorted_keys = get_keys(diregion[fname][r]);\r

      \    sorted_keys.sort((a, b) => { return
      a.toLowerCase().localeCompare(b.toLowerCase()); });\r

      \    for (const funcname of sorted_keys) { \r

      \      text += dicode[funcname];\r

      \    }\r

      \    text += `//#endregion ${fname} ${r}\\n`;\r

      \  }\r

      \  return { di: di, dicode: dicode, diregion: diregion, text: text
      };\r

      }\r\n"
    sig: function _parseCodefile(content, fname){}
    region: new (aaa.js)
    filename: aaa.js
    type: func
    fname: aaa.js
    path: C:\D\a04\game\aaa.js
    datetime: 2023-01-27-07-16
    timestamp: 1674832585575.3032
    size: 378155
  generic_present:
    name: generic_present
    code: "function generic_present(d, g) {\r

      \  let ui = ui_type_tile(g, d); return;\r

      }\r\n"
    sig: function generic_present(d, g){}
    region: app (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  get_app_presenter:
    name: get_app_presenter
    code: "function get_app_presenter(id) {\r

      \  let di = {};\r

      \  return di[id] || generic_present;\r

      }\r\n"
    sig: function get_app_presenter(id){}
    region: app (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  set_context:
    name: set_context
    code: "function set_context(item) {\r

      \  CONTEXT = isDict(item) ? item\r

      \    : isString(item) && isdef(Items[item]) ? Items[item]\r

      \      : isNumber(item) && isdef(Items[`_${item}`]) ?
      Items[`_${item}`]\r

      \        : get_values(Items)[0];\r

      }\r\n"
    sig: function set_context(item){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  reset_context:
    name: reset_context
    code: "function reset_context() { CONTEXT = null; }\r\n"
    sig: function reset_context(){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  startloop:
    name: startloop
    code: "function startloop() { FR = 30; DA.interval =
      setInterval(update_draw_items, 1000 / FR) }\r\n"
    sig: function startloop(){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  pauseloop:
    name: pauseloop
    code: "function pauseloop() { clearInterval(DA.interval); }\r\n"
    sig: function pauseloop(){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  update_draw_items:
    name: update_draw_items
    code: "function update_draw_items() {\r

      \  for (const item of get_values(Items)) {\r

      \    if (isdef(item.update)) item.update(item); \r

      \    if (isdef(item.draw)) item.draw(item); \r

      \  }\r

      }\r\n"
    sig: function update_draw_items(){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  rPosition:
    name: rPosition
    code: "function rPosition(o) {\r

      \  let [xoff, yoff] = isdef(o.origin) ? [-o.origin.x, -o.origin.y] :
      [0, 0];\r

      \  return [o.x, o.y] = [rNumber(0, o.w) + xoff, rNumber(0, o.h) +
      yoff];\r

      }\r\n"
    sig: function rPosition(o){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  rnPosition:
    name: rnPosition
    code: "function rnPosition(o, speed) {\r

      \  let [xoff, yoff] = isdef(o.origin) ? [-o.origin.x, -o.origin.y] :
      [0, 0];\r

      \  return [o.x, o.y] = [rNoise('x', 0, o.w, speed) + xoff,
      rNoise('y', 0, o.h, speed) + yoff];\r

      }\r\n"
    sig: function rnPosition(o, speed){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  rNoise:
    name: rNoise
    code: "function rNoise(channel, min, max, speed = 0.02) {\r

      \  if (nundef(Perlin.channels[channel])) Perlin.channels[channel] =
      rNumber(0, 10000);\r

      \  let lastx = Perlin.channels[channel];\r

      \  if (nundef(speed)) speed = Perlin.speed;\r

      \  lastx += speed;\r

      \  Perlin.channels[channel] = lastx;\r

      \  let r01 = rPerlin(lastx);\r

      \  let n = map_range(r01, 0, 1, min, max);\r

      \  return n;\r

      }\r\n"
    sig: function rNoise(channel, min, max, speed = 0.02){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  rInc:
    name: rInc
    code: "function rInc(o, prop, min, max) { o[prop] += rNumber(min, max); return
      o[prop]; }\r\n"
    sig: function rInc(o, prop, min, max){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  draw_random_walk:
    name: draw_random_walk
    code: "function draw_random_walk(item) {\r

      \  let [cv, cx] = [item.live.cv, item.live.cx];\r

      \  cClear(cv, cx);\r

      \  cEllipse(rInc(item, 'x', -2, 2), rInc(item, 'y', -2, 2), 30, 20,
      { bg: 'blue', fg: 'green' }, 0, cx);\r

      }\r\n"
    sig: function draw_random_walk(item){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  draw_perlin_x:
    name: draw_perlin_x
    code: "function draw_perlin_x(item) {\r

      \  let [cv, cx] = [item.live.cv, item.live.cx];\r

      \  cClear(cv, cx);\r

      \  let r = rPerlin(item.x);\r

      \  item.r = map_range(r, 0, 1, -item.w / 2, item.w / 2);\r

      \  cEllipse(item.r, 0, 25, 25, { bg: 'white' }, 0, cx);\r

      \  item.x += .02;\r

      }\r\n"
    sig: function draw_perlin_x(item){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  draw_perlin_xy:
    name: draw_perlin_xy
    code: "function draw_perlin_xy(item) {\r

      \  let [cv, cx] = [item.live.cv, item.live.cx];\r

      \  cClear(cv, cx);\r

      \  item.randx = valf(item.randx, 0) + .01;\r

      \  item.randy = valf(item.randy, 10000) + .02;\r

      \  item.x = map_range(rPerlin(item.randx), 0, 1, -item.w / 2, item.w
      / 2);\r

      \  item.y = map_range(rPerlin(item.randy), 0, 1, -item.h / 2, item.h
      / 2);\r

      \  cEllipse(item.x, item.y, 25, 25, { bg: 'white' }, 0, cx);\r

      }\r\n"
    sig: function draw_perlin_xy(item){}
    region: canvas (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  fiddleAdd:
    name: fiddleAdd
    code: "function fiddleAdd(dParent, content, idx) {\r

      \  let ta = AU.ta = mTextarea(3, null, dParent, { fz: 16, padding:
      10, family: 'tahoma', w: '100%', box: true });\r

      \  ta.addEventListener('keydown', fiddleControlHandler);\r

      \  ta.addEventListener('keydown', fiddleEnterResize);\r

      \  DA.tribute.attach(ta);\r

      \  DA.tas.push(ta);\r

      \  ta.addEventListener('tribute-replaced', fiddleMessageHandler);\r

      \  if (isdef(content)) ta.value = content;\r

      \  if (isdef(idx)) mInsertAt(dParent, ta, idx); \r

      \  ta.focus();\r

      }\r\n"
    sig: function fiddleAdd(dParent, content, idx){}
    region: fiddle (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  fiddleEnterResize:
    name: fiddleEnterResize
    code: "function fiddleEnterResize(ev) {\r

      \  if (ev.key == 'Enter') {\r

      \    console.log('hallo!'); \r

      \    let ta = ev.target;\r

      \    return;\r

      \    let x = ta.value;\r

      \    let lines = x.split('\\n');\r

      \    let min = lines.length + 1;\r

      \    let coords = getCaretCoordinates(ta, ta.selectionEnd);\r

      \    console.log('coords', coords, 'window height',
      window.innerHeight)\r

      \    if (coords.top + 60 < window.innerHeight && (nundef(ta.rows) ||
      ta.rows < min)) ta.rows = min;\r

      \  }\r

      }\r\n"
    sig: function fiddleEnterResize(ev){}
    region: fiddle (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  fiddleControlHandler:
    name: fiddleControlHandler
    code: "function fiddleControlHandler(ev) {\r

      \  if (ev.ctrlKey) {\r

      \    let instance = DA.tribute; \r

      \    instance.isActive = false;\r

      \    instance.hideMenu();\r

      \    if (ev.key == 'Enter') {\r

      \      runcode(ev.target.value);\r

      \    } else if (ev.key == '+' || ev.key == '=') {\r

      \      evStop(ev);\r

      \      fiddleAdd(dFiddle);\r

      \    } else if (ev.key == '-' || ev.key == '_') {\r

      \      evStop(ev);\r

      \      let empty = DA.tas.filter(x =>
      isEmptyOrWhiteSpace(x.value));\r

      \      let elfocus = document.activeElement;\r

      \      let nofocus = false;\r

      \      for (const ta of empty) { if (ta == elfocus) nofocus = true;
      ta.remove(); }\r

      \      DA.tas = arrMinus(DA.tas, empty);\r

      \      if (isEmpty(DA.tas)) fiddleAdd(dFiddle);\r

      \      else if (nofocus) { AU.ta = DA.tas[0]; AU.ta.focus(); }\r

      \    } else if (ev.key == 'ArrowDown') {\r

      \      let ta = AU.ta = arrNext(DA.tas, AU.ta);\r

      \      ta.focus();\r

      \    } else if (ev.key == 'ArrowUp') {\r

      \      let ta = AU.ta = arrPrev(DA.tas, AU.ta);\r

      \      ta.focus();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function fiddleControlHandler(ev){}
    region: fiddle (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  fiddleInit:
    name: fiddleInit
    code: "function fiddleInit(dParent, dParentConsole) {\r

      \  dFiddle = valf(dParent, dTable);\r

      \  dMessage = mDiv(dFiddle, { w: '100%', bg: 'dimgray', fg:
      'yellow', box: true, hpadding: 10 }, 'dMessage', 'enter code:');\r

      \  getGlobals();\r

      \  let list = Globals.function.map(x => ({ key: x.key, value: x.key
      + '(' }));\r

      \  DA.tas = [];\r

      \  var tributeAttributes = {\r

      \    autocompleteMode: true,\r

      \    //noMatchTemplate: '', //null, //' ',\r

      \    noMatchTemplate: () => {\r

      \      return '<span style:\"visibility: hidden;\"></span>';\r

      \    },\r

      \    values: fiddleSearch,\r

      \    selectTemplate: function (item) {\r

      \      if (typeof item === 'undefined') return null;\r

      \      if (this.range.isContentEditable(this.current.element)) {\r

      \        return '<span contenteditable=\"false\"><a>' +
      item.original.key + '</a></span>';\r

      \      }\r

      \      return item.original.value;\r

      \    },\r

      \    menuItemTemplate: function (item) {\r

      \      return item.string;\r

      \    },\r

      \    replaceTextSuffix: '(',\r

      \    menuShowMinLength: 1,\r

      \  };\r

      \  var trib = DA.tribute = new Tribute(Object.assign({
      menuContainer: dParent, }, tributeAttributes));\r

      \  let saved = localStorage.getItem('codelist');\r

      \  let codelist = saved ? JSON.parse(saved) : [];\r

      \  if (codelist.length == 0) codelist = [`console.log('hallo');`];\r

      \  for (const code of codelist) {\r

      \    fiddleAdd(dFiddle, code);\r

      \  }\r

      \  setTimeout(() => dFiddle.children[0].focus(), 100);\r

      }\r\n"
    sig: function fiddleInit(dParent, dParentConsole){}
    region: fiddle (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  fiddleMessageHandler:
    name: fiddleMessageHandler
    code: "function fiddleMessageHandler(ev) {\r

      \  let key = ev.detail.item.original.key;\r

      \  let item = window[key];\r

      \  if (typeof item == 'function') {\r

      \    let d = mBy('dMessage');\r

      \    d.innerHTML = stringBefore(item.toString(), ') {') + ')';\r

      \  }\r

      }\r\n"
    sig: function fiddleMessageHandler(ev){}
    region: fiddle (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  fiddleSave:
    name: fiddleSave
    code: "function fiddleSave() {\r

      \  if (isdef(dFiddle)) {\r

      \    let codelist = arrChildren(dFiddle).slice(1).filter(x =>
      !isEmptyOrWhiteSpace(x.value)).map(x => x.value);\r

      \    localStorage.setItem('codelist', JSON.stringify(codelist));\r

      \    lookupSetOverride(DB, ['env', 'fiddle'], codelist);\r

      \  } else console.log('fiddle closed - not saved')\r

      }\r\n"
    sig: function fiddleSave(){}
    region: fiddle (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  fiddleSearch:
    name: fiddleSearch
    code: "function fiddleSearch(text, callback) {\r

      \  console.log('text', text)\r

      \  let list = Globals.function;\r

      \  let list1 = list.filter(x => startsWith(x.key, text));\r

      \  callback(list1);\r

      }\r\n"
    sig: function fiddleSearch(text, callback){}
    region: fiddle (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  runcode:
    name: runcode
    code: "function runcode(code, callback = null) {\r

      \  let x = eval(code);\r

      \  if (callback) callback(x);\r

      \  else {\r

      \    console.log('===>result:', x);\r

      \    if (isdef(dMessage)) dMessage.innerHTML = isDict(x) ?
      JSON.stringify(x) : x.toString();\r

      \  }\r

      }\r\n"
    sig: function runcode(code, callback = null){}
    region: fiddle (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  create_random_players:
    name: create_random_players
    code: "function create_random_players(n = 1) {\r

      \  let colors = rWheel(n);\r

      \  let res = [{ name: 'mimi', playmode: 'human', color: colors[0]
      }];\r

      \  let names = rChoose(MyNames, n - 1); \r

      \  if (!isList(names)) names = [names];\r

      \  for (let i = 1; i < n; i++) {\r

      \    let pl = { name: names[i - 1], playmode: 'bot', color:
      colors[i], strategy: 'random' };\r

      \    res.push(pl);\r

      \  }\r

      \  return res;\r

      }\r\n"
    sig: function create_random_players(n = 1){}
    region: game (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  _start_game:
    name: _start_game
    code: "function _start_game(gamename, players, options) {\r

      }\r\n"
    sig: function _start_game(gamename, players, options){}
    region: game (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  cancel_game:
    name: cancel_game
    code: "function cancel_game() { iClear('dMenu'); } \r\n"
    sig: function cancel_game(){}
    region: game (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  iTag:
    name: iTag
    code: "function iTag(tags = ['canvas', 'textarea', 'a'], ignore_empty = true)
      {\r

      \  for (const t of tags) {\r

      \    let uis = Array.from(document.getElementsByTagName(t));\r

      \    if (ignore_empty) uis = uis.filter(d =>
      !isEmpty(d.innerHTML));\r

      \    for (const ui of uis) {\r

      \      if (isEmptyOrWhiteSpace(ui.id)) ui.id = getUID(); \r

      \      iAdd({}, { div: ui });\r

      \    }\r

      \  }\r

      \  setTimeout(show_tagged, 100);\r

      }\r\n"
    sig: function iTag(tags = ['canvas', 'textarea', 'a'], ignore_empty = true){}
    region: Items (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  show_tagged:
    name: show_tagged
    code: "function show_tagged() {\r

      \  if (isdef(DA.tags)) get_values(DA.tags).map(x => x.remove());\r

      \  let tpop = mPopup('', document.body)\r

      \  DA.tags = {};\r

      \  for (const id in Items) {\r

      \    let el = mBy(id); \r

      \    if (nundef(el)) {\r

      \      let item = Items[id];\r

      \      el = iDiv(item);\r

      \      if (nundef(el)) continue;\r

      \      if (nundef(item.live)) { item.live = { div: el }; el.id = id;
      delete Items[id].div; }\r

      \    }\r

      \    console.log('id', id)\r

      \    let r = getRect(el);\r

      \    let dtag = mDiv(tpop, { fz: 12, bg: 'black', fg: 'white',
      hpadding: 4, rounding: 12 }, null, id)\r

      \    mPos(dtag, r.l, r.t);\r

      \    DA.tags[id] = dtag;\r

      \  }\r

      }\r\n"
    sig: function show_tagged(){}
    region: Items (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  iCollect:
    name: iCollect
    code: "function iCollect(tags = ['div']) {\r

      \  for (const t of tags) {\r

      \    let divs =
      Array.from(document.getElementsByTagName(t)).filter(d =>
      !isEmptyOrWhiteSpace(d.id) && !isEmpty(d.innerHTML));\r

      \    for (const d of divs) {\r

      \      iAdd({}, { div: d });\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function iCollect(tags = ['div']){}
    region: Items (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  show_div_ids:
    name: show_div_ids
    code: "function show_div_ids() {\r

      \  let divs =
      Array.from(document.getElementsByTagName('div')).filter(d =>
      !isEmptyOrWhiteSpace(d.id) && !isEmpty(d.innerHTML));\r

      \  for (const d of divs) {\r

      \    let d1 = mDiv(d, { fz: 12, bg: 'black', fg: 'white', hpadding:
      4, rounding: 12 }, null, d.id);\r

      \    mPlace(d1, 'tr', 2, 2);\r

      \  }\r

      }\r\n"
    sig: function show_div_ids(){}
    region: Items (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  clear_all:
    name: clear_all
    code: "function clear_all() { for (const id of ['dFiddle', 'dMenu', 'dSearch',
      'dSearchResult', 'dTable']) iClear(id); console.log('ids',
      get_keys(Items)) }\r\n"
    sig: function clear_all(){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  show_standard_title:
    name: show_standard_title
    code: "function show_standard_title(dParent, title) { mText(title, dParent, {
      margin: 20, fz: 24 }); }\r\n"
    sig: function show_standard_title(dParent, title){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  show_apps:
    name: show_apps
    code: "function show_apps(ms = 500) {\r

      \  let dParent = mBy('dApps');\r

      \  if (!isEmpty(arrChildren(dParent))) { show(dParent); return; }\r

      \  show_standard_title(dParent, 'Apps');\r

      \  let d = mDiv(dParent, { fg: 'white' }, 'apps_menu');\r

      \  mCenterFlex(d);\r

      \  let applist = 'action book fitbit howto magic meditate
      therapy';\r

      \  for (const id of toWords(applist)) { \r

      \    let app = DB.apps[id]; app.name = id; let f =
      get_app_presenter(app.id); f(d, app);\r

      \  }\r

      }\r\n"
    sig: function show_apps(ms = 500){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  show_fiddle:
    name: show_fiddle
    code: "function show_fiddle() { fiddleInit(); }\r\n"
    sig: function show_fiddle(){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  showGlobals:
    name: showGlobals
    code: "function showGlobals() {\r

      \  getGlobals();\r

      \  console.log('Globals', Globals)\r

      \  dTable = mBy('dTable');\r

      \  let d = mDiv(dTable);\r

      \  for (const k in Globals) {\r

      \    let d1 = mDiv(d, {}, null, k);\r

      \    let d2 = mDiv(d, {}, null, Globals[k].map(x =>
      x.key).join(',')); mFlexWrap(d2);\r

      \  }\r

      }\r\n"
    sig: function showGlobals(){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  show_game_options_menu:
    name: show_game_options_menu
    code: "function show_game_options_menu(gamename) {\r

      \  let dMenu = mBy('dMenu'); iClear(dMenu);\r

      \  show_standard_title(dMenu, 'Game Options');\r

      \  let d = mDiv(dMenu, { align: 'center' }, 'fMenuInput');\r

      \  let dOptions = mDiv(d, {}, 'dMenuInput');
      mCenterFlex(dOptions);\r

      \  let dButtons = mDiv(d, { display: 'flex', justify: 'center', w:
      '100%' }, 'dMenuButtons');\r

      \  DA.playerlist = null;\r

      \  show_game_options(dOptions, gamename);\r

      \  let astart = maButton('Start', start_game, dButtons);\r

      \  let acancel = maButton('Cancel', cancel_game, dButtons);\r

      }\r\n"
    sig: function show_game_options_menu(gamename){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  toggle_apps:
    name: toggle_apps
    code: "function toggle_apps() { if (isEmpty(mBy('dApps').innerHTML))
      show_apps(); else iClear('dApps'); }\r\n"
    sig: function toggle_apps(){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  toggle_fiddle:
    name: toggle_fiddle
    code: "function toggle_fiddle() { if (nundef(dFiddle)) show_fiddle(); else {
      fiddleSave(); for(const d of
      [dConsole,dFiddle,dSearch,dSidebar]){iClear(d);} dFiddle = null; } }\r\n"
    sig: function toggle_fiddle(){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  toggle_games:
    name: toggle_games
    code: "function toggle_games() { if (isEmpty(mBy('dGames').innerHTML))
      show_games(); else iClear('dGames'); }\r\n"
    sig: function toggle_games(){}
    region: page (done.js)
    filename: done.js
    type: func
    fname: done.js
    path: C:\D\a04\game\done.js
    datetime: 2023-01-28-07-41
    timestamp: 1674920468987.6687
    size: 15571
  test9_dbSave:
    name: test9_dbSave
    code: "function test9_dbSave() { DB.appdata.simple = [1, 2, 3, 4, 5]; } \r\n"
    sig: function test9_dbSave(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test8_simple_intellisense:
    name: test8_simple_intellisense
    code: "function test8_simple_intellisense() {\r

      \  dTable = mBy('dTable');\r

      \  fiddleInit();\r

      }\r\n"
    sig: function test8_simple_intellisense(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test7_card:
    name: test7_card
    code: "function test7_card() {\r

      \  dTable = mBy('dTable'); mCenterFlex(dTable);\r

      \  let x = ui_type_hand(['3Hn', '4Hn', '4Hl'], dTable);
      console.log('hand', x);\r

      \  iReg(x);\r

      \  let c = ari_get_card('QDn', 500); mAppend(dTable, iDiv(c));\r

      \  animatedTitle();\r

      }\r\n"
    sig: function test7_card(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test5_prelim:
    name: test5_prelim
    code: "function test5_prelim() { }\r\n"
    sig: function test5_prelim(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test4_intelli:
    name: test4_intelli
    code: "function test4_intelli() {\r

      \  dTable = dTable = mSection({ position: 'relative' }, 'dTable');
      mCenterFlex(dTable);\r

      \  let ta = mTextarea(10, 90, dTable, { padding: 20, position:
      'relative' });\r

      \  setTimeout(() => ta.autofocus = true, 10);\r

      \  let buttons = mDiv(dTable, { w: '100%', align: 'right', maright:
      4 }); \r

      \  let st = { fz: 14 };\r

      \  maButton('RUN (ctl+Enter)', au_run, buttons, st);\r

      \  maButton('LINE (ctl+shft+Enter)', au_run_line, buttons, st);\r

      \  let tacon = mTextarea(3, 90, dTable, { matop: 4, padding: 20,
      position: 'relative' });\r

      \  ta.focus();\r

      \  AU.popup = mDiv(dTable, { position: 'absolute', wmin: 100, hmin:
      100, hmax: 600, overy: 'auto', bg: 'blue', fg: 'white' });\r

      \  hide(AU.popup)\r

      \  AU.fnames = get_keys(CODE.funcs); AU.fnames.sort();\r

      \  AU.list = [];\r

      \  AU.prefix = '';\r

      \  AU.selected = null;\r

      \  AU.n = -1;\r

      \  AU.ta = ta;\r

      \  AU.tacon = tacon;\r

      \  ta.onkeydown = ev => {\r

      \    let k = ev.key;\r

      \    if (k == 'Enter' && AU.selected) ev.preventDefault();\r

      \  }\r

      \  ta.onkeyup = ev => {\r

      \    let k = ev.key;\r

      \    let fnames = AU.fnames;\r

      \    let popup = AU.popup;\r

      \    if (k == 'Enter' && ev.ctrlKey) {\r

      \      au_reset();\r

      \      let code = ev.shiftKey ? getTextAreaCurrentLine(AU.ta) :
      AU.ta.value;\r

      \      runcode(code);\r

      \    } else if (k == ' ' || k == ')') {\r

      \      AU.previous = AU.prefix;\r

      \      if (isdef(AU.fnames[AU.previous])) {\r

      \        let w = AU.selected = AU.previous;\r

      \        AU.uebernommen = CODE.funcs[w];\r

      \        popup.innerHTML = AU.previous + '(' + AU.uebernommen.params
      + ')';\r

      \      } else {\r

      \        au_reset();\r

      \      }\r

      \    } else if (k == 'Enter' && AU.selected) {\r

      \      let w = AU.selected.innerHTML;\r

      \      let s = stringAfter(w, AU.prefix);\r

      \      AU.ta.value = AU.ta.value + s; \r

      \      AU.uebernommen = CODE.funcs[w];\r

      \      popup.innerHTML = w + '(' + AU.uebernommen.params + ')';\r

      \    } else if (k == 'Backspace' && AU.prefix.length > 1) {\r

      \      AU.prefix = AU.prefix.slice(0, -1);\r

      \      au_show_list();\r

      \    } else if (k == 'ArrowDown' && !isEmpty(AU.list)) {\r

      \      if (AU.n < AU.list.length - 1) AU.n++;\r

      \      let ch = popup.children;\r

      \      if (AU.selected) mStyle(AU.selected, { bg: 'blue' });\r

      \      AU.selected = ch[AU.n];\r

      \      mStyle(AU.selected, { bg: 'green' });\r

      \    } else if (k == 'ArrowUp' && !isEmpty(AU.list)) {\r

      \      if (AU.n > 0) AU.n--;\r

      \      let ch = popup.children;\r

      \      if (AU.selected) mStyle(AU.selected, { bg: 'blue' });\r

      \      AU.selected = ch[AU.n];\r

      \      mStyle(AU.selected, { bg: 'green' });\r

      \    } else if (isLetter(k) || k == '_') {\r

      \      if (isEmpty(AU.prefix)) AU.selectionEnd =
      AU.ta.selectionEnd;\r

      \      AU.prefix += k;\r

      \      au_show_list();\r

      \    } else if (k != 'Shift') {\r

      \      au_reset();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: function test4_intelli(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test3_p5_perlin_2d:
    name: test3_p5_perlin_2d
    code: "function test3_p5_perlin_2d() {\r

      \  dTable = mBy('dTable'); mCenterFlex(dTable);\r

      \  let o = mCanvas(dTable, { w: 600, h: 400 }, {}, startloop,
      pauseloop, 'cc');\r

      \  iAdd(o, {}, { draw: draw_perlin_xy }); \r

      \  o.play();\r

      }\r\n"
    sig: function test3_p5_perlin_2d(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test2_p5_perlin:
    name: test2_p5_perlin
    code: "function test2_p5_perlin() {\r

      \  dTable = mBy('dTable'); mCenterFlex(dTable);\r

      \  let o = mCanvas(dTable, { w: 600, h: 400 }, {}, startloop,
      pauseloop, 'cc');\r

      \  iAdd(o, {}, { draw: draw_perlin_x }); \r

      \  o.play();\r

      }\r\n"
    sig: function test2_p5_perlin(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test3:
    name: test3
    code: "function test3() { test1(); }\r\n"
    sig: function test3(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test2:
    name: test2
    code: "function test2() {\r\n}\r\n"
    sig: function test2(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test1_p5_init:
    name: test1_p5_init
    code: "function test1_p5_init() {\r

      \  dTable = mBy('dTable'); mCenterFlex(dTable);\r

      \  let o = mCanvas(dTable, { w: 600, h: 400 }, {}, startloop,
      pauseloop, 'cc');\r

      \  iAdd(o, {}, { draw: draw_random_walk }); \r

      }\r\n"
    sig: function test1_p5_init(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  test0_random:
    name: test0_random
    code: "function test0_random() {\r

      \  let n = rNumber(12, 20); \r

      \  console.log('n', n)\r

      }\r\n"
    sig: function test0_random(){}
    region: funcs (test.js)
    filename: test.js
    type: func
    fname: test.js
    path: C:\D\a04\game\test.js
    datetime: 2023-01-28-08-01
    timestamp: 1674921695897.102
    size: 5655
  load_codebase:
    name: load_codebase
    code: "async function load_codebase(paths, preserveRegionNames = false) {\r

      \  if (nundef(paths)) {\r

      \    paths = ['basemin', 'board', 'cards', 'gamehelpers', 'select'];
      \r

      \    paths = paths.map(f => `../basejs/${f}.js`);\r

      \  }\r

      \  let superdi = {};\r

      \  for (const f of paths) {\r

      \    console.log('...processing file', f);\r

      \    let current_file = stringBefore(stringAfterLast(f, '/'),
      '.');\r

      \    let base = await route_path_text(f);\r

      \    let res = parseCodefile(base, current_file,
      preserveRegionNames, {}, superdi);\r

      \  }\r

      \  return superdi;\r

      }\r\n"
    sig: async function load_codebase(paths, preserveRegionNames = false){}
    region: funcs (bau2.js)
    filename: bau2.js
    type: func
    fname: bau2.js
    path: C:\D\a04\game\bau2.js
    datetime: 2023-01-28-09-05
    timestamp: 1674925534503.7144
    size: 10167
  downloadCodebase:
    name: downloadCodebase
    code: "function downloadCodebase(superdi) {\r

      \  let text = '';\r

      \  for (const type of ['var', 'const', 'cla', 'func']) {\r

      \    let keys = get_keys(superdi[type]);\r

      \    if (type != 'const') sortCaseInsensitive(keys);\r

      \    for (const k of keys) {\r

      \      let code = superdi[type][k].code;\r

      \      if (!isEmptyOrWhiteSpace(code)) {\r

      \        text += code;\r

      \        if (code.trim() == '}') text += '\\r\\n';\r

      \      }\r

      \    }\r

      \  }\r

      \  downloadAsText(text, 'hallo', 'js');\r

      \  downloadAsYaml(superdi, 'hallo');\r

      }\r\n"
    sig: function downloadCodebase(superdi){}
    region: funcs (bau2.js)
    filename: bau2.js
    type: func
    fname: bau2.js
    path: C:\D\a04\game\bau2.js
    datetime: 2023-01-28-09-05
    timestamp: 1674925534503.7144
    size: 10167
  getDirList:
    name: getDirList
    code: "function getDirList() {\r

      \  let dirlist = [\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\02harris\\\\_global',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\02harris\\\\manyCars',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\02harris\\\\wipgame',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\02harris\\\\ch9',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\03seidlin\\\\ch12\\\\scripts',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\06verou',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\07joeames\\\\js',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\08cardGame1\\\\script',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\16kaefer\\\\js',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\19lifeGame\\\\version1',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\20testPongApp',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\23Animations_CSS_JS\\\\_my\\\\clock\
      \\\\js',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\23Animations_CSS_JS\\\\_my\\\\lear\
      ning\\\\final\\\\js',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\24memory',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\25nnImage\\\\scripts',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\26udaCanvas',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\28cards\\\\test02',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\31p0',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\32t0\\\\grid',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\33cardGameStarter',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\40cardSolitaire\\\\cg01',\r

      \    'C:\\\\DATA\\\\dev\\\\js\\\\42deckOfCards\\\\test02',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CBII\\\\zLastVid\\\\work2',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CBII\\\\zLastVid\\\\work',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CBII\\\\zLastVid\\\\wCOMMON\\\\js',\
      \r

      \    'C:\\\\DATA\\\\dev_2020\\\\CBII\\\\zLastVid\\\\wCOMMON\\\\js\\\
      \\rsgTypes',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CBII\\\\zLastVid\\\\vid2\\\\js',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CBII\\\\zLastVid\\\\vid2\\\\rsg',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CBII\\\\zLastVid\\\\vid0\\\\static\\\
      \\front\\\\js',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CBII\\\\zLastVid\\\\vid0\\\\static\\\
      \\rsg\\\\js',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CODEBASE\\\\tnt_code\\\\_front\\\\a\
      simple\\\\js',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CODEBASE\\\\tnt_code\\\\_front\\\\f\
      ront_console\\\\js',\r

      \    'C:\\\\DATA\\\\dev_2020\\\\CODEBASE\\\\okt21\\\\static\\\\js',\
      \r

      \    'C:\\\\DATA\\\\dev_2020\\\\CODEBASE\\\\work\\\\nov08\\\\js',\r

      \    'C:\\\\Users\\\\tawzz\\\\OneDrive\\\\dev\\\\CODEBASE\\\\rsg93\\\
      \\static\\\\js',\r

      \    'C:\\\\Users\\\\tawzz\\\\OneDrive\\\\dev\\\\CODEBASE\\\\okt21\\\
      \\static\\\\js',\r

      \    'C:\\\\Users\\\\tawzz\\\\OneDrive\\\\dev\\\\CBII\\\\CODE_SAFE\\\
      \\CODE\\\\js',\r

      \    'C:\\\\Users\\\\tawzz\\\\OneDrive\\\\dev\\\\CODEBASE\\\\gsm2_t\
      ictactoe\\\\js',\r

      \    'C:\\\\Users\\\\tawzz\\\\OneDrive\\\\dev\\\\CODEBASE\\\\tnt_co\
      de\\\\_front\\\\asimple\\\\js',\r

      \    'C:\\\\Users\\\\tawzz\\\\OneDrive\\\\dev\\\\CODEBASE\\\\tntCode\
      \\\\js',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\testing\\\\BASE\\\\features',\
      \r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\testing\\\\BASE',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\test01\\\\public\\\\BASE',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\test01\\\\public\\\\t99',\r

      \    'C:\\\\D\\\\a00\\\\FLASK\\\\step4\\\\base\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\FLASK\\\\step4\\\\base\\\\features',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\vid_old\\\\static\\\\rsg\\\\\
      js',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\vid_old\\\\static\\\\front\\\
      \\js',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\vid\\\\frontend\\\\static\\\
      \\rsg\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\vid\\\\frontend\\\\static\\\
      \\front\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\C',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\DIE',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\DOC',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\RSG\\\\js\\\\do\
      ne',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\RSG\\\\js\\\\me\
      asureArrange',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\RSG\\\\js\\\\R',\
      \r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\RSG\\\\js\\\\te\
      sting',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\RSG\\\\js\\\\ty\
      pes',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\RSG\\\\js\\\\ui\
      Creation',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\RSG\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\SPGAME',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\gsmTester\\\\SPNEW',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\cardTests\\\\_test\\\\ex03',\
      \r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\cardTests\\\\simple01',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\cardTests\\\\ex06_fromScratc\
      h',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\eximple\\\\static',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\eximple\\\\static\\\\games',\
      \r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\dycon_ui_test\\\\base\\\\js',\
      \r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\course-player-socketio\\\\pu\
      blic\\\\t99',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\asstest\\\\CODE',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\asstest\\\\SIMPLE',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\animaludos\\\\public\\\\work\
      ',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\animaludos\\\\public\\\\work\
      \\\\done',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\also\\\\MZZ',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\also\\\\BASE',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\also\\\\BASE\\\\features',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\animaludos\\\\public',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\animaludos\\\\public\\\\BASE\
      ',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\animaludos\\\\public\\\\BASE\
      \\\\features',\r

      \    'C:\\\\D\\\\a00\\\\git_archive\\\\abra',\r

      \    'C:\\\\D\\\\a00\\\\hive\\\\hive',\r

      \    'C:\\\\D\\\\a00\\\\TESTING\\\\base\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\TESTING\\\\cosensus',\r

      \    'C:\\\\D\\\\a00\\\\TESTING\\\\easy',\r

      \    'C:\\\\D\\\\a00\\\\TESTING\\\\feedback',\r

      \    'C:\\\\D\\\\a00\\\\TESTING\\\\games',\r

      \    'C:\\\\D\\\\a00\\\\TESTING\\\\index_palette',\r

      \    'C:\\\\D\\\\a00\\\\videmo\\\\frontend\\\\static\\\\front\\\\js\
      ',\r

      \    'C:\\\\D\\\\a00\\\\videmo\\\\frontend\\\\static\\\\rsg\\\\js',\
      \r

      \    'C:\\\\D\\\\a00\\\\videmo\\\\games\\\\catan\\\\_rsg',\r

      \    'C:\\\\D\\\\a00\\\\videmo\\\\games\\\\ttt\\\\_rsg',\r

      \    'C:\\\\D\\\\a00\\\\vid\\\\vid0\\\\static\\\\front\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\vid\\\\vid0\\\\static\\\\rsg\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\vid\\\\work2',\r

      \    'C:\\\\D\\\\a00\\\\vid\\\\wCOMMON\\\\js\\\\rsgTypes',\r

      \    'C:\\\\D\\\\a00\\\\vid\\\\wCOMMON\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\vid\\\\vid2\\\\js',\r

      \    'C:\\\\D\\\\a00\\\\vid\\\\vid2\\\\rsg',\r

      \    'C:\\\\D\\\\a01\\\\chatApp\\\\public\\\\BASE',\r

      \    'C:\\\\D\\\\a01\\\\chatApp\\\\public\\\\BASE\\\\features',\r

      \    'C:\\\\D\\\\a01\\\\chatApp\\\\public\\\\work',\r

      \    'C:\\\\D\\\\a01\\\\chatApp\\\\public\\\\work\\\\done',\r

      \    'C:\\\\D\\\\a01\\\\chatApp\\\\public',\r

      \    'C:\\\\D\\\\a01\\\\chess',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\perlen\\\\work\\\
      \\done',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\perlen\\\\work',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\perlen',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\bella\\\\js',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\bg\\\\js',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\bg4\\\\js',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\canyonglen',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\cards',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\caristo',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\chatas\\\\js',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\chatas2',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\chmultOrig\\\\js',\
      \r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\feedback',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\frontend',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\happy',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\hive',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\klavier',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\phpchat\\\\public\
      \\\\socket.io-client\\\\lib',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\simply\\\\js',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\_other\\\\v0_chatas',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\base\\\\js',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\base\\\\code',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\belinda\\\\js',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\belinda\\\\features',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\cosensus',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\easy',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\iconViewer\\\\js',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\rechnung',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\simple',\r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\videos\\\\js',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\caba',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\canvas\\\\lib',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\canvas\\\\noc',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\canvas\\\\smooth',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\cita',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\coding\\\\public\\\\ja\
      vascripts',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\favicontester',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\fileupload\\\\public',\
      \r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\fractals\\\\nature',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\fractals\\\\nn\\\\031_\
      FlappyBird\\\\P5',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\fractals\\\\plant',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\fractals\\\\tree',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\leaflet\\\\leaf',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\leaflet\\\\leaf90',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\leaflet\\\\leaf91',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\leaflet\\\\leafp',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\leaflet\\\\leaf94',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\leaflet\\\\leafstreetv\
      iew',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\leaflet\\\\mapgame',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\leaflet\\\\routing',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\mybrary\\\\public\\\\j\
      avascripts',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\openlayers\\\\map',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\all\\\\openlayers\\\\mapTEXT',\
      \r

      \    'C:\\\\xampp\\\\htdocs\\\\aroot\\\\games',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\basejs',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\cai',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\noc',\r

      \    'C:\\\\D\\\\a03\\\\nodemaster\\\\socketstarter',\r

      \    'C:\\\\D\\\\a04\\\\basejs',\r

      \    'C:\\\\D\\\\a04\\\\game',\r

      \  ];\r

      }\r\n"
    sig: function getDirList(){}
    region: dirlist (bau2.js)
    filename: bau2.js
    type: func
    fname: bau2.js
    path: C:\D\a04\game\bau2.js
    datetime: 2023-01-28-09-05
    timestamp: 1674925534503.7144
    size: 10167
  createPeeps:
    name: createPeeps
    code: "function createPeeps() {\r

      \  const {\r

      \    rows,\r

      \    cols\r

      \  } = config\r

      \  const {\r

      \    naturalWidth: width,\r

      \    naturalHeight: height\r

      \  } = img\r

      \  const total = rows * cols\r

      \  const rectWidth = width / rows\r

      \  const rectHeight = height / cols\r

      \  for (let i = 0; i < total; i++) {\r

      \    allPeeps.push(new Peep({\r

      \      image: img,\r

      \      rect: [\r

      \        (i % rows) * rectWidth,\r

      \        (i / rows | 0) * rectHeight,\r

      \        rectWidth,\r

      \        rectHeight,\r

      \      ]\r

      \    }))\r

      \  }\r

      }\r\n"
    sig: function createPeeps(){}
    region: const (crowd.js)
    filename: crowd.js
    type: func
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  resize:
    name: resize
    code: "function resize() {\r

      \  stage.width = canvas.clientWidth\r

      \  stage.height = canvas.clientHeight\r

      \  canvas.width = stage.width * devicePixelRatio\r

      \  canvas.height = stage.height * devicePixelRatio\r

      \  crowd.forEach((peep) => {\r

      \    peep.walk.kill()\r

      \  })\r

      \  crowd.length = 0\r

      \  availablePeeps.length = 0\r

      \  availablePeeps.push(...allPeeps)\r

      \  initCrowd()\r

      }\r\n"
    sig: function resize(){}
    region: const (crowd.js)
    filename: crowd.js
    type: func
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  initCrowd:
    name: initCrowd
    code: "function initCrowd() {\r

      \  while (availablePeeps.length) {\r

      \    addPeepToCrowd().walk.progress(Math.random())\r

      \  }\r

      }\r\n"
    sig: function initCrowd(){}
    region: const (crowd.js)
    filename: crowd.js
    type: func
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  addPeepToCrowd:
    name: addPeepToCrowd
    code: "function addPeepToCrowd() {\r

      \  const peep = removeRandomFromArray(availablePeeps)\r

      \  const walk = getRandomFromArray(walks)({\r

      \    peep,\r

      \    props: resetPeep({\r

      \      peep,\r

      \      stage,\r

      \    })\r

      \  }).eventCallback('onComplete', () => {\r

      \    removePeepFromCrowd(peep)\r

      \    addPeepToCrowd()\r

      \  })\r

      \  peep.walk = walk\r

      \  crowd.push(peep)\r

      \  crowd.sort((a, b) => a.anchorY - b.anchorY)\r

      \  return peep\r

      }\r\n"
    sig: function addPeepToCrowd(){}
    region: const (crowd.js)
    filename: crowd.js
    type: func
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  removePeepFromCrowd:
    name: removePeepFromCrowd
    code: "function removePeepFromCrowd(peep) {\r

      \  removeItemFromArray(crowd, peep)\r

      \  availablePeeps.push(peep)\r

      }\r\n"
    sig: function removePeepFromCrowd(peep){}
    region: const (crowd.js)
    filename: crowd.js
    type: func
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  render:
    name: render
    code: "function render() {\r

      \  canvas.width = canvas.width\r

      \  cx.save()\r

      \  cx.scale(devicePixelRatio, devicePixelRatio)\r

      \  crowd.forEach((peep) => {\r

      \    peep.render(cx)\r

      \  })\r

      \  cx.restore()\r

      }\r\n"
    sig: function render(){}
    region: const (crowd.js)
    filename: crowd.js
    type: func
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  sortCaseInsensitive:
    name: sortCaseInsensitive
    code: "function sortCaseInsensitive(list) {\r

      \  list.sort((a, b) => { return
      a.toLowerCase().localeCompare(b.toLowerCase()); });\r

      \  return list;\r

      }\r\n"
    sig: function sortCaseInsensitive(list){}
    region: arr (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  addModuleExports:
    name: addModuleExports
    code: "function addModuleExports(list){\r

      \  let txt=\r

      \    `if (this && typeof module == \"object\" && module.exports &&
      this === module.exports) {\\r\\n`\r

      \    + `  module.exports = {\\r\\n`;\r

      \  for(const s of list){\r

      \    txt+=`    ${s},\\r\\n`\r

      \  };\r

      \  txt+='  }\\r\\n}';\r

      \  return txt;\r

      }\r\n"
    sig: function addModuleExports(list){}
    region: making (_bau1.js)
    filename: _bau1.js
    type: func
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  show_code:
    name: show_code
    code: "function show_code(res) {\r

      \  dTable = mBy('dTable');\r

      \  let ta = mTextarea(null, null, dTable, { w: '90vw', h: '90vh'
      });\r

      \  let text = res.text;\r

      \  ta.value = text;\r

      \  downloadAsText(text, 'hallo', 'js');\r

      \  console.log('res', res)\r

      }\r\n"
    sig: function show_code(res){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a04\game\start.js
    datetime: 2023-01-28-11-32
    timestamp: 1674934322336.7986
    size: 4061
  saveEnv:
    name: saveEnv
    code: "function saveEnv() {\r

      \  fiddleSave(); \r

      }\r\n"
    sig: function saveEnv(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a04\game\start.js
    datetime: 2023-01-28-11-32
    timestamp: 1674934322336.7986
    size: 4061
  show_sidebar:
    name: show_sidebar
    code: "function show_sidebar(list, handler) {\r

      \  dSidebar = mBy('dSidebar'); mStyle(dSidebar, { w: 300, h:
      window.innerHeight - 68, overy: 'auto' });\r

      \  for (const k of list) {\r

      \    let d = mDiv(dSidebar, { cursor: 'pointer', wmin: 100 }, null,
      k, 'hop1')\r

      \    if (isdef(handler)) d.onclick = handler;\r

      \  }\r

      }\r\n"
    sig: function show_sidebar(list, handler){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a04\game\start.js
    datetime: 2023-01-28-11-32
    timestamp: 1674934322336.7986
    size: 4061
  _start_old:
    name: _start_old
    code: "async function _start_old() {\r

      \  //#region prelim timit set_run_state onpagedeactivated load:syms
      db codebase\r

      \  let timit = new TimeIt('* using timit *');\r

      \  set_run_state_vps(); \r

      \  onpagedeactivated(save_all); \r

      \  await load_syms(); \r

      \  await load_db(); \r

      \  await load_codebase(); \r

      \  timit.show();\r

      \  //#endregion\r

      \  //#region db tests\r

      \  function test_random_update() {\r

      \    let n = rNumber();\r

      \    let i = rNumber(0, DB.appdata.howto.length - 1);\r

      \    let rec = { kw: 'k' + n, c: 'hallo' + (n + i) };\r

      \    db_update('howto', i, rec);\r

      \  }\r

      \  //#endregion\r

      \  //#region other tests\r

      \  //#endregion\r

      }\r\n"
    sig: async function _start_old(){}
    region: funcs (start.js)
    filename: start.js
    type: func
    fname: start.js
    path: C:\D\a04\game\start.js
    datetime: 2023-01-28-11-32
    timestamp: 1674934322336.7986
    size: 4061
const:
  MarkerText:
    name: MarkerText
    code: "const MarkerText = ['✔','✘']; //'&#10004;&#xFE0E;', '✘']; //,'&#10003;',
      '✘', '✓', '✔', '✔️', '❌'];\r\n"
    sig: const MarkerText
    region: Markers (markers.js)
    filename: markers.js
    type: const
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  MarkerId:
    name: MarkerId
    code: "const MarkerId = { SUCCESS: 0, FAIL: 1 };\r\n"
    sig: const MarkerId
    region: Markers (markers.js)
    filename: markers.js
    type: const
    fname: markers.js
    path: C:\xampp\htdocs\aroot\base\js\markers.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691926.855
    size: 5887
  GENERATE:
    name: GENERATE
    code: "const GENERATE_EMPTY_MESSAGES = true;\r\n"
    sig: const GENERATE
    region: const (lobby.js)
    filename: lobby.js
    type: const
    fname: lobby.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\lobby.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590423.3274
    size: 1645
  messageTypes:
    name: messageTypes
    code: "const messageTypes = { LEFT: 'left', RIGHT: 'right', LOGIN: 'login'
      };\r\n"
    sig: const messageTypes
    region: prelim (socket.js)
    filename: socket.js
    type: const
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  messages:
    name: messages
    code: "const messages = []; \r\n"
    sig: const messages
    region: prelim (socket.js)
    filename: socket.js
    type: const
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  VerboseSocket:
    name: VerboseSocket
    code: "const VerboseSocket = false;\r\n"
    sig: const VerboseSocket
    region: prelim (socket.js)
    filename: socket.js
    type: const
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  createMessageHTML:
    name: createMessageHTML
    code: "const createMessageHTML = message => {\r

      \  if (isString(message)) {\r

      \    return `\r

      \      <p class=\"secondary-text text-center mb-2\">${message}</p>\r

      \    `;\r

      \  } else if (isString(message)) {\r

      \    return `\r

      \    <div>\r

      \      <p style=\"color:red\"
      class=\"message-content\">${message}</p>\r

      \    </div>\r

      \    `;\r

      \  }\r

      \  return `\r

      \  <div class=\"message ${message.type === messageTypes.LEFT ?
      'message-left' : 'message-right'\r

      \    }\">\r

      \    <div class=\"message-details flex\">\r

      \      <p class=\"flex-grow-1
      message-author\">${message.author}</p>\r

      \      <p class=\"message-date\">${message.date}</p>\r

      \    </div>\r

      \    <p class=\"message-content\">${message.content}</p>\r

      \  </div>\r

      \  `;\r

      };\r\n"
    sig: const createMessageHTML
    region: old (socket.js)
    filename: socket.js
    type: const
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  displayMessages:
    name: displayMessages
    code: "const displayMessages = () => {\r

      \  const messagesHTML = messages\r

      \    .map(message => createMessageHTML(message))\r

      \    .join('');\r

      \  messagesList.innerHTML = messagesHTML;\r

      };\r\n"
    sig: const displayMessages
    region: old (socket.js)
    filename: socket.js
    type: const
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  BLUE:
    name: BLUE
    code: "const BLUE = '#4363d8';\r\n"
    sig: const BLUE
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  BLUEGREEN:
    name: BLUEGREEN
    code: "const BLUEGREEN = '#004054';\r\n"
    sig: const BLUEGREEN
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  BROWN:
    name: BROWN
    code: "const BROWN = '#96613d';\r\n"
    sig: const BROWN
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  GREEN:
    name: GREEN
    code: "const GREEN = '#3cb44b';\r\n"
    sig: const GREEN
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  FIREBRICK:
    name: FIREBRICK
    code: "const FIREBRICK = '#800000';\r\n"
    sig: const FIREBRICK
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  LIGHTGREEN:
    name: LIGHTGREEN
    code: "const LIGHTGREEN = '#afff45'; //'#bfef45';\r\n"
    sig: const LIGHTGREEN
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  LIGHTBLUE:
    name: LIGHTBLUE
    code: "const LIGHTBLUE = '#42d4f4';\r\n"
    sig: const LIGHTBLUE
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  OLIVE:
    name: OLIVE
    code: "const OLIVE = '#808000';\r\n"
    sig: const OLIVE
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ORANGE:
    name: ORANGE
    code: "const ORANGE = '#f58231';\r\n"
    sig: const ORANGE
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  PURPLE:
    name: PURPLE
    code: "const PURPLE = '#911eb4';\r\n"
    sig: const PURPLE
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  RED:
    name: RED
    code: "const RED = '#e6194B';\r\n"
    sig: const RED
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  TEAL:
    name: TEAL
    code: "const TEAL = '#469990';\r\n"
    sig: const TEAL
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  YELLOW:
    name: YELLOW
    code: "const YELLOW = '#ffe119';\r\n"
    sig: const YELLOW
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  YELLOW2:
    name: YELLOW2
    code: "const YELLOW2 = '#fff620';\r\n"
    sig: const YELLOW2
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  YELLOW3:
    name: YELLOW3
    code: "const YELLOW3 = '#ffed01';\r\n"
    sig: const YELLOW3
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  wamber:
    name: wamber
    code: "const wamber = '#ffc107';\r\n"
    sig: const wamber
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  waqua:
    name: waqua
    code: "const waqua = '#00ffff';\r\n"
    sig: const waqua
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wblack:
    name: wblack
    code: "const wblack = '#000000';\r\n"
    sig: const wblack
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wblue:
    name: wblue
    code: "const wblue = '#2196f3';\r\n"
    sig: const wblue
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wbluegrey:
    name: wbluegrey
    code: "const wbluegrey = '#607d8b';\r\n"
    sig: const wbluegrey
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wbluegray:
    name: wbluegray
    code: "const wbluegray = '#607d8b';\r\n"
    sig: const wbluegray
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wbrown:
    name: wbrown
    code: "const wbrown = '#795548';\r\n"
    sig: const wbrown
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wcyan:
    name: wcyan
    code: "const wcyan = '#00bcd4';\r\n"
    sig: const wcyan
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wdarkgrey:
    name: wdarkgrey
    code: "const wdarkgrey = '#616161';\r\n"
    sig: const wdarkgrey
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wdeeporange:
    name: wdeeporange
    code: "const wdeeporange = '#ff5722';\r\n"
    sig: const wdeeporange
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wdeeppurple:
    name: wdeeppurple
    code: "const wdeeppurple = '#673ab7';\r\n"
    sig: const wdeeppurple
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wgreen:
    name: wgreen
    code: "const wgreen = '#4caf50';\r\n"
    sig: const wgreen
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wgrey:
    name: wgrey
    code: "const wgrey = '#9e9e9e';\r\n"
    sig: const wgrey
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  windigo:
    name: windigo
    code: "const windigo = '#3f51b5';\r\n"
    sig: const windigo
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wkhaki:
    name: wkhaki
    code: "const wkhaki = '#f0e68c';\r\n"
    sig: const wkhaki
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wlightblue:
    name: wlightblue
    code: "const wlightblue = '#87ceeb';\r\n"
    sig: const wlightblue
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wlightgreen:
    name: wlightgreen
    code: "const wlightgreen = '#8bc34a';\r\n"
    sig: const wlightgreen
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wlight:
    name: wlight
    code: "const wlight = '#f1f1f1';\r\n"
    sig: const wlight
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wlime:
    name: wlime
    code: "const wlime = '#cddc39';\r\n"
    sig: const wlime
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  worange:
    name: worange
    code: "const worange = '#ff9800';\r\n"
    sig: const worange
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wpaleblue:
    name: wpaleblue
    code: "const wpaleblue = '#ddffff';\r\n"
    sig: const wpaleblue
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wpalegreen:
    name: wpalegreen
    code: "const wpalegreen = '#ddffdd';\r\n"
    sig: const wpalegreen
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wpalered:
    name: wpalered
    code: "const wpalered = '#ffdddd';\r\n"
    sig: const wpalered
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wpaleyellow:
    name: wpaleyellow
    code: "const wpaleyellow = '#ffffcc';\r\n"
    sig: const wpaleyellow
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wpink:
    name: wpink
    code: "const wpink = '#e91e63';\r\n"
    sig: const wpink
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wpurple:
    name: wpurple
    code: "const wpurple = '#9c27b0';\r\n"
    sig: const wpurple
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wred:
    name: wred
    code: "const wred = '#f44336';\r\n"
    sig: const wred
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wsand:
    name: wsand
    code: "const wsand = '#fdf5e6';\r\n"
    sig: const wsand
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wteal:
    name: wteal
    code: "const wteal = '#009688';\r\n"
    sig: const wteal
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wwhite:
    name: wwhite
    code: "const wwhite = '#ffffff';\r\n"
    sig: const wwhite
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  wyellow:
    name: wyellow
    code: "const wyellow = '#ffeb3b';\r\n"
    sig: const wyellow
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  ColorList:
    name: ColorList
    code: "const ColorList = ['lightgreen', 'lightblue', 'yellow', 'red', 'green',
      'blue', 'purple', 'violet', 'lightyellow',\r

      \  'teal', 'orange', 'brown', 'olive', 'deepskyblue', 'deeppink',
      'gold', 'black', 'white', 'grey'];\r\n"
    sig: const ColorList
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  ColorDict:
    name: ColorDict
    code: "const ColorDict = {\r

      \  black: { c: 'black', E: 'black', D: 'schwarz' },\r

      \  blue: { c: 'blue', E: 'blue', D: 'blau' },\r

      \  BLUE: { c: '#4363d8', E: 'blue', D: 'blau' },\r

      \  BLUEGREEN: { c: BLUEGREEN, E: 'bluegreen', D: 'blaugrün' },\r

      \  blue1: { c: BLUE, E: 'blue', D: 'blau' },\r

      \  BROWN: { c: BROWN, E: 'brown', D: 'braun' },\r

      \  deepyellow: { c: YELLOW3, E: 'yellow', D: 'gelb' },\r

      \  FIREBRICK: { c: '#800000', E: 'darkred', D: 'rotbraun' },\r

      \  gold: { c: 'gold', E: 'gold', D: 'golden' },\r

      \  green: { c: 'green', E: 'green', D: 'grün' },\r

      \  GREEN: { c: '#3cb44b', E: 'green', D: 'grün' },\r

      \  green1: { c: GREEN, E: 'green', D: 'grün' },\r

      \  grey: { c: 'grey', E: 'grey', D: 'grau' },\r

      \  lightblue: { c: LIGHTBLUE, E: 'lightblue', D: 'hellblau' },\r

      \  LIGHTBLUE: { c: '#42d4f4', E: 'lightblue', D: 'hellblau' },\r

      \  lightgreen: { c: LIGHTGREEN, E: 'lightgreen', D: 'hellgrün' },\r

      \  LIGHTGREEN: { c: '#afff45', E: 'lightgreen', D: 'hellgrün' },\r

      \  lightyellow: { c: YELLOW2, E: 'lightyellow', D: 'gelb' },\r

      \  olive: { c: OLIVE, E: 'olive', D: 'oliv' },\r

      \  OLIVE: { c: '#808000', E: 'olive', D: 'oliv' },\r

      \  orange: { c: ORANGE, E: 'orange', D: 'orange' },\r

      \  ORANGE: { c: '#f58231', E: 'orange', D: 'orange' },\r

      \  pink: { c: 'deeppink', E: 'pink', D: 'rosa' },\r

      \  purple: { c: PURPLE, E: 'purple', D: 'lila' },\r

      \  PURPLE: { c: '#911eb4', E: 'purple', D: 'lila' },\r

      \  red: { c: 'red', E: 'red', D: 'rot' },\r

      \  RED: { c: '#e6194B', E: 'red', D: 'rot' },\r

      \  red1: { c: RED, E: 'red', D: 'rot' },\r

      \  skyblue: { c: 'deepskyblue', E: 'skyblue', D: 'himmelblau' },\r

      \  teal: { c: TEAL, E: 'teal', D: 'blaugrün' },\r

      \  TEAL: { c: '#469990', E: 'teal', D: 'blaugrün' },\r

      \  violet: { c: 'indigo', E: 'violet', D: 'violett' },\r

      \  white: { c: 'white', E: 'white', D: 'weiss' },\r

      \  yellow: { c: 'yellow', E: 'yellow', D: 'gelb' },\r

      \  yelloworange: { c: '#ffc300', E: 'yellow', D: 'gelb' },\r

      \  YELLOW: { c: '#ffe119', E: 'yellow', D: 'gelb' },\r

      \  YELLOW2: { c: YELLOW2, E: 'yellow', D: 'gelb' },\r

      \  yellow1: { c: YELLOW2, E: 'yellow', D: 'gelb' },\r

      \  YELLOW3: { c: YELLOW3, E: 'yellow', D: 'gelb' },\r

      };\r\n"
    sig: const ColorDict
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  PlayerColors:
    name: PlayerColors
    code: "const PlayerColors = {\r

      \  red: '#D01013',\r

      \  blue: '#003399',\r

      \  green: '#58A813',\r

      \  orange: '#FF6600',\r

      \  yellow: '#FAD302',\r

      \  violet: '#55038C',\r

      \  pink: '#ED527A',\r

      \  beige: '#D99559',\r

      \  sky: '#049DD9',\r

      \  brown: '#A65F46',\r

      \  white: '#FFFFFF',\r

      \  lightblue: '#42d4f4',\r

      \  lightgreen: '#afff45',\r

      };\r\n"
    sig: const PlayerColors
    region: color (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  levelColors:
    name: levelColors
    code: "const levelColors = [LIGHTGREEN, LIGHTBLUE, YELLOW, 'orange', RED,\r

      \  GREEN, BLUE, PURPLE, YELLOW2, 'deepskyblue', 'deeppink', \r

      \  TEAL, ORANGE, 'seagreen', FIREBRICK, OLIVE, '#ffd8b1', '#000075',
      '#a9a9a9', '#ffffff', '#000000', 'gold', 'orangered', 'skyblue', 'pink',
      'palegreen', '#e6194B'];\r\n"
    sig: const levelColors
    region: speechGame (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  DD:
    name: DD
    code: "const DD = {\r

      \  yellow: 'gelb', green: 'grün', blue: 'blau', red: 'rot', pink:
      'rosa', orange: 'orange', black: 'schwarz',\r

      \  white: 'weiss', violet: 'violett', '1st': 'erste', '2nd':
      'zweite', '3rd': 'dritte', '4th': 'vierte', '5th': 'fünfte',\r

      \  add: 'addiere', subtract: 'subtrahiere', multiply:
      'mutipliziere', plus: 'plus', minus: 'minus', times: 'mal',\r

      \  'divided by': 'dividiert durch', excellent: 'sehr gut', very:
      'sehr', good: 'gut',\r

      \  'to the previous number': 'zur vorhergehenden zahl',\r

      \  'from the previous number': 'von der vorhergehenden zahl',\r

      \  'multiply the previous number by': 'multipliziere die
      vorhergehende zahl mit',\r

      \  'divide the previous number by': 'dividiere die vorhergehende
      zahl durch',\r

      \  'the previous number': 'die vorhergehende zahl', is: 'ist', what:
      'was', equals: 'ist gleich', enter: \"tippe\",\r

      \  'to the power of': 'hoch', or: 'oder', less: 'kleiner', greater:
      'grösser', than: 'als', equal: 'gleich', and: 'und',\r

      \  not: 'nicht', click: 'click', press: 'tippe', quite: 'ziemlich',
      'not quite': 'nicht ganz',\r

      \  say: 'sage', write: 'schreibe', complete: 'ergänze', 'unequal':
      'ungleich', except: 'ausser', EXCEPT: 'AUSSER',\r

      \  number: 'Zahl', color: 'farbe', eliminate: 'eliminiere', all:
      'alle', with: 'mit', true: 'wahr', false: 'falsch',\r

      \  build: 'bilde', count: 'zähle', 'the red dots': 'die roten
      Punkte',\r

      };\r\n"
    sig: const DD
    region: speechGame (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  OPS:
    name: OPS
    code: "const OPS = { \r

      \  'first': { cmd: 'add', link: 'to', wr: '+', sp: 'plus', f: (a, b)
      => (a + b), min: 20, max: 100 },\r

      \  'plus': { cmd: 'add', link: 'to', wr: '+', sp: 'plus', f: (a, b)
      => (a + b), min: 3, max: 30 },\r

      \  'minus': { cmd: 'subtract', link: 'from', wr: '-', sp: 'minus',
      f: (a, b) => (a - b), min: 1, max: 10 },\r

      \  'div': { cmd: 'divide', link: 'by', wr: ':', sp: 'divided by', f:
      (a, b) => (a / b), min: 2, max: 10 },\r

      \  'intdiv': { cmd: 'divide', link: 'by', wr: 'div', sp: 'divided
      by', f: (a, b) => (Math.floor(a / b)), min: 1, max: 10 },\r

      \  'mult': { cmd: 'multiply', link: 'by', wr: 'x', sp: 'times', f:
      (a, b) => (a * b), min: 2, max: 10 },\r

      \  'pow': { cmd: 'build', link: 'to the power of', wr: '^', sp: 'to
      the power of', f: (a, b) => (Math.pow(a, b)), min: 0, max: 20 },\r

      \  'mod': { cmd: 'build', link: 'modulo', wr: '%', sp: 'modulo', f:
      (a, b) => (a % b), min: 0, max: 20 },\r

      \  'l': { cmd: 'true or false?', link: 'less than', wr: '<', sp:
      'less than', f: (a, b) => (a < b) },\r

      \  'g': { cmd: 'true or false?', link: 'greater than', wr: '>', sp:
      'greater than', f: (a, b) => (a > b) },\r

      \  'leq': { cmd: 'true or false?', link: 'less or equal', wr: '<=',
      sp: 'less or equal', f: (a, b) => (a <= b) },\r

      \  'geq': { cmd: 'true or false?', link: 'greater or equal', wr:
      '>=', sp: 'greater or equal', f: (a, b) => (a >= b) },\r

      \  'eq': { cmd: 'true or false?', link: 'equal', wr: '=', sp:
      'equal', f: (a, b) => (a == b) },\r

      \  'neq': { cmd: 'true or false?', link: 'unequal', wr: '#', sp:
      'unequal', f: (a, b) => (a != b) },\r

      \  'and': { cmd: 'true or false?', link: 'and', wr: '&&', sp: 'and',
      f: (a, b) => (a && b) },\r

      \  'or': { cmd: 'true or false?', link: 'or', wr: '||', sp: 'or', f:
      (a, b) => (a || b) },\r

      \  'nand': { cmd: 'true or false?', link: 'nand', wr: 'nand', sp:
      'nand', f: (a, b) => (!(a && b)) },\r

      \  'nor': { cmd: 'true or false?', link: 'nor', wr: 'nor', sp:
      'nor', f: (a, b) => (!(a || b)) },\r

      \  'xor': { cmd: 'true or false?', link: 'xor', wr: 'xor', sp:
      'xor', f: (a, b) => (a && !b || !a && b) },\r

      }\r\n"
    sig: const OPS
    region: speechGame (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  GirlNames:
    name: GirlNames
    code: "const GirlNames = ['afia', 'ally', 'amanda', 'angela', 'anna', 'annabel',
      'birgit', 'bona', 'carmen', 'cassandra',\r

      \  'charlene', 'erin', 'hanna', 'holly', 'jan', 'karen', 'kelly',
      'lauren', 'malta', 'maria', 'maurita', 'minnow', 'meredith',\r

      \  'milda', 'mimi', 'minna', 'minnow', 'mitra', 'nasi', 'nil',
      'nimble', 'nonna', 'pam', 'phyllis', 'poppa', 'rhi', 'sarah',\r

      \  'sheeba', 'valerie', 'viola', 'wala'];\r\n"
    sig: const GirlNames
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  BoyNames:
    name: BoyNames
    code: "const BoyNames = ['aaron', 'andy', 'bill', 'blade', 'bob', 'buddy',
      'creed', 'dan', 'darryl', 'dagobert', 'david', 'donald', 'dwight',
      'felix',\r

      \  'gilbert', 'gul', 'jim', 'john', 'kevin', 'leo', 'luis', 'mac',
      'max', 'michael', 'mike', 'oscar', 'peter', 'robert', 'ryan',\r

      \  'sebastian', 'stanley', 'stitch', 'toby', 'tom', 'vladimir',
      'wolf', 'wolfgang'];\r\n"
    sig: const BoyNames
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  UnicodeSymbols:
    name: UnicodeSymbols
    code: "const UnicodeSymbols = {\r

      \  menu: '☰',\r

      };\r\n"
    sig: const UnicodeSymbols
    region: speechGame (globals.js)
    filename: globals.js
    type: const
    fname: globals.js
    path: C:\xampp\htdocs\aroot\base\js\globals.js
    datetime: 2022-03-01-06-02
    timestamp: 1646143372929.569
    size: 19866
  SEND:
    name: SEND
    code: "const SEND_MOUSE_MOVE_EVERY = 200;\r\n"
    sig: const SEND
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: const
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  MOUSED:
    name: MOUSED
    code: "const MOUSED = 15;\r\n"
    sig: const MOUSED
    region: var (userAvatar.js)
    filename: userAvatar.js
    type: const
    fname: userAvatar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\userAvatar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691782.8555
    size: 2039
  INNO:
    name: INNO
    code: "const INNO = {\r

      \  color: { blue: '#89aad7', red: '#da7887', green: '#72b964',
      yellow: '#e2e57a', purple: '#9b58ba' },\r

      \  sym: {\r

      \    tower: { key: 'white-tower', fg: 'silver', bg: 'dimgray' },\r

      \    leaf: { key: 'leaf', fg: '#96D6BE', bg: '#275D45' },\r

      \    tree: { key: 'leaf', fg: '#96D6BE', bg: '#275D45' },\r

      \    bulb: { key: 'lightbulb', fg: 'white', bg: '#69224C' },\r

      \    crown: { key: 'queen-crown', fg: '#FEE593', bg: '#A27E44' },\r

      \    factory: { key: 'i_factory', fg: '#CD5147', bg: '#6D1A12' },\r

      \    clock: { key: 'clock', fg: '#3E84B5', bg: '#0B5884' },\r

      \    none: { key: 'flamer', fg: 'silver', bg: 'dimgrey' },\r

      \    plus: { key: 'plus', fg: 'silver', bg: '#00000020' },\r

      \    fountain: { key: 'fountain', fg: 'silver', bg: '#00000020' },\r

      \    flag: { key: 'flying-flag', fg: 'silver', bg: '#00000020' },\r

      \    up: { key: 'arrow-up', fg: 'silver', bg: '#00000020' },\r

      \    left: { key: 'arrow-left', fg: 'silver', bg: '#00000020' },\r

      \    right: { key: 'arrow-right', fg: 'silver', bg: '#00000020' },\r

      \  },\r

      \  symNames: ['tower', 'tree', 'bulb', 'crown', 'factory',
      'clock'],\r

      \  phases: [\r

      \    { key: 'init', message: 'select initial card to meld!' },\r

      \    { key: 'just_one_turn', message: 'take your first turn!' },\r

      \    { key: 'two_turns', message: 'take your turn!' },\r

      \  ],\r

      \  special_achievements: {\r

      \    MONUMENT: \"Claim immediately if you tuck six cards or score
      six cards during a single turn (May also be claimed via Masonry from Age
      1)\",\r

      \    EMPIRE: \"Claim immediately if you have three  or more icons of
      all six types (May also be claimed via Construction from Age 2)\",\r

      \    WORLD: \"Claim immediately if you have twelve or more clocks on
      your board (May also be claimed via Translation from Age 3)\",\r

      \    WONDER: \"Claim immediately if you have all five colors on your
      board, and each is splayed either up or right (May also be claimed via
      Invention from Age 4)\",\r

      \    UNIVERSE: \"Claim immediately if you have five top cards, and
      each is of value 8 or higher (May also be claimed via Astronomy from Age
      5)\",\r

      \    LEGEND: \"Claim if you meld a city with a left arrow on a color
      already splayed left\",\r

      \    REPUTE: \"Claim if you meld a city with a right arrow on a
      color already splayed right\",\r

      \    FAME: \"Claim if you meld a city with a up arrow on a color
      already splayed up\",\r

      \    GLORY: \"Claim immediately tuck a city with a flag\",\r

      \    VICTORY: \"Claim immediately tuck a city with a fountain\",\r

      \    SUPREMACY: \"Claim immediately if you have 3 or more of one
      icon in 4 different colors (May also be claimed via Novel from Age 3)\",\r

      \    DESTINY: \"Claim immediately if you have 7 or more cards in
      your forecast (May also be claimed via Barometer from Age 4)\",\r

      \    WEALTH: \"Claim immediately if you have 8 or more bonuses (May
      also be claimed via Palampore from Age 5)\",\r

      \    HERITAGE: \"Claim immediately if you have 8 or more numbers in
      one color (May also be claimed via Loom from Age 6)\",\r

      \    HISTORY: \"Claim immediately if you have 4 or more echoes in
      one color (May also be claimed via Photography from Age 7)\",\r

      \  },\r

      };\r\n"
    sig: const INNO
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  MASTERVOLUME:
    name: MASTERVOLUME
    code: "const MASTERVOLUME = 0.1;\r\n"
    sig: const MASTERVOLUME
    region: const (speech.js)
    filename: speech.js
    type: const
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  germanNumbers:
    name: germanNumbers
    code: "const germanNumbers = {\r

      \  ein: 1, eins: 1, zwei: 2, 1: 'eins', 2: 'zwei', 3: 'drei', drei:
      3, vier: 4, 4: 'vier', 5: 'fuenf', fuenf: 5, sechs: 6, 6: 'sechs', sex:
      6,\r

      \  sieben: 7, 7: 'sieben', 8: 'acht', acht: 8, 9: 'neun', neun: 9,
      zehn: 10, elf: 11, zwoelf: 12, zwanzig: 20, dreissig: 30,\r

      \  10: 'zehn', 11: 'elf', 12: 'zwoelf', 20: 'zwanzig', 30:
      'dreissig', vierzig: 40, fuenfzig: 50, 40: 'vierzig', 50: 'fuenfzig'\r

      };\r\n"
    sig: const germanNumbers
    region: helpers (speech.js)
    filename: speech.js
    type: const
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  STYLE:
    name: STYLE
    code: "const STYLE_PARAMS = {\r

      \  align: 'text-align',\r

      \  acontent: 'align-content',\r

      \  aitems: 'align-items',\r

      \  aspectRatio: 'aspect-ratio',\r

      \  bg: 'background-color',\r

      \  dir: 'flex-direction',\r

      \  fg: 'color',\r

      \  hgap: 'column-gap',\r

      \  vgap: 'row-gap',\r

      \  jcontent: 'justify-content',\r

      \  jitems: 'justify-items',\r

      \  justify: 'justify-content',\r

      \  matop: 'margin-top',\r

      \  maleft: 'margin-left',\r

      \  mabottom: 'margin-bottom',\r

      \  maright: 'margin-right',\r

      \  origin: 'transform-origin',\r

      \  overx: 'overflow-x',\r

      \  overy: 'overflow-y',\r

      \  patop: 'padding-top',\r

      \  paleft: 'padding-left',\r

      \  pabottom: 'padding-bottom',\r

      \  paright: 'padding-right',\r

      \  place: 'place-items',\r

      \  rounding: 'border-radius',\r

      \  w: 'width',\r

      \  h: 'height',\r

      \  wmin: 'min-width',\r

      \  hmin: 'min-height',\r

      \  hline: 'line-height',\r

      \  wmax: 'max-width',\r

      \  hmax: 'max-height',\r

      \  fontSize: 'font-size',\r

      \  fz: 'font-size',\r

      \  family: 'font-family',\r

      \  weight: 'font-weight',\r

      \  x: 'left',\r

      \  y: 'top',\r

      \  z: 'z-index'\r

      };\r\n"
    sig: const STYLE
    region: STYLE (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  overwriteMerge:
    name: overwriteMerge
    code: "const _overwriteMerge = (destinationArray, sourceArray, options) =>
      sourceArray\r\n"
    sig: const overwriteMerge
    region: internal (base.js)
    filename: base.js
    type: const
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  ARI:
    name: ARI
    code: "const ARI = {\r

      \  sz_hand: 7,\r

      \  stage: {\r

      \    1: 'journey',\r

      \    2: 'tax',\r

      \    3: 'auto market',\r

      \    4: 'stall selection',\r

      \    1004: 'TEST_starts_in_stall_selection_complete',\r

      \    5: 'action: command',\r

      \    6: 'action step 2',\r

      \    7: 'action 3',\r

      \    8: 'action 4',\r

      \    9: 'action 5',\r

      \    10: 'end game?',\r

      \    11: 'ball',\r

      \    12: 'auction: bid',\r

      \    13: 'auction: buy',\r

      \    14: 'complementing_market_after_church',\r

      \    15: 'commission',\r

      \    16: 'commission new',\r

      \    17: 'church',\r

      \    18: 'church_minplayer_tithe',\r

      \    19: 'church_newcards',\r

      \    20: 'payment action',\r

      \    21: 'church_minplayer_tithe_add',\r

      \    22: 'church_minplayer_tithe_downgrade',\r

      \    23: 'comm_weitergeben',\r

      \    24: 'rumors_weitergeben',\r

      \    25: 'rumor',\r

      \    26: 'blackmail',\r

      \    blackmail: 26,\r

      \    27: 'inspect',\r

      \    rumor: 25,\r

      \    28: 'buy rumor',\r

      \    'buy rumor': 28,\r

      \    29: 'rumor discard',\r

      \    30: 'pick luxury or journey cards',\r

      \    31: 'add new journey',\r

      \    32: 'rumor_both',\r

      \    33: 'blackmail_owner',\r

      \    34: 'accept_blackmail',\r

      \    35: 'blackmail_complete',\r

      \    36: 'reject_blackmail',\r

      \    37: 'commission_stall',\r

      \    38: 'pick_schwein',\r

      \    40: 'trade',\r

      \    41: 'build',\r

      \    42: 'visit',\r

      \    43: 'buy',\r

      \    44: 'upgrade',\r

      \    45: 'downgrade',\r

      \    46: 'visit destroy',\r

      \    build: 41,\r

      \    upgrade: 44,\r

      \    downgrade: 45,\r

      \    visit: 42,\r

      \    buy: 43,\r

      \    100: 'pickup end',\r

      \    101: 'build end',\r

      \    102: 'select building to upgrade',\r

      \    103: 'select downgrade cards',\r

      \    104: 'next_comm_setup_stage',\r

      \    105: 'next_rumor_setup_stage',\r

      \  }\r

      };\r\n"
    sig: const ARI
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  NEONORANGE:
    name: NEONORANGE
    code: "const NEONORANGE = '#ff6700';\r\n"
    sig: const NEONORANGE
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  NEONYELLOW:
    name: NEONYELLOW
    code: "const NEONYELLOW = '#efff04';\r\n"
    sig: const NEONYELLOW
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  DIBOA:
    name: DIBOA
    code: "const DIBOA = {\r

      \  home: { link: \"../rechnung/index.html\", img: 'home.png', align:
      'left', pop: false },\r

      \  bill: { link: \"../rechnung/index.html\", img: 'bill.png', align:
      'left', pop: false },\r

      \  boa: { link: \"\", img: 'boa.png', align: 'left', pop: false },\r

      \  bw: { link: \"../rechnung/bwindex.html\", img: 'bwicon.png',
      align: 'right', pop: true },\r

      \  authenticator: { link: \"../rechnung/boaa.html\", img:
      'authenticator.png', align: 'right', pop: true },\r

      \  authy: { link: \"../rechnung/boaa.html\", img: 'authy.png',
      align: 'right', pop: true },\r

      \  onedrive: { link: \"../rechnung/boaa.html\", img: 'onedrive.png',
      align: 'right', pop: true },\r

      \  skype: {\r

      \    link: \"../rechnung/boaa.html\", img: 'skype.png', align:
      'right', pop: false,\r

      \    contacts: {\r

      \      'Julia Oasis': { date: 'Wed', msg: 'Wow', color: BLUEGREEN
      },\r

      \      '+14778991960': { date: 'Thu', msg: 'Missed Call', color:
      ORANGE },\r

      \    }\r

      \  },\r

      \  bw_info: {\r

      \    boa: { userid: 'gleem@gmail.com', pwd: rPassword(20) },\r

      \    authy: { userid: 'gleem@gmail.com', pwd: rPassword(20) },\r

      \  },\r

      \  boa_data: {\r

      \    'AAA-MBNA 5464 3332 3333 5555': { sub: '*5555', logo: 'boa.png'
      },\r

      \    'AMERICAN EXPRESS': { sub: '*4554', logo: 'amex.png' },\r

      \    'AT&T Mobility': { sub: '*1331', logo: 'att.png' },\r

      \    'AT&T Mobility{AT&T WA}': { sub: '*7575', logo: 'att.png' },\r

      \    'AT&T Mobility': { sub: '*8585', logo: 'att.png' },\r

      \    'Bank Of Amerika Credit Card': { sub: '*1212', logo: 'boa.png',
      'Last Payment': '5-25 $1150.41', brand: 'BofA_rgb' },\r

      \    'Bank Of Amerika': { sub: '*0898', logo: 'boa.png' },\r

      \    'Bank Of Amerika Mail-in1': { sub: '*6565', logo: 'boa.png'
      },\r

      \    'Bel-Red Oral': { sub: '*2432' },\r

      \    'Bellevue Kendo Club': { sub: '*hallo' },\r

      \    'CapitalOne': { sub: '*1324', logo: 'capitalOne.png' },\r

      \    'CapitalOneVenture': { sub: '*6456', logo: 'capitalOne.png'
      },\r

      \    'CapitalOneVentureF': { sub: '*9789', logo: 'capitalOne.png'
      },\r

      \    'Chase': { sub: '*3131', logo: 'chase.png' },\r

      \    'Chase Amazon': { sub: '*0898', 'Last Payment': '5-25
      $1150.41', logo: 'chase.png', brand: 'prime' },\r

      \    'Chase Card': { sub: '*1432', logo: 'chase.png' },\r

      \    'CHASE MANHATTAN BANK-MC': { sub: '*0797', 'Last Payment':
      '5-25 $110.99', logo: 'chase.png', brand: 'chase_bank' },\r

      \    'Chase Sapphire': { sub: '*5132', logo: 'chase.png' },\r

      \    'Chase Sapphire': { sub: '*8679', logo: 'chase.png' },\r

      \    'City Cards': { sub: '*3124', logo: 'citi.png' },\r

      \    'City Cards Divident': { sub: '*9678', logo: 'citi.png' },\r

      \    'CITY CARDS Points': { sub: '*7678', logo: 'citi.png' },\r

      \    'Citi Costco': { sub: '*8768', 'Last Payment': '6-17 $506.14',
      logo: 'citi.png', brand: 'citibank' },\r

      \    'Citi Costco gu': { sub: '*0890', 'Last Payment': '6-6
      $228.92', logo: 'citi.png', brand: 'citibank' },\r

      \    'CITI DIVIDENT Platinum': { sub: '*3454', logo: 'citi.png' },\r

      \    'CITIBANK VISA NV': { sub: '*7566', logo: 'citi.png' },\r

      \    'City of Redmond': { sub: '*4998' },\r

      \    'City of Redmond WA': { sub: '*2887', 'Last Payment': '5-17
      $214.94', brand: 'redmond' },\r

      \    'Comcast': { sub: '*7676', logo: 'comcast.png' },\r

      \    'Comcast Perrigo': { sub: '*1324', 'Last Payment': '6-21
      $89.44', logo: 'comcast.png', brand: 'comcast' },\r

      \    'ComCast WA': { sub: '*6456', logo: 'comcast.png' },\r

      \    'DISCOVER CARD SERVICES': { sub: '*8678' },\r

      \    'Dr. Ellie Tabaraie': { sub: '*hallo' },\r

      \    'Fastenerz.com': { sub: '*000' },\r

      \    'Fibonacci': { sub: '*6666' },\r

      \    'Fleet Credit Card Service': { sub: '*8798' },\r

      \    'FLEET CREDIT CARD0MC/VS (32)': { sub: '*8799' },\r

      \    'Frontier': { sub: '*05-5' },\r

      \    'Frontier2': { sub: '*5366' },\r

      \    'GoodToGo': { sub: '*7767' },\r

      \    'Hardford Mutual Funds Inc.': { sub: '*8878' },\r

      \    'King County Treasury': { sub: '*0-02' },\r

      \    'King County Treasury': { sub: '*0-03' },\r

      \    'LabCorp': { sub: '*8899' },\r

      \    'Landover Mortgage': { sub: '*hallo' },\r

      \    'Lauren Magada': { sub: 'Lauren boa' },\r

      \    'Lederman&Pulman': { sub: '*9988' },\r

      \    'Liberty Mutual Group': { sub: '*-660' },\r

      \    'Liberty Mutual Group': { sub: '*-768' },\r

      \    'Liberty Mutual Group': { sub: '*-760' },\r

      \    \"Macy's Star Rewards\": { sub: '*23-0', logo: 'macys.png' },\r

      \    'MBNA': { sub: '*3444' },\r

      \    'MBNA 6455 6677 7924 5555': { sub: '*5555' },\r

      \    'Oachita': { sub: '*6556' },\r

      \    'Oasis Condominium CA': { sub: '*889' },\r

      \    'Oasis Condominium CA': { sub: '*1889', 'Last Payment': '5-31
      $581.54', brand: 'oasis' },\r

      \    'Orthodontics Roos': { sub: '*1111' },\r

      \    'Overcast Law Office, PS': { sub: '*4423' },\r

      \    'Overlake Medical Center': { sub: '*hallo' },\r

      \    'Pediatric Associates Inc': { sub: '*8383' },\r

      \    'Perrigo Heights HOA': { sub: '*t#98' },\r

      \    'Premier Periodontics': { sub: '*9494' },\r

      \    'PreventionMD': { sub: '*9566' },\r

      \    'Prime Trust LLC': { sub: '*8788' },\r

      \    'ProSport': { sub: '*1233' },\r

      \    'PSE - Puget Sound Energy': { sub: '*3444', 'Last Payment':
      '5-25 $70.59', brand: 'PSE' },\r

      \    'Puget Sound Energy': { sub: '*66-9' },\r

      \    'Real Property Management Eclipse': { sub: '*asss' },\r

      \    'Remadina Ridge Family Dentistry': { sub: '*6656' },\r

      \    'Sewage Capacity Charge': { sub: '*7575' },\r

      \    'Silkroad': { sub: '*788-1' },\r

      \    'Suhrco': { sub: '*899' },\r

      \    'Target': { sub: '*9789' },\r

      \    'Target National Bank': { sub: '*1432' },\r

      \    'Univerity Of WA Medical Center': { sub: '*1543' },\r

      \    'US Bank Credit Card FlexPerks': { sub: '*0789', 'Last
      Payment': '5-20 $11.13', brand: 'usbank' },\r

      \    'USBank': { sub: '*7567' },\r

      \    'USBank-CashPlus': { sub: '*3123' },\r

      \    'USBank-FlexPerks': { sub: '*1321' },\r

      \    'Verizon': { sub: '*7567' },\r

      \    'Waste Management': { sub: '*87-1' },\r

      \    'Waste Management': { sub: '*23-9' },\r

      \    'Wells Fargo Home Mortgage': { sub: '*1333', 'Last Payment':
      '6-10 $1625.06', logo: 'wellsfargo.png', brand: 'wellsfargo' },\r

      \    'Wells Fargo Mortgage': { sub: '*2444', logo: 'wellsfargo.png'
      },\r

      \    'Williams-Sonoma': { sub: '*9888' },\r

      \    'WINDERMERE PROPERTY MGMT/EASTSID': { sub: '*8766' },\r

      \    'Windermere Real Estate/East': { sub: '*ntal' },\r

      \  }\r

      };\r\n"
    sig: const DIBOA
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  SHERIFF:
    name: SHERIFF
    code: "const SHERIFF = {\r

      \  color: {\r

      \    legal: GREEN, //'lime',\r

      \    contraband: 'crimson',\r

      \    royal: 'orangered'\r

      \  },\r

      \  cards: {\r

      \    apples: { ksym: 'green apple', kcenter: 'red apple', label:
      'apple', type: 'legal', value: 2, penalty: 2 },\r

      \    cheese: { ksym: 'cheese wedge', kcenter: 'cheese wedge', label:
      'cheese', type: 'legal', value: 3, penalty: 2 },\r

      \    pineapple: { ksym: 'pineapple', kcenter: 'pineapple', label:
      'pineapple', type: 'legal', value: 4, penalty: 2 },\r

      \    chicken: { ksym: 'poultry leg', kcenter: 'poultry leg', label:
      'chicken', type: 'legal', value: 4, penalty: 2 },\r

      \    bread: { ksym: 'bread', kcenter: 'bread', label: 'bread', type:
      'legal', value: 3, penalty: 2 },\r

      \    pepper: { ksym: 'hot pepper', kcenter: 'hot pepper', label:
      'pepper', type: 'contraband', value: 6, penalty: 4 },\r

      \    mead: { ksym: 'beer mug', kcenter: 'beer mug', label: 'mead',
      type: 'contraband', value: 7, penalty: 4 },\r

      \    silk: { ksym: 'sari', kcenter: 'kimono', label: 'silk', type:
      'contraband', value: 8, penalty: 4 },\r

      \    crossbow: { ksym: 'crossbow', kcenter: 'crossbow', label:
      'crossbow', type: 'contraband', value: 9, penalty: 4 },\r

      \    chestnut: { ksym: 'chestnut', kcenter: 'chestnut', label:
      'chestnut', type: 'royal', value: 4, penalty: 3 },\r

      \    pear: { ksym: 'pear', kcenter: 'pear', label: 'pear', type:
      'royal', value: 6, penalty: 4 },\r

      \    pie: { ksym: 'pie', kcenter: 'pie', label: 'pie', type:
      'royal', value: 6, penalty: 4 },\r

      \    squid: { ksym: 'squid', kcenter: 'squid', label: 'squid', type:
      'royal', value: 9, penalty: 5 },\r

      \    shortcake: { ksym: 'shortcake', kcenter: 'shortcake', label:
      'shortcake', type: 'royal', value: 9, penalty: 5 },\r

      \    grapes: { ksym: 'grapes', kcenter: 'grapes', label: 'grapes',
      type: 'royal', value: 9, penalty: 5 },\r

      \    pretzel: { ksym: 'pretzel', kcenter: 'pretzel', label:
      'pretzel', type: 'royal', value: 9, penalty: 5 },\r

      \    baguette: { ksym: 'baguette bread', kcenter: 'baguette bread',
      label: 'bread', type: 'royal', value: 6, penalty: 4 },\r

      \    cherries: { ksym: 'cherries', kcenter: 'cherries', label:
      'cherries', type: 'royal', value: 8, penalty: 4 },\r

      \  },\r

      \  cardtypes: {\r

      \    legal: ['apples', 'cheese', 'pineapple', 'bread'],\r

      \    contraband: ['pepper', 'mead', 'silk', 'crossbow'],\r

      \    royal: ['chestnut', 'pear', 'pie', 'shortcake', 'pretzel',
      'grapes', 'baguette', 'cherries']\r

      \  },\r

      \  stage: {\r

      \    1: 'exchange',\r

      \  }\r

      }\r\n"
    sig: const SHERIFF
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CORNERS0:
    name: CORNERS0
    code: "const CORNERS0 = ['♠', '♡'];\r\n"
    sig: const CORNERS0
    region: title (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CORNERS:
    name: CORNERS
    code: "const CORNERS = ['◢', '◣', '◤', '◥'];\r\n"
    sig: const CORNERS
    region: title (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CORNERS2:
    name: CORNERS2
    code: "const CORNERS2 = ['⬔', '⬕'];\r\n"
    sig: const CORNERS2
    region: title (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CORNERS3:
    name: CORNERS3
    code: "const CORNERS3 = ['⮜', '⮝', '⮞', '⮟'];\r\n"
    sig: const CORNERS3
    region: title (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CORNERS4:
    name: CORNERS4
    code: "const CORNERS4 = ['⭐', '⭑'];\r\n"
    sig: const CORNERS4
    region: title (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CORNERS5:
    name: CORNERS5
    code: "const CORNERS5 = ['⬛', '⬜'];\r\n"
    sig: const CORNERS5
    region: title (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  BLUFF:
    name: BLUFF
    code: "const BLUFF = {\r

      \  torank: { _: '_', three: '3', four: '4', five: '5', six: '6',
      seven: '7', eight: '8', nine: '9', ten: 'T', jack: 'J', queen: 'Q', king:
      'K', ace: 'A' },\r

      \  toword: { _: '_', '3': 'three', '4': 'four', '5': 'five', '6':
      'six', '7': 'seven', '8': 'eight', '9': 'nine', T: 'ten', J: 'jack', Q:
      'queen', K: 'king', A: 'ace' },\r

      \  rankstr: '3456789TJQKA',\r

      };\r\n"
    sig: const BLUFF
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  SERVERURL:
    name: SERVERURL
    code: "const SERVERURL='http://localhost:2121';\r\n"
    sig: const SERVERURL
    region: const (uploadform.js)
    filename: uploadform.js
    type: const
    fname: uploadform.js
    path: C:\D\a03\nodemaster\all\fileupload\public\uploadform.js
    datetime: 2022-08-28-04-38
    timestamp: 1661686715389.484
    size: 870
  Simple:
    name: Simple
    code: "const Simple = {\r

      \  axiom: 'A',\r

      \  rules: [\r

      \    { aus: 'A', mach: 'AB' },\r

      \    { aus: 'B', mach: 'A' }\r

      \  ],\r

      };\r\n"
    sig: const Simple
    region: var (mysketch.js)
    filename: mysketch.js
    type: const
    fname: mysketch.js
    path: C:\D\a03\nodemaster\all\fractals\plant\mysketch.js
    datetime: 2022-09-03-07-06
    timestamp: 1662213971377.43
    size: 1964
  Algae:
    name: Algae
    code: "const Algae = {\r

      \  axiom: 'A',\r

      \  rules: [\r

      \    { aus: 'A', mach: 'A+[B]-[A]' },\r

      \    { aus: 'B', mach: 'AA' }\r

      \  ],\r

      \  angle: 25,\r

      \  factor: .9,\r

      \  max: 5,\r

      };\r\n"
    sig: const Algae
    region: var (mysketch.js)
    filename: mysketch.js
    type: const
    fname: mysketch.js
    path: C:\D\a03\nodemaster\all\fractals\plant\mysketch.js
    datetime: 2022-09-03-07-06
    timestamp: 1662213971377.43
    size: 1964
  Complex:
    name: Complex
    code: "const Complex = {\r

      \  axiom: 'F',\r

      \  rules: [\r

      \    { aus: 'F', mach: 'FF+[+F-F-F]-[-F+F+F]' }\r

      \  ],\r

      \  angle: 25,\r

      \  factor: .5,\r

      \  max: 6,\r

      };\r\n"
    sig: const Complex
    region: var (mysketch.js)
    filename: mysketch.js
    type: const
    fname: mysketch.js
    path: C:\D\a03\nodemaster\all\fractals\plant\mysketch.js
    datetime: 2022-09-03-07-06
    timestamp: 1662213971377.43
    size: 1964
  style:
    name: style
    code: "const style = new ol.style.Style({\r

      \  fill: new ol.style.Fill({\r

      \    color: '#eeeeee',\r

      \  }),\r

      });\r\n"
    sig: const style
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  vector:
    name: vector
    code: "const vector = new ol.layer.Vector({\r

      \  source: new ol.source.Vector({\r

      \    url: 'https://openlayers.org/data/vector/ecoregions.json',\r

      \    format: new ol.format.GeoJSON(),\r

      \  }),\r

      \  background: 'white',\r

      \  style: function (feature) {\r

      \    const color = feature.get('COLOR') || '#eeeeee';\r

      \    style.getFill().setColor(color);\r

      \    return style;\r

      \  },\r

      });\r\n"
    sig: const vector
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  map:
    name: map
    code: "const map = new Map({\r

      \  layers: [\r

      \    new TileLayer({\r

      \      source: new OSM(),\r

      \    }),\r

      \    vectorPolygons,\r

      \    vectorLines,\r

      \    vectorPoints,\r

      \  ],\r

      \  target: 'map',\r

      \  view: new View({\r

      \    center: [-8161939, 6095025],\r

      \    zoom: 8,\r

      \  }),\r

      });\r\n"
    sig: const map
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  selected:
    name: selected
    code: "const selected = new ol.style.Style({\r

      \  fill: new ol.style.Fill({\r

      \    color: '#eeeeee',\r

      \  }),\r

      \  stroke: new ol.style.Stroke({\r

      \    color: 'rgba(255, 255, 255, 0.7)',\r

      \    width: 2,\r

      \  }),\r

      });\r\n"
    sig: const selected
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  selectSingleClick:
    name: selectSingleClick
    code: "const selectSingleClick = new ol.interaction.Select({ style: selectStyle
      });\r\n"
    sig: const selectSingleClick
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  selectClick:
    name: selectClick
    code: "const selectClick = new ol.interaction.Select({\r

      \  condition: ol.events.condition.click,\r

      \  style: selectStyle,\r

      });\r\n"
    sig: const selectClick
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  selectPointerMove:
    name: selectPointerMove
    code: "const selectPointerMove = new ol.interaction.Select({\r

      \  condition: ol.events.condition.pointerMove,\r

      \  style: selectStyle,\r

      });\r\n"
    sig: const selectPointerMove
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  selectAltClick:
    name: selectAltClick
    code: "const selectAltClick = new ol.interaction.Select({\r

      \  style: selectStyle,\r

      \  condition: function (mapBrowserEvent) {\r

      \    return click(mapBrowserEvent) &&
      ol.events.condition.altKeyOnly(mapBrowserEvent);\r

      \  },\r

      });\r\n"
    sig: const selectAltClick
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  selectElement:
    name: selectElement
    code: "const selectElement = document.getElementById('type');\r\n"
    sig: const selectElement
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  changeInteraction:
    name: changeInteraction
    code: "const changeInteraction = function () {\r

      \  if (select !== null) {\r

      \    map.removeInteraction(select);\r

      \  }\r

      \  const value = selectElement.value;\r

      \  if (value == 'singleclick') {\r

      \    select = selectSingleClick;\r

      \  } else if (value == 'click') {\r

      \    select = selectClick;\r

      \  } else if (value == 'pointermove') {\r

      \    select = selectPointerMove;\r

      \  } else if (value == 'altclick') {\r

      \    select = selectAltClick;\r

      \  } else {\r

      \    select = null;\r

      \  }\r

      \  if (select !== null) {\r

      \    map.addInteraction(select);\r

      \    select.on('select', function (e) {\r

      \      document.getElementById('status').innerHTML =\r

      \        '&nbsp;' +\r

      \        e.target.getFeatures().getLength() +\r

      \        ' selected features (last operation selected ' +\r

      \        e.selected.length +\r

      \        ' and deselected ' +\r

      \        e.deselected.length +\r

      \        ' features)';\r

      \    });\r

      \  }\r

      };\r\n"
    sig: const changeInteraction
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\map\main.js
    datetime: 2022-10-03-07-30
    timestamp: 1664807444493.8203
    size: 2629
  myDom:
    name: myDom
    code: "const myDom = {\r

      \  points: {\r

      \    text: document.getElementById('points-text'),\r

      \    align: document.getElementById('points-align'),\r

      \    baseline: document.getElementById('points-baseline'),\r

      \    rotation: document.getElementById('points-rotation'),\r

      \    font: document.getElementById('points-font'),\r

      \    weight: document.getElementById('points-weight'),\r

      \    size: document.getElementById('points-size'),\r

      \    height: document.getElementById('points-height'),\r

      \    offsetX: document.getElementById('points-offset-x'),\r

      \    offsetY: document.getElementById('points-offset-y'),\r

      \    color: document.getElementById('points-color'),\r

      \    outline: document.getElementById('points-outline'),\r

      \    outlineWidth:
      document.getElementById('points-outline-width'),\r

      \    maxreso: document.getElementById('points-maxreso'),\r

      \  },\r

      \  lines: {\r

      \    text: document.getElementById('lines-text'),\r

      \    align: document.getElementById('lines-align'),\r

      \    baseline: document.getElementById('lines-baseline'),\r

      \    rotation: document.getElementById('lines-rotation'),\r

      \    font: document.getElementById('lines-font'),\r

      \    weight: document.getElementById('lines-weight'),\r

      \    placement: document.getElementById('lines-placement'),\r

      \    maxangle: document.getElementById('lines-maxangle'),\r

      \    overflow: document.getElementById('lines-overflow'),\r

      \    size: document.getElementById('lines-size'),\r

      \    height: document.getElementById('lines-height'),\r

      \    offsetX: document.getElementById('lines-offset-x'),\r

      \    offsetY: document.getElementById('lines-offset-y'),\r

      \    color: document.getElementById('lines-color'),\r

      \    outline: document.getElementById('lines-outline'),\r

      \    outlineWidth: document.getElementById('lines-outline-width'),\r

      \    maxreso: document.getElementById('lines-maxreso'),\r

      \  },\r

      \  polygons: {\r

      \    text: document.getElementById('polygons-text'),\r

      \    align: document.getElementById('polygons-align'),\r

      \    baseline: document.getElementById('polygons-baseline'),\r

      \    rotation: document.getElementById('polygons-rotation'),\r

      \    font: document.getElementById('polygons-font'),\r

      \    weight: document.getElementById('polygons-weight'),\r

      \    placement: document.getElementById('polygons-placement'),\r

      \    maxangle: document.getElementById('polygons-maxangle'),\r

      \    overflow: document.getElementById('polygons-overflow'),\r

      \    size: document.getElementById('polygons-size'),\r

      \    height: document.getElementById('polygons-height'),\r

      \    offsetX: document.getElementById('polygons-offset-x'),\r

      \    offsetY: document.getElementById('polygons-offset-y'),\r

      \    color: document.getElementById('polygons-color'),\r

      \    outline: document.getElementById('polygons-outline'),\r

      \    outlineWidth:
      document.getElementById('polygons-outline-width'),\r

      \    maxreso: document.getElementById('polygons-maxreso'),\r

      \  },\r

      };\r\n"
    sig: const myDom
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  getText:
    name: getText
    code: "const getText = function (feature, resolution, dom) {\r

      \  const type = dom.text.value;\r

      \  const maxResolution = dom.maxreso.value;\r

      \  let text = feature.get('name');\r

      \  if (resolution > maxResolution) {\r

      \    text = '';\r

      \  } else if (type == 'hide') {\r

      \    text = '';\r

      \  } else if (type == 'shorten') {\r

      \    text = text.trunc(12);\r

      \  } else if (\r

      \    type == 'wrap' &&\r

      \    (!dom.placement || dom.placement.value != 'line')\r

      \  ) {\r

      \    text = stringDivider(text, 16, '\\n');\r

      \  }\r

      \  return text;\r

      };\r\n"
    sig: const getText
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  createTextStyle:
    name: createTextStyle
    code: "const createTextStyle = function (feature, resolution, dom) {\r

      \  const align = dom.align.value;\r

      \  const baseline = dom.baseline.value;\r

      \  const size = dom.size.value;\r

      \  const height = dom.height.value;\r

      \  const offsetX = parseInt(dom.offsetX.value, 10);\r

      \  const offsetY = parseInt(dom.offsetY.value, 10);\r

      \  const weight = dom.weight.value;\r

      \  const placement = dom.placement ? dom.placement.value :
      undefined;\r

      \  const maxAngle = dom.maxangle ? parseFloat(dom.maxangle.value) :
      undefined;\r

      \  const overflow = dom.overflow ? dom.overflow.value == 'true' :
      undefined;\r

      \  const rotation = parseFloat(dom.rotation.value);\r

      \  if (dom.font.value == \"'Open Sans'\" && !openSansAdded) {\r

      \    const openSans = document.createElement('link');\r

      \    openSans.href =
      'https://fonts.googleapis.com/css?family=Open+Sans';\r

      \    openSans.rel = 'stylesheet';\r

      \    document.head.appendChild(openSans);\r

      \    openSansAdded = true;\r

      \  }\r

      \  const font = weight + ' ' + size + '/' + height + ' ' +
      dom.font.value;\r

      \  const fillColor = dom.color.value;\r

      \  const outlineColor = dom.outline.value;\r

      \  const outlineWidth = parseInt(dom.outlineWidth.value, 10);\r

      \  return new Text({\r

      \    textAlign: align == '' ? undefined : align,\r

      \    textBaseline: baseline,\r

      \    font: font,\r

      \    text: getText(feature, resolution, dom),\r

      \    fill: new Fill({ color: fillColor }),\r

      \    stroke: new Stroke({ color: outlineColor, width: outlineWidth
      }),\r

      \    offsetX: offsetX,\r

      \    offsetY: offsetY,\r

      \    placement: placement,\r

      \    maxAngle: maxAngle,\r

      \    overflow: overflow,\r

      \    rotation: rotation,\r

      \  });\r

      };\r\n"
    sig: const createTextStyle
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  vectorPolygons:
    name: vectorPolygons
    code: "const vectorPolygons = new VectorLayer({\r

      \  source: new VectorSource({\r

      \    url: 'data/geojson/polygon-samples.geojson',\r

      \    format: new GeoJSON(),\r

      \  }),\r

      \  style: polygonStyleFunction,\r

      });\r\n"
    sig: const vectorPolygons
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  vectorLines:
    name: vectorLines
    code: "const vectorLines = new VectorLayer({\r

      \  source: new VectorSource({\r

      \    url: 'data/geojson/line-samples.geojson',\r

      \    format: new GeoJSON(),\r

      \  }),\r

      \  style: lineStyleFunction,\r

      });\r\n"
    sig: const vectorLines
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  vectorPoints:
    name: vectorPoints
    code: "const vectorPoints = new VectorLayer({\r

      \  source: new VectorSource({\r

      \    url: 'data/geojson/point-samples.geojson',\r

      \    format: new GeoJSON(),\r

      \  }),\r

      \  style: pointStyleFunction,\r

      });\r\n"
    sig: const vectorPoints
    region: const (main.js)
    filename: main.js
    type: const
    fname: main.js
    path: C:\D\a03\nodemaster\all\openlayers\mapTEXT\main.js
    datetime: 2022-10-06-04-52
    timestamp: 1665057166073.5764
    size: 7899
  express:
    name: express
    code: "const express = require('express');\r\n"
    sig: const express
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: const
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  app:
    name: app
    code: "const app = express();\r\n"
    sig: const app
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: const
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  http:
    name: http
    code: "const http = require('http');\r\n"
    sig: const http
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: const
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  server:
    name: server
    code: "const server = http.createServer(app);\r\n"
    sig: const server
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: const
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  Server:
    name: Server
    code: "const { Server } = require(\"socket.io\");\r\n"
    sig: const Server
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: const
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  cors:
    name: cors
    code: "const cors = require('cors');\r\n"
    sig: const cors
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: const
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  io:
    name: io
    code: "const io = new Server(server, { cors: { origins: '*', } });\r\n"
    sig: const io
    region: const (standalone_app.js)
    filename: standalone_app.js
    type: const
    fname: standalone_app.js
    path: C:\D\a03\nodemaster\all\leaflet\mapgame\standalone_app.js
    datetime: 2022-10-11-13-07
    timestamp: 1665518850419.1401
    size: 1207
  DARKBLUE:
    name: DARKBLUE
    code: "const DARKBLUE = '#04041b';\r\n"
    sig: const DARKBLUE
    region: color (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  EMO:
    name: EMO
    code: "const EMO = {\r

      \  emoscale: {\r

      \    freedom: { list: 'joyful, empowered, loving, free', key:
      'smiling face with hearts', n: 4, color: 'violet', E: 'joy', D:
      'freiheit', stage: 'open heart', danger: 'arrogance', advice: 'be quiet',
      loc: 'airport', locd: 'flughafen', syn:
      'joy,appreciation,empowerment,love', rem: 'let go' },\r

      \    zone: { list: \"energetic, creative, enthusiastic, in the
      zone\", key: 'nerd face', n: 3, color: 'indigo', E: 'energy', D:
      'energie', stage: 'constant flow', danger: 'greed', advice: 'now', loc:
      'airport', locd: 'flughafen', syn: 'passion', rem: 'remain watchful' },\r

      \    grateful: { list: 'peaceful, grateful, happy, playful', key:
      'smiling face with halo', n: 2, color: 'blue', syn: 'eagerness,happiness',
      rem: 'stick to plan', E: 'energy', D: 'energie', stage: 'energy', danger:
      'planlos verpuffen lassen, being overly confident', advice: 'make a plan,
      stick to the plan', loc: 'airport', locd: 'flughafen' },\r

      \    contentment: { list: 'calm, centered, content, trusting', key:
      'relieved face', n: 1, color: 'green', rem: 'abide', E: 'serene', D:
      'zufriedenheit', stage: 'gelassenheit', danger: 'passivity', advice: 'stay
      active', loc: 'airport', locd: 'flughafen' },\r

      \    boredom: { list: 'tired, bored, aimless, empty', key: 'slightly
      frowning face', n: 0, color: 'sienna', rem: 'oracle', E: 'bored', D:
      'langeweile', stage: 'gelassenheit', danger: 'passivity', advice: 'stay
      active', loc: 'airport', locd: 'flughafen' },\r

      \    pessimism: { list: 'indecisive, confused, doubting, worried',
      key: 'worried face', n: -1, color: 'yellow', rem: 'last day', E: 'serene',
      D: 'langeweile', stage: 'gelassenheit', danger: 'passivity', advice: 'stay
      active', loc: 'airport', locd: 'flughafen' },\r

      \    overwhelm: { list: 'irritated, anxious, stressed, overwhelmed',
      key: 'anxious face with sweat', n: -2, color: 'orange', rem: 'pause', E:
      'irritated', D: 'irritiert', stage: 'damage control', danger: 'losing
      contenance', advice: 'retreat', loc: 'airport', locd: 'flughafen' },\r

      \    blame: { list: 'impatient, resentful, blaming, angry', key:
      'face with symbols on mouth', n: -3, color: 'red', syn:
      'discouragement,anger,revenge', rem: 'robot', E: 'blaming', D: 'schuld
      zuweisend', stage: 'damage control', danger: 'toxicity', advice:
      'surrender', loc: 'airport', locd: 'flughafen' },\r

      \    hatred: { list: 'ruthless, aggressive, jealous, hateful', key:
      'black heart', n: -4, color: 'black', syn: 'rage,jealousy', rem: 'robot',
      E: 'hateful', D: 'hass', stage: 'damage control', danger: 'toxicity',
      advice: 'surrender', loc: 'airport', locd: 'flughafen' },\r

      \    guilt: { list: 'guilty, powerless, frozen, suicidal', key:
      'cold face', n: -5, color: 'grey', syn: 'insecurity,unworthiness', rem:
      'robot', E: 'guilty', D: 'wertlos', stage: 'damage control', danger:
      'toxicity', advice: 'surrender', loc: 'airport', locd: 'flughafen' },\r

      \  },\r

      \  remedy: {\r

      \    sleep: { list: 'rest, close your eyes, deep breath' },\r

      \    distraction: { list: 'read, movie, docu, audiobook' },\r

      \    walk: { list: 'music, tm, library, walk' },\r

      \    babystep: { list: 'veggies, fruit, haushalt, wae, wasser, tee'
      },\r

      \    work: { list: 'post, box, shelf, people, todolist' },\r

      \    action: { list: 'piano, violin, game' },\r

      \    choices: { list: 'dice, todolist, openlist, choices' },\r

      \    retreat: { list: 'flight, dimension change' },\r

      \    cafe: { list: 'renew, plan' },\r

      \    inside: { list: 'watch, freeze, meditate' }\r

      \  },\r

      \  attitude: {\r

      \    disziplin: { max: 1 },\r

      \    gelassenheit: { min: 1, max: 4 },\r

      \    energie: { min: 3, max: 5 },\r

      \    ausgelassenheit: { min: 5, max: 7 },\r

      \    friede: { min: 5, max: 7 },\r

      \    freude: { min: 5, max: 7 },\r

      \    freiheit: { min: 5, max: 7 },\r

      \    liebe: { min: 5, max: 7 },\r

      \  }\r

      };\r\n"
    sig: const EMO
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  NATURE:
    name: NATURE
    code: "const NATURE = {\r

      \  depth: 6,\r

      \  branching: [-25, 5, 25],\r

      \  lsystems: [\r

      \    {\r

      \      axiom: 'A',\r

      \      rules: [\r

      \        { aus: 'A', wird: 'A+[+A-A]' },\r

      \      ],\r

      \      angle: 25,\r

      \      len: 500,\r

      \      dlen: .7,\r

      \      depth: 6\r

      \    },\r

      \    {\r

      \      axiom: 'F',\r

      \      rules: [\r

      \        { aus: 'F', wird: 'F[+F]F[-F]F' },\r

      \      ],\r

      \      angle: 26,\r

      \      len: 50,\r

      \    },\r

      \    {\r

      \      axiom: 'F',\r

      \      rules: [\r

      \        { aus: 'F', wird: 'F[+F]F[-F][F]' },\r

      \      ],\r

      \      angle: 20,\r

      \      len: 200,\r

      \    },\r

      \    {\r

      \      axiom: 'X',\r

      \      rules: [\r

      \        { aus: 'X', wird: 'F[+X][-X]FX' },\r

      \        { aus: 'F', wird: 'FF' },\r

      \      ],\r

      \      angle: 26,\r

      \      len: 200,\r

      \    },\r

      \    {\r

      \      axiom: 'A',\r

      \      rules: [{ aus: 'A', wird: 'AA+[+A-A-A]-[-A+A+A]' }],\r

      \      angle: 25,\r

      \    },\r

      \    {\r

      \      axiom: 'A',\r

      \      rules: [{ aus: 'F', wird: 'FF' }, { aus: 'A', wird:
      'F-[[A]+A]+F[+FA]-A' }],\r

      \      angle: 23,\r

      \    },\r

      \    {\r

      \      axiom: 'Y',\r

      \      rules: [{ aus: 'X', wird: 'X[-FFF][+FFF]FX' }, { aus: 'Y',
      wird: 'YFX[+Y][-Y]' }, { aus: 'F', wird: 'X' }],\r

      \      angle: 25,\r

      \      len: 85,\r

      \    },\r

      \    {\r

      \      axiom: 'F',\r

      \      rules: [{ aus: 'F', wird: 'F[+FF][-FF]F[-F][+F]F' }],\r

      \      angle: 35,\r

      \      len: 70,\r

      \    },\r

      \    {\r

      \      axiom: 'VZFFF',\r

      \      rules: [{ aus: 'V', wird: '[+++W][---W]YV' },\r

      \      { aus: 'W', wird: '+X[-W]Z' },\r

      \      { aus: 'Y', wird: 'YZ' },\r

      \      { aus: 'F', wird: 'Y' },\r

      \      { aus: 'Z', wird: '[-FFF][+FFF]F' },\r

      \      { aus: 'X', wird: '-W[+X]Z' }],\r

      \      angle: 40,\r

      \      len: 100,\r

      \    },\r

      \    {\r

      \      axiom: 'F++F++F',\r

      \      rules: [{ aus: 'F', wird: 'F-F++F-F' }],\r

      \      angle: 60,\r

      \      len: 100,\r

      \      depth: 3,\r

      \      xstart: 3,\r

      \    },\r

      \    {\r

      \      axiom: 'F+F+F+F',\r

      \      rules: [{ aus: 'F', wird: 'FF+F+F+F+FF' }],\r

      \      angle: 90,\r

      \      len: 100,\r

      \      depth: 3,\r

      \      xstart: 6,\r

      \    },\r

      \    {\r

      \      axiom: 'F+F+F+F',\r

      \      rules: [{ aus: 'F', wird: 'F+F-F-FFF+F+F-F' }],\r

      \      angle: 90,\r

      \      len: 28,\r

      \      depth: 3,\r

      \    },\r

      \    {\r

      \      axiom: 'X',\r

      \      rules: [\r

      \        { aus: 'X', wird: '-YF+XFX+FY-' },\r

      \        { aus: 'Y', wird: '+XF-YFY-FX+' },\r

      \        { aus: 'F', wird: 'F' },\r

      \      ],\r

      \      angle: 90,\r

      \      len: 150,\r

      \      xstart: 1.3,\r

      \      depth: 4,\r

      \    },\r

      \    {\r

      \      axiom: 'X',\r

      \      rules: [{ aus: 'F', wird: 'FF' },\r

      \      { aus: 'X', wird: 'F[+X]F[-X]+X' }],\r

      \      angle: 20,\r

      \      len: 200,\r

      \    },\r

      \  ]\r

      };\r\n"
    sig: const NATURE
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Geo:
    name: Geo
    code: "const Geo = {\r

      \  layerInfo: {\r

      \    empty: {\r

      \      url: '',\r

      \      options: { maxZoom: 22 }\r

      \    },\r

      \    ru: {\r

      \      url: 'https:/' +
      '/core-sat.maps.yandex.net/tiles?l=sat&v=3.1025.0&x={x}&y={y}&z={z}&scale\
      =1&lang=ru_RU',\r

      \      options: { minZoom: 0, maxZoom: 19, }\r

      \    },\r

      \    satellite: {\r

      \      url: 'http:/' +
      '/server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/ti\
      le/{z}/{y}/{x}',\r

      \      options: { maxZoom: 19, attribution: '&copy; <a
      href=\"http:/\"+\"www.esri.com/\">Esri</a>, i-cubed, USDA, USGS, AEX,
      GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User
      Community' }\r

      \    },\r

      \    gsatellite: {\r

      \      url: 'http:/' +
      '/{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',\r

      \      options: { maxZoom: 22, subdomains: ['mt0', 'mt1', 'mt2',
      'mt3'] }\r

      \    },\r

      \    gstreets: {\r

      \      url: 'http:/' +
      '/{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}',\r

      \      options: { maxZoom: 22, subdomains: ['mt0', 'mt1', 'mt2',
      'mt3'] }\r

      \    },\r

      \    ghybrid: {\r

      \      url: 'http:/' +
      '/{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}',\r

      \      options: { maxZoom: 22, subdomains: ['mt0', 'mt1', 'mt2',
      'mt3'] }\r

      \    },\r

      \    gterrain: {\r

      \      url: 'http:/' +
      '/{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}',\r

      \      options: { maxZoom: 22, subdomains: ['mt0', 'mt1', 'mt2',
      'mt3'] }\r

      \    },\r

      \    mbsat: {\r

      \      url: 'https:/' +
      '/api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijo\
      ibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB\
      6B5aw',\r

      \      options: { attribution: 'Map data &copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors, Imagery © <a
      href=\"https:/\"+\"/www.mapbox.com/\">Mapbox</a>', id:
      'mapbox/satellite-v9', tileSize: 512, zoomOffset: -1 }\r

      \    },\r

      \    mbstreets: {\r

      \      url: 'https:/' +
      '/api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijo\
      ibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB\
      6B5aw',\r

      \      options: { attribution: 'Map data &copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors, Imagery © <a
      href=\"https:/\"+\"/www.mapbox.com/\">Mapbox</a>', id:
      'mapbox/streets-v11', tileSize: 512, zoomOffset: -1 }\r

      \    },\r

      \    mb1: {\r

      \      url: 'https:/' +
      '/api.mapbox.com/styles/v1/mapbox-map-design/cl4whev1w002w16s9mgoliotw/st\
      atic/-90,35,2.5,0/840x464?access_token=pk.eyJ1IjoibWFwYm94LW1hcC1kZXNpZ24\
      iLCJhIjoiY2syeHpiaHlrMDJvODNidDR5azU5NWcwdiJ9.x0uSqSWGXdoFKuHZC5Eo_Q',\r

      \      options: { attribution: 'Map data &copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors, Imagery © <a
      href=\"https:/\"+\"/www.mapbox.com/\">Mapbox</a>', tileSize: 512,
      zoomOffset: -1 }\r

      \    },\r

      \    cartolabels: {\r

      \      url: 'https:/' +
      '/{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}{r}.png',\r

      \      options: {\r

      \        attribution: '&copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors &copy; <a
      href=\"https:/\"+\"/carto.com/attributions\">CARTO</a>',\r

      \        subdomains: 'abcd',\r

      \        maxZoom: 20\r

      \      }\r

      \    },\r

      \    cartonolabels: {\r

      \      url: 'https:/' +
      '/{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png',\r

      \      options: {\r

      \        attribution: '&copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors &copy; <a
      href=\"https:/\"+\"/carto.com/attributions\">CARTO</a>',\r

      \        subdomains: 'abcd',\r

      \        maxZoom: 20\r

      \      }\r

      \    },\r

      \    cartodark: {\r

      \      url: 'https:/' +
      '/{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png',\r

      \      options: {\r

      \        attribution: '&copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors &copy; <a
      href=\"https:/\"+\"/carto.com/attributions\">CARTO</a>',\r

      \        subdomains: 'abcd',\r

      \        maxZoom: 20\r

      \      }\r

      \    },\r

      \    osm: {\r

      \      url: 'https:/' + '/tile.openstreetmap.org/{z}/{x}/{y}.png',\r

      \      options: { attribution: '&copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>',
      subdomains: ['a', 'b', 'c'] }\r

      \    },\r

      \    osmg: {\r

      \      url: 'https:/' +
      '/{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png',\r

      \      options: { attribution: '&copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>',
      subdomains: ['a', 'b', 'c'] }\r

      \    },\r

      \    watercolor: {\r

      \      url: 'http:/' +
      '/{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg',\r

      \      options: { attribution: 'Map tiles by <a
      href=\"http:/\"+\"stamen.com\">Stamen Design</a>, under <a
      href=\"http:/\"+\"creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>.
      Data by <a href=\"http:/\"+\"openstreetmap.org\">OpenStreetMap</a>, under
      <a href=\"http:/\"+\"creativecommons.org/licenses/by-sa/3.0\">CC BY
      SA</a>.', maxZoom: 18, subdomains: 'abcd', }\r

      \    },\r

      \    labels: {\r

      \      url: \"http:/\" +
      \"tile.stamen.com/toner-labels/{z}/{x}/{y}.png\",\r

      \      options: { attribution: 'Map tiles by <a
      href=\"http:/\"+\"stamen.com\">Stamen Design</a>, under <a
      href=\"http:/\"+\"creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>.
      Data by <a href=\"http:/\"+\"openstreetmap.org\">OpenStreetMap</a>, under
      <a href=\"http:/\"+\"www.openstreetmap.org/copyright\">ODbL</a>.',
      maxZoom: 18 }\r

      \    },\r

      \    terrain: {\r

      \      url: 'http:/' +
      '/{s}.tile.stamen.com/terrain/{z}/{x}/{y}.jpg',\r

      \      options: { attribution: 'Map tiles by <a
      href=\"http:/\"+\"stamen.com\">Stamen Design</a>, under <a
      href=\"http:/\"+\"creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>.
      Data by <a href=\"http:/\"+\"openstreetmap.org\">OpenStreetMap</a>, under
      <a href=\"http:/\"+\"creativecommons.org/licenses/by-sa/3.0\">CC BY
      SA</a>.', maxZoom: 18, }\r

      \    },\r

      \    terrainbg: {\r

      \      url: 'http:/' +
      '/{s}.tile.stamen.com/terrain-background/{z}/{x}/{y}.jpg',\r

      \      options: { attribution: 'Map tiles by <a
      href=\"http:/\"+\"stamen.com\">Stamen Design</a>, under <a
      href=\"http:/\"+\"creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>.
      Data by <a href=\"http:/\"+\"openstreetmap.org\">OpenStreetMap</a>, under
      <a href=\"http:/\"+\"creativecommons.org/licenses/by-sa/3.0\">CC BY
      SA</a>.', maxZoom: 18, }\r

      \    },\r

      \    topo: {\r

      \      url: 'https:/' +
      '/{s}.tile.opentopomap.org/{z}/{x}/{y}.png',\r

      \      options: {\r

      \        maxZoom: 17,\r

      \        attribution: 'Map data: &copy; <a
      href=\"https:/\"+\"/www.openstreetmap.org/copyright\">OpenStreetMap</a>
      contributors, <a href=\"http:/\"+\"viewfinderpanoramas.org\">SRTM</a> |
      Map style: &copy; <a href=\"https:/\"+\"/opentopomap.org\">OpenTopoMap</a>
      (<a
      href=\"https:/\"+\"/creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a\
      >)'\r

      \      }\r

      \    }\r

      \  },\r

      \  places: {\r

      \    tuerkenschanzpark: [48.23562171298636, 16.337871551513675],\r

      \    sievering: [48.245368124489204, 16.342549324035648],\r

      \    zehenthofgasse: [48.24522522864384, 16.34572505950928],\r

      \    vegagasse: [48.23413529351023, 16.346755027771],\r

      \  },\r

      \  continents: {\r

      \    Africa: ['Algeria', 'Angola', 'Benin', 'Botswana', 'Burkina
      Faso', 'Burundi', 'Cameroon', 'Cape Verde', 'Central African Republic',
      'Chad', 'Comoros', 'Congo', 'Democratic Republic of the Congo',
      'Djibouti', 'Egypt', 'Equatorial Guinea', 'Eritrea', 'Ethiopia', 'Gabon',
      'Gambia', 'Ghana', 'Guinea', 'Guinea-Bissau', 'Ivory Coast', 'Kenya',
      'Lesotho', 'Liberia', 'Libya', 'Madagascar', 'Malawi', 'Mali',
      'Mauritania', 'Mauritius', 'Mayotte', 'Morocco', 'Mozambique', 'Namibia',
      'Niger', 'Nigeria', 'Reunion', 'Rwanda', 'Sao Tome And Principe',
      'Senegal', 'Seychelles', 'Sierra Leone', 'Somalia', 'South Africa', 'South
      Sudan', 'Saint Helena', 'Sudan', 'Swaziland', 'Tanzania', 'Togo',
      'Tunisia', 'Uganda', 'Zambia', 'Zimbabwe'],\r

      \    Asia: ['Afghanistan', 'Bahrain', 'Bangladesh', 'Bhutan',
      'Brunei', 'Myanmar', 'Cambodia', 'China', 'East Timor', 'Hong Kong',
      'India', 'Indonesia', 'Iran', 'Iraq', 'Israel', 'Japan', 'Jordan',
      'Kazakhstan', 'Macau', 'North Korea', 'South Korea', 'Kuwait',
      'Kyrgyzstan', 'Laos', 'Lebanon', 'Malaysia', 'Maldives', 'Mongolia',
      'Nepal', 'Oman', 'Pakistan', 'Philippines', 'Qatar', 'Russia', 'Saudi
      Arabia', 'Singapore', 'Sri Lanka', 'Syria', 'Taiwan', 'Tajikistan',
      'Thailand', 'Turkey', 'Turkmenistan', 'United Arab Emirates',
      'Uzbekistan', 'Vietnam', 'Yemen'],\r

      \    Europe: ['Albania', 'Andorra', 'Armenia', 'Austria',
      'Azerbaijan', 'Belarus', 'Belgium', 'Bosnia And Herzegovina', 'Bulgaria',
      'Croatia', 'Cyprus', 'Czechia', 'Denmark', 'Estonia', 'Finland', 'France',
      'Georgia', 'Germany', 'Gibraltar', 'Greece', 'Hungary', 'Iceland',
      'Ireland', 'Isle Of Man', 'Italy', 'Jersey', 'Kosovo', 'Latvia',
      'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macedonia', 'Malta',
      'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'Norway', 'Poland',
      'Portugal', 'Romania', 'San Marino', 'Serbia', 'Slovakia', 'Slovenia',
      'Spain', 'Sweden', 'Switzerland', 'Ukraine', 'United Kingdom', 'Vatican
      City'],\r

      \    'North America': ['Antigua and Barbuda', 'Bahamas', 'Barbados',
      'Belize', 'Bermuda', 'Cayman Islands', 'Canada', 'Costa Rica', 'Cuba',
      'Dominica', 'Dominican Republic', 'El Salvador', 'Grenada', 'Guadeloupe',
      'Guatemala', 'Haiti', 'Honduras', 'Jamaica', 'Martinique', 'Mexico',
      'Nicaragua', 'Panama', 'Puerto Rico', 'Saint Kitts and Nevis', 'Saint
      Lucia', 'Saint Vincent And The Grenadines', 'Trinidad And Tobago', 'United
      States'],\r

      \    Oceania: ['Australia', 'Fiji', 'French Polynesia', 'Kiribati',
      'Marshall Islands', 'Micronesia', 'Nauru', 'New Caledonia', 'New Zealand',
      'Palau', 'Papua New Guinea', 'Samoa', 'Solomon Islands', 'Tonga',
      'Tuvalu', 'Vanuatu'],\r

      \    'South America': ['Argentina', 'Aruba', 'Bolivia', 'Brazil',
      'Chile', 'Colombia', 'Curacao', 'Ecuador', 'French Guiana', 'Guam',
      'Guyana', 'Paraguay', 'Peru', 'Suriname', 'Uruguay', 'Venezuela']\r

      \  }\r

      };\r\n"
    sig: const Geo
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  is:
    name: is
    code: "const is_key_down = (() => {\r

      \  const state = {};\r

      \  window.addEventListener('keyup', (e) => state[e.key] = false);\r

      \  window.addEventListener('keydown', (e) => { state[e.key] = true;
      });\r

      \  return (key) => state.hasOwnProperty(key) && state[key] ||
      false;\r

      })();\r\n"
    sig: const is
    region: file (basemin.js)
    filename: basemin.js
    type: const
    fname: basemin.js
    path: C:\D\a03\nodemaster\basejs\basemin.js
    datetime: 2022-12-05-07-05
    timestamp: 1670252700099.043
    size: 238451
  GT:
    name: GT
    code: "const GT = {}; \r\n"
    sig: const GT
    region: const (apisimphp.js)
    filename: apisimphp.js
    type: const
    fname: apisimphp.js
    path: C:\xampp\htdocs\aroot\games\apisimphp.js
    datetime: 2023-01-16-09-45
    timestamp: 1673891145563.0361
    size: 4821
  MyNames:
    name: MyNames
    code: "const MyNames = ['amanda', 'angela', 'erin', 'holly', 'jan', 'karen',
      'kelly', 'pam', 'phyllis', 'andy', 'creed', 'darryl', 'david', 'dwight',
      'felix', 'gul', 'jim', 'kevin', 'luis', 'michael', 'nil', 'oscar', 'ryan',
      'stanley', 'toby', 'wolfgang'];\r\n"
    sig: const MyNames
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  SHAPEFUNCS:
    name: SHAPEFUNCS
    code: "const SHAPEFUNCS = { 'circle': agCircle, 'hex': agHex, 'rect': agRect,
      };\r\n"
    sig: const SHAPEFUNCS
    region: vars (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  MyEasing:
    name: MyEasing
    code: "const MyEasing = 'cubic-bezier(1,-0.03,.86,.68)';\r\n"
    sig: const MyEasing
    region: vars (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CODE:
    name: CODE
    code: "const CODE = {\r

      \  paths: [],\r

      \  funcs: {},\r

      \  consts: {},\r

      \  index: [],\r

      };\r\n"
    sig: const CODE
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Perlin:
    name: Perlin
    code: "const Perlin = {\r

      \  PERLIN_YWRAPB: 4,\r

      \  PERLIN_YWRAP: 1 << 4,\r

      \  PERLIN_ZWRAPB: 8,\r

      \  PERLIN_ZWRAP: 1 << 8,\r

      \  PERLIN_SIZE: 4095,\r

      \  perlin_octaves: 4,\r

      \  perlin_amp_falloff: 0.5,\r

      \  scaled_cosine: i => 0.5 * (1.0 - Math.cos(i * Math.PI)),\r

      \  perlin: null,\r

      \  lastx: 0,\r

      \  speed: 0.02,\r

      \  channels: {},\r

      }\r\n"
    sig: const Perlin
    region: game (_bau1.js)
    filename: _bau1.js
    type: const
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  config:
    name: config
    code: "const config = {\r

      \  src:
      'https://s3-us-west-2.amazonaws.com/s.cdpn.io/175711/open-peeps-sheet.png\
      ',\r

      \  rows: 15,\r

      \  cols: 7\r

      }\r\n"
    sig: const config
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  randomRange:
    name: randomRange
    code: "const randomRange = (min, max) => min + Math.random() * (max - min)\r\n"
    sig: const randomRange
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  randomIndex:
    name: randomIndex
    code: "const randomIndex = (array) => randomRange(0, array.length) | 0\r\n"
    sig: const randomIndex
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  removeFromArray:
    name: removeFromArray
    code: "const removeFromArray = (array, i) => array.splice(i, 1)[0]\r\n"
    sig: const removeFromArray
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  removeItemFromArray:
    name: removeItemFromArray
    code: "const removeItemFromArray = (array, item) => removeFromArray(array,
      array.indexOf(item))\r\n"
    sig: const removeItemFromArray
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  removeRandomFromArray:
    name: removeRandomFromArray
    code: "const removeRandomFromArray = (array) => removeFromArray(array,
      randomIndex(array))\r\n"
    sig: const removeRandomFromArray
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  getRandomFromArray:
    name: getRandomFromArray
    code: "const getRandomFromArray = (array) => (array[randomIndex(array) | 0])\r\n"
    sig: const getRandomFromArray
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  resetPeep:
    name: resetPeep
    code: "const resetPeep = ({ stage, peep }) => {\r

      \  const direction = Math.random() > 0.5 ? 1 : -1\r

      \  const offsetY = 100 - 250 *
      gsap.parseEase('power2.in')(Math.random())\r

      \  const startY = stage.height - peep.height + offsetY\r

      \  let startX\r

      \  let endX\r

      \  if (direction === 1) {\r

      \    startX = -peep.width\r

      \    endX = stage.width\r

      \    peep.scaleX = 1\r

      \  } else {\r

      \    startX = stage.width + peep.width\r

      \    endX = 0\r

      \    peep.scaleX = -1\r

      \  }\r

      \  peep.x = startX\r

      \  peep.y = startY\r

      \  peep.anchorY = startY\r

      \  return {\r

      \    startX,\r

      \    startY,\r

      \    endX\r

      \  }\r

      }\r\n"
    sig: const resetPeep
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  normalWalk:
    name: normalWalk
    code: "const normalWalk = ({ peep, props }) => {\r

      \  const {\r

      \    startX,\r

      \    startY,\r

      \    endX\r

      \  } = props\r

      \  const xDuration = 10\r

      \  const yDuration = 0.25\r

      \  const tl = gsap.timeline()\r

      \  tl.timeScale(randomRange(0.5, 1.5))\r

      \  tl.to(peep, {\r

      \    duration: xDuration,\r

      \    x: endX,\r

      \    ease: 'none'\r

      \  }, 0)\r

      \  tl.to(peep, {\r

      \    duration: yDuration,\r

      \    repeat: xDuration / yDuration,\r

      \    yoyo: true,\r

      \    y: startY - 10\r

      \  }, 0)\r

      \  return tl\r

      }\r\n"
    sig: const normalWalk
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  walks:
    name: walks
    code: "const walks = [\r

      \  normalWalk,\r

      ]\r\n"
    sig: const walks
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  img:
    name: img
    code: "const img = document.createElement('img')\r\n"
    sig: const img
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  canvas:
    name: canvas
    code: "const canvas = document.querySelector('#canvas')\r\n"
    sig: const canvas
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  cx:
    name: cx
    code: "const cx = canvas.getContext('2d')\r\n"
    sig: const cx
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  stage:
    name: stage
    code: "const stage = {\r

      \  width: 0,\r

      \  height: 0,\r

      }\r\n"
    sig: const stage
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  allPeeps:
    name: allPeeps
    code: "const allPeeps = []\r\n"
    sig: const allPeeps
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  availablePeeps:
    name: availablePeeps
    code: "const availablePeeps = []\r\n"
    sig: const availablePeeps
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
  crowd:
    name: crowd
    code: "const crowd = []\r\n"
    sig: const crowd
    region: const (crowd.js)
    filename: crowd.js
    type: const
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
cla:
  FileUploadForm:
    name: FileUploadForm
    code: "class FileUploadForm {\r

      \  constructor(dParent, title, route, onSubmit) {\r

      \    this.dParent = dParent;\r

      \    this.title = title;\r

      \    this.route = route;\r

      \    this.onSubmit = onSubmit;\r

      \    let id = this.id = getUID();\r

      \    this.uploadUrl = SERVERURL + route;\r

      \    this.createHtml(route)\r

      \  }\r

      \  bretter(){this.createHtml('bretter');}\r

      \  perlen(){this.createHtml('perlen');}\r

      \  createHtml(route){\r

      \      let elem = createElementFromHTML(`\r

      \    <div>\r

      \      <form action=\"/${route}\" enctype=\"multipart/form-data\"
      method=\"post\">\r

      \        <input type=\"file\" name=\"${route}\" accept='image/*'
      multiple>\r

      \        <input type=\"submit\" value=\"Upload\">\r

      \      </form>  \r

      \    </div>\r

      \    `);\r

      \    mAppend(this.dParent,elem);\r

      \  }\r

      }\r\n"
    sig: class FileUploadForm{}
    region: classes (boardEditor.js)
    filename: boardEditor.js
    type: cla
    fname: boardEditor.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\boardEditor.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590422.3264
    size: 1065
  FakeSocketClass:
    name: FakeSocketClass
    code: "class FakeSocketClass{\r

      \  constructor(){\r

      \    if (VerboseSocket) console.log('FAKE SOCKET!!!');\r

      \  }\r

      \  emit(){if (VerboseSocket) console.log('client
      emits',...arguments);}\r

      }\r\n"
    sig: class FakeSocketClass{}
    region: prelim (socket.js)
    filename: socket.js
    type: cla
    fname: socket.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\socket.js
    datetime: 2021-08-18-18-29
    timestamp: 1629336590431.3264
    size: 4968
  Karte:
    name: Karte
    code: "class Karte {\r

      \  static random(sym = 'bee', h = 220) {\r

      \    return Karte.get(sym, h);\r

      \    return Card52.random();\r

      \  }\r

      \  static c1(info, n, fg, h, w) {\r

      \    let d = mDiv();\r

      \    let svg = mgTag('svg', d, { class: 'card', face: '2C', height:
      '100%', width: '100%', preserveAspectRatio: 'none', viewBox: \"-120 -168
      240 336\" });\r

      \    let g = mgTag('g', svg);\r

      \    let rect = mgTag('rect', g, { width: 239, height: 335, x: -120,
      y: 168, rx: 12, ry: 12, fill: \"white\", stroke: \"black\" });\r

      \    let t = mgTag('text', g, { 'text-anchor': \"middle\",
      'dominant-baseline': \"middle\", x: 0, y: 0, fill: fg }, { fz: 1000 },
      'HALLO');\r

      \    if (nundef(w)) w = h * .7;\r

      \    if (isdef(h) || isdef(w)) { mSize(d, w, h); }\r

      \    console.log('d', d)\r

      \    return { key: getUID(), div: d, w: w, h: h, faceUp: true }; \r

      \  }\r

      \  static card(info, n, fg, h, w) {\r

      \    let x = `\r

      \    <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \      face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \      <symbol id=\"${fg}${n}\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \        <text text-anchor=\"middle\" dominant-baseline=\"middle\"
      x=\"0\" y=\"0\" fill=\"${fg}\"
      style=\"font-size:1000px;font-weight:bold;\">${n}</text>        \r

      \      </symbol>\r

      \      <symbol id=\"${info.E}\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \        <text text-anchor=\"middle\" dominant-baseline=\"middle\"
      x=\"0\" y=\"-150\" fill=\"red\"
      style=\"font-size:750px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \      </symbol>\r

      \      <rect width=\"239\" height=\"335\" x=\"-119.5\" y=\"-167.5\"
      rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>`;\r

      \    let h1 = { xs: 24, s: 27, m: 42, l: 60, xl: 70, xxl: 100 };\r

      \    let left = [0, 50, 100, 120];\r

      \    let upperLeftNumber = `<use xlink:href=\"#${fg}${n}\"
      height=\"42\" x=\"-120\" y=\"-156\"></use>`\r

      \      `<use xlink:href=\"#${info.E}\" height=\"26.769\"
      x=\"-111.784\" y=\"-119\"></use>\r

      \      <use xlink:href=\"#${info.E}\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \      <g transform=\"rotate(180)\">\r

      \        <use xlink:href=\"#${fg}${n}\" height=\"42\" x=\"-120\"
      y=\"-156\"></use>\r

      \        <use xlink:href=\"#${info.E}\" height=\"26.769\"
      x=\"-111.784\" y=\"-119\"></use>\r

      \        <use xlink:href=\"#${info.E}\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \      </g>\r

      \    </svg>`;\r

      \    let svgCode = x;\r

      \    svgCode = '<div>' + svgCode + '</div>';\r

      \    let el = mCreateFrom(svgCode);\r

      \    if (nundef(w)) w = h * .7;\r

      \    if (isdef(h) || isdef(w)) { mSize(el, w, h); }\r

      \    return { key: getUID(), div: el, w: w, h: h, faceUp: true }; \r

      \  }\r

      \  static get52(suit, rank, fg, bg, h, w, faceUp) {\r

      \    let key = suit.toLowerCase();\r

      \    let di = {\r

      \      h: 'hearts', s: 'spades', p: 'spades', c: 'clubs', t:
      'clubs', d: 'diamonds', k: 'diamonds',\r

      \      j: 'joker', '*': 'joker'\r

      \    };\r

      \    if (isdef(di[key])) key = di[key];\r

      \    let di2 = { spades: 'spade suit', hearts: 'heart suit',
      diamonds: 'diamond suit', clubs: 'club suit' };\r

      \    if (isdef(di2[key])) key = di2[key];\r

      \    let info = Syms[key];\r

      \    return Karte.get(key, 300, rank, fg);\r

      \    let fz = info.family == 'emoNoto' ? 750 : 1000;\r

      \  }\r

      \  static get(sym = 'bee', h = 110, n = 2, fg = 'indigo', w) {\r

      \    let info = Syms[sym];\r

      \    n = 2;\r

      \    ensureColorNames();\r

      \    if (nundef(fg)) fg = sym == 'spades' || sym == 'clubs' ?
      'black' : sym == 'hearts' || sym == 'diamonds' ? 'red' :
      chooseRandom(Object.keys(ColorNames)); \r

      \    let cardKey = info.family == 'emoNoto' ? 'card0' : 'card52';\r

      \    let basic = {\r

      \      card0: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <symbol id=\"${fg}${n}\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"middle\" x=\"0\" y=\"0\" fill=\"${fg}\"
      style=\"font-size:1000px;font-weight:bold;\">${n}</text>        \r

      \          </symbol>\r

      \          <symbol id=\"${info.E}\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"middle\" x=\"0\" y=\"-150\" fill=\"red\"
      style=\"font-size:750px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          </symbol>\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <use xlink:href=\"#${fg}${n}\" height=\"42\" x=\"-118\"
      y=\"-156\"></use>\r

      \          <use xlink:href=\"#${info.E}\" height=\"26.769\"
      x=\"-111.784\" y=\"-119\"></use>\r

      \          <use xlink:href=\"#${info.E}\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \          <g transform=\"rotate(180)\">\r

      \            <use xlink:href=\"#${fg}${n}\" height=\"42\" x=\"-118\"
      y=\"-156\"></use>\r

      \            <use xlink:href=\"#${info.E}\" height=\"26.769\"
      x=\"-111.784\" y=\"-119\"></use>\r

      \            <use xlink:href=\"#${info.E}\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \          </g>\r

      \        </svg>`,\r

      \      card52: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <symbol id=\"${fg}${n}\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"middle\" x=\"0\" y=\"0\" fill=\"${fg}\"
      style=\"font-size:1000px;font-family:opensans;\">${n}</text>        \r

      \          </symbol>\r

      \          <symbol id=\"${info.E}\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"middle\" x=\"0\" y=\"50\" fill=\"${fg}\"
      style=\"font-size:800px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          </symbol>\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <use xlink:href=\"#${fg}${n}\" height=\"40\" x=\"-116.4\"
      y=\"-156\"></use>\r

      \          <use xlink:href=\"#${info.E}\" height=\"26.769\"
      x=\"-111.784\" y=\"-119\"></use>\r

      \          <use xlink:href=\"#${info.E}\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \          <g transform=\"rotate(180)\">\r

      \            <use xlink:href=\"#${fg}${n}\" height=\"40\"
      x=\"-116.4\" y=\"-156\"></use>\r

      \            <use xlink:href=\"#${info.E}\" height=\"26.769\"
      x=\"-111.784\" y=\"-119\"></use>\r

      \            <use xlink:href=\"#${info.E}\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \          </g>\r

      \        </svg>`,\r

      \      card7: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <symbol id=\"VC2\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"middle\" x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:750px;font-family:opensans;\">A</text>        \r

      \          </symbol>\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <use xlink:href=\"#VC2\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \          <use xlink:href=\"#VC2\" height=\"26.769\" x=\"-111.784\"
      y=\"-119\"></use>\r

      \          <use xlink:href=\"#VC2\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \          <g transform=\"rotate(180)\">\r

      \            <use xlink:href=\"#VC2\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \            <use xlink:href=\"#VC2\" height=\"26.769\"
      x=\"-111.784\" y=\"-119\"></use>\r

      \            <use xlink:href=\"#VC2\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \          </g>\r

      \        </svg>`,\r

      \      card6: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <symbol id=\"VC2\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"middle\" x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:750px;font-family:opensans;\">A</text>        \r

      \          </symbol>\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <use xlink:href=\"#VC2\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \        </svg>`,\r

      \      card5: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <symbol id=\"SC2\" viewBox=\"-600 -600 1200 1200\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <path d=\"M30 150C35 385 85 400 130 500L-130 500C-85
      400 -35 385 -30 150A10 10 0 0 0 -50 150A210 210 0 1 1 -124 -51A10 10 0 0 0
      -110 -65A230 230 0 1 1 110 -65A10 10 0 0 0 124 -51A210 210 0 1 1 50 150A10
      10 0 0 0 30 150Z\" \r

      \              fill=\"black\">\r

      \            </path>\r

      \          </symbol>\r

      \          <symbol id=\"VC2\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <path d=\"M-225 -225C-245 -265 -200 -460 0 -460C 200
      -460 225 -325 225 -225C225 -25 -225 160 -225 460L225 460L225 300\" \r

      \              stroke=\"black\" stroke-width=\"80\"
      stroke-linecap=\"square\" stroke-miterlimit=\"1.5\" fill=\"none\">\r

      \            </path>\r

      \          </symbol>\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <use xlink:href=\"#VC2\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \          <use xlink:href=\"#SC2\" height=\"26.769\" x=\"-111.784\"
      y=\"-119\"></use>\r

      \          <use xlink:href=\"#SC2\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \          <g transform=\"rotate(180)\">\r

      \            <use xlink:href=\"#VC2\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \            <use xlink:href=\"#SC2\" height=\"26.769\"
      x=\"-111.784\" y=\"-119\"></use>\r

      \            <use xlink:href=\"#SC2\" height=\"70\" x=\"-35\"
      y=\"-135.588\"></use>\r

      \          </g>\r

      \          <text text-anchor=\"middle\" dominant-baseline=\"middle\"
      x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:16px;font-family:opensans;\">I love
      SVG!</text>        \r

      \          <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"blue\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \          <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"green\"
      transform=\"rotate(180)\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \        </svg>`,\r

      \      card4: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <symbol id=\"VC2\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <text dominant-baseline=\"hanging\"
      text-anchor=\"middle\" x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:600px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          </symbol>\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <use xlink:href=\"#VC2\" height=\"32\" x=\"-114.4\"
      y=\"-156\" dominant-baseline=\"hanging\" text-anchor=\"middle\" ></use>\r

      \          <g transform=\"rotate(180)\">\r

      \            <use xlink:href=\"#VC2\" height=\"32\" x=\"-114.4\"
      y=\"-156\" dominant-baseline=\"hanging\" text-anchor=\"middle\" ></use>\r

      \          </g>\r

      \          <text dominant-baseline=\"hanging\"
      text-anchor=\"middle\" x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:600px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          <text text-anchor=\"middle\" dominant-baseline=\"middle\"
      x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:16px;font-family:opensans;\">I love
      SVG!</text>        \r

      \          <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"blue\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \          <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"green\"
      transform=\"rotate(180)\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \        </svg>`,\r

      \      card3: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <text dominant-baseline=\"hanging\" x=\"-114\" y=\"-156\"
      fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          <text  text-anchor=\"end\" dominant-baseline=\"hanging\"
      x=\"114\" y=\"-156\" fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"blue\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \          <text text-anchor=\"middle\" dominant-baseline=\"middle\"
      x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:16px;font-family:opensans;\">I love
      SVG!</text>        \r

      \          <g transform=\"rotate(180)\">\r

      \            <text dominant-baseline=\"hanging\" x=\"-114\"
      y=\"-156\" fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \            <text  text-anchor=\"end\"
      dominant-baseline=\"hanging\" x=\"114\" y=\"-156\" fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"blue\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \          </g>\r

      \        </svg>`,\r

      \      card2: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <symbol id=\"VC2\" viewBox=\"-500 -500 1000 1000\"
      preserveAspectRatio=\"xMinYMid\">\r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"middle\" x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:500px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          </symbol>\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <text dominant-baseline=\"hanging\" x=\"-114\" y=\"-156\"
      fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          <text  text-anchor=\"end\" dominant-baseline=\"hanging\"
      x=\"114\" y=\"-156\" fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \          <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"blue\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \          <text text-anchor=\"middle\" dominant-baseline=\"middle\"
      x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:16px;font-family:opensans;\">I love
      SVG!</text>        \r

      \          <g transform=\"rotate(180)\">\r

      \            <text dominant-baseline=\"hanging\" x=\"-114\"
      y=\"-156\" fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \            <text  text-anchor=\"end\"
      dominant-baseline=\"hanging\" x=\"114\" y=\"-156\" fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"blue\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \          </g>\r

      \        </svg>`,\r

      \      card1: `\r

      \        <svg xmlns=\"http://www.w3.org/2000/svg\"
      xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"card\" \r

      \        face=\"2C\" height=\"100%\" preserveAspectRatio=\"none\"
      viewBox=\"-120 -168 240 336\" width=\"100%\">\r

      \          <symbol id=\"VC2\">\r

      \          </symbol>\r

      \          <rect width=\"239\" height=\"335\" x=\"-119.5\"
      y=\"-167.5\" rx=\"12\" ry=\"12\" fill=\"white\" stroke=\"black\"></rect>\r

      \          <use xlink:href=\"#VC2\" height=\"32\" x=\"-114.4\"
      y=\"-156\"></use>\r

      \          <use xlink:href=\"#VC2\" height=\"32\" x=\"0\"
      y=\"0\"></use>\r

      \          <text text-anchor=\"middle\" dominant-baseline=\"middle\"
      x=\"0\" y=\"0\" fill=\"red\"
      style=\"font-size:16px;font-family:opensans;\">I love
      SVG!</text>        \r

      \          <g transform=\"rotate(180)\">\r

      \            <text dominant-baseline=\"hanging\" x=\"-114\"
      y=\"-156\" fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \            <text text-anchor=\"end\" dominant-baseline=\"hanging\"
      x=\"114\" y=\"-156\" fill=\"red\"
      style=\"font-size:30px;font-family:${info.family};\">${info.text}</text>        \
      \r

      \            <text text-anchor=\"middle\"
      dominant-baseline=\"hanging\" x=\"0\" y=\"-156\" fill=\"blue\"
      style=\"font-size:16px;font-family:opensans;\">YES</text>        \r

      \          </g>\r

      \        </svg>`\r

      \    };\r

      \    let svgCode = basic[cardKey];\r

      \    svgCode = '<div>' + svgCode + '</div>';\r

      \    let el = mCreateFrom(svgCode);\r

      \    if (nundef(w)) w = h * .7;\r

      \    if (isdef(h) || isdef(w)) { mSize(el, w, h); }\r

      \    return { key: getUID(), div: el, w: w, h: h, faceUp: true }; \r

      \  }\r

      }\r\n"
    sig: class Karte{}
    region: cards (legacy.js)
    filename: legacy.js
    type: cla
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  AGraph:
    name: AGraph
    code: "class AGraph {\r

      \  constructor() {\r

      \    this.init(...arguments);\r

      \    this.posDict = {};\r

      \  }\r

      \  init() {\r

      \    let defOptions = {\r

      \      maxZoom: 1,\r

      \      minZoom: .001,\r

      \      motionBlur: false,\r

      \      zoomingEnabled: false,\r

      \      userZoomingEnabled: false,\r

      \      panningEnabled: false,\r

      \      userPanningEnabled: false,\r

      \      boxSelectionEnabled: false,\r

      \      layout: { name: 'preset' },\r

      \      elements: [],\r

      \    };\r

      \    this.cy = cytoscape(defOptions);\r

      \  }\r

      \  clear() { this.cy.destroy(); }\r

      \  //#region access and algos\r

      \  getComponents() { return this.cy.elements().components(); }\r

      \  getComponentIds() { return this.cy.elements().components().map(x
      => x.id()); }\r

      \  getCommonEdgeId(nid1, nid2) { return nid1 + '_' + nid2; }\r

      \  getNumComponents() { return
      this.cy.elements().components().length; }\r

      \  getNode(id) { return this.cy.getElementById(id); }\r

      \  getEdge(id) { return this.cy.getElementById(id); }\r

      \  getNodes() { return this.cy.nodes(); }\r

      \  getNodeIds() { return this.cy.nodes().map(x => x.id()); }\r

      \  getNodeData() { return this.cy.nodes().map(x => x.data()); }\r

      \  getNodePositions() { return this.cy.nodes.map(x => x.position());
      }\r

      \  getEdges() { return this.cy.edges(); }\r

      \  getEdgeIds() { return this.cy.edges().map(x => x.id()); }\r

      \  getPosition(id) {\r

      \    let node = this.getNode(id);\r

      \    let pos = node.renderedPosition();\r

      \    return pos;\r

      \  }\r

      \  getSize(id) {\r

      \    let node = this.getNode(id);\r

      \    let pos = node.bb();\r

      \    return pos;\r

      \  }\r

      \  getProp(id, prop) { return this.cy.getElementById(id).data(prop);
      }\r

      \  getDegree(id) { return this.cy.getElementById(id).degree(); }\r

      \  getNodeWithMaxDegree(idlist) {\r

      \    if (nundef(idlist)) idlist =
      this.cy.elements().filter('node').map(x => x.data().id);\r

      \    let imax = arrMinMax(idlist, x => this.getDegree(x)).imax;\r

      \    let id = idlist[imax];\r

      \    return id;\r

      \  }\r

      \  getShortestPathsFrom(id) { let res =
      this.cy.elements().dijkstra('#' + id); return res; }\r

      \  getShortestPathFromTo(nid1, nid2) {\r

      \    let funcs = this.dijkstra = this.getShortestPathsFrom(nid1);\r

      \    let path = funcs.pathTo('#' + nid2);\r

      \    return path;\r

      \  }\r

      \  getLengthOfShortestPath(nid1, nid2) {\r

      \    let funcs = this.dijkstra = this.getShortestPathsFrom(nid1);\r

      \    let len = funcs.distanceTo('#' + nid2);\r

      \    return len;\r

      \  }\r

      \  setPositionData(prop = 'center') {\r

      \    let ids = this.getNodeIds();\r

      \    for (const id of ids) {\r

      \      let pos = this.getProp(id, prop);\r

      \      if (isdef(pos)) this.setPosition(id, pos.x, pos.y);\r

      \      else return false;\r

      \    }\r

      \    return true;\r

      \  }\r

      \  sortNodesByDegree(idlist, descending = true) {\r

      \    if (nundef(idlist)) idlist = this.cy.nodes.map(x =>
      x.data().id);\r

      \    let nodes = idlist.map(x => this.getNode(x));\r

      \    for (const n of nodes) {\r

      \      n.degree = this.getDegree(n.id());\r

      \    }\r

      \    if (descending) sortByDescending(nodes, 'degree'); else
      sortBy(nodes, 'degree');\r

      \    return nodes;\r

      \  }\r

      \  storeCurrentPositions(prop = 'center') {\r

      \    for (const n of this.getNodes()) {\r

      \      let id = n.id();\r

      \      let pos = this.getPosition(id);\r

      \      this.setProp(id, prop, pos);\r

      \    }\r

      \  }\r

      \  //#endregion\r

      \  //#region add/remove nodes, edges\r

      \  addNode(data, coords) {\r

      \    if (nundef(data)) data = {};\r

      \    if (nundef(data.id)) data.id = getFruid();\r

      \    if (isdef(coords)) {\r

      \      coords.x -= this.cy.pan().x;\r

      \      coords.y -= this.cy.pan().y;\r

      \    } else { coords = { x: 0, y: 0 }; }\r

      \    var ele = this.cy.add({\r

      \      group: 'nodes',\r

      \      data: data,\r

      \      position: coords\r

      \    });\r

      \    return ele.id();\r

      \  }\r

      \  addNodes(n, datalist, coordlist) {\r

      \    let ids = [];\r

      \    if (nundef(datalist)) datalist = new Array(n).map(x => ({ id:
      getFruid() }));\r

      \    if (nundef(coordlist)) coordlist = new Array(n).map(x => ({
      coords: { x: 0, y: 0 } }));\r

      \    for (let i = 0; i < n; i++) {\r

      \      let id = this.addNode(datalist[i], coordlist[i]);\r

      \      ids.push(id);\r

      \    }\r

      \    return ids;\r

      \  }\r

      \  addEdge(nid1, nid2, data) {\r

      \    if (nundef(data)) data = {};\r

      \    data.id = this.getCommonEdgeId(nid1, nid2);\r

      \    data.source = nid1;\r

      \    data.target = nid2;\r

      \    var ele = this.cy.add({\r

      \      group: 'edges',\r

      \      data: data,\r

      \    });\r

      \    return ele.id();\r

      \  }\r

      \  addEdges(nOrNodePairList) {\r

      \    if (isNumber(nOrNodePairList)) {\r

      \      let nids = this.getNodeIds();\r

      \      let prod = arrPairs(nids);\r

      \      nOrNodePairList = choose(prod, nOrNodePairList);\r

      \    }\r

      \    let res = [];\r

      \    for (const pair of nOrNodePairList) {\r

      \      res.push(this.addEdge(pair[0], pair[1]));\r

      \    }\r

      \    return res;\r

      \  }\r

      \  removeNode(node) { this.removeElement(node); return
      this.getNodeIds(); }\r

      \  removeEdge(edge) { this.removeElement(edge); return
      this.getEdgeIds(); }\r

      \  removeElement(ne) { if (!isString(ne)) ne = ne.id();
      this.cy.getElementById(ne).remove(); }\r

      \  //#endregion\r

      \  //#region modify nodes, edges (data, position...)\r

      \  setPosition(id, x, y) { this.cy.getElementById(id).position({ x:
      x, y: y }); }\r

      \  setProp(id, prop, val) { this.cy.getElementById(id).data(prop,
      val); }\r

      \  //#endregion\r

      }\r\n"
    sig: class AGraph{}
    region: classes (_bau1.js)
    filename: _bau1.js
    type: cla
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  UIGraph:
    name: UIGraph
    code: "class UIGraph extends AGraph {\r

      \  init(dParent, styles = {}) {\r

      \    let defOptions = {\r

      \      maxZoom: 1,\r

      \      minZoom: .001,\r

      \      motionBlur: false,\r

      \      wheelSensitivity: 0.05,\r

      \      zoomingEnabled: true,\r

      \      userZoomingEnabled: true,\r

      \      panningEnabled: true,\r

      \      userPanningEnabled: true,\r

      \      boxSelectionEnabled: false,\r

      \      elements: [],\r

      \    };\r

      \    this.id = getUID();\r

      \    let dOuter = mDiv(dParent, styles.outer, this.id);\r

      \    let gStyles = valf(styles.inner, { w: 640, h: 420 });\r

      \    let dContainer = mDiv(dOuter, { position: 'relative', w:
      gStyles.w, h: gStyles.h, align: 'left' });\r

      \    let styleDict = {\r

      \      node: { 'label': 'data(label)', width: 25, height: 25,
      'background-color': 'red', color: \"#fff\", \"text-valign\": \"center\",
      \"text-halign\": \"center\" },\r

      \      edge: { width: 2, 'line-color': 'silver', 'curve-style':
      'haystack', },\r

      \      'node.high': { 'background-color': 'yellow' },\r

      \      'node.trans': { opacity: '0.5' },\r

      \    }\r

      \    for (const ks of ['node', 'edge', 'node.high', 'node.trans'])
      {\r

      \      if (isdef(styles[ks])) {\r

      \        let mStyles = styles[ks];\r

      \        let cyStyles = translateStylesToCy(mStyles, ks);\r

      \        copyKeys(cyStyles, styleDict[ks]);\r

      \      }\r

      \    }\r

      \    let cyStyle = [];\r

      \    for (const k in styleDict) { cyStyle.push({ selector: k, style:
      styleDict[k] }); }\r

      \    let options = { container: dContainer, style: cyStyle };\r

      \    copyKeys(options, defOptions);\r

      \    this.cy = cytoscape(defOptions);\r

      \    iAdd(this, { div: dOuter, dCy: dContainer });\r

      \  }\r

      \  //#region layouts\r

      \  hex(rows, cols, wCell, hCell) {\r

      \    let centers = this.hexPositions = getCentersFromRowsCols('hex',
      rows, cols, wCell, hCell)[0];\r

      \    this.storePositions('hex', centers);\r

      \    this.storePositions('preset', centers);\r

      \    this.retrievePositions('hex');\r

      \    this.cy.layout({ name: 'preset' }).run();\r

      \    this.center();\r

      \  }\r

      \  hex1(rows, cols, wCell, hCell) {\r

      \    let centers = this.hexPositions =
      getCentersFromRowsCols('hex1', rows, cols, wCell, hCell)[0];\r

      \    this.storePositions('hex1', centers);\r

      \    this.storePositions('preset', centers);\r

      \    let nodes = this.getNodes();\r

      \    for (let i = 0; i < nodes.length; i++) {\r

      \      let node = nodes[i];\r

      \      let center = centers[i];\r

      \      node.data('center', center);\r

      \    }\r

      \    this.retrievePositions('hex1');\r

      \    this.cy.layout({ name: 'preset' }).run();\r

      \    this.center();\r

      \  }\r

      \  breadthfirst() { this.cy.layout({ name: 'breadthfirst', animate:
      true }).run(); }\r

      \  circle() { this.cy.layout({ name: 'circle', animate: 'end'
      }).run(); }\r

      \  concentric() { this.cy.layout({ name: 'concentric', animate: true
      }).run(); }\r

      \  comcola() {\r

      \    let defaults = {\r

      \      name: 'cola',\r

      \      animate: true,\r

      \      refresh: 1,\r

      \      maxSimulationTime: 4000,\r

      \      ungrabifyWhileSimulating: false,\r

      \      fit: true,\r

      \      padding: 30,\r

      \      boundingBox: undefined,\r

      \      nodeDimensionsIncludeLabels: false,\r

      \      ready: function () { },\r

      \      stop: function () { },\r

      \      randomize: false,\r

      \      avoidOverlap: true,\r

      \      handleDisconnected: true,\r

      \      convergenceThreshold: 0.01,\r

      \      nodeSpacing: function (node) { return 10; },\r

      \      flow: undefined,\r

      \      alignment: undefined,\r

      \      gapInequalities: undefined,\r

      \      edgeLength: undefined,\r

      \      edgeSymDiffLength: undefined,\r

      \      edgeJaccardLength: undefined,\r

      \      unconstrIter: undefined,\r

      \      userConstIter: undefined,\r

      \      allConstIter: undefined,\r

      \      infinite: false\r

      \    };\r

      \    let options = {\r

      \      name: 'cola',\r

      \      convergenceThreshold: 100,\r

      \      boundingBox: { x1: 20, y1: 20, w: 200, h: 200 },\r

      \    };\r

      \    copyKeys(options, defaults);\r

      \    console.log(defaults.boundingBox)\r

      \    this.cy.layout(defaults).run();\r

      \  }\r

      \  cola() { this.cy.layout({ name: 'cola' }).run(); }\r

      \  cose() { this.cy.layout({ name: 'cose', animate: 'end' }).run();
      }\r

      \  euler() { this.cy.layout({ name: 'euler', fit: true, padding: 25,
      animate: 'end' }).run(); }\r

      \  fcose() {\r

      \    var defaultOptions = {\r

      \      quality: \"default\",\r

      \      randomize: true,\r

      \      animate: true,\r

      \      animationDuration: 500,\r

      \      animationEasing: undefined,\r

      \      fit: true,\r

      \      padding: 30,\r

      \      nodeDimensionsIncludeLabels: false,\r

      \      uniformNodeDimensions: false,\r

      \      packComponents: true,\r

      \      step: \"all\",\r

      \      /* spectral layout options */\r

      \      samplingType: true,\r

      \      sampleSize: 25,\r

      \      nodeSeparation: 75,\r

      \      piTol: 0.0000001,\r

      \      /* incremental layout options */\r

      \      nodeRepulsion: node => 4500,\r

      \      idealEdgeLength: edge => 50,\r

      \      edgeElasticity: edge => 0.45,\r

      \      nestingFactor: 0.1,\r

      \      numIter: 2500,\r

      \      tile: true,\r

      \      tilingPaddingVertical: 10,\r

      \      tilingPaddingHorizontal: 10,\r

      \      gravity: 0.25,\r

      \      gravityRangeCompound: 1.5,\r

      \      gravityCompound: 1.0,\r

      \      gravityRange: 3.8,\r

      \      initialEnergyOnIncremental: 0.3,\r

      \      /* constraint options */\r

      \      fixedNodeConstraint: undefined,\r

      \      alignmentConstraint: undefined,\r

      \      relativePlacementConstraint: undefined,\r

      \      /* layout event callbacks */\r

      \      ready: () => { },\r

      \      stop: () => { },\r

      \      name: 'fcose',\r

      \    };\r

      \    this.cy.layout(defaultOptions).run();\r

      \  }\r

      \  gridLayout() { this.cy.layout({ name: 'grid', animate: true
      }).run(); }\r

      \  presetLayout_dep() {\r

      \    let hasCenterProp = this.setPositionData();\r

      \    if (!hasCenterProp) {\r

      \      console.log('no positions are preset: store first!');\r

      \    } else {\r

      \      let options = {\r

      \        name: 'preset',\r

      \        positions: undefined,\r

      \        zoom: undefined,\r

      \        pan: undefined,\r

      \        fit: true,\r

      \        padding: 30,\r

      \        animate: true,\r

      \        animationDuration: 500,\r

      \        animationEasing: undefined,\r

      \        animateFilter: function (node, i) { return true; },\r

      \        ready: undefined,\r

      \        stop: undefined,\r

      \        transform: function (node, position) { return position; }\r

      \      };\r

      \      this.cy.layout(options);\r

      \      this.reset();\r

      \    }\r

      \  }\r

      \  presetLayout() {\r

      \    this.retrievePositions('prest');\r

      \    this.cy.layout({ name: 'preset' }).run();\r

      \    this.center();\r

      \  }\r

      \  randomLayout() { this.cy.layout({ name: 'random', animate: 'true'
      }).run(); }\r

      \  klay() {\r

      \    let klayDefaults = {\r

      \      addUnnecessaryBendpoints: false,\r

      \      aspectRatio: 1.6,\r

      \      borderSpacing: 20,\r

      \      compactComponents: false,\r

      \      crossingMinimization: 'LAYER_SWEEP',\r

      \      /* LAYER_SWEEP The layer sweep algorithm iterates multiple
      times over the layers, trying to find node orderings that minimize the
      number of crossings. The algorithm uses randomization to increase the odds
      of finding a good result. To improve its results, consider increasing the
      Thoroughness option, which influences the number of iterations done. The
      Randomization seed also influences results.\r

      \      INTERACTIVE Orders the nodes of each layer by comparing their
      positions before the layout algorithm was started. The idea is that the
      relative order of nodes as it was before layout was applied is not
      changed. This of course requires valid positions for all nodes to have
      been set on the input graph before calling the layout algorithm. The
      interactive layer sweep algorithm uses the Interactive Reference Point
      option to determine which reference point of nodes are used to compare
      positions. */\r

      \      cycleBreaking: 'GREEDY',\r

      \      /* GREEDY This algorithm reverses edges greedily. The
      algorithm tries to avoid edges that have the Priority property set.\r

      \      INTERACTIVE The interactive algorithm tries to reverse edges
      that already pointed leftwards in the input graph. This requires node and
      port coordinates to have been set to sensible values.*/\r

      \      direction: 'UNDEFINED',\r

      \      /* UNDEFINED, RIGHT, LEFT, DOWN, UP */\r

      \      edgeRouting: 'ORTHOGONAL',\r

      \      edgeSpacingFactor: 0.5,\r

      \      feedbackEdges: false,\r

      \      fixedAlignment: 'NONE',\r

      \      /* NONE Chooses the smallest layout from the four possible
      candidates.\r

      \      LEFTUP Chooses the left-up candidate from the four possible
      candidates.\r

      \      RIGHTUP Chooses the right-up candidate from the four possible
      candidates.\r

      \      LEFTDOWN Chooses the left-down candidate from the four
      possible candidates.\r

      \      RIGHTDOWN Chooses the right-down candidate from the four
      possible candidates.\r

      \      BALANCED Creates a balanced layout from the four possible
      candidates. */\r

      \      inLayerSpacingFactor: 1.0,\r

      \      layoutHierarchy: false,\r

      \      linearSegmentsDeflectionDampening: 0.3,\r

      \      mergeEdges: false,\r

      \      mergeHierarchyCrossingEdges: true,\r

      \      nodeLayering: 'NETWORK_SIMPLEX',\r

      \      /* NETWORK_SIMPLEX This algorithm tries to minimize the
      length of edges. This is the most computationally intensive algorithm. The
      number of iterations after which it aborts if it hasn't found a result yet
      can be set with the Maximal Iterations option.\r

      \      LONGEST_PATH A very simple algorithm that distributes nodes
      along their longest path to a sink node.\r

      \      INTERACTIVE Distributes the nodes into layers by comparing
      their positions before the layout algorithm was started. The idea is that
      the relative horizontal order of nodes as it was before layout was applied
      is not changed. This of course requires valid positions for all nodes to
      have been set on the input graph before calling the layout algorithm. The
      interactive node layering algorithm uses the Interactive Reference Point
      option to determine which reference point of nodes are used to compare
      positions. */\r

      \      nodePlacement: 'BRANDES_KOEPF',\r

      \      /* BRANDES_KOEPF Minimizes the number of edge bends at the
      expense of diagram size: diagrams drawn with this algorithm are usually
      higher than diagrams drawn with other algorithms.\r

      \      LINEAR_SEGMENTS Computes a balanced placement.\r

      \      INTERACTIVE Tries to keep the preset y coordinates of nodes
      from the original layout. For dummy nodes, a guess is made to infer their
      coordinates. Requires the other interactive phase implementations to have
      run as well.\r

      \      SIMPLE Minimizes the area at the expense of... well, pretty
      much everything else. */\r

      \      randomizationSeed: 1,\r

      \      routeSelfLoopInside: false,\r

      \      separateConnectedComponents: true,\r

      \      spacing: 20,\r

      \      thoroughness: 7\r

      \    };\r

      \    var options = {\r

      \      nodeDimensionsIncludeLabels: false,\r

      \      fit: true,\r

      \      padding: 20,\r

      \      animate: true,\r

      \      animateFilter: function (node, i) { return true; },\r

      \      animationDuration: 500,\r

      \      animationEasing: undefined,\r

      \      transform: function (node, pos) { return pos; },\r

      \      ready: this.reset.bind(this),\r

      \      stop: undefined,\r

      \      klay: {\r

      \        addUnnecessaryBendpoints: false,\r

      \        aspectRatio: 1.6,\r

      \        borderSpacing: 20,\r

      \        compactComponents: false,\r

      \        crossingMinimization: 'LAYER_SWEEP',\r

      \        cycleBreaking: 'GREEDY',\r

      \        direction: 'UNDEFINED',\r

      \        edgeRouting: 'ORTHOGONAL',\r

      \        edgeSpacingFactor: 0.5,\r

      \        feedbackEdges: false,\r

      \        fixedAlignment: 'NONE',\r

      \        inLayerSpacingFactor: 1.0,\r

      \        layoutHierarchy: false,\r

      \        linearSegmentsDeflectionDampening: 0.3,\r

      \        mergeEdges: false,\r

      \        mergeHierarchyCrossingEdges: true,\r

      \        nodeLayering: 'NETWORK_SIMPLEX',\r

      \        nodePlacement: 'INTERACTIVE',\r

      \        /* BRANDES_KOEPF Minimizes the number of edge bends at the
      expense of diagram size: diagrams drawn with this algorithm are usually
      higher than diagrams drawn with other algorithms.\r

      \        LINEAR_SEGMENTS Computes a balanced placement.\r

      \        INTERACTIVE Tries to keep the preset y coordinates of nodes
      from the original layout. For dummy nodes, a guess is made to infer their
      coordinates. Requires the other interactive phase implementations to have
      run as well.\r

      \        SIMPLE Minimizes the area at the expense of... well, pretty
      much everything else. */\r

      \        randomizationSeed: 1,\r

      \        routeSelfLoopInside: false,\r

      \        separateConnectedComponents: true,\r

      \        spacing: 20,\r

      \        thoroughness: 3\r

      \      },\r

      \      name: 'klay',\r

      \      priority: function (edge) { return null; },\r

      \    };\r

      \    this.cy.layout(options).run();\r

      \  }\r

      \  retrievePositions(key) {\r

      \    if (nundef(key)) key = 'prest';\r

      \    let di = this.posDict[key];\r

      \    for (const n of this.getNodes()) {\r

      \      let id = n.id();\r

      \      let pos = di[id];\r

      \      if (isdef(pos)) this.setPosition(id, pos.x, pos.y);\r

      \    }\r

      \  }\r

      \  storePositions(key, poslist = []) {\r

      \    if (nundef(key)) key = 'prest';\r

      \    this.posDict[key] = {};\r

      \    let i = 0;\r

      \    for (const n of this.getNodes()) {\r

      \      let id = n.id();\r

      \      let pos = valf(poslist[i], this.getPosition(id));\r

      \      i += 1;\r

      \      this.posDict[key][id] = pos;\r

      \    }\r

      \  }\r

      \  storeSizes(key, poslist = []) {\r

      \    if (nundef(key)) key = 'size';\r

      \    this.posDict[key] = {};\r

      \    let i = 0;\r

      \    for (const n of this.getNodes()) {\r

      \      let id = n.id();\r

      \      let pos = valf(poslist[i], this.getSize(id));\r

      \      i += 1;\r

      \      this.posDict[key][id] = pos;\r

      \    }\r

      \  }\r

      \  //#endregion\r

      \  //#region zoom pan fit center\r

      \  fit() { this.cy.fit(); }\r

      \  center() { this.cy.center(); }\r

      \  reset() { this.pan0(); this.zoom1(); this.center(); this.fit();
      }\r

      \  pan0() { this.cy.pan({ x: 0, y: 0 }); }\r

      \  zoom1() { this.cy.zoom(1); }\r

      \  isPan() { return this.cy.panningEnabled(); }\r

      \  isZoom() { return this.cy.zoomingEnabled(); }\r

      \  enablePanZoom() { this.pan(true); this.zoom(true); }\r

      \  pan(isOn, reset = true) {\r

      \    this.cy.panningEnabled(isOn);\r

      \    this.cy.userPanningEnabled(isOn);\r

      \    if (!isOn && reset) { this.pan0(); this.center(); }\r

      \  }\r

      \  zoom(isOn, minZoom = .25, maxZoom = 1, reset = true) {\r

      \    this.cy.zoomingEnabled(isOn);\r

      \    this.cy.userZoomingEnabled(isOn);\r

      \    if (!isOn && reset) { this.zoom1(); this.center(); }\r

      \    else if (isOn) { this.cy.minZoom(minZoom);
      this.cy.maxZoom(maxZoom); }\r

      \  }\r

      \  //#endregion\r

      \  setSizeToContent() {\r

      \    this.cy.zoomingEnabled(false);\r

      \    this.updateBounds();\r

      \  }\r

      \  updateBounds() {\r

      \    var bounds = this.cy.elements().boundingBox();\r

      \    let dContainer = this.live.dCy;\r

      \    dContainer.css('height', bounds.h + 100);\r

      \    dContainer.css('width', bounds.w + 100);\r

      \    this.cy.center();\r

      \    this.cy.resize();\r

      \    dContainer.cytoscapeEdgehandles('resize');\r

      \  }\r

      \  //#region ui funcs\r

      \  enableDD() { this.enableDragging(); }\r

      \  disableDD() { this.disableDragging(); }\r

      \  enableDragging() { this.cy.nodes().grabify(); }\r

      \  disableDragging() { this.cy.nodes().ungrabify(); }\r

      \  showGraph() { }\r

      \  showControls(dWhere, lWhich) {\r

      \    if (!this.hasControls) this.addLayoutControls(dWhere,
      lWhich);\r

      \    if (nundef(dWhere)) dWhere = iDiv(this);\r

      \  }\r

      \  showExtent() { let bb = this.cy.elements().bb();
      console.log('graph size:', bb.w, bb.h); }\r

      \  showSize() { this.showExtent(); }\r

      \  hideGraph() { }\r

      \  hideControls() { }\r

      \  mount() { }\r

      \  unmount() { }\r

      \  closeLayoutControls() { if (isdef(this.sb)) hide(this.sb); }\r

      \  addLayoutControls(dParent, buttonlist) {\r

      \    if (nundef(dParent)) dParent = iDiv(this);\r

      \    let buttons = {\r

      \      BFS: mButton('BFS', () => this.breadthfirst(), dParent, {},
      ['tbb']),\r

      \      circle: mButton('circle', () => this.circle(), dParent, {},
      ['tbb']),\r

      \      CC: mButton('CC', () => this.concentric(), dParent, {},
      ['tbb']),\r

      \      cola: mButton('cola', () => this.comcola(), dParent, {},
      ['tbb']),\r

      \      cose: mButton('cose', () => this.cose(), dParent, {},
      ['tbb']),\r

      \      euler: mButton('euler', () => this.euler(), dParent, {},
      ['tbb']),\r

      \      fcose: mButton('fcose', () => this.fcose(), dParent, {},
      ['tbb']),\r

      \      grid: mButton('grid', () => this.gridLayout(), dParent, {},
      ['tbb']),\r

      \      klay: mButton('klay', () => this.klay(), dParent, {},
      ['tbb']),\r

      \      prest: mButton('prest', () => this.presetLayout(), dParent,
      {}, ['tbb']),\r

      \      rand: mButton('rand', () => this.randomLayout(), dParent, {},
      ['tbb']),\r

      \      center: mButton('center', () => this.center(), dParent, {},
      ['tbb']),\r

      \      fit: mButton('fit', () => this.fit(), dParent, {},
      ['tbb']),\r

      \      reset: mButton('reset', () => this.reset(), dParent, {},
      ['tbb']),\r

      \      show: mButton('show', () => this.showGraph(), dParent, {},
      ['tbb']),\r

      \      hide: mButton('hide', () => this.hideGraph(), dParent, {},
      ['tbb']),\r

      \      store: mButton('store', () => this.storeCurrentPositions(),
      dParent, {}, ['tbb']),\r

      \    };\r

      \    for (const b in buttons) {\r

      \      if (isdef(buttonlist) && !buttonlist.includes(b))
      hide(buttons[b]);\r

      \    }\r

      \    return buttons;\r

      \  }\r

      \  addVisual(dParent, styles = {}) {\r

      \    if (this.hasVisual) return;\r

      \    this.hasVisual = true;\r

      \    this.id = nundef(dParent.id) ? getUID() : dParent.id;\r

      \    let styleDict = {\r

      \      node: { 'width': 25, 'height': 25, 'background-color': 'red',
      \"color\": \"#fff\", 'label': 'data(id)', \"text-valign\": \"center\",
      \"text-halign\": \"center\", },\r

      \      edge: { 'width': 2, 'line-color': 'silver', 'curve-style':
      'haystack', },\r

      \      'node.highlight': { 'background-color': 'yellow' },\r

      \      'node.trans': { 'opacity': '0.5' },\r

      \    }\r

      \    for (const ks of ['node', 'edge', 'node.highlight',
      'node.trans']) {\r

      \      if (isdef(styles[ks])) {\r

      \        for (const k in styles[ks]) {\r

      \          let [prop, val] = translateToCssStyle(k, styles[ks][k],
      false);\r

      \          styleDict[ks][prop] = val;\r

      \        }\r

      \      }\r

      \    }\r

      \    let cyStyle = [];\r

      \    for (const k in styleDict) { cyStyle.push({ selector: k, style:
      styleDict[k] }); }\r

      \    let size = getSize(dParent);\r

      \    let d1 = mDiv(dParent, { position: 'relative', bg: 'green', w:
      size.w, left: 0, top: 0, h: size.h, align: 'left' });\r

      \    this.cy.mount(d1);\r

      \    this.cy.style(cyStyle);\r

      \    this.enablePanZoom();\r

      \    iAdd(this, { div: dParent, dCy: d1 });\r

      \  }\r

      \  //#endregion\r

      \  //#region events\r

      \  nodeEvent(evname, handler) { this.cy.on(evname, 'node', ev =>
      handler(ev.target)); }\r

      \  mStyle(elid, styles, group = 'node') {\r

      \    if (isString(elid)) elid = this.cy.getElementById(elid);\r

      \    let di = translateStylesToCy(styles, group);\r

      \    for (const k in di) {\r

      \      elid.style(k, di[k]);\r

      \    }\r

      \  }\r

      \  setLabel(id, label, styles) {\r

      \    let ele = this.cy.getElementById(id);\r

      \    ele.data('label', label);\r

      \    this.mStyle(id, styles, isdef(this.getNode(id)) ? 'node' :
      'edge');\r

      \  }\r

      \  setStyle(elid, prop, val) {\r

      \    if (isString(elid)) elid = this.cy.getElementById(elid);\r

      \    elid.style(prop, val);\r

      \  }\r

      \  setClass(elid, className) {\r

      \    if (isString(elid)) elid = this.cy.getElementById(elid);\r

      \    elid.class(className);\r

      \  }\r

      \  //#endregion\r

      }\r\n"
    sig: class UIGraph{}
    region: classes (_bau1.js)
    filename: _bau1.js
    type: cla
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  ControllerSolitaireMinimal:
    name: ControllerSolitaireMinimal
    code: "class ControllerSolitaireMinimal extends ControllerSolitaire {\r

      \  clear() { if (isdef(this.timer)) this.timer.clear(); }\r

      \  startLevel() {\r

      \    Settings.updateGameValues(this.player, this.g);\r

      \    this.g.start_Level();\r

      \    this.startRound();\r

      \  }\r

      \  prompt() {\r

      \    QContextCounter += 1;\r

      \    showStats(false); \r

      \    this.g.trialNumber = 0;\r

      \    this.g.prompt();\r

      \  }\r

      \  activateUi() {\r

      \    Selected = null;\r

      \    uiActivated = true;\r

      \    if (isdef(this.timer)) this.timer.start(); \r

      \    this.g.activate();\r

      \  }\r

      \  gotoNext(nextLevel) {\r

      \    onclick = null;\r

      \    removeMarkers();\r

      \    clearTimeouts();\r

      \    if (isdef(this.timer)) this.timer.clear();\r

      \    if (Score.levelChange && nextLevel <= this.g.maxLevel) {\r

      \      this.g.level = nextLevel;\r

      \      setBadgeLevel(this.g.level);\r

      \      this.startLevel();\r

      \    } else {\r

      \      this.startRound();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class ControllerSolitaireMinimal{}
    region: classes (game_overrides.js)
    filename: game_overrides.js
    type: cla
    fname: game_overrides.js
    path: C:\xampp\htdocs\aroot\_other\chatas\js\game_overrides.js
    datetime: 2021-11-01-05-21
    timestamp: 1635769266534.666
    size: 1097
  CTimer:
    name: CTimer
    code: "class CTimer_dep {\r

      \  constructor(elem, msTick, onTick, msTotal, onElapsed) {\r

      \    this.elem = elem;\r

      \    this.msTotal = this.msLeft = msTotal;\r

      \    this.onTick = onTick;\r

      \    this.onElapsed = onElapsed;\r

      \    this.interval = msTick;\r

      \    this.running = false;\r

      \    this.paused = false;\r

      \    this.game = G.name;\r

      \    this.button = mButton('click', this.togglePause.bind(this),
      this.elem, { transition: 'all 1s ease', display: 'inline-block', fz: 20,
      rounding: 12, bg: GREEN, w: 260 }, 'mybutton');\r

      \    this.TO = null;\r

      \  }\r

      \  togglePause() { if (this.paused) this.continue(); else
      this.pause(); }\r

      \  clear() { this.stop(); clearElement(this.elem); }\r

      \  continue() {\r

      \    if (!this.running) this.start();\r

      \    else if (!this.paused) return;\r

      \    else { this.paused = false; this.TO =
      setInterval(this.tickHandler.bind(this), this.interval); }\r

      \  }\r

      \  tickHandler() {\r

      \    this.msLeft -= this.interval;\r

      \    let [ms, unit] = [this.msLeft, this.msTotal / 6];\r

      \    this.msElapsed = this.msTotal - this.msLeft;\r

      \    this.button.innerHTML = timeConversion(Math.max(this.msLeft,
      0), 'sh');\r

      \    let bg = ms > unit * 4 ? GREEN : ms > unit * 2 ? YELLOW : ms >
      unit ? 'orange' : RED;\r

      \    this.button.style.background = bg;\r

      \    if (isdef(this.onTick)) this.onTick();\r

      \    if (this.msLeft <= 0) {\r

      \      this.stop();\r

      \      if (isdef(this.onElapsed)) {\r

      \        console.assert(G.name == this.game,'game not the same!!!
      '+G.name + ' ' +this.game);\r

      \        this.onElapsed();\r

      \      }\r

      \    }\r

      \  }\r

      \  start() {\r

      \    if (this.running) this.stop();\r

      \    this.started = new Date/1e3|0; \r

      \    this.msLeft = this.msTotal;\r

      \    this.msElapsed = 0;\r

      \    this.running = true;\r

      \    this.TO = setInterval(this.tickHandler.bind(this),
      this.interval);\r

      \  }\r

      \  stop() {\r

      \    if (!this.running) return;\r

      \    clearInterval(this.TO);\r

      \    this.running = false;\r

      \  }\r

      \  pause() {\r

      \    if (this.paused || !this.running) return;\r

      \    clearInterval(this.TO);\r

      \    this.paused = true;\r

      \  }\r

      }\r\n"
    sig: class CTimer{}
    region: time (leg_belinda.js)
    filename: leg_belinda.js
    type: cla
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  TimerClass:
    name: TimerClass
    code: "class TimerClass {\r

      \  constructor(g, elem) {\r

      \    this.started, this.elapsed, this.onTimeOver = null, this.elem,
      this.timeLeft, this.settings = g;\r

      \    if (isdef(elem)) this.setElem(elem);\r

      \  }\r

      \  setElem(elem) {\r

      \    if (nundef(elem) && isdef(this.elem)) { elem = this.elem; }\r

      \    else if (nundef(elem)) { let d = mBy('time'); if (isdef(d))
      this.elem = d; }\r

      \    else if (isString(elem)) { elem = mBy(elem); this.elem = elem;
      }\r

      \  }\r

      \  check(g) { this.settings = g; if (g.showTime) { show(this.elem);
      this.start(); } else { hide(this.elem); } return g.showTime; }\r

      \  clear() { clearTimeout(this.TO); }\r

      \  restart(g, elem, onTimeOver = null) {\r

      \    this.clear();\r

      \    this.setElem(elem);\r

      \    let active = this.check(g);\r

      \    this.started = msNow();\r

      \    this.elapsed = 0;\r

      \    if (isdef(onTimeOver)) this.onTimeOver = onTimeOver;\r

      \    if (active) this.start();\r

      \  }\r

      \  start() {\r

      \    if (nundef(this.settings.showTime) || !this.settings.showTime)
      return;\r

      \    if (nundef(this.settings.minutesPerUnit))
      this.settings.minutesPerUnit = 10;\r

      \    if (nundef(this.started)) { this.started = msNow();
      this.elapsed = 0; }\r

      \    var timeLeft = this.timeLeft = this.settings.minutesPerUnit *
      60000 - this.getTimeElapsed();\r

      \    if (timeLeft > 0) {\r

      \      let t = msToTime(timeLeft);\r

      \      let s = format2Digits(t.h) + \":\" + format2Digits(t.m) +
      \":\" + format2Digits(t.s);\r

      \      this.elem.innerHTML = s;\r

      \      this.TO = setTimeout(() => this.start(), 500);\r

      \    } else {\r

      \      this.elem.innerHTML = '00:00:00';\r

      \      if (this.onTimeOver) this.onTimeOver();\r

      \    }\r

      \  }\r

      \  unitTimeUp() {\r

      \    return (this.settings.minutesPerUnit * 60000 -
      this.getTimeElapsed()) <= 0;\r

      \  }\r

      \  startClock(elem) {\r

      \    if (nundef(this.settings.showTime) || !this.settings.showTime)
      return;\r

      \    var today = new Date(),\r

      \      h = format2Digits(today.getHours()),\r

      \      m = format2Digits(today.getMinutes()),\r

      \      s = format2Digits(today.getSeconds());\r

      \    if (isString(elem)) elem = mBy(elem); elem.innerHTML = h +
      \":\" + m + \":\" + s;\r

      \    this.TO = setTimeout(() => this.startClock(elem), 500);\r

      \  }\r

      \  getTimeElapsed() { return this.elapsed +
      msElapsedSince(this.started); }\r

      }\r\n"
    sig: class TimerClass{}
    region: time (leg_belinda.js)
    filename: leg_belinda.js
    type: cla
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  TimeoutManager:
    name: TimeoutManager
    code: "class TimeoutManager {\r

      \  constructor() {\r

      \    this.TO = {};\r

      \  }\r

      \  clear(key) {\r

      \    if (nundef(key)) key = Object.keys(this.TO);\r

      \    else if (isString(key)) key = [key];\r

      \    for (const k of key) {\r

      \      clearTimeout(this.TO[k]);\r

      \      delete this.TO[k];\r

      \    }\r

      \  }\r

      \  set(ms, callback, key) {\r

      \    if (nundef(key)) key = getUID();\r

      \    this.TO[key] = setTimeout(ms, callback);\r

      \  }\r

      } \r\n"
    sig: class TimeoutManager{}
    region: Timit (base.js)
    filename: base.js
    type: cla
    fname: base.js
    path: C:\xampp\htdocs\aroot\base\js\base.js
    datetime: 2022-09-10-18-26
    timestamp: 1662859601190.5713
    size: 195167
  CountdownTimer:
    name: CountdownTimer
    code: "class CountdownTimer {\r

      \  constructor(ms, elem) {\r

      \    this.timeLeft = ms;\r

      \    this.msStart = Daat.now();\r

      \    this.elem = elem;\r

      \    this.tick();\r

      \  }\r

      \  msElapsed() { return Date.now() - this.msStart; }\r

      \  tick() {\r

      \    this.timeLeft -= this.msElapsed;\r

      \    this.elem.innerHTML = this.timeLeft;\r

      \    if (this.timeLeft > 1000) {\r

      \      setTimeout(this.tick.bind(this), 500);\r

      \    } else this.elem.innerHTML = 'timeover';\r

      \  }\r

      }\r\n"
    sig: class CountdownTimer{}
    region: time (leg_belinda.js)
    filename: leg_belinda.js
    type: cla
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  RSG:
    name: RSG
    code: "class RSG {\r

      \  constructor() {\r

      \    this.nodes = {};\r

      \    this.uiNodes = {};\r

      \    this.isUiActive = false;\r

      \    this.uid2oids = {};\r

      \    this.oid2uids = {};\r

      \    this.path2oid = {};\r

      \  }\r

      \  add_node(n, oid) {\r

      \    this.nodes[oid] = n;\r

      \    if (isEmpty(n.path)) this.root = n;\r

      \    if (isList(n.content) && n.content.length == 0) {\r

      \      n.type = 'empty_list';\r

      \    }\r

      \    this.path2oid[n.path] = n.oid;\r

      \    console.assert(nundef(Items[n.path]), 'duplicate path in
      Items!!! ' + n.path);\r

      \    console.assert(nundef(Items[oid]), 'duplicate oid in Items!!! '
      + oid);\r

      \    Items[n.oid] = Items[n.path] = n;\r

      \  }\r

      \  add_ui_node(ui, uid, oid) {\r

      \    this.uiNodes[uid] = ui;\r

      \    lookupAddIfToList(this.uid2oids, [uid], oid);\r

      \    lookupAddIfToList(this.oid2uids, [oid], uid);\r

      \    if (Items[oid].type != 'card')
      console.assert(nundef(Items[uid]), 'duplicate uid in Items!!! ' + uid);\r

      \    Items[uid] = ui;\r

      \    let o = Items[oid];\r

      \    ui.setAttribute('oid', oid);\r

      \    iAdd(o, { div: ui });\r

      \  }\r

      \  getUI(uid) { return this.uiNodes[uid]; }\r

      \  get_item_from_path(path) { return Items[path]; }\r

      \  get_item(id) {\r

      \    if (id[0] == '_') {\r

      \      let oid = Items[id].getAttribute('oid');\r

      \      return Items[oid];\r

      \    } else return Items[id];\r

      \  }\r

      }\r\n"
    sig: class RSG{}
    region: funcs (activator.js)
    filename: activator.js
    type: cla
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  Activator:
    name: Activator
    code: "class Activator {\r

      \  static maxZIndex = 0;\r

      \  constructor(n, ui, R) {\r

      \    this.n = n; \r

      \    this.ui = isdef(n.uiActive) ? n.uiActive : ui;\r

      \    this.uid = n.uid;\r

      \    this.R = R;\r

      \    this.hoverActive = false;\r

      \    this.clickActive = false;\r

      \  }\r

      \  activate(fEnter, fLeave, fClick) {\r

      \    this.activateHover(fEnter, fLeave);
      this.activateClick(fClick);\r

      \  }\r

      \  activateHover(fEnter, fLeave) {\r

      \    if (this.hoverActive) return;\r

      \    this.hoverActive = true;\r

      \    this.ui.onmouseenter = (ev) => { ev.stopPropagation();
      fEnter(this.uid, this.R); }\r

      \    this.ui.onmouseleave = (ev) => { ev.stopPropagation();
      fLeave(this.uid, this.R); }\r

      \  }\r

      \  activateClick(fClick) {\r

      \    if (this.clickActive) return;\r

      \    this.clickActive = true;\r

      \    this.ui.onclick = (ev) => { ev.stopPropagation();
      fClick(this.uid, this.R); }\r

      \  }\r

      \  deactivate() {\r

      \    if (!this.hoverActive && !this.clickActive) return;\r

      \    this.deactivateHover();\r

      \    this.deactivateClick();\r

      \  }\r

      \  deactivateHover() {\r

      \    if (!this.hoverActive) return;\r

      \    this.hoverActive = false;\r

      \    removeEvents(this.ui, 'mouseenter', 'mouseleave');\r

      \  }\r

      \  deactivateClick() {\r

      \    if (!this.clickActive) return;\r

      \    this.clickActive = false;\r

      \    removeEvents(this.ui, 'click');\r

      \  }\r

      }\r\n"
    sig: class Activator{}
    region: funcs (activator.js)
    filename: activator.js
    type: cla
    fname: activator.js
    path: C:\xampp\htdocs\aroot\base\js\activator.js
    datetime: 2022-01-29-06-12
    timestamp: 1643465536949.4634
    size: 11102
  Board:
    name: Board
    code: "class Board {\r

      \  constructor(dParent, rows, cols, handler, cellStyle) {\r

      \    let styles = isdef(cellStyle) ? cellStyle : { margin: 4, w:
      150, h: 150, bg: 'white', fg: 'black' };\r

      \    this.rows = valf(rows, 3);\r

      \    this.cols = valf(cols, 3);\r

      \    let dgrid = this.div = mGrid(this.rows, this.cols, dParent);\r

      \    this.items = [];\r

      \    let index = 0;\r

      \    for (let i = 0; i < this.rows; i++) {\r

      \      for (let j = 0; j < this.cols; j++) {\r

      \        let item = { row: i, col: j, index: index };\r

      \        let d = mDiv(dgrid, styles);\r

      \        mCenterCenterFlex(d);\r

      \        d.onclick = valf(handler, ev => console.log('clicked on
      item', item));\r

      \        iAdd(item, { div: d });\r

      \        this.items.push(item);\r

      \        index += 1;\r

      \      }\r

      \    }\r

      \  }\r

      \  get(ir, c) {\r

      \    if (isdef(c)) {\r

      \      let idx = ir * this.cols + c;\r

      \      return this.items[idx];\r

      \    } else {\r

      \      return this.items[ir];\r

      \    }\r

      \  }\r

      \  getState() {\r

      \    return this.items.map(x => x.label);\r

      \  }\r

      \  setState(arr, colors) {\r

      \    if (isEmpty(arr)) return;\r

      \    if (isList(arr[0])) { arr = arrFlatten(arr); }\r

      \    for (let i = 0; i < arr.length; i++) {\r

      \      let item = this.items[i];\r

      \      let val = arr[i];\r

      \      if (!empty_func(val)) {\r

      \        addLabel(item, val, { fz: 60, fg: colors[val] });\r

      \      } else item.label = val;\r

      \    }\r

      \  }\r

      \  clear() {\r

      \    for (const item of this.items) {\r

      \      let dLabel = iLabel(item);\r

      \      if (isdef(dLabel)) { removeLabel(item); item.label = null;
      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class Board{}
    region: classes (_bau1.js)
    filename: _bau1.js
    type: cla
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Board2D:
    name: Board2D
    code: "class Board2D {\r

      \  constructor(rows, cols, dParent, cellStyles, boardStyles,
      handler) {\r

      \    cellStyles = this.cellStyles = isdef(cellStyles) ? cellStyles :
      { margin: 4, w: 150, h: 150, bg: 'white', fg: 'black' };\r

      \    boardStyles = this.boardStyles = isdef(boardStyles) ?
      boardStyles : { bg: 'silver', fg: 'black' };\r

      \    this.rows = valf(rows, 3);\r

      \    this.cols = valf(cols, 5);\r

      \    this.dParent = dParent;\r

      \    let dBoard = this.dBoard = mDiv(dParent);\r

      \    let items = this.items = this.fill(dBoard, this.rows,
      this.cols, null, cellStyles);\r

      \  }\r

      \  fill(d, rows, cols, items, cellStyles) {\r

      \    if (nundef(items)) items = [];\r

      \    clearElement(d);\r

      \    mStyle(d, { display: 'grid', 'grid-template-columns': cols
      });\r

      \    for (let i = 0; i < rows * cols; i++) {\r

      \      let item = items[i];\r

      \      if (isdef(item)) {\r

      \        let d1 = iDiv(item);\r

      \        if (isdef(d1)) mAppend(d, iDiv(item));\r

      \        else {\r

      \          d1 = mDiv(d, cellStyles); iAdd(item, { div: d1 });
      mAppend(d, d1);\r

      \        }\r

      \      } else {\r

      \        let [r, c] = iToRowCol(i);\r

      \        item = { row: r, col: c, index: i };\r

      \        let d1 = mDiv(d, cellStyles); iAdd(item, { div: d1 });
      mAppend(d, d1);\r

      \      }\r

      \      mStyle(iDiv(item), cellStyles);\r

      \      items.push(item)\r

      \    }\r

      \    return items;\r

      \  }\r

      \  get(ir, c) {\r

      \    if (isdef(c)) {\r

      \      let idx = ir * this.cols + c;\r

      \      return this.items[idx];\r

      \    } else {\r

      \      return this.items[ir];\r

      \    }\r

      \  }\r

      \  getState() {\r

      \    return this.items.map(x => x.label);\r

      \  }\r

      \  setState(arr, colors) {\r

      \    if (isEmpty(arr)) return;\r

      \    if (isList(arr[0])) { arr = arrFlatten(arr); }\r

      \    for (let i = 0; i < arr.length; i++) {\r

      \      let item = this.items[i];\r

      \      let val = arr[i];\r

      \      if (!empty_func(val)) {\r

      \        addLabel(item, val, { fz: 60, fg: colors[val] });\r

      \      } else item.label = val;\r

      \    }\r

      \  }\r

      \  clear() {\r

      \    for (const item of this.items) {\r

      \      let dLabel = iLabel(item);\r

      \      if (isdef(dLabel)) { removeLabel(item); item.label = null;
      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class Board2D{}
    region: classes (_bau1.js)
    filename: _bau1.js
    type: cla
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Card52:
    name: Card52
    code: "class Card52 {\r

      \  static toString(c) { return c.rank + ' of ' + c.suit; }\r

      \  static _getKey(i) {\r

      \    if (i >= 52) return 'card_J1';\r

      \    let rank = Card52.getRank(i);\r

      \    let suit = Card52.getSuit(i);\r

      \    return 'card_' + rank + suit;\r

      \  }\r

      \  static _fromKey(k) {\r

      \    let ranks = 'A23456789TJQK';\r

      \    let suits = 'SHDC';\r

      \    let ir = ranks.indexOf(k[0]); \r

      \    let is = suits.indexOf(k[1]); \r

      \    return is * 13 + ir;\r

      \  }\r

      \  static getRankValue(i) { if (nundef(i)) return null; let r = i %
      13; return r == 0 ? 12 : r - 1; }\r

      \  static getRank(i) {\r

      \    let rank = (i % 13);\r

      \    if (rank == 0) rank = 'A';\r

      \    else if (rank >= 9) rank = ['T', 'J', 'Q', 'K'][rank - 9];\r

      \    else rank = rank + 1;\r

      \    return rank;\r

      \  }\r

      \  static getSuit(i) {\r

      \    let s = ['S', 'H', 'D', 'C'][divInt(i, 13)];\r

      \    return s;\r

      \  }\r

      \  static getShortString(c) { return c.suit + c.rank; }\r

      \  static turnFaceDown(c, color) {\r

      \    if (!c.faceUp) return;\r

      \    let svgCode = C52.card_2B; \r

      \    c.div.innerHTML = svgCode;\r

      \    if (isdef(color))
      c.div.children[0].children[1].setAttribute('fill', color);\r

      \    c.faceUp = false;\r

      \  }\r

      \  static turnFaceUp(c) {\r

      \    if (c.faceUp) return;\r

      \    c.div.innerHTML = C52[c.key];\r

      \    c.faceUp = true;\r

      \  }\r

      \  static fromSR(sr, h) { return Card52.fromShortString(sr, h); }\r

      \  static fromShortString(sr, h) {\r

      \    let key = sr[1].toUpperCase() + sr[0].toUpperCase();\r

      \    let i = Card52._fromKey(key);\r

      \    console.log('card from ', sr, 'is', key, 'i', i)\r

      \    return Card52.getItem(i, h);\r

      \  }\r

      \  static get(sr, h) { return Card52.fromSR(sr, h); }\r

      \  static getItem(i, h = 110, w) {\r

      \    if (nundef(w)) w = h * .7;\r

      \    if (nundef(i)) i = randomNumber(0, 51);\r

      \    if (isString(i) && i.length == 2) { i =
      Card52._fromKey(i[1].toUpperCase() + i[0].toUpperCase()); }\r

      \    let c = Card52._createUi(i, undefined, w, h);\r

      \    c.i = c.val = i;\r

      \    return c;\r

      \  }\r

      \  static _createUi(irankey, suit, w, h) {\r

      \    //#region set rank and suit from inputs\r

      \    let rank = irankey;\r

      \    if (nundef(irankey) && nundef(suit)) {\r

      \      [rank, suit] = Card52.randomRankSuit();\r

      \    } else if (nundef(irankey)) {\r

      \      irankey = '2';\r

      \      suit = 'B';\r

      \    } else if (nundef(suit)) {\r

      \      if (isNumber(irankey)) irankey = Card52._getKey(irankey);\r

      \      rank = irankey[5];\r

      \      suit = irankey[6];\r

      \    }\r

      \    if (rank == '10') rank = 'T';\r

      \    if (rank == '1') rank = 'A';\r

      \    if (nundef(suit)) suit = 'H'; else suit =
      suit[0].toUpperCase(); \r

      \    //#endregion\r

      \    //#region load svg for card_[rank][suit] (eg. card_2H)\r

      \    let cardKey = 'card_' + rank + suit;\r

      \    let svgCode = C52[cardKey]; \r

      \    svgCode = '<div>' + svgCode + '</div>';\r

      \    let el = mCreateFrom(svgCode);\r

      \    if (isdef(h) || isdef(w)) { mSize(el, w, h); }\r

      \    //#endregion\r

      \    return { rank: rank, suit: suit, key: cardKey, div: el, w: w,
      h: h, faceUp: true }; \r

      \  }\r

      \  static random() { return Card52.getItem(randomNumber(0, 51)); }\r

      \  static randomRankSuit() {\r

      \    let c = Card52.random();\r

      \    return [c.rank, c.suit];\r

      \  }\r

      \  static show(icard, dParent, h = 110, w = undefined) {\r

      \    if (isNumber(icard)) {\r

      \      if (nundef(w)) w = h * .7;\r

      \      icard = Card52.getItem(icard, h, w);\r

      \    }\r

      \    mAppend(dParent, icard.div);\r

      \  }\r

      }\r\n"
    sig: class Card52{}
    region: cards (legacy.js)
    filename: legacy.js
    type: cla
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  Deck:
    name: Deck
    code: "class Deck {\r

      \  constructor(f) { this.data = []; if (isdef(f)) if (isString(f))
      this['init' + f](); else if (isList(f)) this.init(f); }\r

      \  init(arr) { this.data = arr; }\r

      \  initEmpty() { this.data = []; }\r

      \  initNumber(n, shuffled = true) { this.initTest(n, shuffled); }\r

      \  initTest(n, shuffled = true) { this.data = range(0, n - 1); if
      (shuffled) this.shuffle(); }\r

      \  init52(shuffled = true, jokers = 0) { this.data = range(0, 51 +
      jokers); if (shuffled) this.shuffle(); }\r

      \  init52_double(shuffled = true, jokers = 0) { this.data = range(0,
      103 + jokers); if (shuffled) this.shuffle(); }\r

      \  init52_no_suits(n = 4, shuffled = true, jokers = 0) { this.data =
      range(0, 13 * n + jokers - 1); if (shuffled) this.shuffle(); }\r

      \  initRandomHand52(n) { this.data = choose(range(0, 51), n); }\r

      \  addTop(i) { this.data.push(i); return this; }\r

      \  addBottom(i) { this.data.unshift(i); return this; }\r

      \  bottom() { return this.data[0]; }\r

      \  cards() { return this.data; }\r

      \  count() { return this.data.length; }\r

      \  clear() { this.data = []; }\r

      \  deal(n) { return this.data.splice(0, n); }\r

      \  dealDeck(n) { let d1 = new Deck(); d1.init(this.data.splice(0,
      n)); return d1; }\r

      \  popTop() { return this.data.pop(); }\r

      \  popBottom() { return this.data.shift(); }\r

      \  remTop() { this.data.pop(); return this; }\r

      \  remBottom() { this.data.shift(); return this; }\r

      \  remove(i) { removeInPlace(this.data, i); return this; }\r

      \  removeAtIndex(i) { return this.data.splice(i, 1)[0]; }\r

      \  removeFromIndex(i, n) { return this.data.splice(i, n); }\r

      \  setData(arr, shuffled = false) { this.data = arr; if (shuffled)
      this.shuffle(); }\r

      \  sort() {\r

      \    this.data.sort((a, b) => Number(a) - Number(b));\r

      \    return this;\r

      \  }\r

      \  shuffle() { shuffle(this.data); return this; }\r

      \  top() { return arrLast(this.data); }\r

      \  toString() { return this.data.toString(); }\r

      }\r\n"
    sig: class Deck{}
    region: cards (legacy.js)
    filename: legacy.js
    type: cla
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  Deck1:
    name: Deck1
    code: "class Deck1 extends Array {\r

      \  initTest(n, shuffled = true) { range(0, n).map(x =>
      this.push(Card52.getItem(x))); if (shuffled) this.shuffle(); }\r

      \  initEmpty() { }\r

      \  init52(shuffled = true, jokers = 0) {\r

      \    range(0, 51 + jokers).map(x => this.push(Card52.getItem(x)));\r

      \    if (shuffled) this.shuffle();\r

      \  }\r

      \  add(otherDeck) { while (otherDeck.length > 0) {
      this.unshift(otherDeck.pop()); } return this; }\r

      \  count() { return this.length; }\r

      \  static transferTopFromToBottom(d1, d2) { let c = d1.pop();
      d2.putUnderPile(c); return c; }\r

      \  deal(n) { return this.splice(0, n); }\r

      \  getIndices() { return this.map(x => x.i); }\r

      \  log() { console.log(this); }\r

      \  putUnderPile(x) { this.push(x); }\r

      \  putOnTop(x) { this.unshift(x); }\r

      \  showDeck(dParent, splay, ovPercent = 0, faceUp = undefined,
      contStyles = {}) {\r

      \    if (isdef(faceUp)) { if (faceUp == true) this.turnFaceUp();
      else this.turnFaceDown(); }\r

      \    splayout(this, dParent, contStyles, ovPercent, splay);\r

      \  }\r

      \  shuffle() { shuffle(this); }\r

      \  topCard() { return this[this.length - 1]; }\r

      \  turnFaceUp() {\r

      \    if (isEmpty(this) || this[0].faceUp) return;\r

      \    this.map(x => Card52.turnFaceUp(x));\r

      \  }\r

      \  turnFaceDown() {\r

      \    if (isEmpty(this) || !this[0].faceUp) return;\r

      \    this.map(x => Card52.turnFaceDown(x));\r

      \  }\r

      }\r\n"
    sig: class Deck1{}
    region: cards (legacy.js)
    filename: legacy.js
    type: cla
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  SettingsClass:
    name: SettingsClass
    code: "class SettingsClass {\r

      \  constructor(settingsObject, userObject, dParent) {\r

      \    this.o = settingsObject;\r

      \    this.u = userObject;\r

      \    this.dParent = dParent;\r

      \  }\r

      \  //#region settings ui\r

      \  createSettingsUi(dParent) {\r

      \    dParent = valf(dParent, this.dParent);\r

      \    clearElement(dParent);\r

      \    this.list = [];\r

      \    let ttag = 'h2';\r

      \    mAppend(dParent, createElementFromHTML(`<${ttag}>Settings for
      ${this.o.friendly}</${ttag}>`));\r

      \    let nGroupNumCommonAllGames = this.mInputGroup(dParent);\r

      \    this.setzeEineZahl(nGroupNumCommonAllGames, 'samples', 25,
      ['samplesPerGame']);\r

      \    this.setzeEineZahl(nGroupNumCommonAllGames, 'minutes', 1,
      ['minutesPerUnit']);\r

      \    this.setzeEineZahl(nGroupNumCommonAllGames, 'correct streak',
      5, ['incrementLevelOnPositiveStreak']);\r

      \    this.setzeEineZahl(nGroupNumCommonAllGames, 'fail streak', 2,
      ['decrementLevelOnNegativeStreak']);\r

      \    this.setzeEinOptions(nGroupNumCommonAllGames, 'show labels',
      ['toggle', 'always', 'never'], ['toggle', 'always', 'never'], 'toggle',
      ['pictureLabels']);\r

      \    let avail = toLetterList(this.o.availableLanguages);\r

      \    const langs = { E: 'English', D: 'Deutsch', S: 'Spanish', F:
      'French', C: 'Chinese' };\r

      \    let labels = avail.map(x => langs[x]);\r

      \    this.setzeEinOptions(nGroupNumCommonAllGames, 'language',
      avail, labels, 'E', ['language']);\r

      \    let vocabs = Object.keys(KeySets);\r

      \    vocabs.sort();\r

      \    this.setzeEinOptions(nGroupNumCommonAllGames, 'vocabulary',
      vocabs, vocabs, 'best25', ['vocab']);\r

      \    this.setzeEineCheckbox(nGroupNumCommonAllGames, 'show time',
      false, ['showTime']);\r

      \    this.setzeEineCheckbox(nGroupNumCommonAllGames, 'spoken
      feedback', true, ['spokenFeedback']);\r

      \    this.setzeEineCheckbox(nGroupNumCommonAllGames, 'silent',
      false, ['silent']);\r

      \    this.setzeEineCheckbox(nGroupNumCommonAllGames, 'switch game
      after level', false, ['switchGame']);\r

      \    this.setzeEineZahl(nGroupNumCommonAllGames, 'trials', 3,
      ['trials']);\r

      \    this.setzeEineCheckbox(nGroupNumCommonAllGames, 'show hint',
      true, ['showHint']);\r

      \  }\r

      \  setSettingsKeys(elem) {\r

      \    let val = elem.type == 'number' ? Number(elem.value) :
      elem.type == 'checkbox' ? elem.checked : elem.value;\r

      \    lookupSetOverride(this.o, elem.keyList, val);\r

      \    this.hasChanged = true;\r

      \  }\r

      \  setSettingsKeysSelect(elem) {\r

      \    let val;\r

      \    for (const opt of elem.children) {\r

      \      if (opt.selected) val = opt.value;\r

      \    }\r

      \    this.hasChanged = true;\r

      \    console.log('setting\\nkeyList', elem.keyList)\r

      \    console.log('this.o', this.o)\r

      \    console.log('val', val)\r

      \    lookupSetOverride(this.o, elem.keyList, val);\r

      \  }\r

      \  setzeEineZahl(dParent, label, init, skeys) {\r

      \    let d = mDiv(dParent);\r

      \    let val = lookup(this.o, skeys);\r

      \    if (nundef(val)) val = init;\r

      \    let inp = createElementFromHTML(\r

      \      `<input type=\"number\" class=\"input\" value=\"${val}\"
      onfocusout=\"Settings.setSettingsKeys(this)\" />`);\r

      \    let labelui =
      createElementFromHTML(`<label>${label}</label>`);\r

      \    mAppend(d, labelui);\r

      \    mAppend(labelui, inp);\r

      \    mStyle(inp, { maleft: 12, mabottom: 4 });\r

      \    mClass(inp, 'input');\r

      \    inp.keyList = skeys;\r

      \    this.addSetting(skeys[0]);\r

      \  }\r

      \  setzeEineCheckbox(dParent, label, init, skeys) {\r

      \    let d = mDiv(dParent);\r

      \    let val = lookup(this.o, skeys);\r

      \    if (nundef(val)) val = init;\r

      \    let inp = createElementFromHTML(\r

      \      `<input type=\"checkbox\" class=\"checkbox\" ` + (val ===
      true ? 'checked=true' : '') + `
      onfocusout=\"Settings.setSettingsKeys(this)\" >`\r

      \    );\r

      \    let labelui =
      createElementFromHTML(`<label>${label}</label>`);\r

      \    mAppend(d, labelui);\r

      \    mAppend(labelui, inp);\r

      \    mStyle(inp, { maleft: 12, mabottom: 4 });\r

      \    mClass(inp, 'input');\r

      \    inp.keyList = skeys;\r

      \    this.addSetting(skeys[0]);\r

      \  }\r

      \  setzeEinOptions(dParent, label, optionList, friendlyList, init,
      skeys) {\r

      \    let d = mDiv(dParent);\r

      \    let val = lookup(this.o, skeys);\r

      \    if (nundef(val)) val = init;\r

      \    let inp = createElementFromHTML(`<select class=\"options\"
      onfocusout=\"Settings.setSettingsKeysSelect(this)\"></select>`);\r

      \    for (let i = 0; i < optionList.length; i++) {\r

      \      let opt = optionList[i];\r

      \      let friendly = friendlyList[i];\r

      \      let optElem = createElementFromHTML(`<option
      value=\"${opt}\">${friendly}</option>`);\r

      \      mAppend(inp, optElem);\r

      \      if (opt == val) optElem.selected = true;\r

      \    }\r

      \    let labelui =
      createElementFromHTML(`<label>${label}</label>`);\r

      \    mAppend(d, labelui);\r

      \    mAppend(labelui, inp);\r

      \    mStyle(inp, { maleft: 12, mabottom: 4 });\r

      \    inp.keyList = skeys;\r

      \    this.addSetting(skeys[0]);\r

      \  }\r

      \  //#endregion\r

      \  //#region helpers \r

      \  mInputGroup(dParent, styles) {\r

      \    let baseStyles = { display: 'inline-block', align: 'right', bg:
      '#00000080', rounding: 10, padding: 20, margin: 12 };\r

      \    if (isdef(styles)) styles = mergeOverride(baseStyles, styles);
      else styles = baseStyles;\r

      \    return mDiv(dParent, styles);\r

      \  }\r

      \  addSetting(keylist) { if (nundef(this.list)) this.list = [];
      this.list.push(keylist); }\r

      \  //#region essential functions (keep in bg!)\r

      \  updateSettings() {\r

      \    this.updateLabelSettings();\r

      \    this.updateTimeSettings();\r

      \    this.updateSpeakmodeSettings();\r

      \    let scope = 'user';//'game' 'level','temp','all'\r

      \    if (scope == 'temp' || nundef(this.list)) return;\r

      \    for (const k of this.list) {\r

      \      console.log('updating', k, 'from', U.settings[k], 'to',
      this.o[k]);\r

      \      if (scope == 'user') lookupSetOverride(U, ['settings', k],
      this.o[k]);\r

      \      else if (scope == 'game') lookupSetOverride(U, ['games',
      this.o.id, k], this.o[k]);\r

      \      else if (scope == 'level') lookupSetOverride(U, ['games',
      this.o.id, 'levels', this.o.level, k], this.o[k]);\r

      \      else if (scope == 'all') lookupSetOverride(DB, ['settings',
      k], this.o[k]);\r

      \    }\r

      \  }\r

      \  updateSpeakmodeSettings() { if (this.o.silent &&
      this.o.spokenFeedback) this.o.spokenFeedback = false; }\r

      \  updateTimeSettings() { if (PROJECTNAME != 'chatas')
      checkTimer(this.o); }\r

      \  updateLabelSettings() {\r

      \    if (this.o.pictureLabels == 'toggle') this.o.showLabels =
      true;\r

      \    else this.o.showLabels = (this.o.pictureLabels == 'always');\r

      \  }\r

      \  updateGameValues(U) {\r

      \    let game = this.o.id;\r

      \    let level = this.o.level;\r

      \    let settings = { numColors: 1, numRepeat: 1, numPics: 1,
      numSteps: 1, colors: ColorList }; \r

      \    settings = mergeOverride(settings, DB.settings);\r

      \    if (isdef(U.settings)) settings = mergeOverride(settings,
      U.settings);\r

      \    if (isdef(DB.games[game])) settings = mergeOverride(settings,
      DB.games[game]);\r

      \    let next = lookup(DB.games, [game, 'levels', level]); if (next)
      settings = mergeOverride(settings, next);\r

      \    next = lookup(U, ['games', game]); if (next) settings =
      mergeOverride(settings, next);\r

      \    next = lookup(U, ['games', game, 'levels', level]); if (next)
      settings = mergeOverride(settings, next);\r

      \    delete settings.levels;\r

      \    delete settings.colors;\r

      \    let lang = settings.language;\r

      \    let avail = toLetterList(settings.availableLanguages);\r

      \    if (!avail.includes(lang)) lang = chooseRandom(avail);\r

      \    settings.language = settings.lang = lang;\r

      \    Speech.setLanguage(settings.language);\r

      \    copyKeys(settings, this.o);\r

      \    this.updateSettings();\r

      \  }\r

      }\r\n"
    sig: class SettingsClass{}
    region: classes (settings.js)
    filename: settings.js
    type: cla
    fname: settings.js
    path: C:\xampp\htdocs\aroot\belinda\js\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691925.8562
    size: 8627
  PerlenSettingsClass:
    name: PerlenSettingsClass
    code: "class PerlenSettingsClass extends SettingsClass {\r

      \  setOtherSettings(elem) {\r

      \    console.log('____________elem', elem);\r

      \    let val = elem.value;\r

      \    let key = elem.keyList[0];\r

      \    console.log('val',val,'key',key,'elem.value',elem.value)\r

      \    switch (key) {\r

      \      case 'boardStandard':\r

      \        let data = DB.standardSettings[val];\r

      \        if (nundef(data)) { console.log('NO! key', key); return;
      }\r

      \        for (const k in data) { \r

      \          console.log('k',k)\r

      \          this.o[k] = data[k]; \r

      \        }\r

      \        this.o.boardStandard = val;\r

      \        console.log('settings sollen so geaendert werden:',
      data);\r

      \        this.createSettingsUi();\r

      \        break;\r

      \    }\r

      \  }\r

      \  setzeEinActiveOptions(dParent, label, optionList, friendlyList,
      init, skeys) {\r

      \    let d = mDiv(dParent);\r

      \    let val = init;\r

      \    let inp = createElementFromHTML(`<select class=\"options\"
      onchange=\"Settings.setOtherSettings(this)\"></select>`);\r

      \    for (let i = 0; i < optionList.length; i++) {\r

      \      let opt = optionList[i];\r

      \      let friendly = friendlyList[i];\r

      \      let optElem = createElementFromHTML(`<option
      value=\"${opt}\">${friendly}</option>`);\r

      \      mAppend(inp, optElem);\r

      \      if (opt == val) optElem.selected = true;\r

      \    }\r

      \    inp.value = val;\r

      \    let labelui =
      createElementFromHTML(`<label>${label}</label>`);\r

      \    mAppend(d, labelui);\r

      \    mAppend(labelui, inp);\r

      \    mStyle(inp, { maleft: 12, mabottom: 4 });\r

      \    inp.keyList = skeys;\r

      \  }\r

      \  setzeEinBrowseFile(dParent, label, init, skeys) {\r

      \    let d = mDiv(dParent);\r

      \    let val = lookup(this.o, skeys);\r

      \    if (nundef(val)) val = init;\r

      \    let inp = createElementFromHTML(\r

      \      `<input type=\"text\" class=\"input\"
      value=\"${val}\"  />`);\r

      \    let labelui =
      createElementFromHTML(`<label>${label}</label>`);\r

      \    mAppend(d, labelui);\r

      \    mAppend(labelui, inp);\r

      \    var fakeInput = document.createElement(\"input\"); \r

      \    fakeInput.type = \"file\";\r

      \    fakeInput.accept = \"image/*\";\r

      \    fakeInput.multiple = false;\r

      \    inp.onclick = () => { fakeInput.click(); };\r

      \    fakeInput.onchange = () => {\r

      \      let imgFile = fakeInput.files[0];\r

      \      previewBrowsedFile(dTable, imgFile);\r

      \      let val = inp.value = getFilename(imgFile.name);\r

      \      this.hasChanged = true;\r

      \      this.haveChanged.push(skeys);\r

      \      this.o[skeys[0]] = val;\r

      \      this.imgFile = imgFile;\r

      \    };\r

      \    mStyle(inp, { maleft: 12, mabottom: 4, cursor: 'pointer' });\r

      \    mClass(inp, 'input');\r

      \    inp.keyList = skeys;\r

      \    this.addSetting(skeys[0]);\r

      \  }\r

      \  createSettingsUi() {\r

      \    let dParent = mBy('dSettingsContent'); \r

      \    mCenterFlex(dParent);\r

      \    clearElement(dParent);\r

      \    this.list = [];\r

      \    let fertigSets = DB.standardSettings;\r

      \    let fsNames = Object.keys(fertigSets);
      fsNames.unshift('none');\r

      \    let nGroupBoardSettings = this.mInputGroup(dParent);\r

      \    this.setzeEinOptions(nGroupBoardSettings, 'base on standard',
      fsNames, fsNames, 'shapeShifters', ['boardStandard']);\r

      \    this.setzeEinOptions(nGroupBoardSettings, 'board layout',
      ['hex1', 'hex', 'quad', 'circle'], ['hex1', 'hex', 'quad', 'circle'],
      'hex1', ['boardLayout']);\r

      \    this.setzeEinBrowseFile(nGroupBoardSettings, 'board filename',
      'shapeShifters', ['boardFilename']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'board rotation', 0,
      ['boardRotation']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'top margin', 10,
      ['boardMarginTop']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'left margin', 20,
      ['boardMarginLeft']);\r

      \    this.setzeEinenString(nGroupBoardSettings, 'field color',
      'transparent', ['fieldColor']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'field width', 100,
      ['dxCenter']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'field height', 120,
      ['dyCenter']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'horizontal gap', 10,
      ['wGap']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'vertical gap', 20,
      ['hGap']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'rows', 7, ['rows']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'columns', 6,
      ['cols']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'max width', 800,
      ['wFieldArea']);\r

      \    this.setzeEineZahl(nGroupBoardSettings, 'max height', 800,
      ['hFieldArea']);\r

      \    let nGroupPerlenSettings = this.mInputGroup(dParent);\r

      \    this.setzeEinOptions(nGroupPerlenSettings, 'pool selection',
      ['random', 'mixed', 'player'], ['random', 'mixed', 'never'], 'random',
      ['poolSelection']);\r

      \    this.setzeEineZahl(nGroupPerlenSettings, 'random pool size',
      25, ['numPool']);\r

      \  }\r

      }\r\n"
    sig: class PerlenSettingsClass{}
    region: classes (settings.js)
    filename: settings.js
    type: cla
    fname: settings.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\done\settings.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 16119
  FakeServerClass:
    name: FakeServerClass
    code: "class FakeServerClass {\r

      \  constructor(io, perlenDict, settings, state) {\r

      \    this.io = io;\r

      \    this.perlenDict = perlenDict;\r

      \    this.settings = {};\r

      \    this.state = {};\r

      \    this.initState(state, settings);\r

      \    this.players = {};\r

      \  }\r

      \  initState(state, settings) {\r

      \    base.copyKeys(state, this.state);\r

      \    base.copyKeys(settings, this.settings);\r

      \    this.maxPoolIndex = base.initServerPool(this.settings,
      this.state, this.perlenDict);\r

      \  }\r

      \  initStateOld(settings, state) {\r

      \    if (isdef(settings)) copyKeys(settings, this.settings);\r

      \    let byIndex = this.byIndex = {}; this.maxIndex = 0; this.State
      = state;\r

      \    if (nundef(state)) {\r

      \      state = this.State = {};\r

      \      let board = state.board = createServerBoard();\r

      \      state.boardArr = [];\r

      \      state.pool = byIndex;\r

      \      state.poolArr = [];\r

      \      let keys = createServerPoolKeys();\r

      \      keys.map(x => this.addToPool(this.perlenDict[x]));\r

      \    }\r

      \    this.initPlayers();\r

      \  }\r

      \  addPlayer(client, x) {\r

      \    let username = x;\r

      \    let id = client.id;\r

      \    let pl = { id: id, client: client, name: username, username:
      username, arr: [] };\r

      \    this.players[id] = pl;\r

      \    this.initPlayerState(pl.id);\r

      \    return pl;\r

      \  }\r

      \  addToPool(perle) {\r

      \    let index = this.maxIndex;\r

      \    this.maxIndex += 1;\r

      \    let p = this.byIndex[index] = { key: perle.path, index: index
      };\r

      \    if (isdef(this.State.poolArr)) this.State.poolArr.push(index);
      \r

      \    return p;\r

      \  }\r

      \  boardLayoutChange(client, x) {\r

      \    let state = this.State;\r

      \    state.boardArr = x.boardArr;\r

      \    state.poolArr = x.poolArr;\r

      \    state.board = { rows: x.rows, cols: x.cols };\r

      \    this.safeEmitState(false, false, false, true);\r

      \  }\r

      \  safeEmitState(emitSettings, emitPool, emitPerlenDict,
      emitBoardLayout, client, moreData) {\r

      \    let o = { state: { boardArr: this.State.boardArr, poolArr:
      this.State.poolArr } };\r

      \    if (emitSettings) o.settings = this.settings;\r

      \    if (emitPool) o.state.pool = this.State.pool;\r

      \    if (emitPerlenDict) o.perlenDict = this.perlenDict;\r

      \    if (emitBoardLayout) o.state.board = this.board;\r

      \    DB.tables.perlen = this.State;\r

      \    utils.toYamlFile({ settings: this.settings, state: this.State
      }, './lastState.yaml');\r

      \    if (isdef(moreData)) copyKeys(modeData, o);\r

      \    if (isdef(client)) client.emit('gameState', o); else
      this.io.emit('gameState', o);\r

      \  }\r

      \  getNumActivePlayers() { return this.state.players.length; }\r

      \  getNumPlayers() { return Object.keys(this.players).length; }\r

      \  getPlayerNames() { return this.State.players.map(x =>
      x.name).join(','); }\r

      \  getPlayerState(plid) { return firstCond(this.State.players, x =>
      x.id == plid); }\r

      \  getPerleByFilename(filename) {\r

      \    for (const k in this.byIndex) {\r

      \      let p = this.byIndex[k];\r

      \      if (p.path == filename) return p;\r

      \    }\r

      \    return null;\r

      \  }\r

      \  getPerlenName(iPerle) { return this.byIndex[iPerle].text; }\r

      \  getTurn() { return this.state.turn; }\r

      \  initPlayerState(plid) {\r

      \    let pl = this.players[plid];\r

      \    pl.arr = [];\r

      \    pl.isInitialized = false;\r

      \    let plState = { id: pl.id, name: pl.name, username:
      pl.username, arr: pl.arr, isInitialized: pl.isInitializes };\r

      \    if (nundef(this.State.players)) this.State.players = [];\r

      \    this.State.players.push(plState);\r

      \    return pl;\r

      \  }\r

      \  initPlayers() { this.State.players = []; for (const plid in
      this.players) { this.initPlayerState(plid); } }\r

      \  initBoardTraditional(settings) {\r

      \    let [rows, cols] = [valf(settings.rows, 4), valf(settings.cols,
      4)];\r

      \    return { rows: rows, cols: cols, nFields: rows * cols };\r

      \  }\r

      \  initBoardImage(settings) {\r

      \    let filename = settings.filename; //'brett02cropped.png'; //
      [valf(settings.rows, 4), valf(settings.cols, 4)];\r

      \    let name = stringBefore(filename, '.');\r

      \    let info = settings.bretter[name];\r

      \    let nums = allNumbers(info);\r

      \    let algo = stringAfter(info, ' ');\r

      \    return { filename: filename, algo: algo, nFields: nums[0] };\r

      \  }\r

      \  initialPoolDone(client, x) {\r

      \    let pl = this.players[client.id];\r

      \    pl.isInitialized = true;\r

      \    this.updatePlayerState(pl);\r

      \  }\r

      \  sendInitialOrState(client) {\r

      \    if (this.settings.individualSelection) {\r

      \      let data = { state: this.State, perlenDict: this.perlenDict,
      instruction: 'pick your set of pearls!' };\r

      \      client.emit('initialPool', data);\r

      \    } else {\r

      \      logSend('gameState');\r

      \      this.safeEmitState(true, true, true, true, client);\r

      \    }\r

      \  }\r

      \  playerJoins(client, x) {\r

      \    let pl = this.addPlayer(client, x);\r

      \    this.sendInitialOrState(client);\r

      \    this.io.emit('userMessage', {\r

      \      username: x,\r

      \      msg: `user ${pl.name} joined!
      (players:${this.getPlayerNames()})`,\r

      \    });\r

      \  }\r

      \  playerLeft(client, data) {\r

      \    let id = client.id;\r

      \    let players = this.players;\r

      \    delete players[id];\r

      \    let plState = this.getPlayerState(id);\r

      \    if (plState) removeInPlace(this.State.players, plState);\r

      \  }\r

      \  playerMovesPerle(client, x) {\r

      \    let iPerle = x.iPerle;\r

      \    let iFrom = x.iFrom;\r

      \    let iTo = x.iTo;\r

      \    let username = x.username;\r

      \    let perle = this.byIndex[iPerle];\r

      \    let boardArr = this.State.boardArr;\r

      \    boardArr[iFrom] = null;\r

      \    boardArr[iTo] = iPerle;\r

      \    this.State.boardArr = boardArr;\r

      \    if (isdef(x.displaced)) {\r

      \      this.State.poolArr.unshift(x.displaced);\r

      \    }\r

      \    this.safeEmitState(false, false, false, false);\r

      \  }\r

      \  playerPlacesPerle(client, x) {\r

      \    let iPerle = x.iPerle;\r

      \    let iField = x.iField;\r

      \    let username = x.username;\r

      \    let state = this.State;\r

      \    let perle = state.pool[iPerle];\r

      \    removeInPlace(state.poolArr, iPerle);\r

      \    if (isdef(x.displaced)) { state.poolArr.unshift(x.displaced);
      }\r

      \    state.boardArr[iField] = iPerle;\r

      \    this.safeEmitState(false, false, false, false);\r

      \  }\r

      \  playerRemovesPerle(client, x) {\r

      \    let iPerle = x.iPerle;\r

      \    let iFrom = x.iFrom;\r

      \    let state = this.State;\r

      \    state.boardArr[iFrom] = null;\r

      \    state.poolArr.unshift(iPerle);\r

      \    let pl = this.players[client.id];\r

      \    this.safeEmitState(false, false, false, false);\r

      \  }\r

      \  playerReset(client, x) {\r

      \    this.initState(x.settings);\r

      \    let username = x.username;\r

      \    this.sendInitialOrState(client);\r

      \  }\r

      \  updatePlayerState(pl) {\r

      \    let plState = firstCond(this.State.players, x => x.id ==
      pl.id);\r

      \    plState.isInitialized = pl.isInitialized;\r

      \  }\r

      }\r\n"
    sig: class FakeServerClass{}
    region: funcs (fake.js)
    filename: fake.js
    type: cla
    fname: fake.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\fake.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691779.8555
    size: 11024
  SimpleClass7:
    name: SimpleClass7
    code: "class SimpleClass7 {\r

      \  constructor() {\r

      \    this.dParent = dTable;\r

      \    this.initialPoolSelected = false;\r

      \    this.settings = {};\r

      \    this.randomIndices = [];\r

      \    openToolbar();\r

      \    loadHistoryExp();\r

      \  }\r

      \  presentGameState(data) {\r

      \    mStyle(dTable, { h: window.innerHeight });\r

      \    let [settings, state] = this.processData(data);\r

      \    console.assert(state.poolArr.map(x => !isList(x)),
      'BUGBUGBUGBUGBUGBUGBUG!!!')\r

      \    let needToLoadBoard = nundef(this.clientBoard) ||
      this.clientBoard.boardFilename != settings.boardFilename;\r

      \    if (needToLoadBoard) {\r

      \      clearElement(this.dParent);\r

      \      this.dPool = null;\r

      \      this.clientBoard = applyStandard(this.dParent,
      this.settings);\r

      \      if (!this.inSyncWithServer()) return; \r

      \    }\r

      \    else if (isdef(data.settings)) { this.clientBoard =
      applySettings(this.clientBoard, this.settings); }\r

      \    if (nundef(this.dPool)) {\r

      \      mLinebreak(this.dParent, 30);\r

      \      let dPool = this.dPool = mDiv(this.dParent);\r

      \    } else {\r

      \      this.clearBoardUI();\r

      \      this.clearPoolUI();\r

      \    }\r

      \    this.presentPerlen();\r

      \    this.activateDD();\r

      \  }\r

      \  clearBoardUI() {\r

      \    let b = this.clientBoard;\r

      \    let [perlen, fields] = [[], []];\r

      \    for (const f of b.fields) {\r

      \      let p = f.item;\r

      \      if (isList(p)) { \r

      \        continue;\r

      \      }\r

      \      if (isdef(p)) {\r

      \        if (isdef(p.dxy)) { this.resetCenter(f); }\r

      \        iDiv(p).remove();\r

      \        f.item = null;\r

      \        perlen.push(p);\r

      \        fields.push(f);\r

      \      }\r

      \    }\r

      \    return [perlen, fields];\r

      \  }\r

      \  clearPoolUI() { clearElement(this.dPool); }\r

      \  presentPerlen() {\r

      \    let [b, s, perlenByIndex, boardArr, poolArr] =
      [this.clientBoard, this.settings, this.poolEnriched, this.state.boardArr,
      this.state.poolArr];\r

      \    let dParent = this.dPool;\r

      \    for (let i = 0; i < poolArr.length; i++) {\r

      \      let iPerle = poolArr[i]; \r

      \      console.assert(!isList(iPerle), 'BUGBUGBUGBUGBUG!!!!!!')\r

      \      let perle = perlenByIndex[iPerle]; \r

      \      if (nundef(perle)) {\r

      \        console.log('BUG!', perlenByIndex, perlenByIndex,
      'perlenDict', this.perlenDict, '\\nboardArr', boardArr, '\\npoolArr',
      poolArr)\r

      \      }\r

      \      perle.field = null;\r

      \      let ui = createPerle(perle, dParent, 64, 1.3, .4);\r

      \    }\r

      \    for (let i = 0; i < boardArr.length; i++) {\r

      \      let pin = boardArr[i];\r

      \      let iPerle = isList(pin) ? pin[0] : pin; \r

      \      if (iPerle == null) continue;\r

      \      let perle = perlenByIndex[iPerle]; \r

      \      let field = b.fields[i];\r

      \      perle.field = field;\r

      \      field.item = perle;\r

      \      let ui = createPerle(perle, iDiv(field), 64, 1.3, .4);\r

      \      if (isList(pin)) {\r

      \        this.moveCenter(field, perle, pin[1], pin[2]);\r

      \      }\r

      \      if (isFarbPerle(perle)) {\r

      \        let bg = GermanToEnglish[perle.key];\r

      \        if (nundef(bg)) bg = perle.key;\r

      \        let d = perle.live.dImg;\r

      \        d.style.boxShadow = `0px 0px 200px 200px ${bg}`;\r

      \        ui.style.zIndex = 10;\r

      \      } else {\r

      \        ui.style.zIndex = 11;\r

      \      }\r

      \    }\r

      \  }\r

      \  activateDD() {\r

      \    let fields = this.clientBoard.fields;\r

      \    enableDD(this.perlenListeImSpiel, fields.map(x => x),
      this.onDropPerleSimplest.bind(this), false, false,
      dragStartPreventionOnSidebarOpen);\r

      \    addDDTarget({ item: this.state.poolArr, div: this.dParent },
      false, false);\r

      \  }\r

      \  onDropOrig(source, target) {\r

      \    if (target.item == this.state.poolArr) {\r

      \      let f = source.field;\r

      \      if (isdef(f)) sendRemovePerle(source, f);\r

      \    } else {\r

      \      let displaced = null;\r

      \      if (isdef(target.item)) {\r

      \        let p = target.item;\r

      \        if (p == source) return;\r

      \        displaced = p;\r

      \      }\r

      \      if (isdef(source.field)) {\r

      \        let f = source.field;\r

      \        sendMovePerle(source, f, target, displaced);\r

      \      } else {\r

      \        sendPlacePerle(source, target, displaced);\r

      \      }\r

      \    }\r

      \  }\r

      \  onDropPerleSimplest(source, target, isCopy, clearTarget, dx, dy,
      ev, clone) {\r

      \    if (!this.settings.freeForm) {\r

      \      this.onDropOrig(source, target);\r

      \    } else if (target.item == this.state.poolArr) {\r

      \      let f = source.field;\r

      \      if (isdef(f)) sendRemovePerle(source, f);\r

      \    } else {\r

      \      this.onDropFreeForm(source, target, ev, clone);\r

      \    }\r

      \  }\r

      \  onDropFreeForm(source, target, ev, clone) {\r

      \    let perle = source;\r

      \    let dField = iDiv(target);\r

      \    let dPerle = iDiv(source);\r

      \    let rField = getRect(dField);\r

      \    let rPerle = getRect(dPerle);\r

      \    let d = iDiv(perle);\r

      \    let drop = { x: ev.clientX, y: ev.clientY };\r

      \    let [dx, dy] = [DDInfo.dragOffset.offsetX,
      DDInfo.dragOffset.offsetY];\r

      \    let [x, y, w, h] = [drop.x, drop.y, rField.w, rField.h];\r

      \    let dw = Math.abs(rPerle.w - rField.w);\r

      \    let dh = Math.abs(rPerle.h - rField.h);\r

      \    dw /= 2, dh /= 2;\r

      \    let [xFinal, yFinal] = [x - dx - dw, y - dy - dh];\r

      \    let dFieldParent = dField.parentNode;\r

      \    let rParent = getRect(dFieldParent);\r

      \    let xField = xFinal - rParent.x;\r

      \    let yField = yFinal - rParent.y;\r

      \    let [cxFinal, cyFinal] = [xField + w / 2, yField + h / 2];\r

      \    let dxy = { x: cxFinal - target.center.x, y: cyFinal -
      target.center.y };\r

      \    mStyle(dField, { left: xField, top: yField }); \r

      \    target.dxy = source.dxy = dxy;\r

      \    let displaced = null;\r

      \    if (target.item == source) sendMoveField(target);\r

      \    else if (isdef(target.item)) displaced = target.item;\r

      \    if (isdef(source.field)) {\r

      \      let f = source.field;\r

      \      sendMovePerle(source, f, target, displaced);\r

      \    } else {\r

      \      sendPlacePerle(source, target, displaced);\r

      \    }\r

      \    return;\r

      \  }\r

      \  moveCenter(target, source, dx, dy) {\r

      \    let dTarget = iDiv(target);\r

      \    let center = target.center;\r

      \    let newCenter = { x: center.x + dx, y: center.y + dy };\r

      \    target.dxy = { x: dx, y: dy };\r

      \    let rect = getRect(dTarget);\r

      \    mStyle(dTarget, { left: newCenter.x - rect.w / 2, top:
      newCenter.y - rect.h / 2 });\r

      \    source.dxy = { x: dx, y: dy };\r

      \  }\r

      \  resetCenter(target) {\r

      \    let dTarget = iDiv(target);\r

      \    let center = target.center;\r

      \    let rect = getRect(dTarget);\r

      \    mStyle(dTarget, { left: center.x - rect.w / 2, top: center.y -
      rect.h / 2 });\r

      \    delete target.dxy;\r

      \    if (isdef(target.item)) delete target.item.dxy;\r

      \  }\r

      \  processData(data) {\r

      \    console.assert(isdef(data), 'NO DATA IN PROCESSDATA!!!!!');\r

      \    if (nundef(this.state)) this.state = {};\r

      \    copyKeys(data.state, this.state);\r

      \    if (isdef(data.settings)) {\r

      \      console.assert(isdef(this.settings), 'processData G.settings
      is NOT defined after constructor!!!!!')\r

      \      copyKeys(data.settings, this.settings);\r

      \    }\r

      \    if (isdef(data.boardFilenames)) this.boardFilenames =
      data.boardFilenames;\r

      \    if (isdef(data.perlenDict)) { PerlenDict = this.perlenDict =
      data.perlenDict; }\r

      \    if (isdef(data.state.pool)) { \r

      \      this.perlenListeImSpiel = Object.values(this.state.pool);\r

      \      this.randomIndices = data.randomIndices;\r

      \      this.poolEnriched = this.state.pool;\r

      \      for (const idx in this.state.pool) {\r

      \        let p = this.state.pool[idx];\r

      \        let key = p.key;\r

      \        copyKeys(this.perlenDict[key], p);\r

      \        p.path = mPath(p);\r

      \      }\r

      \    }\r

      \    return [this.settings, this.state]; \r

      \  }\r

      \  setInitialPoolSelected() { this.initialPoolSelected = true;
      setTitle('Glasperlenspiel'); }\r

      \  inSyncWithServer() {\r

      \    let [b, s, st] = [this.clientBoard, this.settings,
      this.state];\r

      \    let corr = {};\r

      \    if (st.boardArr.length != b.nFields) { corr.nFields = s.nFields
      = b.nFields; }\r

      \    if (s.rows != b.rows || s.cols != b.cols) { corr.rows = s.rows
      = b.rows; corr.cols = s.cols = b.cols; }\r

      \    if (!isEmpty(Object.keys(corr))) {\r

      \      Socket.emit('settings', { settings: this.settings });\r

      \      return false;\r

      \    }\r

      \    else { return true; }\r

      \  }\r

      }\r\n"
    sig: class SimpleClass7{}
    region: var (si8Class.js)
    filename: si8Class.js
    type: cla
    fname: si8Class.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\si8Class.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691780.856
    size: 15703
  ToolbarClass:
    name: ToolbarClass
    code: "class ToolbarClass {\r

      \  constructor(dParent) {\r

      \    this.dParent = dParent;\r

      \    clearElement(dParent);\r

      \    this.buttons = {};\r

      \    this.populate();\r

      \  }\r

      \  addButton(key, handler, caption, gapTop=0) {\r

      \    if (nundef(caption)) caption = key;\r

      \    let styles = { w: 100 };\r

      \    if (gapTop > 0) styles.matop=gapTop;\r

      \    let b = this.buttons[key] = mButton(caption, handler,
      this.dParent, styles, null, 'b_' + key);\r

      \  }\r

      \  removeButton() { }\r

      \  showButton() { }\r

      \  hideButton() { }\r

      \  populate() {\r

      \    this.addButton('uploadBoard', onClickUploadBoard, 'upload
      board');\r

      \    this.addButton('uploadPerlen', onClickUploadPerlen, 'upload
      perlen');\r

      \    mLinebreak(this.dParent)\r

      \    this.addButton('chooseBoard', onClickChooseBoard, 'choose
      board');\r

      \    this.addButton('prefabGallery', onClickPrefabGallery, 'prefab
      gallery');\r

      \    this.addButton('modifyLayout', onClickModifyLayout, 'modify
      layout');\r

      \    this.addButton('saveAsPrefab', onClickSaveAsPrefab, 'save as
      prefab');\r

      \    mLinebreak(this.dParent);\r

      \    let oldCode = false;\r

      \    if (oldCode) {\r

      \      this.addButton('clearBoard', onClickClearBoard, 'clear
      board');\r

      \      this.addButton('clearPerlenpool', onClickClearPerlenpool,
      'clear perlenpool');\r

      \      this.addButton('remove5Random', onClickRemove5Random, 'remove
      5 random');\r

      \      mLinebreak(this.dParent);\r

      \      this.addButton('addToPool', onClickAddToPool, 'add to
      pool');\r

      \      this.addButton('add5Random', onClickAdd5Random, 'add 5
      random');\r

      \    }else{\r

      \      this.addButton('choosePerlen', onClickChoosePerlen, 'choose
      perlen');\r

      \      this.addButton('perlenPool', onClickPerlenPool, 'perlen
      pool');\r

      \      this.addButton('clearPerlenpool', onClickClearPerlenpool,
      'clear perlenpool');\r

      \    }\r

      \    mLinebreak(this.dParent);\r

      \    this.addButton('saveGamestate', onClickSaveStateAndSettings,
      'save gamestate');\r

      \    this.addButton('loadGamestate', onClickLoadStateAndSettings,
      'load gamestate');\r

      \    this.addButton('downloadHistory', onClickDownloadHistory,
      'download states',4);\r

      \    mLinebreak(this.dParent);\r

      \    this.addButton('remoteConnection', onClickRemoteConnection,
      'remote connection',4);\r

      \    mLinebreak(this.dParent);\r

      \  }\r

      }\r\n"
    sig: class ToolbarClass{}
    region: var (toolbar.js)
    filename: toolbar.js
    type: cla
    fname: toolbar.js
    path: C:\xampp\htdocs\aroot\_other\perlen\work\toolbar.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691781.8557
    size: 3541
  MazeGraph:
    name: MazeGraph
    code: "class MazeGraph extends AGraph {\r

      \  constructor(dParent, rows, cols, sz, gap = 4) {\r

      \    super();\r

      \    [this.cols, this.rows, this.sz, this.gap] = [cols, rows, sz,
      gap];\r

      \    let m = this.m = this.createMaze(cols, rows, sz, gap);\r

      \    let dMaze = this.dMaze = this.createDiv(dParent, cols, rows,
      sz, gap);\r

      \    let szMaze = getSize(dMaze);\r

      \    let dGraph = this.dGraph = mDiv(dParent, { align: 'left', w:
      szMaze.w, h: szMaze.h, bg: 'pink', maleft: 20 }, 'd_graph');\r

      \    this.mazeId = dGraph.id = getUID();\r

      \    let sb = this.sb = mDiv(dParent, { w: 40 });
      mCenterCenterFlex(this.sb);\r

      \    hide(dGraph); hide(sb);\r

      \    this.items = this.createCellItems();\r

      \  }\r

      \  clear() { super.clear(); }\r

      \  getTopLeftCell() { return this.getCell(0, 0); }\r

      \  getTopRightCell() { return this.getCell(0, this.cols - 1); }\r

      \  getBottomLeftCell() { return this.getCell(this.rows - 1, 0); }\r

      \  getBottomRightCell() { return this.getCell(this.rows - 1,
      this.cols - 1); }\r

      \  getCell(row, col) { return this.matrix[row][col]; }\r

      \  getCommonId(row, col) { return '' + row + \"-\" + col; }\r

      \  getCommonIdTable(row, col) { return 'td_' + this.getCommonId(row,
      col); }\r

      \  getRCI(edgeId) {\r

      \    let [r1, c1, r2, c2] = allNumbers(edgeId).map(x =>
      Math.abs(x));\r

      \    let i1, i2;\r

      \    i1 = r1 < r2 ? 2 : r1 > r2 ? 0 : c1 < c2 ? 1 : 3;\r

      \    i2 = i1 == 0 ? 2 : i1 == 1 ? 3 : i1 == 2 ? 0 : 1;\r

      \    return [r1, c1, i1, r2, c2, i2];\r

      \  }\r

      \  getRelativeDirections(item1, item2) {\r

      \    let [r1, c1, r2, c2] = [item1.row, item1.col, item2.row,
      item2.col];\r

      \    let i1, i2;\r

      \    i1 = r1 < r2 ? 2 : r1 > r2 ? 0 : c1 < c2 ? 1 : 3;\r

      \    i2 = i1 == 0 ? 2 : i1 == 1 ? 3 : i1 == 2 ? 0 : 1;\r

      \    return [i1, i2];\r

      \  }\r

      \  createCellItems() {\r

      \    let items = [];\r

      \    this.matrix = [];\r

      \    for (let r = 0; r < this.rows; r++) {\r

      \      this.matrix[r] = [];\r

      \      for (let c = 0; c < this.cols; c++) {\r

      \        let id = this.getCommonId(r, c);\r

      \        let item = { id: id, nid: id, nodeId: id, cellId:
      this.getCommonIdTable(r, c), row: r, col: c, sz: this.sz, marr: this.m[r,
      c] };\r

      \        delete Items[id];\r

      \        iAdd(item, { div: mBy(this.getCommonIdTable(r, c)) });\r

      \        items.push(item);\r

      \        this.matrix[r][c] = item;\r

      \      }\r

      \    }\r

      \    return items;\r

      \  }\r

      \  createDiv(dParent, cols, rows, sz, gap = 1) {\r

      \    let [wCell, hCell] = [sz, sz];\r

      \    let [wTotal, hTotal] = [cols * (wCell + gap) + gap, rows *
      (hCell + gap) + gap];\r

      \    let dGridOuter = this.dMaze = mDiv(dParent, { wmin: wTotal,
      hmin: hTotal, position: 'relative' });\r

      \    let m = this.m;\r

      \    let [x, y] = [0, 0];\r

      \    let sBorder = `${gap}px solid black`;\r

      \    let noBorder = `${gap}px solid transparent`;\r

      \    this.dCells = [];\r

      \    for (var r = 0; r < m.length; r++) {\r

      \      x = 0;\r

      \      this.dCells[r] = [];\r

      \      for (var c = 0; c < m[r].length; c++) {\r

      \        let info = m[r][c];\r

      \        let dCell = mDiv(dGridOuter, { w: wCell, h: hCell,
      position: 'absolute', top: y, left: x, bg: 'gray' });\r

      \        dCell.id = this.getCommonIdTable(r, c);\r

      \        dCell.style.borderTop = info[0] == 0 ? sBorder :
      noBorder;\r

      \        dCell.style.borderRight = info[1] == 0 ? sBorder :
      noBorder;\r

      \        dCell.style.borderBottom = info[2] == 0 ? sBorder :
      noBorder;\r

      \        dCell.style.borderLeft = info[3] == 0 ? sBorder :
      noBorder;\r

      \        x += wCell + gap;\r

      \        this.dCells[r].push(dCell);\r

      \      }\r

      \      y += hCell + gap;\r

      \    }\r

      \    return dGridOuter;\r

      \  }\r

      \  createDiv_orig(dParent, cols, rows, sz, gap) {\r

      \    let [wCell, hCell] = [sz, sz];\r

      \    let [wTotal, hTotal] = [cols * (wCell + gap), rows * (hCell +
      gap)];\r

      \    let dGridOuter = this.dMaze = mDiv(dParent, { wmin: wTotal,
      hmin: hTotal });\r

      \    let m = this.m;\r

      \    let id = 'tMaze';\r

      \    setCSSVariable('--wCell', `${wCell}px`);\r

      \    setCSSVariable('--hCell', `${hCell}px`);\r

      \    let tMaze = createElementFromHtml(`\r

      \      <table id=\"${id}\">\r

      \      <tbody></tbody>\r

      \      </table>\r

      \    `);\r

      \    mAppend(dGridOuter, tMaze);\r

      \    let sBorder = `${1}px solid black`;\r

      \    for (var i = 0; i < m.length; i++) {\r

      \      $('#tMaze > tbody').append(\"<tr>\");\r

      \      for (var j = 0; j < m[i].length; j++) {\r

      \        var selector = this.getCommonIdTable(i, j);\r

      \        $('#tMaze > tbody').append(\"<td id='\" + selector +
      \"'>&nbsp;</td>\");\r

      \        if (m[i][j][0] == 0) { $('#' + selector).css('border-top',
      sBorder); }\r

      \        if (m[i][j][1] == 0) { $('#' +
      selector).css('border-right', sBorder); }\r

      \        if (m[i][j][2] == 0) { $('#' +
      selector).css('border-bottom', sBorder); }\r

      \        if (m[i][j][3] == 0) { $('#' + selector).css('border-left',
      sBorder); }\r

      \      }\r

      \      $('tMmaze > tbody').append(\"</tr>\");\r

      \    }\r

      \    return dGridOuter;\r

      \  }\r

      \  createMaze(cols, rows, sz, gap) {\r

      \    var dxy = sz + 2 * gap;\r

      \    var offs = dxy / 2 + gap;\r

      \    var totalCells = cols * rows;\r

      \    var cells = new Array();\r

      \    var unvis = new Array();\r

      \    for (var i = 0; i < rows; i++) {\r

      \      cells[i] = new Array();\r

      \      unvis[i] = new Array();\r

      \      for (var j = 0; j < cols; j++) {\r

      \        cells[i][j] = [0, 0, 0, 0];\r

      \        let pos = { x: offs + dxy * j, y: offs + dxy * i };\r

      \        this.addNode({ id: this.getCommonId(i, j), row: i, col: j,
      center: pos }, pos);\r

      \        unvis[i][j] = true;\r

      \      }\r

      \    }\r

      \    var currentCell = [Math.floor(Math.random() * rows),
      Math.floor(Math.random() * cols)];\r

      \    var path = [currentCell];\r

      \    unvis[currentCell[0]][currentCell[1]] = false;\r

      \    var visited = 1;\r

      \    while (visited < totalCells) {\r

      \      var pot = [[currentCell[0] - 1, currentCell[1], 0, 2],\r

      \      [currentCell[0], currentCell[1] + 1, 1, 3],\r

      \      [currentCell[0] + 1, currentCell[1], 2, 0],\r

      \      [currentCell[0], currentCell[1] - 1, 3, 1]];\r

      \      var neighbors = new Array();\r

      \      for (var l = 0; l < 4; l++) {\r

      \        if (pot[l][0] > -1 && pot[l][0] < rows && pot[l][1] > -1 &&
      pot[l][1] < cols && unvis[pot[l][0]][pot[l][1]]) { neighbors.push(pot[l]);
      }\r

      \      }\r

      \      if (neighbors.length) {\r

      \        let next = neighbors[Math.floor(Math.random() *
      neighbors.length)];\r

      \        cells[currentCell[0]][currentCell[1]][next[2]] = 1;\r

      \        cells[next[0]][next[1]][next[3]] = 1;\r

      \        let row = currentCell[0];\r

      \        let col = currentCell[1];\r

      \        let row2 = next[0];\r

      \        let col2 = next[1];\r

      \        this.addEdge(this.getCommonId(row, col),
      this.getCommonId(row2, col2), {});\r

      \        unvis[next[0]][next[1]] = false;\r

      \        visited++;\r

      \        currentCell = [next[0], next[1]];\r

      \        path.push(currentCell);\r

      \      }\r

      \      else {\r

      \        currentCell = path.pop();\r

      \      }\r

      \    }\r

      \    return cells;\r

      \  }\r

      \  setItemBorder(item, dir) {\r

      \    let prop = getBorderPropertyForDirection(dir);\r

      \    iDiv(item).style[prop] = `${this.gap}px solid black`;\r

      \  }\r

      \  setItemColor(item, color) { mStyle(iDiv(item), { bg: color });
      }\r

      \  setItemContent(item, text) { iDiv(item).innerHTML = text; }\r

      \  removeItemContent(item) { iDiv(item).innerHTML = ''; }\r

      \  disconnectCells(nid1, nid2) {\r

      \    this.removeEdge(this.getCommonEdgeId(nid1, nid2));\r

      \    let [item1, item2] = [Items[nid1], Items[nid2]];\r

      \    let [dir1, dir2] = this.getRelativeDirections(item1, item2);\r

      \    this.setItemBorder(item1, dir1);\r

      \    this.setItemBorder(item2, dir2);\r

      \  }\r

      \  cutPath(path, min, max) {\r

      \    let edges = path.edges();\r

      \    let len = edges.length;\r

      \    let [imin, imax] = [Math.floor(len * min), Math.floor(len *
      max)];\r

      \    let i = randomNumber(imin, imax);\r

      \    let edge = edges[i];\r

      \    let [nid1, nid2] = edge.connectedNodes().map(x => x.id());\r

      \    this.disconnectCells(nid1, nid2);\r

      \  }\r

      \  breadCrumbs(path, color = 'sienna', sz = 10) {\r

      \    for (const cell of path.nodes().map(x => Items[x.id()])) {\r

      \      mCellContent(iDiv(cell), { w: sz, h: sz, bg: color, fg:
      'white', rounding: '50%' });\r

      \    }\r

      \  }\r

      \  colorComponents() {\r

      \    let comps = this.getComponents();\r

      \    let wheel = getColorWheel('red', comps.length);\r

      \    let i = 0;\r

      \    for (const comp of comps) {\r

      \      this.breadCrumbs(comp, wheel[i]); i += 1;\r

      \    }\r

      \  }\r

      \  showGraph() {\r

      \    this.dGraph.style.opacity = 1;\r

      \    if (this.hasVisual) { show(this.dGraph); return; }\r

      \    this.addVisual(this.dGraph);\r

      \    this.storeCurrentPositions();\r

      \    this.addLayoutControls(this.sb, ['show', 'hide', 'prest',
      'grid', 'klay', 'rand', 'euler', 'reset', 'store']);\r

      \  }\r

      \  hideGraph() {\r

      \    if (isdef(this.dGraph) && this.hasVisual) {\r

      \      this.dGraph.style.display = 'none';\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class MazeGraph{}
    region: classes (_bau1.js)
    filename: _bau1.js
    type: cla
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Cardz:
    name: Cardz
    code: "class Cardz {\r

      \  static toString(c) { return c.rank + ' of ' + c.suit; }\r

      \  static _getKey(i) {\r

      \    if (i >= 52) return 'card_J1';\r

      \    let rank = Card52.getRank(i);\r

      \    let suit = Card52.getSuit(i);\r

      \    return 'card_' + rank + suit;\r

      \  }\r

      \  static _fromKey(k) {\r

      \    let ranks = 'A23456789TJQK';\r

      \    let suits = 'SHDC';\r

      \    let i_rank = ranks.indexOf(k[0]); \r

      \    let i_suit = suits.indexOf(k[1]); \r

      \    return i_suit * ranks.length + i_rank;\r

      \  }\r

      \  static getRankValue(i) { if (nundef(i)) return null; let r = i %
      13; return r == 0 ? 12 : r - 1; }\r

      \  static getRank(i) {\r

      \    let rank = (i % 13);\r

      \    if (rank == 0) rank = 'A';\r

      \    else if (rank >= 9) rank = ['T', 'J', 'Q', 'K'][rank - 9];\r

      \    else rank = rank + 1;\r

      \    return rank;\r

      \  }\r

      \  static getSuit(i) {\r

      \    let s = ['S', 'H', 'D', 'C'][divInt(i, 13)];\r

      \    return s;\r

      \  }\r

      \  static getShortString(c) { return c.suit + c.rank; }\r

      \  static turnFaceDown(c, color) {\r

      \    if (!c.faceUp) return;\r

      \    let svgCode = C52.card_2B; \r

      \    c.div.innerHTML = svgCode;\r

      \    if (isdef(color))
      c.div.children[0].children[1].setAttribute('fill', color);\r

      \    c.faceUp = false;\r

      \  }\r

      \  static turnFaceUp(c) {\r

      \    if (c.faceUp) return;\r

      \    c.div.innerHTML = C52[c.key];\r

      \    c.faceUp = true;\r

      \  }\r

      \  static fromSR(sr) { return Card52.fromShortString(sr); }\r

      \  static fromShortString(sr) {\r

      \    let key = sr[1].toUpperCase() + sr[0].toUpperCase();\r

      \    let i = Card52._fromKey(key);\r

      \    console.log(key, 'i', i)\r

      \    return Card52.getItem(i);\r

      \  }\r

      \  static getItem(i, h = 110, w) {\r

      \    if (nundef(w)) w = h * .7;\r

      \    if (nundef(i)) i = randomNumber(0, 51);\r

      \    if (isString(i) && i.length == 2) { i =
      Card52._fromKey(i[1].toUpperCase() + i[0].toUpperCase()); }\r

      \    let c = Card52._createUi(i, undefined, w, h);\r

      \    c.i = c.val = i;\r

      \    return c;\r

      \  }\r

      \  static _createUi(irankey, suit, w, h) {\r

      \    //#region set rank and suit from inputs\r

      \    let rank = irankey;\r

      \    if (nundef(irankey) && nundef(suit)) {\r

      \      [rank, suit] = Card52.randomRankSuit();\r

      \    } else if (nundef(irankey)) {\r

      \      irankey = '2';\r

      \      suit = 'B';\r

      \    } else if (nundef(suit)) {\r

      \      if (isNumber(irankey)) irankey = Card52._getKey(irankey);\r

      \      rank = irankey[5];\r

      \      suit = irankey[6];\r

      \    }\r

      \    if (rank == '10') rank = 'T';\r

      \    if (rank == '1') rank = 'A';\r

      \    if (nundef(suit)) suit = 'H'; else suit =
      suit[0].toUpperCase(); \r

      \    //#endregion\r

      \    //#region load svg for card_[rank][suit] (eg. card_2H)\r

      \    let cardKey = 'card_' + rank + suit;\r

      \    let svgCode = C52[cardKey]; \r

      \    svgCode = '<div>' + svgCode + '</div>';\r

      \    let el = mCreateFrom(svgCode);\r

      \    if (isdef(h) || isdef(w)) { mSize(el, w, h); }\r

      \    //#endregion\r

      \    return { rank: rank, suit: suit, key: cardKey, div: el, w: w,
      h: h, faceUp: true }; \r

      \  }\r

      \  static random() { return Card52.getItem(randomNumber(0, 51)); }\r

      \  static randomRankSuit() {\r

      \    let c = Card52.random();\r

      \    return [c.rank, c.suit];\r

      \  }\r

      \  static show(icard, dParent, h = 110, w = undefined) {\r

      \    if (isNumber(icard)) {\r

      \      if (nundef(w)) w = h * .7;\r

      \      icard = Card52.getItem(icard, h, w);\r

      \    }\r

      \    mAppend(dParent, icard.div);\r

      \  }\r

      }\r\n"
    sig: class Cardz{}
    region: cards (legacy.js)
    filename: legacy.js
    type: cla
    fname: legacy.js
    path: C:\xampp\htdocs\aroot\games\legacy.js
    datetime: 2022-09-07-06-17
    timestamp: 1662556634807.3772
    size: 192055
  AbsGraph1:
    name: AbsGraph1
    code: "class AbsGraph1 {\r

      \  constructor() {\r

      \    let defOptions = {\r

      \      maxZoom: 1,\r

      \      minZoom: .001,\r

      \      motionBlur: false,\r

      \      wheelSensitivity: 0.05,\r

      \      zoomingEnabled: false,\r

      \      userZoomingEnabled: false,\r

      \      panningEnabled: false,\r

      \      userPanningEnabled: false,\r

      \      boxSelectionEnabled: false,\r

      \      layout: { name: 'preset' },\r

      \      elements: [],\r

      \    };\r

      \    this.cy = cytoscape(defOptions);\r

      \  }\r

      \  clear() { this.cy.destroy(); }\r

      \  //#region access and algos\r

      \  getComponents() { return this.cy.elements().components(); }\r

      \  getComponentIds() { return this.cy.elements().components().map(x
      => x.id()); }\r

      \  getCommonEdgeId(nid1, nid2) { return nid1 + '_' + nid2; }\r

      \  getNumComponents() { return
      this.cy.elements().components().length; }\r

      \  getNode(id) { return this.cy.getElementById(id); }\r

      \  getNodes() { return this.cy.nodes(); }\r

      \  getNodeIds() { return this.cy.nodes().map(x => x.id()); }\r

      \  getNodeData() { return this.cy.nodes().map(x => x.data()); }\r

      \  getNodePositions() { return this.cy.nodes.map(x => x.position());
      }\r

      \  getEdges() { return this.cy.edges(); }\r

      \  getEdgeIds() { return this.cy.edges().map(x => x.id()); }\r

      \  getPosition(id) {\r

      \    let node = this.getNode(id);\r

      \    let pos = node.renderedPosition();\r

      \    return pos; \r

      \  }\r

      \  setPosition(id, x, y) { this.cy.getElementById(id).position({ x:
      x, y: y }); }\r

      \  setProp(id, prop, val) { this.cy.getElementById(id).data()[prop]
      = val; }\r

      \  getProp(id, prop) { return
      this.cy.getElementById(id).data()[prop]; }\r

      \  getDegree(id) { return this.cy.nodes('#' + id).degree(); }\r

      \  getNodeWithMaxDegree(idlist) {\r

      \    if (nundef(idlist)) idlist =
      this.cy.elements().filter('node').map(x => x.data().id);\r

      \    let imax = arrMinMax(idlist, x => this.getDegree(x)).imax;\r

      \    let id = idlist[imax];\r

      \    return id;\r

      \  }\r

      \  getShortestPathsFrom(id) { let res =
      this.cy.elements().dijkstra('#' + id); return res; }\r

      \  getShortestPathFromTo(nid1, nid2) {\r

      \    let funcs = this.dijkstra = this.getShortestPathsFrom(nid1);\r

      \    let path = funcs.pathTo('#' + nid2);\r

      \    return path;\r

      \  }\r

      \  getLengthOfShortestPath(nid1, nid2) {\r

      \    let funcs = this.dijkstra = this.getShortestPathsFrom(nid1);\r

      \    let len = funcs.distanceTo('#' + nid2);\r

      \    return len;\r

      \  }\r

      \  storeCurrentPositions(prop = 'center') {\r

      \    for (const n of this.getNodes()) {\r

      \      let id = n.id();\r

      \      let pos = this.getPosition(id);\r

      \      this.setProp(id, prop, pos);\r

      \    }\r

      \  }\r

      \  setPositionData(prop = 'center') {\r

      \    let ids = this.getNodeIds();\r

      \    for (const id of ids) {\r

      \      let pos = this.getProp(id, prop);\r

      \      if (isdef(pos)) this.setPosition(id, pos.x, pos.y);\r

      \      else return false;\r

      \    }\r

      \    return true;\r

      \  }\r

      \  sortNodesByDegree(idlist, descending = true) {\r

      \    if (nundef(idlist)) idlist = this.cy.nodes.map(x =>
      x.data().id);\r

      \    let nodes = idlist.map(x => this.getNode(x));\r

      \    for (const n of nodes) {\r

      \      n.degree = this.getDegree(n.id());\r

      \    }\r

      \    if (descending) sortByDescending(nodes, 'degree'); else
      sortBy(nodes, 'degree');\r

      \    return nodes;\r

      \  }\r

      \  //#endregion\r

      \  //#region modify nodes, edges\r

      \  addNode(data, coords) {\r

      \    if (nundef(data)) data = {};\r

      \    if (nundef(data.id)) data.id = getFruid();\r

      \    if (isdef(coords)) {\r

      \      coords.x -= this.cy.pan().x;\r

      \      coords.y -= this.cy.pan().y;\r

      \    } else { coords = { x: 0, y: 0 }; }\r

      \    var ele = this.cy.add({\r

      \      group: 'nodes',\r

      \      data: data,\r

      \      position: coords\r

      \    });\r

      \    return ele.id();\r

      \  }\r

      \  addNodes(n, datalist, coordlist) {\r

      \    let ids = [];\r

      \    if (nundef(datalist)) datalist = new Array(n).map(x => ({ id:
      getFruid() }));\r

      \    if (nundef(coordlist)) coordlist = new Array(n).map(x => ({
      coords: { x: 0, y: 0 } }));\r

      \    for (let i = 0; i < n; i++) {\r

      \      let id = this.addNode(datalist[i], coordlist[i]);\r

      \      ids.push(id);\r

      \    }\r

      \    return ids;\r

      \  }\r

      \  addEdge(nid1, nid2, data) {\r

      \    if (nundef(data)) data = {};\r

      \    data.id = this.getCommonEdgeId(nid1, nid2);\r

      \    data.source = nid1;\r

      \    data.target = nid2;\r

      \    var ele = this.cy.add({\r

      \      group: 'edges',\r

      \      data: data,\r

      \    });\r

      \    return ele.id();\r

      \  }\r

      \  addEdges(nOrNodePairList) {\r

      \    if (isNumber(nOrNodePairList)) {\r

      \      let nids = this.getNodeIds();\r

      \      let prod = arrPairs(nids);\r

      \      nOrNodePairList = choose(prod, nOrNodePairList);\r

      \    }\r

      \    let res = [];\r

      \    for (const pair of nOrNodePairList) {\r

      \      res.push(this.addEdge(pair[0], pair[1]));\r

      \    }\r

      \    return res;\r

      \  }\r

      \  removeNode(node) { this.removeElement(node); return
      this.getNodeIds(); }\r

      \  removeEdge(edge) { this.removeElement(edge); return
      this.getEdgeIds(); }\r

      \  removeElement(ne) { if (!isString(ne)) ne = ne.id();
      this.cy.getElementById(ne).remove(); }\r

      \  //#endregion\r

      \  //#region layouts\r

      \  breadthfirst() { this.cy.layout({ name: 'breadthfirst', animate:
      true }).run(); }\r

      \  circle() { this.cy.layout({ name: 'circle', animate: 'end'
      }).run(); }\r

      \  concentric() { this.cy.layout({ name: 'concentric', animate: true
      }).run(); }\r

      \  comcola() {\r

      \    let defaults = {\r

      \      name: 'cola',\r

      \      animate: true, \r

      \      refresh: 1, \r

      \      maxSimulationTime: 4000, \r

      \      ungrabifyWhileSimulating: false, \r

      \      fit: true, \r

      \      padding: 30, \r

      \      boundingBox: undefined, \r

      \      nodeDimensionsIncludeLabels: false, \r

      \      ready: function () { }, \r

      \      stop: function () { }, \r

      \      randomize: false, \r

      \      avoidOverlap: true, \r

      \      handleDisconnected: true, \r

      \      convergenceThreshold: 0.01, \r

      \      nodeSpacing: function (node) { return 10; }, \r

      \      flow: undefined, \r

      \      alignment: undefined, \r

      \      gapInequalities: undefined, \r

      \      edgeLength: undefined, \r

      \      edgeSymDiffLength: undefined, \r

      \      edgeJaccardLength: undefined, \r

      \      unconstrIter: undefined, \r

      \      userConstIter: undefined, \r

      \      allConstIter: undefined, \r

      \      infinite: false \r

      \    };\r

      \    let options = {\r

      \      name: 'cola',\r

      \      convergenceThreshold: 100,\r

      \      boundingBox: { x1: 20, y1: 20, w: 200, h: 200 },\r

      \    };\r

      \    copyKeys(options, defaults);\r

      \    console.log(defaults.boundingBox)\r

      \    this.cy.layout(defaults).run();\r

      \  }\r

      \  cose() { this.cy.layout({ name: 'cose', animate: 'end' }).run();
      }\r

      \  euler() { this.cy.layout({ name: 'euler', fit: true, padding: 25,
      animate: 'end' }).run(); }\r

      \  fcose() {\r

      \    var defaultOptions = {\r

      \      quality: \"default\",\r

      \      randomize: true,\r

      \      animate: true,\r

      \      animationDuration: 500,\r

      \      animationEasing: undefined,\r

      \      fit: true,\r

      \      padding: 30,\r

      \      nodeDimensionsIncludeLabels: false,\r

      \      uniformNodeDimensions: false,\r

      \      packComponents: true,\r

      \      step: \"all\",\r

      \      /* spectral layout options */\r

      \      samplingType: true,\r

      \      sampleSize: 25,\r

      \      nodeSeparation: 75,\r

      \      piTol: 0.0000001,\r

      \      /* incremental layout options */\r

      \      nodeRepulsion: node => 4500,\r

      \      idealEdgeLength: edge => 50,\r

      \      edgeElasticity: edge => 0.45,\r

      \      nestingFactor: 0.1,\r

      \      numIter: 2500,\r

      \      tile: true,\r

      \      tilingPaddingVertical: 10,\r

      \      tilingPaddingHorizontal: 10,\r

      \      gravity: 0.25,\r

      \      gravityRangeCompound: 1.5,\r

      \      gravityCompound: 1.0,\r

      \      gravityRange: 3.8,\r

      \      initialEnergyOnIncremental: 0.3,\r

      \      /* constraint options */\r

      \      fixedNodeConstraint: undefined,\r

      \      alignmentConstraint: undefined,\r

      \      relativePlacementConstraint: undefined,\r

      \      /* layout event callbacks */\r

      \      ready: () => { }, \r

      \      stop: () => { }, \r

      \      name: 'fcose',\r

      \    };\r

      \    this.cy.layout(defaultOptions).run(); \r

      \  }\r

      \  gridLayout() { this.cy.layout({ name: 'grid', animate: true
      }).run(); }\r

      \  presetLayout() {\r

      \    let hasCenterProp = this.setPositionData();\r

      \    if (!hasCenterProp) {\r

      \      console.log('no positions are preset: store first!');\r

      \    } else {\r

      \      let options = {\r

      \        name: 'preset',\r

      \        positions: undefined, \r

      \        zoom: undefined, \r

      \        pan: undefined, \r

      \        fit: true, \r

      \        padding: 30, \r

      \        animate: true, \r

      \        animationDuration: 500, \r

      \        animationEasing: undefined, \r

      \        animateFilter: function (node, i) { return true; }, \r

      \        ready: undefined, \r

      \        stop: undefined, \r

      \        transform: function (node, position) { return position; }
      \r

      \      };\r

      \      this.cy.layout(options);\r

      \      this.reset();\r

      \    }\r

      \  }\r

      \  randomLayout() { this.cy.layout({ name: 'random', animate: 'true'
      }).run(); }\r

      \  klay() {\r

      \    let klayDefaults = {\r

      \      // Following descriptions taken from
      http://layout.rtsys.informatik.uni-kiel.de:9444/Providedlayout.html?algor\
      ithm=de.cau.cs.kieler.klay.layered\r

      \      addUnnecessaryBendpoints: false, \r

      \      aspectRatio: 1.6, \r

      \      borderSpacing: 20, \r

      \      compactComponents: false, \r

      \      crossingMinimization: 'LAYER_SWEEP', \r

      \      /* LAYER_SWEEP The layer sweep algorithm iterates multiple
      times over the layers, trying to find node orderings that minimize the
      number of crossings. The algorithm uses randomization to increase the odds
      of finding a good result. To improve its results, consider increasing the
      Thoroughness option, which influences the number of iterations done. The
      Randomization seed also influences results.\r

      \      INTERACTIVE Orders the nodes of each layer by comparing their
      positions before the layout algorithm was started. The idea is that the
      relative order of nodes as it was before layout was applied is not
      changed. This of course requires valid positions for all nodes to have
      been set on the input graph before calling the layout algorithm. The
      interactive layer sweep algorithm uses the Interactive Reference Point
      option to determine which reference point of nodes are used to compare
      positions. */\r

      \      cycleBreaking: 'GREEDY', \r

      \      /* GREEDY This algorithm reverses edges greedily. The
      algorithm tries to avoid edges that have the Priority property set.\r

      \      INTERACTIVE The interactive algorithm tries to reverse edges
      that already pointed leftwards in the input graph. This requires node and
      port coordinates to have been set to sensible values.*/\r

      \      direction: 'UNDEFINED', \r

      \      /* UNDEFINED, RIGHT, LEFT, DOWN, UP */\r

      \      edgeRouting: 'ORTHOGONAL', \r

      \      edgeSpacingFactor: 0.5, \r

      \      feedbackEdges: false, \r

      \      fixedAlignment: 'NONE', \r

      \      /* NONE Chooses the smallest layout from the four possible
      candidates.\r

      \      LEFTUP Chooses the left-up candidate from the four possible
      candidates.\r

      \      RIGHTUP Chooses the right-up candidate from the four possible
      candidates.\r

      \      LEFTDOWN Chooses the left-down candidate from the four
      possible candidates.\r

      \      RIGHTDOWN Chooses the right-down candidate from the four
      possible candidates.\r

      \      BALANCED Creates a balanced layout from the four possible
      candidates. */\r

      \      inLayerSpacingFactor: 1.0, \r

      \      layoutHierarchy: false, \r

      \      linearSegmentsDeflectionDampening: 0.3, \r

      \      mergeEdges: false, \r

      \      mergeHierarchyCrossingEdges: true, \r

      \      nodeLayering: 'NETWORK_SIMPLEX', \r

      \      /* NETWORK_SIMPLEX This algorithm tries to minimize the
      length of edges. This is the most computationally intensive algorithm. The
      number of iterations after which it aborts if it hasn't found a result yet
      can be set with the Maximal Iterations option.\r

      \      LONGEST_PATH A very simple algorithm that distributes nodes
      along their longest path to a sink node.\r

      \      INTERACTIVE Distributes the nodes into layers by comparing
      their positions before the layout algorithm was started. The idea is that
      the relative horizontal order of nodes as it was before layout was applied
      is not changed. This of course requires valid positions for all nodes to
      have been set on the input graph before calling the layout algorithm. The
      interactive node layering algorithm uses the Interactive Reference Point
      option to determine which reference point of nodes are used to compare
      positions. */\r

      \      nodePlacement: 'BRANDES_KOEPF', \r

      \      /* BRANDES_KOEPF Minimizes the number of edge bends at the
      expense of diagram size: diagrams drawn with this algorithm are usually
      higher than diagrams drawn with other algorithms.\r

      \      LINEAR_SEGMENTS Computes a balanced placement.\r

      \      INTERACTIVE Tries to keep the preset y coordinates of nodes
      from the original layout. For dummy nodes, a guess is made to infer their
      coordinates. Requires the other interactive phase implementations to have
      run as well.\r

      \      SIMPLE Minimizes the area at the expense of... well, pretty
      much everything else. */\r

      \      randomizationSeed: 1, \r

      \      routeSelfLoopInside: false, \r

      \      separateConnectedComponents: true, \r

      \      spacing: 20, \r

      \      thoroughness: 7 \r

      \    };\r

      \    var options = {\r

      \      nodeDimensionsIncludeLabels: false, \r

      \      fit: true, \r

      \      padding: 20, \r

      \      animate: true, \r

      \      animateFilter: function (node, i) { return true; }, \r

      \      animationDuration: 500, \r

      \      animationEasing: undefined, \r

      \      transform: function (node, pos) { return pos; }, \r

      \      ready: this.reset.bind(this), \r

      \      stop: undefined, \r

      \      klay: {\r

      \        addUnnecessaryBendpoints: false, \r

      \        aspectRatio: 1.6, \r

      \        borderSpacing: 20, \r

      \        compactComponents: false, \r

      \        crossingMinimization: 'LAYER_SWEEP', \r

      \        cycleBreaking: 'GREEDY', \r

      \        direction: 'UNDEFINED', \r

      \        edgeRouting: 'ORTHOGONAL', \r

      \        edgeSpacingFactor: 0.5, \r

      \        feedbackEdges: false, \r

      \        fixedAlignment: 'NONE', \r

      \        inLayerSpacingFactor: 1.0, \r

      \        layoutHierarchy: false, \r

      \        linearSegmentsDeflectionDampening: 0.3,\r

      \        mergeEdges: false, \r

      \        mergeHierarchyCrossingEdges: true, \r

      \        nodeLayering: 'NETWORK_SIMPLEX', \r

      \        nodePlacement: 'INTERACTIVE', \r

      \        /* BRANDES_KOEPF Minimizes the number of edge bends at the
      expense of diagram size: diagrams drawn with this algorithm are usually
      higher than diagrams drawn with other algorithms.\r

      \        LINEAR_SEGMENTS Computes a balanced placement.\r

      \        INTERACTIVE Tries to keep the preset y coordinates of nodes
      from the original layout. For dummy nodes, a guess is made to infer their
      coordinates. Requires the other interactive phase implementations to have
      run as well.\r

      \        SIMPLE Minimizes the area at the expense of... well, pretty
      much everything else. */\r

      \        randomizationSeed: 1, \r

      \        routeSelfLoopInside: false, \r

      \        separateConnectedComponents: true, \r

      \        spacing: 20, \r

      \        thoroughness: 3 \r

      \      },\r

      \      name: 'klay',\r

      \      priority: function (edge) { return null; }, \r

      \    };\r

      \    this.cy.layout(options).run();\r

      \  }\r

      \  //#endregion\r

      \  //#region ui functions\r

      \  fit() { this.cy.fit(); }\r

      \  center() { this.cy.center(); this.cy.fit(); }\r

      \  reset() { this.pan0(); this.zoom1(); this.center(); }\r

      \  pan0() { this.cy.pan({ x: 0, y: 0 }); }\r

      \  zoom1() { this.cy.zoom(1); }\r

      \  isPan() { return this.cy.panningEnabled(); }\r

      \  isZoom() { return this.cy.zoomingEnabled(); }\r

      \  enablePanZoom() { this.pan(true); this.zoom(true); }\r

      \  pan(isOn, reset = true) {\r

      \    this.cy.panningEnabled(isOn);\r

      \    this.cy.userPanningEnabled(isOn);\r

      \    if (!isOn && reset) { this.pan0(); this.center(); }\r

      \  }\r

      \  zoom(isOn, minZoom = .25, maxZoom = 1, reset = true) {\r

      \    this.cy.zoomingEnabled(isOn);\r

      \    this.cy.userZoomingEnabled(isOn);\r

      \    if (!isOn && reset) { this.zoom1(); this.center(); }\r

      \    else if (isOn) { this.cy.minZoom(minZoom);
      this.cy.maxZoom(maxZoom); }\r

      \  }\r

      \  closeLayoutControls() { if (isdef(this.sb)) hide(this.sb); }\r

      \  addLayoutControls(sb, buttonlist) {\r

      \    let buttons = {\r

      \      BFS: mButton('BFS', () => this.breadthfirst(), sb, {},
      ['tbb']),\r

      \      circle: mButton('circle', () => this.circle(), sb, {},
      ['tbb']),\r

      \      CC: mButton('CC', () => this.concentric(), sb, {},
      ['tbb']),\r

      \      cola: mButton('cola', () => this.comcola(), sb, {},
      ['tbb']),\r

      \      cose: mButton('cose', () => this.cose(), sb, {}, ['tbb']),\r

      \      euler: mButton('euler', () => this.euler(), sb, {},
      ['tbb']),\r

      \      fcose: mButton('fcose', () => this.fcose(), sb, {},
      ['tbb']),\r

      \      grid: mButton('grid', () => this.gridLayout(), sb, {},
      ['tbb']),\r

      \      klay: mButton('klay', () => this.klay(), sb, {}, ['tbb']),\r

      \      prest: mButton('prest', () => this.presetLayout(), sb, {},
      ['tbb']),\r

      \      rand: mButton('rand', () => this.randomLayout(), sb, {},
      ['tbb']),\r

      \      reset: mButton('reset', () => this.reset(), sb, {},
      ['tbb']),\r

      \      fit: mButton('fit', () => this.fit(), sb, {}, ['tbb']),\r

      \      show: mButton('show', () => this.showGraph(), sb, {},
      ['tbb']),\r

      \      hide: mButton('hide', () => this.hideGraph(), sb, {},
      ['tbb']),\r

      \      store: mButton('store', () => this.storeCurrentPositions(),
      sb, {}, ['tbb']),\r

      \    };\r

      \    for (const b in buttons) {\r

      \      if (isdef(buttonlist) && !buttonlist.includes(b))
      hide(buttons[b]);\r

      \    }\r

      \    return buttons;\r

      \  }\r

      \  addVisual(dParent, styles = {}) {\r

      \    if (this.hasVisual) return;\r

      \    this.hasVisual = true;\r

      \    this.id = nundef(dParent.id) ? getUID() : dParent.id;\r

      \    let styleDict = {\r

      \      node: { 'width': 25, 'height': 25, 'background-color': 'red',
      \"color\": \"#fff\", 'label': 'data(id)', \"text-valign\": \"center\",
      \"text-halign\": \"center\", },\r

      \      edge: { 'width': 2, 'line-color': 'silver', 'curve-style':
      'haystack', },\r

      \      'node.highlight': { 'background-color': 'yellow' },\r

      \      'node.trans': { 'opacity': '0.5' },\r

      \    }\r

      \    for (const ks of ['node', 'edge', 'node.highlight',
      'node.trans']) {\r

      \      if (isdef(styles[ks])) {\r

      \        for (const k in styles[ks]) {\r

      \          let [prop, val] = translateToCssStyle(k, styles[ks][k],
      false);\r

      \          styleDict[ks][prop] = val;\r

      \        }\r

      \      }\r

      \    }\r

      \    let cyStyle = [];\r

      \    for (const k in styleDict) { cyStyle.push({ selector: k, style:
      styleDict[k] }); }\r

      \    let size = getSize(dParent);\r

      \    let d1 = mDiv(dParent, { position: 'relative', bg: 'green', w:
      size.w, left: 0, top: 0, h: size.h, align: 'left' });\r

      \    this.cy.mount(d1);\r

      \    this.cy.style(cyStyle);\r

      \    this.enablePanZoom();\r

      \    iAdd(this, { div: dParent, dCy: d1 });\r

      \  }\r

      \  //#endregion\r

      }\r\n"
    sig: class AbsGraph1{}
    region: nur (testing.js)
    filename: testing.js
    type: cla
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  SimpleGraph:
    name: SimpleGraph
    code: "class SimpleGraph extends AbsGraph1 { \r

      \  constructor(dParent, styles = {}) {\r

      \    super();\r

      \    upgradeToSimpleGraph(this, dParent, styles);\r

      \  }\r

      }\r\n"
    sig: class SimpleGraph{}
    region: nur (testing.js)
    filename: testing.js
    type: cla
    fname: testing.js
    path: C:\xampp\htdocs\aroot\base\js\testing.js
    datetime: 2022-03-01-05-52
    timestamp: 1646142754752.7922
    size: 103540
  SoloPlayer:
    name: SoloPlayer
    code: "class SoloPlayer {\r

      \  constructor(user) {\r

      \    this.color = getColorDictColor(user.settings.userColor);\r

      \    this.id = user.id;\r

      \    this.score = 0;\r

      \  }\r

      }\r\n"
    sig: class SoloPlayer{}
    region: ai (leg_belinda.js)
    filename: leg_belinda.js
    type: cla
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  AIPlayer:
    name: AIPlayer
    code: "class AIPlayer {\r

      \  constructor(max_depth = -1) {\r

      \    this.id = getUID('AI');\r

      \    this.color = randomColor();\r

      \    this.type = 'ai';\r

      \    this.score = 0;\r

      \  }\r

      \  setData(o) { copyKeys(o, this); }\r

      }\r\n"
    sig: class AIPlayer{}
    region: ai (leg_belinda.js)
    filename: leg_belinda.js
    type: cla
    fname: leg_belinda.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\leg_belinda.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691765.855
    size: 96582
  Banner:
    name: Banner
    code: "class Banner {\r

      \  constructor(pos,dParent) { this.pos=pos; this.dParent =
      isdef(dParent) ? dParent : dBanner; this.init(); }\r

      \  clear() { clearElement(this.dParent); this.dParent.onclick =
      null; hide(this.dParent); }\r

      \  _createDivs() {\r

      \    this.dInstruction = mDiv(this.dContent);\r

      \    this.dMain = mDiv(this.dContent);\r

      \    this.dHint = mDiv(this.dContent); this.dHint.innerHTML =
      'hallo'; this.dHint.style.opacity = 0;\r

      \  }\r

      \  _createScreen() {\r

      \    show(this.dParent);\r

      \    let bg = colorTrans('silver', .25);\r

      \    let d = mScreen(this.dParent, { bg: bg, display: 'flex',
      layout: 'fvcc' });\r

      \    let dContent = mDiv(d, { display: 'flex', layout: 'fvcs', fg:
      'contrast', fz: 24, bg: 'silver', patop: 50, pabottom: 50, matop: -50, w:
      '100vw' });\r

      \    if (isdef(this.pos)) mStyle(dContent,{matop:this.pos});\r

      \    return [d, dContent];\r

      \  }\r

      \  init() {\r

      \    [this.div, this.dContent] = this._createScreen();\r

      \    this.dParent.onclick = () => this.clear();\r

      \    this._createDivs();\r

      \  }\r

      \  message(arr, callback) {\r

      \    this.dInstruction.innerHTML = arr.join(' ');\r

      \    if (isdef(callback)) this.dParent.onclick = () => {
      this.clear(); callback(); };\r

      \  }\r

      }\r\n"
    sig: class Banner{}
    region: classes (banner.js)
    filename: banner.js
    type: cla
    fname: banner.js
    path: C:\xampp\htdocs\aroot\belinda\js\banner.js
    datetime: 2022-02-08-05-08
    timestamp: 1644325691928.8552
    size: 1158
  SpeechAPI:
    name: SpeechAPI
    code: "class SpeechAPI {\r

      \  constructor(lang) {\r

      \    this.recorder = new Recorder(lang);\r

      \    this.speaker = new Speaker(lang);\r

      \    SessionId = Date.now();\r

      \  }\r

      \  testRecorder() {\r

      \    this.recorder.start();\r

      \  }\r

      \  train() {\r

      \  }\r

      \  setLanguage(lang) {\r

      \    this.speaker.setLanguage(lang);\r

      \    this.recorder.setLanguage(lang);\r

      \  }\r

      \  isSpeakerRunning() { return this.speaker.isRunning; }\r

      \  startRecording(lang, callback) {\r

      \    this.recorder.isCancelled = false;\r

      \    this.recorder.callback = callback;\r

      \    this.recorder.setLanguage(lang);\r

      \    this.recorder.start();\r

      \  }\r

      \  stopRecording() {\r

      \    this.recorder.isCancelled = true;\r

      \    this.recorder.stop();\r

      \  }\r

      \  say(text, r = .5, p = .8, v = MASTERVOLUME, voicekey, callback,
      lang) {\r

      \    if (isdef(lang)) this.speaker.setLanguage(lang);\r

      \    this.speaker.enq(arguments);\r

      \    this.speaker.deq();\r

      \  }\r

      \  stopSpeaking() {\r

      \    this.speaker.clearq();\r

      \  }\r

      }\r\n"
    sig: class SpeechAPI{}
    region: const (speech.js)
    filename: speech.js
    type: cla
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  Recorder:
    name: Recorder
    code: "class Recorder {\r

      \  constructor(lang) {\r

      \    let rec = this.rec = new webkitSpeechRecognition();\r

      \    rec.continuous = true;\r

      \    rec.interimResults = true;\r

      \    rec.maxAlternatives = 5;\r

      \    this.setLanguage(lang);\r

      \    this.isRunning = false;\r

      \    this.isCancelled = false;\r

      \    this.result = null;\r

      \    this.isFinal = null;\r

      \    this.confidence = null;\r

      \    this.callback = null;\r

      \    let genHandler = (ev, name) => {\r

      \      console.log('genHandler', name)\r

      \      if (RecogOutput) console.log('recorder', name, 'isCancelled',
      this.isCancelled, 'isRunning', this.isRunning);\r

      \    }\r

      \    rec.onerror = ev => {\r

      \      genHandler(ev, 'error');\r

      \      if (ev.error == 'network') {\r

      \        alert('no internet connection: speech recognition is not
      available! (error:' + ev.error + ')');\r

      \        RecognitionAvailable = false;\r

      \      } \r

      \      if (RecogOutputError) console.error(ev);\r

      \      this.stop();\r

      \    };\r

      \    rec.onstart = ev => {\r

      \      genHandler(ev, 'started');\r

      \      if (!this.isCancelled) this.isRunning = true;\r

      \    };\r

      \    rec.onresult = ev => {\r

      \      genHandler(ev, 'result!');\r

      \      if (!this.isCancelled) this.processResult(ev);\r

      \    };\r

      \    rec.onend = ev => {\r

      \      genHandler(ev, 'ended');\r

      \      if (!this.isCancelled && this.callback) {\r

      \        this.callback(this.isFinal, this.result, this.confidence,
      SessionId);\r

      \      }\r

      \      this.isCancelled = this.isRunning = false;\r

      \      this.callback = null;\r

      \    };\r

      \  }\r

      \  processResult(ev) {\r

      \    let res = ev.results[0];\r

      \    this.isFinal = res.isFinal;\r

      \    this.result = res[0].transcript;\r

      \    this.confidence = res[0].confidence;\r

      \    if (this.isFinal) console.log('....result', this.result,
      'FINAL?', this.isFinal)\r

      \    if (this.isFinal) {\r

      \      this.stop();\r

      \    }\r

      \  }\r

      \  setLanguage(lang) { this.rec.lang = (lang == 'E' ? 'en-US' :
      'de-DE'); }\r

      \  start() {\r

      \    MicrophoneShow();\r

      \    setTimeout(() => this.rec.start(), 10);\r

      \  }\r

      \  stop() {\r

      \    MicrophoneHide();\r

      \    setTimeout(() => this.rec.stop(), 10);\r

      \  }\r

      \  getLastResult() {\r

      \    return { isFinal: this.isFinal, result: this.result,
      confidence: this.confidence };\r

      \  }\r

      }\r\n"
    sig: class Recorder{}
    region: const (speech.js)
    filename: speech.js
    type: cla
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  Speaker:
    name: Speaker
    code: "class Speaker {\r

      \  static get VOICES() {\r

      \    return {\r

      \      david: 'Microsoft David - English (United States)',
      //'Microsoft David Desktop - English',\r

      \      mark: 'Microsoft Mark - English (United States)',\r

      \      austria: 'Microsoft Michael - German (Austria)',\r

      \      zira: 'Microsoft Zira Desktop - English',\r

      \      us: 'Google US English',\r

      \      ukFemale: 'Google UK English Female',\r

      \      ukMale: 'Google UK English Male',\r

      \      deutsch: 'Google Deutsch',\r

      \      spanish: 'Google español',\r

      \      D: 'Google Deutsch',\r

      \      S: 'Google español',\r

      \      F: 'Google français',\r

      \      french: 'Google français',\r

      \      C: 'Google 日本語',\r

      \      E: 'Google US English',\r

      \      apple: 'Susan',\r

      \    };\r

      \  }\r

      \  constructor(lang) {\r

      \    this.lang = lang;\r

      \    this.q = [];\r

      \    this.isRunning = false;\r

      \    let awaitVoices = new Promise(resolve =>\r

      \      speechSynthesis.onvoiceschanged = resolve)\r

      \      .then(this.initVoices.bind(this));\r

      \  }\r

      \  initVoices() {\r

      \    this.voices = speechSynthesis.getVoices().sort(function (a, b)
      {\r

      \      const aname = a.name.toUpperCase(), bname =
      b.name.toUpperCase();\r

      \      if (aname < bname) return -1;\r

      \      else if (aname == bname) return 0;\r

      \      else return +1;\r

      \    });\r

      \    if (isdef(mBy('output'))) mBy('output').innerHTML =
      this.voices.map(x => x.name); \r

      \  }\r

      \  setLanguage(lang) { this.lang = lang; }\r

      \  enq(args) { this.q.push(args); }\r

      \  deq() {\r

      \    if (nundef(this.voices)) {\r

      \      setTimeout(this.deq.bind(this), 500);\r

      \    }\r

      \    else if (!isEmpty(this.q)) {\r

      \      let args = this.q.pop();\r

      \      this.utter(...args);\r

      \    } else {\r

      \      this.isRunning = false;\r

      \    }\r

      \  }\r

      \  clearq() {\r

      \    this.q = [];\r

      \  }\r

      \  output(text) { let d = mBy('output'); if (isdef(d)) d.innerHTML
      += `<br>${text}`; else console.log('DONE', text); }\r

      \  say(text, r = .5, p = .8, v = MASTERVOLUME, voicekey, callback,
      lang) {\r

      \    if (isdef(lang)) this.speaker.setLanguage(lang);\r

      \    this.enq([text, r, p, v, valf(voicekey, 'apple'),
      valf(callback,() => this.output(text))]);\r

      \    this.deq();\r

      \  }\r

      \  say_simple(text, vkey) {\r

      \    this.utter(text, .5, .8, 1, valf(vkey, 'apple'), () =>
      this.output(text));\r

      \  }\r

      \  sayQ(text, vkey) {\r

      \    if (isdef(lang)) this.setLanguage(lang);\r

      \    this.enq([text, .5, .8, 1, valf(vkey, 'apple'), () =>
      mBy('output').innerHTML = text]);\r

      \    this.deq();\r

      \  }\r

      \  utter(text, r = .5, p = .8, v = MASTERVOLUME, voicekey, callback
      = null) {\r

      \    speechSynthesis.cancel();\r

      \    var u = new SpeechSynthesisUtterance();\r

      \    let [vkey, voice] = this.findSuitableVoice(text, voicekey);\r

      \    u.text = text;\r

      \    u.rate = r;\r

      \    u.pitch = p;\r

      \    u.volume = v;\r

      \    u.voice = voice;\r

      \    u.onend = ev => {\r

      \      if (isdef(callback)) callback();\r

      \      this.deq();\r

      \    };\r

      \    this.isRunning = true;\r

      \    speechSynthesis.speak(u);\r

      \  }\r

      \  findSuitableVoice(text, k) {\r

      \    let voicenames = Speaker.VOICES;\r

      \    this.output('voices: '+this.voices.map(x=>x.name).join(','));\r

      \    k = this.lang;\r

      \    let voiceName = voicenames[k];\r

      \    let voice = firstCond(this.voices, x => startsWith(x.name,
      voiceName));\r

      \    this.output(`voice ${k} named ${voiceName}
      exists?${isdef(voice)}`);\r

      \    return [k, voice];\r

      \  }\r

      \  findSuitableVoice_orig(text, voicekey) {\r

      \    let voicenames = Speaker.VOICES;\r

      \    let vkey = 'zira';\r

      \    if (this.lang == 'D') {\r

      \      vkey = 'deutsch';\r

      \    } else if (text.includes('bad')) {\r

      \      vkey = 'zira';\r

      \    } else if (voicekey == 'random') {\r

      \      vkey = chooseRandom(['david', 'zira', 'us', 'ukFemale',
      'ukMale']);\r

      \    } else if (isdef(voicenames[voicekey])) {\r

      \      vkey = voicekey;\r

      \    } else if (isdef(voicekey)) {\r

      \      let tryVoiceKey = firstCondDict(voicenames, x =>
      startsWith(x, voicekey));\r

      \      if (tryVoiceKey) vkey = tryVoiceKey;\r

      \    }\r

      \    //vkey=this.lang;//'david';//'mark'\r

      \    let voiceName = voicenames[vkey];\r

      \    let voice = firstCond(this.voices, x => startsWith(x.name,
      voiceName));\r

      \    return [vkey, voice];\r

      \  }\r

      }\r\n"
    sig: class Speaker{}
    region: const (speech.js)
    filename: speech.js
    type: cla
    fname: speech.js
    path: C:\D\a04\basejs\speech.js
    datetime: 2022-11-14-07-12
    timestamp: 1668438763195.5222
    size: 17165
  TimeIt:
    name: TimeIt
    code: "class TimeIt {\r

      \  constructor(msg = '*', showOutput = true) {\r

      \    this.showOutput = showOutput;\r

      \    this.init(msg);\r

      \  }\r

      \  getTotalTimeElapsed() {\r

      \    let tNew = new Date();\r

      \    let tDiffStart = tNew.getTime() -
      this.namedTimestamps.start.getTime();\r

      \    return tDiffStart;\r

      \  }\r

      \  tacit() { this.showOutput = false; }\r

      \  timeStamp(name) {\r

      \    let tNew = new Date();\r

      \    let tDiff = tNew.getTime() -
      this.namedTimestamps.start.getTime();\r

      \    if (this.showOutput) console.log('___', tDiff, 'msecs * to',
      name);\r

      \    this.t = tNew;\r

      \    this.namedTimestamps[name] = tNew;\r

      \  }\r

      \  reset() { this.init('timing start') }\r

      \  init(msg) {\r

      \    this.t = new Date();\r

      \    if (this.showOutput) console.log('___', msg);\r

      \    this.namedTimestamps = { start: this.t };\r

      \  }\r

      \  showSince(name, msg = 'now') {\r

      \    let tNew = new Date();\r

      \    let tNamed = this.namedTimestamps[name];\r

      \    if (this.showOutput) if (!tNamed) { console.log(name, 'is not a
      timestamp!'); return; }\r

      \    let tDiff = tNew.getTime() - tNamed.getTime();\r

      \    if (this.showOutput) console.log('___', tDiff, 'msecs', name,
      'to', msg);\r

      \    this.t = tNew;\r

      \  }\r

      \  format(t) { return '___' + t.getSeconds() + ':' +
      t.getMilliseconds(); }\r

      \  show(msg) { this.showTime(msg); }\r

      \  showTime(msg = '*') {\r

      \    let tNew = new Date();\r

      \    let tDiff = tNew.getTime() - this.t.getTime();\r

      \    let tDiffStart = tNew.getTime() -
      this.namedTimestamps.start.getTime();\r

      \    if (this.showOutput) console.log('___ ', tDiff, 'msecs to',
      msg, '(' + tDiffStart, 'total)');\r

      \    this.t = tNew;\r

      \  }\r

      \  start_of_cycle(msg) {\r

      \    this.init(msg);\r

      \  }\r

      \  end_of_cycle(msg) {\r

      \    let tNew = new Date();\r

      \    let tDiff = tNew.getTime() - this.t.getTime();\r

      \    let tDiffStart = tNew.getTime() -
      this.namedTimestamps.start.getTime();\r

      \    if (this.showOutput) console.log('___ ' + tDiff + ' msecs',
      msg, 'to EOC (total: ' + tDiffStart + ')');\r

      \  }\r

      }\r\n"
    sig: class TimeIt{}
    region: classes (_bau1.js)
    filename: _bau1.js
    type: cla
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Game:
    name: Game
    code: "class Game {\r

      \  constructor(name, o) {\r

      \    this.name = name;\r

      \    copyKeys(o, this);\r

      \    this.maxLevel = isdef(this.levels) ?
      Object.keys(this.levels).length - 1 : 0;\r

      \    this.id = name;\r

      \    this.color = getColorDictColor(this.color);\r

      \  }\r

      \  clear() { clearTimeout(this.TO); clearFleetingMessage(); }\r

      \  startGame() { }\r

      \  start_Level() {\r

      \    this.keys = setKeysG(this, filterWordByLengthG, 25);\r

      \    console.assert(nundef(this.numPics) || this.keys.length >=
      this.numPics, 'WAAAAAAAAAAAS? nMin in setKeys nicht richtig!!!!! ' +
      this.numPics + ' ' + this.keys.length)\r

      \  }\r

      \  startRound() { }\r

      \  prompt() {\r

      \    myShowPics(this.controller.evaluate.bind(this.controller));\r

      \    setGoal();\r

      \    show_instruction(`click <b>${Goal.label.toUpperCase()}</b>`,
      dTitle, `click ${Goal.label}`);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    sayTryAgain();\r

      \    if (this.showHint) shortHintPic();\r

      \    return 10;\r

      \  }\r

      \  activate() { }\r

      \  interact() { }\r

      \  eval(ev) {\r

      \    ev.cancelBubble = true;\r

      \    let item = findItemFromEvent(Pictures, ev);\r

      \    Selected = { pic: item, feedbackUI: iDiv(item), sz:
      getRect(iDiv(item)).h };\r

      \    Selected.reqAnswer = Goal.label;\r

      \    Selected.answer = item.label;\r

      \    if (item.label == Goal.label) { return true; } else { return
      false; }\r

      \  }\r

      }\r\n"
    sig: class Game{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GAbacus:
    name: GAbacus
    code: "class GAbacus extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() { this.successFunc = successThumbsUp; this.failFunc =
      failThumbsDown; this.correctionFunc = this.showCorrectSequence.bind(this);
      }\r

      \  showCorrectSequence() { let t = correctBlanks(); if (this.level
      <= 1 && (this.step <= 3 || this.op != 'mult')) showSayHint(3); return t +
      1000; }\r

      \  start_Level() { if (!isList(this.steps)) this.steps =
      [this.steps]; this.numPics = 2; }\r

      \  prompt() {\r

      \    mLinebreak(dTable, 2);\r

      \    showHiddenThumbsUpDown(110);\r

      \    mLinebreak(dTable);\r

      \    this.seq = makeExpSequence();\r

      \    let panel = mDiv(dTable, { bg: '#00000080', padding: 20,
      rounding: 10 });\r

      \    [this.words, this.letters] = showEquation(this.seq, panel);\r

      \    setNumberSequenceGoal();\r

      \    mLinebreak(dTable, 30);\r

      \    let wr = (this.language == 'E' ? 'calculate' : \"rechne\");\r

      \    let spOp = this.oop.sp; if (this.language == 'D') spOp =
      DD[spOp];\r

      \    let sp = this.operand + ' ' + spOp + ' ' + this.step + ' ?';\r

      \    show_instruction(wr, dTitle, sp);\r

      \    if (this.level <= 1 && this.showHint && (this.step <= 3 ||
      this.op != 'mult'))\r

      \      hintEngineStart(getOperationHintString, [0, 1], 5000 +
      this.level * 1000);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    if (this.level <= 1 && this.showHint && (this.step <= 3 ||
      this.op != 'mult')) hintEngineStart(getOperationHintString, [0, 1], 5000 +
      this.level * 1000);\r

      \    TOMain = setTimeout(() => getWrongChars().map(x =>
      unfillChar(x)), 500);\r

      \    return 600;\r

      \  }\r

      \  activate() { addKeyup('G', this.interact.bind(this)); }\r

      \  interact(ev) {\r

      \    if (!isNumber(ev.key) && ev.key != '-') return;\r

      \    clearFleetingMessage();\r

      \    if (!canAct()) return;\r

      \    let sel = Selected = onKeyWordInput(ev);\r

      \    if (nundef(sel)) return;\r

      \    let lastInputCharFilled = sel.target;\r

      \    console.assert(sel.isMatch == (lastInputCharFilled.letter ==
      sel.ch), lastInputCharFilled, sel.ch);\r

      \    if (sel.isMatch && sel.isVeryLast) {\r

      \      deactivateFocusGroup();\r

      \      this.controller.evaluate.bind(this.controller)(true);\r

      \    } else if (sel.isMatch && sel.isLastOfGroup) {\r

      \      sel.target.isBlank = false;\r

      \      sel.target.group.hasBlanks = false;\r

      \      removeInPlace(Goal.blankWords, sel.target.group);\r

      \      removeInPlace(Goal.blankChars, sel.target);\r

      \      deactivateFocusGroup();\r

      \      console.log('haaaaaaaaaaaalo', Goal.isFocus)\r

      \    } else if (sel.isMatch) {\r

      \      removeInPlace(Goal.blankChars, sel.target);\r

      \      sel.target.isBlank = false;\r

      \    } else if (sel.isVeryLast) {\r

      \      Selected.words = getInputWords();\r

      \      Selected.answer = getInputWordString();\r

      \      Selected.req = getCorrectWordString();\r

      \      deactivateFocusGroup();\r

      \      this.controller.evaluate.bind(this.controller)(false);\r

      \    } else if (sel.isLastOfGroup) {\r

      \      Selected.words = getInputWords();\r

      \      Selected.answer = getInputWordString();\r

      \      Selected.req = getCorrectWordString();\r

      \      deactivateFocusGroup();\r

      \      this.controller.evaluate.bind(this.controller)(false);\r

      \    } else {\r

      \      if (!this.silent) { writeSound(); playSound('incorrect1');
      }\r

      \      deactivateFocusGroup();\r

      \      showFleetingMessage('does NOT fit: ' + Selected.ch, 0, { fz:
      24 });\r

      \      setTimeout(() => unfillCharInput(Selected.target), 500);\r

      \    }\r

      \  }\r

      \  eval(isCorrect) { return isCorrect; }\r

      }\r\n"
    sig: class GAbacus{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GAnagram:
    name: GAnagram
    code: "class GAnagram_PCOnly extends Game {\r

      \  constructor(name, o) {\r

      \    super(name, o);\r

      \    if (this.language == 'C') {\r

      \      this.realLanguage = this.language;\r

      \      this.language = chooseRandom('E', 'S', 'F', 'D');\r

      \    }\r

      \  }\r

      \  clear() { super.clear(); if (isdef(this.language)) this.language
      = this.language; }\r

      \  start_Level() {\r

      \    this.keys = setKeysG(this, filterWordByLengthG, 10);\r

      \    if (this.keys.length < 10) { this.keys = setKeysG(this,
      filterWordByLengthG, 10, 'all'); }\r

      \  }\r

      \  prompt() {\r

      \    myShowPics(null, {}, {});\r

      \    if (this.hidden) {\r

      \      let d = iDiv(Pictures[0]);\r

      \      animate(d, 'aniAppearMinute', 100000);\r

      \    }\r

      \    setGoal();\r

      \    showInstruction(this.showWord ? Goal.label : '', this.language
      == 'E' ? 'drag letters to form' : \"forme\", dTitle, true);\r

      \    mLinebreak(dTable, 25);\r

      \    let fz = 120; let word = Goal.label.toUpperCase(); let wlen =
      word.length;\r

      \    let dpEmpty = createLetterInputsX(word, dTable, { pabottom: 5,
      bg: 'grey', display: 'inline-block', fz: fz, w: fz, h: fz * 1.1, margin: 4
      }); \r

      \    let inputs = blankInputs(dpEmpty, range(0, wlen - 1), false);\r

      \    for (let i = 0; i < inputs.length; i++) {\r

      \      let l = iDiv(inputs[i]);\r

      \      l.ondragover = ev => ev.preventDefault();\r

      \      l.ondrop = event => { event.preventDefault(); var data =
      event.dataTransfer.getData(\"Text\"); event.target.innerHTML = data; }\r

      \      makeDraggableInner(l);\r

      \      mClass(l, 'dropzone');\r

      \      l.id = 'input' + i;\r

      \    }\r

      \    this.inputs = inputs;\r

      \    let x = mLinebreak(dTable, 50);\r

      \    fz = 60; word = Goal.label.toUpperCase();\r

      \    let dp = createLetterInputsX(word, dTable, { bg: 'silver',
      display: 'inline-block', fz: fz, w: fz, h: fz * 1.1, margin: 4 }); \r

      \    scrambleInputs(dp);\r

      \    let letters = Array.from(dp.children);\r

      \    for (let i = 0; i < letters.length; i++) {\r

      \      let l = letters[i];\r

      \      l.setAttribute('draggable', true);\r

      \      makeDraggableInner(l);\r

      \      l.id = 'letter' + i;\r

      \    }\r

      \    this.letters = letters;\r

      \    mLinebreak(dTable, 50);\r

      \    this.bDone = mButton('Done!',
      this.controller.evaluate.bind(this.controller), dTable, { fz: 28, matop:
      10, rounding: 10, padding: 16, border: 8 }, ['buttonClass']);\r

      \    if (this.hidden) showFleetingMessage('category: ' +
      Pictures[0].info.subgroup, 5000);\r

      \    else if (!this.showWord) { showLabelPercentHintAfter(50, 6000);
      }\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    sayTryAgain();\r

      \    setTimeout(() => {\r

      \      this.inputs.map(x => iDiv(x).innerHTML = '_')\r

      \    }, 1500);\r

      \    return 10;\r

      \  }\r

      \  eval() {\r

      \    let s = this.inputs.map(x => iDiv(x).innerHTML);\r

      \    let w = s = s.join('');\r

      \    let word = Goal.label.toUpperCase();\r

      \    Selected = { answer: w, reqAnswer: word, feedbackUI: iDiv(Goal)
      };\r

      \    return w == word;\r

      \  }\r

      }\r\n"
    sig: class GAnagram{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GColoku:
    name: GColoku
    code: "class GColoku extends Game {\r

      \  startGame() {\r

      \    this.correctionFunc = () => {\r

      \      if (this.qName == 'isThisSudokuCorrect') {\r

      \        mStyle(Goal.buttonCorrect, { bg: 'green' });\r

      \        animate(Goal.buttonCorrect, 'komisch', 1000);\r

      \        if (!Goal.correct) {\r

      \          animateColorScale(Goal.correctionFeedbackUI,
      Goal.item.color, 1.5, 1500);\r

      \          this.dComment.innerHTML = 'rule broken! duplicate in ' +
      Goal.err.type;\r

      \        } else {\r

      \          this.dComment.innerHTML = 'this coloku is correct!';\r

      \        }\r

      \      } else {\r

      \        this.dWordArea.remove();\r

      \        this.bDone.remove();\r

      \        if (Goal.err) {\r

      \          this.dComment.innerHTML = 'rule broken! duplicate in ' +
      Goal.err.type;\r

      \          animateColorScale(Goal.correctionFeedbackUI,
      Goal.item.color, 1.5, 1500);\r

      \        } else {\r

      \          this.dComment.innerHTML = 'Coloku is incomplete!!!!';\r

      \        }\r

      \      }\r

      \      return 20000;\r

      \    };\r

      \    this.failFunc = () => {\r

      \      if (this.qName == 'isThisSudokuCorrect') {\r

      \        if (Goal.choice == Goal.correctChoice) {
      mStyle(Goal.buttonClicked, { bg: 'green' }); mCheckit(Goal.feedbackUI,
      100); }\r

      \        else { mXit(Goal.buttonClicked, 100); }\r

      \      } else {\r

      \        mXit(this.dGrid, 200);\r

      \      }\r

      \    }\r

      \    this.successFunc = () => {\r

      \      if (this.qName == 'isThisSudokuCorrect') {\r

      \        if (Goal.choice == Goal.correctChoice) {
      mStyle(Goal.buttonClicked, { bg: 'green' }); mCheckit(Goal.feedbackUI,
      100); }\r

      \        else { mXit(Goal.buttonClicked, 100); }\r

      \      } else {\r

      \        mCheckit(this.dGrid, 200);\r

      \      }\r

      \    }\r

      \  }\r

      \  prompt() {\r

      \    this.trials = 1;\r

      \    let [rows, cols] = [this.rows, this.cols];\r

      \    this.dGrid = mGrid(rows, cols, dTable, { position: 'relative',
      w: 400, h: 400, gap: 8, bg: 'white' });\r

      \    let o = getSudokuPatternFromDB(rows, cols);\r

      \    let [pattern, minPuzzle] = [this.pattern, this.minPuzzle] =
      [o.pattern, o.puzzle];\r

      \    mLinebreak(dTable, 20);\r

      \    this.dChoices = mDiv(dTable);\r

      \    mLinebreak(dTable);\r

      \    this.dComment = mDiv(dTable);\r

      \    mLinebreak(dTable);\r

      \    let qName = this.qName = this.level == 0 && coin() &&
      PROJECTNAME == 'belinda' ? 'isThisSudokuCorrect' : 'solve';\r

      \    this[qName]();\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  fillGrid(pattern) {\r

      \    let items = this.items = [];\r

      \    let [rows, cols, dGrid] = [this.rows, this.cols, this.dGrid];\r

      \    let colors = this.colors = rows == 4 ? [RED, YELLOW, BLUE,
      GREEN]\r

      \      : rows == 6 ? [RED, YELLOW, BLUE, GREEN, PURPLE, ORANGE]\r

      \        : [BLUEGREEN, PURPLE, ORANGE, RED, YELLOW, BLUE, GREEN,
      LIGHTBLUE, OLIVE];\r

      \    shuffle(colors);\r

      \    for (let r = 0; r < rows; r++) {\r

      \      let arr = [];\r

      \      for (let c = 0; c < cols; c++) {\r

      \        let nch = pattern[r][c];\r

      \        let color = isNumber(nch) ? colors[pattern[r][c]] : null;\r

      \        let d = mDiv(dGrid, { bg: color }, getUID());\r

      \        let item = { row: r, col: c, id: d.id, color: color, val:
      nch };\r

      \        iAdd(item, { div: d });\r

      \        arr.push(item);\r

      \      }\r

      \      items.push(arr);\r

      \    }\r

      \    return items;\r

      \  }\r

      \  makeLines() {\r

      \    let [wline, dGrid, sz] = [2, this.dGrid, this.rows];\r

      \    let gSize = getSize(dGrid);\r

      \    let rh = sz != 9 ? makeRect((gSize.w - wline) / 2, 0, wline,
      gSize.h) : makeRect((gSize.w - wline) / 3, 0, wline, gSize.h);\r

      \    let rv = sz == 4 ? makeRect(0, (gSize.h - wline) / 2, gSize.w,
      wline) : makeRect(0, (gSize.h - wline) / 3, gSize.w, wline);\r

      \    let vLine = mDiv(dGrid, { bg: this.color, position: 'absolute',
      left: rh.l, top: rh.t, w: rh.w, h: rh.h });\r

      \    if (sz == 9) vLine = mDiv(dGrid, { bg: this.color, position:
      'absolute', left: rh.l * 2, top: rh.t, w: rh.w, h: rh.h });\r

      \    let hLine = mDiv(dGrid, { bg: this.color, position: 'absolute',
      left: rv.l, top: rv.t, w: rv.w, h: rv.h });\r

      \    if (sz != 4) vLine = mDiv(dGrid, { bg: this.color, position:
      'absolute', left: rv.l, top: 2 * rv.t, w: rv.w, h: rv.h });\r

      \  }\r

      \  setGoal(pattern) {\r

      \    let err = checkSudokuRule(pattern);\r

      \    let incomplete = false;\r

      \    for (const el of arrFlatten(pattern)) {\r

      \      if (!isNumber(el)) { incomplete = true; break; }\r

      \    }\r

      \    let answer = (err == null) && !incomplete; \r

      \    Goal = { correct: answer, err: err, incomplete: incomplete };\r

      \  }\r

      \  isThisSudokuCorrect() {\r

      \    this.trials = 1;\r

      \    let [pattern, rows, cols, dGrid] = [this.pattern, this.rows,
      this.cols, this.dGrid];\r

      \    destroySudokuRule(pattern, rows, cols);\r

      \    this.setGoal(pattern);\r

      \    let items = this.fillGrid(pattern);\r

      \    this.makeLines();\r

      \    let wsp = {\r

      \      D: 'ist dieses coloku korrekt?',\r

      \      E: 'is this coloku correct?',\r

      \      S: 'es este coloku correcto?',\r

      \      F: 'est ce que ce coloku est exacte?',\r

      \    };\r

      \    let sp = wsp[this.language];\r

      \    show_instruction(sp, dTitle, sp);\r

      \    showFleetingMessage('rule: each color must be unique in every
      row, column and quadrant!', 15000);\r

      \    let correct, incorrect;\r

      \    if (Goal.correct) { correct = { num: 1, text: 'yes' };
      incorrect = [{ num: 0, text: 'no' }]; }\r

      \    else { correct = { num: 0, text: 'no' }; incorrect = [{ num: 1,
      text: 'yes' }]; }\r

      \    let feedbackUI = Goal.correctionFeedbackUI = Goal.correct ?
      this.dGrid : iDiv(this.items[Goal.err.row][Goal.err.col]);\r

      \    createMultipleChoiceElements(correct, incorrect, this.dChoices,
      feedbackUI, {});\r

      \    Goal.item = Goal.correct ? this.items[0] :
      this.items[Goal.err.row][Goal.err.col];\r

      \  }\r

      \  solve() {\r

      \    let [rrand, crand] = [randomNumber(0, this.rows - 1),
      randomNumber(0, this.cols - 1)];\r

      \    let puzzle = this.puzzle = jsCopy(this.pattern);\r

      \    let [min, rows, cols] = [this.minPuzzle, this.rows,
      this.cols];\r

      \    let combis = [];\r

      \    for (let r = 0; r < rows; r++) {\r

      \      for (let c = 0; c < cols; c++) {\r

      \        if (min[r][c] === ' ') combis.push({ row: r, col: c });\r

      \      }\r

      \    }\r

      \    let combisToRemove = choose(combis, this.numMissing);\r

      \    for (const o of combisToRemove) {\r

      \      puzzle[o.row][o.col] = ' ';\r

      \    }\r

      \    this.fillGrid(puzzle);\r

      \    this.makeLines();\r

      \    let sp = 'solve this coloku!'\r

      \    show_instruction(sp, dTitle, sp);\r

      \    let itemlist = this.itemlist = arrFlatten(this.items);\r

      \    let containers = this.containers = itemlist.filter(x => x.val
      === ' ');\r

      \    let dWordArea = this.dWordArea = mDiv(dTable, { h: 70, display:
      'flex', 'flex-wrap': 'wrap', layout: 'fhcc' });\r

      \    let colorItems = this.colorItems = [];\r

      \    for (const color of this.colors) {\r

      \      let colorItem = { id: getUID(), color: color };\r

      \      let d = mDiv(dWordArea, { w: 40, h: 40, bg: color, margin:
      10, cursor: 'pointer' }, colorItem.id);\r

      \      iAdd(colorItem, { div: d });\r

      \      colorItems.push(colorItem);\r

      \    }\r

      \    enableDD(colorItems, containers, this.dropHandler.bind(this),
      true);\r

      \    mLinebreak(dTable, 50);\r

      \    this.bDone = mButton('Done!',
      this.controller.evaluate.bind(this.controller), dTable, { fz: 28, matop:
      10, rounding: 10, padding: 16, border: 8 }, ['buttonClass']);\r

      \  }\r

      \  dropHandler(source, target, isCopy = true) {\r

      \    let dSource = iDiv(source);\r

      \    let dTarget = iDiv(target);\r

      \    mStyle(dTarget, { bg: source.color });\r

      \    target.color = source.color;\r

      \    target.val = this.colors.indexOf(source.color);\r

      \  }\r

      \  evalIsCorrect() {\r

      \    Selected = { feedbackUI: Goal.buttonClicked };\r

      \    return Goal.buttonClicked == Goal.buttonCorrect;\r

      \  }\r

      \  evalSolve() {\r

      \    let [items, pattern, rows, cols] = [this.items, this.pattern,
      this.rows, this.cols];\r

      \    let pat = items.map(x => x.map(y => y.val));\r

      \    this.setGoal(pat);\r

      \    if (Goal.err) {\r

      \      Goal.correctionFeedbackUI =
      iDiv(this.items[Goal.err.row][Goal.err.col]);\r

      \      Goal.item = this.items[Goal.err.row][Goal.err.col];\r

      \    }\r

      \    Selected = { feedbackUI: this.dGrid };\r

      \    return Goal.correct;\r

      \  }\r

      \  eval() {\r

      \    clearFleetingMessage();\r

      \    return this.qName == 'solve' ? this.evalSolve() :
      this.evalIsCorrect();\r

      \  }\r

      \  onTimeup() { this.controller.evaluate(); }\r

      }\r\n"
    sig: class GColoku{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GCats:
    name: GCats
    code: "class GCats extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() { this.correctionFunc = showCorrectPictureLabels;
      this.failFunc = failSomePictures; }\r

      \  dropHandler(source, target, isCopy = true) {\r

      \    let dSource = iDiv(source);\r

      \    let dTarget = iDiv(target);\r

      \    if (!isCopy) {\r

      \      mAppend(dTarget, dSource);\r

      \    } else {\r

      \      let dNew = mText(dSource.innerHTML, dTarget, { wmin: 100, fz:
      20, padding: 4, margin: 4, display: 'inline-block' });\r

      \      addDDSource(dNew, false);\r

      \    }\r

      \    if (isOverflown(dTarget)) {\r

      \      let d = dTarget.parentNode;\r

      \      let r = getRect(d);\r

      \      let w = r.w + 100;\r

      \      mSize(d, w, r.h);\r

      \      console.log('overflow!!!!', r.w, '=>', w)\r

      \    }\r

      \  }\r

      \  prompt() {\r

      \    let items;\r

      \    let data = this.keysByCat = genCats(this.numCats);\r

      \    this.keylists = [], this.catsByKey = {};\r

      \    for (const cat in data) {\r

      \      this.keylists.push({ keys: data[cat], cat: cat });\r

      \      for (const k of data[cat]) {\r

      \        this.catsByKey[k] = cat;\r

      \      }\r

      \    }\r

      \    this.cats = Object.keys(this.keysByCat);\r

      \    this.allKeys = Object.keys(this.catsByKey);\r

      \    this.options = {}; _extendOptions(this.options);\r

      \    if (this.pickRandom == false) {\r

      \      items = Pictures = getNItemsPerKeylist(this.numPics,
      this.keylists, this.options);\r

      \    } else {\r

      \      let keys = choose(this.allKeys, this.numPics *
      this.numCats);\r

      \      items = Pictures = genItemsFromKeys(keys, this.options);\r

      \      items.map(x => x.cat = this.catsByKey[x.key]);\r

      \    }\r

      \    shuffle(items);\r

      \    let wr = this.language == 'E' ? 'drag pictures to categories' :
      \"ordne die bilder in kategorien\";\r

      \    show_instruction(wr, dTitle, wr);\r

      \    mLinebreak(dTable);\r

      \    let dArea = mDiv(dTable, { display: 'flex', 'flex-wrap': 'wrap'
      });\r

      \    let containers, dWordArea;\r

      \    containers = this.containers = createContainers(this.cats,
      dArea, { w: 'auto', wmin: 150, wmax: 300, hmin: 250, fz: 24, fg:
      'contrast' }); \r

      \    mLinebreak(dTable);\r

      \    dWordArea = this.dWordArea = mDiv(dTable, { h: 70, display:
      'flex', 'flex-wrap': 'wrap', layout: 'fhcc' });\r

      \    for (const item of items) { let d = miPic(item, dWordArea);
      iAdd(item, { div: d }); }\r

      \    enableDD(items, containers, this.dropHandler.bind(this),
      false);\r

      \    mLinebreak(dTable, 50);\r

      \    mButton('Done!',
      this.controller.evaluate.bind(this.controller), dTable, { fz: 28, matop:
      10, rounding: 10, padding: 16, border: 8 }, ['buttonClass']);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    sayTryAgain();\r

      \    TOMain = setTimeout(() => {\r

      \      for (const p of Pictures) {\r

      \        if (!p.isCorrect) {\r

      \          mAppend(this.dWordArea, iDiv(p));\r

      \          if (this.trialNumber == 1) miAddLabel(p, { bg:
      '#00000080', margin: 4, fz: 20 });\r

      \        }\r

      \      }\r

      \    }, 1000);\r

      \    return 1200;\r

      \  }\r

      \  eval() {\r

      \    this.piclist = Pictures;\r

      \    Selected = { piclist: this.piclist, feedbackUI:
      this.piclist.map(x => iDiv(x)), sz: getRect(iDiv(this.piclist[0])).h };\r

      \    let isCorrect = true;\r

      \    for (const p of Pictures) {\r

      \      let label = p.label;\r

      \      let d = iDiv(p);\r

      \      let cont = d.parentNode;\r

      \      for (const c of this.containers) {\r

      \        if (iDiv(c) == cont) {\r

      \          p.classified = true;\r

      \          if (p.cat == c.label) p.isCorrect = true;\r

      \          else { p.isCorrect = isCorrect = false; }\r

      \          break;\r

      \        }\r

      \      }\r

      \      if (!p.classified) p.isCorrect = isCorrect = false;\r

      \    }\r

      \    return isCorrect;\r

      \  }\r

      }\r\n"
    sig: class GCats{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GElim:
    name: GElim
    code: "class GElim extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() {\r

      \    this.correctionFunc = () => { writeSound();
      playSound('incorrect1'); return this.spokenFeedback ? 1800 : 300; };\r

      \    this.successFunc = () => { Goal.pics.map(x =>
      iDiv(x).style.opacity = .3); successPictureGoal(); }\r

      \  }\r

      \  start_Level() {\r

      \    super.start_Level();\r

      \    this.keys = this.keys.filter(x => containsColorWord(x));\r

      \  }\r

      \  prompt() {\r

      \    this.piclist = [];\r

      \    let colorKeys = this.numColors > 1 ? choose(this.colors,
      this.numColors) : null;\r

      \    let showRepeat = this.numRepeat > 1;\r

      \    let rows = this.numColors > 1 ? this.numColors : undefined;\r

      \    myShowPics(this.interact.bind(this), { bg: 'white' },\r

      \      {\r

      \        showRepeat: showRepeat, colorKeys: colorKeys, numRepeat:
      this.numRepeat,\r

      \        contrast: this.contrast, rows: rows\r

      \      });\r

      \    let [sSpoken, sWritten, piclist] = logicMulti(Pictures);\r

      \    this.piclist = piclist;\r

      \    Goal = { pics: this.piclist, sammler: [] };\r

      \    show_instruction(sWritten, dTitle, sSpoken, { fz: 22, voice:
      'zira' });\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    sayTryAgain();\r

      \    let msg = this.language == 'D' ? 'noch einmal!' : 'try
      again!'\r

      \    showFleetingMessage(msg, 0, { margin: -8, fz: 22 }, true);\r

      \    return 1000;\r

      \  }\r

      \  activate() {\r

      \    for (const p of this.piclist) { if (p.isSelected)
      toggleSelectionOfPicture(p); }\r

      \    this.piclist = [];\r

      \  }\r

      \  interact(ev) {\r

      \    ev.cancelBubble = true;\r

      \    if (!canAct()) return;\r

      \    let pic = findItemFromEvent(Pictures, ev);\r

      \    writeSound(); playSound('hit');\r

      \    if (Goal.pics.includes(pic)) {\r

      \      removePicture(pic);\r

      \      Goal.sammler.push(pic);\r

      \    }\r

      \    if (Goal.pics.length == Goal.sammler.length)
      this.controller.evaluate.bind(this.controller)(true);\r

      \    else if (!Goal.pics.includes(pic)) { this.lastPic = pic;
      this.controller.evaluate.bind(this.controller)(false); }\r

      \  }\r

      \  eval(isCorrect) {\r

      \    Selected = { piclist: this.piclist, feedbackUI: isCorrect ?
      Goal.pics.map(x => iDiv(x)) : iDiv(this.lastPic) };\r

      \    return isCorrect;\r

      \  }\r

      }\r\n"
    sig: class GElim{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GHouse:
    name: GHouse
    code: "class GHouse extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() {\r

      \    this.correctionFunc = () => {\r

      \      mStyle(Goal.buttonCorrect, { bg: 'green' });\r

      \      animate(Goal.buttonCorrect, 'komisch', 1000);\r

      \      mStyle(this.dGraph, { opacity: 1 });\r

      \      return 20000;\r

      \    };\r

      \    this.failFunc = () => {\r

      \      if (Goal.choice == Goal.correctChoice) {
      mStyle(Goal.buttonClicked, { bg: 'green' }); mCheckit(Goal.feedbackUI,
      100); }\r

      \      else { mXit(Goal.buttonClicked, 100); }\r

      \      mStyle(this.dGraph, { opacity: 1 });\r

      \    }\r

      \    this.successFunc = () => {\r

      \      if (Goal.choice == Goal.correctChoice) {
      mStyle(Goal.buttonClicked, { bg: 'green' }); mCheckit(Goal.feedbackUI,
      100); }\r

      \      else { mXit(Goal.buttonClicked, 100); }\r

      \      mStyle(this.dGraph, { opacity: 1 });\r

      \    }\r

      \  }\r

      \  prompt() {\r

      \    if (isdef(this.graph)) this.graph.clear();\r

      \    this.trials = 1;\r

      \    let n = randomNumber(this.minRooms, this.maxRooms); \r

      \    //#region selectQuestion\r

      \    let qFuncs = [this.areRoomsConnected.bind(this)];\r

      \    if (n > 5) qFuncs.push(this.isThereAPath.bind(this));\r

      \    let q = this.q = this.level > 1 ? arrLast(qFuncs) :
      chooseRandom(qFuncs); \r

      \    //#endregion\r

      \    //#region make house\r

      \    let s = n;\r

      \    let wTotal = n < 4 || n > 12 ? 700 : n > 10 ? 600 : 500;\r

      \    let dGridOuter = mDiv(dTable, { wmin: wTotal, hmin: 400 });\r

      \    let house = this.house = iHouse(dGridOuter, s, { w: wTotal, h:
      400 });\r

      \    let rooms = this.rooms = house.rooms.map(x => Items[x]);\r

      \    this.addLabelsToRooms();\r

      \    //#endregion\r

      \    //#region add doors\r

      \    let dirs = coin() ? ['n', 'w'] : ['s', 'e'];\r

      \    let doors = this.doors = [];\r

      \    for (const r of rooms) {\r

      \      let dir = coin() ? dirs[0] : dirs[1];\r

      \      let door = iDoor(r.id, dir);\r

      \      doors.push(door);\r

      \    }\r

      \    if (q.name.includes('Path')) hideOuterDoors(house);\r

      \    //#endregion\r

      \    //#region prep container for multiple choices\r

      \    mLinebreak(dTable, 20);\r

      \    this.dChoices = mDiv(dTable);\r

      \    mLinebreak(dTable);\r

      \    //#endregion\r

      \    //#region make graph container\r

      \    let r = getRect(dGridOuter); \r

      \    mStyle(dGridOuter, { position: 'relative' });\r

      \    let dGraph = this.dGraph = mDiv(dGridOuter, { box: true, align:
      'left', position: 'absolute', bg: '#ffffff80', top: 0, left: 0, w: r.w, h:
      r.h });\r

      \    //#endregion\r

      \    let innerStyles = { box: true, align: 'left', position:
      'absolute', bg: '#ffffff80', top: 0, left: 0, w: r.w, h: r.h };\r

      \    let g1 = this.graph = new UIGraph(dGraph, { edge: { bg: 'blue'
      }, outer: { align: 'left', w: wTotal, h: 400 }, inner: innerStyles });\r

      \    convertToGraphElements(g1, house);\r

      \    g1.presetLayout();\r

      \    g1.reset();\r

      \    mStyle(dGraph, { opacity: 0 });\r

      \    q();\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  //#region qFuncs\r

      \  isThereAPath() {\r

      \    let house = this.house;\r

      \    let corners = getCornerRoomsDict(house); \r

      \    let clist = Object.values(corners);  \r

      \    let g = this.graph;\r

      \    let id = g.getNodeWithMaxDegree(clist); \r

      \    let cornerRoomIds = g.sortNodesByDegree(clist).map(x =>
      x.id());\r

      \    let [r1, r2] = [Items[cornerRoomIds[0]],
      Items[cornerRoomIds[1]]]; \r

      \    if (r1 == r2 || areNeighbors(r1, r2) && cornerRoomIds.length >
      2) r2 = Items[cornerRoomIds[2]];\r

      \    if (!r1.isW && (r2.isW || !r1.N)) [r1, r2] = [r2, r1];\r

      \    let roomFrom = r1.id; \r

      \    let funcs = this.dijkstra =
      g.getShortestPathsFrom(roomFrom);  \r

      \    let roomTo = r2.id; \r

      \    for (const k in corners) {\r

      \      if (k != 'NW') {\r

      \        let dist = funcs.distanceTo('#' + corners[k]);\r

      \        if (dist != Infinity && dist >= 3) {\r

      \          roomTo = corners[k];\r

      \          break;\r

      \        } \r

      \      }\r

      \    }\r

      \    if (!roomTo) { roomTo = corners.SE; }\r

      \    //#region spoken and written instruction\r

      \    this.roomFrom = roomFrom;\r

      \    this.roomTo = roomTo;\r

      \    let sp1 = {\r

      \      D: ['gibt es einen weeg von', 'gibt es einen weg von'],\r

      \      E: ['is there a path from', 'is there a path from'],\r

      \      S: ['hay un camino de', 'hay un camino de'],\r

      \      F: [\"y a 'til un chemin de\", \"y a 'til un chemin de\"],\r

      \    };\r

      \    let sp2 = {\r

      \      D: ['zu', 'zu'],\r

      \      E: ['to', 'to'],\r

      \      S: ['a', 'a'],\r

      \      F: ['!. a! ', 'à'],\r

      \    };\r

      \    let fill1 = [`. \"${Items[roomFrom].id.toUpperCase()}\"! `, `
      ${Items[roomFrom].id} `];\r

      \    let fill2 = [`. \"${Items[roomTo].id.toUpperCase()}\"`, `
      ${Items[roomTo].id}`];\r

      \    let l = 'E'; \r

      \    let sp = sp1[l][0] + fill1[0] + sp2[l][0] + fill2[0] + '?';\r

      \    let wr = sp1[l][1] + fill1[1] + sp2[l][1] + fill2[1] + '?';\r

      \    let voice = this.language == 'E' ? coin() ? 'ukMale' : 'zira' :
      this.language;\r

      \    //#endregion\r

      \    show_instruction(wr, dTitle, sp, { voice: voice });\r

      \    let answer = funcs.distanceTo('#' + roomTo) != Infinity;\r

      \    let correct, incorrect;\r

      \    if (answer) { correct = { num: 1, text: 'yes' }; incorrect = [{
      num: 0, text: 'no' }]; }\r

      \    else { correct = { num: 0, text: 'no' }; incorrect = [{ num: 1,
      text: 'yes' }]; }\r

      \    createMultipleChoiceElements(correct, incorrect, this.dChoices,
      iDiv(this.house), {});\r

      \  }\r

      \  howMany() {\r

      \    let wr = this.language == 'E' ? 'how many units are there in
      this house?' : \"wieviele wohneinheiten hat dieses haus?\";\r

      \    show_instruction(wr, dTitle, wr);\r

      \    let numUnits = this.graph.getNumComponents(); \r

      \    let otherChoices = [\r

      \      numUnits * 2,\r

      \      Math.round(numUnits / 2),\r

      \      numUnits + randomNumber(1, 10)\r

      \    ];\r

      \    let di = {};\r

      \    for (let i = 0; i < otherChoices.length; i++) {\r

      \      let n = otherChoices[i];\r

      \      while (n == numUnits || isdef(di[n])) { n += 1; } \r

      \      di[n] = true;\r

      \      otherChoices[i] = n;\r

      \    }\r

      \    createMultipleChoiceElements({ num: numUnits, text: numUnits
      },\r

      \      otherChoices.map(x => ({ num: x, text: x })), this.dChoices,
      iDiv(this.house), {});\r

      \  }\r

      \  areRoomsConnected() {\r

      \    let wr = this.language == 'E' ? 'are all rooms connected?' :
      \"sind alle zimmer verbunden?\";\r

      \    showInstruction(wr, dTitle, wr);\r

      \    let numUnits = this.graph.getNumComponents(); \r

      \    let correct, incorrect;\r

      \    if (numUnits == 1) { correct = { num: 1, text: 'yes' };
      incorrect = [{ num: 0, text: 'no' }]; }\r

      \    else { correct = { num: 0, text: 'no' }; incorrect = [{ num: 1,
      text: 'yes' }]; }\r

      \    createMultipleChoiceElements(correct, incorrect, this.dChoices,
      iDiv(this.house), {});\r

      \  }\r

      \  //#region helpers\r

      \  showPath() {\r

      \    mStyle(this.dGraph, { opacity: 1 });\r

      \  }\r

      \  //#region add stuff to house\r

      \  addLabelsToRooms() {\r

      \    let roomlist = ['bedroom', 'livingroom', 'bathroom',
      'kitchen'];\r

      \    sortByFunc(this.rooms, x => x.rect.w * x.rect.h);\r

      \    this.rooms.map(x => addLabel(x, x.ch, {}));\r

      \  }\r

      \  addOneDoorPerRoom(directions) {\r

      \    for (const r of this.rooms) {\r

      \      let door = makeRandomDoor(r, this.house, directions);
      this.doors.push(door);\r

      \    }\r

      \  }\r

      \  addWallFinderByMouseClick() {\r

      \    dTable.onclick = ev => {\r

      \      console.log(ev.clientX, ev.clientY);\r

      \      let w = findWall(ev.clientX, ev.clientY, this.walls);\r

      \      console.log('found wall', w)\r

      \    }\r

      \  }\r

      \  addFurnitureItems() {\r

      \    let keys = ['bed', 'bathtub', 'chair', 'couch and lamp',
      'toilet', 'door', 'table'];\r

      \    let items = Pictures = genItemsFromKeys(keys);\r

      \    console.assert(arrLast(items).key == 'table', 'NOOOOOOO');\r

      \    let itable = arrLast(items);\r

      \    shuffle(items);\r

      \    let dWordArea = this.dWordArea = mDiv(dTable, { h: 70, display:
      'flex', 'flex-wrap': 'wrap', layout: 'fhcc' });\r

      \    for (const item of items) { let d = miPic(item, dWordArea);
      iAdd(item, { div: d }); }\r

      \    mStyle(iDiv(itable), { fg: BROWN });\r

      \    enableDD(items, rooms, this.dropHandler.bind(this), false);\r

      \  }\r

      \  //#endregion\r

      \  eval() {\r

      \    clearFleetingMessage();\r

      \    Selected = { reqAnswer: G.correctAnswer, answer:
      Goal.choice.text, feedbackUI: Goal.buttonClicked };\r

      \    return (Goal.buttonClicked == Goal.buttonCorrect);\r

      \  }\r

      }\r\n"
    sig: class GHouse{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GMaze:
    name: GMaze
    code: "class GMaze extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  clear() { super.clear(); if (isdef(this.cy)) { this.cy.destroy();
      } }\r

      \  startGame() {\r

      \    this.correctionFunc = () => {\r

      \      mStyle(Goal.buttonCorrect, { bg: 'green' });\r

      \      animate(Goal.buttonCorrect, 'komisch', 1000);\r

      \      if (Goal.correctChoice.text == 'yes')
      this.maze.breadCrumbs(this.path); else this.maze.colorComponents();\r

      \      return 20000;\r

      \    };\r

      \    this.failFunc = () => {\r

      \      if (Goal.choice == Goal.correctChoice) {
      mStyle(Goal.buttonClicked, { bg: 'green' }); mCheckit(Goal.feedbackUI,
      100); }\r

      \      else { mXit(Goal.buttonClicked, 100); }\r

      \    }\r

      \    this.successFunc = () => {\r

      \      if (Goal.choice == Goal.correctChoice) {
      mStyle(Goal.buttonClicked, { bg: 'green' }); mCheckit(Goal.feedbackUI,
      100); }\r

      \      else { mXit(Goal.buttonClicked, 100); }\r

      \    }\r

      \  }\r

      \  startRound() { if (isdef(this.cy)) this.cy.destroy();
      clearElement(dTable); } \r

      \  prompt() {\r

      \    this.trials = 1;\r

      \    let maze = this.maze = new MazeGraph(dTable, this.rows,
      this.cols, this.sz, this.gap);\r

      \    this.cy = maze.cy;\r

      \    mLinebreak(dTable, 20);\r

      \    this.dChoices = mDiv(dTable);\r

      \    mLinebreak(dTable);\r

      \    this.isThereAPath(maze);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  isThereAPath(maze) {\r

      \    let cellStart = maze.getTopLeftCell();\r

      \    mCellContent(iDiv(cellStart), { w: '50%', h: '50%', fz: '60%',
      bg: 'green', fg: 'white', rounding: '50%' }, 'A');\r

      \    let cellGoal = maze.getBottomRightCell();\r

      \    mCellContent(iDiv(cellGoal), { w: '50%', h: '50%', fz: '60%',
      bg: 'red', fg: 'white', rounding: '50%' }, 'B');\r

      \    [this.roomFrom, this.roomTo] = [cellStart.nodeId,
      cellGoal.nodeId];\r

      \    //#region spoken and written instruction\r

      \    let sp1 = {\r

      \      D: ['gibt es einen weeg von', 'gibt es einen weg von'],\r

      \      E: ['is there a path from', 'is there a path from'],\r

      \      S: ['hay un camino de', 'hay un camino de'],\r

      \      F: [\"y a 'til un chemin de\", \"y a 'til un chemin de\"],\r

      \    };\r

      \    let sp2 = {\r

      \      D: ['zu', 'zu'],\r

      \      E: ['to', 'to'],\r

      \      S: ['a', 'a'],\r

      \      F: ['!. a! ', 'à'],\r

      \    };\r

      \    let fill1 = [`. \"A\"! `, ` A `];\r

      \    let fill2 = [`. \"B\"`, ` B`];\r

      \    let l = this.language;\r

      \    let sp = sp1[l][0] + fill1[0] + sp2[l][0] + fill2[0] + '?';\r

      \    let wr = sp1[l][1] + fill1[1] + sp2[l][1] + fill2[1] + '?';\r

      \    let voice = this.language == 'E' ? coin() ? 'ukMale' : 'zira' :
      this.language;\r

      \    show_instruction(wr, dTitle, sp, { voice: voice });\r

      \    //#endregion\r

      \    let path = this.path =
      maze.getShortestPathFromTo(this.roomFrom, this.roomTo);\r

      \    console.assert(path.length < Infinity, 'WAAAAAAAAAAAAAAS?');\r

      \    if (coin(this.level > 2 ? 50 : 40)) maze.cutPath(this.path, .5,
      .75);\r

      \    let len = maze.getLengthOfShortestPath(this.roomFrom,
      this.roomTo); \r

      \    let answer = len != Infinity;\r

      \    let correct, incorrect;\r

      \    if (answer) { correct = { num: 1, text: 'yes' }; incorrect = [{
      num: 0, text: 'no' }]; }\r

      \    else { correct = { num: 0, text: 'no' }; incorrect = [{ num: 1,
      text: 'yes' }]; }\r

      \    createMultipleChoiceElements(correct, incorrect, this.dChoices,
      maze.dMaze, {});\r

      \  }\r

      \  eval() {\r

      \    clearFleetingMessage();\r

      \    Selected = { reqAnswer: G.correctAnswer, answer:
      Goal.choice.text, feedbackUI: Goal.buttonClicked };\r

      \    return (Goal.buttonClicked == Goal.buttonCorrect);\r

      \  }\r

      }\r\n"
    sig: class GMaze{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GMem:
    name: GMem
    code: "class GMem extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  clear() { clearTimeout(this.TO); showMouse(); }\r

      \  prompt() {\r

      \    this.trials = 1;\r

      \    myShowPics(this.interact.bind(this),\r

      \      { border: '3px solid #ffffff80' },\r

      \      {});\r

      \    setGoal();\r

      \    let wr = (this.language == 'E' ? 'remember ' : 'merke dir ') +
      (this.level > 2 ? (this.language == 'E' ? 'all' : 'alle') : Goal.label);\r

      \    show_instruction(wr, dTitle, wr);\r

      \    let secs = calcMemorizingTime(this.numPics, this.level > 2);\r

      \    hideMouse();\r

      \    TOMain = setTimeout(() => turnCardsAfter(secs), 300, this.level
      >= 5); \r

      \  }\r

      \  interact(ev) {\r

      \    ev.cancelBubble = true;\r

      \    if (!canAct()) return;\r

      \    let pic = findItemFromEvent(Pictures, ev);\r

      \    turnFaceUpSimple(pic);\r

      \    if (this.trialNumber == this.trials - 1)
      turnFaceUpSimple(Goal);\r

      \    TOMain = setTimeout(() =>
      this.controller.evaluate.bind(this.controller)(ev), 300);\r

      \  }\r

      }\r\n"
    sig: class GMem{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GMissingLetter:
    name: GMissingLetter
    code: "class GMissingLetter extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  start_Level() {\r

      \    super.start_Level();\r

      \    this.maxPosMissing = this.posMissing == 'start' ?
      this.numMissing - 1 : 100;\r

      \  }\r

      \  prompt() {\r

      \    myShowPics(() => fleetingMessage('just enter the missing
      letter!'));\r

      \    setGoal();\r

      \    if (this.instruction == 'all') {\r

      \      let wr = (this.language == 'E' ? 'complete ' : \"ergänze \")
      + `<b>${Goal.label.toUpperCase()}</b>`;\r

      \      let sp = (this.language == 'E' ? 'complete ' : \"ergänze \")
      + `${Goal.label}`;\r

      \      show_instruction(wr, dTitle, sp);\r

      \    } else if (this.instruction == 'spokenGoal') {\r

      \      let wr = this.language == 'E' ? 'complete the word' :
      \"ergänze das wort\";\r

      \      let sp = (this.language == 'E' ? 'complete' : \"ergänze\") +
      ' ' + Goal.label;\r

      \      show_instruction(wr, dTitle, sp);\r

      \    } else {\r

      \      let wr = this.language == 'E' ? 'complete the word' :
      \"ergänze das wort\";\r

      \      show_instruction(wr, dTitle, wr);\r

      \    }\r

      \    mLinebreak(dTable, 20);\r

      \    let style = { margin: 6, fg: 'white', display: 'inline', bg:
      'transparent', align: 'center', border: 'transparent', outline: 'none',
      family: 'Consolas', fz: 80 };\r

      \    let d = createLetterInputs(Goal.label.toUpperCase(), dTable,
      style); \r

      \    let indices = getIndicesCondi(Goal.label, (x, i) =>
      isAlphaNum(x) && i <= this.maxPosMissing);\r

      \    this.nMissing = Math.min(indices.length, this.numMissing);\r

      \    let ilist = choose(indices, this.nMissing);
      sortNumbers(ilist);\r

      \    this.inputs = [];\r

      \    for (const idx of ilist) {\r

      \      let inp = d.children[idx];\r

      \      inp.innerHTML = '_';\r

      \      mClass(inp, 'blink');\r

      \      this.inputs.push({ letter: Goal.label[idx].toUpperCase(),
      div: inp, index: idx });\r

      \    }\r

      \    mLinebreak(dTable);\r

      \    let msg = this.composeFleetingMessage();\r

      \    let ms = this.instruction == 'all' ? 3000 : this.instruction ==
      'spokenGoal' ? 9000 : 15000;\r

      \    showFleetingMessage(msg, ms);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    let selinp = Selected.inp;\r

      \    sayTryAgain();\r

      \    TOMain = setTimeout(() => {\r

      \      let d = selinp.div;\r

      \      d.innerHTML = '_';\r

      \      mClass(d, 'blink');\r

      \    }, 1200);\r

      \    showFleetingMessage(this.composeFleetingMessage(), 3000);\r

      \    return 1500;\r

      \  }\r

      \  activate() {\r

      \    addKeyup('G', ev => {\r

      \      if (!isLetter(ev.key)) return;\r

      \      clearFleetingMessage();\r

      \      if (!canAct()) return;\r

      \      let charEntered = ev.key.toString();\r

      \      if (!isAlphaNum(charEntered)) return;\r

      \      Selected = { lastLetterEntered: charEntered.toUpperCase()
      };\r

      \      if (this.nMissing == 1) {\r

      \        let d = Selected.feedbackUI = this.inputs[0].div;\r

      \        Selected.positiveFeedbackUI = iDiv(Goal);\r

      \        Selected.lastIndexEntered = this.inputs[0].index;\r

      \        Selected.inp = this.inputs[0];\r

      \        d.innerHTML = Selected.lastLetterEntered;\r

      \        mRemoveClass(d, 'blink');\r

      \        let result = buildWordFromLetters(mParent(d));\r

      \        this.controller.evaluate.bind(this.controller)(result);\r

      \      } else {\r

      \        let ch = charEntered.toUpperCase();\r

      \        for (const inp of this.inputs) {\r

      \          if (inp.letter == ch) {\r

      \            Selected.lastIndexEntered = inp.index;\r

      \            Selected.inp = inp;\r

      \            let d = Selected.feedbackUI = inp.div;\r

      \            d.innerHTML = ch;\r

      \            mRemoveClass(d, 'blink');\r

      \            removeInPlace(this.inputs, inp);\r

      \            this.nMissing -= 1;\r

      \            break;\r

      \          }\r

      \        }\r

      \        if (nundef(Selected.lastIndexEntered)) {\r

      \          showFleetingMessage('you entered ' +
      Selected.lastLetterEntered);\r

      \          sayRandomVoice('try a different letter!', 'anderer
      Buchstabe!')\r

      \        }\r

      \        showFleetingMessage(this.composeFleetingMessage(), 3000);\r

      \      }\r

      \    })\r

      \  }\r

      \  eval(word) {\r

      \    let answer = normalize(word, this.language);\r

      \    let reqAnswer = normalize(Goal.label, this.language);\r

      \    Selected.reqAnswer = reqAnswer;\r

      \    Selected.answer = answer;\r

      \    if (answer == reqAnswer) return true;\r

      \    else if (this.language == 'D' && fromUmlaut(answer) ==
      fromUmlaut(reqAnswer)) {\r

      \      return true;\r

      \    } else {\r

      \      return false;\r

      \    }\r

      \  }\r

      \  composeFleetingMessage() {\r

      \    let lst = this.inputs;\r

      \    let msg = lst.map(x => x.letter).join(',');\r

      \    let edecl = lst.length > 1 ? 's ' : ' ';\r

      \    let ddecl = lst.length > 1 ? 'die' : 'den';\r

      \    let s = (this.language == 'E' ? 'Type the letter' + edecl :
      'Tippe ' + ddecl + ' Buchstaben ');\r

      \    return s + msg;\r

      \  }\r

      }\r\n"
    sig: class GMissingLetter{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GNamit:
    name: GNamit
    code: "class GNamit extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() { this.correctionFunc = showCorrectPictureLabels;
      this.failFunc = failSomePictures; }\r

      \  prompt() {\r

      \    this.showLabels = false;\r

      \    myShowPics(null, {}, { rows: 1 });\r

      \    Pictures.map(x => x.correctLabel = x.label);\r

      \    Goal = { pics: Pictures };\r

      \    let wr = this.language == 'E' ? 'drag labels to pictures' :
      \"ordne die texte den bildern zu\";\r

      \    show_instruction(wr, dTitle, wr);\r

      \    mLinebreak(dTable);\r

      \    mLinebreak(dTable, 50);\r

      \    let keys = Pictures.map(x => x.key);\r

      \    shuffle(keys);\r

      \    G.showLabels = true;\r

      \    let titems = this.letters = myShowLabels(null, undefined, {
      rows: 1, showLabels: true }, keys);\r

      \    titems.map(x => iDiv(x).style.cursor = 'pointer');\r

      \    mLinebreak(dTable, 50);\r

      \    enableDD(this.letters, Pictures, this.dropHandler.bind(this),
      true, false, null);\r

      \    mButton('Done!',
      this.controller.evaluate.bind(this.controller), dTable, { fz: 32, matop:
      10, rounding: 10, padding: 16, border: 8 }, ['buttonClass']);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  dropHandler(source, target, isCopy = true) {\r

      \    let dSource = iDiv(source);\r

      \    let dTarget = iDiv(target);\r

      \    console.log('dropped', source, 'onto', target);\r

      \    let label = iLabel(target);\r

      \    console.log('label', label);\r

      \    let div = iDiv(target);\r

      \    console.log('div', div);\r

      \    addLabel(target, source.label, {});\r

      \  }\r

      \  trialPrompt() {\r

      \    this.failFunc();\r

      \    sayTryAgain();\r

      \    TOMain = setTimeout(() => { removeMarkers(); Pictures.map(x =>
      removeLabel(x)) }, 1200);\r

      \    return 1500;\r

      \  }\r

      \  eval() {\r

      \    console.log('eval in Namit!!!!!')\r

      \    this.piclist = Pictures;\r

      \    Selected = { piclist: this.piclist, feedbackUI:
      this.piclist.map(x => iDiv(x)), sz: getRect(iDiv(this.piclist[0])).h };\r

      \    let isCorrect = true;\r

      \    for (const p of Pictures) {\r

      \      let correctLabel = p.correctLabel;\r

      \      console.log('correctLabel', correctLabel, p.label);\r

      \      let dLabel = iLabel(p);\r

      \      console.log('dLabel', dLabel);\r

      \      if (nundef(dLabel) || p.label != correctLabel) p.isCorrect =
      isCorrect = false;\r

      \      else p.isCorrect = true;\r

      \    }\r

      \    return isCorrect;\r

      \  }\r

      }\r\n"
    sig: class GNamit{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GPremem:
    name: GPremem
    code: "class GPremem extends Game {\r

      \  constructor(name, o) { super(name, o); this.piclist = []; }\r

      \  prompt() {\r

      \    this.piclist = [];\r

      \    this.showLabels = false;\r

      \    myShowPics(this.interact.bind(this), { border: '3px solid
      #ffffff80' }, {});\r

      \    let wr = this.language == 'E' ? 'click any picture' : 'click
      irgendein Bild';\r

      \    show_instruction(wr, dTitle, wr);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    for (const p of this.piclist) { toggleSelectionOfPicture(p);
      }\r

      \    this.piclist = [];\r

      \    show_instruction('try again: click any picture', dTitle, 'try
      again: click any picture');\r

      \    return 10;\r

      \  }\r

      \  interact(ev) {\r

      \    ev.cancelBubble = true;\r

      \    if (!canAct()) return;\r

      \    let pic = findItemFromEvent(Pictures, ev);\r

      \    if (!isEmpty(this.piclist) && this.piclist.length <
      this.numRepeat - 1 && this.piclist[0].label != pic.label) return;\r

      \    toggleSelectionOfPicture(pic, this.piclist);\r

      \    if (isEmpty(this.piclist)) {\r

      \      let wr = this.language == 'E' ? 'click any picture' : 'click
      irgendein Bild';\r

      \      show_instruction(wr, dTitle, wr);\r

      \    } else if (this.piclist.length < this.numRepeat - 1) {\r

      \      let wr = (this.language == 'E' ? 'click another ' : 'click
      ein andres Bild mit ');\r

      \      show_instruction(wr + `<b>${pic.label.toUpperCase()}</b>`,
      dTitle, wr + pic.label);\r

      \    } else if (this.piclist.length == this.numRepeat - 1) {\r

      \      let picGoal = firstCond(Pictures, x => x.label == pic.label
      && !x.isSelected);\r

      \      setGoal(picGoal.index);\r

      \      let wr = (this.language == 'E' ? 'click the ' +
      (this.numRepeat == 2 ? 'other ' : 'last ')\r

      \        : 'click das ' + (this.numRepeat == 2 ? 'andere ' : 'letzte
      ') + ' Bild mit')\r

      \      show_instruction(wr +
      `<b>${picGoal.label.toUpperCase()}</b>`, dTitle, wr + picGoal.label);\r

      \    } else {\r

      \      this.controller.evaluate.bind(this.controller)(this.piclist);\
      \r

      \    }\r

      \  }\r

      \  eval(piclist) {\r

      \    Selected = { piclist: piclist, feedbackUI: piclist.map(x =>
      iDiv(x)), sz: getRect(iDiv(piclist[0])).h };\r

      \    let req = Selected.reqAnswer = piclist[0].label;\r

      \    Selected.answer = piclist[piclist.length - 1].label;\r

      \    if (Selected.answer == req) { return true; } else { return
      false; }\r

      \  }\r

      }\r\n"
    sig: class GPremem{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GRiddle:
    name: GRiddle
    code: "class GRiddle extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() {\r

      \    this.successFunc = successThumbsUp; this.failFunc =
      failThumbsDown;\r

      \    this.correctionFunc = () => {\r

      \      mStyle(Goal.buttonCorrect, { bg: 'green' });\r

      \      animate(Goal.buttonCorrect, 'komisch', 1000);\r

      \      return 20000;\r

      \    };\r

      \  }\r

      \  prompt() {\r

      \    this.trials = 1;\r

      \    show_instruction('Solve the Riddle:', dTitle, 'Solve the
      Riddle:');\r

      \    let wp = this.wp = getRandomWP(this.minIndex, this.maxIndex);\r

      \    let haveResult = wp.isTextResult = instantiateNames(wp);\r

      \    if (!haveResult) instantiateNumbers(wp);\r

      \    mLinebreak(dTable, 2);\r

      \    showHiddenThumbsUpDown(90);\r

      \    mLinebreak(dTable);\r

      \    let dArea = this.textArea = mDiv(dTable, { w: '70%' });\r

      \    let d = mText(wp.text, dArea, { fz: 28 });\r

      \    mLinebreak(dTable, 20);\r

      \    let dResult = this.dResult = mDiv(dTable);\r

      \    Goal = { label: wp.result.text };\r

      \    this.createMultipleChoiceElements();\r

      \    mLinebreak(dTable);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  createMultipleChoiceElements() {\r

      \    let wp = this.wp;\r

      \    let choices = [], nums = [], texts = [];\r

      \    if (wp.isTextResult == true) {\r

      \      texts = Object.values(wp.diNames);\r

      \      for (let i = 0; i < texts.length; i++) { choices.push({
      number: 0, text: texts[i] }); }\r

      \      Goal.correctChoice = firstCond(choices, x => x.text ==
      Goal.label);\r

      \    } else if (wp.isFractionResult == true) {\r

      \      let res = wp.result.number; \r

      \      if (res.n / res.d > 2) {\r

      \        wp.result.isMixed = true;\r

      \        wp.result.mixed = getMixedNumber(res.n, res.d);\r

      \      }\r

      \      nums = get3FractionVariants(res);\r

      \      texts = nums.map(x => getTextForFractionX(x.n, x.d));\r

      \      wp.result.text = texts[0];\r

      \      for (let i = 0; i < texts.length; i++) { choices.push({
      number: nums[i], text: texts[i] }); }\r

      \      Goal.correctChoice = firstCond(choices, x => x.text ==
      wp.result.text);\r

      \    } else {\r

      \      let res = wp.result.number;\r

      \      nums = [res, res + randomNumber(1, 25), res / randomNumber(2,
      5), res * randomNumber(2, 5)];\r

      \      texts = nums.map(x => (Math.round(x * 100) / 100));\r

      \      for (let i = 0; i < texts.length; i++) { choices.push({
      number: nums[i], text: texts[i] }); }\r

      \      Goal.correctChoice = choices[0];\r

      \    }\r

      \    shuffle(choices);\r

      \    if (coin()) shuffle(choices);\r

      \    Goal.choices = choices;\r

      \    let dParent = this.dResult;\r

      \    let idx = 0;\r

      \    for (const ch of choices) {\r

      \      ////'&frac57;', //'&frac12;', \r

      \      let dButton = mButton(ch.text, this.onClickChoice.bind(this),
      dParent, { wmin: 100, fz: 36, margin: 20, rounding: 4, vpadding: 4,
      hpadding: 10 }, ['toggleButtonClass']);\r

      \      dButton.id = 'bChoice_' + idx; idx += 1;\r

      \      if (ch.text == wp.result.text) {\r

      \        Goal.choice = ch.toString();\r

      \        Goal.buttonCorrect = dButton; \r

      \      }\r

      \    }\r

      \  }\r

      \  onClickChoice(ev) {\r

      \    let id = evToClosestId(ev);\r

      \    let b = mBy(id);\r

      \    let index = Number(stringAfter(id, '_'));\r

      \    Goal.choice = Goal.choices[index];\r

      \    Goal.buttonClicked = b;\r

      \    if (Goal.choice == Goal.correctChoice) { mStyle(b, { bg:
      'green' }); mCheckit(this.textArea, 100); }\r

      \    else { mXit(b, 100); }\r

      \    this.controller.evaluate.bind(this.controller)();\r

      \  }\r

      \  eval() {\r

      \    clearFleetingMessage();\r

      \    Selected = { delay: 5000, reqAnswer: this.wp.result.number,
      answer: Goal.choice.number, feedbackUI: Goal.buttonClicked };\r

      \    if (this.wp.isTextResult) { Selected.reqAnswer =
      this.wp.result.text; Selected.answer = Goal.choice.text; }\r

      \    return (Goal.buttonClicked == Goal.buttonCorrect);\r

      \  }\r

      \  createInputElements() {\r

      \    this.inputBox = addNthInputElement(this.dResult, 0);\r

      \    this.defaultFocusElement = this.inputBox.id;\r

      \    onclick = () => mBy(this.defaultFocusElement).focus();\r

      \    mBy(this.defaultFocusElement).focus();\r

      \  }\r

      \  activate() { }\r

      \  eval_dep(ev) {\r

      \    console.log('#', this.trialNumber, 'of', this.trials);\r

      \    clearFleetingMessage();\r

      \    Selected = {};\r

      \    let answer = normalize(this.inputBox.value, 'E');\r

      \    let reqAnswer = normalize(this.wp.result.text, 'E');\r

      \    console.log('answer', answer, 'req', reqAnswer);\r

      \    let isCorrect = answer == reqAnswer;\r

      \    Selected = { reqAnswer: reqAnswer, answer: answer, feedbackUI:
      isCorrect ? Goal.buttonClicked : Goal.buttonCorrect };\r

      \    return (answer == reqAnswer);\r

      \  }\r

      \  trialPrompt_dep() {\r

      \    sayTryAgain();\r

      \    let n = this.trialNumber; \r

      \    showFleetingMessage('try again!', 0, {}, true);\r

      \    this.inputBox = addNthInputElement(this.dResult,
      this.trialNumber);\r

      \    this.defaultFocusElement = this.inputBox.id;\r

      \    mLinebreak(dTable);\r

      \    return 10;\r

      \  }\r

      \  activate_input() {\r

      \    this.inputBox.onkeyup = ev => {\r

      \      if (!canAct()) return;\r

      \      if (ev.key === \"Enter\") {\r

      \        ev.cancelBubble = true;\r

      \        this.controller.evaluate.bind(this.controller)(ev);\r

      \      }\r

      \    };\r

      \    this.inputBox.focus();\r

      \  }\r

      }\r\n"
    sig: class GRiddle{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GSentence:
    name: GSentence
    code: "class GSentence extends Game {\r

      \  constructor(name, o) {\r

      \    super(name, o);\r

      \    this.prevLanguage = this.language;\r

      \    this.language = 'E';\r

      \  }\r

      \  startGame() {\r

      \    this.correctionFunc = () => {\r

      \      let sent = this.sentenceList[0].join(' ');\r

      \      this.dWordArea.innerHTML = `<h1>${sent}</h1>`;\r

      \      if (this.spokenFeedback) sayRandomVoice(sent);\r

      \      return 3000;\r

      \    }\r

      \    this.successFunc = () => { mCheckit(this.dWordArea, 120); };\r

      \  }\r

      \  clear() { super.clear(); this.language = this.prevLanguage; }\r

      \  start_Level() {\r

      \    this.sentences = [];\r

      \    for (const s of EnglishSentences) {\r

      \      let slist = isList(s) ? s : [s];\r

      \      slist = slist.map(x => x.split(' '));\r

      \      if (slist[0].length <= this.maxWords && slist[0].length >=
      this.minWords) this.sentences.push(slist);\r

      \    }\r

      \  }\r

      \  dropHandler(source, target, isCopy = false, clearTarget = false)
      {\r

      \    let prevTarget = source.target;\r

      \    source.target = target;\r

      \    let dSource = iDiv(source);\r

      \    let dTarget = iDiv(target);\r

      \    if (clearTarget) {\r

      \      let ch = dTarget.children[0];\r

      \      let chSource = firstCond(Pictures, x => iDiv(x) == ch);\r

      \      if (chSource) {\r

      \        if (isdef(prevTarget)) {\r

      \          mAppend(iDiv(prevTarget), ch);\r

      \          chSource.target = prevTarget;\r

      \        } else {\r

      \          mAppend(this.dWordArea, ch);\r

      \          delete chSource.target;\r

      \        }\r

      \      }\r

      \      clearElement(dTarget);\r

      \    }\r

      \    if (isCopy) {\r

      \      let dNew = mText(dSource.innerHTML, dTarget, { wmin: 100, fz:
      20, padding: 4, margin: 4, display: 'inline-block' });\r

      \      addDDSource(dNew, isCopy, clearTarget);\r

      \    } else {\r

      \      mAppend(dTarget, dSource);\r

      \    }\r

      \  }\r

      \  prompt() {\r

      \    show_instruction('form a correct sentence', dTitle, 'form a
      correct sentence');\r

      \    mLinebreak(dTable);\r

      \    let sl = this.sentenceList = chooseRandom(this.sentences);\r

      \    let words = this.sentenceList[0];\r

      \    let fz = 32;\r

      \    let h = fz * 1.25, wmin = fz * 1.25;\r

      \    let items = Pictures = [];\r

      \    let containers = this.containers = [];\r

      \    let options = _simpleOptions({ fz: fz, bg: 'transparent', fg:
      'white', showPic: false, showLabels: true }, { wmin: wmin });\r

      \    let dArea = mDiv(dTable, { h: 150, display: 'flex',
      'flex-wrap': 'wrap', layout: 'fhcc' });\r

      \    mLinebreak(dTable);\r

      \    let dWordArea = this.dWordArea = mDiv(dTable, { h: 70, wmin:
      20, display: 'flex', 'flex-wrap': 'wrap', layout: 'fhcc' });\r

      \    let i = 0;\r

      \    for (const word of words) {\r

      \      let item = { label: word, index: i };\r

      \      let container = { label: word, index: i };\r

      \      i += 1;\r

      \      let d = makeItemDiv(item, options);\r

      \      let dCont = mDiv(dArea, { wmin: wmin + 12, hmin: h + 10, bg:
      colorTrans('beige', .25), fg: 'black', margin: 12 });\r

      \      container.div = dCont;\r

      \      items.push(item);\r

      \      containers.push(container);\r

      \    }\r

      \    shuffle(items);\r

      \    items.map(x => { mAppend(dWordArea, iDiv(x)); mStyle(iDiv(x), {
      h: h, w: 'auto' }); });\r

      \    enableDD(items, containers, this.dropHandler.bind(this), false,
      true);\r

      \    mLinebreak(dTable, 50);\r

      \    mButton('Done!',
      this.controller.evaluate.bind(this.controller), dTable, { fz: 28, matop:
      10, rounding: 10, padding: 16, border: 8 }, ['buttonClass']);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    sayTryAgain();\r

      \    showFleetingMessage('Try again!', 0, { fg: 'white' });\r

      \    TOMain = setTimeout(() => { Pictures.map(x =>
      mAppend(this.dWordArea, iDiv(x))); }, 1200);\r

      \    return 1500;\r

      \  }\r

      \  eval() {\r

      \    let words = [];\r

      \    for (const cont of this.containers) {\r

      \      let d = iDiv(cont);\r

      \      let ch = d.firstChild;\r

      \      if (ch && isdef(ch.firstChild)) {\r

      \        words.push(ch.firstChild.innerHTML);\r

      \      } else break;\r

      \    }\r

      \    let answer = words.join(' ');\r

      \    let isCorrect = false;\r

      \    for (const sent of this.sentenceList) {\r

      \      let variant = sent.join(' ');\r

      \      if (answer == variant) isCorrect = true;\r

      \    }\r

      \    Selected = { piclist: Pictures, feedbackUI: Pictures.map(x =>
      iDiv(x)), sz: getRect(iDiv(Pictures[0])).h + 10 };\r

      \    return isCorrect;\r

      \  }\r

      }\r\n"
    sig: class GSentence{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GSteps:
    name: GSteps
    code: "class GSteps extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() { this.correctionFunc = showCorrectWords; }\r

      \  start_Level() {\r

      \    super.start_Level();\r

      \    this.keys = this.keys.filter(x => containsColorWord(x));\r

      \  }\r

      \  prompt() {\r

      \    this.piclist = [];\r

      \    let colorKeys = this.numColors > 1 ? choose(this.colors,
      this.numColors) : null;\r

      \    let bg = this.numColors > 1 || this.numRepeat > 1 ? 'white' :
      'random';\r

      \    let rows = this.numColors > 1 ? this.numColors : undefined;\r

      \    let showRepeat = this.numRepeat > 1;\r

      \    myShowPics(this.interact.bind(this), { bg: bg },\r

      \      { rows: rows, showRepeat: showRepeat, colorKeys: colorKeys,
      numRepeat: this.numRepeat, contrast: this.contrast });\r

      \    setMultiGoal(this.numSteps);\r

      \    let cmd = 'click';\r

      \    let spoken = [], written = [], corr = [];\r

      \    for (let i = 0; i < this.numSteps; i++) {\r

      \      let goal = Goal.pics[i];\r

      \      let sOrdinal = getOrdinal(goal.iRepeat);\r

      \      [written[i], spoken[i], corr[i]] =
      getOrdinalColorLabelInstruction(cmd, sOrdinal, goal.color, goal.label);\r

      \      goal.correctionPhrase = corr[i];\r

      \      cmd = 'then';\r

      \    }\r

      \    let sWritten = this.showVisualInstruction ? written.join('; ')
      : 'listen to instruction!';\r

      \    show_instruction(sWritten, dTitle, spoken.join('. '), { fz: 20
      });\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    sayTryAgain();\r

      \    showFleetingMessage(this.message, 0);\r

      \    return 1000;\r

      \  }\r

      \  activate() {\r

      \    for (const p of this.piclist) { toggleSelectionOfPicture(p);
      }\r

      \    this.piclist = [];\r

      \  }\r

      \  interact(ev) {\r

      \    ev.cancelBubble = true;\r

      \    if (!canAct()) { console.log('no act'); return; }\r

      \    let pic = findItemFromEvent(Pictures, ev);\r

      \    toggleSelectionOfPicture(pic, this.piclist);\r

      \    if (this.piclist.length == Goal.pics.length) {\r

      \      clearFleetingMessage();\r

      \      Selected = { piclist: this.piclist };
      this.controller.evaluate.bind(this.controller)();\r

      \    }\r

      \  }\r

      \  eval() {\r

      \    Selected = { piclist: this.piclist, feedbackUI:
      this.piclist.map(x => iDiv(x)), sz: getRect(iDiv(this.piclist[0])).h };\r

      \    let isCorrect = true;\r

      \    this.message = this.language == 'D' ? 'beachte die
      REIHENFOLGE!' : 'mind the ORDER!';\r

      \    for (let i = 0; i < this.piclist.length; i++) {\r

      \      let p = this.piclist[i];\r

      \      if (!Goal.pics.includes(p)) this.message = this.language ==
      'D' ? 'noch einmal!' : 'try again!';\r

      \      if (this.piclist[i] != Goal.pics[i]) isCorrect = false;\r

      \    }\r

      \    return isCorrect;\r

      \  }\r

      }\r\n"
    sig: class GSteps{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GSwap:
    name: GSwap
    code: "class GSwap extends Game {\r

      \  constructor(name, o) {\r

      \    super(name, o);\r

      \    if (this.language == 'C') { this.prevLanguage = this.language;
      this.language = chooseRandom('E', 'D'); }\r

      \    ensureDictionary();\r

      \  }\r

      \  startGame() { this.correctionFunc = showCorrectLabelSwapping; }
      \r

      \  clear() { super.clear(); if (isdef(this.prevLanguage))
      this.language = this.prevLanguage; }\r

      \  start_Level() {\r

      \    this.keys = setKeysG(this, filterWordByLengthG, 25);\r

      \    if (this.keys.length < 25) { this.keys = setKeysG(this,
      filterWordByLengthG, 25, 'all'); }\r

      \    this.trials = 2;\r

      \  }\r

      \  dropHandler(source, target, isCopy = false, clearTarget = false)
      {\r

      \    let prevTarget = source.target;\r

      \    source.target = target;\r

      \    let dSource = iDiv(source);\r

      \    let dTarget = iDiv(target);\r

      \    if (clearTarget) {\r

      \      let ch = dTarget.children[0];\r

      \      let chSource = firstCond(Pictures, x => iDiv(x) == ch);\r

      \      if (chSource) {\r

      \        if (isdef(prevTarget)) {\r

      \          mAppend(iDiv(prevTarget), ch);\r

      \          chSource.target = prevTarget;\r

      \        } else {\r

      \          mAppend(this.dWordArea, ch);\r

      \          delete chSource.target;\r

      \        }\r

      \      }\r

      \      clearElement(dTarget);\r

      \    }\r

      \    if (isCopy) {\r

      \      let dNew = mText(dSource.innerHTML, dTarget, { wmin: 100, fz:
      20, padding: 4, margin: 4, display: 'inline-block' });\r

      \      addDDSource(dNew, isCopy, clearTarget);\r

      \    } else {\r

      \      mAppend(dTarget, dSource);\r

      \    }\r

      \  }\r

      \  prompt() {\r

      \    show_instruction('swap letter to form words', dTitle, 'swap
      letter to form words');\r

      \    mLinebreak(dTable);\r

      \    let fz = 32;\r

      \    let options = _simpleOptions({ language: this.language, w: 200,
      h: 200, keySet: this.keys, luc: 'u', fz: fz, bg: 'random', fg: 'white',
      showLabels: true });\r

      \    let n = 2;\r

      \    let items = gatherItems(n, options); \r

      \    let style = { margin: 3, cursor: 'pointer', fg: 'white',
      display: 'inline', bg: '#00000020', align: 'center', border:
      'transparent', outline: 'none', family: 'Consolas', fz: 80 };\r

      \    for (const item of items) {\r

      \      let d1 = item.container = mDiv(dTable, { hmin: 250 });\r

      \      let d = iLetters(item.label, d1, style); \r

      \      iAdd(item, { div: d }); \r

      \      let letters = item.letters = [];\r

      \      for (let i = 0; i < arrChildren(d).length; i++) {\r

      \        let ch = d.children[i];\r

      \        let l = {\r

      \          itemId: item.id, div: ch, i: i, letter: ch.innerHTML,\r

      \          swapInfo: item.swaps[i],\r

      \          state: 'swapped',\r

      \          isBlinking: false, fg: 'white', bg: 'transparent'\r

      \        };\r

      \        letters.push(l);\r

      \        ch.onclick = () => { startBlinking(l, item.letters, true)
      };\r

      \      }\r

      \      mStyle(d, { margin: 35 });\r

      \      delete item.swaps;\r

      \    }\r

      \    showPictureHints(Pictures, 'container');\r

      \    mLinebreak(dTable, 50);\r

      \    this.buttonDone = mButton('Done!', () => {\r

      \      if (!canAct()) return;\r

      \      for (let i = 0; i < Pictures.length; i++) {\r

      \        let p = Pictures[i];\r

      \        let blinking = getBlinkingLetter(p);\r

      \        if (!blinking) {\r

      \          let msg = 'You need to pick 1 letter to swap in EACH
      word!!!';\r

      \          Speech.say(msg);\r

      \          sayRandomVoice(msg);\r

      \          showFleetingMessage('You need to pick 1 letter to swap in
      EACH word!!!', 0, { fz: 30 });\r

      \          return;\r

      \        }\r

      \      }\r

      \      this.controller.evaluate.bind(this.controller)();\r

      \    }, dTable, { fz: 28, matop: 10, rounding: 10, padding: 16,
      border: 8 }, ['buttonClass']);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    if (this.trialNumber % 2 == 0) showPictureHints(Pictures,
      'container'); else showTextHints(Pictures, 'container', 'origLabel');\r

      \    TOMain = setTimeout(() => {\r

      \      for (const p of Pictures) {\r

      \        for (const l of p.letters) {\r

      \          l.state = 'swapped';\r

      \          if (isdef(l.swapInfo)) {\r

      \            iDiv(l).innerHTML = p.label[l.i];\r

      \          }\r

      \        }\r

      \      }\r

      \    }, 1500);\r

      \    return 1800;\r

      \  }\r

      \  activate() {\r

      \    if (this.trialNumber >= 1) { sayTryAgain();
      showFleetingMessage('Try again!'); }\r

      \    else { showFleetingMessage('click one letter in each word!');
      }\r

      \  }\r

      \  eval() {\r

      \    let n = Pictures.length;\r

      \    let blinkInfo = this.blinkInfo = [];\r

      \    clearFleetingMessage();\r

      \    for (let i = 0; i < n; i++) {\r

      \      let p = Pictures[i];\r

      \      let blinking = getBlinkingLetter(p);\r

      \      blinkInfo.push({ i: i, blinking: blinking });\r

      \    }\r

      \    for (let i = 0; i < n; i++) { let l = blinkInfo[i].blinking; if
      (!l) continue; stopBlinking(l); }\r

      \    for (const blinki of blinkInfo) { if (!blinki.blinking) {
      return false; } }\r

      \    let isCorrect = true;\r

      \    for (let i = 0; i < n; i++) {\r

      \      let b1 = blinkInfo[i].blinking;\r

      \      let b2 = blinkInfo[(i + 1) % blinkInfo.length].blinking;\r

      \      let item = Items[b1.itemId];\r

      \      let item2 = Items[b2.itemId];\r

      \      let l = item.letters[b1.i];\r

      \      let sw = l.swapInfo;\r

      \      if (nundef(sw)) { sw = l.swapInfo = { correct: { itemId:
      item.id, index: b1.i, l: b1.letter } }; }\r

      \      sw.temp = { itemId: item2.id, index: b2.i, l: b2.letter };\r

      \      item.testLabel = replaceAtString(item.label, b1.i,
      b2.letter);\r

      \      iDiv(l).innerHTML = b2.letter;\r

      \      l.state = 'temp';\r

      \    }\r

      \    for (const p of Pictures) { if (p.testLabel != p.origLabel) {
      isCorrect = false; } }\r

      \    let feedbackList = [];\r

      \    for (let i = 0; i < n; i++) {\r

      \      let item = Pictures[i];\r

      \      let d;\r

      \      if (isCorrect) d = iDiv(item.letters[item.iLetter]);\r

      \      else {\r

      \        let iLetter = blinkInfo[i].blinking.i;\r

      \        if (item.iLetter != iLetter) d =
      iDiv(item.letters[iLetter]);\r

      \      }\r

      \      if (isdef(d)) feedbackList.push(d);\r

      \    }\r

      \    Selected = { piclist: Pictures, feedbackUI: feedbackList, sz:
      getRect(iDiv(Pictures[0])).h, delay: 800 };\r

      \    return isCorrect;\r

      \  }\r

      }\r\n"
    sig: class GSwap{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GTouchColors:
    name: GTouchColors
    code: "class GTouchColors extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  start_Level() {\r

      \    super.start_Level();\r

      \    this.keys = this.keys.filter(x => containsColorWord(x));\r

      \  }\r

      \  prompt() {\r

      \    let colorKeys = choose(this.colors, this.numColors);\r

      \    let rows = this.numColors;\r

      \    let showLabels = this.lang == 'C' || this.showLabels;\r

      \    console.log('showLabels', showLabels);\r

      \    myShowPics(this.controller.evaluate.bind(this.controller), {
      bg: 'white' }, { showLabels: showLabels, colorKeys: colorKeys, rows: rows
      });\r

      \    if (this.shuffle == true) {\r

      \      let dParent = iDiv(Pictures[0]).parentNode;\r

      \      shuffleChildren(dParent);\r

      \    }\r

      \    setGoal(randomNumber(0, Pictures.length - 1));\r

      \    let [written, spoken] =
      getOrdinalColorLabelInstruction('click'); \r

      \    show_instruction(written, dTitle, spoken);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  eval(ev) {\r

      \    ev.cancelBubble = true;\r

      \    let item = findItemFromEvent(Pictures, ev);\r

      \    Selected = { answer: item.label, reqAnswer: Goal.label, pic:
      item, feedbackUI: iDiv(item) };\r

      \    if (item == Goal) { return true; } else { return false; }\r

      \  }\r

      }\r\n"
    sig: class GTouchColors{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GTouchPic:
    name: GTouchPic
    code: "class GTouchPic extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  prompt() {\r

      \    myShowPics(this.controller.evaluate.bind(this.controller), {},
      { showLabels: (this.lang == 'C' || this.showLabels) });\r

      \    setGoal();\r

      \    let wr = 'click ';\r

      \    show_instruction(wr + `<b>${Goal.label.toUpperCase()}</b>`,
      dTitle, Goal.label);\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      }\r\n"
    sig: class GTouchPic{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GWritePic:
    name: GWritePic
    code: "class GWritePic extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() {\r

      \    this.correctionFunc = showCorrectWordInTitle;\r

      \    onkeydown = ev => {\r

      \      if (!canAct()) return;\r

      \      if (isdef(this.inputBox)) { this.inputBox.focus(); }\r

      \    }\r

      \  }\r

      \  start_Level() {\r

      \    this.keys = setKeysG(this, filterWordByLengthG, 25);\r

      \    if (this.keys.length < 25) { this.keys = setKeysG(this,
      filterWordByLengthG, 25, 'all'); }\r

      \  }\r

      \  prompt() {\r

      \    let showLabels = this.showLabels == true && this.labels ==
      true;\r

      \    myShowPics(() => mBy(this.defaultFocusElement).focus(), {}, {
      showLabels: showLabels });\r

      \    setGoal();\r

      \    if (this.instruction == 'all') {\r

      \      let wr = (this.language == 'E' ? 'type ' : \"schreib' \");\r

      \      show_instruction(wr + `<b>${Goal.label.toUpperCase()}</b>`,
      dTitle, wr + Goal.label);\r

      \    } else if (this.instruction == 'spokenGoal') {\r

      \      let wr = this.language == 'E' ? 'type the correct word' :
      \"schreib' das passende wort\";\r

      \      let sp = (this.language == 'E' ? 'type' : \"schreib'\") + ' '
      + Goal.label;\r

      \      show_instruction(wr, dTitle, sp);\r

      \    } else {\r

      \      let wr = this.language == 'E' ? 'type the correct word' :
      \"schreib' das passende wort\";\r

      \      show_instruction(wr, dTitle, wr);\r

      \    }\r

      \    mLinebreak(dTable, 20);\r

      \    this.inputBox = addNthInputElement(dTable, this.trialNumber);\r

      \    this.defaultFocusElement = this.inputBox.id;\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    sayTryAgain();\r

      \    let n = this.trialNumber == 1 ? 1 : (this.trialNumber +
      Math.floor((Goal.label.length - this.trialNumber) / 2));\r

      \    showFleetingMessage(Goal.label.substring(0, n));\r

      \    mLinebreak(dTable);\r

      \    this.inputBox = addNthInputElement(dTable, this.trialNumber);\r

      \    this.defaultFocusElement = this.inputBox.id;\r

      \    return 10;\r

      \  }\r

      \  activate() {\r

      \    this.inputBox.onkeyup = ev => {\r

      \      if (!canAct()) return;\r

      \      if (ev.key === \"Enter\") {\r

      \        ev.cancelBubble = true;\r

      \        this.controller.evaluate.bind(this.controller)(ev);\r

      \      } \r

      \    };\r

      \    this.inputBox.focus();\r

      \  }\r

      \  eval(ev) {\r

      \    let answer = normalize(this.inputBox.value, this.language);\r

      \    let reqAnswer = normalize(Goal.label, this.language);\r

      \    let correctPrefix = this.correctPrefix =
      getCorrectPrefix(Goal.label, this.inputBox.value);\r

      \    Selected = { reqAnswer: reqAnswer, answer: answer, feedbackUI:
      iDiv(Goal) };\r

      \    if (answer == reqAnswer) { showFleetingMessage(Goal.label);
      return true; }\r

      \    else { return false; }\r

      \  }\r

      }\r\n"
    sig: class GWritePic{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GMissingNumber:
    name: GMissingNumber
    code: "class GMissingNumber extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() {\r

      \    this.successFunc = successThumbsUp;\r

      \    this.failFunc = failThumbsDown;\r

      \    this.correctionFunc = this.showCorrectSequence.bind(this);\r

      \  }\r

      \  showCorrectSequence() { return
      numberSequenceCorrectionAnimation(getNumSeqHint); }\r

      \  start_Level() {\r

      \    if (!isList(this.steps)) this.steps = [this.steps];\r

      \    this.numPics = 2;\r

      \    this.labels = false;\r

      \  }\r

      \  prompt() {\r

      \    mLinebreak(dTable, 12);\r

      \    showHiddenThumbsUpDown(110);\r

      \    mLinebreak(dTable);\r

      \    this.step = chooseRandom(this.steps);\r

      \    this.op = chooseRandom(this.ops);\r

      \    this.oop = OPS[this.op];\r

      \    this.seq = createNumberSequence(this.seqLen, this.minNum,
      this.maxNum, this.step, this.op);\r

      \    [this.words, this.letters] = showNumberSequence(this.seq,
      dTable);\r

      \    setNumberSequenceGoal();\r

      \    mLinebreak(dTable);\r

      \    let instr1 = (this.language == 'E' ? 'complete the sequence' :
      \"ergänze die reihe\");\r

      \    show_instruction(instr1, dTitle, instr1);\r

      \    if (this.showHint) {\r

      \      hintEngineStart(getNumSeqHintString, [0, 1, 2, 3, 4], 5000 +
      this.level * 1000);\r

      \    }\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    let hintlist = this.trialNumber >= 4 ? [this.trialNumber] :
      range(this.trialNumber, 4);\r

      \    if (this.showHint) hintEngineStart(getNumSeqHintString,
      hintlist, 3000 + this.level * 1000);\r

      \    TOMain = setTimeout(() => getWrongChars().map(x =>
      unfillChar(x)), 500);\r

      \    return 600;\r

      \  }\r

      \  activate() { addKeyup('G', this.interact.bind(this)); }\r

      \  interact(ev) {\r

      \    if (!isNumber(ev.key) && ev.key != '-') return;\r

      \    clearFleetingMessage();\r

      \    if (!canAct()) return;\r

      \    let sel = Selected = onKeyWordInput(ev);\r

      \    if (nundef(sel)) return;\r

      \    let lastInputCharFilled = sel.target;\r

      \    console.assert(sel.isMatch == (lastInputCharFilled.letter ==
      sel.ch), lastInputCharFilled, sel.ch);\r

      \    if (sel.isMatch && sel.isVeryLast) {\r

      \      deactivateFocusGroup();\r

      \      this.controller.evaluate.bind(this.controller)(true);\r

      \    } else if (sel.isMatch && sel.isLastOfGroup) {\r

      \      sel.target.isBlank = false;\r

      \      sel.target.group.hasBlanks = false;\r

      \      removeInPlace(Goal.blankWords, sel.target.group);\r

      \      removeInPlace(Goal.blankChars, sel.target);\r

      \      deactivateFocusGroup();\r

      \      console.log('haaaaaaaaaaaalo', Goal.isFocus)\r

      \    } else if (sel.isMatch) {\r

      \      removeInPlace(Goal.blankChars, sel.target);\r

      \      sel.target.isBlank = false;\r

      \    } else if (sel.isVeryLast) {\r

      \      Selected.words = getInputWords();\r

      \      Selected.answer = getInputWordString();\r

      \      Selected.req = getCorrectWordString();\r

      \      deactivateFocusGroup();\r

      \      this.controller.evaluate.bind(this.controller)(false);\r

      \    } else if (sel.isLastOfGroup) {\r

      \      Selected.words = getInputWords();\r

      \      Selected.answer = getInputWordString();\r

      \      Selected.req = getCorrectWordString();\r

      \      deactivateFocusGroup();\r

      \      this.controller.evaluate.bind(this.controller)(false);\r

      \    } else {\r

      \      if (!this.silent) { writeSound(); playSound('incorrect1');
      }\r

      \      deactivateFocusGroup();\r

      \      showFleetingMessage('does NOT fit: ' + Selected.ch, 0, { fz:
      24 });\r

      \      setTimeout(() => unfillCharInput(Selected.target), 500);\r

      \    }\r

      \  }\r

      \  eval(isCorrect) { return isCorrect; }\r

      }\r\n"
    sig: class GMissingNumber{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GameTimed:
    name: GameTimed
    code: "class GameTimed extends Game{\r

      \  constructor(name, o) { super(name, o); }\r

      \  clear() { clearInterval(this.TOI); super.clear(); this.timer =
      null; }\r

      \  makeTimer() {\r

      \    this.timer = true;\r

      \    if (nundef(this.msTotal)) this.msTotal = 5000;\r

      \    if (nundef(this.msInterval)) this.msInterval = 100;\r

      \    let w = this.wTimerOuter = 200;\r

      \    this.dTimeOuter = mDiv(dTable, { w: w, h: 25, border: 'white',
      rounding: 10, position: 'relative' });\r

      \    [this.wTimer, this.r, this.g] = [0, 0, 255];\r

      \    this.dTimeInner = mDiv(this.dTimeOuter, { h: 25, w:
      this.wTimer, rounding: 10, bg: `rgb(${this.r},${this.g},0)`, position:
      'absolute', left: 0, top: 0 });\r

      \    this.dTimeDisplay = mDiv(this.dTimeOuter, { patop: 2, align:
      'center', h: 25, w: w, position: 'absolute', left: 0, top: 0 });\r

      \    mLinebreak(dTable);\r

      \    this.dPause = mDiv(dTable, { cursor: 'pointer', fz: 12,
      hpadding: 30, vpadding: 10 }, null, 'click to pause');\r

      \    this.dPause.onclick = () => this.pause();\r

      \  }\r

      \  pause() {\r

      \    if (nundef(this.timer)) return;\r

      \    clearInterval(this.TOI);\r

      \    this.dPause.innerHTML = 'click to resume...';\r

      \    this.dPause.onclick = () => this.resume();\r

      \  }\r

      \  resume() {\r

      \    if (nundef(this.timer)) return;\r

      \    this.dPause.innerHTML = 'click to pause...';\r

      \    this.dPause.onclick = () => this.pause();\r

      \    this.TOI = setInterval(this.onTick.bind(this),
      this.msInterval);\r

      \  }\r

      \  activate() {\r

      \    if (nundef(this.timer)) return;\r

      \    this.msLeft = valf(this.msTotal, 10000);\r

      \    this.dTimeDisplay.innerHTML = timeConversion(this.msLeft,
      'sh');\r

      \    this.TOI = setInterval(this.onTick.bind(this),
      this.msInterval);\r

      \  }\r

      \  onTick() {\r

      \    this.msLeft -= this.msInterval;\r

      \    this.wTimer += this.wTimerOuter * this.msInterval /
      this.msTotal;\r

      \    let inc_color = 255 * this.msInterval / this.msTotal; \r

      \    this.r += inc_color; this.g -= inc_color;\r

      \    mStyle(this.dTimeInner, { w: this.wTimer, bg:
      `rgb(${this.r},${this.g},0)` });\r

      \    this.dTimeDisplay.innerHTML = timeConversion(this.msLeft,
      'sh');\r

      \    if (this.msLeft < 100) {\r

      \      clearInterval(this.TOI);\r

      \      this.dPause.style.opacity = 0;\r

      \      this.onTimeup();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class GameTimed{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GSpotit:
    name: GSpotit
    code: "class GSpotit extends GameTimed {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() { this.correctionFunc = showCorrectUis; }\r

      \  start_Level() {\r

      \    super.start_Level();\r

      \    this.colarr = _calc_hex_col_array(this.rows, this.cols);\r

      \    let perCard = arrSum(this.colarr);\r

      \    this.nShared = (this.numCards * (this.numCards - 1)) / 2;\r

      \    this.nUnique = perCard - this.numCards + 1;\r

      \    this.numKeysNeeded = this.nShared + this.numCards *
      this.nUnique;\r

      \    this.keys = setKeysG(this, (_, x) => !x.includes(' '),
      this.numKeysNeeded + 1);\r

      \  }\r

      \  deal() {\r

      \    let keys = choose(this.keys, this.numKeysNeeded);\r

      \    let dupls = keys.slice(0, this.nShared); \r

      \    let uniqs = keys.slice(this.nShared);\r

      \    let infos = [];\r

      \    for (let i = 0; i < this.numCards; i++) {\r

      \      let keylist = uniqs.slice(i * this.nUnique, (i + 1) *
      this.nUnique);\r

      \      let info = { id: getUID(), shares: {}, keys: keylist, rows:
      this.rows, cols: this.cols, colarr: this.colarr };\r

      \      infos.push(info);\r

      \    }\r

      \    let iShared = 0;\r

      \    for (let i = 0; i < this.numCards; i++) {\r

      \      for (let j = i + 1; j < this.numCards; j++) {\r

      \        let c1 = infos[i];\r

      \        let c2 = infos[j];\r

      \        let dupl = dupls[iShared++];\r

      \        c1.keys.push(dupl);\r

      \        c1.shares[c2.id] = dupl;\r

      \        c2.shares[c1.id] = dupl;\r

      \        c2.keys.push(dupl);\r

      \      }\r

      \    }\r

      \    for (const info of infos) { shuffle(info.keys); }\r

      \    return infos;\r

      \  }\r

      \  interact(ev) {\r

      \    ev.cancelBubble = true;\r

      \    if (!canAct()) { console.log('no act'); return; }\r

      \    let keyClicked = evToProp(ev, 'key');\r

      \    let id = evToId(ev);\r

      \    if (isdef(keyClicked) && isdef(Items[id])) {\r

      \      this.pause();\r

      \      let item = Items[id];\r

      \      if (Object.values(item.shares).includes(keyClicked)) {\r

      \        let otherCard = spotitFindCardSharingSymbol(item,
      keyClicked);\r

      \        let cardSymbol = ev.target;\r

      \        let otherSymbol = spotitFindSymbol(otherCard,
      keyClicked);\r

      \        Selected = { isCorrect: true, feedbackUI: [cardSymbol,
      otherSymbol] };\r

      \      } else {\r

      \        let cardSymbol = ev.target;\r

      \        Selected = { isCorrect: false, feedbackUI: [cardSymbol],
      correctUis: this.getSharedSymbols(), correctionDelay: this.items.length *
      1500 };\r

      \      }\r

      \      this.controller.evaluate.bind(this.controller)();\r

      \    }\r

      \  }\r

      \  getSharedSymbols() {\r

      \    let result = [];\r

      \    for (const item of this.items) {\r

      \      for (const id in item.shares) {\r

      \        let k = item.shares[id];\r

      \        let ui = iGetl(item, k);\r

      \        result.push(ui);\r

      \      }\r

      \    }\r

      \    return result;\r

      \  }\r

      \  eval() { return Selected.isCorrect; }\r

      \  prompt() {\r

      \    this.trials = 1;\r

      \    show_instruction('find common symbol', dTitle);\r

      \    mLinebreak(dTable, 25);\r

      \    let infos = this.deal(); \r

      \    let items = this.items = [];\r

      \    for (const info of infos) {\r

      \      let item = spotitCard(info, dTable, { margin: 10 },
      this.interact.bind(this));\r

      \      items.push(item);\r

      \    }\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  activate(){}\r

      \  onTimeup() {\r

      \    Selected = { isCorrect: false, correctUis:
      this.getSharedSymbols(), correctionDelay: this.items.length * 2000 };\r

      \    this.controller.evaluate.bind(this.controller)();\r

      \  }\r

      }\r\n"
    sig: class GSpotit{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GProg:
    name: GProg
    code: "class GProg extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  prompt() {\r

      \    let c = this.card = cRound(dTable); \r

      \    let d = c.visual = iDiv(c);\r

      \    visualPropertySetter(this.card);\r

      \    visualAttributeSetter(this.card);\r

      \    d.innerHTML = 'HALLO';\r

      \    mStyle(d, { fg: 'blue' });\r

      \    mLinebreak(dTable, 25);\r

      \    this.ta = this.createTextArea();\r

      \    this.ta.value = `mCenterCenterFlex(card.visual);`; \r

      \    mLinebreak(dTable, 25);\r

      \    mButton('run', this.runCode.bind(this), dTable, { bg:
      'skyblue', fg: 'black', fz: 32 }, 'mybutton');\r

      \  }\r

      \  runCode() {\r

      \    let code = this.ta.value;\r

      \    let prelim = ''; \r

      \    prelim = 'let card = this.card;'; \r

      \    code = prelim + code;\r

      \    eval(code);\r

      \  }\r

      \  createTextArea() {\r

      \    let dCode = mDiv(dTable, {});\r

      \    let ta = this.ta = mCreate('textarea');\r

      \    mAppend(dCode, ta);\r

      \    ta.setAttribute('rows', 10);\r

      \    ta.setAttribute('cols', 60);\r

      \    mStyle(ta, { family: 'courier', padding: 10 });\r

      \    return ta;\r

      \  }\r

      }\r\n"
    sig: class GProg{}
    region: programming (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  G2Player:
    name: G2Player
    code: "class G2Player {\r

      \  constructor(name, o) {\r

      \    this.name = name;\r

      \    copyKeys(o, this);\r

      \    this.maxlevel = isdef(this.levels) ?
      Object.keys(this.levels).length - 1 : 0;\r

      \    this.id = name;\r

      \    this.color = getColorDictColor(this.color);\r

      \    this.moveCounter = 0;\r

      \  }\r

      \  startGame() {\r

      \    this.moveCounter = 0;\r

      \    this.winner = this.gameOver = null;\r

      \    this.setStartPlayer();\r

      \  }\r

      \  clear() { clearTimeout(this.TO); clearFleetingMessage(); }\r

      \  changePlayer() {\r

      \    let idx = this.iPlayer = (this.iPlayer + 1) %
      this.players.length;\r

      \    this.setPlayers();\r

      \  }\r

      \  heuristic(state) { return 1; }\r

      \  setPlayers() {\r

      \    this.plTurn = this.playerOrder[this.iPlayer];\r

      \    this.plOpp = this.plTurn == this.ai ? this.human : this.ai;\r

      \  }\r

      \  setStartPlayer() {\r

      \    if (this.startPlayer == 'human') this.playerOrder =
      [this.human, this.ai];\r

      \    else if (this.startPlayer == 'ai') this.playerOrder = [this.ai,
      this.human];\r

      \    else this.playerOrder = chooseRandom([[this.human, this.ai],
      [this.ai, this.human]]);\r

      \    this.iPlayer = 0;\r

      \    this.setPlayers();\r

      \  }\r

      \  startAction() { }\r

      \  prompt() { }\r

      \  eval() { } \r

      \  activate() { }\r

      }\r\n"
    sig: class G2Player{}
    region: programming (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GMinimalGame:
    name: GMinimalGame
    code: "class GMinimalGame {\r

      \  constructor(name, o) {\r

      \    this.name = name;\r

      \    copyKeys(o, this);\r

      \    this.id = name;\r

      \    this.color = getColorDictColor(this.color);\r

      \  }\r

      \  clear() { clearTimeout(this.TO); clearFleetingMessage(); }\r

      \  startGame() { clearElement(dTable); }\r

      \  clear() { }\r

      \  prompt() { }\r

      \  activate() { }\r

      }\r\n"
    sig: class GMinimalGame{}
    region: programming (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GAristo:
    name: GAristo
    code: "class GAristo extends GMinimalGame {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame(fen) {\r

      \    if (nundef(fen)) { fen = G.START_FEN =
      this.default_start_fen(); }\r

      \    this.parse_fen(fen);\r

      \    return;\r

      \    let n = this.nOthers = 2; chooseRandom(this.numPlayers);\r

      \    let me = this.me = gameItem(Username).id;\r

      \    let others = this.others = []; for (let i = 0; i < n; i++)
      others.push(gameItem(randomName()).id);\r

      \    let allPlayers = this.allPlayers = [me].concat(others);\r

      \    let world = this.world = gameItem('world'); \r

      \    let market = this.market = gameItem('market'); \r

      \    let draw_pile = this.draw_pile = gameItem('draw pile'); \r

      \    let buy_cards = this.buy_cards = gameItem('buy cards'); \r

      \    let discard_pile = this.discard_pile = gameItem('discard
      pile'); \r

      \    let phase = this.phase = 'king';\r

      \    let turn = chooseRandom(allPlayers);\r

      \    aristoGame1(this); \r

      \  }\r

      \  cards_to_string(cards) { return cards.map(x =>
      x.toString).join('_'); } \r

      \  deal_hand() { let h = this.deck.deal(this.HAND_SZ);
      this.draw_pile = this.deck.cards(); return h; }\r

      \  deal_glob() {\r

      \    this.phase = 'king'; \r

      \    this.deck = new Deck('52_double');\r

      \    this.cards = this.deck.cards().map(x => gameItem(x));\r

      \    this.market = this.deck.deal(this.MARKET_SZ);\r

      \    this.draw_pile = this.deck.cards(); \r

      \    this.buy = [];\r

      \    this.discard_pile = [];\r

      \  }\r

      \  default_start_fen() {\r

      \    let fen = '5 13 8 0 6 7 3 4 4 5 6 3';\r

      \    return fen;\r

      \  }\r

      \  gamify() {\r

      \  }\r

      \  make_aristocracy_card(i) {\r

      \    if (i < this.DECK_SZ - this.JOKERS) {\r

      \      let rank = i % this.RANKS;\r

      \      let suit = Math.floor(i / this.RANKS) % 4;\r

      \    }\r

      \  }\r

      \  parse_fen(fen) {\r

      \    let parts = fen.split(':');\r

      \    let opt = parts[0];\r

      \    let glob = parts.length > 1 ? parts[1] : null;\r

      \    let pls = [];\r

      \    for (let i = 2; i < parts.length; i++) {\r

      \      pls.push(parts[i]);\r

      \    }\r

      \    let opts = opt.split(' ');\r

      \    this.NUMPLAYERS = Number(opts[0]);\r

      \    this.RANKS = Number(opts[1]);\r

      \    this.SUITS = Number(opts[2]); \r

      \    this.JOKERS = Number(opts[3]);\r

      \    this.VP = Number(opts[4]);\r

      \    this.HAND_SZ = Number(opts[5]);\r

      \    this.MARKET_SZ = Number(opts[6]);\r

      \    this.BUY_SZ = Number(opts[7]);\r

      \    this.FARM_SZ = Number(opts[8]);\r

      \    this.ESTATE_SZ = Number(opts[9]);\r

      \    this.CHATEAU_SZ = Number(opts[10]);\r

      \    this.COINS = Number(opts[11]);\r

      \    this.DECK_SZ = this.RANKS * this.SUITS + this.JOKERS;\r

      \    let deck = this.deck = new Deck();\r

      \    deck.initNumber(this.DECK_SZ);\r

      \    this.cards = [];\r

      \    for (const x of deck.cards()) {\r

      \      let c = this.make_aristocracy_card(x);\r

      \    }\r

      \    return; \r

      \    if (glob) {\r

      \      let globs = glob.split(' ');\r

      \      this.herald = globs[0]; \r

      \      this.phase = globs[1]; \r

      \      this.turn = globs[2]; \r

      \      this.draw = parse_cards(globs[3]);\r

      \      this.market = parse_cards(globs[4]);\r

      \      this.buy = parse_cards(globs[5]);\r

      \      this.discard = parse_cards(globs[6]);\r

      \    } else {\r

      \      this.deal_glob();\r

      \    }\r

      \    let have_player_data = pls.length > 0;\r

      \    this.players = [];\r

      \    if (have_player_data) {\r

      \      for (let i = 0; i < pls.length; i++) {\r

      \        let pl = parse_player(pls[i]);\r

      \        this.players.push(pl);\r

      \      }\r

      \    } else {\r

      \      for (let i = 0; i < this.NUMPLAYERS; i++) {\r

      \        let pl = {\r

      \          coins: this.COINS,\r

      \          hand: this.deal_hand(),\r

      \        };\r

      \        this.players.push(pl);\r

      \      }\r

      \    }\r

      \    ensure_player_id_name_index_type_color(this.players);\r

      \  }\r

      \  parse_cards(s) { return s.split('_').map(x => Number(x)); }\r

      }\r\n"
    sig: class GAristo{}
    region: aristo (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  GKrieg:
    name: GKrieg
    code: "class GKrieg extends G2Player {\r

      \  write() { write('game', ...arguments); }\r

      \  startGame() {\r

      \    this.write('start game')\r

      \    super.startGame();\r

      \    let back = this.back = new GKriegBack();\r

      \    this.setStartPosition();\r

      \    this.front = new GKriegFront(130, dTable);\r

      \    this.front.presentState(this.back.get_state());\r

      \    mLinebreak(dTable, 50);\r

      \    this.moveButton = mButton('Move!', this.interact.bind(this),
      dTable, { fz: 28, matop: 10, rounding: 10, padding: 16, border: 8 },
      ['buttonClass']);\r

      \  }\r

      \  setStartPosition() {\r

      \    this.back.load(null);\r

      \  }\r

      \  prompt() {\r

      \    this.write('prompt')\r

      \    let msg = this.plTurn == this.ai ? 'Ai thinking...' :
      'Deterministic: click Move!';\r

      \    show_instruction(msg, dTitle);\r

      \    this.controller.activateUi();\r

      \  }\r

      \  activate() {\r

      \    let pl = this.plTurn;\r

      \    let autoplay = false;\r

      \    let manual = true;\r

      \    if (!manual && (autoplay || pl == this.ai)) {\r

      \      if (this.ai == pl) uiActivated = false;\r

      \      setTimeout(this.interact.bind(this), 500);\r

      \    } else {\r

      \      this.moveButton.style.opacity = 1;\r

      \    }\r

      \  }\r

      \  interact() {\r

      \    if (!canAct()) { console.log('NOPE!!!!', 'ai', aiActivated,
      'ui', uiActivated); return; }\r

      \    this.controller.deactivateUi();\r

      \    this.write('interact');\r

      \    let back = this.back;\r

      \    back.make_random_move();\r

      \    this.front.animatePlayerMove(back.turn(),
      this.onPlayerMoveCompleted.bind(this));\r

      \  }\r

      \  onPlayerMoveCompleted() {\r

      \    let back = this.back;\r

      \    this.front.presentState(this.back.get_state());\r

      \    let x = this.back.resolve();\r

      \    if (isdef(x)) {\r

      \      this.moveButton.style.opacity = .3;\r

      \      this.TO = setTimeout(() => { this.front.animateResolve(x, ()
      => { GC.evaluate(x) }) },  \r

      \        1000\r

      \      );\r

      \    } else this.controller.evaluate(x);\r

      \  }\r

      \  changePlayer() {\r

      \    this.write('change player')\r

      \    this.back.swap_turn();\r

      \    this.plTurn = this.players[this.back.player().index];\r

      \    this.opp = this.players[this.back.opponent().index];\r

      \  }\r

      \  eval(x) {\r

      \    let back = this.back;\r

      \    this.write('eval', x)\r

      \    if (isdef(x)) this.front.presentState(this.back.get_state());\r

      \    if (back.is_out_of_cards()) {\r

      \      this.moveButton.remove();\r

      \      this.gameOver = true;\r

      \      let w = back.winner();\r

      \      if (isdef(w)) this.winner = this.players[w.index];\r

      \      this.bannerPos = -480;\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class GKrieg{}
    region: gKrieg (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GKriegBack:
    name: GKriegBack
    code: "class GKriegBack {\r

      \  load(state) {\r

      \    this.history = [];\r

      \    let deck = this.deck = new Deck('52');\r

      \    let n = 4;\r

      \    this.pl1 = { hand: deck.deal(n), trick: [], index: 0 }; if
      (isdef(state) && isdef(state.pl1)) addKeys(state.pl1, this.pl1);\r

      \    this.pl2 = { hand: deck.deal(n), trick: [], index: 1 }; if
      (isdef(state) && isdef(state.pl2)) addKeys(state.pl2, this.pl2);\r

      \    this.players = [this.pl1, this.pl2];\r

      \    this.iturn = 0;\r

      \    if (nundef(state)) return;\r

      \    /* example of a state:\r

      \    {\r

      \      pl1: { hand: ['TH', 'QH'], trick: [['QH']] },\r

      \      pl2: { hand: ['TC', 'QC'], trick: [['KC']] },\r

      \    },\r

      \    */\r

      \    if (isdef(state.pl1.hand)) this.pl1.hand =
      parseHand(state.pl1.hand, deck);\r

      \    if (isdef(state.pl2.hand)) this.pl2.hand =
      parseHand(state.pl2.hand, deck);\r

      \    if (isdef(state.pl1.trick)) state.pl1.trick.map(x =>
      this.pl1.trick.push(parseHand(x, deck)));\r

      \    if (isdef(state.pl2.trick)) state.pl2.trick.map(x =>
      this.pl2.trick.push(parseHand(x, deck)));\r

      \    if (isdef(state.deck))
      this.deck.setData(parseHand(state.deck));\r

      \    if (!isEmpty(this.pl1.trick)) {\r

      \      let len1 = this.pl1.trick.length;\r

      \      let len2 = this.pl2.trick.length;\r

      \      if (len1 > len2) this.iturn = 1;\r

      \      else {\r

      \        this.resolve();\r

      \        this.iturn = 0;\r

      \      }\r

      \    }\r

      \  }\r

      \  get_state() { return { pl1: this.pl1, pl2: this.pl2, deck:
      this.deck } };\r

      \  turn() { return this.iturn; }\r

      \  top(pl) {\r

      \    return Card52.getRankValue(arrFirstOfLast(pl.trick));\r

      \  }\r

      \  get_moves() {\r

      \    let pl = this.player();\r

      \    let x = pl.trick.length > 0 ? arrTakeFromEnd(pl.hand, 3) :
      [arrLast(pl.hand)];\r

      \    x.reverse();\r

      \    return [x];\r

      \  }\r

      \  make_random_move() {\r

      \    let moves = this.get_moves();\r

      \    let move = chooseRandom(moves);\r

      \    this.make_move(move);\r

      \  }\r

      \  make_move(move) {\r

      \    let pl = this.player();\r

      \    pl.trick.push(move);\r

      \    move.map(x => removeInPlace(pl.hand, x));\r

      \    this.lastMove = move;\r

      \  }\r

      \  resolve() {\r

      \    let result = this._resolve();\r

      \    this.push_history(this.iturn, this.lastMove, result);\r

      \    return result ? result.iWinner : null;\r

      \  }\r

      \  swap_turn() { this.iturn = this.iturn == 0 ? 1 : 0; }\r

      \  make_random_moveX() {\r

      \    let moves = this.get_moves();\r

      \    let move = chooseRandom(moves);\r

      \    this.make_moveX(move);\r

      \  }\r

      \  make_moveX(move) {\r

      \    this.make_move(move);\r

      \    let result = this._resolve();\r

      \    this.push_history(this.iturn, move, result);\r

      \    this.swap_turn();\r

      \  }\r

      \  _resolve() {\r

      \    let pl = this.player(), opp = this.opponent();\r

      \    console.log('...resolve', pl.trick, opp.trick)\r

      \    if (opp.trick.length != pl.trick.length) return null; \r

      \    let t1 = this.top(pl); let t2 = this.top(opp);\r

      \    console.log('resolve: compare t1', t1, 't2', t2);\r

      \    if (isdef(t1) && isdef(t2)) {\r

      \      if (t1 > t2) { return this.add_trick_from_to(opp, pl); }\r

      \      else if (t2 > t1) { return this.add_trick_from_to(pl, opp);
      }\r

      \      else if (isEmpty(pl.hand)) { return
      this.add_trick_from_to(pl, opp); }\r

      \      else if (isEmpty(opp.hand)) { return
      this.add_trick_from_to(opp, pl); }\r

      \      else return null;\r

      \    }\r

      \    return null;\r

      \  }\r

      \  add_trick_from_to(plFrom, plTo) {\r

      \    let t1 = plFrom.trick;\r

      \    let t2 = plTo.trick;\r

      \    let iLoser = plFrom.index;\r

      \    let iWinner = plTo.index;\r

      \    let cards1 = arrFlatten(plFrom.trick); \r

      \    let cards2 = arrFlatten(plTo.trick); \r

      \    let cards = cards1.concat(cards2);\r

      \    plTo.hand = cards.concat(plTo.hand);\r

      \    plFrom.trick = [];\r

      \    plTo.trick = [];\r

      \    return { iWinner: iWinner, winnerTrick: t2, iLoser: iLoser,
      loserTrick: t1, cards: cards };\r

      \  }\r

      \  undo() {\r

      \    let hist = this.pop_history();\r

      \    if (hist == null) { return null; }\r

      \    let move = hist.move;\r

      \    this.iturn = hist.iturn;\r

      \    let pl = this.player();\r

      \    pl.hand.push(move);\r

      \    move.map(x => removeInPlace(pl.trick, x));\r

      \    if (isdef(hist.result)) {\r

      \      let plWin = this.players[hist.iWinner];\r

      \      let plLose = this.players[hist.iLoser];\r

      \      plWin.trick = hist.winnerTrick;\r

      \      plLose.trick = hist.loserTrick;\r

      \      plWin.hand = arrTake(plWin.hand, plWin.hand.length -
      hist.cards.length);\r

      \    }\r

      \  }\r

      \  print_state(comment = '') {\r

      \    if (nundef(this.history)) this.history = [];\r

      \    let state = jsCopy(this.get_state());\r

      \    console.log('____' + comment + ' #' + this.history.length,
      'turn=' + this.iturn);\r

      \    console.log('pl1: hand:' + arrString(this.pl1.hand, iToValue),
      'trick', arrString(this.pl1.trick, iToValue), 'top',
      this.top(this.pl1));\r

      \    console.log('pl2: hand:' + arrString(this.pl2.hand, iToValue),
      'trick', arrString(this.pl2.trick, iToValue), 'top',
      this.top(this.pl2));\r

      \  }\r

      \  player() { return this.players[this.iturn]; }\r

      \  opponent() { return this.players[(this.iturn + 1) %
      this.players.length]; }\r

      \  push_history(iturn, move, result) { if (nundef(this.history))
      this.history = []; this.history.push({ iturn: iturn, move: move, result:
      result }); return this.history; }\r

      \  pop_history() { if (nundef(this.history)) this.history = [];
      return this.history.pop(); }\r

      \  is_war() { let pl = this.player(), opp = this.opponent(); return
      pl.trick.length > 0 && pl.trick.length == opp.trick.length && this.top(pl)
      == this.top(opp); }\r

      \  in_war() { let pl = this.player(), opp = this.opponent(); return
      pl.trick.length != opp.trick.length && pl.trick.length > 1; }\r

      \  in_trick() { let pl = this.player(), opp = this.opponent();
      return pl.trick.length == 0 && opp.trick.length == 1; }\r

      \  is_out_of_cards() { return this._is_out_of_cards(this.player())
      || this._is_out_of_cards(this.opponent()); }\r

      \  player_is_out_of_cards() { return
      this._is_out_of_cards(this.player()); }\r

      \  _is_out_of_cards(pl) { return (isEmpty(pl.trick) &&
      isEmpty(pl.hand)); }\r

      \  winner() { return firstCond(this.players, x => !isEmpty(x.hand)
      || !isEmpty(x.trick)); }\r

      }\r\n"
    sig: class GKriegBack{}
    region: gKrieg (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GKriegFront:
    name: GKriegFront
    code: "class GKriegFront {\r

      \  constructor(hPlayer, dParent) { this.hPlayer = hPlayer;
      this.dParent = dParent; this.setup(); }\r

      \  write() { write('front', ...arguments); }\r

      \  setup() { this.areas = makeAreasKrieg(this.dParent); }\r

      \  clear() { this.areas.map(x => clearElement(diContent(x))); }\r

      \  clearZones() { for (const k of ['t0', 't1', 'h0', 'h1'])
      this.clearZones(k); }\r

      \  clearZone(k) { clearElement(this.getZoneDiv(k)); }\r

      \  getZoneDiv(k) { return this.hands[k].zone; }\r

      \  getTrickZoneDiv(iPlayer) { return this.getZoneDiv('t' + iPlayer);
      }\r

      \  getHandZoneDiv(iPlayer) { return this.getZoneDiv('h' + iPlayer);
      }\r

      \  getPlayerCards(iPlayer) { return this.hands['h' +
      iPlayer].iHand.items; }\r

      \  getTrickCards() {\r

      \    let res = [];\r

      \    let t0 = this.hands.t0;\r

      \    if (isdef(t0.iHand.items)) {\r

      \      res = res.concat(t0.iHand.items);\r

      \    }\r

      \    let t1 = this.hands.t1;\r

      \    if (isdef(t1.iHand.items)) {\r

      \      res = res.concat(t1.iHand.items);\r

      \    }\r

      \    return res;\r

      \  }\r

      \  animatePlayerMove(iPlayer, callback) {\r

      \    let cards = this.getPlayerCards(iPlayer);\r

      \    let c = arrLast(cards);\r

      \    let dSource = this.hands['h' + iPlayer].zone; \r

      \    let key = 't' + iPlayer;\r

      \    let trick = this.hands[key];\r

      \    let pos1 = lookup(this, ['pos1', key]);\r

      \    let dTarget, offset;\r

      \    if (isdef(pos1)) {\r

      \      dTarget = trick.zone; \r

      \      offset = { x: pos1.x - 10, y: pos1.y - 10 };\r

      \    } else {\r

      \      dTarget = trick.zone; \r

      \      let empty = nundef(trick.iHand.items);\r

      \      offset = { x: empty ? 0 : 0, y: 0 };\r

      \    }\r

      \    aMove(iDiv(c), dSource, dTarget, callback, offset, 500, 'EASE',
      1);\r

      \  }\r

      \  animateResolve(iWinner, callback) {\r

      \    let cards = this.getTrickCards();\r

      \    let dSource = this.hands.t0.zone;  \r

      \    let dTarget = this.hands['h' + iWinner].zone; \r

      \    let offset = { x: 0, y: 0 };\r

      \    let trickCards = this.getTrickCards();\r

      \    let iLast = trickCards.length, i = 0;\r

      \    for (const c of trickCards) {\r

      \      dSource = iDiv(c);\r

      \      i++; let f;\r

      \      if (i == iLast) {\r

      \        f = callback;\r

      \      } else {\r

      \        f = null;\r

      \      }\r

      \      iMoveFromToPure(c, dSource, dTarget, f, offset);\r

      \    }\r

      \  }\r

      \  presentState(state) {\r

      \    this.write('present', jsCopy(state))\r

      \    this.clear();\r

      \    let trick1 = arrFlatten(state.pl1.trick)\r

      \    let trick2 = arrFlatten(state.pl2.trick);\r

      \    let pl1Hand = state.pl1.hand;\r

      \    let pl2Hand = state.pl2.hand;\r

      \    let arrs = [[trick1, trick2], [pl1Hand], [pl2Hand]];\r

      \    let hands = [];\r

      \    for (let i = 0; i < 3; i++) {\r

      \      let area = this.areas[i];\r

      \      let d = diContent(area);\r

      \      iMessage(area, '');\r

      \      for (let j = 0; j < arrs[i].length; j++) {\r

      \        let arr = arrs[i][j]; \r

      \        let id = 'a' + i + '_h' + j;\r

      \        let what = iH01(arr, d, {}, id, i == 0 ? 20 : 0); \r

      \        hands.push(what);\r

      \      }\r

      \    }\r

      \    for (let i = 0; i < 2; i++) {\r

      \      let cards = hands[i].iHand.items;\r

      \      if (isEmpty(hands[i].arr)) continue;\r

      \      for (let j = 0; j < cards.length - 1; j++) {\r

      \        Card52.turnFaceDown(cards[j]);\r

      \      }\r

      \    }\r

      \    this.hands = {};\r

      \    let handNames = ['t0', 't1', 'h0', 'h1'];\r

      \    if (nundef(this.pos1)) { this.pos1 = {}; }\r

      \    for (let i = 0; i < 4; i++) {\r

      \      let hi = hands[i];\r

      \      this.hands[handNames[i]] = hi;\r

      \      hi.key = handNames[i];\r

      \      if (!isEmpty(hi.arr)) {\r

      \        let hih = hi.iHand;\r

      \        this.pos1[handNames[i]] = getRect(iDiv(hih), hi.zone);\r

      \      }\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class GKriegFront{}
    region: gKrieg (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GTTT:
    name: GTTT
    code: "class GTTT extends G2Player {\r

      \  startGame() {\r

      \    super.startGame();\r

      \    this.createBoard();\r

      \    this.human.sym = 'O';\r

      \    this.ai.sym = 'X';\r

      \    this.setStartPosition();\r

      \  }\r

      \  createBoard() {\r

      \    this.rows = this.cols = this.boardSize;\r

      \    this.board = new Board(this.rows, this.cols,
      this.controller.uiInteract.bind(this.controller));\r

      \  }\r

      \  setStartPosition() {\r

      \    return;\r

      \    let positions = [\r

      \      new Array(9).fill(null),\r

      \      ['X', 'X', null, 'O', null, null, 'O', null, null],\r

      \      [null, 'X', null, 'X', null, 'O', null, 'O', null],\r

      \      [null, null, null, null, 'X', 'O', null, 'O', null],\r

      \    ];\r

      \    if (isdef(this.iPosition)) {\r

      \      let idx = this.iPosition + 1; idx = idx % positions.length;
      this.iPosition = idx;\r

      \    } else this.iPosition = 0;\r

      \    let state = nundef(this.startPosition) || this.startPosition ==
      'empty' ? positions[0]\r

      \      : this.startPosition == 'random' ? chooseRandom(positions)\r

      \        : positions[this.iPosition];\r

      \    this.board.setState(state, { X: this.ai.color, O:
      this.human.color });\r

      \  }\r

      \  prompt() {\r

      \    let msg = this.plTurn == this.ai ? 'Ai thinking...' : 'click an
      empty field!';\r

      \    show_instruction(msg, dTitle);\r

      \    this.controller.activateUi();\r

      \  }\r

      \  activate() {\r

      \    let pl = this.plTurn;\r

      \    let autoplay = false;\r

      \    if (autoplay || pl == this.ai) {\r

      \      if (this.ai == pl) uiActivated = false;\r

      \      setTimeout(() => AIMinimax(this,
      this.afterComputerMove.bind(this)), 200);\r

      \    }\r

      \  }\r

      \  interact(ev) {\r

      \    let tile = evToItemC(ev);\r

      \    if (isdef(tile.label)) return; \r

      \    let pl = this.plTurn;\r

      \    addLabel(tile, pl.sym, { fz: 60, fg: pl.color });\r

      \    this.controller.evaluate(tile);\r

      \  }\r

      \  afterComputerMove(iMove) {\r

      \    let tile = this.board.items[iMove];\r

      \    this.interact({ target: iDiv(tile) });\r

      \  }\r

      \  eval() {\r

      \    let done = this.checkFinal();\r

      \    this.gameOver = done > 0;\r

      \    if (this.gameOver) { this.winner = done > 1 ? this.plTurn :
      null; this.tie = done == 1; }\r

      \  }\r

      \  checkFinal(state) {\r

      \    if (nundef(state)) state = this.getState();\r

      \    let isTie = false;\r

      \    let isWin = checkWinnerTTT(state);\r

      \    if (!isWin) { isTie = checkBoardFull(state) ||
      !checkPotentialTTT(state); }\r

      \    return isWin ? 2 : isTie ? 1 : 0;\r

      \  }\r

      \  getState() { return this.board.getState(); }\r

      \  applyMove(state, move, player) { arrReplaceAtInPlace(state, move,
      player.sym); }\r

      \  undoMove(state, move, player) { arrReplaceAtInPlace(state, move,
      ' '); }\r

      \  getAvailableMoves(state) {\r

      \    let moves = [];\r

      \    for (let i = 0; i < state.length; i++) {\r

      \      if (EmptyFunc(state[i])) moves.push(i);\r

      \    }\r

      \    shuffle(moves);\r

      \    return moves;\r

      \  }\r

      \  heuristic1(node, depth) { }\r

      \  evalState(node, depth) {\r

      \    let x = checkWinnerTTT(node);\r

      \    if (checkBoardFull(node) || x) {\r

      \      return { reached: true, val: (!x ? 0 : (10 - depth) * (x ==
      MAXIMIZER.sym ? 1 : -1)) };\r

      \    }\r

      \    return { reached: false };\r

      \  }\r

      \  evalStateL(node, depth) {\r

      \    let key = node.join('');\r

      \    let val = DMM[key];\r

      \    let x = isdef(val) ? val : checkWinnerTTT(node);\r

      \    DMM[key] = x;\r

      \    if (checkBoardFull(node) || x) {\r

      \      return { reached: true, val: (!x ? 0 : (10 - depth) * (x ==
      MAXIMIZER.sym ? 1 : -1)) };\r

      \    }\r

      \    return { reached: false };\r

      \  }\r

      \  evalStateL2(node, depth) {\r

      \    let full = checkBoardFull(node);\r

      \    if (full) {\r

      \      let key = JSON.stringify(node);\r

      \      let x = DMM[key];\r

      \      if (nundef(x)) DMM[key] = x = checkWinnerTTT(node);\r

      \      return { reached: true, val: (!x ? 0 : (10 - depth) * (x ==
      MAXIMIZER.sym ? 1 : -1)) };\r

      \    } else {\r

      \      let x = checkWinnerTTT(node);\r

      \      if (x) return { reached: true, val: (!x ? 0 : (10 - depth) *
      (x == MAXIMIZER.sym ? 1 : -1)) };\r

      \      return { reached: false };\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class GTTT{}
    region: gKrieg (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GC4:
    name: GC4
    code: "class GC4 extends GTTT {\r

      \  startGame() {\r

      \    super.startGame();\r

      \  }\r

      \  createBoard() {\r

      \    this.board = new Board(this.rows, this.cols,
      this.controller.uiInteract.bind(this.controller), { margin: 6, w: 60, h:
      60, bg: 'white', fg: 'black', rounding: '50%' });\r

      \  }\r

      \  setStartPosition() {\r

      \    let positions = [\r

      \      [[0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0]],\r

      \      [[0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      ['O', 'X', 0, 0, 0, 0, 0],\r

      \      ['O', 'X', 0, 0, 0, 0, 0]],\r

      \      [[0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      ['O', 'X', 0, 0, 0, 0, 0],\r

      \      ['O', 'X', 0, 0, 0, 0, 0],\r

      \      ['O', 'X', 0, 0, 0, 0, 0]],\r

      \      [[0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 'O', 0, 0, 0],\r

      \      ['O', 'X', 0, 'O', 0, 0, 0],\r

      \      ['O', 'X', 0, 'O', 0, 0, 0]],\r

      \      [[0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, \"X\", 0, 0, 0],\r

      \      [\"X\", 0, 0, \"O\", 0, 0, 0],\r

      \      [\"O\", \"X\", 0, \"O\", 0, 0, 0],\r

      \      [\"O\", \"X\", \"O\", \"O\", 0, 0, 0]],\r

      \      [[0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0, 0],\r

      \      [\"X\", 0, 0, 0, 0, 0, 0],\r

      \      [\"X\", 0, 0, 0, \"O\", \"O\", 0]],\r

      \    ];\r

      \    this.iPosition = 4;\r

      \    if (isdef(this.iPosition)) {\r

      \      let idx = this.iPosition + 1; idx = idx % positions.length;
      this.iPosition = idx;\r

      \    } else this.iPosition = 0;\r

      \    let state = nundef(this.startPosition) || this.startPosition ==
      'empty' ? positions[0]\r

      \      : this.startPosition == 'random' ? chooseRandom(positions)\r

      \        : positions[this.iPosition];\r

      \    this.board.setState(state, { X: this.ai.color, O:
      this.human.color });\r

      \  }\r

      \  checkFinal(state) {\r

      \    if (nundef(state)) state = this.getState();\r

      \    let isTie = false;\r

      \    let isWin = checkWinnerC4(state, this.rows, this.cols,
      this.stride);\r

      \    if (!isWin) { isTie = checkBoardFull(state); }\r

      \    return isWin ? 2 : isTie ? 1 : 0;\r

      \  }\r

      \  checkLegal(tile) {\r

      \    let col = tile.col;\r

      \    let topmost = this.board.items[col];\r

      \    if (EmptyFunc(topmost.label)) return true; else return false;\r

      \  }\r

      \  findBottomEmptyTileInColumn(col) {\r

      \    let x = lastCond(this.board.items, x => x.col == col &&
      EmptyFunc(x.label));\r

      \    return x;\r

      \  }\r

      \  interact(ev) {\r

      \    let tile = evToItemC(ev);\r

      \    let legal = this.checkLegal(tile);\r

      \    if (!legal) { console.log('illegal move!'); return; } \r

      \    let pl = this.plTurn;\r

      \    let bottomMost = this.findBottomEmptyTileInColumn(tile.col);\r

      \    addLabel(bottomMost, pl.sym, { fz: 60, fg: pl.color });\r

      \    this.controller.evaluate(tile);\r

      \  }\r

      \  getAvailableMoves(state) {\r

      \    let moves = [];\r

      \    for (let c = 0; c < G.cols; c++) {\r

      \      for (let r = G.rows - 1; r >= 0; r--) {\r

      \        let i = r * G.cols + c;\r

      \        if (EmptyFunc(state[i])) { moves.push(i); break; }\r

      \      }\r

      \    }\r

      \    shuffle(moves)\r

      \    return moves;\r

      \  }\r

      \  evalState(node, depth) {\r

      \    let x = checkWinnerC4(node);\r

      \    if (checkBoardFull(node) || x) {\r

      \      let res = { reached: true, val: (!x ? 0 : (10 - depth) * (x
      == MAXIMIZER.sym ? 1 : -1)) };\r

      \      return res;\r

      \    }\r

      \    return { reached: false };\r

      \  }\r

      }\r\n"
    sig: class GC4{}
    region: gKrieg (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GReversi:
    name: GReversi
    code: "class GReversi extends GTTT {\r

      \  createBoard() {\r

      \    this.board = new Board(this.rows, this.cols,
      this.controller.uiInteract.bind(this.controller), { margin: 6, w: 60, h:
      60, bg: 'white', fg: 'black', rounding: '50%' });\r

      \  }\r

      \  setStartPosition() {\r

      \    let positions = [\r

      \      [[0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 'O', 'X', 0, 0],\r

      \      [0, 0, 'X', 'O', 0, 0],\r

      \      [0, 0, 0, 0, 0, 0],\r

      \      [0, 0, 0, 0, 0, 0]],\r

      \    ];\r

      \    if (isdef(this.iPosition)) {\r

      \      let idx = this.iPosition + 1; idx = idx % positions.length;
      this.iPosition = idx;\r

      \    } else this.iPosition = 0;\r

      \    if (this.startPosition == 'empty' || this.rows != 6 ||
      this.cols != 6) {\r

      \      let pos = bCreateEmpty(this.rows, this.cols);\r

      \      let r1 = this.rows / 2 - 1, r2 = this.rows / 2, c1 =
      this.cols / 2 - 1, c2 = this.cols / 2;\r

      \      pos[r1 * this.cols + c1] = pos[r2 * this.cols + c2] = 'O';\r

      \      pos[r1 * this.cols + c2] = pos[r2 * this.cols + c1] = 'X';\r

      \      positions[0] = pos;\r

      \    }\r

      \    let state = nundef(this.startPosition) || this.startPosition ==
      'empty' ? positions[0]\r

      \      : this.startPosition == 'random' ? chooseRandom(positions)\r

      \        : positions[this.iPosition];\r

      \    this.board.setState(state, { X: this.ai.color, O:
      this.human.color });\r

      \  }\r

      \  startGame() {\r

      \    super.startGame();\r

      \    this.setStartPosition();\r

      \  }\r

      \  checkLegal(tile) {\r

      \    let state = this.getState();\r

      \    if (!EmptyFunc(tile.label)) return false;\r

      \    let nei = bNei(state, tile.index, this.rows, this.cols,
      true);\r

      \    for (const n of nei) {\r

      \      if (!n) continue;\r

      \      let t = state[n];\r

      \      if (!EmptyFunc(t)) return true;\r

      \    }\r

      \    console.log('ILLEGAL MOVE! tile', tile.index, 'does not have
      neighbor!')\r

      \    return false;\r

      \  }\r

      \  interact(ev) {\r

      \    let tile = evToItemC(ev);\r

      \    if (!this.checkLegal(tile)) return; \r

      \    let pl = this.plTurn;\r

      \    addLabel(tile, pl.sym, { fz: 60, fg: pl.color });\r

      \    let state = this.getState();\r

      \    let iCapt = bCapturedPieces(pl.sym, state, tile.index,
      this.rows, this.cols);\r

      \    for (const i of iCapt) {\r

      \      let item = this.board.get(i);\r

      \      modLabel(item, this.plTurn.sym, { fg: this.plTurn.color });\r

      \    }\r

      \    this.controller.evaluate(tile);\r

      \  }\r

      \  activate() {\r

      \    let pl = this.plTurn;\r

      \    let autoplay = false;\r

      \    if (autoplay || pl == this.ai) {\r

      \      if (this.ai == pl) uiActivated = false;\r

      \      setTimeout(() => AIMinimax(this,
      this.afterComputerMove.bind(this)), 200);\r

      \    }\r

      \  }\r

      \  checkFinal(state, pl1, pl2) {\r

      \    if (nundef(state)) state = this.getState();\r

      \    if (nundef(pl1)) pl1 = this.plTurn;\r

      \    if (nundef(pl2)) pl2 = this.plOpp;\r

      \    return GReversi.checkEnd(state, pl1, pl2);\r

      \  }\r

      \  static checkEnd(state, pl1, pl2) {\r

      \    let hasPl1 = false, hasPl2 = false, s1 = pl1.sym, s2 = pl2.sym,
      hasEmpty = false;\r

      \    for (const s of state) {\r

      \      if (!hasPl1 && s == s1) hasPl1 = true;\r

      \      else if (!hasPl2 && s == s2) hasPl2 = true;\r

      \      else if (!hasEmpty && EmptyFunc(s)) hasEmpty = true;\r

      \      if (hasPl1 && hasPl2 && hasEmpty) return false;\r

      \    }\r

      \    let winner = !hasPl2 ? pl1 : !hasPl1 ? pl2 : 0;\r

      \    let full = !hasEmpty;\r

      \    if (full) {\r

      \      let n1 = arrCount(state, x => x == s1);\r

      \      let n2 = arrCount(state, x => x == s2);\r

      \      if (!winner && n1 != n2) {\r

      \        if (n1 > n2) winner = pl1; else winner = pl2;\r

      \      }\r

      \    }\r

      \    return winner ? { reached: true, winner: winner } : full ? {
      reached: true, winner: null } : { reached: false };\r

      \  }\r

      \  heuristic(state, plMax, plMin) {\r

      \    let vmax = 0, vmin = 0;\r

      \    vmax = vmax + arrCount(state, x => x == plMax.sym);\r

      \    vmin = vmin + arrCount(state, x => x == plMin.sym);\r

      \    return vmax - vmin;\r

      \  }\r

      \  heureval(state) {\r

      \    let heurinfo = GReversi.heuristic(state, MAXIMIZER,
      MINIMIZER);\r

      \    let val = heurinfo.val; \r

      \    return val;\r

      \  }\r

      \  eval() {\r

      \    this.moveCounter += 1;\r

      \    let info = this.checkFinal();\r

      \    this.gameOver = info.reached;\r

      \    if (this.gameOver) {\r

      \      this.winner = info.winner;\r

      \      this.tie = !info.winner;\r

      \      if (this.winner) {\r

      \        this.loser = this.winner == this.ai ? this.human :
      this.ai;\r

      \        let state = this.getState();\r

      \        let nWinner = arrCount(state, x => x == this.winner.sym);\r

      \        let nLoser = arrCount(state, x => x == this.loser.sym);\r

      \        this.info = '(' + nWinner + ':' + nLoser + ')';\r

      \      }\r

      \    }\r

      \  }\r

      \  getAvailableMoves(state) {\r

      \    let moves = [];\r

      \    for (let i = 0; i < state.length; i++) {\r

      \      if (EmptyFunc(state[i])) {\r

      \        let nei = bNei(state, i, G.rows, G.cols, true);\r

      \        let iFull = firstCond(nei, x => !EmptyFunc(state[x]));\r

      \        if (iFull != null) moves.push(i);\r

      \      }\r

      \    }\r

      \    return moves;\r

      \  }\r

      \  evalState(state, depth) {\r

      \    let info = GReversi.checkEnd(state, MAXIMIZER, MINIMIZER);\r

      \    let val = info.reached && info.winner ? (100 - depth) *
      (info.winner == MAXIMIZER ? 1 : -1) : 0;\r

      \    return { reached: info.reached, val: val };\r

      \  }\r

      \  applyMove(state, move, player) {\r

      \    arrReplaceAtInPlace(state, move, player.sym);\r

      \    let iCapt = bCapturedPieces(player.sym, state, move, G.rows,
      G.cols);\r

      \    for (const i of iCapt) { state[i] = player.sym; }\r

      \  }\r

      }\r\n"
    sig: class GReversi{}
    region: gKrieg (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GChess:
    name: GChess
    code: "class GChess extends GMinimalGame {\r

      \  constructor(name, o) { super(name, o); }\r

      \  //#region other UIs\r

      \  simpleHtml(d) {\r

      \    let html = createElementFromHTML(`<div
      id=\"ChessBoard\"></div>`);\r

      \    mAppend(d, html);\r

      \  }\r

      \  complexHtml(d) {\r

      \    let html = createElementFromHTML(`\r

      \    <div id=\"FenInDiv\">      \r

      \      <input type=\"text\" id=\"fenIn\"/>    \r

      \      <button type=\"button\" id=\"SetFen\">Set
      Position</button>  \r

      \    </div>  \r

      \    <div id=\"ThinkingImageDiv\">  \r

      \    </div>\r

      \    <div id=\"ChessBoard\">\r

      \    </div>\r

      \    <div id=\"CurrentFenDiv\">\r

      \      <span id=\"currentFenSpan\"></span>    \r

      \    </div>  \r

      \    <span id=\"LoadingBook\">Loading book, please
      wait....</span><br/>\r

      \    <div id=\"EngineOutput\">Thinking Time: <br/>\r

      \      <select id=\"ThinkTimeChoice\">\r

      \        <option value=\"1\">1s</option>\r

      \        <option value=\"2\">2s</option>\r

      \        <option value=\"4\">4s</option>\r

      \        <option value=\"6\">6s</option>\r

      \        <option value=\"8\">8s</option>\r

      \        <option value=\"10\">10s</option>\r

      \      </select><br/><br/><br/>\r

      \      <span id=\"BestOut\">BestMove:</span><br/>\r

      \      <span id=\"DepthOut\">Depth:</span><br/>\r

      \      <span id=\"ScoreOut\">Score:</span><br/>\r

      \      <span id=\"NodesOut\">Nodes:</span><br/>\r

      \      <span id=\"OrderingOut\">Ordering:</span><br/>\r

      \      <span id=\"TimeOut\">Time:</span><br/><br/>\r

      \      <button type=\"button\" id=\"SearchButton\">Move
      Now</button><br/>\r

      \      <button type=\"button\" id=\"NewGameButton\">New
      Game</button><br/>\r

      \      <button type=\"button\" id=\"FlipButton\">Flip
      Board</button><br/><br/>\r

      \      <button type=\"button\" id=\"UndoButton\">Take
      Back</button><br/><br/><br/>\r

      \      <span id=\"GameStatus\"></span>\r

      \    </div>\r

      \    `);\r

      \    mAppend(d, html);\r

      \  }\r

      \  //#endregion\r

      \  testHtml(d) {\r

      \    let html = `<div id=\"ChessBoard\"></div>`;\r

      \    mAppend(d, createElementFromHTML(html));\r

      \    html = `\r

      \    <div id=\"EngineOutput\">Thinking Time:<br/>\r

      \      <select id=\"ThinkTimeChoice\" class='chess_select'>\r

      \        <option value=\"1\">1 second</option>\r

      \        <option value=\"3\">3s</option>\r

      \        <option value=\"6\">6s</option>\r

      \        <option value=\"10\">10s</option>\r

      \        <option value=\"60\">1 minute</option>\r

      \      </select><br/><br/>\r

      \      <div id=\"ThinkingImageDiv\"
      style='height:100px;text-align:center;'><image height=50
      src=\"../base/assets/images/chess/think3.png\"
      id=\"ThinkingPng\"/></div><br/>\r

      \      <div style='display:none;'>\r

      \        <span id=\"BestOut\">BestMove:</span><br/>\r

      \        <span id=\"DepthOut\">Depth:</span><br/>\r

      \        <span id=\"ScoreOut\">Score:</span><br/>\r

      \        <span id=\"NodesOut\">Nodes:</span><br/>\r

      \        <span id=\"OrderingOut\">Ordering:</span><br/>\r

      \        <span id=\"TimeOut\">Time:</span><br/><br/>\r

      \      </div>\r

      \      <button class='chess_button' type=\"button\"
      id=\"HintButton\">Hint</button><br/>\r

      \      <!--<button class='chess_button' type=\"button\"
      id=\"SearchButton\">Move Now</button><br/>-->\r

      \      <button class='chess_button' type=\"button\"
      id=\"UndoButton\">Undo</button><br/><br/>\r

      \      <button class='chess_button' type=\"button\"
      id=\"NewGameButton\">Start</button><br/>\r

      \      <button class='chess_button' type=\"button\"
      id=\"EndGameButton\">Endgame</button><br/><br/>\r

      \      <button class='chess_button' type=\"button\"
      id=\"NextGameButton\" onclick='onClickNextGame()'>Next
      Game</button><br/>\r

      \      <!--<button class='chess_button' type=\"button\"
      id=\"FlipButton\">Flip Board</button><br/><br/>-->\r

      \      <!--<span id=\"GameStatus\"></span>-->\r

      \    </div>\r

      \    `;\r

      \    mAppend(d, createElementFromHTML(html));\r

      \    html = `<div id=\"GameStatus\"></div>`;\r

      \    mAppend(d, createElementFromHTML(html));\r

      \    ActivateChessWidgets();\r

      \  }\r

      \  startGame() {\r

      \    clearElement(dTable);\r

      \    let d = mDiv(dTable, { w: '100%', h: '100%', bg: 'transparent'
      });\r

      \    this.testHtml(d);\r

      \    StartChessGame(GC.evaluate.bind(GC));\r

      \  }\r

      }\r\n"
    sig: class GChess{}
    region: gKrieg (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\bg4\js\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121022.8196
    size: 141053
  GSayPic:
    name: GSayPic
    code: "class GSayPic extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  clear() { Speech.stopRecording(); }\r

      \  prompt() {\r

      \    myShowPics();\r

      \    setGoal();\r

      \    let wr = (this.language == 'E' ? 'say: ' : \"sage: \");\r

      \    show_instruction(wr + `<b>${Goal.label.toUpperCase()}</b>`,
      dTitle); \r

      \    animate(dInstruction, 'pulse800' +
      bestContrastingColor(this.color, ['yellow', 'red']), 900);\r

      \    mLinebreak(dTable, 25);\r

      \    MicrophoneUi = mMicrophone(dTable, this.color);\r

      \    MicrophoneHide();\r

      \    TOMain =
      setTimeout(this.controller.activateUi.bind(this.controller), 200);\r

      \  }\r

      \  trialPrompt(nTrial) {\r

      \    sayRandomVoice(nTrial < 2 ? 'speak UP!!!' : 'Louder!!!',
      'LAUTER!!!');\r

      \    animate(dInstruction, 'pulse800' +
      bestContrastingColor(this.color, ['yellow', 'red']), 500);\r

      \    return 600;\r

      \  }\r

      \  activate() {\r

      \    if (Speech.isSpeakerRunning()) {\r

      \      TOMain = setTimeout(this.activate.bind(this), 200);\r

      \    } else {\r

      \      TOMain = setTimeout(() =>
      Speech.startRecording(this.language,
      this.controller.evaluate.bind(this.controller)), 100);\r

      \    }\r

      \  }\r

      \  eval(isfinal, speechResult, confidence, sessionId) {\r

      \    if (sessionId != SessionId) {\r

      \      alert('NOT THIS BROWSER!!!!!!'); return undefined;\r

      \    }\r

      \    let answer = Goal.answer = normalize(speechResult,
      this.language);\r

      \    let reqAnswer = Goal.reqAnswer = normalize(Goal.label,
      this.language);\r

      \    Selected = { reqAnswer: reqAnswer, answer: answer, feedbackUI:
      iDiv(Goal) };\r

      \    if (isEmpty(answer)) return false;\r

      \    else return isSimilar(answer, reqAnswer) ||
      isList(Goal.info.valid) && firstCond(Goal.info.valid, x => x.toUpperCase()
      == answer.toUpperCase());\r

      \  }\r

      }\r\n"
    sig: class GSayPic{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GProg0:
    name: GProg0
    code: "class GProg0 extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame(fen) {\r

      \  }\r

      \  prompt() {\r

      \    let c = this.card0 = cLandscape(dTable);\r

      \    this.card1 = iDiv(c).style;\r

      \    this.card2 = iDiv(c);\r

      \    this.card3 = iDiv(c);\r

      \    show_instruction('write code what rank and suit this card
      should have', dTitle);\r

      \    mLinebreak(dTable, 25);\r

      \    let dCode = mDiv(dTable, {});\r

      \    let ta = this.ta = mCreate('textarea');\r

      \    mAppend(dCode, ta);\r

      \    ta.setAttribute('rows', 10);\r

      \    ta.setAttribute('cols', 60);\r

      \    mStyle(ta, { family: 'courier', padding: 10 });\r

      \    ta.value = `mStyle(iDiv(G.card0),{bg:'pink'})`; \r

      \    ta.value = `this.card1.background = 'yellow'`; \r

      \    ta.value = `this.card2.style.background = 'yellow'`; \r

      \    ta.value = `this.set('background','red');`; \r

      \    ta.value = `this.set(this.card1,'background','red');`; \r

      \    ta.value = `set(card1,'background','red');`; \r

      \    ta.value = `card.background = 'red';`; \r

      \    ta.value = `card.color = 'red';`; \r

      \    ta.value = `card.color = 'red';`; \r

      \    mLinebreak(dTable, 25);\r

      \    mButton('run', this.runCode.bind(this), dTable, { bg:
      'skyblue', fg: 'black', fz: 32 }, 'mybutton');\r

      \    console.log('type of style', typeof this.card1);\r

      \  }\r

      \  set(o, prop, val) {\r

      \    o[prop] = val;\r

      \  }\r

      \  runCode() {\r

      \    let code = this.ta.value;\r

      \    let prelim = ''; \r

      \    prelim = 'let card = this.card1; '; \r

      \    prelim = `\r

      \    var card = new ProgObject(this.card0);\r

      \    console.log('card',card);\r

      \    `;\r

      \    prelim = `\r

      \    var obj = {};\r

      \    Object.defineProperty(obj, prop, {\r

      \        get: function() {return this.card1; },\r

      \        set: function(val) { this.card1.val = val; }\r

      \    });\r

      \    `\r

      \    code = prelim + code;\r

      \    console.log('code', code);\r

      \    eval(code);\r

      \  }\r

      }\r\n"
    sig: class GProg0{}
    region: helpers (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  GProg1:
    name: GProg1
    code: "class GProg1 extends Game {\r

      \  constructor(name, o) { super(name, o); }\r

      \  prompt() {\r

      \    let c = this.card = cLandscape(dTable);\r

      \    let d = this.visual = iDiv(c);\r

      \    this.style = d.style;\r

      \    let propertyGiver1 = (o, prop, setter) => {\r

      \      Object.defineProperty(o, prop, {\r

      \        get: function () { return this.val; },\r

      \        set: function (val) { this.val = val; setter(val); }\r

      \      });\r

      \    };\r

      \    let visualPropertySetter1 = (o) => {\r

      \      propertyGiver1(o, 'bg', x => { mStyle(G.visual, { 'bg': x });
      }); \r

      \    }\r

      \    visualPropertySetter1(this.card);\r

      \    d.innerHTML = 'HALLO';\r

      \    mStyle(d, { fg: 'blue' });\r

      \    mLinebreak(dTable, 25);\r

      \    let dCode = mDiv(dTable, {});\r

      \    let ta = this.ta = mCreate('textarea');\r

      \    mAppend(dCode, ta);\r

      \    ta.setAttribute('rows', 10);\r

      \    ta.setAttribute('cols', 60);\r

      \    mStyle(ta, { family: 'courier', padding: 10 });\r

      \    ta.value = `card.bg = 'red'; console.log(card.bg);`; \r

      \    mLinebreak(dTable, 25);\r

      \    mButton('run', this.runCode.bind(this), dTable, { bg:
      'skyblue', fg: 'black', fz: 32 }, 'mybutton');\r

      \    console.log('type of style', typeof this.card1);\r

      \  }\r

      \  runCode() {\r

      \    let code = this.ta.value;\r

      \    let prelim = ''; \r

      \    prelim = 'let [card,visual,style] =
      [this.card,this.visual,this.style]; '; \r

      \    code = prelim + code;\r

      \    console.log('code', code);\r

      \    eval(code);\r

      \  }\r

      }\r\n"
    sig: class GProg1{}
    region: helpers (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\_other\v0_chatas\classes.js
    datetime: 2022-02-08-06-05
    timestamp: 1644329121016.8213
    size: 28190
  SimpleTimer:
    name: SimpleTimer
    code: "class SimpleTimer {\r

      \  constructor(elem, msTick, onTick, msTotal, onElapsed) {\r

      \    this.elem = elem;\r

      \    this.msTotal = this.msLeft = msTotal;\r

      \    this.onTick = onTick;\r

      \    this.onElapsed = onElapsed;\r

      \    this.interval = msTick;\r

      \    this.running = false;\r

      \    this.paused = false;\r

      \    this.TO = null;\r

      \  }\r

      \  togglePause() { if (this.paused) this.continue(); else
      this.pause(); }\r

      \  clear() { let elapsed = this.stop(); clearElement(this.elem);
      return elapsed; }\r

      \  continue() {\r

      \    if (!this.running) this.start();\r

      \    else if (!this.paused) return;\r

      \    else { this.paused = false; this.TO =
      setInterval(this.tickHandler.bind(this), this.interval); }\r

      \  }\r

      \  tickHandler() {\r

      \    this.msLeft -= this.interval;\r

      \    this.msElapsed = this.msTotal - this.msLeft;\r

      \    this.output();\r

      \    if (isdef(this.onTick)) this.onTick();\r

      \    if (this.msLeft <= 0) {\r

      \      this.stop();\r

      \      this.msLeft = 0;\r

      \      if (isdef(this.onElapsed)) {\r

      \        this.onElapsed(0);\r

      \      }\r

      \    }\r

      \  }\r

      \  start() {\r

      \    if (this.running) this.stop();\r

      \    this.started = new Date().now;\r

      \    this.msLeft = this.msTotal;\r

      \    this.msElapsed = 0;\r

      \    this.running = true;\r

      \    this.output();\r

      \    this.TO = setInterval(this.tickHandler.bind(this),
      this.interval);\r

      \  }\r

      \  output() {\r

      \    this.elem.innerHTML = timeConversion(Math.max(this.msLeft, 0),
      'msh');\r

      \  }\r

      \  stop() {\r

      \    if (!this.running) return;\r

      \    clearInterval(this.TO);\r

      \    this.TO = null;\r

      \    this.running = false;\r

      \    return this.msLeft;\r

      \  }\r

      \  pause() {\r

      \    if (this.paused || !this.running) return;\r

      \    clearInterval(this.TO);\r

      \    this.paused = true;\r

      \  }\r

      }\r\n"
    sig: class SimpleTimer{}
    region: classes (_bau1.js)
    filename: _bau1.js
    type: cla
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  Calculus:
    name: Calculus
    code: "class Calculus {\r

      \  limRightOf(x, func) {\r

      \    if (this.canPlugin(x, func)) {\r

      \      return func(x);\r

      \    }\r

      \    if (Math.abs(x) == Infinity) {\r

      \      return this.toInfinty(x, func);\r

      \    }\r

      \    var right1 = func(x + 0.000000000000001);\r

      \    var right2 = func(x + 0.00000000000001);\r

      \    var right3 = func(x + 0.0000000000001);\r

      \    var rightDif1 = right2 - right1;\r

      \    var rightDif2 = right3 - right2;\r

      \    if (rightDif1 < rightDif2 && rightDif2 < 0) {\r

      \      return Infinity;\r

      \    }\r

      \    if (rightDif1 > rightDif2 && rightDif2 > 0) {\r

      \      return -1 * Infinity;\r

      \    }\r

      \    return this.round(right1);\r

      \  }\r

      \  limLeftOf(x, func) {\r

      \    if (this.canPlugin(x, func)) {\r

      \      return func(x);\r

      \    }\r

      \    if (Math.abs(x) == Infinity) {\r

      \      return this.toInfinty(x, func);\r

      \    }\r

      \    var left1 = func(x - 0.000000000000001);\r

      \    var left2 = func(x - 0.00000000000001);\r

      \    var left3 = func(x - 0.0000000000001);\r

      \    var leftDif1 = left2 - left3;\r

      \    var leftDif2 = left1 - left2;\r

      \    if (leftDif2 > leftDif1 && leftDif2 > 0) {\r

      \      return Infinity;\r

      \    }\r

      \    if (leftDif2 < leftDif1 && leftDif2 < 0) {\r

      \      return -1 * Infinity;\r

      \    }\r

      \    return this.round(left1);\r

      \  }\r

      \  limAt(x, func) {\r

      \    if (this.canPlugin(x, func)) {\r

      \      return func(x);\r

      \    }\r

      \    if (Math.abs(x) == Infinity) {\r

      \      return this.toInfinty(x, func);\r

      \    }\r

      \    var left1 = func(x - 0.000000000000001);\r

      \    var right1 = func(x + 0.000000000000001);\r

      \    if (Math.abs(left1 - right1) < 0.00001) {\r

      \      return this.round((left1 + right1) / 2);\r

      \    }\r

      \    return NaN;\r

      \  }\r

      \  canPlugin(x, func) {\r

      \    var at = func(x);\r

      \    return at === at && Math.abs(at) != Infinity;\r

      \  }\r

      \  toInfinty(x, func) {\r

      \    if (x > 0) {\r

      \      var pos1 = Number.MAX_VALUE * 0.99999;\r

      \      var pos2 = Number.MAX_VALUE;\r

      \      var dif = pos2 - pos1;\r

      \      if (dif > 0) {\r

      \        return Infinity;\r

      \      } else {\r

      \        return -1 * Infinity;\r

      \      }\r

      \    } else {\r

      \      var pos1 = Number.MIN_VALUE;\r

      \      var pos2 = Number.MIN_VALUE * 0.99999;\r

      \      var dif = pos2 - pos1;\r

      \      if (dif < 0) {\r

      \        return Infinity;\r

      \      } else {\r

      \        return -1 * Infinity;\r

      \      }\r

      \    }\r

      \  }\r

      \  deriv(x1, func) {\r

      \    var at = func(x1);\r

      \    if (Math.abs(at) == Infinity || at !== at) {\r

      \      return NaN;\r

      \    }\r

      \    var y1 = func(x1);\r

      \    var x0 = x1 - 0.000000000000001;\r

      \    var y0 = func(x0);\r

      \    var x2 = x1 + 0.000000000000001;\r

      \    var y2 = func(x2);\r

      \    var slope1 = this.slope(x0, y0, x1, y1);\r

      \    var slope2 = this.slope(x1, y1, x2, y2);\r

      \    if (Math.abs(slope1 - slope2) > 0.1) {\r

      \      return NaN;\r

      \    }\r

      \    return (slope1 + slope2) / 2;\r

      \  }\r

      \  nthDeriv(n, x1, func) {\r

      \    var vals = [];\r

      \    var start = -1 * Math.round(n / 2);\r

      \    for (var i = start; i <= n + start + 1; i++) {\r

      \      var newX = x1 + i * 0.000000000000001;\r

      \      var newY = func(newX);\r

      \      vals.push(newY);\r

      \    }\r

      \    for (var i = 0; i < n; i++) {\r

      \      var diffs = [];\r

      \      for (var j = 1; j < vals.length; j++) {\r

      \        diffs.push(vals[j] - vals[j - 1]);\r

      \      }\r

      \      vals = diffs;\r

      \    }\r

      \    var out = (vals[0] + vals[1]) / 0.000000000000002;\r

      \    return out;\r

      \  }\r

      \  integral(min, max, func, num) {\r

      \    var sum = 0;\r

      \    var dx = (max - min) / num;\r

      \    var currentX = min + dx / 2;\r

      \    for (var i = 0; i < num; i++) {\r

      \      var currentY = func(currentX);\r

      \      sum += dx * currentY;\r

      \      currentX += dx;\r

      \    }\r

      \    return sum;\r

      \  }\r

      \  averageValue(min, max, func, num) {\r

      \    return this.integral(min, max, func, num) / (max - min);\r

      \  }\r

      \  distance(x1, y1, x2, y2) {\r

      \    return Math.sqrt((x1 - x2) * (x1 - x2) - (y1 - y2) * (y1 -
      y2));\r

      \  }\r

      \  slope(x1, y1, x2, y2) {\r

      \    return (y1 - y2) / (x1 - x2);\r

      \  }\r

      \  round(num) {\r

      \    var factor = 100000000000000;\r

      \    return Math.round(num * factor) / factor;\r

      \  }\r

      }\r\n"
    sig: class Calculus{}
    region: classes (_bau1.js)
    filename: _bau1.js
    type: cla
    fname: _bau1.js
    path: C:\D\a04\game\_bau1.js
    datetime: 2023-01-28-10-00
    timestamp: 1674928835370.2402
    size: 383407
  CItemWalker:
    name: CItemWalker
    code: "class CItemWalker {\r

      \  constructor(name, options = {}) {\r

      \    options.label = name;\r

      \    addKeys({ x: 0, y: 0, color: rColor(60) }, options);\r

      \    if (isdef(options.sz)) options.w = options.h = options.sz;\r

      \    addKeys(options, this);\r

      \  }\r

      \  update() { move_random(this, this.canvas); }\r

      \  draw() { draw_label(this.canvas,this); }\r

      }\r\n"
    sig: class CItemWalker{}
    region: classes (factory.js)
    filename: factory.js
    type: cla
    fname: factory.js
    path: C:\D\a03\nodemaster\noc\factory.js
    datetime: 2022-09-22-06-13
    timestamp: 1663852397014.6252
    size: 372
  CCanvas:
    name: CCanvas
    code: "class CCanvas {\r

      \  constructor(dParent, styles, bstyles, play, pause, origin = 'cc')
      {\r

      \    let o = mCanvas(dParent, styles, bstyles, play, pause);\r

      \    [this.cv, this.cx, this.play, this.pause] = [o.cv, o.cx,
      o.play, o.pause];\r

      \    let [w, h] = [this.w, this.h] = [this.cv.width,
      this.cv.height];\r

      \    this.defaultsize = 20;\r

      \    this.origin = this.init_origin(origin);\r

      \    this.cx.translate(this.origin.x, this.origin.y);\r

      \    this.maxx = w - this.origin.x; this.minx = this.maxx - w;\r

      \    this.maxy = h - this.origin.y; this.miny = this.maxy - h;\r

      \    this.items = [];\r

      \  }\r

      \  add(o = {}) {\r

      \    addKeys({ canvas: this, x: 0, y: 0, color: rColor(50), w:
      this.defaultsize, h: this.defaultsize, a: 0, draw: null }, o);\r

      \    this.items.push(o);\r

      \    return o;\r

      \  }\r

      \  clear() { cClear(this.cv, this.cx); }\r

      \  clamp(item) { item.x = clamp(item.x, this.minx + item.w / 2,
      this.maxx - item.x / 2); item.y = clamp(item.y, this.miny + item.h / 2,
      this.maxy - item.h / 2) }\r

      \  cycle(item) { item.x = cycle(item.x, this.minx, this.maxx);
      item.y = cycle(item.y, this.miny, this.maxy) }\r

      \  draw() {\r

      \    this.clear();\r

      \    for (const item of this.items) {\r

      \      this.draw_item(item);\r

      \    }\r

      \  }\r

      \  draw_item(item) {\r

      \    let cx = this.cx;\r

      \    cx.save();\r

      \    cx.translate(item.x, item.y);\r

      \    cx.rotate(toRadian(item.a));\r

      \    if (isdef(item.draw)) { item.draw(this, item); }\r

      \    else cEllipse(0, 0, item.w, item.h, { bg: item.color }, 0, cx);
      \r

      \    cx.restore();\r

      \  }\r

      \  init_origin(origin) {\r

      \    if (nundef(origin)) origin = 'cc';\r

      \    let pt = origin;\r

      \    if (isString(origin)) {\r

      \      let v = origin[0], h = origin[1];\r

      \      let y = v == 't' ? 0 : v == 'c' ? this.cv.height / 2 :
      this.cv.height;\r

      \      let x = h == 'l' ? 0 : h == 'c' ? this.cv.width / 2 :
      this.cv.width;\r

      \      pt = { x: x, y: y };\r

      \    }\r

      \    return pt;\r

      \  }\r

      \  update() {\r

      \    let n = 0;\r

      \    for (const item of this.items) { if (isdef(item.update)) { n +=
      item.update(this, item) ? 1 : 0; } }\r

      \    return n > 0;\r

      \  }\r

      }\r\n"
    sig: class CCanvas{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\D\a03\nodemaster\noc\classes.js
    datetime: 2022-09-24-06-32
    timestamp: 1664026372793.0212
    size: 3981
  CCanvasNoClear:
    name: CCanvasNoClear
    code: "class CCanvasNoClear extends CCanvas {\r

      \  clear() { }\r

      }\r\n"
    sig: class CCanvasNoClear{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\D\a03\nodemaster\noc\classes.js
    datetime: 2022-09-24-06-32
    timestamp: 1664026372793.0212
    size: 3981
  CCanvasPlot:
    name: CCanvasPlot
    code: "class CCanvasPlot extends CCanvas {\r

      \  clear() {\r

      \    cClear(this.cv, this.cx);\r

      \    this.draw_axes();\r

      \  }\r

      \  draw_axes() {\r

      \    let ctx = this.cx;\r

      \    ctx.beginPath();\r

      \    ctx.strokeStyle = \"rgb(128,128,128)\";\r

      \    ctx.moveTo(this.minx, 0); ctx.lineTo(this.maxx, 0);  \r

      \    ctx.moveTo(0, this.miny); ctx.lineTo(0, this.maxy);  \r

      \    ctx.stroke();\r

      \  }\r

      \  draw() {\r

      \    this.clear();\r

      \    for (const item of this.items) {\r

      \      if (isdef(item.func)) this.plot(item.func, item.color,
      item.thickness);\r

      \      else {\r

      \        super.draw_item(item);\r

      \      }\r

      \    }\r

      \  }\r

      \  pp(x, y, label = 'hallo', styles = {}) {\r

      \    addKeys({ fg:'silver', bg: 'silver', w: 3, h: 3 }, styles)\r

      \    cEllipse(x, y, styles.w, styles.h, { bg: styles.bg }, 0,
      this.cx);\r

      \    addKeys({x:x, y:y, offy: 'below 4', offx: 'center', family:
      'arial narrow', fz: 20},styles);\r

      \    draw_text(this, label, styles);\r

      \  }\r

      \  plot(func, color, thick, filled = false) {\r

      \    let cx = this.cx;\r

      \    var xx, yy, dx = 4, x0 = 0, y0 = 0, scale = this.scale = 40;\r

      \    var imax = Math.round(this.maxx / dx);\r

      \    var imin = Math.round(this.minx / dx);\r

      \    cx.beginPath();\r

      \    cx.lineWidth = thick;\r

      \    cx.strokeStyle = cx.fillStyle = color;\r

      \    for (var i = imin; i <= imax; i++) {\r

      \      xx = dx * i; yy = scale * func(xx / scale);\r

      \      if (i == imin) cx.moveTo(x0 + xx, y0 - yy);\r

      \      else cx.lineTo(x0 + xx, y0 - yy);\r

      \    }\r

      \    cx.stroke(); if (filled) cx.fill();\r

      \  }\r

      }\r\n"
    sig: class CCanvasPlot{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\D\a03\nodemaster\noc\classes.js
    datetime: 2022-09-24-06-32
    timestamp: 1664026372793.0212
    size: 3981
  WeightedSampler:
    name: WeightedSampler
    code: "class WeightedSampler {\r

      \  constructor(elements, weights) {\r

      \    this.total = 0;\r

      \    this.elements = Array.from(elements);\r

      \    this.cweights = weights.map(weight => this.total += weight);\r

      \  }\r

      \  get() {\r

      \    let random = Math.random() * this.total;\r

      \    return this.elements.find((element, index) => random <
      this.cweights[index]);\r

      \  }\r

      }\r\n"
    sig: class WeightedSampler{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\D\a03\nodemaster\noc\classes.js
    datetime: 2022-09-24-06-32
    timestamp: 1664026372793.0212
    size: 3981
  Agent:
    name: Agent
    code: "class Agent {\r

      \  constructor(home, speed, zackig, aussehen, startpos) {\r

      \    this.home = home; \r

      \    this.isMap = is_map(home);\r

      \    console.log('is_map?',this.isMap);\r

      \    this.pos =
      isdef(startpos)?startpos:this.isMap?home.options.center:null;\r

      \    this.speed = speed;\r

      \    this.rGen = zackig ? rFloat : rGaussian;\r

      \    this.ui = create_agent(home, aussehen);\r

      \    if (isdef(startpos)) this.moveto(startpos);\r

      \  }\r

      \  moveto(coords){\r

      \    if (this.isMap) map_moveto(this.ui,coords); else
      mPos(this.ui,coords[0],coords[1]);\r

      \    this.pos = coords;\r

      \  }\r

      \  movefor(secs){\r

      \    let f = x => x + this.rGen(-this.speed, this.speed); \r

      \    run_for_seconds(secs, () => { map_moveby(this.ui, f, f); })\r

      \  }\r

      \  move(){\r

      \    let f = x => x + rGen(-speed, speed); \r

      \    this.interval = setInterval(()=>map_moveby(this.ui, f,
      f),50);\r

      \  }\r

      \  stop_moving(){clearInterval(this.interval);}\r

      }\r\n"
    sig: class Agent{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\D\a03\nodemaster\all\caba\classes.js
    datetime: 2022-10-21-07-04
    timestamp: 1666361092575.708
    size: 951
  GAnagramBROKEN:
    name: GAnagramBROKEN
    code: "class GAnagramBROKEN extends Game {\r

      \  constructor(name, o) {\r

      \    super(name, o);\r

      \    if (this.language == 'C') {\r

      \      this.realLanguage = this.language;\r

      \      this.language = chooseRandom('E', 'S', 'F', 'D');\r

      \    }\r

      \  }\r

      \  clear() { super.clear(); if (isdef(this.language)) this.language
      = this.language; }\r

      \  start_Level() {\r

      \    this.keys = setKeysG(this, filterWordByLengthG, 10);\r

      \    if (this.keys.length < 10) { this.keys = setKeysG(this,
      filterWordByLengthG, 10, 'all'); }\r

      \  }\r

      \  prompt() {\r

      \    myShowPics(null, {}, {});\r

      \    if (this.hidden) {\r

      \      let d = iDiv(Pictures[0]);\r

      \      animate(d, 'aniAppearMinute', 100000);\r

      \    }\r

      \    setGoal();\r

      \    let w = this.showWord ? Goal.label : '';\r

      \    let wr = `drag letters to form ${w}`;\r

      \    let sp = `forme ${w}`;\r

      \    show_instruction(wr, dTitle, sp);\r

      \    mLinebreak(dTable, 22);\r

      \    let word = Goal.label.toUpperCase();\r

      \    let wlen = word.length;\r

      \    let wTable = getRect(mBy('table')).w;\r

      \    let wmax = wTable / wlen;\r

      \    let gap = 4;\r

      \    let fzMax = wTable / wlen - 3 * gap;\r

      \    let fz = Math.min(70, fzMax);\r

      \    let dpEmpty = createLetterInputsX(word, dTable, { pabottom: 5,
      bg: 'grey', display: 'inline-block', fz: fz, w: fz, h: fz * 1.1, margin:
      gap }); \r

      \    let inputs = blankInputs(dpEmpty, range(0, wlen - 1), false);\r

      \    for (let i = 0; i < inputs.length; i++) {\r

      \      let l = iDiv(inputs[i]);\r

      \      ipadd(l);\r

      \      mClass(l, 'dropzone');\r

      \      l.id = 'input' + i;\r

      \    }\r

      \    this.inputs = inputs;\r

      \    let x = mLinebreak(dTable, 35);\r

      \    fz = Math.min(60, fzMax);\r

      \    let dp = createLetterInputsX(word, dTable, { bg: 'silver',
      display: 'inline-block', fz: fz, w: fz, h: fz * 1.1, margin: 4 }); \r

      \    scrambleInputs(dp);\r

      \    let letters = Array.from(dp.children);\r

      \    for (let i = 0; i < letters.length; i++) {\r

      \      let l = letters[i];\r

      \      l.setAttribute('draggable', true);\r

      \      ipadd(l);\r

      \      l.id = 'letter' + i;\r

      \    }\r

      \    this.letters = letters;\r

      \    mLinebreak(dTable, 35);\r

      \    this.bDone = mButton('Done!',
      this.controller.evaluate.bind(this.controller), dTable, { fz: 28, matop:
      10, rounding: 10, padding: 16, border: 8 }, ['buttonClass']);\r

      \    if (this.hidden) showFleetingMessage('category: ' +
      Pictures[0].info.subgroup, 5000);\r

      \    else if (!this.showWord) { showLabelPercentHintAfter(50, 6000);
      }\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  trialPrompt() {\r

      \    sayTryAgain();\r

      \    setTimeout(() => {\r

      \      this.inputs.map(x => iDiv(x).innerHTML = '_')\r

      \    }, 1500);\r

      \    return 10;\r

      \  }\r

      \  eval() {\r

      \    let s = this.inputs.map(x => iDiv(x).innerHTML);\r

      \    let w = s = s.join('');\r

      \    let word = Goal.label.toUpperCase();\r

      \    Selected = { answer: w, reqAnswer: word, feedbackUI: iDiv(Goal)
      };\r

      \    return w == word;\r

      \  }\r

      \  onTimeup() { this.controller.evaluate(); }\r

      }\r\n"
    sig: class GAnagramBROKEN{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GameTimed1:
    name: GameTimed1
    code: "class GameTimed1 extends Game{\r

      \  constructor(name, o) { super(name, o); }\r

      \  clear() { clearInterval(this.TOI); super.clear(); }\r

      \  makeTimer() {\r

      \    if (nundef(this.msTotal)) this.msTotal = 5000;\r

      \    if (nundef(this.msInterval)) this.msInterval = 100;\r

      \    let w = this.wTimerOuter = 200;\r

      \    this.dTimeOuter = mDiv(dTable, { w: w, h: 25, border: 'white',
      rounding: 10, position: 'relative' });\r

      \    [this.wTimer, this.r, this.g] = [0, 0, 255];\r

      \    this.dTimeInner = mDiv(this.dTimeOuter, { h: 25, w:
      this.wTimer, rounding: 10, bg: `rgb(${this.r},${this.g},0)`, position:
      'absolute', left: 0, top: 0 });\r

      \    this.dTimeDisplay = mDiv(this.dTimeOuter, { patop: 2, align:
      'center', h: 25, w: w, position: 'absolute', left: 0, top: 0 });\r

      \    mLinebreak(dTable);\r

      \    this.dPause = mDiv(dTable, { cursor: 'pointer', fz: 12,
      hpadding: 30, vpadding: 10 }, null, 'click to pause');\r

      \    this.dPause.onclick = () => this.pause();\r

      \  }\r

      \  pause() {\r

      \    clearInterval(this.TOI);\r

      \    this.dPause.innerHTML = 'click to resume...';\r

      \    this.dPause.onclick = () => this.resume();\r

      \  }\r

      \  resume() {\r

      \    this.dPause.innerHTML = 'click to pause...';\r

      \    this.dPause.onclick = () => this.pause();\r

      \    this.TOI = setInterval(this.onTick.bind(this),
      this.msInterval);\r

      \  }\r

      \  activate() {\r

      \    this.msLeft = valf(this.msTotal, 10000);\r

      \    this.dTimeDisplay.innerHTML = timeConversion(this.msLeft,
      'sh');\r

      \    this.TOI = setInterval(this.onTick.bind(this),
      this.msInterval);\r

      \  }\r

      \  onTick() {\r

      \    this.msLeft -= this.msInterval;\r

      \    this.wTimer += this.wTimerOuter * this.msInterval /
      this.msTotal;\r

      \    let inc_color = 255 * this.msInterval / this.msTotal; \r

      \    this.r += inc_color; this.g -= inc_color;\r

      \    mStyle(this.dTimeInner, { w: this.wTimer, bg:
      `rgb(${this.r},${this.g},0)` });\r

      \    this.dTimeDisplay.innerHTML = timeConversion(this.msLeft,
      'sh');\r

      \    if (this.msLeft < 100) {\r

      \      clearInterval(this.TOI);\r

      \      this.dPause.style.opacity = 0;\r

      \      this.onTimeup();\r

      \    }\r

      \  }\r

      }\r\n"
    sig: class GameTimed1{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  GSpotit1:
    name: GSpotit1
    code: "class GSpotit1 extends GameTimed1 {\r

      \  constructor(name, o) { super(name, o); }\r

      \  startGame() { this.correctionFunc = showCorrectUis; }\r

      \  start_Level() {\r

      \    this.colarr = _calc_hex_col_array(this.rows, this.cols);\r

      \    let perCard = arrSum(this.colarr);\r

      \    this.nShared = (this.numCards * (this.numCards - 1)) / 2;\r

      \    this.nUnique = perCard - this.numCards + 1;\r

      \    this.numKeysNeeded = this.nShared + this.numCards *
      this.nUnique;\r

      \    this.keys = setKeysG(this, (_, x) => !x.includes(' '),
      this.numKeysNeeded + 1);\r

      \  }\r

      \  deal() {\r

      \    let keys = choose(this.keys, this.numKeysNeeded);\r

      \    let dupls = keys.slice(0, this.nShared); \r

      \    let uniqs = keys.slice(this.nShared);\r

      \    let infos = [];\r

      \    for (let i = 0; i < this.numCards; i++) {\r

      \      let keylist = uniqs.slice(i * this.nUnique, (i + 1) *
      this.nUnique);\r

      \      let info = { id: getUID(), shares: {}, keys: keylist, rows:
      this.rows, cols: this.cols, colarr: this.colarr };\r

      \      infos.push(info);\r

      \    }\r

      \    let iShared = 0;\r

      \    for (let i = 0; i < this.numCards; i++) {\r

      \      for (let j = i + 1; j < this.numCards; j++) {\r

      \        let c1 = infos[i];\r

      \        let c2 = infos[j];\r

      \        let dupl = dupls[iShared++];\r

      \        c1.keys.push(dupl);\r

      \        c1.shares[c2.id] = dupl;\r

      \        c2.shares[c1.id] = dupl;\r

      \        c2.keys.push(dupl);\r

      \      }\r

      \    }\r

      \    for (const info of infos) { shuffle(info.keys); }\r

      \    return infos;\r

      \  }\r

      \  interact(ev) {\r

      \    ev.cancelBubble = true;\r

      \    if (!canAct()) { console.log('no act'); return; }\r

      \    let keyClicked = evToProp(ev, 'key');\r

      \    let id = evToId(ev);\r

      \    if (isdef(keyClicked) && isdef(Items[id])) {\r

      \      this.pause();\r

      \      let item = Items[id];\r

      \      if (Object.values(item.shares).includes(keyClicked)) {\r

      \        let otherCard = spotitFindCardSharingSymbol(item,
      keyClicked);\r

      \        let cardSymbol = ev.target;\r

      \        let otherSymbol = spotitFindSymbol(otherCard,
      keyClicked);\r

      \        Selected = { isCorrect: true, feedbackUI: [cardSymbol,
      otherSymbol] };\r

      \      } else {\r

      \        let cardSymbol = ev.target;\r

      \        Selected = { isCorrect: false, feedbackUI: [cardSymbol],
      correctUis: this.getSharedSymbols(), correctionDelay: this.items.length *
      1500 };\r

      \      }\r

      \      this.controller.evaluate.bind(this.controller)();\r

      \    }\r

      \  }\r

      \  getSharedSymbols() {\r

      \    let result = [];\r

      \    for (const item of this.items) {\r

      \      for (const id in item.shares) {\r

      \        let k = item.shares[id];\r

      \        let ui = iGetl(item, k);\r

      \        result.push(ui);\r

      \      }\r

      \    }\r

      \    return result;\r

      \  }\r

      \  eval() { return Selected.isCorrect; }\r

      \  prompt() {\r

      \    this.trials = 1;\r

      \    show_instruction('find common symbol', dTitle);\r

      \    this.makeTimer();\r

      \    mLinebreak(dTable, 25);\r

      \    let infos = this.deal(); \r

      \    let items = this.items = [];\r

      \    for (const info of infos) {\r

      \      let item = spotitCard(info, dTable, { margin: 10 },
      this.interact.bind(this));\r

      \      items.push(item);\r

      \    }\r

      \    this.controller.activateUi.bind(this.controller)();\r

      \  }\r

      \  onTimeup() {\r

      \    Selected = { isCorrect: false, correctUis:
      this.getSharedSymbols(), correctionDelay: this.items.length * 2000 };\r

      \    this.controller.evaluate.bind(this.controller)();\r

      \  }\r

      }\r\n"
    sig: class GSpotit1{}
    region: classes (classes.js)
    filename: classes.js
    type: cla
    fname: classes.js
    path: C:\xampp\htdocs\aroot\belinda\js\classes.js
    datetime: 2022-10-25-13-21
    timestamp: 1666729284031.0378
    size: 104036
  Peep:
    name: Peep
    code: "class Peep {\r

      \  constructor({\r

      \    image,\r

      \    rect,\r

      \  }) {\r

      \    this.image = image\r

      \    this.setRect(rect)\r

      \    this.x = 0\r

      \    this.y = 0\r

      \    this.anchorY = 0\r

      \    this.scaleX = 1\r

      \    this.walk = null\r

      \  }\r

      \  setRect(rect) {\r

      \    this.rect = rect\r

      \    this.width = rect[2]\r

      \    this.height = rect[3]\r

      \    this.drawArgs = [\r

      \      this.image,\r

      \      ...rect,\r

      \      0, 0, this.width, this.height\r

      \    ]\r

      \  }\r

      \  render(ctx) {\r

      \    ctx.save()\r

      \    ctx.translate(this.x, this.y)\r

      \    ctx.scale(this.scaleX, 1)\r

      \    ctx.drawImage(...this.drawArgs)\r

      \    ctx.restore()\r

      \  }\r

      }\r\n"
    sig: class Peep{}
    region: const (crowd.js)
    filename: crowd.js
    type: cla
    fname: crowd.js
    path: C:\D\a03\nodemaster\all\canvas\lib\crowd.js
    datetime: 2023-01-28-09-17
    timestamp: 1674926276905.2092
    size: 4414
